Search.setIndex({"alltitles": {"1) Adding Support for Your Data": [[146, "adding-support-for-your-data"]], "2) Implementing a Detector Class": [[146, "implementing-a-detector-class"]], "API": [[1, "module-graphnet"]], "Acknowledgements": [[0, "acknowledgements"]], "Adding Your Own Model": [[148, "adding-your-own-model"]], "Adding custom Labels": [[142, "adding-custom-labels"]], "Adding custom truth labels": [[143, "adding-custom-truth-labels"]], "Advanced Functionality in SQLiteDataset": [[143, "advanced-functionality-in-sqlitedataset"]], "Appendix": [[143, "appendix"]], "Choosing a subset of events using selection": [[142, "choosing-a-subset-of-events-using-selection"]], "Code quality": [[140, "code-quality"]], "Combining Multiple Datasets": [[142, "combining-multiple-datasets"], [143, "combining-multiple-datasets"]], "Contents": [[143, "contents"]], "Contributing To GraphNeTgraphnet": [[140, "contributing-to-graphnetgraphnet-header"]], "Conventions": [[140, "conventions"]], "Creating reproducible Datasets using DatasetConfig": [[143, "creating-reproducible-datasets-using-datasetconfig"]], "Creating reproducible Models using ModelConfig": [[143, "creating-reproducible-models-using-modelconfig"]], "Data Conversion in GraphNeTgraphnet": [[141, "data-conversion-in-graphnetgraphnet-header"]], "DataConverter": [[141, "dataconverter"]], "Dataset": [[142, "dataset"]], "Datasets In GraphNeTgraphnet": [[142, "datasets-in-graphnetgraphnet-header"]], "Example DataConfig": [[143, "example-dataconfig"]], "Example ModelConfig": [[143, "example-modelconfig"]], "Example of geometry table before applying multi-index": [[146, "id1"]], "Example: Energy Reconstruction using ModelConfig": [[148, "example-energy-reconstruction-using-modelconfig"]], "Experiment Tracking": [[148, "experiment-tracking"]], "Extractors": [[141, "extractors"]], "GitHub issues": [[140, "github-issues"]], "GraphDefinition, backbone & Task": [[148, "graphdefinition-backbone-task"]], "GraphNeT tutorial": [[143, "graphnet-tutorial"]], "GraphNeTgraphnet": [[144, "graphnetgraphnet-header"], [147, "graphnetgraphnet-header"]], "Implementing a new Dataset": [[142, "implementing-a-new-dataset"]], "Installation": [[145, "installation"]], "Installation in CVMFS (IceCube)": [[145, "installation-in-cvmfs-icecube"]], "Instantiating a StandardModel": [[148, "instantiating-a-standardmodel"]], "Integrating New Experiments into GraphNeTgraphnet": [[146, "integrating-new-experiments-into-graphnetgraphnet-header"]], "Introduction": [[143, "introduction"]], "Model.save": [[148, "model-save"]], "ModelConfig and state_dict": [[148, "modelconfig-and-state-dict"]], "Models In GraphNeTgraphnet": [[148, "models-in-graphnetgraphnet-header"]], "Overview of GraphNeT": [[143, "overview-of-graphnet"]], "Pull requests": [[140, "pull-requests"]], "Quick Start": [[145, "quick-start"]], "RNN_tito": [[90, "module-graphnet.models.gnn.RNN_tito"]], "Readers": [[141, "readers"]], "SQLiteDataset & ParquetDataset": [[142, "sqlitedataset-parquetdataset"]], "SQLiteDataset vs. ParquetDataset": [[142, "sqlitedataset-vs-parquetdataset"]], "Saving, loading, and checkpointing Models": [[148, "saving-loading-and-checkpointing-models"]], "The Model class": [[143, "the-model-class"], [148, "the-model-class"]], "The StandardModel class": [[143, "the-standardmodel-class"], [148, "the-standardmodel-class"]], "Training Syntax for StandardModel": [[148, "training-syntax-for-standardmodel"]], "Usage": [[0, "usage"]], "Using checkpoints": [[148, "using-checkpoints"]], "Writers": [[141, "writers"]], "Writing your own Extractor and GraphNeTFileReader": [[146, "writing-your-own-extractor-and-graphnetfilereader"]], "argparse": [[125, "module-graphnet.utilities.argparse"]], "base_config": [[127, "module-graphnet.utilities.config.base_config"]], "callbacks": [[119, "module-graphnet.training.callbacks"]], "classification": [[112, "module-graphnet.models.task.classification"]], "cleaning_module": [[73, "module-graphnet.deployment.icecube.cleaning_module"]], "coarsening": [[79, "module-graphnet.models.coarsening"]], "collections": [[33, "module-graphnet.data.extractors.icecube.utilities.collections"]], "combine_extractors": [[17, "module-graphnet.data.extractors.combine_extractors"]], "components": [[80, "module-graphnet.models.components"]], "config": [[126, "module-graphnet.utilities.config"]], "configurable": [[128, "module-graphnet.utilities.config.configurable"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "convnet": [[91, "module-graphnet.models.gnn.convnet"]], "curated_datamodule": [[5, "module-graphnet.data.curated_datamodule"]], "data": [[3, "module-graphnet.data"]], "dataclasses": [[6, "module-graphnet.data.dataclasses"]], "dataconverter": [[7, "module-graphnet.data.dataconverter"]], "dataconverters": [[46, "module-graphnet.data.pre_configured.dataconverters"]], "dataloader": [[8, "module-graphnet.data.dataloader"]], "datamodule": [[9, "module-graphnet.data.datamodule"]], "dataset": [[10, "module-graphnet.data.dataset"], [11, "module-graphnet.data.dataset.dataset"]], "dataset_config": [[129, "module-graphnet.utilities.config.dataset_config"]], "datasets": [[64, "module-graphnet.datasets"]], "decorators": [[133, "module-graphnet.utilities.decorators"]], "deployer": [[68, "module-graphnet.deployment.deployer"]], "deployment": [[67, "module-graphnet.deployment"]], "deployment_module": [[69, "module-graphnet.deployment.deployment_module"]], "deprecated_methods": [[44, "module-graphnet.data.parquet.deprecated_methods"], [54, "module-graphnet.data.sqlite.deprecated_methods"], [71, "deprecated-methods"]], "deprecation_tools": [[134, "module-graphnet.utilities.deprecation_tools"]], "detector": [[84, "module-graphnet.models.detector"], [85, "module-graphnet.models.detector.detector"]], "dynedge": [[92, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[93, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedge_kaggle_tito": [[94, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "edges": [[98, "module-graphnet.models.graphs.edges"], [99, "module-graphnet.models.graphs.edges.edges"]], "embedding": [[81, "module-graphnet.models.components.embedding"]], "exceptions": [[76, "module-graphnet.exceptions"], [77, "module-graphnet.exceptions.exceptions"]], "extractor": [[18, "module-graphnet.data.extractors.extractor"]], "extractors": [[16, "module-graphnet.data.extractors"]], "filesys": [[135, "module-graphnet.utilities.filesys"]], "frames": [[34, "module-graphnet.data.extractors.icecube.utilities.frames"]], "gnn": [[89, "module-graphnet.models.gnn"], [95, "module-graphnet.models.gnn.gnn"]], "graph_definition": [[101, "module-graphnet.models.graphs.graph_definition"]], "graphnet_file_reader": [[48, "module-graphnet.data.readers.graphnet_file_reader"]], "graphnet_writer": [[61, "module-graphnet.data.writers.graphnet_writer"]], "graphs": [[97, "module-graphnet.models.graphs"], [102, "module-graphnet.models.graphs.graphs"]], "h5_extractor": [[40, "module-graphnet.data.extractors.liquido.h5_extractor"]], "i3_filters": [[35, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "i3deployer": [[74, "i3deployer"]], "i3extractor": [[20, "module-graphnet.data.extractors.icecube.i3extractor"]], "i3featureextractor": [[21, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor": [[22, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3hybridrecoextractor": [[23, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3modules": [[70, "i3modules"]], "i3ntmuonlabelsextractor": [[24, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor": [[25, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor": [[26, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor": [[27, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3reader": [[49, "module-graphnet.data.readers.i3reader"]], "i3retroextractor": [[28, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeextractor": [[29, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor": [[30, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor": [[31, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "icecube": [[19, "module-graphnet.data.extractors.icecube"], [72, "icecube"], [86, "module-graphnet.models.detector.icecube"]], "icemix": [[96, "module-graphnet.models.gnn.icemix"]], "imports": [[136, "module-graphnet.utilities.imports"]], "inference_module": [[75, "module-graphnet.deployment.icecube.inference_module"]], "internal": [[37, "module-graphnet.data.extractors.internal"]], "internal_parquet_reader": [[50, "module-graphnet.data.readers.internal_parquet_reader"]], "iseecube": [[116, "module-graphnet.models.transformer.iseecube"]], "labels": [[120, "module-graphnet.training.labels"]], "layers": [[82, "module-graphnet.models.components.layers"]], "liquido": [[39, "module-graphnet.data.extractors.liquido"], [87, "module-graphnet.models.detector.liquido"]], "liquido_reader": [[51, "module-graphnet.data.readers.liquido_reader"]], "logging": [[137, "module-graphnet.utilities.logging"]], "loss_functions": [[121, "module-graphnet.training.loss_functions"]], "maths": [[138, "module-graphnet.utilities.maths"]], "minkowski": [[100, "module-graphnet.models.graphs.edges.minkowski"]], "model": [[106, "module-graphnet.models.model"]], "model_config": [[130, "module-graphnet.utilities.config.model_config"]], "models": [[78, "module-graphnet.models"]], "node_rnn": [[108, "module-graphnet.models.rnn.node_rnn"]], "nodes": [[103, "module-graphnet.models.graphs.nodes"], [104, "module-graphnet.models.graphs.nodes.nodes"]], "parquet": [[12, "module-graphnet.data.dataset.parquet"], [43, "module-graphnet.data.parquet"]], "parquet_dataset": [[13, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "parquet_extractor": [[38, "module-graphnet.data.extractors.internal.parquet_extractor"]], "parquet_to_sqlite": [[56, "module-graphnet.data.utilities.parquet_to_sqlite"]], "parquet_writer": [[62, "module-graphnet.data.writers.parquet_writer"]], "parsing": [[131, "module-graphnet.utilities.config.parsing"]], "pool": [[83, "module-graphnet.models.components.pool"]], "pre_configured": [[45, "module-graphnet.data.pre_configured"]], "prometheus": [[41, "module-graphnet.data.extractors.prometheus"], [88, "module-graphnet.models.detector.prometheus"]], "prometheus_datasets": [[65, "module-graphnet.datasets.prometheus_datasets"]], "prometheus_extractor": [[42, "module-graphnet.data.extractors.prometheus.prometheus_extractor"]], "prometheus_reader": [[52, "module-graphnet.data.readers.prometheus_reader"]], "random": [[57, "module-graphnet.data.utilities.random"]], "readers": [[47, "module-graphnet.data.readers"]], "reconstruction": [[113, "module-graphnet.models.task.reconstruction"]], "rnn": [[107, "module-graphnet.models.rnn"]], "sqlite": [[14, "module-graphnet.data.dataset.sqlite"], [53, "module-graphnet.data.sqlite"]], "sqlite_dataset": [[15, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "sqlite_utilities": [[58, "module-graphnet.data.utilities.sqlite_utilities"]], "sqlite_writer": [[63, "module-graphnet.data.writers.sqlite_writer"]], "src": [[139, "src"]], "standard_averaged_model": [[109, "module-graphnet.models.standard_averaged_model"]], "standard_model": [[110, "module-graphnet.models.standard_model"]], "string_selection_resolver": [[59, "module-graphnet.data.utilities.string_selection_resolver"]], "task": [[111, "module-graphnet.models.task"], [114, "module-graphnet.models.task.task"]], "test_dataset": [[66, "module-graphnet.datasets.test_dataset"]], "training": [[118, "module-graphnet.training"]], "training_config": [[132, "module-graphnet.utilities.config.training_config"]], "transformer": [[115, "module-graphnet.models.transformer"]], "types": [[36, "module-graphnet.data.extractors.icecube.utilities.types"]], "utilities": [[32, "module-graphnet.data.extractors.icecube.utilities"], [55, "module-graphnet.data.utilities"], [124, "module-graphnet.utilities"]], "utils": [[105, "module-graphnet.models.graphs.utils"], [117, "module-graphnet.models.utils"], [122, "module-graphnet.training.utils"]], "weight_fitting": [[123, "module-graphnet.training.weight_fitting"]], "writers": [[60, "module-graphnet.data.writers"]]}, "docnames": ["about/about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.curated_datamodule", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.combine_extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.extractors.liquido", "api/graphnet.data.extractors.liquido.h5_extractor", "api/graphnet.data.extractors.prometheus", "api/graphnet.data.extractors.prometheus.prometheus_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.readers.liquido_reader", "api/graphnet.data.readers.prometheus_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.datasets", "api/graphnet.datasets.prometheus_datasets", "api/graphnet.datasets.test_dataset", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.liquido", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.icemix", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.transformer", "api/graphnet.models.transformer.iseecube", "api/graphnet.models.utils", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute/contribute", "data_conversion/data_conversion", "datasets/datasets", "getting_started/getting_started", "index", "installation/install", "integration/integration", "intro/intro", "models/models", "substitutions"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["about/about.rst", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.curated_datamodule.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.combine_extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.extractors.liquido.rst", "api/graphnet.data.extractors.liquido.h5_extractor.rst", "api/graphnet.data.extractors.prometheus.rst", "api/graphnet.data.extractors.prometheus.prometheus_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.readers.liquido_reader.rst", "api/graphnet.data.readers.prometheus_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.datasets.rst", "api/graphnet.datasets.prometheus_datasets.rst", "api/graphnet.datasets.test_dataset.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.liquido.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.transformer.rst", "api/graphnet.models.transformer.iseecube.rst", "api/graphnet.models.utils.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute/contribute.rst", "data_conversion/data_conversion.rst", "datasets/datasets.rst", "getting_started/getting_started.md", "index.rst", "installation/install.rst", "integration/integration.rst", "intro/intro.rst", "models/models.rst", "substitutions.rst"], "indexentries": {"accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors", false]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions", false]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[11, "graphnet.data.dataset.dataset.Dataset.add_label", false]], "arca115 (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.ARCA115", false]], "argumentparser (class in graphnet.utilities.argparse)": [[125, "graphnet.utilities.argparse.ArgumentParser", false]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[130, "graphnet.utilities.config.model_config.ModelConfig.arguments", false]], "array_to_sequence() (in module graphnet.models.utils)": [[117, "graphnet.models.utils.array_to_sequence", false]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[127, "graphnet.utilities.config.base_config.BaseConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[130, "graphnet.utilities.config.model_config.ModelConfig.as_dict", false]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.attach_index", false]], "attention_rel (class in graphnet.models.components.layers)": [[82, "graphnet.models.components.layers.Attention_rel", false]], "attributecoarsening (class in graphnet.models.coarsening)": [[79, "graphnet.models.coarsening.AttributeCoarsening", false]], "available_backends (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.available_backends", false]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[113, "graphnet.models.task.reconstruction.AzimuthReconstruction", false]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[113, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa", false]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[121, "graphnet.training.loss_functions.LogCMK.backward", false]], "baikalgvd8 (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.BaikalGVD8", false]], "baikalgvdsmall (class in graphnet.datasets.prometheus_datasets)": [[65, "graphnet.datasets.prometheus_datasets.BaikalGVDSmall", false]], "baseconfig (class in graphnet.utilities.config.base_config)": [[127, "graphnet.utilities.config.base_config.BaseConfig", false]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[112, "graphnet.models.task.classification.BinaryClassificationTask", false]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[112, "graphnet.models.task.classification.BinaryClassificationTaskLogits", false]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[121, "graphnet.training.loss_functions.BinaryCrossEntropyLoss", false]], "bjoernlow (class in graphnet.training.weight_fitting)": [[123, "graphnet.training.weight_fitting.BjoernLow", false]], "block (class in graphnet.models.components.layers)": [[82, "graphnet.models.components.layers.Block", false]], "block_rel (class in graphnet.models.components.layers)": [[82, "graphnet.models.components.layers.Block_rel", false]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion", false]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[117, "graphnet.models.utils.calculate_distance_matrix", false]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[117, "graphnet.models.utils.calculate_xyzt_homophily", false]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python", false]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python", false]], "citation (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.citation", false]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[130, "graphnet.utilities.config.model_config.ModelConfig.class_name", false]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[108, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object", false]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[105, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles", false]], "coarsening (class in graphnet.models.coarsening)": [[79, "graphnet.models.coarsening.Coarsening", false]], "collate_fn() (in module graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.collate_fn", false]], "collate_fn() (in module graphnet.training.utils)": [[122, "graphnet.training.utils.collate_fn", false]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[122, "graphnet.training.utils.collator_sequence_buckleting", false]], "columnmissingexception": [[77, "graphnet.exceptions.exceptions.ColumnMissingException", false]], "combinedextractor (class in graphnet.data.extractors.combine_extractors)": [[17, "graphnet.data.extractors.combine_extractors.CombinedExtractor", false]], "comments (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.comments", false]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[110, "graphnet.models.standard_model.StandardModel.compute_loss", false]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[114, "graphnet.models.task.task.LearnedTask.compute_loss", false]], "compute_loss() (graphnet.models.task.task.standardflowtask method)": [[114, "graphnet.models.task.task.StandardFlowTask.compute_loss", false]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[114, "graphnet.models.task.task.StandardLearnedTask.compute_loss", false]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[100, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat", false]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[11, "graphnet.data.dataset.dataset.Dataset.concatenate", false]], "config (graphnet.utilities.config.configurable.configurable property)": [[128, "graphnet.utilities.config.configurable.Configurable.config", false]], "configurable (class in graphnet.utilities.config.configurable)": [[128, "graphnet.utilities.config.configurable.Configurable", false]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[110, "graphnet.models.standard_model.StandardModel.configure_optimizers", false]], "contains() (graphnet.utilities.argparse.options method)": [[125, "graphnet.utilities.argparse.Options.contains", false]], "convnet (class in graphnet.models.gnn.convnet)": [[91, "graphnet.models.gnn.convnet.ConvNet", false]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.create_table", false]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql", false]], "creator (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.creator", false]], "critical() (graphnet.utilities.logging.logger method)": [[137, "graphnet.utilities.logging.Logger.critical", false]], "crossentropyloss (class in graphnet.training.loss_functions)": [[121, "graphnet.training.loss_functions.CrossEntropyLoss", false]], "curateddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.CuratedDataset", false]], "customdomcoarsening (class in graphnet.models.coarsening)": [[79, "graphnet.models.coarsening.CustomDOMCoarsening", false]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.database_exists", false]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.database_table_exists", false]], "dataconverter (class in graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.DataConverter", false]], "dataloader (class in graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.DataLoader", false]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[132, "graphnet.utilities.config.training_config.TrainingConfig.dataloader", false]], "dataset (class in graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.Dataset", false]], "dataset_dir (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.dataset_dir", false]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig", false]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta", false]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta", false]], "debug() (graphnet.utilities.logging.logger method)": [[137, "graphnet.utilities.logging.Logger.debug", false]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE", false]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE", false]], "deepice (class in graphnet.models.gnn.icemix)": [[96, "graphnet.models.gnn.icemix.DeepIce", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[112, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[112, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[113, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[113, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[113, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[113, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[113, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[113, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[114, "graphnet.models.task.task.IdentityTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.task property)": [[114, "graphnet.models.task.task.Task.default_prediction_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[112, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[112, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[113, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[113, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[113, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[113, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[113, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[113, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[114, "graphnet.models.task.task.IdentityTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.task property)": [[114, "graphnet.models.task.task.Task.default_target_labels", false]], "deployer (class in graphnet.deployment.deployer)": [[68, "graphnet.deployment.deployer.Deployer", false]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[69, "graphnet.deployment.deployment_module.DeploymentModule", false]], "description() (graphnet.data.curated_datamodule.curateddataset method)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.description", false]], "detector (class in graphnet.models.detector.detector)": [[85, "graphnet.models.detector.detector.Detector", false]], "direction (class in graphnet.training.labels)": [[120, "graphnet.training.labels.Direction", false]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[113, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa", false]], "do_shuffle() (in module graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.do_shuffle", false]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[79, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening", false]], "domcoarsening (class in graphnet.models.coarsening)": [[79, "graphnet.models.coarsening.DOMCoarsening", false]], "droppath (class in graphnet.models.components.layers)": [[82, "graphnet.models.components.layers.DropPath", false]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[127, "graphnet.utilities.config.base_config.BaseConfig.dump", false]], "dynedge (class in graphnet.models.gnn.dynedge)": [[92, "graphnet.models.gnn.dynedge.DynEdge", false]], "dynedgeconv (class in graphnet.models.components.layers)": [[82, "graphnet.models.components.layers.DynEdgeConv", false]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[93, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST", false]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[94, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO", false]], "dyntrans (class in graphnet.models.components.layers)": [[82, "graphnet.models.components.layers.DynTrans", false]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[132, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience", false]], "edgeconvtito (class in graphnet.models.components.layers)": [[82, "graphnet.models.components.layers.EdgeConvTito", false]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[99, "graphnet.models.graphs.edges.edges.EdgeDefinition", false]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[113, "graphnet.models.task.reconstruction.EnergyReconstruction", false]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[113, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower", false]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[113, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty", false]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[113, "graphnet.models.task.reconstruction.EnergyTCReconstruction", false]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.EnsembleDataset", false]], "eps_like() (in module graphnet.utilities.maths)": [[138, "graphnet.utilities.maths.eps_like", false]], "erdahosteddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.ERDAHostedDataset", false]], "error() (graphnet.utilities.logging.logger method)": [[137, "graphnet.utilities.logging.Logger.error", false]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[121, "graphnet.training.loss_functions.EuclideanDistanceLoss", false]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[99, "graphnet.models.graphs.edges.edges.EuclideanEdges", false]], "event_truth (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.event_truth", false]], "events (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.events", false]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[61, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes", false]], "experiment (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.experiment", false]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[82, "graphnet.models.components.layers.DropPath.extra_repr", false]], "extra_repr() (graphnet.models.model.model method)": [[106, "graphnet.models.model.Model.extra_repr", false]], "extra_repr_recursive() (graphnet.models.model.model method)": [[106, "graphnet.models.model.Model.extra_repr_recursive", false]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names", false]], "extractor (class in graphnet.data.extractors.extractor)": [[18, "graphnet.data.extractors.extractor.Extractor", false]], "feature_map() (graphnet.models.detector.detector.detector method)": [[85, "graphnet.models.detector.detector.Detector.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[86, "graphnet.models.detector.icecube.IceCube86.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[86, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[86, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[86, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map", false]], "feature_map() (graphnet.models.detector.liquido.liquido_v1 method)": [[87, "graphnet.models.detector.liquido.LiquidO_v1.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.arca115 method)": [[88, "graphnet.models.detector.prometheus.ARCA115.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.baikalgvd8 method)": [[88, "graphnet.models.detector.prometheus.BaikalGVD8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecube86prometheus method)": [[88, "graphnet.models.detector.prometheus.IceCube86Prometheus.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubedeepcore8 method)": [[88, "graphnet.models.detector.prometheus.IceCubeDeepCore8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubegen2 method)": [[88, "graphnet.models.detector.prometheus.IceCubeGen2.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubeupgrade7 method)": [[88, "graphnet.models.detector.prometheus.IceCubeUpgrade7.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icedemo81 method)": [[88, "graphnet.models.detector.prometheus.IceDemo81.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[88, "graphnet.models.detector.prometheus.ORCA150.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150superdense method)": [[88, "graphnet.models.detector.prometheus.ORCA150SuperDense.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.ponetriangle method)": [[88, "graphnet.models.detector.prometheus.PONETriangle.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.trident1211 method)": [[88, "graphnet.models.detector.prometheus.TRIDENT1211.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.waterdemo81 method)": [[88, "graphnet.models.detector.prometheus.WaterDemo81.feature_map", false]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES", false]], "features (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.features", false]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.features", false]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[61, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension", false]], "file_handlers (graphnet.utilities.logging.logger property)": [[137, "graphnet.utilities.logging.Logger.file_handlers", false]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[137, "graphnet.utilities.logging.RepeatFilter.filter", false]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files", false]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[49, "graphnet.data.readers.i3reader.I3Reader.find_files", false]], "find_files() (graphnet.data.readers.internal_parquet_reader.parquetreader method)": [[50, "graphnet.data.readers.internal_parquet_reader.ParquetReader.find_files", false]], "find_files() (graphnet.data.readers.liquido_reader.liquidoreader method)": [[51, "graphnet.data.readers.liquido_reader.LiquidOReader.find_files", false]], "find_files() (graphnet.data.readers.prometheus_reader.prometheusreader method)": [[52, "graphnet.data.readers.prometheus_reader.PrometheusReader.find_files", false]], "find_i3_files() (in module graphnet.utilities.filesys)": [[135, "graphnet.utilities.filesys.find_i3_files", false]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[132, "graphnet.utilities.config.training_config.TrainingConfig.fit", false]], "fit() (graphnet.models.standard_model.standardmodel method)": [[110, "graphnet.models.standard_model.StandardModel.fit", false]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[123, "graphnet.training.weight_fitting.WeightFitter.fit", false]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[33, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary", false]], "forward() (graphnet.models.coarsening.coarsening method)": [[79, "graphnet.models.coarsening.Coarsening.forward", false]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[81, "graphnet.models.components.embedding.FourierEncoder.forward", false]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[81, "graphnet.models.components.embedding.SinusoidalPosEmb.forward", false]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[81, "graphnet.models.components.embedding.SpacetimeEncoder.forward", false]], "forward() (graphnet.models.components.layers.attention_rel method)": [[82, "graphnet.models.components.layers.Attention_rel.forward", false]], "forward() (graphnet.models.components.layers.block method)": [[82, "graphnet.models.components.layers.Block.forward", false]], "forward() (graphnet.models.components.layers.block_rel method)": [[82, "graphnet.models.components.layers.Block_rel.forward", false]], "forward() (graphnet.models.components.layers.droppath method)": [[82, "graphnet.models.components.layers.DropPath.forward", false]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[82, "graphnet.models.components.layers.DynEdgeConv.forward", false]], "forward() (graphnet.models.components.layers.dyntrans method)": [[82, "graphnet.models.components.layers.DynTrans.forward", false]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[82, "graphnet.models.components.layers.EdgeConvTito.forward", false]], "forward() (graphnet.models.components.layers.mlp method)": [[82, "graphnet.models.components.layers.Mlp.forward", false]], "forward() (graphnet.models.detector.detector.detector method)": [[85, "graphnet.models.detector.detector.Detector.forward", false]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[91, "graphnet.models.gnn.convnet.ConvNet.forward", false]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[92, "graphnet.models.gnn.dynedge.DynEdge.forward", false]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[93, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward", false]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[94, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward", false]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[95, "graphnet.models.gnn.gnn.GNN.forward", false]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[96, "graphnet.models.gnn.icemix.DeepIce.forward", false]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[90, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward", false]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[99, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward", false]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[101, "graphnet.models.graphs.graph_definition.GraphDefinition.forward", false]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[104, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward", false]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[108, "graphnet.models.rnn.node_rnn.Node_RNN.forward", false]], "forward() (graphnet.models.standard_model.standardmodel method)": [[110, "graphnet.models.standard_model.StandardModel.forward", false]], "forward() (graphnet.models.task.task.learnedtask method)": [[114, "graphnet.models.task.task.LearnedTask.forward", false]], "forward() (graphnet.models.task.task.standardflowtask method)": [[114, "graphnet.models.task.task.StandardFlowTask.forward", false]], "forward() (graphnet.models.transformer.iseecube.iseecube method)": [[116, "graphnet.models.transformer.iseecube.ISeeCube.forward", false]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[121, "graphnet.training.loss_functions.LogCMK.forward", false]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[121, "graphnet.training.loss_functions.LossFunction.forward", false]], "fourierencoder (class in graphnet.models.components.embedding)": [[81, "graphnet.models.components.embedding.FourierEncoder", false]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[34, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo", false]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[34, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise", false]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[11, "graphnet.data.dataset.dataset.Dataset.from_config", false]], "from_config() (graphnet.models.model.model class method)": [[106, "graphnet.models.model.Model.from_config", false]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[128, "graphnet.utilities.config.configurable.Configurable.from_config", false]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[8, "graphnet.data.dataloader.DataLoader.from_dataset_config", false]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[105, "graphnet.models.graphs.utils.gather_cluster_sequence", false]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.gcd_file", false]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.gcd_file", false]], "geometry_table (graphnet.models.detector.detector.detector property)": [[85, "graphnet.models.detector.detector.Detector.geometry_table", false]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[86, "graphnet.models.detector.icecube.IceCube86.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[86, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.liquido.liquido_v1 attribute)": [[87, "graphnet.models.detector.liquido.LiquidO_v1.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.arca115 attribute)": [[88, "graphnet.models.detector.prometheus.ARCA115.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[88, "graphnet.models.detector.prometheus.BaikalGVD8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[88, "graphnet.models.detector.prometheus.IceCube86Prometheus.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeDeepCore8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeGen2.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeUpgrade7.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icedemo81 attribute)": [[88, "graphnet.models.detector.prometheus.IceDemo81.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[88, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150superdense attribute)": [[88, "graphnet.models.detector.prometheus.ORCA150SuperDense.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.ponetriangle attribute)": [[88, "graphnet.models.detector.prometheus.PONETriangle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.trident1211 attribute)": [[88, "graphnet.models.detector.prometheus.TRIDENT1211.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[88, "graphnet.models.detector.prometheus.WaterDemo81.geometry_table_path", false]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[127, "graphnet.utilities.config.base_config.get_all_argument_values", false]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[131, "graphnet.utilities.config.parsing.get_all_grapnet_classes", false]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[131, "graphnet.utilities.config.parsing.get_graphnet_classes", false]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[119, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr", false]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.get_map_function", false]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.get_member_variables", false]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[119, "graphnet.training.callbacks.ProgressBar.get_metrics", false]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[34, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries", false]], "get_predictions() (in module graphnet.training.utils)": [[122, "graphnet.training.utils.get_predictions", false]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.get_primary_keys", false]], "gnn (class in graphnet.models.gnn.gnn)": [[95, "graphnet.models.gnn.gnn.GNN", false]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition", false]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[101, "graphnet.models.graphs.graph_definition.GraphDefinition", false]], "graphnet": [[1, "module-graphnet", false]], "graphnet.constants": [[2, "module-graphnet.constants", false]], "graphnet.data": [[3, "module-graphnet.data", false]], "graphnet.data.constants": [[4, "module-graphnet.data.constants", false]], "graphnet.data.curated_datamodule": [[5, "module-graphnet.data.curated_datamodule", false]], "graphnet.data.dataclasses": [[6, "module-graphnet.data.dataclasses", false]], "graphnet.data.dataconverter": [[7, "module-graphnet.data.dataconverter", false]], "graphnet.data.dataloader": [[8, "module-graphnet.data.dataloader", false]], "graphnet.data.datamodule": [[9, "module-graphnet.data.datamodule", false]], "graphnet.data.dataset": [[10, "module-graphnet.data.dataset", false]], "graphnet.data.dataset.dataset": [[11, "module-graphnet.data.dataset.dataset", false]], "graphnet.data.dataset.parquet": [[12, "module-graphnet.data.dataset.parquet", false]], "graphnet.data.dataset.parquet.parquet_dataset": [[13, "module-graphnet.data.dataset.parquet.parquet_dataset", false]], "graphnet.data.dataset.sqlite": [[14, "module-graphnet.data.dataset.sqlite", false]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[15, "module-graphnet.data.dataset.sqlite.sqlite_dataset", false]], "graphnet.data.extractors": [[16, "module-graphnet.data.extractors", false]], "graphnet.data.extractors.combine_extractors": [[17, "module-graphnet.data.extractors.combine_extractors", false]], "graphnet.data.extractors.extractor": [[18, "module-graphnet.data.extractors.extractor", false]], "graphnet.data.extractors.icecube": [[19, "module-graphnet.data.extractors.icecube", false]], "graphnet.data.extractors.icecube.i3extractor": [[20, "module-graphnet.data.extractors.icecube.i3extractor", false]], "graphnet.data.extractors.icecube.i3featureextractor": [[21, "module-graphnet.data.extractors.icecube.i3featureextractor", false]], "graphnet.data.extractors.icecube.i3genericextractor": [[22, "module-graphnet.data.extractors.icecube.i3genericextractor", false]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[23, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[24, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false]], "graphnet.data.extractors.icecube.i3particleextractor": [[25, "module-graphnet.data.extractors.icecube.i3particleextractor", false]], "graphnet.data.extractors.icecube.i3pisaextractor": [[26, "module-graphnet.data.extractors.icecube.i3pisaextractor", false]], "graphnet.data.extractors.icecube.i3quesoextractor": [[27, "module-graphnet.data.extractors.icecube.i3quesoextractor", false]], "graphnet.data.extractors.icecube.i3retroextractor": [[28, "module-graphnet.data.extractors.icecube.i3retroextractor", false]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[29, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false]], "graphnet.data.extractors.icecube.i3truthextractor": [[30, "module-graphnet.data.extractors.icecube.i3truthextractor", false]], "graphnet.data.extractors.icecube.i3tumextractor": [[31, "module-graphnet.data.extractors.icecube.i3tumextractor", false]], "graphnet.data.extractors.icecube.utilities": [[32, "module-graphnet.data.extractors.icecube.utilities", false]], "graphnet.data.extractors.icecube.utilities.collections": [[33, "module-graphnet.data.extractors.icecube.utilities.collections", false]], "graphnet.data.extractors.icecube.utilities.frames": [[34, "module-graphnet.data.extractors.icecube.utilities.frames", false]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[35, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false]], "graphnet.data.extractors.icecube.utilities.types": [[36, "module-graphnet.data.extractors.icecube.utilities.types", false]], "graphnet.data.extractors.internal": [[37, "module-graphnet.data.extractors.internal", false]], "graphnet.data.extractors.internal.parquet_extractor": [[38, "module-graphnet.data.extractors.internal.parquet_extractor", false]], "graphnet.data.extractors.liquido": [[39, "module-graphnet.data.extractors.liquido", false]], "graphnet.data.extractors.liquido.h5_extractor": [[40, "module-graphnet.data.extractors.liquido.h5_extractor", false]], "graphnet.data.extractors.prometheus": [[41, "module-graphnet.data.extractors.prometheus", false]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[42, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false]], "graphnet.data.parquet": [[43, "module-graphnet.data.parquet", false]], "graphnet.data.parquet.deprecated_methods": [[44, "module-graphnet.data.parquet.deprecated_methods", false]], "graphnet.data.pre_configured": [[45, "module-graphnet.data.pre_configured", false]], "graphnet.data.pre_configured.dataconverters": [[46, "module-graphnet.data.pre_configured.dataconverters", false]], "graphnet.data.readers": [[47, "module-graphnet.data.readers", false]], "graphnet.data.readers.graphnet_file_reader": [[48, "module-graphnet.data.readers.graphnet_file_reader", false]], "graphnet.data.readers.i3reader": [[49, "module-graphnet.data.readers.i3reader", false]], "graphnet.data.readers.internal_parquet_reader": [[50, "module-graphnet.data.readers.internal_parquet_reader", false]], "graphnet.data.readers.liquido_reader": [[51, "module-graphnet.data.readers.liquido_reader", false]], "graphnet.data.readers.prometheus_reader": [[52, "module-graphnet.data.readers.prometheus_reader", false]], "graphnet.data.sqlite": [[53, "module-graphnet.data.sqlite", false]], "graphnet.data.sqlite.deprecated_methods": [[54, "module-graphnet.data.sqlite.deprecated_methods", false]], "graphnet.data.utilities": [[55, "module-graphnet.data.utilities", false]], "graphnet.data.utilities.parquet_to_sqlite": [[56, "module-graphnet.data.utilities.parquet_to_sqlite", false]], "graphnet.data.utilities.random": [[57, "module-graphnet.data.utilities.random", false]], "graphnet.data.utilities.sqlite_utilities": [[58, "module-graphnet.data.utilities.sqlite_utilities", false]], "graphnet.data.utilities.string_selection_resolver": [[59, "module-graphnet.data.utilities.string_selection_resolver", false]], "graphnet.data.writers": [[60, "module-graphnet.data.writers", false]], "graphnet.data.writers.graphnet_writer": [[61, "module-graphnet.data.writers.graphnet_writer", false]], "graphnet.data.writers.parquet_writer": [[62, "module-graphnet.data.writers.parquet_writer", false]], "graphnet.data.writers.sqlite_writer": [[63, "module-graphnet.data.writers.sqlite_writer", false]], "graphnet.datasets": [[64, "module-graphnet.datasets", false]], "graphnet.datasets.prometheus_datasets": [[65, "module-graphnet.datasets.prometheus_datasets", false]], "graphnet.datasets.test_dataset": [[66, "module-graphnet.datasets.test_dataset", false]], "graphnet.deployment": [[67, "module-graphnet.deployment", false]], "graphnet.deployment.deployer": [[68, "module-graphnet.deployment.deployer", false]], "graphnet.deployment.deployment_module": [[69, "module-graphnet.deployment.deployment_module", false]], "graphnet.deployment.icecube.cleaning_module": [[73, "module-graphnet.deployment.icecube.cleaning_module", false]], "graphnet.deployment.icecube.inference_module": [[75, "module-graphnet.deployment.icecube.inference_module", false]], "graphnet.exceptions": [[76, "module-graphnet.exceptions", false]], "graphnet.exceptions.exceptions": [[77, "module-graphnet.exceptions.exceptions", false]], "graphnet.models": [[78, "module-graphnet.models", false]], "graphnet.models.coarsening": [[79, "module-graphnet.models.coarsening", false]], "graphnet.models.components": [[80, "module-graphnet.models.components", false]], "graphnet.models.components.embedding": [[81, "module-graphnet.models.components.embedding", false]], "graphnet.models.components.layers": [[82, "module-graphnet.models.components.layers", false]], "graphnet.models.components.pool": [[83, "module-graphnet.models.components.pool", false]], "graphnet.models.detector": [[84, "module-graphnet.models.detector", false]], "graphnet.models.detector.detector": [[85, "module-graphnet.models.detector.detector", false]], "graphnet.models.detector.icecube": [[86, "module-graphnet.models.detector.icecube", false]], "graphnet.models.detector.liquido": [[87, "module-graphnet.models.detector.liquido", false]], "graphnet.models.detector.prometheus": [[88, "module-graphnet.models.detector.prometheus", false]], "graphnet.models.gnn": [[89, "module-graphnet.models.gnn", false]], "graphnet.models.gnn.convnet": [[91, "module-graphnet.models.gnn.convnet", false]], "graphnet.models.gnn.dynedge": [[92, "module-graphnet.models.gnn.dynedge", false]], "graphnet.models.gnn.dynedge_jinst": [[93, "module-graphnet.models.gnn.dynedge_jinst", false]], "graphnet.models.gnn.dynedge_kaggle_tito": [[94, "module-graphnet.models.gnn.dynedge_kaggle_tito", false]], "graphnet.models.gnn.gnn": [[95, "module-graphnet.models.gnn.gnn", false]], "graphnet.models.gnn.icemix": [[96, "module-graphnet.models.gnn.icemix", false]], "graphnet.models.gnn.rnn_tito": [[90, "module-graphnet.models.gnn.RNN_tito", false]], "graphnet.models.graphs": [[97, "module-graphnet.models.graphs", false]], "graphnet.models.graphs.edges": [[98, "module-graphnet.models.graphs.edges", false]], "graphnet.models.graphs.edges.edges": [[99, "module-graphnet.models.graphs.edges.edges", false]], "graphnet.models.graphs.edges.minkowski": [[100, "module-graphnet.models.graphs.edges.minkowski", false]], "graphnet.models.graphs.graph_definition": [[101, "module-graphnet.models.graphs.graph_definition", false]], "graphnet.models.graphs.graphs": [[102, "module-graphnet.models.graphs.graphs", false]], "graphnet.models.graphs.nodes": [[103, "module-graphnet.models.graphs.nodes", false]], "graphnet.models.graphs.nodes.nodes": [[104, "module-graphnet.models.graphs.nodes.nodes", false]], "graphnet.models.graphs.utils": [[105, "module-graphnet.models.graphs.utils", false]], "graphnet.models.model": [[106, "module-graphnet.models.model", false]], "graphnet.models.rnn": [[107, "module-graphnet.models.rnn", false]], "graphnet.models.rnn.node_rnn": [[108, "module-graphnet.models.rnn.node_rnn", false]], "graphnet.models.standard_averaged_model": [[109, "module-graphnet.models.standard_averaged_model", false]], "graphnet.models.standard_model": [[110, "module-graphnet.models.standard_model", false]], "graphnet.models.task": [[111, "module-graphnet.models.task", false]], "graphnet.models.task.classification": [[112, "module-graphnet.models.task.classification", false]], "graphnet.models.task.reconstruction": [[113, "module-graphnet.models.task.reconstruction", false]], "graphnet.models.task.task": [[114, "module-graphnet.models.task.task", false]], "graphnet.models.transformer": [[115, "module-graphnet.models.transformer", false]], "graphnet.models.transformer.iseecube": [[116, "module-graphnet.models.transformer.iseecube", false]], "graphnet.models.utils": [[117, "module-graphnet.models.utils", false]], "graphnet.training": [[118, "module-graphnet.training", false]], "graphnet.training.callbacks": [[119, "module-graphnet.training.callbacks", false]], "graphnet.training.labels": [[120, "module-graphnet.training.labels", false]], "graphnet.training.loss_functions": [[121, "module-graphnet.training.loss_functions", false]], "graphnet.training.utils": [[122, "module-graphnet.training.utils", false]], "graphnet.training.weight_fitting": [[123, "module-graphnet.training.weight_fitting", false]], "graphnet.utilities": [[124, "module-graphnet.utilities", false]], "graphnet.utilities.argparse": [[125, "module-graphnet.utilities.argparse", false]], "graphnet.utilities.config": [[126, "module-graphnet.utilities.config", false]], "graphnet.utilities.config.base_config": [[127, "module-graphnet.utilities.config.base_config", false]], "graphnet.utilities.config.configurable": [[128, "module-graphnet.utilities.config.configurable", false]], "graphnet.utilities.config.dataset_config": [[129, "module-graphnet.utilities.config.dataset_config", false]], "graphnet.utilities.config.model_config": [[130, "module-graphnet.utilities.config.model_config", false]], "graphnet.utilities.config.parsing": [[131, "module-graphnet.utilities.config.parsing", false]], "graphnet.utilities.config.training_config": [[132, "module-graphnet.utilities.config.training_config", false]], "graphnet.utilities.decorators": [[133, "module-graphnet.utilities.decorators", false]], "graphnet.utilities.deprecation_tools": [[134, "module-graphnet.utilities.deprecation_tools", false]], "graphnet.utilities.filesys": [[135, "module-graphnet.utilities.filesys", false]], "graphnet.utilities.imports": [[136, "module-graphnet.utilities.imports", false]], "graphnet.utilities.logging": [[137, "module-graphnet.utilities.logging", false]], "graphnet.utilities.maths": [[138, "module-graphnet.utilities.maths", false]], "graphnetdatamodule (class in graphnet.data.datamodule)": [[9, "graphnet.data.datamodule.GraphNeTDataModule", false]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[119, "graphnet.training.callbacks.GraphnetEarlyStopping", false]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader", false]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[61, "graphnet.data.writers.graphnet_writer.GraphNeTWriter", false]], "group_by() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.group_by", false]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.group_pulses_to_dom", false]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.group_pulses_to_pmt", false]], "h5extractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[40, "graphnet.data.extractors.liquido.h5_extractor.H5Extractor", false]], "h5hitextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[40, "graphnet.data.extractors.liquido.h5_extractor.H5HitExtractor", false]], "h5truthextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[40, "graphnet.data.extractors.liquido.h5_extractor.H5TruthExtractor", false]], "handlers (graphnet.utilities.logging.logger property)": [[137, "graphnet.utilities.logging.Logger.handlers", false]], "has_extension() (in module graphnet.utilities.filesys)": [[135, "graphnet.utilities.filesys.has_extension", false]], "has_icecube_package() (in module graphnet.utilities.imports)": [[136, "graphnet.utilities.imports.has_icecube_package", false]], "has_torch_package() (in module graphnet.utilities.imports)": [[136, "graphnet.utilities.imports.has_torch_package", false]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.i3_file", false]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.i3_files", false]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[20, "graphnet.data.extractors.icecube.i3extractor.I3Extractor", false]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor", false]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86", false]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore", false]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade", false]], "i3fileset (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.I3FileSet", false]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[35, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter", false]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[35, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask", false]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[23, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor", false]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[22, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor", false]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[75, "graphnet.deployment.icecube.inference_module.I3InferenceModule", false]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[24, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor", false]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[25, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor", false]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[26, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor", false]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[73, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule", false]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade", false]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[27, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor", false]], "i3reader (class in graphnet.data.readers.i3reader)": [[49, "graphnet.data.readers.i3reader.I3Reader", false]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[28, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor", false]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[29, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor", false]], "i3toparquetconverter (class in graphnet.data.pre_configured.dataconverters)": [[46, "graphnet.data.pre_configured.dataconverters.I3ToParquetConverter", false]], "i3tosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[46, "graphnet.data.pre_configured.dataconverters.I3ToSQLiteConverter", false]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[30, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor", false]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[31, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor", false]], "ice_transparency() (in module graphnet.models.graphs.utils)": [[105, "graphnet.models.graphs.utils.ice_transparency", false]], "icecube86 (class in graphnet.models.detector.icecube)": [[86, "graphnet.models.detector.icecube.IceCube86", false]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86", false]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86", false]], "icecube86prometheus (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.IceCube86Prometheus", false]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[86, "graphnet.models.detector.icecube.IceCubeDeepCore", false]], "icecubedeepcore8 (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.IceCubeDeepCore8", false]], "icecubegen2 (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.IceCubeGen2", false]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[86, "graphnet.models.detector.icecube.IceCubeKaggle", false]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[86, "graphnet.models.detector.icecube.IceCubeUpgrade", false]], "icecubeupgrade7 (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.IceCubeUpgrade7", false]], "icedemo81 (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.IceDemo81", false]], "icemixnodes (class in graphnet.models.graphs.nodes.nodes)": [[104, "graphnet.models.graphs.nodes.nodes.IceMixNodes", false]], "identify_indices() (in module graphnet.models.graphs.utils)": [[105, "graphnet.models.graphs.utils.identify_indices", false]], "identitytask (class in graphnet.models.task.task)": [[114, "graphnet.models.task.task.IdentityTask", false]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column", false]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[113, "graphnet.models.task.reconstruction.InelasticityReconstruction", false]], "inference() (graphnet.models.standard_model.standardmodel method)": [[110, "graphnet.models.standard_model.StandardModel.inference", false]], "inference() (graphnet.models.task.task.task method)": [[114, "graphnet.models.task.task.Task.inference", false]], "info() (graphnet.utilities.logging.logger method)": [[137, "graphnet.utilities.logging.Logger.info", false]], "init_global_index() (in module graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.init_global_index", false]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[119, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm", false]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[119, "graphnet.training.callbacks.ProgressBar.init_test_tqdm", false]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[119, "graphnet.training.callbacks.ProgressBar.init_train_tqdm", false]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[119, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm", false]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_boost_class", false]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum", false]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[135, "graphnet.utilities.filesys.is_gcd_file", false]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[131, "graphnet.utilities.config.parsing.is_graphnet_class", false]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[131, "graphnet.utilities.config.parsing.is_graphnet_module", false]], "is_i3_file() (in module graphnet.utilities.filesys)": [[135, "graphnet.utilities.filesys.is_i3_file", false]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class", false]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_method", false]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_type", false]], "iseecube (class in graphnet.models.transformer.iseecube)": [[116, "graphnet.models.transformer.iseecube.ISeeCube", false]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE", false]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE", false]], "key (graphnet.training.labels.label property)": [[120, "graphnet.training.labels.Label.key", false]], "knn_graph_batch() (in module graphnet.models.utils)": [[117, "graphnet.models.utils.knn_graph_batch", false]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[99, "graphnet.models.graphs.edges.edges.KNNEdges", false]], "knngraph (class in graphnet.models.graphs.graphs)": [[102, "graphnet.models.graphs.graphs.KNNGraph", false]], "label (class in graphnet.training.labels)": [[120, "graphnet.training.labels.Label", false]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.labels", false]], "learnedtask (class in graphnet.models.task.task)": [[114, "graphnet.models.task.task.LearnedTask", false]], "lex_sort() (in module graphnet.models.graphs.utils)": [[105, "graphnet.models.graphs.utils.lex_sort", false]], "liquido (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.LIQUIDO", false]], "liquido (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.LIQUIDO", false]], "liquido_v1 (class in graphnet.models.detector.liquido)": [[87, "graphnet.models.detector.liquido.LiquidO_v1", false]], "liquidoreader (class in graphnet.data.readers.liquido_reader)": [[51, "graphnet.data.readers.liquido_reader.LiquidOReader", false]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[131, "graphnet.utilities.config.parsing.list_all_submodules", false]], "load() (graphnet.models.model.model class method)": [[106, "graphnet.models.model.Model.load", false]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[127, "graphnet.utilities.config.base_config.BaseConfig.load", false]], "load_module() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.load_module", false]], "load_state_dict() (graphnet.models.model.model method)": [[106, "graphnet.models.model.Model.load_state_dict", false]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[109, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict", false]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[121, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk", false]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[121, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx", false]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[121, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact", false]], "logcmk (class in graphnet.training.loss_functions)": [[121, "graphnet.training.loss_functions.LogCMK", false]], "logcoshloss (class in graphnet.training.loss_functions)": [[121, "graphnet.training.loss_functions.LogCoshLoss", false]], "logger (class in graphnet.utilities.logging)": [[137, "graphnet.utilities.logging.Logger", false]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column", false]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value", false]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table", false]], "lossfunction (class in graphnet.training.loss_functions)": [[121, "graphnet.training.loss_functions.LossFunction", false]], "make_dataloader() (in module graphnet.training.utils)": [[122, "graphnet.training.utils.make_dataloader", false]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[122, "graphnet.training.utils.make_train_validation_dataloader", false]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.merge_files", false]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[61, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files", false]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[62, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files", false]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[63, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files", false]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[82, "graphnet.models.components.layers.EdgeConvTito.message", false]], "min_pool() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.min_pool", false]], "min_pool_x() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.min_pool_x", false]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[100, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges", false]], "mlp (class in graphnet.models.components.layers)": [[82, "graphnet.models.components.layers.Mlp", false]], "model (class in graphnet.models.model)": [[106, "graphnet.models.model.Model", false]], "model_computed_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[127, "graphnet.utilities.config.base_config.BaseConfig.model_computed_fields", false]], "model_computed_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.model_computed_fields", false]], "model_computed_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[130, "graphnet.utilities.config.model_config.ModelConfig.model_computed_fields", false]], "model_computed_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[132, "graphnet.utilities.config.training_config.TrainingConfig.model_computed_fields", false]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[127, "graphnet.utilities.config.base_config.BaseConfig.model_config", false]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config", false]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[130, "graphnet.utilities.config.model_config.ModelConfig.model_config", false]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[132, "graphnet.utilities.config.training_config.TrainingConfig.model_config", false]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[127, "graphnet.utilities.config.base_config.BaseConfig.model_fields", false]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields", false]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[130, "graphnet.utilities.config.model_config.ModelConfig.model_fields", false]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[132, "graphnet.utilities.config.training_config.TrainingConfig.model_fields", false]], "modelconfig (class in graphnet.utilities.config.model_config)": [[130, "graphnet.utilities.config.model_config.ModelConfig", false]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[130, "graphnet.utilities.config.model_config.ModelConfigSaverABC", false]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[130, "graphnet.utilities.config.model_config.ModelConfigSaverMeta", false]], "module": [[1, "module-graphnet", false], [2, "module-graphnet.constants", false], [3, "module-graphnet.data", false], [4, "module-graphnet.data.constants", false], [5, "module-graphnet.data.curated_datamodule", false], [6, "module-graphnet.data.dataclasses", false], [7, "module-graphnet.data.dataconverter", false], [8, "module-graphnet.data.dataloader", false], [9, "module-graphnet.data.datamodule", false], [10, "module-graphnet.data.dataset", false], [11, "module-graphnet.data.dataset.dataset", false], [12, "module-graphnet.data.dataset.parquet", false], [13, "module-graphnet.data.dataset.parquet.parquet_dataset", false], [14, "module-graphnet.data.dataset.sqlite", false], [15, "module-graphnet.data.dataset.sqlite.sqlite_dataset", false], [16, "module-graphnet.data.extractors", false], [17, "module-graphnet.data.extractors.combine_extractors", false], [18, "module-graphnet.data.extractors.extractor", false], [19, "module-graphnet.data.extractors.icecube", false], [20, "module-graphnet.data.extractors.icecube.i3extractor", false], [21, "module-graphnet.data.extractors.icecube.i3featureextractor", false], [22, "module-graphnet.data.extractors.icecube.i3genericextractor", false], [23, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false], [24, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false], [25, "module-graphnet.data.extractors.icecube.i3particleextractor", false], [26, "module-graphnet.data.extractors.icecube.i3pisaextractor", false], [27, "module-graphnet.data.extractors.icecube.i3quesoextractor", false], [28, "module-graphnet.data.extractors.icecube.i3retroextractor", false], [29, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false], [30, "module-graphnet.data.extractors.icecube.i3truthextractor", false], [31, "module-graphnet.data.extractors.icecube.i3tumextractor", false], [32, "module-graphnet.data.extractors.icecube.utilities", false], [33, "module-graphnet.data.extractors.icecube.utilities.collections", false], [34, "module-graphnet.data.extractors.icecube.utilities.frames", false], [35, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false], [36, "module-graphnet.data.extractors.icecube.utilities.types", false], [37, "module-graphnet.data.extractors.internal", false], [38, "module-graphnet.data.extractors.internal.parquet_extractor", false], [39, "module-graphnet.data.extractors.liquido", false], [40, "module-graphnet.data.extractors.liquido.h5_extractor", false], [41, "module-graphnet.data.extractors.prometheus", false], [42, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false], [43, "module-graphnet.data.parquet", false], [44, "module-graphnet.data.parquet.deprecated_methods", false], [45, "module-graphnet.data.pre_configured", false], [46, "module-graphnet.data.pre_configured.dataconverters", false], [47, "module-graphnet.data.readers", false], [48, "module-graphnet.data.readers.graphnet_file_reader", false], [49, "module-graphnet.data.readers.i3reader", false], [50, "module-graphnet.data.readers.internal_parquet_reader", false], [51, "module-graphnet.data.readers.liquido_reader", false], [52, "module-graphnet.data.readers.prometheus_reader", false], [53, "module-graphnet.data.sqlite", false], [54, "module-graphnet.data.sqlite.deprecated_methods", false], [55, "module-graphnet.data.utilities", false], [56, "module-graphnet.data.utilities.parquet_to_sqlite", false], [57, "module-graphnet.data.utilities.random", false], [58, "module-graphnet.data.utilities.sqlite_utilities", false], [59, "module-graphnet.data.utilities.string_selection_resolver", false], [60, "module-graphnet.data.writers", false], [61, "module-graphnet.data.writers.graphnet_writer", false], [62, "module-graphnet.data.writers.parquet_writer", false], [63, "module-graphnet.data.writers.sqlite_writer", false], [64, "module-graphnet.datasets", false], [65, "module-graphnet.datasets.prometheus_datasets", false], [66, "module-graphnet.datasets.test_dataset", false], [67, "module-graphnet.deployment", false], [68, "module-graphnet.deployment.deployer", false], [69, "module-graphnet.deployment.deployment_module", false], [73, "module-graphnet.deployment.icecube.cleaning_module", false], [75, "module-graphnet.deployment.icecube.inference_module", false], [76, "module-graphnet.exceptions", false], [77, "module-graphnet.exceptions.exceptions", false], [78, "module-graphnet.models", false], [79, "module-graphnet.models.coarsening", false], [80, "module-graphnet.models.components", false], [81, "module-graphnet.models.components.embedding", false], [82, "module-graphnet.models.components.layers", false], [83, "module-graphnet.models.components.pool", false], [84, "module-graphnet.models.detector", false], [85, "module-graphnet.models.detector.detector", false], [86, "module-graphnet.models.detector.icecube", false], [87, "module-graphnet.models.detector.liquido", false], [88, "module-graphnet.models.detector.prometheus", false], [89, "module-graphnet.models.gnn", false], [90, "module-graphnet.models.gnn.RNN_tito", false], [91, "module-graphnet.models.gnn.convnet", false], [92, "module-graphnet.models.gnn.dynedge", false], [93, "module-graphnet.models.gnn.dynedge_jinst", false], [94, "module-graphnet.models.gnn.dynedge_kaggle_tito", false], [95, "module-graphnet.models.gnn.gnn", false], [96, "module-graphnet.models.gnn.icemix", false], [97, "module-graphnet.models.graphs", false], [98, "module-graphnet.models.graphs.edges", false], [99, "module-graphnet.models.graphs.edges.edges", false], [100, "module-graphnet.models.graphs.edges.minkowski", false], [101, "module-graphnet.models.graphs.graph_definition", false], [102, "module-graphnet.models.graphs.graphs", false], [103, "module-graphnet.models.graphs.nodes", false], [104, "module-graphnet.models.graphs.nodes.nodes", false], [105, "module-graphnet.models.graphs.utils", false], [106, "module-graphnet.models.model", false], [107, "module-graphnet.models.rnn", false], [108, "module-graphnet.models.rnn.node_rnn", false], [109, "module-graphnet.models.standard_averaged_model", false], [110, "module-graphnet.models.standard_model", false], [111, "module-graphnet.models.task", false], [112, "module-graphnet.models.task.classification", false], [113, "module-graphnet.models.task.reconstruction", false], [114, "module-graphnet.models.task.task", false], [115, "module-graphnet.models.transformer", false], [116, "module-graphnet.models.transformer.iseecube", false], [117, "module-graphnet.models.utils", false], [118, "module-graphnet.training", false], [119, "module-graphnet.training.callbacks", false], [120, "module-graphnet.training.labels", false], [121, "module-graphnet.training.loss_functions", false], [122, "module-graphnet.training.utils", false], [123, "module-graphnet.training.weight_fitting", false], [124, "module-graphnet.utilities", false], [125, "module-graphnet.utilities.argparse", false], [126, "module-graphnet.utilities.config", false], [127, "module-graphnet.utilities.config.base_config", false], [128, "module-graphnet.utilities.config.configurable", false], [129, "module-graphnet.utilities.config.dataset_config", false], [130, "module-graphnet.utilities.config.model_config", false], [131, "module-graphnet.utilities.config.parsing", false], [132, "module-graphnet.utilities.config.training_config", false], [133, "module-graphnet.utilities.decorators", false], [134, "module-graphnet.utilities.deprecation_tools", false], [135, "module-graphnet.utilities.filesys", false], [136, "module-graphnet.utilities.imports", false], [137, "module-graphnet.utilities.logging", false], [138, "module-graphnet.utilities.maths", false]], "modules (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.modules", false]], "mseloss (class in graphnet.training.loss_functions)": [[121, "graphnet.training.loss_functions.MSELoss", false]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[112, "graphnet.models.task.classification.MulticlassClassificationTask", false]], "name (graphnet.data.extractors.extractor.extractor property)": [[18, "graphnet.data.extractors.extractor.Extractor.name", false]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[95, "graphnet.models.gnn.gnn.GNN.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[112, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[112, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[113, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[113, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[113, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[113, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[113, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[113, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[113, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[114, "graphnet.models.task.task.IdentityTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[114, "graphnet.models.task.task.LearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[114, "graphnet.models.task.task.StandardLearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.task property)": [[114, "graphnet.models.task.task.Task.nb_inputs", false]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[114, "graphnet.models.task.task.StandardFlowTask.nb_inputs", false]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[95, "graphnet.models.gnn.gnn.GNN.nb_outputs", false]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[104, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs", false]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[137, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed", false]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[96, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay", false]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[108, "graphnet.models.rnn.node_rnn.Node_RNN", false]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth", false]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table", false]], "nodeasdomtimeseries (class in graphnet.models.graphs.nodes.nodes)": [[104, "graphnet.models.graphs.nodes.nodes.NodeAsDOMTimeSeries", false]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[104, "graphnet.models.graphs.nodes.nodes.NodeDefinition", false]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[104, "graphnet.models.graphs.nodes.nodes.NodesAsPulses", false]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[35, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter", false]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[119, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end", false]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[109, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[119, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[119, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end", false]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[119, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start", false]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[119, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end", false]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[109, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step", false]], "options (class in graphnet.utilities.argparse)": [[125, "graphnet.utilities.argparse.Options", false]], "orca150 (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.ORCA150", false]], "orca150superdense (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.ORCA150SuperDense", false]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.output_folder", false]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[57, "graphnet.data.utilities.random.pairwise_shuffle", false]], "parquetdataconverter (class in graphnet.data.parquet.deprecated_methods)": [[44, "graphnet.data.parquet.deprecated_methods.ParquetDataConverter", false]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset", false]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[38, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor", false]], "parquetreader (class in graphnet.data.readers.internal_parquet_reader)": [[50, "graphnet.data.readers.internal_parquet_reader.ParquetReader", false]], "parquettosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[46, "graphnet.data.pre_configured.dataconverters.ParquetToSQLiteConverter", false]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[62, "graphnet.data.writers.parquet_writer.ParquetWriter", false]], "parse_graph_definition() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.parse_graph_definition", false]], "parse_labels() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.parse_labels", false]], "path (graphnet.data.dataset.dataset.dataset property)": [[11, "graphnet.data.dataset.dataset.Dataset.path", false]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.path", false]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[104, "graphnet.models.graphs.nodes.nodes.PercentileClusters", false]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[119, "graphnet.training.callbacks.PiecewiseLinearLR", false]], "ponesmall (class in graphnet.datasets.prometheus_datasets)": [[65, "graphnet.datasets.prometheus_datasets.PONESmall", false]], "ponetriangle (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.PONETriangle", false]], "pop_default() (graphnet.utilities.argparse.options method)": [[125, "graphnet.utilities.argparse.Options.pop_default", false]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[113, "graphnet.models.task.reconstruction.PositionReconstruction", false]], "predict() (graphnet.models.standard_model.standardmodel method)": [[110, "graphnet.models.standard_model.StandardModel.predict", false]], "predict_as_dataframe() (graphnet.models.standard_model.standardmodel method)": [[110, "graphnet.models.standard_model.StandardModel.predict_as_dataframe", false]], "prediction_labels (graphnet.models.standard_model.standardmodel property)": [[110, "graphnet.models.standard_model.StandardModel.prediction_labels", false]], "prepare_data() (graphnet.data.curated_datamodule.curateddataset method)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.prepare_data", false]], "prepare_data() (graphnet.data.curated_datamodule.erdahosteddataset method)": [[5, "graphnet.data.curated_datamodule.ERDAHostedDataset.prepare_data", false]], "prepare_data() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.prepare_data", false]], "progressbar (class in graphnet.training.callbacks)": [[119, "graphnet.training.callbacks.ProgressBar", false]], "prometheus (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.Prometheus", false]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS", false]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS", false]], "prometheusextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[42, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusExtractor", false]], "prometheusfeatureextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[42, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusFeatureExtractor", false]], "prometheusreader (class in graphnet.data.readers.prometheus_reader)": [[52, "graphnet.data.readers.prometheus_reader.PrometheusReader", false]], "prometheustruthextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[42, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusTruthExtractor", false]], "publicprometheusdataset (class in graphnet.datasets.prometheus_datasets)": [[65, "graphnet.datasets.prometheus_datasets.PublicPrometheusDataset", false]], "pulse_truth (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.pulse_truth", false]], "pulsemaps (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.pulsemaps", false]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps", false]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.query_database", false]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[11, "graphnet.data.dataset.dataset.Dataset.query_table", false]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table", false]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[15, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table", false]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[99, "graphnet.models.graphs.edges.edges.RadialEdges", false]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[79, "graphnet.models.coarsening.Coarsening.reduce_options", false]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[134, "graphnet.utilities.deprecation_tools.rename_state_dict_entries", false]], "repeatfilter (class in graphnet.utilities.logging)": [[137, "graphnet.utilities.logging.RepeatFilter", false]], "requires_icecube() (in module graphnet.utilities.imports)": [[136, "graphnet.utilities.imports.requires_icecube", false]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[82, "graphnet.models.components.layers.EdgeConvTito.reset_parameters", false]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[59, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve", false]], "rmseloss (class in graphnet.training.loss_functions)": [[121, "graphnet.training.loss_functions.RMSELoss", false]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[90, "graphnet.models.gnn.RNN_tito.RNN_TITO", false]], "run() (graphnet.deployment.deployer.deployer method)": [[68, "graphnet.deployment.deployer.Deployer.run", false]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.run_sql_code", false]], "save() (graphnet.models.model.model method)": [[106, "graphnet.models.model.Model.save", false]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[128, "graphnet.utilities.config.configurable.Configurable.save_config", false]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[129, "graphnet.utilities.config.dataset_config.save_dataset_config", false]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[130, "graphnet.utilities.config.model_config.save_model_config", false]], "save_results() (in module graphnet.training.utils)": [[122, "graphnet.training.utils.save_results", false]], "save_selection() (in module graphnet.training.utils)": [[122, "graphnet.training.utils.save_selection", false]], "save_state_dict() (graphnet.models.model.model method)": [[106, "graphnet.models.model.Model.save_state_dict", false]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.save_to_sql", false]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.seed", false]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.selection", false]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[86, "graphnet.models.detector.icecube.IceCube86.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[86, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[87, "graphnet.models.detector.liquido.LiquidO_v1.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[88, "graphnet.models.detector.prometheus.ARCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[88, "graphnet.models.detector.prometheus.BaikalGVD8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[88, "graphnet.models.detector.prometheus.IceCube86Prometheus.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeDeepCore8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeGen2.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeUpgrade7.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[88, "graphnet.models.detector.prometheus.IceDemo81.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[88, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[88, "graphnet.models.detector.prometheus.ORCA150SuperDense.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[88, "graphnet.models.detector.prometheus.PONETriangle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[88, "graphnet.models.detector.prometheus.TRIDENT1211.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[88, "graphnet.models.detector.prometheus.WaterDemo81.sensor_id_column", false]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[85, "graphnet.models.detector.detector.Detector.sensor_index_name", false]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[85, "graphnet.models.detector.detector.Detector.sensor_position_names", false]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[33, "graphnet.data.extractors.icecube.utilities.collections.serialise", false]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors", false]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[20, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd", false]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[104, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs", false]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[104, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names", false]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[106, "graphnet.models.model.Model.set_verbose_print_recursively", false]], "setlevel() (graphnet.utilities.logging.logger method)": [[137, "graphnet.utilities.logging.Logger.setLevel", false]], "settings (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.Settings", false]], "setup() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.setup", false]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[119, "graphnet.training.callbacks.GraphnetEarlyStopping.setup", false]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[110, "graphnet.models.standard_model.StandardModel.shared_step", false]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[81, "graphnet.models.components.embedding.SinusoidalPosEmb", false]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[81, "graphnet.models.components.embedding.SpacetimeEncoder", false]], "sqlitedataconverter (class in graphnet.data.sqlite.deprecated_methods)": [[54, "graphnet.data.sqlite.deprecated_methods.SQLiteDataConverter", false]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[15, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset", false]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[63, "graphnet.data.writers.sqlite_writer.SQLiteWriter", false]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[125, "graphnet.utilities.argparse.ArgumentParser.standard_arguments", false]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[109, "graphnet.models.standard_averaged_model.StandardAveragedModel", false]], "standardflowtask (class in graphnet.models.task.task)": [[114, "graphnet.models.task.task.StandardFlowTask", false]], "standardlearnedtask (class in graphnet.models.task.task)": [[114, "graphnet.models.task.task.StandardLearnedTask", false]], "standardmodel (class in graphnet.models.standard_model)": [[110, "graphnet.models.standard_model.StandardModel", false]], "std_pool() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.std_pool", false]], "std_pool_x() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.std_pool_x", false]], "stream_handlers (graphnet.utilities.logging.logger property)": [[137, "graphnet.utilities.logging.Logger.stream_handlers", false]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[86, "graphnet.models.detector.icecube.IceCube86.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[86, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column", false]], "string_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[87, "graphnet.models.detector.liquido.LiquidO_v1.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[88, "graphnet.models.detector.prometheus.ARCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[88, "graphnet.models.detector.prometheus.BaikalGVD8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[88, "graphnet.models.detector.prometheus.IceCube86Prometheus.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeDeepCore8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeGen2.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeUpgrade7.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[88, "graphnet.models.detector.prometheus.IceDemo81.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[88, "graphnet.models.detector.prometheus.ORCA150.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[88, "graphnet.models.detector.prometheus.ORCA150SuperDense.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[88, "graphnet.models.detector.prometheus.PONETriangle.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[88, "graphnet.models.detector.prometheus.TRIDENT1211.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[88, "graphnet.models.detector.prometheus.WaterDemo81.string_id_column", false]], "string_index_name (graphnet.models.detector.detector.detector property)": [[85, "graphnet.models.detector.detector.Detector.string_index_name", false]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection", false]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[59, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver", false]], "sum_pool() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.sum_pool", false]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.sum_pool_and_distribute", false]], "sum_pool_x() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.sum_pool_x", false]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[132, "graphnet.utilities.config.training_config.TrainingConfig.target", false]], "target_labels (graphnet.models.standard_model.standardmodel property)": [[110, "graphnet.models.standard_model.StandardModel.target_labels", false]], "task (class in graphnet.models.task.task)": [[114, "graphnet.models.task.task.Task", false]], "teardown() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.teardown", false]], "test_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.test_dataloader", false]], "testdataset (class in graphnet.datasets.test_dataset)": [[66, "graphnet.datasets.test_dataset.TestDataset", false]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[113, "graphnet.models.task.reconstruction.TimeReconstruction", false]], "track (class in graphnet.training.labels)": [[120, "graphnet.training.labels.Track", false]], "train() (graphnet.models.standard_model.standardmodel method)": [[110, "graphnet.models.standard_model.StandardModel.train", false]], "train_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.train_dataloader", false]], "train_eval() (graphnet.models.task.task.task method)": [[114, "graphnet.models.task.task.Task.train_eval", false]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[109, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step", false]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[110, "graphnet.models.standard_model.StandardModel.training_step", false]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[132, "graphnet.utilities.config.training_config.TrainingConfig", false]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[33, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts", false]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[131, "graphnet.utilities.config.parsing.traverse_and_apply", false]], "trident1211 (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.TRIDENT1211", false]], "tridentsmall (class in graphnet.datasets.prometheus_datasets)": [[65, "graphnet.datasets.prometheus_datasets.TRIDENTSmall", false]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH", false]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.truth", false]], "truth_table (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.truth_table", false]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[11, "graphnet.data.dataset.dataset.Dataset.truth_table", false]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[129, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table", false]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[79, "graphnet.models.coarsening.unbatch_edge_index", false]], "uniform (class in graphnet.training.weight_fitting)": [[123, "graphnet.training.weight_fitting.Uniform", false]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE", false]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE", false]], "val_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.val_dataloader", false]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files", false]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[109, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step", false]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[110, "graphnet.models.standard_model.StandardModel.validation_step", false]], "verbose_print (graphnet.models.model.model attribute)": [[106, "graphnet.models.model.Model.verbose_print", false]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[113, "graphnet.models.task.reconstruction.VertexReconstruction", false]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[121, "graphnet.training.loss_functions.VonMisesFisher2DLoss", false]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[121, "graphnet.training.loss_functions.VonMisesFisher3DLoss", false]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[121, "graphnet.training.loss_functions.VonMisesFisherLoss", false]], "warning() (graphnet.utilities.logging.logger method)": [[137, "graphnet.utilities.logging.Logger.warning", false]], "warning_once() (graphnet.utilities.logging.logger method)": [[137, "graphnet.utilities.logging.Logger.warning_once", false]], "waterdemo81 (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.WaterDemo81", false]], "weightfitter (class in graphnet.training.weight_fitting)": [[123, "graphnet.training.weight_fitting.WeightFitter", false]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[125, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments", false]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[86, "graphnet.models.detector.icecube.IceCube86.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[86, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz", false]], "xyz (graphnet.models.detector.liquido.liquido_v1 attribute)": [[87, "graphnet.models.detector.liquido.LiquidO_v1.xyz", false]], "xyz (graphnet.models.detector.prometheus.arca115 attribute)": [[88, "graphnet.models.detector.prometheus.ARCA115.xyz", false]], "xyz (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[88, "graphnet.models.detector.prometheus.BaikalGVD8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[88, "graphnet.models.detector.prometheus.IceCube86Prometheus.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeDeepCore8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeGen2.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeUpgrade7.xyz", false]], "xyz (graphnet.models.detector.prometheus.icedemo81 attribute)": [[88, "graphnet.models.detector.prometheus.IceDemo81.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[88, "graphnet.models.detector.prometheus.ORCA150.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150superdense attribute)": [[88, "graphnet.models.detector.prometheus.ORCA150SuperDense.xyz", false]], "xyz (graphnet.models.detector.prometheus.ponetriangle attribute)": [[88, "graphnet.models.detector.prometheus.PONETriangle.xyz", false]], "xyz (graphnet.models.detector.prometheus.trident1211 attribute)": [[88, "graphnet.models.detector.prometheus.TRIDENT1211.xyz", false]], "xyz (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[88, "graphnet.models.detector.prometheus.WaterDemo81.xyz", false]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[113, "graphnet.models.task.reconstruction.ZenithReconstruction", false]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[113, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa", false]]}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [64, 0, 0, "-", "datasets"], [67, 0, 0, "-", "deployment"], [76, 0, 0, "-", "exceptions"], [78, 0, 0, "-", "models"], [118, 0, 0, "-", "training"], [124, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "curated_datamodule"], [6, 0, 0, "-", "dataclasses"], [7, 0, 0, "-", "dataconverter"], [8, 0, 0, "-", "dataloader"], [9, 0, 0, "-", "datamodule"], [10, 0, 0, "-", "dataset"], [16, 0, 0, "-", "extractors"], [43, 0, 0, "-", "parquet"], [45, 0, 0, "-", "pre_configured"], [47, 0, 0, "-", "readers"], [53, 0, 0, "-", "sqlite"], [55, 0, 0, "-", "utilities"], [60, 0, 0, "-", "writers"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.curated_datamodule": [[5, 1, 1, "", "CuratedDataset"], [5, 1, 1, "", "ERDAHostedDataset"]], "graphnet.data.curated_datamodule.CuratedDataset": [[5, 3, 1, "", "available_backends"], [5, 3, 1, "", "citation"], [5, 3, 1, "", "comments"], [5, 3, 1, "", "creator"], [5, 3, 1, "", "dataset_dir"], [5, 4, 1, "", "description"], [5, 3, 1, "", "event_truth"], [5, 3, 1, "", "events"], [5, 3, 1, "", "experiment"], [5, 3, 1, "", "features"], [5, 4, 1, "", "prepare_data"], [5, 3, 1, "", "pulse_truth"], [5, 3, 1, "", "pulsemaps"], [5, 3, 1, "", "truth_table"]], "graphnet.data.curated_datamodule.ERDAHostedDataset": [[5, 4, 1, "", "prepare_data"]], "graphnet.data.dataclasses": [[6, 1, 1, "", "I3FileSet"], [6, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_files"], [6, 2, 1, "", "modules"], [6, 2, 1, "", "output_folder"]], "graphnet.data.dataconverter": [[7, 1, 1, "", "DataConverter"], [7, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[7, 4, 1, "", "get_map_function"], [7, 4, 1, "", "merge_files"]], "graphnet.data.dataloader": [[8, 1, 1, "", "DataLoader"], [8, 5, 1, "", "collate_fn"], [8, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[8, 4, 1, "", "from_dataset_config"]], "graphnet.data.datamodule": [[9, 1, 1, "", "GraphNeTDataModule"]], "graphnet.data.datamodule.GraphNeTDataModule": [[9, 4, 1, "", "prepare_data"], [9, 4, 1, "", "setup"], [9, 4, 1, "", "teardown"], [9, 3, 1, "", "test_dataloader"], [9, 3, 1, "", "train_dataloader"], [9, 3, 1, "", "val_dataloader"]], "graphnet.data.dataset": [[11, 0, 0, "-", "dataset"], [12, 0, 0, "-", "parquet"], [14, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[11, 1, 1, "", "Dataset"], [11, 1, 1, "", "EnsembleDataset"], [11, 5, 1, "", "load_module"], [11, 5, 1, "", "parse_graph_definition"], [11, 5, 1, "", "parse_labels"]], "graphnet.data.dataset.dataset.Dataset": [[11, 4, 1, "", "add_label"], [11, 4, 1, "", "concatenate"], [11, 4, 1, "", "from_config"], [11, 3, 1, "", "path"], [11, 4, 1, "", "query_table"], [11, 3, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[13, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[13, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[13, 4, 1, "", "query_table"]], "graphnet.data.dataset.sqlite": [[15, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[15, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[15, 4, 1, "", "query_table"]], "graphnet.data.extractors": [[17, 0, 0, "-", "combine_extractors"], [18, 0, 0, "-", "extractor"], [19, 0, 0, "-", "icecube"], [37, 0, 0, "-", "internal"], [39, 0, 0, "-", "liquido"], [41, 0, 0, "-", "prometheus"]], "graphnet.data.extractors.combine_extractors": [[17, 1, 1, "", "CombinedExtractor"]], "graphnet.data.extractors.extractor": [[18, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[18, 3, 1, "", "name"]], "graphnet.data.extractors.icecube": [[20, 0, 0, "-", "i3extractor"], [21, 0, 0, "-", "i3featureextractor"], [22, 0, 0, "-", "i3genericextractor"], [23, 0, 0, "-", "i3hybridrecoextractor"], [24, 0, 0, "-", "i3ntmuonlabelsextractor"], [25, 0, 0, "-", "i3particleextractor"], [26, 0, 0, "-", "i3pisaextractor"], [27, 0, 0, "-", "i3quesoextractor"], [28, 0, 0, "-", "i3retroextractor"], [29, 0, 0, "-", "i3splinempeextractor"], [30, 0, 0, "-", "i3truthextractor"], [31, 0, 0, "-", "i3tumextractor"], [32, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[20, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[20, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[21, 1, 1, "", "I3FeatureExtractor"], [21, 1, 1, "", "I3FeatureExtractorIceCube86"], [21, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [21, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [21, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[22, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[23, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[24, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[25, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[26, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[27, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[28, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[29, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[30, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[31, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[33, 0, 0, "-", "collections"], [34, 0, 0, "-", "frames"], [35, 0, 0, "-", "i3_filters"], [36, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[33, 5, 1, "", "flatten_nested_dictionary"], [33, 5, 1, "", "serialise"], [33, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[34, 5, 1, "", "frame_is_montecarlo"], [34, 5, 1, "", "frame_is_noise"], [34, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[35, 1, 1, "", "I3Filter"], [35, 1, 1, "", "I3FilterMask"], [35, 1, 1, "", "NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[36, 5, 1, "", "break_cyclic_recursion"], [36, 5, 1, "", "cast_object_to_pure_python"], [36, 5, 1, "", "cast_pulse_series_to_pure_python"], [36, 5, 1, "", "get_member_variables"], [36, 5, 1, "", "is_boost_class"], [36, 5, 1, "", "is_boost_enum"], [36, 5, 1, "", "is_icecube_class"], [36, 5, 1, "", "is_method"], [36, 5, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[38, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[38, 1, 1, "", "ParquetExtractor"]], "graphnet.data.extractors.liquido": [[40, 0, 0, "-", "h5_extractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[40, 1, 1, "", "H5Extractor"], [40, 1, 1, "", "H5HitExtractor"], [40, 1, 1, "", "H5TruthExtractor"]], "graphnet.data.extractors.prometheus": [[42, 0, 0, "-", "prometheus_extractor"]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[42, 1, 1, "", "PrometheusExtractor"], [42, 1, 1, "", "PrometheusFeatureExtractor"], [42, 1, 1, "", "PrometheusTruthExtractor"]], "graphnet.data.parquet": [[44, 0, 0, "-", "deprecated_methods"]], "graphnet.data.parquet.deprecated_methods": [[44, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.pre_configured": [[46, 0, 0, "-", "dataconverters"]], "graphnet.data.pre_configured.dataconverters": [[46, 1, 1, "", "I3ToParquetConverter"], [46, 1, 1, "", "I3ToSQLiteConverter"], [46, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.readers": [[48, 0, 0, "-", "graphnet_file_reader"], [49, 0, 0, "-", "i3reader"], [50, 0, 0, "-", "internal_parquet_reader"], [51, 0, 0, "-", "liquido_reader"], [52, 0, 0, "-", "prometheus_reader"]], "graphnet.data.readers.graphnet_file_reader": [[48, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[48, 3, 1, "", "accepted_extractors"], [48, 3, 1, "", "accepted_file_extensions"], [48, 3, 1, "", "extracor_names"], [48, 4, 1, "", "find_files"], [48, 4, 1, "", "set_extractors"], [48, 4, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[49, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[49, 4, 1, "", "find_files"]], "graphnet.data.readers.internal_parquet_reader": [[50, 1, 1, "", "ParquetReader"]], "graphnet.data.readers.internal_parquet_reader.ParquetReader": [[50, 4, 1, "", "find_files"]], "graphnet.data.readers.liquido_reader": [[51, 1, 1, "", "LiquidOReader"]], "graphnet.data.readers.liquido_reader.LiquidOReader": [[51, 4, 1, "", "find_files"]], "graphnet.data.readers.prometheus_reader": [[52, 1, 1, "", "PrometheusReader"]], "graphnet.data.readers.prometheus_reader.PrometheusReader": [[52, 4, 1, "", "find_files"]], "graphnet.data.sqlite": [[54, 0, 0, "-", "deprecated_methods"]], "graphnet.data.sqlite.deprecated_methods": [[54, 1, 1, "", "SQLiteDataConverter"]], "graphnet.data.utilities": [[56, 0, 0, "-", "parquet_to_sqlite"], [57, 0, 0, "-", "random"], [58, 0, 0, "-", "sqlite_utilities"], [59, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.random": [[57, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[58, 5, 1, "", "attach_index"], [58, 5, 1, "", "create_table"], [58, 5, 1, "", "create_table_and_save_to_sql"], [58, 5, 1, "", "database_exists"], [58, 5, 1, "", "database_table_exists"], [58, 5, 1, "", "get_primary_keys"], [58, 5, 1, "", "query_database"], [58, 5, 1, "", "run_sql_code"], [58, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[59, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[59, 4, 1, "", "resolve"]], "graphnet.data.writers": [[61, 0, 0, "-", "graphnet_writer"], [62, 0, 0, "-", "parquet_writer"], [63, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[61, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[61, 3, 1, "", "expects_merged_dataframes"], [61, 3, 1, "", "file_extension"], [61, 4, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[62, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[62, 4, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[63, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[63, 4, 1, "", "merge_files"]], "graphnet.datasets": [[65, 0, 0, "-", "prometheus_datasets"], [66, 0, 0, "-", "test_dataset"]], "graphnet.datasets.prometheus_datasets": [[65, 1, 1, "", "BaikalGVDSmall"], [65, 1, 1, "", "PONESmall"], [65, 1, 1, "", "PublicPrometheusDataset"], [65, 1, 1, "", "TRIDENTSmall"]], "graphnet.datasets.test_dataset": [[66, 1, 1, "", "TestDataset"]], "graphnet.deployment": [[68, 0, 0, "-", "deployer"], [69, 0, 0, "-", "deployment_module"]], "graphnet.deployment.deployer": [[68, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[68, 4, 1, "", "run"]], "graphnet.deployment.deployment_module": [[69, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.icecube": [[73, 0, 0, "-", "cleaning_module"], [75, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[73, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.inference_module": [[75, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[77, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[77, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[79, 0, 0, "-", "coarsening"], [80, 0, 0, "-", "components"], [84, 0, 0, "-", "detector"], [89, 0, 0, "-", "gnn"], [97, 0, 0, "-", "graphs"], [106, 0, 0, "-", "model"], [107, 0, 0, "-", "rnn"], [109, 0, 0, "-", "standard_averaged_model"], [110, 0, 0, "-", "standard_model"], [111, 0, 0, "-", "task"], [115, 0, 0, "-", "transformer"], [117, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[79, 1, 1, "", "AttributeCoarsening"], [79, 1, 1, "", "Coarsening"], [79, 1, 1, "", "CustomDOMCoarsening"], [79, 1, 1, "", "DOMAndTimeWindowCoarsening"], [79, 1, 1, "", "DOMCoarsening"], [79, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[79, 4, 1, "", "forward"], [79, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[81, 0, 0, "-", "embedding"], [82, 0, 0, "-", "layers"], [83, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[81, 1, 1, "", "FourierEncoder"], [81, 1, 1, "", "SinusoidalPosEmb"], [81, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[81, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[81, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[81, 4, 1, "", "forward"]], "graphnet.models.components.layers": [[82, 1, 1, "", "Attention_rel"], [82, 1, 1, "", "Block"], [82, 1, 1, "", "Block_rel"], [82, 1, 1, "", "DropPath"], [82, 1, 1, "", "DynEdgeConv"], [82, 1, 1, "", "DynTrans"], [82, 1, 1, "", "EdgeConvTito"], [82, 1, 1, "", "Mlp"]], "graphnet.models.components.layers.Attention_rel": [[82, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[82, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[82, 4, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[82, 4, 1, "", "extra_repr"], [82, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[82, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[82, 4, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[82, 4, 1, "", "forward"], [82, 4, 1, "", "message"], [82, 4, 1, "", "reset_parameters"]], "graphnet.models.components.layers.Mlp": [[82, 4, 1, "", "forward"]], "graphnet.models.components.pool": [[83, 5, 1, "", "group_by"], [83, 5, 1, "", "group_pulses_to_dom"], [83, 5, 1, "", "group_pulses_to_pmt"], [83, 5, 1, "", "min_pool"], [83, 5, 1, "", "min_pool_x"], [83, 5, 1, "", "std_pool"], [83, 5, 1, "", "std_pool_x"], [83, 5, 1, "", "sum_pool"], [83, 5, 1, "", "sum_pool_and_distribute"], [83, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[85, 0, 0, "-", "detector"], [86, 0, 0, "-", "icecube"], [87, 0, 0, "-", "liquido"], [88, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[85, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[85, 4, 1, "", "feature_map"], [85, 4, 1, "", "forward"], [85, 3, 1, "", "geometry_table"], [85, 3, 1, "", "sensor_index_name"], [85, 3, 1, "", "sensor_position_names"], [85, 3, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[86, 1, 1, "", "IceCube86"], [86, 1, 1, "", "IceCubeDeepCore"], [86, 1, 1, "", "IceCubeKaggle"], [86, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[86, 4, 1, "", "feature_map"], [86, 2, 1, "", "geometry_table_path"], [86, 2, 1, "", "sensor_id_column"], [86, 2, 1, "", "string_id_column"], [86, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[86, 4, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[86, 4, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[86, 4, 1, "", "feature_map"], [86, 2, 1, "", "geometry_table_path"], [86, 2, 1, "", "sensor_id_column"], [86, 2, 1, "", "string_id_column"], [86, 2, 1, "", "xyz"]], "graphnet.models.detector.liquido": [[87, 1, 1, "", "LiquidO_v1"]], "graphnet.models.detector.liquido.LiquidO_v1": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[88, 1, 1, "", "ARCA115"], [88, 1, 1, "", "BaikalGVD8"], [88, 1, 1, "", "IceCube86Prometheus"], [88, 1, 1, "", "IceCubeDeepCore8"], [88, 1, 1, "", "IceCubeGen2"], [88, 1, 1, "", "IceCubeUpgrade7"], [88, 1, 1, "", "IceDemo81"], [88, 1, 1, "", "ORCA150"], [88, 1, 1, "", "ORCA150SuperDense"], [88, 1, 1, "", "PONETriangle"], [88, 1, 1, "", "Prometheus"], [88, 1, 1, "", "TRIDENT1211"], [88, 1, 1, "", "WaterDemo81"]], "graphnet.models.detector.prometheus.ARCA115": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.BaikalGVD8": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCube86Prometheus": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeDeepCore8": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeGen2": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeUpgrade7": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceDemo81": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150SuperDense": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.PONETriangle": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.TRIDENT1211": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.WaterDemo81": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.gnn": [[90, 0, 0, "-", "RNN_tito"], [91, 0, 0, "-", "convnet"], [92, 0, 0, "-", "dynedge"], [93, 0, 0, "-", "dynedge_jinst"], [94, 0, 0, "-", "dynedge_kaggle_tito"], [95, 0, 0, "-", "gnn"], [96, 0, 0, "-", "icemix"]], "graphnet.models.gnn.RNN_tito": [[90, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[90, 4, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[91, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[91, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[92, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[92, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[93, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[93, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[94, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[94, 4, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[95, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[95, 4, 1, "", "forward"], [95, 3, 1, "", "nb_inputs"], [95, 3, 1, "", "nb_outputs"]], "graphnet.models.gnn.icemix": [[96, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[96, 4, 1, "", "forward"], [96, 4, 1, "", "no_weight_decay"]], "graphnet.models.graphs": [[98, 0, 0, "-", "edges"], [101, 0, 0, "-", "graph_definition"], [102, 0, 0, "-", "graphs"], [103, 0, 0, "-", "nodes"], [105, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[99, 0, 0, "-", "edges"], [100, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[99, 1, 1, "", "EdgeDefinition"], [99, 1, 1, "", "EuclideanEdges"], [99, 1, 1, "", "KNNEdges"], [99, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[99, 4, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[100, 1, 1, "", "MinkowskiKNNEdges"], [100, 5, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[101, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[101, 4, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[102, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[104, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[104, 1, 1, "", "IceMixNodes"], [104, 1, 1, "", "NodeAsDOMTimeSeries"], [104, 1, 1, "", "NodeDefinition"], [104, 1, 1, "", "NodesAsPulses"], [104, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[104, 4, 1, "", "forward"], [104, 3, 1, "", "nb_outputs"], [104, 4, 1, "", "set_number_of_inputs"], [104, 4, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[105, 5, 1, "", "cluster_summarize_with_percentiles"], [105, 5, 1, "", "gather_cluster_sequence"], [105, 5, 1, "", "ice_transparency"], [105, 5, 1, "", "identify_indices"], [105, 5, 1, "", "lex_sort"]], "graphnet.models.model": [[106, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[106, 4, 1, "", "extra_repr"], [106, 4, 1, "", "extra_repr_recursive"], [106, 4, 1, "", "from_config"], [106, 4, 1, "", "load"], [106, 4, 1, "", "load_state_dict"], [106, 4, 1, "", "save"], [106, 4, 1, "", "save_state_dict"], [106, 4, 1, "", "set_verbose_print_recursively"], [106, 2, 1, "", "verbose_print"]], "graphnet.models.rnn": [[108, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[108, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[108, 4, 1, "", "clean_up_data_object"], [108, 4, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[109, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[109, 4, 1, "", "load_state_dict"], [109, 4, 1, "", "on_train_end"], [109, 4, 1, "", "optimizer_step"], [109, 4, 1, "", "training_step"], [109, 4, 1, "", "validation_step"]], "graphnet.models.standard_model": [[110, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[110, 4, 1, "", "compute_loss"], [110, 4, 1, "", "configure_optimizers"], [110, 4, 1, "", "fit"], [110, 4, 1, "", "forward"], [110, 4, 1, "", "inference"], [110, 4, 1, "", "predict"], [110, 4, 1, "", "predict_as_dataframe"], [110, 3, 1, "", "prediction_labels"], [110, 4, 1, "", "shared_step"], [110, 3, 1, "", "target_labels"], [110, 4, 1, "", "train"], [110, 4, 1, "", "training_step"], [110, 4, 1, "", "validation_step"]], "graphnet.models.task": [[112, 0, 0, "-", "classification"], [113, 0, 0, "-", "reconstruction"], [114, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[112, 1, 1, "", "BinaryClassificationTask"], [112, 1, 1, "", "BinaryClassificationTaskLogits"], [112, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[113, 1, 1, "", "AzimuthReconstruction"], [113, 1, 1, "", "AzimuthReconstructionWithKappa"], [113, 1, 1, "", "DirectionReconstructionWithKappa"], [113, 1, 1, "", "EnergyReconstruction"], [113, 1, 1, "", "EnergyReconstructionWithPower"], [113, 1, 1, "", "EnergyReconstructionWithUncertainty"], [113, 1, 1, "", "EnergyTCReconstruction"], [113, 1, 1, "", "InelasticityReconstruction"], [113, 1, 1, "", "PositionReconstruction"], [113, 1, 1, "", "TimeReconstruction"], [113, 1, 1, "", "VertexReconstruction"], [113, 1, 1, "", "ZenithReconstruction"], [113, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[113, 2, 1, "", "default_prediction_labels"], [113, 2, 1, "", "default_target_labels"], [113, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[113, 2, 1, "", "default_prediction_labels"], [113, 2, 1, "", "default_target_labels"], [113, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[113, 2, 1, "", "default_prediction_labels"], [113, 2, 1, "", "default_target_labels"], [113, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[113, 2, 1, "", "default_prediction_labels"], [113, 2, 1, "", "default_target_labels"], [113, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[113, 2, 1, "", "default_prediction_labels"], [113, 2, 1, "", "default_target_labels"], [113, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[113, 2, 1, "", "default_prediction_labels"], [113, 2, 1, "", "default_target_labels"], [113, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[113, 2, 1, "", "default_prediction_labels"], [113, 2, 1, "", "default_target_labels"], [113, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[113, 2, 1, "", "default_prediction_labels"], [113, 2, 1, "", "default_target_labels"], [113, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[113, 2, 1, "", "default_prediction_labels"], [113, 2, 1, "", "default_target_labels"], [113, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[113, 2, 1, "", "default_prediction_labels"], [113, 2, 1, "", "default_target_labels"], [113, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[113, 2, 1, "", "default_prediction_labels"], [113, 2, 1, "", "default_target_labels"], [113, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[113, 2, 1, "", "default_prediction_labels"], [113, 2, 1, "", "default_target_labels"], [113, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[113, 2, 1, "", "default_prediction_labels"], [113, 2, 1, "", "default_target_labels"], [113, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[114, 1, 1, "", "IdentityTask"], [114, 1, 1, "", "LearnedTask"], [114, 1, 1, "", "StandardFlowTask"], [114, 1, 1, "", "StandardLearnedTask"], [114, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[114, 3, 1, "", "default_prediction_labels"], [114, 3, 1, "", "default_target_labels"], [114, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[114, 4, 1, "", "compute_loss"], [114, 4, 1, "", "forward"], [114, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[114, 4, 1, "", "compute_loss"], [114, 4, 1, "", "forward"], [114, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[114, 4, 1, "", "compute_loss"], [114, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[114, 3, 1, "", "default_prediction_labels"], [114, 3, 1, "", "default_target_labels"], [114, 4, 1, "", "inference"], [114, 3, 1, "", "nb_inputs"], [114, 4, 1, "", "train_eval"]], "graphnet.models.transformer": [[116, 0, 0, "-", "iseecube"]], "graphnet.models.transformer.iseecube": [[116, 1, 1, "", "ISeeCube"]], "graphnet.models.transformer.iseecube.ISeeCube": [[116, 4, 1, "", "forward"]], "graphnet.models.utils": [[117, 5, 1, "", "array_to_sequence"], [117, 5, 1, "", "calculate_distance_matrix"], [117, 5, 1, "", "calculate_xyzt_homophily"], [117, 5, 1, "", "knn_graph_batch"]], "graphnet.training": [[119, 0, 0, "-", "callbacks"], [120, 0, 0, "-", "labels"], [121, 0, 0, "-", "loss_functions"], [122, 0, 0, "-", "utils"], [123, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[119, 1, 1, "", "GraphnetEarlyStopping"], [119, 1, 1, "", "PiecewiseLinearLR"], [119, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[119, 4, 1, "", "on_fit_end"], [119, 4, 1, "", "on_train_epoch_end"], [119, 4, 1, "", "on_validation_end"], [119, 4, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[119, 4, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[119, 4, 1, "", "get_metrics"], [119, 4, 1, "", "init_predict_tqdm"], [119, 4, 1, "", "init_test_tqdm"], [119, 4, 1, "", "init_train_tqdm"], [119, 4, 1, "", "init_validation_tqdm"], [119, 4, 1, "", "on_train_epoch_end"], [119, 4, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[120, 1, 1, "", "Direction"], [120, 1, 1, "", "Label"], [120, 1, 1, "", "Track"]], "graphnet.training.labels.Label": [[120, 3, 1, "", "key"]], "graphnet.training.loss_functions": [[121, 1, 1, "", "BinaryCrossEntropyLoss"], [121, 1, 1, "", "CrossEntropyLoss"], [121, 1, 1, "", "EuclideanDistanceLoss"], [121, 1, 1, "", "LogCMK"], [121, 1, 1, "", "LogCoshLoss"], [121, 1, 1, "", "LossFunction"], [121, 1, 1, "", "MSELoss"], [121, 1, 1, "", "RMSELoss"], [121, 1, 1, "", "VonMisesFisher2DLoss"], [121, 1, 1, "", "VonMisesFisher3DLoss"], [121, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[121, 4, 1, "", "backward"], [121, 4, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[121, 4, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[121, 4, 1, "", "log_cmk"], [121, 4, 1, "", "log_cmk_approx"], [121, 4, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[122, 5, 1, "", "collate_fn"], [122, 1, 1, "", "collator_sequence_buckleting"], [122, 5, 1, "", "get_predictions"], [122, 5, 1, "", "make_dataloader"], [122, 5, 1, "", "make_train_validation_dataloader"], [122, 5, 1, "", "save_results"], [122, 5, 1, "", "save_selection"]], "graphnet.training.weight_fitting": [[123, 1, 1, "", "BjoernLow"], [123, 1, 1, "", "Uniform"], [123, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[123, 4, 1, "", "fit"]], "graphnet.utilities": [[125, 0, 0, "-", "argparse"], [126, 0, 0, "-", "config"], [133, 0, 0, "-", "decorators"], [134, 0, 0, "-", "deprecation_tools"], [135, 0, 0, "-", "filesys"], [136, 0, 0, "-", "imports"], [137, 0, 0, "-", "logging"], [138, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[125, 1, 1, "", "ArgumentParser"], [125, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[125, 2, 1, "", "standard_arguments"], [125, 4, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[125, 4, 1, "", "contains"], [125, 4, 1, "", "pop_default"]], "graphnet.utilities.config": [[127, 0, 0, "-", "base_config"], [128, 0, 0, "-", "configurable"], [129, 0, 0, "-", "dataset_config"], [130, 0, 0, "-", "model_config"], [131, 0, 0, "-", "parsing"], [132, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[127, 1, 1, "", "BaseConfig"], [127, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[127, 4, 1, "", "as_dict"], [127, 4, 1, "", "dump"], [127, 4, 1, "", "load"], [127, 2, 1, "", "model_computed_fields"], [127, 2, 1, "", "model_config"], [127, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[128, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[128, 3, 1, "", "config"], [128, 4, 1, "", "from_config"], [128, 4, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[129, 1, 1, "", "DatasetConfig"], [129, 1, 1, "", "DatasetConfigSaverABCMeta"], [129, 1, 1, "", "DatasetConfigSaverMeta"], [129, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[129, 4, 1, "", "as_dict"], [129, 2, 1, "", "features"], [129, 2, 1, "", "graph_definition"], [129, 2, 1, "", "index_column"], [129, 2, 1, "", "labels"], [129, 2, 1, "", "loss_weight_column"], [129, 2, 1, "", "loss_weight_default_value"], [129, 2, 1, "", "loss_weight_table"], [129, 2, 1, "", "model_computed_fields"], [129, 2, 1, "", "model_config"], [129, 2, 1, "", "model_fields"], [129, 2, 1, "", "node_truth"], [129, 2, 1, "", "node_truth_table"], [129, 2, 1, "", "path"], [129, 2, 1, "", "pulsemaps"], [129, 2, 1, "", "seed"], [129, 2, 1, "", "selection"], [129, 2, 1, "", "string_selection"], [129, 2, 1, "", "truth"], [129, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[130, 1, 1, "", "ModelConfig"], [130, 1, 1, "", "ModelConfigSaverABC"], [130, 1, 1, "", "ModelConfigSaverMeta"], [130, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[130, 2, 1, "", "arguments"], [130, 4, 1, "", "as_dict"], [130, 2, 1, "", "class_name"], [130, 2, 1, "", "model_computed_fields"], [130, 2, 1, "", "model_config"], [130, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[131, 5, 1, "", "get_all_grapnet_classes"], [131, 5, 1, "", "get_graphnet_classes"], [131, 5, 1, "", "is_graphnet_class"], [131, 5, 1, "", "is_graphnet_module"], [131, 5, 1, "", "list_all_submodules"], [131, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[132, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[132, 2, 1, "", "dataloader"], [132, 2, 1, "", "early_stopping_patience"], [132, 2, 1, "", "fit"], [132, 2, 1, "", "model_computed_fields"], [132, 2, 1, "", "model_config"], [132, 2, 1, "", "model_fields"], [132, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[134, 5, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[135, 5, 1, "", "find_i3_files"], [135, 5, 1, "", "has_extension"], [135, 5, 1, "", "is_gcd_file"], [135, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[136, 5, 1, "", "has_icecube_package"], [136, 5, 1, "", "has_torch_package"], [136, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[137, 1, 1, "", "Logger"], [137, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[137, 4, 1, "", "critical"], [137, 4, 1, "", "debug"], [137, 4, 1, "", "error"], [137, 3, 1, "", "file_handlers"], [137, 3, 1, "", "handlers"], [137, 4, 1, "", "info"], [137, 4, 1, "", "setLevel"], [137, 3, 1, "", "stream_handlers"], [137, 4, 1, "", "warning"], [137, 4, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[137, 4, 1, "", "filter"], [137, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[138, 5, 1, "", "eps_like"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:exception"}, "terms": {"": [0, 7, 8, 9, 11, 13, 15, 33, 44, 46, 48, 51, 52, 54, 61, 63, 68, 81, 85, 91, 92, 101, 110, 114, 117, 119, 123, 125, 129, 130, 137, 138, 141, 142, 143, 144, 146, 147, 148], "0": [9, 11, 13, 15, 44, 46, 49, 54, 59, 73, 79, 82, 83, 90, 91, 92, 94, 99, 100, 102, 105, 108, 117, 120, 121, 122, 129, 142, 143, 145, 146, 148], "000": 142, "001": [143, 148], "01": [143, 148], "0221": 143, "02_data": 143, "03042": 93, "03762": 81, "04616": 121, "04_ensemble_dataset": 143, "06": 140, "06166": 99, "0e04": 146, "0e4": 146, "1": [0, 7, 9, 11, 13, 18, 33, 44, 46, 54, 59, 62, 65, 68, 79, 82, 83, 90, 92, 94, 96, 99, 100, 102, 105, 108, 112, 113, 114, 117, 119, 120, 121, 122, 123, 129, 141, 142, 143, 144, 145, 147, 148], "10": [9, 65, 86, 87, 88, 104, 105, 125, 142, 143, 146, 148], "100": 142, "1000": [142, 143], "10000": [11, 13, 15, 59, 81], "1088": 143, "11": [143, 145], "12": [59, 96, 116, 129, 142, 143], "120": 143, "128": [81, 91, 92, 94, 125, 142, 143, 148], "13": 59, "14": [59, 129, 142, 143], "1536": 116, "15674": 81, "16": [59, 81, 90, 116, 129, 142, 143, 148], "17": 143, "1706": 81, "1748": 143, "1809": 99, "1812": 121, "192": 96, "196": 116, "1e6": 114, "2": [9, 33, 44, 54, 82, 83, 90, 92, 94, 99, 102, 105, 108, 113, 117, 121, 129, 142, 143, 145, 148], "20": [11, 13, 15, 59, 137, 143, 145, 146, 148], "200": [142, 146], "200000": 62, "2018": 140, "2019": 121, "2020": [0, 144, 147], "21": [140, 142, 143], "2209": 93, "2310": 81, "256": [92, 94, 116], "26": 142, "2d": 121, "2nd": [81, 96], "3": [83, 90, 91, 94, 100, 105, 108, 113, 116, 117, 121, 140, 143, 145, 146], "30": 146, "300": [142, 146], "32": [81, 96, 116], "336": [92, 94], "384": [81, 96, 116], "39": [0, 144, 147], "3d": [113, 121], "4": [82, 93, 96, 113, 143, 146, 148], "40": 146, "400": 63, "42": 9, "5": [11, 13, 15, 59, 90, 108, 125, 141, 142, 143, 145, 146, 148], "50": [104, 105, 125, 146], "500": [105, 146], "50000": [59, 129, 142, 143], "5001": 142, "59": 145, "6": [81, 83, 96, 116], "64": 90, "7": [73, 83], "700": 121, "768": 104, "8": [82, 83, 90, 92, 94, 102, 108, 121, 122, 140, 142, 143, 145, 148], "80": [143, 148], "86": [21, 86], "890778": [0, 144, 147], "9": 9, "90": [104, 105], "A": [5, 7, 9, 11, 35, 48, 49, 50, 51, 52, 58, 63, 65, 66, 68, 69, 73, 83, 101, 102, 105, 106, 112, 114, 117, 121, 123, 127, 129, 130, 132, 141, 142, 143, 146, 148], "AND": 121, "AS": 121, "As": [92, 148], "BE": 121, "BUT": 121, "But": 148, "By": [0, 44, 46, 49, 54, 114, 142, 143, 144, 147, 148], "FOR": 121, "For": [36, 104, 119, 142, 143, 148], "IN": 121, "If": [5, 11, 13, 20, 22, 35, 63, 65, 66, 81, 82, 92, 96, 101, 104, 105, 106, 114, 119, 123, 140, 141, 143, 148], "In": [44, 46, 48, 49, 54, 61, 129, 130, 141, 143, 145], "It": [1, 5, 33, 58, 73, 81, 105, 112, 114, 140, 142, 143, 148], "NO": 121, "NOT": [58, 121, 143], "No": [0, 143, 144, 147], "OF": 121, "ONE": 65, "OR": 121, "On": 5, "One": 143, "Or": 142, "Such": 58, "THE": 121, "TO": 121, "That": [11, 13, 15, 92, 113, 120, 143, 148], "The": [0, 7, 9, 11, 13, 15, 17, 33, 36, 44, 46, 54, 58, 61, 62, 63, 68, 69, 73, 75, 79, 81, 82, 83, 90, 92, 94, 96, 99, 101, 105, 108, 112, 113, 114, 116, 117, 119, 120, 121, 134, 141, 142, 144, 146, 147], "Then": [5, 140], "There": [143, 148], "These": [0, 48, 61, 63, 101, 140, 142, 143, 144, 146, 147, 148], "To": [142, 143, 145, 146, 148], "WITH": 121, "Will": [5, 65, 66, 68, 73, 75, 99, 141], "With": [143, 146, 148], "_": 143, "__": [33, 36, 143], "_____________________": 121, "__call__": [18, 20, 48, 69, 141, 142, 143, 146], "__fields__": [127, 129, 130, 132], "__init__": [129, 130, 141, 142, 143, 148], "_accepted_extractor": [141, 146], "_accepted_file_extens": [141, 146], "_and_": 92, "_column_nam": 141, "_construct_edg": 99, "_definition_": 143, "_extractor": [141, 146], "_extractor_nam": [141, 146], "_file_extens": 141, "_file_hash": 5, "_fit_weight": 123, "_forward": 148, "_indic": [11, 13], "_layer": 148, "_lrschedul": 119, "_may_": [11, 13], "_merge_datafram": 141, "_pred": 114, "_save_fil": 141, "_sensor_tim": 146, "_sensor_xyz": 146, "_tabl": 141, "_verify_column": 141, "_x_": 143, "a__b": 33, "ab": [59, 121, 129, 142, 143], "abc": [7, 11, 18, 48, 61, 68, 106, 120, 123, 128, 129, 130], "abcmeta": [129, 130], "abil": 142, "abl": [33, 104, 141, 143, 145, 146, 148], "about": [106, 127, 129, 130, 132, 142, 143, 146], "abov": [121, 123, 142, 143, 146, 148], "absopt": 104, "absorpt": 105, "abstract": [1, 5, 11, 61, 85, 95, 101, 114, 128, 143], "abstractmethod": 142, "acceler": 1, "accept": [48, 140, 148], "accepted_extractor": [48, 141], "accepted_file_extens": [48, 141], "access": [120, 142], "accompani": [44, 46, 49, 54, 143], "accord": [79, 83, 99, 101, 102, 105], "achiev": 145, "achitectur": 148, "across": [1, 2, 11, 13, 15, 36, 55, 68, 83, 110, 121, 124, 125, 126, 137, 146], "act": [114, 121, 143, 148], "action": 121, "activ": [82, 90, 92, 104, 108, 110, 114, 140], "activation_lay": 92, "actual": [143, 148], "ad": [7, 11, 13, 15, 21, 44, 46, 54, 81, 92, 96, 101, 104, 105], "adam": [143, 148], "adapt": [143, 148], "add": [11, 82, 92, 125, 134, 140, 143, 146], "add_count": [104, 105], "add_global_variables_after_pool": [92, 143, 148], "add_ice_properti": 104, "add_inactive_sensor": 101, "add_label": [11, 142, 143], "add_norm_lay": 92, "add_to_databas": 123, "addit": [48, 61, 79, 82, 110, 121, 123, 141, 143, 148], "additional_attribut": [110, 122, 143, 148], "address": 148, "adher": [140, 148], "adjac": 85, "adjust": 148, "advanc": [1, 83], "after": [9, 82, 90, 92, 94, 119, 125, 129, 142, 143, 148], "again": [143, 148], "against": 5, "aggr": 82, "aggreg": [82, 83], "agnost": [0, 144, 147, 148], "agreement": [0, 140, 144, 147], "ai": 143, "aim": [0, 1, 140, 143, 144, 147], "algorithm": 25, "all": [1, 5, 11, 13, 15, 17, 18, 20, 22, 35, 58, 63, 65, 66, 73, 81, 82, 83, 85, 92, 95, 100, 101, 106, 121, 127, 128, 129, 130, 131, 132, 137, 140, 141, 142, 143, 146, 148], "allow": [0, 5, 38, 67, 78, 83, 119, 127, 132, 142, 143, 144, 147, 148], "along": [105, 143, 148], "alongsid": [143, 148], "alreadi": 58, "also": [7, 11, 13, 15, 59, 90, 129, 141, 142, 143, 146, 148], "alter": 101, "altern": [92, 121, 140], "alwai": 122, "amount": 90, "an": [0, 18, 36, 44, 46, 49, 54, 59, 101, 108, 109, 121, 135, 137, 140, 141, 143, 144, 145, 146, 147, 148], "anaconda": 145, "analys": [67, 143], "analysi": 68, "angl": [113, 120, 143, 148], "ani": [6, 7, 8, 9, 11, 13, 15, 33, 34, 35, 36, 48, 50, 51, 52, 61, 63, 73, 79, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 112, 113, 114, 116, 117, 119, 121, 123, 125, 127, 128, 129, 130, 131, 132, 137, 142, 143, 148], "annot": [129, 130, 132], "anoth": [129, 130, 142, 143], "anyth": 140, "api": [139, 141, 143], "appear": [68, 142, 143], "append": 101, "appli": [7, 11, 13, 15, 44, 46, 47, 48, 54, 68, 82, 83, 90, 91, 92, 93, 94, 95, 96, 105, 108, 110, 112, 114, 116, 131, 141, 142, 143], "applic": [33, 142, 143, 148], "appropri": [58, 114, 143], "approx": 121, "approxim": 63, "ar": [0, 1, 4, 5, 11, 13, 15, 20, 22, 35, 36, 48, 59, 61, 62, 63, 68, 73, 82, 83, 90, 92, 94, 97, 98, 99, 101, 102, 103, 104, 105, 108, 112, 121, 123, 129, 130, 140, 141, 142, 143, 144, 146, 147, 148], "arbitrari": [0, 144, 147], "arca": 88, "arca115": [84, 88], "architectur": [1, 91, 92, 93, 94, 96, 108, 116, 143, 148], "archiv": 122, "area": 1, "arg": [11, 13, 15, 17, 35, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 106, 108, 109, 110, 112, 113, 114, 116, 121, 125, 127, 137, 141, 146], "argpars": [1, 124], "argument": [5, 9, 62, 65, 66, 96, 101, 119, 123, 125, 127, 129, 130, 132, 142, 143, 146, 148], "argumentpars": [124, 125], "aris": 121, "arrai": [18, 30, 33, 104, 105, 117, 141, 142, 143, 146], "array_to_sequ": [78, 117], "arriv": 142, "art": [0, 144, 147], "articl": 143, "artifact": [143, 148], "arxiv": [81, 99, 121], "as_dict": [127, 129, 130, 143, 148], "assert": [141, 142], "assertionerror": 141, "assign": [7, 11, 13, 15, 79, 83, 140, 141], "associ": [73, 75, 101, 105, 113, 114, 121, 141, 142, 143, 146, 148], "assort": 138, "assum": [5, 73, 81, 85, 101, 105, 114, 117], "atmospher": 142, "attach": 58, "attach_index": [55, 58], "attempt": [20, 143], "attent": [81, 82, 96, 116], "attention_rel": [80, 82], "attn_drop": 82, "attn_head_dim": 82, "attn_mask": 82, "attribut": [5, 11, 13, 15, 79, 114, 142, 143, 148], "attributecoarsen": [78, 79], "author": [91, 93, 121], "auto": 114, "autom": 140, "automat": [22, 62, 81, 101, 121, 140, 141, 143, 146], "auxiliari": [4, 81, 143, 148], "avail": [5, 7, 22, 65, 66, 112, 113, 114, 136, 141, 142, 143, 145, 146, 148], "available_backend": 5, "available_t": 141, "averag": [83, 109, 121], "avg": 79, "avg_pool": 79, "avg_pool_x": 79, "avoid": [13, 137, 140], "awai": [1, 143], "azimiuth": 120, "azimuth": [4, 113, 120], "azimuth_kappa": 113, "azimuth_kei": 120, "azimuth_pr": 113, "azimuthreconstruct": [111, 113], "azimuthreconstructionwithkappa": [111, 113], "b": [33, 79, 83, 117, 143, 146, 148], "backbon": [110, 143], "backend": [5, 12, 14, 60, 62, 65, 66, 146], "backward": [105, 121], "baikal": 65, "baikalgvd8": [84, 88], "baikalgvdsmal": [64, 65], "bar": 119, "base": [0, 4, 5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 59, 61, 62, 63, 65, 66, 68, 69, 73, 75, 77, 79, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 106, 108, 109, 110, 112, 113, 114, 116, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 132, 136, 137, 141, 142, 143, 144, 147, 148], "base_config": [124, 126], "baseclass": 68, "baseconfig": [126, 127, 128, 129, 130, 132], "basemodel": [127, 129, 130], "basi": 148, "basic": [1, 143], "batch": [0, 8, 13, 62, 79, 82, 83, 108, 110, 117, 122, 125, 142, 144, 147], "batch_idx": [109, 110, 117], "batch_siz": [8, 9, 117, 122, 142, 143, 148], "batch_split": 122, "becaus": [57, 143, 148], "been": [5, 73, 121, 140, 148], "befor": [11, 13, 92, 100, 108, 114, 119], "behavior": 141, "behaviour": 119, "behind": [143, 148], "being": [20, 73, 81, 112, 114, 142, 143, 148], "beitv2": 82, "belong": 117, "below": [5, 59, 104, 123, 140, 141, 143, 144, 146, 147, 148], "benchmark": 5, "besid": 142, "bessel": 121, "best": [0, 119, 140, 144, 147], "better": 140, "between": [38, 65, 81, 97, 98, 99, 100, 103, 110, 114, 117, 119, 121, 129, 130, 143, 148], "bia": [82, 116], "bias": [143, 148], "big": [143, 148], "biject": 141, "bin": 123, "binari": [112, 121, 148], "binaryclassificationtask": [111, 112, 143, 148], "binaryclassificationtasklogit": [111, 112], "binarycrossentropyloss": [118, 121], "bjoernlow": [118, 123], "black": 140, "blob": [101, 121, 143], "block": [0, 1, 80, 82, 143, 144, 147], "block_rel": [80, 82], "boilerpl": 148, "bool": [8, 34, 35, 36, 58, 59, 61, 73, 81, 82, 90, 92, 94, 96, 101, 104, 105, 106, 110, 116, 119, 121, 122, 123, 125, 131, 134, 135, 136, 137], "boost": 36, "border": 30, "both": [0, 22, 114, 143, 144, 146, 147, 148], "boundari": 30, "box": [141, 143, 148], "branch": 140, "break_cyclic_recurs": [32, 36], "broken": [44, 46, 49, 54], "bucket": [116, 122], "bug": [140, 143], "build": [0, 1, 78, 85, 99, 100, 104, 105, 106, 127, 129, 130, 143, 144, 147, 148], "built": [0, 78, 101, 142, 143, 144, 146, 147, 148], "c": [20, 33, 83, 100, 121, 143], "c_": 121, "cach": 13, "cache_s": 13, "calcul": [73, 81, 99, 102, 104, 110, 117, 120, 121, 142, 143, 148], "calculate_distance_matrix": [78, 117], "calculate_xyzt_homophili": [78, 117], "calibr": [34, 36], "call": [7, 22, 36, 81, 83, 114, 119, 123, 137, 141, 143, 146, 148], "callabl": [8, 11, 36, 82, 83, 85, 86, 87, 88, 101, 109, 114, 122, 123, 127, 129, 130, 131, 136, 146], "callback": [1, 110, 118, 143, 148], "can": [0, 1, 5, 9, 11, 13, 15, 18, 22, 25, 73, 81, 83, 101, 123, 125, 127, 129, 130, 140, 141, 142, 143, 144, 146, 147, 148], "cannot": [36, 108, 127, 132], "capabl": [0, 144, 147], "captur": [143, 148], "care": 142, "carlo": 34, "cascad": 113, "case": [11, 13, 15, 22, 44, 46, 49, 54, 73, 83, 105, 114, 141, 142, 143, 145, 148], "cast": [22, 36], "cast_object_to_pure_python": [32, 36], "cast_pulse_series_to_pure_python": [32, 36], "caus": 143, "caveat": [143, 148], "cc": 120, "cd": 145, "center": 99, "centr": 99, "central": [143, 145], "certain": 143, "cfg": 11, "cframe": 20, "chain": [0, 1, 67, 78, 110, 144, 145, 147], "chang": [121, 140, 143, 148], "charg": [4, 81, 90, 104, 105, 108, 121, 142, 143, 148], "charge_column": 104, "check": [8, 34, 35, 36, 48, 58, 104, 125, 135, 136, 140, 146], "checkpoint": 143, "checkpointing_bas": 143, "chenli2049": 116, "cherenkov": [104, 105, 143, 146, 148], "choic": [142, 143, 148], "choos": [143, 148], "chosen": [99, 105, 137, 142], "chunk": 141, "citat": 5, "cite": 5, "ckpt": [143, 148], "ckpt_path": 110, "claim": 121, "clash": 137, "class": [4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 59, 61, 62, 63, 65, 66, 68, 69, 73, 75, 79, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 106, 108, 109, 110, 112, 113, 114, 116, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 131, 132, 137, 140, 141, 142], "class_nam": [11, 35, 48, 50, 51, 52, 61, 130, 137, 142, 143, 148], "classif": [1, 78, 111, 114, 121, 143, 148], "classifi": [112, 142, 143, 148], "classmethod": [8, 11, 106, 121, 127, 128, 143, 148], "classvar": [127, 129, 130, 132], "clean": [73, 140, 145], "clean_up_data_object": 108, "cleaning_modul": [67, 72], "cleanup": 9, "clear": [137, 142], "cli": 125, "clone": 145, "close": 9, "closest": 119, "cloud": [143, 148], "cls_tocken": 96, "cluster": [79, 82, 83, 90, 92, 94, 104, 105, 108], "cluster_column": 105, "cluster_index": 83, "cluster_indic": 105, "cluster_on": [104, 105], "cluster_summarize_with_percentil": [97, 105], "cnn": [143, 148], "coarsen": [1, 78, 83], "code": [0, 30, 44, 54, 58, 101, 129, 130, 141, 142, 143, 144, 146, 147, 148], "coincid": 104, "collabor": [1, 143, 148], "collate_fn": [3, 8, 118, 122], "collator_sequence_bucklet": [118, 122], "collect": [11, 19, 32, 121, 138, 143, 148], "column": [7, 11, 13, 15, 18, 40, 42, 44, 46, 54, 58, 62, 63, 69, 75, 77, 81, 85, 90, 99, 101, 102, 104, 105, 108, 110, 112, 113, 114, 117, 123, 141, 142, 143, 146, 148], "column_nam": [40, 141], "column_offset": 105, "columnmissingexcept": [11, 13, 76, 77], "com": [96, 101, 116, 121, 143, 145], "combin": [17, 33, 46, 90, 129, 148], "combine_extractor": [3, 16], "combinedextractor": [16, 17], "come": [5, 114, 141, 142, 143, 148], "command": 125, "comment": 5, "commit": 140, "common": [0, 1, 121, 129, 130, 133, 136, 142, 143, 144, 147], "compar": [143, 148], "comparison": [25, 121], "compat": [48, 59, 114, 141, 142, 143, 148], "competit": [81, 82, 86, 94, 96], "complet": [0, 78, 110, 143, 144, 145, 147, 148], "complex": [0, 78, 143, 144, 147], "compon": [0, 1, 78, 81, 82, 83, 106, 110, 143, 144, 147, 148], "compos": [143, 148], "composit": 137, "comprehens": 143, "compress": [5, 142], "compris": [0, 144, 147], "comput": [69, 82, 100, 110, 114, 117, 121, 127, 129, 130, 132, 142, 143], "compute_loss": [110, 114], "compute_minkowski_distance_mat": [98, 100], "computedfieldinfo": [127, 129, 130, 132], "con": [143, 148], "concatdataset": 11, "concaten": [11, 33, 92], "concept": 140, "conceptu": [141, 143], "concret": 143, "condit": 121, "confid": 143, "config": [1, 8, 59, 119, 121, 124, 125, 127, 128, 129, 130, 131, 132, 142, 143, 148], "config_dir": [143, 148], "configdict": [127, 129, 130, 132], "configur": [0, 1, 9, 11, 45, 46, 69, 78, 106, 110, 124, 126, 127, 129, 130, 132, 137, 141, 143, 144, 147, 148], "configure_optim": 110, "conflict": 143, "conform": [127, 129, 130, 132], "conjunct": [18, 114], "conn": 143, "connect": [0, 9, 99, 100, 101, 104, 121, 142, 143, 144, 147], "consequ": 106, "consid": [73, 90, 142, 143, 146], "consist": [81, 125, 137, 140, 143, 148], "consortium": [0, 144, 147], "constant": [1, 3, 139, 142, 143, 148], "constitut": [62, 142], "constraint": 143, "construct": [5, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 38, 40, 42, 48, 50, 51, 52, 59, 61, 62, 63, 65, 66, 69, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 116, 119, 120, 121, 122, 123, 125, 128, 129, 130, 137, 141, 142, 143, 148], "constructor": [141, 142, 143], "consult": 148, "consum": 143, "consumpt": 142, "contain": [0, 5, 6, 7, 11, 13, 15, 16, 17, 20, 33, 34, 37, 38, 39, 42, 44, 46, 48, 49, 50, 54, 58, 61, 62, 63, 64, 65, 68, 69, 73, 75, 77, 92, 97, 98, 100, 101, 102, 103, 105, 106, 114, 117, 121, 123, 125, 141, 142, 143, 144, 146, 147, 148], "containeris": 1, "content": [141, 148], "context": 66, "continu": [0, 121, 143, 144, 147], "contract": 121, "contribut": [0, 143, 144, 147], "contributor": 140, "conveni": [1, 140, 143, 148], "convent": [44, 46, 49, 54], "convers": [7, 37, 38, 42, 44, 54, 104, 142, 143, 146], "convert": [0, 1, 3, 5, 7, 13, 20, 33, 35, 44, 45, 46, 54, 56, 62, 64, 117, 141, 142, 143, 144, 145, 146, 147], "converteddataset": 5, "convnet": [78, 89, 143], "convolut": [82, 91, 92, 93, 94], "coo": 142, "coordin": [30, 85, 100, 104, 105, 117, 143], "copi": [121, 142], "copyright": 121, "core": 95, "correct": 121, "correpond": 57, "correspond": [11, 13, 15, 33, 36, 57, 92, 101, 105, 123, 127, 129, 130, 132, 135, 142, 143, 146, 148], "cosh": 121, "could": [140, 143, 148], "counterpart": 142, "cover": 59, "cpu": [7, 44, 46, 54, 69], "creat": [5, 9, 58, 101, 104, 127, 128, 132, 140, 142, 148], "create_t": [55, 58], "create_table_and_save_to_sql": [55, 58], "creator": 5, "critic": [137, 143, 146], "cross": 121, "crossentropyloss": [118, 121], "csv": [122, 129, 142, 143, 146, 148], "ctx": 121, "cuda": 145, "curat": 5, "curated_datamodul": [1, 3], "curateddataset": [3, 5, 65, 66], "curi": [0, 144, 147], "current": [59, 108, 119, 140, 143], "curv": 123, "custom": [11, 48, 76, 101, 119, 148], "custom_label_funct": 101, "customdomcoarsen": [78, 79], "customis": 119, "cut": 122, "d": [33, 100, 101, 104, 117, 140, 146], "damag": 121, "data": [0, 1, 4, 5, 6, 7, 8, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 99, 101, 102, 104, 108, 109, 110, 114, 116, 117, 120, 122, 125, 127, 129, 132, 136, 139, 142, 143, 144, 147, 148], "data_path": 101, "databas": [5, 15, 58, 63, 123, 142, 143], "database_exist": [55, 58], "database_indic": 122, "database_nam": 63, "database_path": [58, 123], "database_table_exist": [55, 58], "dataclass": [1, 3, 34], "dataconfig": [129, 142], "dataconvert": [1, 3, 45, 61, 62, 63, 143, 146], "dataformat": [60, 63], "datafram": [58, 59, 61, 85, 110, 122, 123, 141, 143, 146, 148], "dataload": [1, 3, 5, 9, 13, 65, 66, 101, 110, 122, 132, 142, 143, 148], "datamodul": [1, 3, 5], "dataset": [1, 3, 5, 8, 9, 12, 13, 14, 15, 24, 59, 62, 65, 66, 77, 90, 101, 108, 125, 129, 139, 146, 148], "dataset_1": [142, 143], "dataset_2": [142, 143], "dataset_3": [142, 143], "dataset_arg": 9, "dataset_config": [124, 126, 143, 148], "dataset_config_path": [143, 148], "dataset_dir": 5, "dataset_refer": 9, "datasetconfig": [8, 11, 59, 126, 129, 142, 148], "datasetconfigsav": 129, "datasetconfigsaverabcmeta": [126, 129], "datasetconfigsavermeta": [126, 129], "db": [63, 122, 123, 142, 143], "db_count_norm": 123, "ddp": [143, 148], "de": 33, "deactiv": [110, 114], "deal": 121, "debug": [137, 143], "decai": 96, "decor": [1, 124, 136], "dedic": 140, "deem": 36, "deep": [0, 5, 61, 63, 82, 94, 96, 141, 143, 144, 145, 146, 147, 148], "deepcopi": 134, "deepcor": [4, 21, 86], "deepic": [89, 96], "def": [141, 142, 143, 146, 148], "default": [5, 7, 9, 11, 13, 15, 20, 22, 30, 33, 42, 44, 46, 49, 54, 58, 62, 63, 65, 66, 68, 69, 73, 75, 81, 82, 83, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 104, 105, 106, 108, 114, 116, 117, 119, 120, 121, 123, 125, 127, 129, 135, 142, 143], "default_prediction_label": [112, 113, 114, 148], "default_target_label": [112, 113, 114, 148], "default_typ": 58, "defin": [5, 11, 13, 15, 59, 65, 66, 69, 73, 75, 83, 97, 98, 99, 101, 103, 105, 122, 127, 129, 130, 132, 142, 143, 146, 148], "definit": [99, 101, 102, 104, 106, 114, 140, 143, 148], "deleg": 137, "demo_ic": 88, "demo_wat": 88, "denot": [18, 119, 120, 141, 146], "dens": 83, "depend": [0, 81, 141, 142, 143, 144, 147, 148], "deploi": [0, 1, 67, 69, 143, 144, 145, 147], "deploy": [0, 1, 69, 73, 75, 101, 139, 143, 144, 146, 147, 148], "deployment_modul": [1, 67], "deploymentmodul": [67, 68, 69, 75], "deprec": [43, 44, 53, 54, 134], "deprecated_method": [3, 43, 53, 67, 70], "deprecation_tool": [1, 124], "depth": [82, 96, 105, 116], "depth_rel": 96, "describ": [5, 140, 143], "descript": [5, 106, 125], "design": [1, 143, 146], "desir": [123, 135], "detail": [1, 5, 90, 106, 119, 142, 143, 145, 146, 148], "detector": [0, 1, 30, 78, 86, 87, 88, 101, 102, 104, 110, 142, 143, 144, 147, 148], "detector_respons": 143, "determin": [68, 90], "develop": [0, 1, 140, 142, 143, 144, 145, 146, 147, 148], "deviat": [101, 102, 105], "devic": 69, "df": [58, 141], "dfg": [0, 144, 147], "dict": [5, 8, 9, 11, 15, 22, 33, 36, 58, 69, 85, 86, 87, 88, 96, 101, 102, 104, 106, 109, 110, 119, 122, 125, 127, 129, 130, 131, 132, 134, 141, 142, 143, 146], "dictionari": [11, 15, 18, 33, 34, 36, 48, 58, 101, 102, 106, 127, 129, 130, 132, 141, 146], "differ": [0, 11, 13, 15, 18, 20, 38, 39, 40, 42, 48, 49, 50, 102, 110, 122, 140, 141, 142, 143, 144, 146, 147, 148], "difficult": 142, "diffier": [143, 148], "digit": 81, "dim": [81, 82], "dimenion": [92, 94], "dimens": [81, 82, 86, 87, 88, 90, 91, 92, 94, 96, 105, 108, 114, 116, 117, 121, 146, 148], "dimension": [81, 82, 142, 148], "dir": 135, "dir_with_fil": [141, 146], "dir_x_pr": 113, "dir_y_pr": 113, "dir_z_pr": 113, "direct": [94, 96, 105, 112, 113, 114, 118, 120, 142, 146], "direction_kappa": 113, "directionreconstructionwithkappa": [111, 113, 143, 148], "directli": [0, 92, 141, 143, 144, 146, 147, 148], "directori": [5, 7, 44, 46, 48, 49, 50, 51, 52, 54, 61, 62, 65, 66, 119, 135, 141, 143, 148], "dirti": 143, "discard_empty_ev": 73, "disconnect": 142, "discuss": 140, "disk": [141, 142, 143], "distanc": [99, 100, 102, 117], "distribut": [83, 92, 113, 114, 121, 123, 145, 148], "distribution_strategi": 110, "ditto": 121, "diverg": 121, "divid": 68, "dk": 5, "dl": [143, 148], "dnn": [24, 31], "do": [0, 69, 73, 121, 129, 130, 140, 142, 143, 144, 147, 148], "do_shuffl": [3, 8], "doc": 143, "docformatt": 140, "docker": 1, "docstr": 140, "document": [121, 146, 148], "doe": [36, 112, 114, 130, 141, 142, 143, 148], "doesn": 58, "dom": [8, 11, 13, 15, 79, 83, 90, 104, 105, 108, 122, 143, 148], "dom_i": [4, 86, 104], "dom_numb": 4, "dom_tim": [4, 104], "dom_typ": 4, "dom_x": [4, 86, 104], "dom_z": [4, 86, 104], "domain": [0, 1, 3, 67, 143, 144, 147], "domandtimewindowcoarsen": [78, 79], "domcoarsen": [78, 79], "don": [119, 141], "done": [22, 83, 137, 140, 141, 143, 146], "dot": 82, "download": [5, 65, 66, 145], "download_dir": [5, 65, 66], "downsid": 142, "drawn": [97, 98, 102, 103, 143, 148], "drhb": 96, "drop": [82, 91], "drop_path": 82, "drop_prob": 82, "dropout": [82, 90, 108], "dropout_prob": 82, "dropout_ratio": 91, "droppath": [80, 82], "dtype": [11, 13, 15, 101, 102, 138, 142, 143, 148], "due": [142, 143, 148], "dummy_pid": [142, 143], "dump": [127, 129, 130, 141, 142, 143], "duplciat": 119, "duplic": 104, "dure": [82, 96, 101, 114, 119, 146], "dynam": [22, 82, 92, 93, 94, 143, 148], "dynedg": [73, 75, 78, 89, 93, 94, 96, 143, 148], "dynedge_arg": 96, "dynedge_jinst": [78, 89], "dynedge_kaggle_tito": [78, 89], "dynedge_layer_s": [92, 143, 148], "dynedgeconv": [80, 82, 92], "dynedgejinst": [89, 93], "dynedgetito": [89, 90, 94], "dyntran": [80, 82, 90, 94], "dyntrans1": 82, "dyntrans_layer_s": [90, 94], "e": [1, 5, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 36, 38, 42, 58, 59, 63, 69, 73, 75, 79, 81, 82, 83, 85, 86, 87, 88, 91, 95, 99, 101, 104, 105, 106, 109, 110, 112, 113, 114, 117, 119, 120, 121, 123, 127, 137, 140, 141, 142, 143, 145, 148], "each": [5, 22, 33, 36, 57, 58, 62, 63, 68, 69, 79, 81, 82, 83, 86, 87, 88, 90, 92, 94, 99, 101, 102, 104, 105, 108, 112, 114, 117, 119, 122, 135, 141, 142, 143, 146, 148], "earli": [119, 125], "early_stopping_pati": [110, 132], "earlystop": 119, "easi": [0, 141, 142, 143, 144, 147, 148], "easili": [1, 143, 148], "ed": 121, "edg": [78, 82, 83, 92, 93, 94, 97, 100, 101, 102, 103, 104, 117, 142, 143, 148], "edge_attr": [142, 143], "edge_definit": 101, "edge_index": [79, 82, 117, 142, 143], "edgeconv": 82, "edgeconvtito": [80, 82], "edgedefinit": [97, 98, 99, 100, 101, 103, 143, 148], "effect": [119, 140, 143, 148], "effort": [140, 142, 146], "either": [0, 5, 9, 11, 15, 20, 65, 66, 121, 141, 143, 144, 147], "elast": 4, "element": [11, 13, 18, 33, 36, 110, 117, 122, 131, 141, 143, 146], "elementwis": 121, "elimin": 73, "els": [73, 120, 141, 146], "ema": 109, "embed": [78, 80, 90, 96, 108, 112, 114, 116], "embedding_dim": [90, 108], "empti": 73, "en": 143, "enabl": [0, 3, 144, 147], "encod": [81, 120], "encount": 143, "encourag": [140, 143], "end": [0, 1, 119, 143, 144, 147], "energi": [4, 113, 114, 123, 142, 143, 146], "energy_cascad": [4, 113], "energy_cascade_pr": 113, "energy_pr": 113, "energy_reco": 75, "energy_sigma": 113, "energy_track": [4, 113], "energy_track_pr": 113, "energyreconstruct": [111, 113, 143, 148], "energyreconstructionwithpow": [111, 113], "energyreconstructionwithuncertainti": [111, 113, 143], "energytcreconstruct": [111, 113], "engin": [0, 144, 147], "enough": 106, "ensemble_dataset": [142, 143], "ensembledataset": [10, 11, 129, 142, 143], "ensur": [36, 57, 121, 137, 140, 148], "entir": [11, 13, 106, 141, 143, 148], "entiti": [143, 148], "entri": [73, 75, 92, 117, 125, 146], "entropi": 121, "enum": 36, "env": 145, "environ": [49, 145], "ep": [138, 143, 148], "epoch": [109, 119, 125], "eps_lik": [124, 138], "equival": [36, 143, 148], "erda": [5, 65], "erdahost": 66, "erdahosteddataset": [3, 5, 65, 66], "error": [121, 137, 140, 141, 143], "especi": 73, "establish": 148, "etc": [0, 121, 137, 142, 143, 144, 146, 147], "euclidean": [99, 140], "euclideandistanceloss": [118, 121], "euclideanedg": [98, 99], "european": [0, 144, 147], "eval": [106, 145], "evalu": [5, 114], "even": 57, "event": [0, 1, 5, 7, 9, 11, 13, 15, 17, 27, 42, 44, 46, 54, 58, 59, 62, 63, 65, 66, 73, 81, 83, 90, 101, 104, 105, 114, 116, 117, 120, 121, 122, 123, 129, 141, 143, 144, 146, 147, 148], "event_no": [7, 11, 13, 15, 44, 46, 54, 58, 59, 62, 63, 123, 129, 142, 143, 148], "event_truth": 5, "events_per_batch": 62, "everi": [141, 143, 146], "everyth": [143, 148], "everytim": 140, "exact": [93, 121, 148], "exactli": [121, 137, 142], "exampl": [7, 33, 59, 79, 83, 105, 117, 121, 129, 130, 141, 142, 145], "example_energy_reconstruction_model": [125, 143, 148], "exceed": 63, "except": [1, 139, 141], "exclud": 22, "exclude_kei": 22, "excluding_valu": 117, "execut": 58, "exist": [0, 11, 13, 15, 58, 78, 120, 129, 142, 143, 144, 147, 148], "exist_ok": [143, 148], "expand": [0, 143, 144, 147], "expans": 96, "expect": [58, 59, 61, 73, 75, 101, 104, 142, 143, 148], "expects_merged_datafram": 61, "experi": [0, 1, 5, 6, 7, 47, 48, 69, 118, 141, 143, 144, 147], "experiment": 148, "expert": 1, "explain": 143, "explicitli": [122, 127, 132], "exponenti": 121, "export": [141, 142, 143, 146, 148], "expos": 1, "express": [106, 121], "extend": [0, 1, 141, 142, 144, 147], "extens": [1, 5, 48, 61, 135], "extern": [142, 143], "extra": [82, 148], "extra_repr": [82, 106], "extra_repr_recurs": 106, "extracor_nam": 48, "extract": [7, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 38, 40, 41, 42, 57, 73, 75, 114, 141, 143, 146], "extractor": [1, 3, 7, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 54, 73, 75], "extractor_nam": [17, 18, 20, 22, 25, 38, 40, 42, 141, 146], "f": [83, 141, 143, 148], "f1": 83, "f2": 83, "f_absorpt": 105, "f_scatter": 105, "factor": [82, 105, 119, 143, 148], "fail": 17, "fals": [35, 73, 81, 82, 92, 96, 101, 106, 116, 119, 121, 123, 129, 143, 148], "fanci": 143, "fashion": 1, "fast": [0, 142, 143, 144, 147], "faster": [0, 141, 142, 144, 147], "favorit": 145, "favourit": 143, "fbeezabg5a": 5, "fc": 83, "featur": [1, 3, 4, 5, 11, 13, 15, 21, 63, 65, 66, 73, 75, 81, 82, 83, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 108, 112, 116, 117, 122, 129, 140, 142, 143, 146, 148], "feature_idx": 105, "feature_map": [85, 86, 87, 88, 146], "feature_nam": 105, "features_subset": [82, 90, 92, 94, 108, 143, 148], "feedforward": 82, "feel": 143, "fetch": 125, "few": [0, 78, 140, 141, 142, 143, 144, 147, 148], "fiber_id": 87, "field": [120, 127, 129, 130, 132, 134, 141, 142, 143, 146], "fieldinfo": [127, 129, 130, 132], "figur": 0, "file": [0, 1, 3, 5, 7, 11, 13, 15, 18, 20, 33, 35, 38, 39, 40, 41, 42, 44, 46, 48, 49, 50, 51, 52, 54, 56, 57, 61, 62, 63, 68, 69, 73, 75, 101, 106, 119, 121, 122, 125, 126, 127, 128, 129, 130, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148], "file_extens": 61, "file_handl": 137, "file_path": [122, 141, 146], "file_read": [7, 141, 146], "filehandl": 137, "filenam": 135, "fileread": [18, 48], "files_list": 57, "filesi": [1, 124], "fill": 5, "filter": [35, 44, 46, 49, 54, 137, 146], "filter_ani": 35, "filter_nam": 35, "filtermask": 35, "final": [0, 7, 83, 119, 129, 142, 143, 144, 147], "find": [20, 100, 135, 142, 143, 146, 148], "find_fil": [48, 49, 50, 51, 52, 141], "find_i3_fil": [124, 135], "first": [81, 90, 100, 108, 119, 122, 140, 143, 146], "fisher": 121, "fit": [9, 110, 121, 123, 132, 143, 148], "fit_weight": 123, "five": 142, "fix": [59, 143], "flag": [21, 73], "flake8": 140, "flatten": 33, "flatten_nested_dictionari": [32, 33], "flexibil": 148, "flexibl": 59, "float": [11, 13, 15, 73, 82, 90, 91, 99, 100, 101, 102, 104, 105, 108, 110, 119, 121, 122, 129, 142], "float32": [11, 13, 15, 101, 102], "float64": 121, "flow": [114, 148], "flowchart": [0, 144, 147], "fly": [142, 143], "fn": [11, 36, 127, 131], "fn_kwarg": 131, "folder": [44, 46, 49, 50, 51, 52, 54, 68, 141], "folk": 143, "follow": [92, 110, 121, 123, 140, 141, 142, 143], "fork": 140, "form": [0, 18, 78, 112, 127, 132, 141, 142, 144, 147, 148], "format": [0, 1, 3, 5, 7, 11, 33, 37, 38, 48, 50, 61, 62, 63, 81, 106, 108, 129, 140, 141, 142, 143, 144, 145, 146, 147, 148], "forward": [79, 81, 82, 85, 90, 91, 92, 93, 94, 95, 96, 99, 101, 104, 108, 110, 114, 116, 121, 148], "found": [36, 44, 46, 49, 54, 62, 105, 121, 142, 143], "four": 81, "fourier": 81, "fourierencod": [80, 81, 96, 116], "fraction": [91, 108, 122], "frame": [19, 20, 22, 32, 35, 36, 75], "frame_is_montecarlo": [32, 34], "frame_is_nois": [32, 34], "framework": [0, 143, 144, 147], "free": [0, 121, 143, 144, 147], "freeli": 143, "frequenc": 81, "friendli": [0, 61, 63, 141, 143, 144, 145, 147], "from": [0, 1, 5, 7, 8, 9, 11, 13, 15, 18, 19, 20, 22, 24, 25, 27, 33, 34, 35, 36, 38, 40, 41, 42, 48, 49, 51, 52, 56, 61, 63, 65, 66, 81, 83, 94, 96, 99, 101, 104, 105, 106, 109, 112, 113, 114, 117, 119, 120, 121, 127, 128, 129, 130, 132, 137, 140, 141, 142, 143, 144, 146, 147, 148], "from_config": [11, 106, 128, 129, 130, 142, 143, 148], "from_dataset_config": [8, 143, 148], "full": [62, 143, 148], "fulli": [141, 143, 148], "func": 143, "function": [0, 7, 8, 11, 20, 36, 38, 42, 57, 58, 73, 75, 79, 82, 83, 86, 87, 88, 92, 101, 105, 106, 114, 117, 121, 122, 124, 129, 130, 131, 134, 135, 136, 138, 142, 144, 146, 147, 148], "fund": [0, 144, 147], "furnish": 121, "further": 73, "furthermor": 108, "g": [1, 5, 11, 13, 15, 17, 18, 20, 30, 33, 36, 58, 59, 63, 73, 75, 83, 101, 104, 105, 114, 117, 123, 137, 140, 142, 143, 145, 148], "galatict": 23, "gamma_1": 82, "gamma_2": 82, "gather": 105, "gather_cluster_sequ": [97, 105], "gcd": [20, 34, 44, 46, 49, 54, 57, 73, 75, 135], "gcd_dict": [34, 36], "gcd_file": [6, 20, 73, 75], "gcd_list": [57, 135], "gcd_rescu": [44, 46, 49, 54, 135], "gcd_shuffl": 57, "gelu": 82, "gener": [0, 5, 9, 11, 13, 15, 22, 35, 48, 61, 65, 68, 73, 75, 81, 97, 98, 101, 102, 103, 112, 121, 142, 143, 144, 146, 147, 148], "geometr": 143, "geometri": [65, 85, 101, 148], "geometry_t": [85, 86, 87, 88, 146], "geometry_table_path": [86, 87, 88, 146], "germani": [0, 144, 147], "get": [18, 34, 58, 85, 119, 122, 143, 148], "get_all_argument_valu": [126, 127], "get_all_grapnet_class": [126, 131], "get_graphnet_class": [126, 131], "get_lr": 119, "get_map_funct": 7, "get_member_vari": [32, 36], "get_metr": 119, "get_om_keys_and_pulseseri": [32, 34], "get_predict": [118, 122], "get_primary_kei": [55, 58], "getting_start": 101, "gev": 65, "gframe": 20, "git": 145, "github": [96, 101, 116, 121, 143, 145], "given": [5, 11, 15, 20, 63, 65, 66, 81, 83, 99, 114, 123, 125, 142, 146], "glob": 141, "global": [2, 4, 90, 92, 94, 106, 143], "global_index": 7, "global_pooling_schem": [90, 92, 94, 143, 148], "gnn": [1, 78, 90, 91, 92, 93, 94, 96, 101, 108, 110, 116, 143, 148], "go": [140, 143], "googl": 140, "got": 141, "gpu": [110, 125, 143, 145, 148], "grab": 114, "grad_output": 121, "gradient_clip_v": 110, "grant": [0, 121, 144, 147], "graph": [0, 1, 8, 11, 13, 15, 78, 82, 83, 85, 98, 99, 100, 101, 103, 104, 105, 108, 114, 117, 120, 122, 140, 142, 143, 144, 147, 148], "graph_definit": [5, 11, 13, 15, 65, 66, 78, 97, 122, 129, 142, 143, 148], "graph_definiton": 142, "graphdefinit": [5, 11, 13, 15, 65, 66, 97, 98, 101, 102, 103, 122, 140, 142, 143], "graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 73, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148], "graphnet_file_read": [3, 47, 141, 146], "graphnet_model": 119, "graphnet_writ": [3, 60], "graphnetdatamodul": [3, 5, 9], "graphnetearlystop": [118, 119], "graphnetfileread": [7, 47, 48, 49, 50, 51, 52, 141], "graphnetfilesavemethod": [61, 63], "graphnetwrit": [7, 60, 61, 62, 63, 141], "grapnet": [131, 143], "greatli": [143, 148], "group": [0, 83, 143, 144, 147], "group_bi": [80, 83], "group_pulses_to_dom": [80, 83], "group_pulses_to_pmt": [80, 83], "groupbi": 83, "guarante": [143, 148], "guid": 140, "guidelin": 140, "gvd": [65, 88], "gz": 5, "h5": [40, 51, 141], "h5_extractor": [16, 39], "h5extractor": [7, 39, 40, 48, 141], "h5hitextractor": [39, 40, 141], "h5py": 141, "h5truthextractor": [39, 40, 141], "ha": [0, 5, 36, 58, 73, 91, 105, 121, 135, 141, 142, 143, 144, 145, 146, 147, 148], "had": 146, "hadron": 113, "hand": [22, 142, 143], "handi": 57, "handl": [22, 121, 125, 134, 137, 141, 142, 143], "handler": 137, "happen": [123, 142, 146], "hard": [30, 104], "has_extens": [124, 135], "has_icecube_packag": [124, 136], "has_torch_packag": [124, 136], "have": [1, 5, 13, 22, 44, 46, 49, 54, 58, 59, 63, 83, 96, 101, 105, 114, 140, 142, 143, 146, 148], "head": [82, 90, 94, 96, 114, 116, 148], "head_dim": 82, "head_siz": 96, "heavi": 141, "help": [73, 75, 125, 140, 142, 143, 146, 148], "here": [101, 140, 142, 143, 145, 146, 148], "herebi": 121, "hidden": [81, 82, 90, 92, 93, 108], "hidden_dim": [96, 116], "hidden_featur": 82, "hidden_s": [108, 112, 113, 114, 143, 148], "high": [0, 143, 144, 147], "higher": 142, "highest_protocol": 141, "hint": 140, "hit": [8, 122, 142, 143, 146], "hitdata": 40, "hlc": 104, "hlc_name": 104, "hold": [101, 141, 146, 148], "holder": 121, "home": [86, 87, 88, 125, 141, 146], "homophili": 117, "hook": 140, "horizon": [0, 144, 147], "host": [5, 65, 146], "how": [5, 97, 98, 103, 141, 143, 148], "howev": [44, 46, 49, 54, 142, 143], "html": 143, "http": [5, 96, 99, 101, 116, 121, 140, 143, 145], "human": 143, "hybrid": 23, "hyperparamet": [130, 143, 148], "i": [0, 1, 5, 9, 11, 13, 15, 17, 18, 20, 22, 33, 34, 35, 36, 38, 40, 42, 44, 46, 49, 54, 57, 58, 59, 62, 63, 68, 73, 75, 79, 81, 82, 83, 91, 92, 96, 99, 101, 104, 105, 108, 113, 114, 117, 119, 120, 121, 122, 123, 125, 127, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148], "i3": [1, 20, 34, 35, 36, 44, 46, 49, 54, 57, 68, 73, 75, 135, 143, 145], "i3_fil": [6, 20], "i3_filt": [19, 32, 44, 46, 49, 54], "i3_list": [57, 135], "i3_shuffl": 57, "i3calibr": 34, "i3deploy": [6, 67, 72], "i3extractor": [7, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 44, 46, 48, 54], "i3featureextractor": [4, 16, 19, 73, 75], "i3featureextractoricecube86": [19, 21], "i3featureextractoricecubedeepcor": [19, 21], "i3featureextractoricecubeupgrad": [19, 21], "i3fileset": [3, 6, 48, 49], "i3filt": [32, 35, 44, 46, 49, 54], "i3filtermask": [32, 35], "i3fram": [19, 22, 34, 36, 73, 75], "i3galacticplanehybridrecoextractor": [19, 23], "i3genericextractor": [16, 19], "i3hybridrecoextractor": [16, 19], "i3inferencemodul": [72, 73, 75], "i3mctre": 30, "i3modul": [1, 67, 69], "i3ntmuonlabelextractor": [19, 24], "i3ntmuonlabelsextractor": [16, 19], "i3particl": 25, "i3particleextractor": [16, 19], "i3pisaextractor": [16, 19], "i3pulsecleanermodul": [72, 73], "i3pulsenoisetruthflagicecubeupgrad": [19, 21], "i3quesoextractor": [16, 19], "i3read": [3, 44, 46, 47, 54], "i3retroextractor": [16, 19], "i3splinempeextractor": [16, 19], "i3splinempeicextractor": [19, 29], "i3toparquetconvert": [44, 45, 46], "i3tosqliteconvert": [45, 46, 54], "i3truthextractor": [4, 16, 19], "i3tumextractor": [16, 19], "ic": [94, 96, 104], "ice_arg": 104, "ice_transpar": [97, 105], "icecub": [1, 3, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 44, 46, 49, 54, 67, 73, 75, 78, 82, 84, 94, 96, 104, 105, 136, 143, 148], "icecube86": [4, 84, 86, 88], "icecube86prometheu": [84, 88], "icecube_deepcor": 88, "icecube_gen2": 88, "icecube_upgrad": [86, 88], "icecubedeepcor": [84, 86], "icecubedeepcore8": [84, 88], "icecubegen2": [84, 88], "icecubekaggl": [84, 86], "icecubeupgrad": [84, 86], "icecubeupgrade7": [84, 88], "icedemo81": [84, 88], "icemix": [78, 89], "icemixnod": [103, 104], "icetrai": [34, 36, 44, 46, 49, 54, 69, 136, 145], "icetray_verbos": [44, 46, 49, 54], "id": [5, 7, 9, 13, 44, 46, 54, 63, 85, 101, 122, 141, 142, 143, 146], "id_column": 104, "ideal": 148, "ident": [83, 114], "identifi": [7, 11, 13, 15, 30, 104, 105, 117, 129, 130, 146], "identify_indic": [97, 105], "identitytask": [111, 112, 114], "ie": 90, "ignor": [11, 13, 15, 36, 62], "illustr": [0, 140, 141, 144, 147], "imag": [0, 1, 140, 143, 144, 147, 148], "impact": 96, "implement": [1, 5, 18, 20, 48, 61, 69, 82, 90, 91, 92, 93, 94, 96, 99, 108, 116, 121, 140, 141, 143, 148], "impli": 121, "import": [0, 1, 5, 58, 78, 124, 141, 142, 143, 144, 146, 147, 148], "impos": [11, 13], "improv": [0, 1, 125, 143, 144, 147, 148], "in_featur": 82, "inaccur": 105, "inact": 101, "includ": [1, 5, 13, 65, 66, 82, 104, 110, 121, 127, 140, 142, 143, 146, 148], "include_dynedg": 96, "incompat": 143, "incorpor": 81, "increas": [0, 119, 144, 147], "indent": 106, "independ": [68, 141], "index": [1, 7, 11, 13, 15, 36, 58, 62, 83, 85, 90, 100, 105, 108, 119, 142, 143, 148], "index_column": [7, 11, 13, 15, 44, 46, 54, 58, 59, 62, 63, 122, 123, 129, 142, 143], "indic": [59, 77, 83, 90, 100, 105, 108, 119, 125, 140, 143, 148], "indicesfor": 34, "indici": [11, 13, 15, 34, 59, 121], "individu": [0, 11, 13, 15, 83, 92, 117, 142, 144, 147, 148], "industri": [0, 3, 144, 147], "inelast": [4, 113], "inelasticity_pr": 113, "inelasticityreconstruct": [111, 113], "inf": 117, "infer": [0, 1, 63, 67, 69, 73, 75, 110, 114, 143, 144, 147], "inference_modul": [67, 72], "info": [137, 143], "inform": [5, 11, 13, 15, 17, 18, 20, 22, 30, 38, 40, 42, 65, 66, 101, 104, 105, 106, 141, 142, 143, 146, 148], "ingest": [0, 1, 3, 84, 144, 147], "inherit": [5, 18, 20, 36, 48, 61, 85, 104, 121, 137, 141, 142, 143, 148], "init_fn": [129, 130], "init_global_index": [3, 7], "init_predict_tqdm": 119, "init_test_tqdm": 119, "init_train_tqdm": 119, "init_validation_tqdm": 119, "init_valu": 82, "initi": [7, 35, 49, 63, 68, 82, 90, 96, 100], "initial_st": 42, "initialis": [130, 143, 148], "injection_azimuth": [4, 142, 143], "injection_bjorkeni": [4, 142, 143], "injection_bjorkenx": [4, 142, 143], "injection_column_depth": [4, 142, 143], "injection_energi": [4, 142, 143], "injection_interaction_typ": [4, 142, 143], "injection_position_i": [4, 142, 143], "injection_position_x": [4, 142, 143], "injection_position_z": [4, 142, 143], "injection_typ": [4, 142, 143], "injection_zenith": [4, 142, 143, 148], "innov": [0, 144, 147], "input": [5, 7, 11, 13, 15, 44, 46, 48, 49, 54, 61, 65, 66, 68, 73, 75, 81, 82, 86, 90, 91, 92, 93, 94, 95, 96, 101, 102, 104, 108, 112, 114, 116, 117, 127, 132, 134, 141, 142, 143, 146, 148], "input_dim": [82, 148], "input_dir": [141, 146], "input_featur": [85, 101], "input_feature_nam": [85, 101, 102, 104], "input_fil": [48, 68], "ins": 85, "insid": 142, "inspect": [143, 148], "instal": [140, 143], "instanc": [11, 18, 20, 30, 36, 38, 40, 42, 44, 46, 49, 54, 101, 106, 120, 122, 128, 130, 141, 142, 143, 148], "instanti": [7, 9, 130, 141, 142, 146], "instead": [20, 44, 46, 49, 54, 121, 143, 148], "int": [5, 7, 8, 9, 11, 13, 15, 24, 27, 35, 44, 46, 48, 49, 50, 51, 52, 54, 59, 61, 62, 63, 68, 81, 82, 83, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 112, 113, 114, 116, 117, 119, 121, 122, 123, 125, 129, 132, 137, 141, 148], "integ": [58, 90, 92, 93, 121, 142, 143], "integer_primary_kei": 58, "integr": 148, "intend": [90, 108, 143], "interact": [113, 120, 142, 143], "interaction_kei": 120, "interaction_tim": [4, 113], "interaction_time_pr": 113, "interaction_typ": [4, 120], "interchang": [143, 148], "interfac": [0, 129, 130, 143, 144, 145, 146, 147], "interim": [7, 60, 61, 62, 63, 141], "intermedi": [0, 1, 3, 7, 11, 91, 143, 144, 147], "intern": [3, 16, 38, 46, 50], "internal_parquet_read": [3, 47], "interpol": [105, 119], "interpret": 112, "interv": [81, 143, 148], "intract": 142, "introduc": 143, "intuit": [137, 148], "invers": 114, "invert": 114, "involv": 59, "io": [140, 143], "iop": 143, "iopscienc": 143, "is_boost_class": [32, 36], "is_boost_enum": [32, 36], "is_gcd_fil": [124, 135], "is_graphnet_class": [126, 131], "is_graphnet_modul": [126, 131], "is_i3_fil": [124, 135], "is_icecube_class": [32, 36], "is_method": [32, 36], "is_typ": [32, 36], "iseecub": [78, 115], "isinst": 141, "isn": 36, "issu": [143, 148], "iter": 11, "its": [36, 108, 142, 143, 148], "itself": [36, 114, 141, 143, 148], "iv": 121, "jacobian": 114, "job": 146, "join": [141, 143], "json": [33, 129, 142, 143], "just": [5, 83, 141, 142, 143, 148], "k": [82, 90, 92, 94, 99, 102, 108, 117, 121], "kaggl": [4, 81, 82, 86, 94, 96], "kappa": [113, 121], "kappa_switch": 121, "karg": [106, 109], "keep": [18, 20, 38, 40, 42, 104, 141], "kei": [11, 22, 33, 34, 36, 58, 63, 82, 83, 104, 120, 129, 130, 141, 142, 143, 146], "kept": 35, "key_padding_mask": 82, "keyword": [119, 127, 132], "kind": [121, 146], "km3net": [143, 148], "knn_graph_batch": [78, 117], "knnedg": [98, 99], "knngraph": [97, 102, 142, 143, 148], "know": 146, "known": 83, "kv": 82, "kwarg": [7, 8, 11, 13, 15, 35, 48, 50, 51, 52, 61, 79, 82, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 106, 108, 109, 110, 112, 113, 114, 116, 119, 121, 123, 127, 129, 130, 137], "l": [105, 117], "label": [1, 11, 15, 24, 27, 91, 101, 110, 114, 118, 122, 129], "lai": 143, "lambda": [106, 143, 148], "land": 143, "larg": [0, 90, 121, 142, 144, 147], "larger": 141, "largest": 105, "last": [92, 108, 112, 113, 114, 119, 122, 148], "last_epoch": 119, "lastli": 146, "latent": [81, 90, 92, 94, 96, 108, 112, 113, 114, 116, 148], "latest": 143, "layer": [0, 78, 80, 83, 90, 91, 92, 93, 94, 96, 108, 112, 113, 114, 144, 147], "layer_s": 82, "layer_size_scal": 93, "layernorm": 82, "ldot": [79, 83], "lead": [142, 143], "learn": [0, 1, 5, 61, 63, 73, 75, 112, 114, 119, 141, 143, 144, 145, 146, 147, 148], "learnabl": [82, 89, 90, 91, 92, 93, 94, 95, 96, 108, 114, 116, 148], "learnedtask": [111, 114], "least": [13, 140, 142, 143], "len": [11, 13, 105, 141, 142], "length": [11, 13, 36, 104, 105, 117, 119], "less": [8, 122, 143, 148], "let": [143, 146, 148], "level": [0, 5, 11, 13, 15, 17, 30, 35, 42, 44, 46, 48, 49, 50, 51, 52, 54, 58, 61, 62, 65, 66, 79, 83, 96, 137, 142, 143, 144, 146, 147], "leverag": 1, "lex_sort": [97, 105], "liabil": 121, "liabl": 121, "lib": [86, 87, 88, 125], "licens": 121, "lift": 141, "light": 100, "lightn": [9, 119, 143, 148], "lightningdatamodul": 9, "lightningmodul": [81, 82, 106, 119, 137, 143, 148], "like": [18, 36, 83, 100, 114, 117, 121, 138, 140, 142, 143, 145, 148], "limit": [104, 121], "line": [119, 125, 141, 142, 146], "linear": [92, 148], "linearli": 119, "liquid": 87, "liquido": [3, 4, 16, 40, 51, 78, 84, 141], "liquido_read": [3, 47], "liquido_v1": [84, 87], "liquidoread": [47, 51, 141], "list": [5, 6, 7, 8, 9, 11, 13, 15, 17, 22, 30, 33, 35, 36, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 73, 75, 79, 82, 83, 85, 90, 92, 94, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 114, 117, 119, 122, 123, 129, 131, 132, 135, 137, 141, 142, 146], "list_all_submodul": [126, 131], "ljvmiranda921": 140, "load": [0, 8, 11, 57, 69, 106, 109, 127, 129, 142, 143, 144, 146, 147], "load_from_checkpoint": [143, 148], "load_modul": [10, 11, 106], "load_state_dict": [106, 109, 143, 148], "loaded_model": [143, 148], "local": [79, 86, 87, 88, 104, 125, 143, 145, 148], "lock": 13, "log": [0, 1, 113, 118, 119, 121, 124, 142, 143, 144, 147, 148], "log10": [114, 123, 143, 148], "log_cmk": 121, "log_cmk_approx": 121, "log_cmk_exact": 121, "log_every_n_step": [110, 143, 148], "log_fold": [35, 48, 50, 51, 52, 61, 137], "log_model": [143, 148], "logcmk": [118, 121], "logcoshloss": [118, 121, 143, 148], "logger": [7, 9, 11, 18, 35, 48, 50, 51, 52, 59, 61, 68, 69, 99, 106, 110, 120, 123, 124, 137, 143, 148], "loggeradapt": 137, "logic": 142, "logit": [112, 121, 148], "logrecord": 137, "long": 142, "longev": [0, 144, 147], "longtensor": [79, 83, 117], "look": [22, 142, 143], "lookup": 131, "loop": [143, 148], "loss": [11, 13, 15, 101, 110, 114, 119, 121, 125, 143, 148], "loss_funct": [1, 114, 118, 143, 148], "loss_weight": [101, 114, 143, 148], "loss_weight_column": [11, 13, 15, 101, 122, 129], "loss_weight_default_valu": [11, 13, 15, 101, 129], "loss_weight_t": [11, 13, 15, 122, 129], "lossfunct": [114, 118, 121, 143], "lot": 140, "lower": [0, 143, 144, 147], "lr": [143, 148], "m": [100, 105, 121], "machin": 1, "made": [143, 148], "magnitud": [0, 144, 147], "mai": [48, 59, 69, 104, 142, 143, 145, 148], "main": [1, 89, 101, 110, 140, 143], "mainli": 36, "major": 114, "make": [0, 7, 104, 123, 129, 130, 140, 141, 142, 143, 144, 146, 147, 148], "make_dataload": [118, 122], "make_train_validation_dataload": [118, 122], "makedir": [143, 148], "manag": [0, 118, 141, 143, 144, 147], "mandatori": 81, "mangl": 36, "mani": [63, 141, 143, 148], "manipul": [33, 97, 98, 103], "map": [7, 11, 13, 15, 21, 22, 58, 86, 87, 88, 101, 102, 114, 127, 129, 130, 132, 143, 146, 148], "mari": [0, 144, 147], "martin": 91, "mask": [101, 117], "masked_entri": 117, "master": 121, "match": [48, 123, 135, 138, 141], "math": [1, 82, 124], "mathbb": 83, "mathbf": [79, 83], "matic": 114, "matric": 82, "matrix": [83, 99, 100, 117, 121, 142], "max": [79, 82, 92, 94, 121, 125, 143, 148], "max_activ": 104, "max_epoch": [110, 143, 148], "max_pool": [79, 83], "max_pool_x": [79, 83], "max_puls": 104, "max_rel_po": 116, "max_table_s": 63, "maximum": [63, 83, 104, 105, 114, 116, 125], "mc": [22, 58], "mc_truth": [18, 42, 142, 143], "mctree": [30, 34], "md": [101, 143], "mean": [0, 11, 13, 15, 78, 92, 94, 105, 121, 130, 141, 142, 143, 144, 147, 148], "meaning": 81, "meant": [141, 143, 148], "measur": [104, 105, 117, 143, 146], "mechan": 82, "meet": 114, "member": [20, 22, 36, 48, 104, 129, 130, 137, 141, 146], "memori": [13, 142], "mention": 143, "merchant": 121, "merg": [7, 61, 62, 63, 121, 141, 142, 146], "merge_fil": [7, 61, 62, 63, 141, 146], "merged_database_nam": 63, "messag": [82, 119, 137, 143], "messagepass": 82, "metaclass": [129, 130], "metadata": [127, 129, 130, 132], "metaproject": 145, "meter": 143, "meth": 143, "method": [5, 7, 9, 11, 13, 15, 18, 20, 32, 33, 34, 36, 43, 44, 48, 53, 54, 61, 62, 63, 65, 66, 69, 82, 83, 85, 105, 113, 121, 123, 141, 143, 148], "metric": [90, 92, 94, 100, 108, 119, 143, 148], "might": [142, 143, 148], "mileston": [119, 143, 148], "million": [63, 65], "min": [79, 83, 92, 94, 143, 148], "min_pool": [79, 80, 83], "min_pool_x": [79, 80, 83], "mind": 143, "minh": 91, "mini": 122, "minim": [142, 143, 146, 148], "minimum": [104, 114], "minkowski": [97, 98], "minkowskiknnedg": [98, 100], "minu": 121, "mise": 121, "miss": 77, "mit": 121, "mix": 17, "ml": [0, 1, 144, 147], "mlp": [80, 81, 82, 92, 96, 116, 148], "mlp_dim": [81, 116], "mlp_ratio": [82, 96], "mode": [110, 114], "model": [0, 1, 5, 67, 69, 73, 75, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 125, 127, 129, 130, 132, 139, 141, 142, 144, 145, 146, 147], "model_computed_field": [127, 129, 130, 132], "model_config": [69, 73, 75, 124, 126, 127, 129, 132, 143, 148], "model_config_path": [143, 148], "model_field": [127, 129, 130, 132], "model_nam": [73, 75], "modelconfig": [69, 73, 75, 106, 126, 129, 130], "modelconfigsav": 130, "modelconfigsaverabc": [126, 130], "modelconfigsavermeta": [126, 130], "modif": [143, 148], "modifi": [121, 143, 148], "modul": [0, 3, 6, 7, 11, 16, 17, 36, 37, 39, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 63, 67, 68, 73, 77, 78, 81, 82, 84, 89, 97, 98, 100, 101, 102, 103, 106, 107, 111, 115, 118, 124, 126, 129, 130, 131, 132, 136, 141, 143, 144, 147, 148], "modular": [0, 78, 141, 143, 144, 147, 148], "moduletyp": 131, "mont": 34, "more": [1, 11, 13, 57, 58, 90, 106, 129, 130, 137, 142, 143, 148], "most": [0, 1, 59, 100, 114, 141, 144, 146, 147, 148], "mryab": 121, "mseloss": [118, 121], "msg": 137, "multi": [82, 92], "multiclassclassificationtask": [111, 112, 143], "multiheadattent": 82, "multiindex": 146, "multipl": [11, 13, 15, 17, 81, 105, 119, 129, 137, 148], "multipli": [82, 119], "multiprocess": [7, 44, 46, 54, 141], "multiprocessing_context": 13, "muon": [24, 142, 148], "must": [13, 17, 48, 49, 58, 61, 79, 119, 123, 140, 141, 142, 143, 146], "my": [142, 143, 146], "my_custom_label": [142, 143], "my_databas": 63, "my_fil": [141, 146], "my_geometry_t": 146, "my_outdir": [141, 146], "my_tabl": 146, "mycustomlabel": [142, 143], "mydetector": 146, "myexperi": 146, "myextractor": 146, "mygraphnetmodel": 148, "mymodel": 148, "mypi": 140, "mypicklewrit": 141, "myread": 146, "n": [18, 79, 83, 100, 117, 121, 142, 143, 146], "n_1": 83, "n_b": 83, "n_cluster": 105, "n_event": [141, 146], "n_featur": [81, 96, 116], "n_freq": 81, "n_head": [82, 90, 94], "n_pmt": 105, "n_puls": [104, 146], "n_rel": 96, "n_worker": 68, "name": [4, 5, 7, 8, 11, 13, 15, 17, 18, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 33, 35, 36, 38, 40, 42, 44, 46, 48, 50, 51, 52, 54, 58, 61, 62, 63, 69, 73, 75, 85, 101, 102, 104, 108, 114, 120, 123, 125, 127, 129, 130, 131, 132, 137, 140, 141, 142, 143, 146, 148], "namespac": [4, 106, 129, 130], "nan": 105, "narg": 125, "nb_dom": 117, "nb_file": 7, "nb_input": [90, 91, 92, 93, 94, 95, 108, 112, 113, 114, 143, 148], "nb_intermedi": 91, "nb_nearest_neighbour": [99, 100, 102, 142, 143, 148], "nb_neighbor": 82, "nb_neighbour": [90, 92, 94, 108, 143, 148], "nb_output": [91, 93, 95, 104, 112, 113, 114, 143, 148], "nb_repeats_allow": 137, "ndarrai": [11, 13, 30, 101, 105, 123, 141], "nearest": [90, 92, 94, 99, 100, 102, 108, 117, 143, 148], "nearli": 148, "necessari": [0, 9, 33, 140, 144, 147], "need": [0, 5, 9, 33, 63, 78, 81, 106, 108, 121, 134, 141, 142, 143, 144, 145, 146, 147, 148], "negat": 83, "neighbour": [82, 90, 92, 94, 99, 100, 102, 108, 117, 143, 148], "nest": 33, "nester": 33, "network": [1, 82, 91, 107, 148], "neural": [1, 107, 148], "neutrino": [0, 1, 20, 42, 49, 82, 94, 96, 105, 116, 142, 143, 144, 146, 147, 148], "new": [0, 1, 17, 82, 104, 127, 132, 140, 141, 143, 144, 147, 148], "new_features_nam": 104, "new_phras": 134, "nfdi": [0, 144, 147], "nn": [0, 78, 82, 99, 102, 144, 147, 148], "no_weight_decai": 96, "node": [11, 13, 15, 78, 79, 83, 90, 91, 92, 94, 97, 98, 99, 101, 102, 108, 117, 142, 143, 148], "node_definit": [101, 102, 142, 143, 148], "node_feature_nam": [104, 142, 143, 148], "node_level": 122, "node_rnn": [78, 90, 107], "node_truth": [11, 13, 15, 122, 129], "node_truth_t": [11, 13, 15, 122, 129, 143], "nodeasdomtimeseri": [103, 104], "nodedefinit": [101, 102, 103, 104, 143, 148], "nodesaspuls": [101, 103, 104, 142, 143, 148], "nodetimernn": 108, "nois": [21, 34, 73, 143], "non": [9, 33, 36, 58, 90, 121, 143], "none": [5, 7, 8, 9, 11, 13, 15, 20, 22, 30, 34, 35, 36, 44, 46, 48, 49, 50, 51, 52, 54, 58, 59, 61, 62, 63, 65, 66, 68, 69, 75, 82, 83, 90, 92, 94, 96, 100, 101, 102, 104, 105, 106, 108, 109, 110, 114, 119, 121, 122, 123, 125, 127, 128, 129, 131, 135, 137, 141, 142, 143, 146, 148], "nonetyp": 129, "noninfring": 121, "norm_lay": 82, "normal": [82, 92, 105, 114, 146], "normalizingflow": 114, "northeren": 24, "note": [11, 13, 15, 49, 62, 63, 105, 130, 143], "notebook": 140, "notic": [63, 117, 121], "notimplementederror": 141, "now": [143, 146, 148], "np": [123, 141], "null": [35, 58, 142, 143, 148], "nullspliti3filt": [32, 35, 44, 46, 49, 54], "num": 125, "num_class": 121, "num_edg": 142, "num_edge_featur": 142, "num_featur": 142, "num_head": [82, 116], "num_lay": [108, 116], "num_nod": 142, "num_puls": 104, "num_register_token": 116, "num_row": [101, 142], "num_work": [7, 8, 9, 46, 62, 122, 141, 142, 143, 146, 148], "number": [0, 5, 7, 11, 13, 15, 18, 44, 46, 54, 59, 62, 63, 68, 81, 82, 83, 90, 91, 92, 93, 94, 95, 96, 99, 100, 102, 104, 105, 108, 112, 113, 114, 116, 117, 119, 122, 123, 125, 141, 142, 143, 144, 146, 147], "numer": [114, 146], "numpi": 105, "numu": 120, "numucc": 120, "o": [0, 87, 114, 141, 143, 144, 145, 147, 148], "obj": [33, 36, 131], "object": [4, 6, 11, 13, 15, 22, 33, 36, 79, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 106, 108, 109, 110, 112, 113, 114, 116, 119, 121, 122, 125, 127, 129, 130, 132, 137, 142, 143, 148], "observ": 146, "observatori": [20, 49], "obtain": [83, 121], "occur": [8, 122], "oerso": 93, "offer": 142, "offset": [104, 105], "ofintern": 37, "often": 142, "old_phras": 134, "om": [34, 36], "omit": 148, "on_fit_end": 119, "on_train_end": 109, "on_train_epoch_end": 119, "on_train_epoch_start": 119, "on_validation_end": 119, "onc": [137, 143, 145], "one": [11, 13, 20, 58, 73, 83, 129, 130, 135, 140, 141, 142, 143, 146, 148], "ones": 109, "onli": [0, 1, 11, 13, 15, 63, 78, 83, 90, 114, 123, 127, 130, 132, 136, 141, 142, 143, 144, 146, 147, 148], "open": [0, 48, 140, 141, 142, 143, 144, 145, 146, 147], "opensciencegrid": 145, "oper": [79, 82, 89, 92], "oppos": 142, "optic": [36, 105], "optim": [109, 110, 119, 143, 148], "optimis": [0, 1, 143, 144, 147, 148], "optimizer_class": [143, 148], "optimizer_closur": 109, "optimizer_kwarg": [143, 148], "optimizer_step": 109, "option": [5, 7, 9, 11, 13, 15, 20, 30, 63, 65, 66, 69, 75, 81, 82, 83, 90, 92, 94, 96, 100, 101, 102, 104, 105, 106, 108, 114, 119, 123, 124, 125, 127, 129, 135, 141, 142, 143, 146, 148], "orca": 88, "orca150": [84, 88, 148], "orca150superdens": [84, 88], "orca_150": 88, "order": [0, 33, 48, 68, 79, 104, 117, 143, 144, 147], "ordinari": 148, "ordinarili": 146, "org": [99, 121, 143, 145], "orient": [0, 78, 144, 147], "origin": [96, 142, 148], "other": [25, 58, 99, 121, 140, 142, 143, 148], "otherwis": [36, 121], "our": [143, 146], "out": [5, 11, 13, 92, 110, 111, 121, 137, 140, 141, 142, 143, 146, 148], "out_featur": 82, "outdir": [7, 44, 46, 54, 141, 143, 146, 148], "outer": 33, "outlin": [146, 148], "output": [18, 63, 68, 69, 81, 82, 90, 91, 92, 93, 95, 104, 105, 108, 110, 112, 113, 114, 123, 129, 130, 141, 146, 148], "output_dim": [81, 148], "output_dir": [61, 62, 63, 141], "output_fil": 7, "output_file_path": 141, "output_fold": [6, 68], "outsid": [66, 140], "over": [100, 104, 141, 142], "overhead": 146, "overrid": [9, 119], "overridden": 104, "overview": [0, 144, 147], "overwrit": [69, 119], "overwritten": [48, 125, 127], "own": [140, 143], "ownership": 140, "p": [34, 65, 121, 141], "p11003": 143, "packag": [0, 1, 57, 131, 135, 136, 140, 143, 144, 147, 148], "pad": [101, 105, 117], "padding_valu": [24, 27, 117], "pair": [20, 44, 46, 49, 54, 81], "pairwis": [100, 117], "pairwise_shuffl": [55, 57], "panda": [59, 123, 141, 143, 146, 148], "paper": 121, "paradigm": [143, 148], "parallel": [7, 44, 46, 54, 141, 146], "param": [38, 40, 42], "paramet": [5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 73, 75, 79, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138], "parent": [33, 143], "parent_kei": 33, "parquet": [1, 3, 5, 10, 13, 38, 41, 42, 44, 46, 50, 52, 54, 56, 62, 65, 66, 86, 87, 88, 141, 142, 143, 146], "parquet_dataset": [10, 12], "parquet_extractor": [16, 37], "parquet_to_sqlit": [3, 55], "parquet_writ": [3, 60], "parquetdataconvert": [43, 44], "parquetdataset": [9, 12, 13, 141, 143], "parquetextractor": [7, 37, 38, 40, 46, 48], "parquetread": [47, 50], "parquettosqliteconvert": [45, 46], "parquetwrit": [13, 38, 46, 60, 62, 141, 142, 146], "pars": [22, 124, 125, 126, 127, 132, 141], "parse_graph_definit": [10, 11], "parse_label": [10, 11], "part": [141, 143, 145, 146], "particl": [30, 58, 120, 142, 143, 146], "particular": [121, 140], "particularli": [142, 143, 148], "partit": 63, "partli": [0, 144, 147], "pass": [11, 15, 81, 82, 90, 91, 92, 93, 94, 95, 96, 101, 108, 110, 114, 116, 119, 121, 123, 140, 141, 142, 143, 146, 148], "path": [5, 11, 13, 15, 20, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 63, 68, 73, 75, 82, 101, 106, 109, 119, 122, 125, 127, 128, 129, 135, 141, 142, 143, 146, 148], "path_to_arrai": 146, "path_to_geometry_t": 146, "patienc": 125, "pd": [141, 143, 146], "pdf": 99, "pdg": 120, "peopl": [143, 148], "pep257": 140, "pep8": 140, "per": [11, 13, 15, 22, 58, 82, 83, 90, 108, 114, 121, 123, 142, 143], "percentil": [104, 105], "percentileclust": [103, 104], "perceptron": [82, 92], "perform": [0, 9, 79, 81, 82, 83, 89, 90, 92, 94, 104, 108, 109, 110, 112, 114, 122, 143, 144, 147, 148], "permiss": 121, "permit": 121, "persistent_work": [8, 122], "person": [5, 121], "perturb": [101, 102], "perturbation_dict": [101, 102], "pframe": [44, 46, 49, 54], "philosophi": [143, 148], "photon": [42, 142, 143], "phrase": 134, "phyic": 1, "physic": [0, 1, 20, 34, 36, 67, 73, 75, 78, 111, 114, 142, 143, 144, 147, 148], "physicist": [0, 1, 143, 144, 147], "physicst": 1, "pick": 142, "pickl": [141, 143, 146, 148], "pid": [4, 59, 120, 129, 142], "pid_kei": 120, "piecewiselinearlr": [118, 119, 143, 148], "pip": [140, 145], "pisa": 26, "place": [81, 96, 134, 140], "plai": 1, "plane": [23, 121], "pleas": [141, 142, 143, 146], "plot": 142, "plug": 1, "pmt": [83, 105, 142, 143], "pmt_area": 4, "pmt_dir_i": 4, "pmt_dir_x": 4, "pmt_dir_z": 4, "pmt_number": 4, "point": [5, 29, 120, 121, 122, 143, 146, 148], "pole": [94, 96], "pone": 88, "pone_triangl": 88, "ponesmal": [64, 65], "ponetriangl": [84, 88], "pool": [7, 78, 79, 80, 90, 92, 94], "pop_default": 125, "popular": 148, "port": 143, "portabl": [0, 143, 144, 147, 148], "portion": 121, "pos_x": 143, "posit": [73, 81, 82, 83, 96, 105, 113, 116, 127, 132, 142, 146], "position_i": 4, "position_x": 4, "position_x_pr": 113, "position_y_pr": 113, "position_z": 4, "position_z_pr": 113, "positionreconstruct": [111, 113], "possibl": [0, 33, 63, 140, 144, 146, 147], "post": [90, 92, 94], "post_processing_layer_s": [90, 92, 94, 143, 148], "pow": [143, 148], "power": [141, 143, 148], "pr": 108, "practic": [0, 140, 144, 147], "pre": [0, 5, 45, 46, 64, 85, 101, 120, 140, 142, 143, 144, 147, 148], "pre_configur": [1, 3, 46], "precis": 121, "precommit": 140, "preconfigur": 46, "pred": [110, 114], "predict": [0, 9, 25, 29, 31, 73, 75, 91, 96, 110, 112, 114, 121, 122, 143, 144, 147, 148], "predict_as_datafram": [110, 143, 148], "prediction_column": [69, 75, 110, 122], "prediction_label": [110, 114, 143, 148], "prefer": 100, "prefetch_factor": 8, "prepar": [0, 5, 9, 121, 142, 144, 147], "prepare_data": [5, 9], "preprocess": 143, "present": [11, 13, 20, 35, 117, 125, 135, 136, 142, 148], "previou": [119, 143, 148], "primari": [58, 63, 142, 143], "primary_hadron_1_direction_phi": [4, 142, 143], "primary_hadron_1_direction_theta": [4, 142, 143], "primary_hadron_1_energi": [4, 142, 143], "primary_hadron_1_position_i": [4, 142, 143], "primary_hadron_1_position_x": [4, 142, 143], "primary_hadron_1_position_z": [4, 142, 143], "primary_hadron_1_typ": [4, 142, 143], "primary_key_rescu": 63, "primary_lepton_1_direction_phi": [4, 142, 143], "primary_lepton_1_direction_theta": [4, 142, 143], "primary_lepton_1_energi": [4, 142, 143], "primary_lepton_1_position_i": [4, 142, 143], "primary_lepton_1_position_x": [4, 142, 143], "primary_lepton_1_position_z": [4, 142, 143], "primary_lepton_1_typ": [4, 142, 143], "principl": [1, 143], "print": [5, 106, 119, 137], "prior": 142, "prioriti": 140, "privat": 123, "pro": [143, 148], "probabl": [82, 121, 148], "problem": [0, 99, 140, 142, 143, 144, 147, 148], "procedur": 9, "proceedur": 63, "process": [1, 7, 44, 46, 54, 73, 81, 85, 90, 92, 94, 140, 141, 143, 148], "process_posit": 119, "produc": [5, 48, 81, 120, 123, 142, 143], "product": [8, 82, 122], "programm": [0, 144, 147], "progress": 119, "progressbar": [118, 119, 143, 148], "proj_drop": 82, "project": [0, 52, 82, 140, 143, 144, 147, 148], "prometheu": [3, 4, 16, 42, 52, 65, 78, 84, 142, 143, 148], "prometheus_dataset": [1, 64], "prometheus_extractor": [16, 41], "prometheus_read": [3, 47], "prometheusextractor": [7, 41, 42, 48], "prometheusfeatureextractor": [41, 42], "prometheusread": [47, 52], "prometheustruthextractor": [41, 42], "prompt": 143, "prone": 143, "proof": [143, 148], "properti": [5, 9, 11, 18, 25, 36, 48, 61, 83, 85, 95, 104, 105, 110, 114, 120, 128, 137, 141], "protocol": 141, "prototyp": 87, "proven": [18, 20, 38, 40, 42, 141], "provid": [0, 1, 7, 11, 13, 15, 73, 78, 96, 101, 106, 121, 140, 141, 142, 143, 144, 147, 148], "pth": [143, 148], "public": [65, 85, 123], "publicprometheusdataset": [64, 65], "publish": [121, 143, 148], "puls": [5, 11, 13, 15, 17, 21, 22, 34, 36, 42, 58, 73, 79, 83, 96, 101, 104, 105, 116, 117, 142, 143, 146, 148], "pulse_truth": 5, "pulsemap": [5, 11, 13, 15, 21, 65, 66, 73, 75, 122, 129, 142, 143], "pulsemap_extractor": [73, 75], "pulseseri": 34, "pulsmap": [73, 75], "punch4nfdi": [0, 144, 147], "pure": [7, 18, 19, 22, 36], "purpos": [0, 78, 121, 144, 146, 147], "put": [63, 143, 148], "py": [121, 143], "py3": 145, "pydant": [127, 129, 130, 132], "pydantic_cor": [127, 132], "pydocstyl": 140, "pyg": [142, 143, 148], "pylint": 140, "python": [0, 1, 7, 18, 19, 22, 33, 36, 140, 143, 144, 145, 147, 148], "python3": [86, 87, 88, 125], "pytorch": [15, 119, 143, 145, 148], "pytorch_lightn": [110, 119, 137, 143, 148], "pytorchlightn": 143, "q": 82, "qk_scale": 82, "qkv_bia": 82, "qualiti": [0, 143, 144, 147], "quantiti": [26, 114, 117, 143], "queri": [11, 13, 15, 58, 59, 63, 82, 142, 143], "query_databas": [55, 58], "query_t": [11, 13, 15, 142], "queso": 27, "question": 143, "quick": 143, "r": [83, 99, 141, 143, 145, 146], "radial": 99, "radialedg": [98, 99], "radiat": [104, 105, 143, 148], "radiu": [99, 143], "rais": [11, 13, 20, 22, 106, 127, 132, 141], "random": [3, 11, 13, 15, 55, 59, 62, 104, 129, 142, 143], "randomli": [59, 101, 102, 130, 143, 148], "rang": [114, 144, 146, 147, 148], "rare": 141, "rasmu": [0, 93, 144, 147], "rate": 119, "rather": [114, 137, 143, 148], "ratio": [9, 82, 96], "raw": [0, 104, 105, 142, 143, 144, 146, 147, 148], "rde": 4, "re": [128, 142, 143, 146, 148], "reach": [142, 146], "read": [0, 3, 7, 11, 13, 15, 33, 47, 49, 50, 51, 52, 85, 92, 110, 111, 141, 142, 143, 144, 146, 147], "read_csv": 146, "read_sql": 143, "readabl": 143, "reader": [1, 3, 46, 48, 49, 50, 51, 52, 146], "readi": [64, 146, 148], "readm": 143, "readout": [90, 92, 94], "readout_layer_s": [90, 92, 94, 143, 148], "readthedoc": 143, "receiv": [0, 144, 147, 148], "reciev": [61, 141, 146, 148], "recommend": [143, 145, 146, 148], "reconstruct": [0, 1, 21, 23, 24, 28, 29, 31, 67, 78, 94, 96, 108, 111, 114, 142, 143, 144, 147], "record": 137, "recov": 114, "recreat": [142, 143, 148], "recurr": 107, "recurs": [22, 36, 44, 46, 48, 49, 54, 106, 131, 135], "reduc": [143, 148], "reduce_opt": 79, "refer": [9, 88, 129, 142, 143, 146, 148], "refresh_r": 119, "regardless": [142, 143, 148], "regist": 116, "regular": [36, 82, 143, 148], "rel": [82, 96, 116], "rel_pos_bia": 82, "rel_pos_bucket": 116, "relat": [57, 135, 146], "relev": [1, 36, 57, 135, 140], "reli": 49, "reload": 148, "remain": 142, "remov": [8, 44, 54, 101, 122, 125, 146], "renam": 134, "rename_state_dict_entri": [124, 134], "repeat": 137, "repeatfilt": [124, 137], "replac": [127, 129, 130, 132, 134], "repo": 140, "repositori": 140, "repres": [83, 90, 101, 102, 104, 105, 117, 127, 129, 130, 141, 142, 143, 146, 148], "represent": [5, 11, 13, 15, 36, 65, 66, 81, 82, 83, 102, 106, 108, 142, 143, 146, 148], "reproduc": [129, 130, 148], "repurpos": 148, "requir": [0, 20, 26, 38, 42, 58, 104, 112, 121, 129, 130, 132, 140, 141, 142, 143, 144, 145, 146, 147, 148], "requires_icecub": [124, 136], "research": [0, 143, 144, 147], "reset": 82, "reset_paramet": 82, "resolv": [11, 13, 15, 59], "respect": [122, 143, 146], "respons": [142, 143], "restrict": [114, 121, 148], "result": [58, 62, 83, 105, 119, 121, 122, 131, 143, 146, 148], "retriev": [85, 141, 142], "retro": 28, "return": [5, 7, 8, 9, 11, 13, 15, 17, 18, 20, 33, 34, 36, 48, 49, 50, 51, 52, 57, 58, 59, 61, 62, 63, 68, 79, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 141, 142, 143, 146, 148], "return_discard": 36, "return_el": 121, "reusabl": [0, 144, 147], "reuseabl": [143, 148], "review": 140, "rhel_7_x86_64": 145, "right": [121, 143], "rmseloss": [118, 121], "rng": 57, "rnn": [1, 78, 90, 108], "rnn_dropout": 90, "rnn_dynedg": 90, "rnn_hidden_s": 90, "rnn_layer": 90, "rnn_tito": [78, 89], "role": 148, "root": 121, "roughli": 142, "row": [58, 63, 105, 117, 142, 143, 146, 148], "run": [1, 49, 68, 141, 143, 145, 146, 148], "run_sql_cod": [55, 58], "runner": [86, 87, 88, 125], "runtim": [120, 145], "runtimeerror": 20, "ryabinin": 121, "sai": [143, 148], "same": [17, 36, 58, 79, 83, 105, 112, 117, 119, 131, 137, 142, 143, 148], "sampl": [59, 82, 101, 102, 104, 114, 143, 148], "satisfi": [0, 141, 144, 147], "save": [7, 18, 20, 33, 38, 40, 42, 44, 46, 54, 58, 60, 61, 63, 106, 119, 121, 122, 123, 127, 128, 129, 130, 141, 143, 146], "save_config": [128, 143, 148], "save_dataset_config": [126, 129], "save_dir": [119, 143, 148], "save_fil": [61, 141], "save_method": [7, 141, 146], "save_model_config": [126, 130], "save_result": [118, 122], "save_select": [118, 122], "save_state_dict": [106, 143, 148], "save_to_sql": [55, 58], "scalabl": 142, "scalar": [11, 13, 18, 117, 121], "scale": [81, 82, 93, 96, 100, 101, 104, 105, 114, 116, 121, 142, 148], "scaled_emb": [96, 116], "scatter": [104, 105], "scheduler_class": [143, 148], "scheduler_config": [143, 148], "scheduler_kwarg": [143, 148], "schema": 143, "scheme": [90, 92, 94, 141], "scientif": [0, 1, 144, 147], "scope": 140, "script": [143, 148], "search": [44, 46, 48, 49, 50, 51, 52, 54, 135, 141], "sec": 121, "second": 100, "section": 143, "see": [81, 90, 99, 101, 119, 140, 142, 143, 145], "seed": [9, 11, 13, 15, 59, 101, 102, 122, 129, 142, 143], "seen": 81, "select": [5, 8, 9, 11, 13, 15, 27, 59, 122, 123, 129, 140, 143, 146], "selection_nam": 8, "self": [11, 13, 101, 127, 132, 141, 142, 143, 146, 148], "sell": 121, "send": 114, "sensor": [85, 101, 142, 143, 146, 148], "sensor_i": 146, "sensor_id": [86, 88, 146], "sensor_id_column": [86, 87, 88, 146], "sensor_index_nam": 85, "sensor_mask": 101, "sensor_pos_i": [4, 88, 142, 143, 148], "sensor_pos_x": [4, 88, 142, 143, 148], "sensor_pos_z": [4, 88, 142, 143, 148], "sensor_position_nam": 85, "sensor_string_id": 88, "sensor_tim": 146, "sensor_x": [142, 146], "sensor_z": 146, "separ": [33, 100, 119, 143, 145], "seper": [108, 142], "seq_length": [81, 96, 116, 117], "sequenc": [68, 81, 82, 105, 117, 122, 143, 148], "sequenti": [11, 13], "sequential_index": [11, 13, 15], "seri": [11, 13, 15, 21, 22, 34, 36, 58, 73, 90, 104, 108, 142, 143, 148], "serial": [141, 142], "serialis": [32, 33, 143, 148], "serv": 142, "session": [129, 130, 142, 143, 148], "set": [3, 6, 9, 13, 20, 22, 44, 46, 48, 49, 54, 61, 81, 82, 96, 104, 105, 106, 114, 120, 122, 140, 141, 143, 146, 148], "set_extractor": 48, "set_gcd": 20, "set_index": 146, "set_number_of_input": 104, "set_output_feature_nam": 104, "set_verbose_print_recurs": 106, "setlevel": 137, "setup": [9, 119, 145], "setuptool": 145, "sever": [143, 148], "sh": 145, "shall": 121, "shape": [18, 100, 101, 104, 117, 121, 141, 142], "share": [110, 143, 148], "share_redirect": 5, "shared_step": 110, "sharelink": 5, "shell": 145, "should": [8, 11, 13, 15, 18, 20, 33, 59, 66, 69, 82, 83, 90, 96, 101, 102, 108, 117, 121, 122, 127, 129, 130, 132, 140, 141, 142, 143, 145, 146, 148], "show": [59, 119, 143], "shown": 143, "shuffl": [8, 9, 57, 62, 122, 142], "shutdown": 9, "sid": 5, "sigmoid": 148, "sign": 121, "signal": [73, 148], "signatur": [22, 36], "signific": 142, "significantli": 142, "signup": 143, "similar": [22, 36, 104, 143, 148], "similarli": [36, 141, 142, 143, 148], "simpl": [0, 78, 143, 144, 147, 148], "simplecoarsen": 79, "simplest": [143, 148], "simpli": [143, 148], "simul": [34, 42, 52, 65, 73, 143, 146], "sinc": [73, 121, 143], "singl": [5, 11, 17, 61, 63, 83, 92, 105, 120, 129, 130, 141, 142, 143, 146, 148], "sinusoid": [81, 96, 116], "sinusoidalposemb": [80, 81], "sipm_i": [4, 87], "sipm_id": 87, "sipm_x": [4, 87], "sipm_z": [4, 87], "situat": 140, "size": [63, 81, 82, 83, 90, 92, 93, 94, 96, 117, 125, 142], "skip": [35, 92, 143], "skip_readout": 92, "sklearn": [143, 148], "sk\u0142odowska": [0, 144, 147], "slack": 143, "slice": [82, 92], "slower": 63, "small": [121, 142, 143, 148], "smaller": [61, 141], "smooth": 140, "snippet": [143, 148], "so": [121, 142, 143, 145, 146, 148], "soft": 81, "softmax": 121, "softwar": [0, 49, 121, 144, 147], "solut": [81, 82, 94, 96, 140], "solv": [1, 140, 148], "some": [11, 13, 15, 44, 46, 49, 54, 101, 105, 142, 143], "someth": [143, 148], "somewhat": 143, "sort": [101, 105], "sort_bi": 101, "sota": 5, "sourc": [0, 4, 5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 73, 75, 77, 79, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 142, 143, 144, 147], "south": [94, 96], "space": [81, 99, 100, 114, 123], "space_coord": 100, "spacetim": 81, "spacetimeencod": [80, 81], "sparsetensor": 82, "spatial": 105, "spawn": 13, "special": [22, 73, 108, 117], "specialis": [143, 148], "specif": [0, 1, 3, 5, 6, 7, 11, 13, 15, 16, 18, 21, 36, 47, 48, 49, 58, 63, 67, 69, 77, 79, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99, 101, 104, 107, 110, 111, 112, 113, 114, 115, 121, 140, 141, 142, 143, 144, 146, 147, 148], "specifi": [11, 13, 15, 59, 79, 105, 114, 119, 142, 143, 146, 148], "speed": [73, 100, 142], "sphere": 99, "spite": 121, "splinemp": 29, "split": [0, 9, 35, 63, 79, 144, 147], "split_se": 9, "splitinicepuls": 58, "sql": 123, "sqlite": [1, 3, 5, 9, 10, 15, 46, 54, 56, 58, 63, 65, 66, 142, 143], "sqlite3": 143, "sqlite_dataset": [10, 14], "sqlite_util": [3, 55], "sqlite_writ": [3, 60], "sqlitedataconvert": [53, 54], "sqlitedatas": 142, "sqlitedataset": [9, 14, 15, 141], "sqlitewrit": [60, 63, 141, 142], "squar": 121, "src": 143, "stabl": [113, 114], "stage": [9, 119], "standalon": 108, "standard": [0, 3, 4, 35, 59, 69, 86, 87, 88, 90, 101, 102, 104, 109, 110, 114, 125, 140, 143, 144, 146, 147, 148], "standard_argu": 125, "standard_averaged_model": [1, 78], "standard_model": [1, 78, 143], "standardaveragedmodel": [78, 109], "standardaveragemodel": 109, "standardflowtask": [111, 114], "standardis": 84, "standardlearnedtask": [111, 112, 113, 114, 148], "standardmodel": [78, 109, 110], "start": [30, 140, 143, 146, 148], "state": [0, 69, 90, 108, 134, 144, 147], "state_dict": [69, 73, 75, 106, 109, 134, 143], "static": [121, 140], "std": 83, "std_pool": [80, 83], "std_pool_x": [80, 83], "stdout": 119, "step": [109, 110, 117, 119, 143, 146, 148], "still": 129, "stochast": 82, "stop": [30, 119, 125], "stopped_muon": 4, "store": [11, 13, 15, 58, 61, 62, 63, 120, 141, 142, 143, 146, 148], "str": [5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 73, 75, 82, 83, 85, 86, 87, 88, 90, 92, 94, 96, 101, 102, 104, 105, 106, 109, 110, 114, 119, 120, 122, 123, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 141, 146], "straightforward": 142, "strategi": [143, 148], "stream_handl": 137, "streamhandl": 137, "streamlin": 1, "string": [4, 5, 11, 13, 15, 33, 59, 83, 85, 86, 101, 106, 127, 143, 146, 148], "string_id": 146, "string_id_column": [86, 87, 88, 146], "string_index_nam": 85, "string_mask": 101, "string_select": [11, 13, 15, 122, 129], "string_selection_resolv": [3, 55], "stringselectionresolv": [55, 59], "strongli": [143, 148], "structur": [131, 141, 142, 143, 148], "style": 140, "sub": 143, "subclass": [0, 5, 78, 141, 142, 143, 144, 147, 148], "subfold": [44, 46, 49, 54], "subject": [96, 121], "sublicens": 121, "submodul": [1, 3, 10, 12, 14, 16, 19, 32, 37, 39, 41, 43, 45, 47, 53, 55, 60, 64, 67, 70, 72, 76, 78, 80, 84, 89, 97, 98, 103, 107, 111, 115, 118, 124, 126, 131], "subpackag": [1, 3, 10, 16, 19, 67, 78, 97, 124], "subsampl": [62, 142], "subsequ": 143, "subset": [11, 13, 15, 82, 90, 92, 94, 108, 143], "substanti": 121, "suggest": [121, 143], "suit": [0, 114, 143, 144, 147], "suitabl": [1, 146], "sum": [79, 83, 92, 94, 110, 123, 143, 148], "sum_pool": [79, 80, 83], "sum_pool_and_distribut": [80, 83], "sum_pool_x": [79, 80, 83], "summar": [73, 75, 104, 105], "summari": [104, 105], "summaris": [143, 148], "summariz": 148, "summarization_indic": 105, "super": [141, 142, 143, 148], "supervis": [114, 148], "support": [0, 7, 36, 140, 141, 142, 143, 144, 147], "suppos": [5, 105, 142, 146], "sure": [140, 141], "swa": 109, "swapabl": 143, "switch": [121, 143, 148], "synchron": 7, "syntax": [59, 121, 142, 143], "system": [135, 143, 148], "t": [4, 36, 58, 119, 121, 141, 142, 143, 146, 148], "t_co": 8, "tabl": [5, 11, 13, 15, 17, 18, 20, 38, 40, 42, 48, 58, 62, 63, 85, 101, 123, 141, 142, 143], "table_nam": [42, 58], "table_without_index": 146, "tackl": 148, "tag": [122, 140], "take": [36, 83, 105, 108, 140, 142], "talk": 143, "tar": 5, "target": [110, 112, 114, 121, 132, 143, 148], "target_label": [110, 114, 143, 148], "target_pr": [112, 148], "task": [0, 1, 9, 78, 110, 112, 113, 121, 140, 143, 144, 147], "team": [101, 140, 142, 143, 145, 146, 148], "teardown": 9, "technic": [0, 144, 146, 147], "techniqu": [0, 144, 147, 148], "telescop": [0, 1, 143, 144, 146, 147, 148], "tend": 63, "tensor": [11, 13, 15, 69, 79, 81, 82, 83, 85, 90, 91, 92, 93, 94, 95, 96, 100, 104, 108, 109, 110, 114, 116, 117, 121, 134, 138, 142, 143, 146, 148], "term": [82, 121, 148], "termin": 143, "test": [5, 9, 59, 65, 66, 114, 122, 129, 136, 140, 142, 143, 148], "test_dataload": 9, "test_dataloader_kwarg": [5, 9, 65, 66], "test_dataset": [1, 64], "test_funct": 136, "test_select": [9, 129, 142, 143], "test_siz": 122, "testdataset": [64, 66], "tev": 65, "than": [0, 8, 114, 122, 137, 142, 143, 144, 147, 148], "thei": [68, 141, 142, 143, 148], "them": [0, 1, 33, 69, 78, 92, 114, 142, 143, 144, 146, 147, 148], "themselv": [1, 129, 130, 143, 148], "therebi": [1, 129, 130, 143, 148], "therefor": [33, 49, 141, 142, 143, 146, 148], "thi": [0, 3, 5, 7, 9, 11, 13, 15, 17, 18, 20, 22, 36, 38, 40, 42, 44, 46, 48, 49, 54, 57, 58, 62, 63, 66, 73, 78, 81, 83, 90, 92, 96, 100, 101, 102, 104, 105, 108, 110, 112, 113, 114, 117, 119, 121, 122, 123, 127, 129, 130, 132, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148], "thing": 143, "those": [20, 142, 143], "thread": 13, "three": [105, 121, 148], "threshold": [0, 73, 144, 147], "through": [0, 112, 113, 114, 121, 141, 143, 144, 147, 148], "throw": 141, "thu": [130, 148], "ti": 142, "time": [0, 4, 58, 79, 81, 83, 90, 100, 104, 105, 108, 113, 117, 137, 142, 143, 144, 146, 147], "time_column": 104, "time_coord": 100, "time_lik": 100, "time_like_weight": 100, "time_series_column": [90, 108], "time_window": 79, "timereconstruct": [111, 113], "tini": 143, "tito": [82, 90, 94], "to_config": 148, "to_csv": [143, 148], "to_parquet": 146, "todo": 143, "togeth": [0, 78, 99, 110, 144, 147], "token": 116, "too": [143, 148], "tool": [0, 1, 144, 147], "top": 148, "torch": [0, 11, 13, 15, 78, 82, 101, 102, 106, 136, 142, 143, 144, 145, 146, 147, 148], "torch_cpu": 145, "torch_geometr": [83, 117, 142, 143, 148], "torch_lightn": 148, "tort": 121, "total": [117, 122, 123, 142, 143, 146], "total_energi": [4, 142, 143, 148], "tqdmprogressbar": 119, "track": [0, 18, 20, 24, 38, 40, 42, 65, 113, 118, 120, 140, 141, 143, 144, 147], "tradit": [0, 144, 147], "train": [0, 1, 5, 7, 9, 10, 59, 64, 65, 66, 67, 73, 82, 96, 101, 109, 110, 117, 119, 120, 121, 122, 123, 125, 129, 130, 132, 139, 141, 142, 143, 144, 146, 147], "train_batch": [109, 110], "train_dataload": [9, 110, 143, 148], "train_dataloader_kwarg": [5, 9, 65, 66], "train_ev": 114, "train_select": [129, 142, 143], "train_val_split": 9, "trainabl": 130, "trainer": [110, 119, 122, 143, 148], "trainer_kwarg": 110, "training_config": [124, 126, 143, 148], "training_example_data_sqlit": [125, 142, 143, 148], "training_step": [109, 110], "trainingconfig": [126, 132, 143, 148], "transform": [1, 78, 82, 83, 94, 96, 108, 114, 116, 123, 143, 148], "transform_infer": [114, 143, 148], "transform_prediction_and_target": [114, 143, 148], "transform_support": [114, 143, 148], "transform_target": [114, 143, 148], "transit": 134, "transpar": [129, 130, 140, 143, 148], "transpos": 33, "transpose_list_of_dict": [32, 33], "traverse_and_appli": [126, 131], "treat": [90, 108], "tree": [22, 143], "tri": [22, 36], "triangl": 88, "trident": [65, 88], "trident1211": [84, 88], "tridentsmal": [64, 65], "trigger": [22, 142, 143, 148], "trivial": [36, 114], "true": [35, 58, 73, 90, 92, 94, 96, 101, 104, 106, 119, 121, 123, 129, 130, 132, 135, 141, 142, 143, 148], "trust": [106, 143, 148], "truth": [3, 4, 5, 11, 13, 15, 21, 30, 42, 58, 62, 65, 66, 101, 114, 122, 123, 129, 142, 146, 148], "truth_dict": 101, "truth_label": 142, "truth_tabl": [5, 11, 13, 15, 62, 122, 123, 129, 142, 143], "truthdata": 40, "try": [36, 141], "tum": [24, 31], "tupl": [7, 11, 13, 15, 34, 36, 58, 82, 90, 92, 94, 105, 114, 117, 122, 125, 134], "turn": [105, 140], "tutorial_output": [143, 148], "two": [8, 92, 119, 121, 122, 141, 142, 143, 146], "txt": 145, "type": [0, 5, 7, 8, 9, 11, 13, 15, 19, 20, 32, 33, 34, 40, 42, 48, 49, 50, 51, 52, 57, 58, 59, 61, 62, 63, 68, 79, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147], "typic": [0, 33, 108, 142, 144, 146, 147], "u": [142, 146], "ultra": 142, "unaccur": 121, "unambigu": [129, 130], "unbatch_edge_index": [78, 79], "uncertainti": [113, 143, 148], "uncompress": 142, "under": [0, 143, 144, 146, 147, 148], "unfamiliar": 148, "uniform": [118, 123], "uniformweightfitt": 123, "union": [0, 7, 8, 9, 11, 13, 15, 22, 33, 36, 44, 46, 48, 49, 50, 51, 52, 54, 68, 69, 73, 75, 79, 82, 83, 90, 92, 101, 102, 110, 114, 129, 132, 135, 141, 144, 146, 147], "uniqu": [11, 13, 15, 58, 104, 117, 129, 143, 146, 148], "unit": [0, 7, 66, 100, 136, 140, 144, 147], "univers": [94, 96], "unlik": 142, "unscal": 148, "untransform": 112, "up": [0, 73, 140, 144, 147], "updat": [108, 109, 117, 119, 143, 145, 148], "upgrad": [4, 21, 86, 143, 145], "upon": 148, "us": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 25, 30, 32, 33, 38, 40, 42, 44, 46, 48, 49, 53, 54, 55, 58, 59, 61, 62, 63, 65, 66, 67, 69, 73, 75, 78, 81, 82, 83, 85, 90, 92, 93, 94, 96, 99, 101, 102, 104, 105, 106, 108, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 123, 124, 125, 126, 129, 130, 131, 136, 137, 140, 141, 144, 145, 146, 147], "usabl": [0, 144, 147], "usag": 125, "use_cach": 59, "use_global_featur": [90, 94], "use_post_processing_lay": [90, 94], "user": [0, 5, 78, 119, 142, 143, 144, 145, 147, 148], "usual": 142, "util": [1, 3, 16, 19, 33, 34, 35, 36, 56, 57, 58, 59, 78, 97, 118, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 145, 148], "v": 82, "v1": [127, 129, 130, 132, 145], "v4": 145, "val_batch": [109, 110], "val_dataload": [9, 110], "valid": [5, 9, 36, 59, 65, 66, 109, 110, 114, 119, 121, 125, 127, 132, 142, 143, 148], "validate_fil": 48, "validation_dataloader_kwarg": [5, 9, 65, 66], "validation_step": [109, 110], "validationerror": [127, 132], "valu": [11, 13, 15, 30, 33, 58, 82, 83, 100, 101, 102, 117, 120, 121, 125, 127, 148], "valueerror": [22, 106], "var": 113, "var1": 18, "var_n": 18, "variabl": [18, 20, 22, 36, 48, 92, 104, 105, 117, 123, 137, 141, 146, 148], "varieti": 143, "variou": [1, 60, 143], "vast": 114, "vector": [79, 82, 83, 121, 141, 148], "verbos": [44, 46, 49, 54, 110, 119], "verbose_print": 106, "veri": [59, 142, 143, 148], "versa": 119, "version": [83, 105, 114, 119, 140, 143, 148], "vertex": [113, 143], "vertex_i": 4, "vertex_x": 4, "vertex_z": 4, "vertexreconstruct": [111, 113], "viabl": 146, "vice": 119, "virtual": 145, "visit": 146, "vmf": 113, "vmf_loss": 121, "volum": 30, "von": 121, "vonmisesfisher2dloss": [118, 121, 143, 148], "vonmisesfisher3dloss": [118, 121], "vonmisesfisherloss": [118, 121], "w": [143, 148], "wa": [0, 7, 142, 143, 144, 146, 147, 148], "wai": [36, 59, 140, 143, 146, 148], "wandb": [143, 148], "wandb_dir": [143, 148], "wandb_logg": [143, 148], "wandblogg": [143, 148], "want": [142, 143, 145, 146, 148], "warn": [137, 143], "warning_onc": [137, 143], "warranti": 121, "waterdemo81": [84, 88], "wb": 141, "we": [33, 36, 59, 105, 140, 143, 145, 146, 148], "weight": [11, 13, 15, 73, 75, 82, 96, 101, 114, 121, 123, 130, 143, 148], "weight_fit": [1, 118], "weight_nam": 123, "weightfitt": [118, 123], "well": [140, 143, 148], "what": [1, 81, 101, 140, 143, 148], "whatev": 143, "wheel": 145, "when": [0, 11, 13, 15, 33, 35, 58, 73, 82, 90, 92, 94, 108, 120, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148], "whenev": 145, "where": [18, 44, 46, 49, 54, 101, 102, 104, 105, 108, 117, 120, 141, 142, 143, 146, 148], "wherea": [123, 142], "whether": [8, 34, 36, 58, 81, 82, 90, 92, 94, 96, 106, 116, 121, 131, 135, 136, 143], "which": [0, 5, 11, 13, 15, 18, 20, 21, 30, 34, 38, 40, 42, 59, 61, 63, 68, 79, 83, 92, 101, 102, 105, 106, 112, 117, 121, 122, 125, 141, 142, 143, 144, 147, 148], "while": [0, 22, 119, 140, 142, 144, 147], "who": [5, 134, 143, 148], "whom": 121, "whose": 73, "wide": 148, "willing": [142, 146], "window": [79, 142, 143], "wise": 83, "wish": [0, 68, 140, 144, 147], "with_standard_argu": 125, "within": [30, 79, 82, 83, 92, 99, 143, 148], "without": [1, 99, 104, 121, 142, 145], "work": [0, 4, 34, 90, 140, 141, 142, 143, 144, 147, 148], "worker": [6, 7, 44, 54, 57, 62, 68, 125, 137], "workflow": [0, 144, 147], "would": [140, 142, 143, 146, 148], "wrap": [119, 129, 130], "write": [62, 73, 75, 141, 143, 148], "writer": [1, 3, 46, 61, 62, 63, 146], "written": [46, 68, 141], "wrt": 114, "www": 143, "x": [4, 30, 81, 82, 83, 100, 104, 105, 108, 114, 117, 121, 123, 142, 143, 146, 148], "x8": 142, "x_i": 82, "x_j": 82, "x_low": 123, "xyz": [85, 86, 87, 88, 104, 105, 142, 146], "xyz_coord": 117, "xyzt": 117, "y": [4, 30, 81, 100, 117], "yaml": [127, 128, 143], "yield": [0, 92, 121, 144, 147], "yml": [59, 125, 129, 130, 142, 143, 148], "you": [63, 68, 81, 129, 130, 140, 142, 143, 145, 146, 148], "your": [102, 140, 141, 142, 143, 145], "yourself": 140, "z": [4, 30, 81, 100, 104, 105, 117], "z_name": 104, "z_offset": [104, 105], "z_scale": [104, 105], "zenith": [4, 113, 120, 143, 148], "zenith_kappa": 113, "zenith_kei": 120, "zenith_pr": 113, "zenithreconstruct": [111, 113], "zenithreconstructionwithkappa": [111, 113, 143, 148], "\u00f8rs\u00f8e": [0, 144, 147]}, "titles": ["Usage", "API", "constants", "data", "constants", "curated_datamodule", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "sqlite", "sqlite_dataset", "extractors", "combine_extractors", "extractor", "icecube", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "internal", "parquet_extractor", "liquido", "h5_extractor", "prometheus", "prometheus_extractor", "parquet", "deprecated_methods", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "internal_parquet_reader", "liquido_reader", "prometheus_reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "datasets", "prometheus_datasets", "test_dataset", "deployment", "deployer", "deployment_module", "i3modules", "deprecated_methods", "icecube", "cleaning_module", "i3deployer", "inference_module", "exceptions", "exceptions", "models", "coarsening", "components", "embedding", "layers", "pool", "detector", "detector", "icecube", "liquido", "prometheus", "gnn", "RNN_tito", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "icemix", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "rnn", "node_rnn", "standard_averaged_model", "standard_model", "task", "classification", "reconstruction", "task", "transformer", "iseecube", "utils", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contributing To GraphNeT", "Data Conversion in GraphNeT", "Datasets In GraphNeT", "GraphNeT tutorial", "GraphNeT", "Installation", "Integrating New Experiments into GraphNeT", "GraphNeT", "Models In GraphNeT", "&lt;no title&gt;"], "titleterms": {"1": 146, "2": 146, "In": [142, 148], "The": [143, 148], "To": 140, "acknowledg": 0, "ad": [142, 143, 146, 148], "advanc": 143, "api": 1, "appendix": 143, "appli": 146, "argpars": 125, "backbon": 148, "base_config": 127, "befor": 146, "callback": 119, "checkpoint": 148, "choos": 142, "class": [143, 146, 148], "classif": 112, "cleaning_modul": 73, "coarsen": 79, "code": 140, "collect": 33, "combin": [142, 143], "combine_extractor": 17, "compon": 80, "config": 126, "configur": 128, "constant": [2, 4], "content": 143, "contribut": 140, "convent": 140, "convers": 141, "convnet": 91, "creat": 143, "curated_datamodul": 5, "custom": [142, 143], "cvmf": 145, "data": [3, 141, 146], "dataclass": 6, "dataconfig": 143, "dataconvert": [7, 46, 141], "dataload": 8, "datamodul": 9, "dataset": [10, 11, 64, 142, 143], "dataset_config": 129, "datasetconfig": 143, "decor": 133, "deploy": [67, 68], "deployment_modul": 69, "deprecated_method": [44, 54, 71], "deprecation_tool": 134, "detector": [84, 85, 146], "dynedg": 92, "dynedge_jinst": 93, "dynedge_kaggle_tito": 94, "edg": [98, 99], "embed": 81, "energi": 148, "event": 142, "exampl": [143, 146, 148], "except": [76, 77], "experi": [146, 148], "extractor": [16, 18, 141, 146], "filesi": 135, "frame": 34, "function": 143, "geometri": 146, "github": 140, "gnn": [89, 95], "graph": [97, 102], "graph_definit": 101, "graphdefinit": 148, "graphnet": 143, "graphnet_file_read": 48, "graphnet_writ": 61, "graphnetfileread": 146, "graphnetgraphnet": [140, 141, 142, 144, 146, 147, 148], "h5_extractor": 40, "i3_filt": 35, "i3deploy": 74, "i3extractor": 20, "i3featureextractor": 21, "i3genericextractor": 22, "i3hybridrecoextractor": 23, "i3modul": 70, "i3ntmuonlabelsextractor": 24, "i3particleextractor": 25, "i3pisaextractor": 26, "i3quesoextractor": 27, "i3read": 49, "i3retroextractor": 28, "i3splinempeextractor": 29, "i3truthextractor": 30, "i3tumextractor": 31, "icecub": [19, 72, 86, 145], "icemix": 96, "implement": [142, 146], "import": 136, "index": 146, "inference_modul": 75, "instal": 145, "instanti": 148, "integr": 146, "intern": 37, "internal_parquet_read": 50, "introduct": 143, "iseecub": 116, "issu": 140, "label": [120, 142, 143], "layer": 82, "liquido": [39, 87], "liquido_read": 51, "load": 148, "log": 137, "loss_funct": 121, "math": 138, "minkowski": 100, "model": [78, 106, 143, 148], "model_config": 130, "modelconfig": [143, 148], "multi": 146, "multipl": [142, 143], "new": [142, 146], "node": [103, 104], "node_rnn": 108, "overview": 143, "own": [146, 148], "parquet": [12, 43], "parquet_dataset": 13, "parquet_extractor": 38, "parquet_to_sqlit": 56, "parquet_writ": 62, "parquetdataset": 142, "pars": 131, "pool": 83, "pre_configur": 45, "prometheu": [41, 88], "prometheus_dataset": 65, "prometheus_extractor": 42, "prometheus_read": 52, "pull": 140, "qualiti": 140, "quick": 145, "random": 57, "reader": [47, 141], "reconstruct": [113, 148], "reproduc": 143, "request": 140, "rnn": 107, "rnn_tito": 90, "save": 148, "select": 142, "sqlite": [14, 53], "sqlite_dataset": 15, "sqlite_util": 58, "sqlite_writ": 63, "sqlitedataset": [142, 143], "src": 139, "standard_averaged_model": 109, "standard_model": 110, "standardmodel": [143, 148], "start": 145, "state_dict": 148, "string_selection_resolv": 59, "subset": 142, "support": 146, "syntax": 148, "tabl": 146, "task": [111, 114, 148], "test_dataset": 66, "track": 148, "train": [118, 148], "training_config": 132, "transform": 115, "truth": 143, "tutori": 143, "type": 36, "us": [142, 143, 148], "usag": 0, "util": [32, 55, 105, 117, 122, 124], "v": 142, "weight_fit": 123, "write": 146, "writer": [60, 141], "your": [146, 148]}})