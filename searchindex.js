Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pipeline", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.icemix", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.pisa", "api/graphnet.pisa.fitting", "api/graphnet.pisa.plotting", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pipeline.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.pisa.rst", "api/graphnet.pisa.fitting.rst", "api/graphnet.pisa.plotting.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "sqlite", "sqlite_dataset", "extractors", "extractor", "icecube", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "parquet", "deprecated_methods", "pipeline", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "deployment", "deployer", "deployment_module", "i3modules", "deprecated_methods", "icecube", "cleaning_module", "i3deployer", "inference_module", "models", "coarsening", "components", "embedding", "layers", "pool", "detector", "detector", "icecube", "prometheus", "gnn", "RNN_tito", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "icemix", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "rnn", "node_rnn", "standard_averaged_model", "standard_model", "task", "classification", "reconstruction", "task", "utils", "pisa", "fitting", "plotting", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 60, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127], "i": [0, 1, 8, 10, 12, 14, 16, 18, 20, 31, 32, 33, 34, 36, 39, 42, 44, 47, 48, 49, 53, 55, 60, 62, 64, 66, 67, 68, 75, 76, 80, 83, 85, 88, 89, 92, 97, 98, 99, 102, 104, 105, 106, 107, 108, 110, 112, 115, 116, 117, 119, 120, 121, 122, 125, 126, 127], "an": [0, 16, 34, 36, 37, 39, 42, 44, 49, 85, 92, 93, 106, 120, 122, 125, 126, 127], "open": [0, 41, 125, 126], "sourc": [0, 4, 5, 6, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 60, 62, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 126], "python": [0, 1, 6, 16, 17, 20, 31, 34, 125, 126, 127], "framework": [0, 126], "aim": [0, 1, 125, 126], "provid": [0, 1, 6, 10, 12, 14, 60, 63, 80, 85, 90, 106, 125, 126, 127], "high": [0, 126], "qualiti": [0, 126], "user": [0, 63, 104, 126, 127], "friendli": [0, 51, 53, 126], "end": [0, 1, 104, 126], "function": [0, 6, 7, 10, 18, 34, 47, 48, 60, 62, 64, 67, 68, 71, 72, 76, 85, 89, 90, 98, 99, 101, 102, 106, 107, 109, 114, 115, 116, 119, 120, 121, 123, 126], "perform": [0, 8, 64, 66, 67, 68, 73, 74, 76, 78, 88, 92, 93, 94, 96, 98, 107, 126], "reconstruct": [0, 1, 19, 21, 22, 26, 27, 29, 37, 54, 63, 78, 80, 92, 95, 98, 126], "task": [0, 1, 8, 63, 94, 96, 97, 106, 125, 126], "neutrino": [0, 1, 18, 42, 67, 78, 80, 89, 101, 126], "telescop": [0, 1, 126], "us": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 16, 18, 23, 28, 30, 31, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 53, 54, 56, 60, 62, 63, 66, 67, 68, 70, 74, 76, 77, 78, 80, 83, 85, 86, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 101, 104, 105, 106, 108, 109, 110, 111, 114, 115, 116, 121, 122, 125, 126, 127], "graph": [0, 1, 7, 10, 12, 14, 63, 67, 68, 70, 82, 83, 84, 85, 87, 88, 89, 92, 98, 99, 105, 107, 125, 126], "neural": [0, 1, 91, 126], "network": [0, 1, 67, 75, 91, 126], "gnn": [0, 1, 37, 63, 74, 75, 76, 77, 78, 80, 85, 92, 94, 126, 127], "make": [0, 6, 108, 114, 115, 125, 126, 127], "fast": [0, 126, 127], "easi": [0, 126], "train": [0, 1, 6, 8, 9, 49, 54, 60, 67, 80, 85, 93, 94, 99, 104, 105, 106, 107, 108, 110, 114, 115, 117, 124, 126, 127], "complex": [0, 63, 126], "model": [0, 1, 54, 56, 60, 62, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 106, 107, 110, 112, 114, 115, 117, 124, 126, 127], "can": [0, 1, 8, 10, 12, 14, 16, 20, 23, 46, 60, 66, 68, 85, 101, 102, 108, 110, 112, 114, 115, 125, 126, 127], "event": [0, 1, 6, 8, 10, 12, 14, 25, 36, 39, 44, 46, 48, 49, 53, 60, 66, 68, 74, 85, 88, 89, 98, 99, 101, 106, 107, 108, 114, 126], "state": [0, 56, 74, 92, 119, 126], "art": [0, 126], "arbitrari": [0, 126], "detector": [0, 1, 28, 63, 71, 72, 85, 86, 88, 94, 126], "configur": [0, 1, 8, 10, 38, 39, 56, 63, 90, 94, 101, 109, 111, 112, 114, 115, 117, 122, 126], "infer": [0, 1, 37, 54, 56, 60, 62, 94, 98, 126, 127], "time": [0, 4, 48, 64, 66, 68, 74, 84, 88, 89, 92, 97, 99, 122, 126, 127], "ar": [0, 1, 4, 10, 12, 14, 18, 20, 33, 34, 41, 46, 49, 51, 53, 55, 60, 67, 68, 74, 76, 78, 81, 82, 83, 85, 86, 87, 88, 89, 92, 96, 101, 106, 108, 114, 115, 125, 126, 127], "order": [0, 31, 41, 55, 64, 88, 99, 126], "magnitud": [0, 126], "faster": [0, 126], "than": [0, 7, 98, 107, 122, 126], "tradit": [0, 126], "techniqu": [0, 126], "common": [0, 1, 106, 114, 115, 118, 121, 126], "ml": [0, 1, 126], "develop": [0, 1, 125, 126, 127], "physicist": [0, 1, 126], "wish": [0, 55, 125, 126], "tool": [0, 1, 126], "research": [0, 126], "By": [0, 36, 39, 42, 44, 46, 98, 126], "unit": [0, 6, 84, 121, 125, 126], "both": [0, 20, 98, 102, 126], "group": [0, 68, 126], "increas": [0, 104, 126], "longev": [0, 126], "usabl": [0, 126], "individu": [0, 10, 12, 14, 68, 76, 99, 126], "code": [0, 28, 36, 44, 48, 85, 114, 115, 126], "contribut": [0, 126, 127], "from": [0, 1, 6, 7, 8, 10, 12, 14, 16, 17, 18, 20, 22, 23, 25, 31, 32, 33, 34, 37, 41, 42, 46, 51, 53, 66, 68, 78, 80, 83, 85, 88, 89, 90, 93, 96, 97, 98, 99, 102, 104, 105, 106, 112, 113, 114, 115, 117, 122, 125, 126, 127], "build": [0, 1, 63, 70, 83, 84, 88, 89, 90, 112, 114, 115, 126], "gener": [0, 8, 10, 12, 14, 20, 33, 41, 51, 55, 60, 62, 66, 81, 82, 85, 86, 87, 96, 106, 126], "reusabl": [0, 126], "softwar": [0, 42, 106, 126], "packag": [0, 1, 47, 116, 120, 121, 125, 126, 127], "base": [0, 4, 5, 6, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 36, 37, 39, 41, 42, 44, 46, 49, 51, 52, 53, 55, 56, 60, 62, 64, 66, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 90, 92, 93, 94, 96, 97, 98, 101, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 117, 121, 122, 126], "engin": [0, 126], "best": [0, 104, 125, 126], "practic": [0, 125, 126], "lower": [0, 102, 126], "technic": [0, 126], "threshold": [0, 60, 126], "most": [0, 1, 49, 84, 98, 126, 127], "scientif": [0, 1, 126], "problem": [0, 83, 125, 126], "The": [0, 6, 8, 10, 12, 14, 31, 34, 36, 37, 39, 44, 48, 51, 53, 55, 56, 60, 62, 64, 67, 68, 74, 76, 78, 80, 83, 85, 89, 92, 96, 97, 98, 99, 101, 102, 104, 105, 106, 119, 126], "improv": [0, 1, 110, 126], "classif": [0, 1, 63, 95, 98, 106, 126], "yield": [0, 76, 101, 106, 126], "veri": [0, 49, 126], "accur": [0, 126], "e": [0, 1, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 34, 37, 48, 49, 53, 56, 60, 62, 64, 67, 68, 70, 71, 72, 75, 79, 83, 85, 88, 89, 90, 93, 94, 96, 97, 98, 99, 104, 105, 106, 108, 112, 122, 125, 126, 127], "g": [0, 1, 10, 12, 14, 16, 18, 28, 31, 34, 37, 48, 49, 53, 60, 62, 68, 85, 88, 89, 98, 99, 108, 122, 125, 126, 127], "low": [0, 126], "energi": [0, 4, 37, 97, 98, 108, 126], "observ": [0, 126], "icecub": [0, 1, 3, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 39, 42, 44, 54, 60, 62, 63, 67, 69, 78, 80, 89, 121, 126, 127], "here": [0, 85, 125, 126, 127], "implement": [0, 1, 16, 18, 41, 51, 56, 67, 74, 75, 76, 77, 78, 80, 83, 92, 106, 125, 126], "wa": [0, 6, 126], "appli": [0, 6, 10, 12, 14, 36, 39, 40, 41, 44, 55, 67, 68, 74, 75, 76, 77, 78, 79, 80, 92, 94, 96, 98, 116, 126], "oscil": [0, 100, 126], "lead": [0, 126], "signific": [0, 126], "angular": [0, 126], "rang": [0, 98, 126], "relev": [0, 1, 34, 47, 120, 125, 126], "studi": [0, 126], "furthermor": [0, 92, 126], "shown": [0, 126], "could": [0, 125, 126], "muon": [0, 22, 126], "v": [0, 67, 126], "therebi": [0, 1, 114, 115, 126], "effici": [0, 126], "puriti": [0, 126], "sampl": [0, 49, 67, 85, 86, 88, 98, 126], "analysi": [0, 37, 55, 126, 127], "similarli": [0, 34, 126], "ha": [0, 34, 48, 60, 75, 89, 106, 120, 126, 127], "great": [0, 126], "point": [0, 27, 105, 106, 107, 126], "analys": [0, 54, 100, 126], "final": [0, 6, 66, 68, 104, 114, 126], "millisecond": [0, 126], "allow": [0, 54, 63, 68, 104, 112, 117, 126, 127], "whole": [0, 126], "new": [0, 1, 67, 88, 112, 117, 125, 126], "type": [0, 6, 7, 8, 10, 12, 14, 17, 18, 30, 31, 32, 41, 42, 46, 47, 48, 49, 51, 52, 53, 55, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 104, 106, 107, 108, 110, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 125, 126], "cosmic": [0, 126], "alert": [0, 126], "which": [0, 10, 12, 14, 16, 18, 19, 28, 32, 37, 49, 51, 55, 64, 68, 76, 85, 86, 89, 90, 96, 99, 101, 106, 107, 110, 126, 127], "were": [0, 126], "previous": [0, 126], "unfeas": [0, 126], "possibl": [0, 31, 125, 126], "identifi": [0, 6, 10, 12, 14, 28, 88, 89, 99, 114, 115, 126], "10": [0, 8, 37, 71, 72, 88, 89, 110, 126], "tev": [0, 126], "monitor": [0, 126], "rate": [0, 104, 126], "direct": [0, 78, 80, 89, 96, 97, 98, 103, 105, 126], "real": [0, 126], "thi": [0, 3, 6, 8, 10, 12, 14, 16, 18, 20, 34, 36, 39, 41, 42, 44, 47, 48, 53, 60, 63, 66, 68, 74, 76, 80, 84, 85, 86, 88, 89, 92, 94, 96, 97, 98, 99, 101, 102, 104, 106, 107, 108, 112, 114, 115, 117, 122, 125, 126, 127], "enabl": [0, 3, 126], "first": [0, 74, 84, 92, 104, 107, 125, 126], "ever": [0, 126], "despit": [0, 126], "larg": [0, 74, 106, 126], "background": [0, 126], "origin": [0, 80, 101, 126], "compris": [0, 126], "number": [0, 6, 10, 12, 14, 16, 36, 37, 39, 44, 49, 53, 55, 66, 67, 68, 74, 75, 76, 77, 78, 79, 80, 83, 84, 86, 88, 89, 92, 96, 97, 98, 99, 104, 107, 110, 126], "modul": [0, 3, 5, 6, 10, 15, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 50, 51, 53, 54, 55, 60, 63, 66, 67, 69, 73, 81, 82, 84, 85, 86, 87, 90, 91, 95, 100, 103, 109, 111, 114, 115, 116, 117, 121, 126], "necessari": [0, 8, 31, 125, 126], "workflow": [0, 126], "ingest": [0, 1, 3, 69, 126], "raw": [0, 88, 89, 126], "data": [0, 1, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 85, 86, 88, 92, 93, 94, 98, 99, 105, 107, 110, 112, 114, 117, 121, 124, 126, 127], "domain": [0, 1, 3, 54, 126], "specif": [0, 1, 3, 5, 6, 10, 12, 14, 15, 16, 19, 34, 40, 41, 42, 48, 53, 54, 56, 64, 68, 69, 70, 71, 72, 73, 74, 79, 83, 85, 88, 91, 94, 95, 96, 97, 98, 106, 125, 126, 127], "format": [0, 1, 3, 6, 10, 31, 41, 51, 52, 53, 90, 92, 102, 114, 125, 126, 127], "deploi": [0, 1, 54, 56, 126], "chain": [0, 1, 54, 63, 94, 126, 127], "illustr": [0, 125, 126], "figur": [0, 102, 126], "level": [0, 10, 12, 14, 28, 33, 36, 39, 41, 42, 44, 48, 51, 52, 64, 68, 80, 122, 126, 127], "overview": [0, 126], "typic": [0, 31, 92, 126], "convert": [0, 1, 3, 6, 18, 31, 33, 36, 38, 39, 44, 46, 99, 126, 127], "industri": [0, 3, 126], "standard": [0, 3, 4, 33, 49, 56, 71, 72, 74, 85, 86, 88, 93, 94, 98, 110, 125, 126], "intermedi": [0, 1, 3, 6, 10, 75, 126, 127], "file": [0, 1, 3, 6, 10, 12, 14, 16, 18, 31, 33, 36, 39, 41, 42, 44, 46, 47, 51, 52, 53, 55, 56, 60, 62, 85, 90, 101, 104, 106, 107, 110, 111, 112, 113, 114, 115, 120, 122, 126, 127], "read": [0, 3, 6, 10, 12, 14, 31, 40, 42, 70, 76, 94, 95, 126, 127], "simpl": [0, 63, 126], "physic": [0, 1, 18, 32, 34, 54, 60, 62, 63, 95, 98, 126], "orient": [0, 63, 126], "compon": [0, 1, 63, 66, 67, 68, 90, 94, 126], "manag": [0, 103, 126], "experi": [0, 1, 5, 6, 40, 41, 56, 103, 126], "log": [0, 1, 97, 103, 104, 106, 109, 126, 127], "deploy": [0, 1, 56, 60, 62, 85, 124, 126], "modular": [0, 63, 126], "subclass": [0, 63, 126], "torch": [0, 10, 12, 14, 63, 67, 85, 86, 90, 121, 126, 127], "nn": [0, 63, 67, 83, 86, 126], "mean": [0, 10, 12, 14, 63, 76, 78, 89, 106, 115, 126], "onli": [0, 1, 10, 12, 14, 63, 68, 74, 98, 101, 108, 112, 115, 117, 121, 126, 127], "need": [0, 8, 31, 53, 63, 66, 90, 92, 106, 119, 126, 127], "import": [0, 1, 48, 63, 109, 126], "few": [0, 63, 125, 126], "exist": [0, 10, 12, 14, 37, 48, 63, 105, 114, 126], "purpos": [0, 63, 106, 126], "built": [0, 63, 85, 126], "them": [0, 1, 31, 56, 63, 76, 98, 101, 126, 127], "togeth": [0, 63, 83, 94, 126], "form": [0, 16, 63, 96, 112, 117, 126], "complet": [0, 63, 94, 126], "extend": [0, 1, 126], "suit": [0, 98, 126], "through": [0, 96, 97, 98, 106, 126], "layer": [0, 63, 65, 68, 74, 75, 76, 77, 78, 80, 92, 96, 97, 98, 126], "connect": [0, 8, 83, 84, 85, 88, 106, 126], "etc": [0, 106, 122, 126], "optimis": [0, 1, 126], "differ": [0, 10, 12, 14, 16, 18, 41, 42, 86, 94, 107, 125, 126, 127], "track": [0, 16, 18, 22, 97, 125, 126], "These": [0, 41, 51, 53, 85, 125, 126], "prepar": [0, 8, 106, 126], "satisfi": [0, 126], "o": [0, 98, 126], "load": [0, 7, 10, 47, 56, 90, 93, 112, 114, 126], "requir": [0, 18, 24, 48, 88, 96, 106, 114, 115, 117, 126, 127], "when": [0, 10, 12, 14, 31, 33, 48, 60, 67, 74, 76, 78, 92, 105, 122, 125, 126, 127], "batch": [0, 7, 37, 64, 67, 68, 92, 94, 99, 107, 110, 126], "do": [0, 56, 60, 106, 114, 115, 125, 126, 127], "predict": [0, 8, 23, 27, 29, 37, 60, 62, 75, 80, 94, 96, 98, 106, 107, 126], "either": [0, 8, 10, 12, 14, 18, 106, 126, 127], "contain": [0, 5, 6, 10, 12, 14, 15, 18, 31, 32, 36, 37, 39, 41, 42, 44, 48, 51, 53, 55, 56, 60, 62, 76, 81, 82, 84, 85, 86, 87, 89, 90, 98, 99, 106, 108, 110, 126, 127], "imag": [0, 1, 125, 126, 127], "portabl": [0, 126], "depend": [0, 126, 127], "free": [0, 106, 126], "split": [0, 8, 33, 53, 64, 126], "up": [0, 60, 125, 126, 127], "interfac": [0, 100, 114, 115, 126, 127], "block": [0, 1, 65, 67, 126], "pre": [0, 38, 39, 70, 85, 105, 125, 126], "directli": [0, 76, 126], "while": [0, 20, 104, 126], "continu": [0, 106, 126], "expand": [0, 126], "": [0, 6, 7, 8, 10, 12, 14, 31, 36, 39, 41, 44, 46, 51, 52, 53, 55, 66, 70, 75, 76, 85, 94, 98, 99, 104, 108, 110, 114, 115, 122, 123, 126, 127], "capabl": [0, 126], "project": [0, 66, 67, 125, 126], "receiv": [0, 126], "fund": [0, 126], "european": [0, 126], "union": [0, 6, 7, 8, 10, 12, 14, 20, 31, 34, 36, 39, 41, 42, 44, 55, 56, 60, 62, 64, 67, 68, 74, 76, 85, 86, 94, 98, 114, 117, 120, 126], "horizon": [0, 126], "2020": [0, 126], "innov": [0, 126], "programm": [0, 126], "under": [0, 126], "mari": [0, 126], "sk\u0142odowska": [0, 126], "curi": [0, 126], "grant": [0, 106, 126], "agreement": [0, 125, 126], "No": [0, 126], "890778": [0, 126], "work": [0, 4, 32, 74, 125, 126, 127], "rasmu": [0, 77, 126], "\u00f8rs\u00f8e": [0, 126], "partli": [0, 126], "punch4nfdi": [0, 126], "consortium": [0, 126], "support": [0, 6, 34, 125, 126, 127], "dfg": [0, 126], "nfdi": [0, 126], "39": [0, 126, 127], "1": [0, 6, 8, 10, 16, 31, 36, 39, 44, 49, 55, 64, 67, 68, 74, 76, 78, 80, 83, 84, 86, 89, 92, 96, 97, 98, 99, 104, 106, 107, 108, 114, 126, 127], "germani": [0, 126], "conveni": [1, 125, 127], "collabor": 1, "solv": [1, 125], "It": [1, 31, 48, 60, 66, 89, 96, 98, 125], "leverag": 1, "advanc": [1, 68], "machin": [1, 127], "learn": [1, 51, 53, 60, 62, 96, 98, 104, 127], "without": [1, 83, 88, 101, 106, 127], "have": [1, 20, 36, 39, 42, 44, 48, 49, 53, 68, 80, 85, 89, 98, 125, 127], "expert": 1, "themselv": [1, 114, 115], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 10, 12, 14, 16, 18, 20, 33, 48, 53, 60, 66, 67, 68, 70, 76, 79, 84, 85, 90, 106, 112, 113, 114, 115, 116, 117, 122, 125, 127], "streamlin": 1, "process": [1, 6, 36, 39, 44, 60, 66, 70, 74, 76, 78, 125, 127], "transform": [1, 67, 68, 78, 80, 92, 98, 108], "extens": [1, 41, 51, 120], "basic": 1, "across": [1, 2, 10, 12, 14, 34, 45, 55, 68, 94, 106, 109, 110, 111, 122], "variou": [1, 50], "easili": 1, "architectur": [1, 75, 76, 77, 78, 80, 92], "main": [1, 73, 85, 94, 125, 127], "featur": [1, 3, 4, 10, 12, 14, 19, 37, 53, 60, 62, 67, 68, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 92, 96, 99, 107, 114, 125], "i3": [1, 18, 32, 33, 34, 36, 39, 42, 44, 47, 55, 60, 62, 120, 127], "more": [1, 10, 47, 48, 74, 90, 114, 115, 122], "index": [1, 6, 10, 12, 14, 34, 48, 68, 70, 74, 84, 89, 92, 104], "sqlite": [1, 3, 8, 9, 14, 37, 39, 44, 46, 48, 53, 127], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 10, 51, 70, 79, 85, 98, 113], "awai": 1, "detail": [1, 74, 90, 104, 127], "expos": 1, "physicst": 1, "what": [1, 66, 85, 125], "i3modul": [1, 54, 56], "includ": [1, 67, 88, 94, 101, 106, 112, 125], "docker": 1, "run": [1, 42, 46, 55], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 9, 15, 17, 54, 63, 81, 109], "dataset": [1, 3, 7, 8, 11, 12, 13, 14, 22, 49, 74, 85, 92, 110, 114], "extractor": [1, 3, 6, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 44, 60, 62], "parquet": [1, 3, 9, 12, 36, 39, 44, 46, 52, 71, 72, 127], "pre_configur": [1, 3, 39], "reader": [1, 3, 39, 41, 42], "util": [1, 3, 15, 17, 31, 32, 33, 34, 46, 47, 48, 49, 63, 81, 103, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124], "writer": [1, 3, 39, 51, 52, 53], "constant": [1, 3, 124], "dataclass": [1, 3, 32], "dataconvert": [1, 3, 38, 51, 52, 53], "dataload": [1, 3, 8, 37, 85, 94, 107, 117], "datamodul": [1, 3], "pipelin": [1, 3], "deployment_modul": [1, 54], "rnn": [1, 63, 74, 92], "coarsen": [1, 63, 68], "standard_averaged_model": [1, 63], "standard_model": [1, 63], "pisa": [1, 24, 37, 101, 102, 121, 124, 127], "fit": [1, 8, 94, 100, 102, 106, 108, 117], "plot": [1, 100], "callback": [1, 94, 103], "label": [1, 10, 12, 14, 22, 25, 75, 85, 94, 98, 102, 103, 107, 114], "loss_funct": [1, 98, 103], "weight_fit": [1, 103], "config": [1, 7, 49, 101, 104, 106, 109, 110, 112, 113, 114, 115, 116, 117], "argpars": [1, 109], "decor": [1, 109, 121], "deprecation_tool": [1, 109], "filesi": [1, 109], "math": [1, 67, 109], "submodul": [1, 3, 9, 11, 13, 15, 17, 30, 35, 38, 40, 43, 45, 50, 54, 57, 59, 63, 65, 69, 73, 81, 82, 87, 91, 95, 100, 103, 109, 111, 116], "global": [2, 4, 74, 76, 78, 90], "deprecated_method": [3, 35, 43, 54, 57], "graphnet_file_read": [3, 40], "i3read": [3, 36, 39, 40, 44], "parquet_to_sqlit": [3, 45], "random": [3, 10, 12, 14, 45, 49, 88, 114], "sqlite_util": [3, 45], "string_selection_resolv": [3, 45], "graphnet_writ": [3, 50], "parquet_writ": [3, 50], "sqlite_writ": [3, 50], "truth": [3, 4, 10, 12, 14, 19, 28, 37, 48, 85, 98, 107, 108, 114], "i3fileset": [3, 5, 41, 42], "set": [3, 5, 8, 18, 20, 36, 39, 41, 42, 44, 51, 67, 80, 88, 89, 90, 98, 107, 125], "init_global_index": [3, 6], "collate_fn": [3, 7, 103, 107], "do_shuffl": [3, 7], "graphnetdatamodul": [3, 8], "insqlitepipelin": [3, 37], "class": [4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 36, 37, 39, 41, 42, 44, 46, 49, 51, 52, 53, 55, 56, 60, 62, 64, 66, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 90, 92, 93, 94, 96, 97, 98, 101, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 122, 125], "object": [4, 5, 10, 12, 14, 20, 31, 34, 64, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 90, 92, 93, 94, 96, 97, 98, 101, 104, 106, 107, 110, 112, 114, 115, 117, 122], "namespac": [4, 90, 114, 115], "name": [4, 6, 7, 10, 12, 14, 16, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 39, 41, 44, 46, 48, 51, 52, 53, 56, 60, 62, 70, 85, 86, 88, 92, 98, 101, 105, 108, 110, 112, 114, 115, 116, 117, 122, 125, 127], "i3featureextractor": [4, 15, 17, 60, 62], "icecube86": [4, 69, 71], "dom_x": [4, 71, 88], "dom_i": [4, 71, 88], "dom_z": [4, 71, 88], "dom_tim": [4, 88], "charg": [4, 74, 88, 89, 92, 106], "rde": 4, "pmt_area": 4, "deepcor": [4, 19, 71], "upgrad": [4, 19, 71, 127], "string": [4, 10, 12, 14, 31, 49, 68, 70, 71, 85, 90, 112], "pmt_number": 4, "dom_numb": 4, "pmt_dir_x": 4, "pmt_dir_i": 4, "pmt_dir_z": 4, "dom_typ": 4, "prometheu": [4, 63, 69], "sensor_pos_x": [4, 72], "sensor_pos_i": [4, 72], "sensor_pos_z": [4, 72], "t": [4, 34, 48, 102, 104, 106, 127], "kaggl": [4, 66, 67, 71, 78, 80], "x": [4, 28, 66, 67, 68, 84, 88, 89, 92, 98, 99, 102, 106, 108], "y": [4, 28, 84, 99, 102, 127], "z": [4, 28, 84, 88, 89, 99, 127], "auxiliari": [4, 66], "i3truthextractor": [4, 15, 17], "energy_track": [4, 97], "energy_cascad": [4, 97], "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": [4, 97, 105], "zenith": [4, 97, 105], "pid": [4, 49, 114], "elast": 4, "sim_typ": 4, "interaction_typ": 4, "interaction_tim": [4, 97], "inelast": [4, 97], "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "i3_fil": [5, 18], "str": [5, 6, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 60, 62, 67, 68, 70, 71, 72, 74, 76, 78, 80, 85, 86, 88, 89, 90, 93, 94, 98, 101, 104, 105, 107, 108, 110, 112, 113, 114, 115, 116, 117, 119, 120, 122], "gcd_file": [5, 18, 60, 62], "paramet": [5, 6, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 60, 62, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123], "output_fold": [5, 55], "worker": [5, 6, 36, 37, 44, 47, 55, 110, 122], "i3deploy": [5, 54, 59], "list": [5, 6, 7, 8, 10, 12, 14, 20, 28, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 60, 62, 64, 67, 68, 70, 74, 76, 78, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 98, 99, 102, 104, 107, 108, 114, 116, 117, 120, 122], "ani": [5, 6, 7, 8, 10, 12, 14, 31, 32, 33, 34, 41, 51, 52, 53, 60, 64, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 102, 104, 106, 108, 110, 112, 113, 114, 115, 116, 117, 122, 127], "output_fil": 6, "global_index": 6, "avail": [6, 20, 37, 96, 97, 98, 121], "pool": [6, 63, 64, 65, 74, 76, 78], "return": [6, 7, 8, 10, 12, 14, 16, 18, 31, 32, 34, 41, 42, 46, 47, 48, 49, 51, 52, 53, 55, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123], "none": [6, 7, 8, 10, 12, 14, 18, 20, 28, 32, 33, 34, 36, 37, 39, 41, 42, 44, 46, 48, 49, 51, 52, 53, 55, 56, 62, 67, 68, 74, 76, 78, 80, 84, 85, 86, 88, 90, 92, 93, 94, 98, 101, 104, 106, 107, 108, 110, 112, 113, 114, 116, 120, 122], "synchron": 6, "file_read": 6, "save_method": 6, "outdir": [6, 36, 37, 39, 44, 46, 101], "index_column": [6, 10, 12, 14, 36, 39, 44, 48, 49, 101, 107, 108, 114], "num_work": [6, 7, 39, 107], "abc": [6, 10, 16, 37, 41, 51, 55, 90, 105, 108, 113, 114, 115], "logger": [6, 8, 10, 16, 33, 37, 41, 46, 49, 51, 52, 55, 56, 83, 90, 94, 105, 108, 109, 122, 127], "A": [6, 8, 10, 33, 37, 41, 42, 48, 53, 55, 56, 60, 68, 85, 86, 89, 90, 96, 98, 99, 101, 106, 108, 112, 114, 115, 117, 127], "convers": [6, 36, 44, 46, 127], "parallel": [6, 36, 39, 44], "extract": [6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 46, 47, 60, 62, 98], "also": [6, 10, 12, 14, 49, 74, 114], "assign": [6, 10, 12, 14, 46, 64, 68, 125], "id": [6, 8, 36, 39, 44, 46, 70, 85, 107], "exampl": [6, 31, 49, 64, 68, 89, 99, 106, 114, 115, 127], "initi": [6, 33, 42, 53, 55, 67, 74, 80, 84], "graphnetfileread": [6, 40, 41, 42], "method": [6, 8, 10, 12, 14, 16, 18, 30, 31, 32, 34, 35, 36, 41, 43, 44, 51, 53, 56, 67, 68, 70, 89, 97, 106, 108], "graphnetwrit": [6, 50, 51, 52, 53], "save": [6, 16, 18, 31, 36, 39, 44, 48, 50, 51, 53, 90, 101, 104, 106, 107, 108, 112, 113, 114, 115, 127], "interim": [6, 50, 51, 52, 53], "directori": [6, 36, 37, 39, 41, 42, 44, 46, 51, 52, 101, 104, 120], "i3extractor": [6, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 39, 41, 44], "input": [6, 10, 12, 14, 36, 37, 39, 41, 42, 44, 51, 52, 55, 60, 62, 66, 67, 71, 74, 75, 76, 77, 78, 79, 85, 86, 88, 92, 96, 98, 99, 112, 117, 119], "default": [6, 8, 10, 12, 14, 18, 20, 28, 31, 36, 37, 39, 42, 44, 46, 48, 53, 55, 56, 60, 62, 66, 67, 68, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 88, 90, 92, 98, 99, 101, 102, 104, 105, 106, 108, 110, 112, 114, 120], "event_no": [6, 10, 12, 14, 36, 39, 44, 48, 49, 108, 114], "column": [6, 10, 12, 14, 16, 36, 39, 44, 48, 56, 62, 70, 74, 83, 85, 86, 88, 89, 92, 94, 96, 97, 98, 99, 101, 108], "ad": [6, 10, 12, 14, 19, 36, 39, 44, 66, 76, 80, 85, 88, 89, 101], "int": [6, 7, 8, 10, 12, 14, 22, 25, 33, 36, 37, 39, 41, 42, 44, 49, 51, 52, 53, 55, 66, 67, 68, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 101, 104, 106, 107, 108, 110, 114, 117, 122], "cpu": [6, 36, 39, 44, 56, 127], "multiprocess": [6, 36, 39, 44, 127], "get_map_funct": 6, "nb_file": 6, "map": [6, 10, 12, 14, 19, 20, 48, 71, 72, 85, 86, 98, 112, 114, 115, 117], "pure": [6, 16, 17, 20, 34], "tupl": [6, 10, 12, 14, 32, 34, 48, 67, 74, 76, 78, 89, 98, 99, 101, 102, 107, 110, 119], "option": [6, 8, 10, 12, 14, 18, 28, 37, 53, 56, 62, 67, 68, 74, 76, 78, 80, 84, 85, 86, 88, 90, 92, 98, 101, 102, 104, 108, 109, 110, 112, 114, 120, 127], "merge_fil": [6, 51, 52, 53], "merg": [6, 51, 52, 53, 106, 127], "call": [6, 20, 34, 66, 68, 98, 101, 104, 108, 122], "instanti": [6, 8, 115], "remov": [7, 36, 44, 85, 107, 110], "less": [7, 107], "two": [7, 76, 101, 104, 106, 107], "dom": [7, 10, 12, 14, 64, 68, 74, 88, 89, 92, 107], "hit": [7, 107], "should": [7, 10, 12, 14, 16, 18, 31, 49, 56, 67, 68, 74, 80, 85, 86, 92, 99, 106, 107, 112, 114, 115, 117, 125, 127], "occur": [7, 107], "product": [7, 67, 107], "selection_nam": 7, "check": [7, 32, 33, 34, 41, 48, 88, 110, 120, 121, 125, 127], "whether": [7, 32, 34, 48, 66, 67, 74, 76, 78, 80, 90, 106, 116, 120, 121], "shuffl": [7, 8, 47, 107], "select": [7, 8, 10, 12, 14, 25, 49, 107, 108, 114, 125], "bool": [7, 32, 33, 34, 48, 49, 51, 60, 66, 67, 74, 76, 78, 80, 85, 88, 89, 90, 94, 101, 104, 106, 107, 108, 110, 116, 119, 120, 121, 122], "batch_siz": [7, 37, 99, 107], "persistent_work": [7, 107], "prefetch_factor": 7, "kwarg": [7, 10, 12, 14, 33, 41, 51, 52, 64, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 90, 92, 93, 94, 96, 97, 98, 104, 106, 108, 112, 114, 115, 122], "construct": [7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 41, 46, 49, 51, 52, 56, 64, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 101, 104, 105, 106, 107, 108, 110, 113, 114, 115, 122], "t_co": 7, "callabl": [7, 10, 34, 67, 68, 70, 71, 72, 76, 85, 93, 98, 107, 108, 112, 114, 115, 116, 121], "classmethod": [7, 10, 90, 106, 112, 113], "from_dataset_config": 7, "datasetconfig": [7, 10, 49, 111, 114], "dict": [7, 8, 10, 12, 14, 20, 31, 34, 37, 48, 56, 70, 71, 72, 80, 85, 86, 90, 93, 94, 101, 102, 104, 107, 110, 112, 114, 115, 116, 117, 119], "dataset_refer": 8, "dataset_arg": 8, "test_select": [8, 114], "train_dataloader_kwarg": 8, "validation_dataloader_kwarg": 8, "test_dataloader_kwarg": 8, "train_val_split": 8, "0": [8, 10, 12, 14, 36, 39, 42, 44, 49, 60, 64, 67, 68, 74, 75, 76, 78, 83, 84, 86, 89, 92, 99, 101, 102, 106, 107, 114], "9": 8, "split_se": 8, "lightningdatamodul": 8, "creat": [8, 37, 48, 85, 88, 112, 113, 117, 125, 127], "sqlitedataset": [8, 13, 14], "parquetdataset": [8, 11, 12], "non": [8, 31, 34, 48, 74, 106], "refer": [8, 72, 114], "argument": [8, 46, 80, 85, 104, 108, 110, 112, 114, 115, 117], "valid": [8, 34, 49, 93, 94, 98, 104, 106, 110, 112, 117], "test": [8, 49, 98, 107, 114, 121, 125], "ratio": [8, 67], "42": [8, 127], "seed": [8, 10, 12, 14, 49, 85, 86, 107, 114], "prepare_data": 8, "setup": [8, 104, 127], "stage": [8, 104], "lightn": [8, 104], "properti": [8, 10, 16, 23, 34, 41, 51, 68, 70, 79, 88, 89, 94, 98, 105, 113, 122], "train_dataload": [8, 94], "val_dataload": [8, 94], "test_dataload": 8, "teardown": 8, "cleanup": 8, "shutdown": 8, "procedur": 8, "close": 8, "after": [8, 67, 74, 76, 78, 104, 110, 114], "overrid": [8, 104], "parquet_dataset": [9, 11], "sqlite_dataset": [9, 13], "columnmissingexcept": [9, 10], "load_modul": [9, 10, 90], "parse_graph_definit": [9, 10], "parse_label": [9, 10], "ensembledataset": [9, 10, 114], "except": 10, "indic": [10, 49, 68, 74, 84, 89, 92, 104, 110, 125], "miss": 10, "class_nam": [10, 33, 41, 51, 52, 115, 122], "cfg": 10, "graphdefinit": [10, 12, 14, 81, 82, 85, 86, 87, 107, 125], "arg": [10, 12, 14, 33, 64, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 90, 92, 93, 94, 96, 97, 98, 106, 110, 112, 122], "path": [10, 12, 14, 18, 36, 39, 41, 42, 44, 47, 48, 53, 55, 60, 62, 67, 85, 90, 93, 101, 102, 104, 107, 110, 112, 113, 114, 120, 127], "pulsemap": [10, 12, 14, 19, 60, 62, 107, 114], "puls": [10, 12, 14, 19, 20, 32, 34, 48, 60, 64, 68, 80, 85, 88, 89, 99], "seri": [10, 12, 14, 19, 20, 32, 34, 48, 60, 74, 88, 92], "node": [10, 12, 14, 63, 64, 68, 74, 75, 76, 78, 81, 82, 83, 85, 86, 92, 99], "multipl": [10, 12, 14, 89, 104, 114, 122], "store": [10, 12, 14, 37, 48, 51, 52, 53, 101, 105], "attribut": [10, 12, 14, 64, 98], "node_truth": [10, 12, 14, 107, 114], "uniqu": [10, 12, 14, 46, 48, 88, 99, 114], "indici": [10, 12, 14, 32, 49, 106], "tabl": [10, 12, 14, 16, 18, 37, 41, 48, 53, 70, 85, 101, 108], "truth_tabl": [10, 12, 14, 101, 107, 108, 114], "inform": [10, 12, 14, 16, 18, 20, 28, 85, 88, 89, 90, 102], "node_truth_t": [10, 12, 14, 107, 114], "string_select": [10, 12, 14, 107, 114], "subset": [10, 12, 14, 67, 74, 76, 78, 92], "given": [10, 12, 14, 18, 53, 68, 83, 98, 108, 110], "queri": [10, 12, 14, 48, 49, 53, 67], "pass": [10, 12, 14, 66, 67, 74, 75, 76, 77, 78, 79, 80, 85, 92, 94, 98, 104, 106, 108, 125], "dtype": [10, 12, 14, 85, 86, 123], "float32": [10, 12, 14, 85, 86], "tensor": [10, 12, 14, 56, 64, 66, 67, 68, 70, 74, 75, 76, 77, 78, 79, 80, 84, 88, 92, 93, 94, 98, 99, 106, 119, 123], "loss_weight_t": [10, 12, 14, 107, 114], "per": [10, 12, 14, 20, 48, 67, 68, 74, 92, 98, 106, 108], "loss": [10, 12, 14, 85, 94, 98, 104, 106, 110], "weight": [10, 12, 14, 60, 62, 67, 80, 85, 98, 101, 106, 108, 115, 127], "loss_weight_column": [10, 12, 14, 85, 107, 114], "correspond": [10, 12, 14, 31, 34, 47, 76, 85, 89, 108, 112, 114, 115, 117, 120, 127], "loss_weight_default_valu": [10, 12, 14, 85, 114], "float": [10, 12, 14, 60, 67, 74, 75, 83, 84, 85, 86, 92, 94, 101, 102, 104, 106, 107, 114], "note": [10, 12, 14, 42, 53, 89, 102, 115], "valu": [10, 12, 14, 28, 31, 48, 67, 68, 84, 85, 86, 99, 102, 105, 106, 110, 112], "specifi": [10, 12, 14, 49, 64, 89, 98, 102, 104, 127], "case": [10, 12, 14, 20, 36, 39, 42, 44, 60, 68, 89, 98, 127], "That": [10, 12, 14, 76, 97, 105], "ignor": [10, 12, 14, 34], "resolv": [10, 12, 14, 49], "10000": [10, 12, 14, 49, 66], "5": [10, 12, 14, 49, 74, 92, 110, 127], "20": [10, 12, 14, 49, 122], "graph_definit": [10, 12, 14, 63, 81, 107, 114], "defin": [10, 12, 14, 49, 56, 60, 62, 68, 81, 82, 83, 85, 87, 89, 107, 112, 114, 115, 117], "represent": [10, 12, 14, 34, 66, 67, 68, 86, 90, 92], "dictionari": [10, 12, 14, 16, 31, 32, 34, 37, 41, 48, 85, 86, 90, 101, 102, 112, 114, 115, 117], "from_config": [10, 90, 113, 114, 115], "instanc": [10, 16, 18, 28, 34, 36, 39, 42, 44, 85, 90, 101, 105, 107, 113, 115, 127], "concaten": [10, 31, 76], "one": [10, 18, 48, 60, 68, 114, 115, 120, 125, 127], "query_t": [10, 12, 14], "sequential_index": [10, 12, 14], "some": [10, 12, 14, 36, 39, 42, 44, 85, 89], "out": [10, 76, 94, 95, 106, 122, 125, 127], "sequenti": 10, "len": [10, 89], "self": [10, 85, 101, 112, 117], "_may_": 10, "_indic": 10, "If": [10, 18, 20, 33, 37, 53, 67, 76, 80, 85, 88, 89, 90, 98, 101, 104, 108, 125, 127], "entir": [10, 90], "impos": 10, "befor": [10, 76, 84, 92, 98, 104], "scalar": [10, 16, 99, 106], "length": [10, 34, 89, 99, 104], "rais": [10, 18, 20, 52, 90, 112, 117], "element": [10, 16, 31, 34, 94, 99, 107, 116], "present": [10, 18, 33, 99, 110, 120, 121], "add_label": 10, "fn": [10, 34, 112, 116], "kei": [10, 20, 31, 32, 34, 48, 67, 68, 88, 105, 114, 115], "add": [10, 67, 76, 110, 119, 125, 127], "custom": [10, 41, 85, 104], "concatdataset": 10, "singl": [10, 51, 53, 68, 76, 89, 105, 114, 115], "collect": [10, 17, 30, 106, 123], "iter": 10, "backend": [11, 13, 50, 52], "pytorch": [12, 14, 104, 127], "databas": [14, 37, 46, 48, 53, 101, 108, 127], "i3genericextractor": [15, 17], "i3hybridrecoextractor": [15, 17], "i3ntmuonlabelsextractor": [15, 17], "i3particleextractor": [15, 17], "i3pisaextractor": [15, 17], "i3quesoextractor": [15, 17], "i3retroextractor": [15, 17], "i3splinempeextractor": [15, 17], "i3tumextractor": [15, 17], "extractor_nam": [16, 18, 20, 23], "inherit": [16, 18, 34, 41, 51, 70, 88, 106, 122], "__call__": [16, 18, 41, 56], "output": [16, 46, 53, 55, 56, 66, 67, 74, 75, 76, 77, 79, 88, 89, 92, 94, 96, 97, 98, 101, 108, 114, 115, 127], "var1": 16, "var_n": 16, "variabl": [16, 18, 20, 34, 41, 76, 88, 89, 99, 108, 122], "arrai": [16, 28, 31, 88, 89, 99], "like": [16, 34, 68, 84, 98, 99, 106, 123, 125], "shape": [16, 84, 85, 88, 99, 106], "n": [16, 64, 68, 84, 99, 106], "where": [16, 36, 39, 42, 44, 85, 86, 88, 89, 92, 99, 105], "denot": [16, 104], "conjunct": [16, 98], "fileread": [16, 41], "keep": [16, 18, 88], "proven": [16, 18], "mc_truth": 16, "get": [16, 32, 48, 70, 104, 107, 127], "i3fram": [17, 20, 32, 34, 60, 62], "frame": [17, 18, 20, 30, 33, 34, 62], "i3_filt": [17, 30, 36, 39, 42, 44], "i3featureextractoricecube86": [17, 19], "i3featureextractoricecubedeepcor": [17, 19], "i3featureextractoricecubeupgrad": [17, 19], "i3pulsenoisetruthflagicecubeupgrad": [17, 19], "i3galacticplanehybridrecoextractor": [17, 21], "i3ntmuonlabelextractor": [17, 22], "i3splinempeicextractor": [17, 27], "observatori": [18, 42], "set_gcd": 18, "gframe": 18, "cframe": 18, "gcd": [18, 32, 36, 39, 42, 44, 47, 60, 62, 120], "pair": [18, 36, 39, 42, 44, 66], "member": [18, 20, 34, 41, 88, 114, 115, 122], "being": [18, 60, 96, 98], "attempt": 18, "find": [18, 84, 120], "c": [18, 31, 68, 84, 106, 127], "instead": [18, 36, 39, 42, 44, 106], "those": 18, "runtimeerror": 18, "86": [19, 71], "nois": [19, 32, 60], "flag": [19, 60], "exclude_kei": 20, "dynam": [20, 67, 76, 77, 78], "pars": [20, 102, 109, 110, 111, 112, 117], "tri": [20, 34], "automat": [20, 85, 106, 125], "cast": [20, 34], "done": [20, 68, 122, 125], "recurs": [20, 34, 36, 39, 41, 42, 44, 90, 116, 120], "each": [20, 31, 34, 46, 47, 48, 53, 55, 56, 64, 66, 67, 68, 71, 72, 74, 76, 78, 83, 85, 86, 88, 89, 92, 96, 98, 99, 101, 102, 104, 107, 120], "look": [20, 127], "signatur": [20, 34], "similar": [20, 34, 127], "handl": [20, 106, 110, 119, 122], "hand": 20, "special": [20, 60, 92, 99], "mc": [20, 48], "tree": 20, "trigger": 20, "exclud": [20, 46, 127], "valueerror": [20, 90], "hybrid": 21, "galatict": 21, "plane": [21, 106], "tum": [22, 29], "dnn": [22, 29], "padding_valu": [22, 25, 99], "northeren": 22, "i3particl": 23, "other": [23, 48, 83, 106, 125], "algorithm": 23, "comparison": [23, 106], "quantiti": [24, 98, 99], "queso": 25, "retro": [26, 37], "splinemp": 27, "border": 28, "mctree": [28, 32], "ndarrai": [28, 85, 89, 108], "boundari": 28, "volum": 28, "coordin": [28, 70, 84, 88, 89, 99], "particl": [28, 48, 105], "start": [28, 125, 127], "stop": [28, 104, 110], "within": [28, 64, 67, 68, 76, 83], "hard": [28, 88], "i3mctre": 28, "flatten_nested_dictionari": [30, 31], "serialis": [30, 31], "transpose_list_of_dict": [30, 31], "frame_is_montecarlo": [30, 32], "frame_is_nois": [30, 32], "get_om_keys_and_pulseseri": [30, 32], "i3filt": [30, 33, 36, 39, 42, 44], "nullspliti3filt": [30, 33, 36, 39, 42, 44], "i3filtermask": [30, 33], "is_boost_enum": [30, 34], "is_boost_class": [30, 34], "is_icecube_class": [30, 34], "is_typ": [30, 34], "is_method": [30, 34], "break_cyclic_recurs": [30, 34], "get_member_vari": [30, 34], "cast_object_to_pure_python": [30, 34], "cast_pulse_series_to_pure_python": [30, 34], "manipul": [31, 81, 82, 87], "obj": [31, 34, 116], "parent_kei": 31, "separ": [31, 84, 104, 127], "flatten": 31, "nest": 31, "d": [31, 84, 85, 88, 99, 125], "b": [31, 64, 68, 99], "2": [31, 36, 44, 67, 68, 74, 76, 78, 83, 86, 89, 92, 97, 99, 101, 102, 106, 114, 127], "a__b": 31, "applic": 31, "combin": [31, 39, 74, 114], "parent": 31, "__": [31, 34], "nester": 31, "json": [31, 114], "therefor": [31, 42], "we": [31, 34, 49, 89, 125, 127], "outer": 31, "abl": [31, 127], "de": 31, "transpos": 31, "mont": 32, "carlo": 32, "simul": [32, 60], "icetrai": [32, 34, 36, 39, 42, 44, 56, 121], "pulseseri": 32, "calibr": [32, 34], "gcd_dict": [32, 34], "p": [32, 106], "om": [32, 34], "i3calibr": 32, "indicesfor": 32, "filter": [33, 36, 39, 42, 44, 122], "log_fold": [33, 41, 51, 52, 122], "skip": [33, 76], "null": [33, 48], "filter_nam": 33, "filter_ani": 33, "filtermask": 33, "true": [33, 48, 60, 74, 76, 78, 80, 85, 88, 90, 101, 104, 106, 108, 114, 115, 117, 120], "kept": 33, "fals": [33, 60, 66, 67, 76, 80, 85, 90, 101, 104, 106, 108, 114], "boost": 34, "enum": 34, "ensur": [34, 47, 106, 122, 125, 127], "isn": 34, "same": [34, 48, 64, 68, 89, 96, 99, 104, 116, 122], "return_discard": 34, "mangl": 34, "take": [34, 68, 89, 92, 125], "mainli": 34, "cannot": [34, 92, 112, 117], "trivial": [34, 98], "For": [34, 88, 104], "doe": [34, 96, 98, 115], "try": 34, "equival": 34, "its": [34, 92], "regular": [34, 67], "otherwis": [34, 106], "itself": [34, 98], "deem": 34, "wai": [34, 49, 125, 127], "optic": [34, 89], "found": [34, 36, 39, 42, 44, 89, 106], "deprec": [35, 36, 43, 44, 119], "parquetdataconvert": [35, 36], "gcd_rescu": [36, 39, 42, 44, 120], "i3toparquetconvert": [36, 38, 39], "subfold": [36, 39, 42, 44], "search": [36, 39, 41, 42, 44, 120], "convent": [36, 39, 42, 44], "folder": [36, 39, 42, 44, 55], "accompani": [36, 39, 42, 44], "howev": [36, 39, 42, 44], "broken": [36, 39, 42, 44], "In": [36, 39, 41, 42, 44, 51, 114, 115, 127], "icetray_verbos": [36, 39, 42, 44], "verbos": [36, 39, 42, 44, 94, 104], "pframe": [36, 39, 42, 44], "module_dict": 37, "devic": [37, 56], "retro_table_nam": 37, "n_worker": [37, 55, 101], "pipeline_nam": 37, "initialis": [37, 115], "gnn_module_for_energy_regress": 37, "modulelist": 37, "comput": [37, 56, 67, 84, 94, 98, 99, 106, 112, 114, 115, 117], "100": [37, 127], "size": [37, 53, 67, 68, 74, 76, 77, 78, 80, 99, 110], "alreadi": [37, 48, 127], "error": [37, 106, 122, 125], "prompt": 37, "avoid": [37, 122, 125], "overwrit": [37, 56, 104], "i3tosqliteconvert": [38, 39, 44], "preconfigur": 39, "must": [41, 42, 48, 51, 64, 104, 108, 125], "addit": [41, 51, 64, 67, 94, 106, 108], "accepted_file_extens": 41, "accepted_extractor": 41, "accept": [41, 125], "compat": [41, 49, 98], "extracor_nam": 41, "produc": [41, 66, 105, 108], "find_fil": [41, 42], "mai": [41, 49, 56, 88, 127], "overwritten": [41, 110, 112], "match": [41, 108, 120, 123], "set_extractor": 41, "validate_fil": 41, "input_fil": [41, 55], "reli": 42, "environ": [42, 127], "sqlitedataconvert": [43, 44, 127], "parquettosqliteconvert": [45, 46], "pairwise_shuffl": [45, 47], "database_exist": [45, 48], "query_databas": [45, 48], "get_primary_kei": [45, 48], "database_table_exist": [45, 48], "run_sql_cod": [45, 48], "save_to_sql": [45, 48], "attach_index": [45, 48], "create_t": [45, 48], "create_table_and_save_to_sql": [45, 48], "stringselectionresolv": [45, 49], "parquet_path": 46, "mc_truth_tabl": 46, "excluded_field": 46, "everi": [46, 127], "field": [46, 102, 105, 112, 114, 115, 117, 119], "One": [46, 102], "choos": 46, "certain": [46, 101], "exclude_field": 46, "database_nam": [46, 53], "rng": 47, "relat": [47, 120], "i3_list": [47, 120], "gcd_list": [47, 120], "correpond": 47, "handi": 47, "becaus": 47, "even": 47, "files_list": 47, "gcd_shuffl": 47, "i3_shuffl": 47, "database_path": [48, 101, 108], "execut": 48, "result": [48, 68, 89, 104, 106, 107, 116, 127], "datafram": [48, 49, 51, 70, 94, 101, 107, 108], "primari": 48, "splitinicepuls": 48, "table_nam": 48, "df": 48, "attach": 48, "default_typ": 48, "integer_primary_kei": 48, "NOT": [48, 106], "integ": [48, 74, 76, 77, 106], "Such": 48, "row": [48, 53, 89, 99], "appropri": [48, 98], "expect": [48, 49, 51, 60, 62, 85, 88], "doesn": 48, "use_cach": 49, "flexibl": 49, "below": [49, 88, 102, 108, 125, 127], "show": [49, 104], "involv": 49, "cover": 49, "current": [49, 92, 104, 125, 127], "yml": [49, 110, 114, 115], "50000": [49, 114], "ab": [49, 106, 114], "12": [49, 80, 114], "14": [49, 114], "16": [49, 66, 74, 114], "13": [49, 127], "panda": [49, 108], "syntax": [49, 106], "fix": 49, "randomli": [49, 85, 86, 115], "dataformat": [50, 53], "parquetwrit": [50, 52], "sqlitewrit": [50, 53], "graphnetfilesavemethod": [51, 53], "deep": [51, 53, 67, 78, 80], "save_fil": 51, "reciev": 51, "file_extens": 51, "output_dir": [51, 52, 53], "smaller": 51, "expects_merged_datafram": 51, "write": [52, 60, 62, 127], "notimplementederror": 52, "merged_database_nam": 53, "max_table_s": 53, "db": [53, 107], "maximum": [53, 68, 88, 89, 98, 110], "proceedur": 53, "partit": 53, "approxim": 53, "you": [53, 55, 66, 114, 115, 125, 127], "mani": 53, "exceed": 53, "400": 53, "million": 53, "tend": 53, "notic": [53, 99, 106], "slower": 53, "put": 53, "my_databas": 53, "cleaning_modul": [54, 59], "inference_modul": [54, 59], "deploymentmodul": [54, 55, 56, 62], "baseclass": 55, "thei": 55, "appear": 55, "Will": [55, 60, 62, 83], "independ": 55, "sequenc": [55, 66, 67, 89, 99, 107], "determin": [55, 74], "divid": 55, "written": 55, "model_config": [56, 60, 62, 109, 111, 112, 114, 117], "state_dict": [56, 60, 62, 90, 93, 119], "prediction_column": [56, 62, 94, 107], "modelconfig": [56, 60, 62, 90, 111, 114, 115], "i3pulsecleanermodul": [59, 60], "i3inferencemodul": [59, 60, 62], "pulsemap_extractor": [60, 62], "model_nam": [60, 62, 101], "discard_empty_ev": 60, "clean": [60, 125, 127], "assum": [60, 70, 85, 89, 98, 99], "been": [60, 106, 125], "pulsmap": [60, 62], "summar": [60, 62, 88, 89], "help": [60, 62, 110, 125], "entri": [60, 62, 76, 99, 102, 110], "dynedg": [60, 62, 63, 73, 77, 78, 80], "associ": [60, 62, 85, 89, 97, 98, 106], "7": [60, 68, 101], "consid": [60, 74, 127], "posit": [60, 66, 67, 68, 80, 89, 97, 112, 117], "signal": 60, "els": 60, "elimin": 60, "whose": 60, "empti": 60, "speed": [60, 84], "especi": 60, "sinc": [60, 106], "further": 60, "calcul": [60, 66, 83, 86, 88, 94, 99, 105, 106], "energy_reco": 62, "embed": [63, 65, 74, 80, 92, 96, 98], "rnn_tito": [63, 73], "convnet": [63, 73], "dynedge_jinst": [63, 73], "dynedge_kaggle_tito": [63, 73], "icemix": [63, 73], "edg": [63, 67, 68, 76, 77, 78, 81, 84, 85, 86, 87, 88, 99], "node_rnn": [63, 74, 91], "unbatch_edge_index": [63, 64], "attributecoarsen": [63, 64], "domcoarsen": [63, 64], "customdomcoarsen": [63, 64], "domandtimewindowcoarsen": [63, 64], "standardaveragedmodel": [63, 93], "standardmodel": [63, 93, 94], "calculate_xyzt_homophili": [63, 99], "calculate_distance_matrix": [63, 99], "knn_graph_batch": [63, 99], "array_to_sequ": [63, 99], "oper": [64, 67, 73, 76], "cluster": [64, 67, 68, 74, 76, 78, 88, 89, 92], "local": [64, 71, 72, 88, 110], "edge_index": [64, 67, 99], "accord": [64, 68, 83, 85, 86, 89], "vector": [64, 67, 68, 106], "longtensor": [64, 68, 99], "mathbf": [64, 68], "ldot": [64, 68], "reduce_opt": 64, "avg": 64, "avg_pool": 64, "avg_pool_x": 64, "max": [64, 67, 76, 78, 106, 110], "max_pool": [64, 68], "max_pool_x": [64, 68], "min": [64, 68, 76, 78], "min_pool": [64, 65, 68], "min_pool_x": [64, 65, 68], "sum": [64, 68, 76, 78, 94], "sum_pool": [64, 65, 68], "sum_pool_x": [64, 65, 68], "forward": [64, 66, 67, 70, 74, 75, 76, 77, 78, 79, 80, 83, 85, 88, 92, 94, 98, 106], "simplecoarsen": 64, "window": 64, "time_window": 64, "sinusoidalposemb": [65, 66], "fourierencod": [65, 66], "spacetimeencod": [65, 66], "dynedgeconv": [65, 67, 76], "edgeconvtito": [65, 67], "dyntran": [65, 67, 74, 78], "droppath": [65, 67], "mlp": [65, 67, 76], "block_rel": [65, 67], "attention_rel": [65, 67], "sum_pool_and_distribut": [65, 68], "group_bi": [65, 68], "group_pulses_to_dom": [65, 68], "group_pulses_to_pmt": [65, 68], "std_pool_x": [65, 68], "std_pool": [65, 68], "dim": [66, 67], "n_freq": 66, "scale": [66, 67, 77, 80, 84, 85, 89, 98, 106], "lightningmodul": [66, 67, 90, 104, 122], "sinusoid": [66, 80], "competit": [66, 67, 71, 78, 80], "2nd": [66, 80], "place": [66, 80, 119, 125], "solut": [66, 67, 78, 80, 125], "see": [66, 74, 83, 85, 104, 125, 127], "arxiv": [66, 83, 106], "2310": 66, "15674": 66, "fourier": 66, "encod": 66, "attent": [66, 67, 80], "1706": 66, "03762": 66, "seen": 66, "soft": 66, "digit": 66, "dimens": [66, 67, 71, 72, 74, 75, 76, 78, 80, 89, 92, 98, 99, 106], "frequenc": 66, "seq_length": [66, 80, 99], "output_dim": 66, "incorpor": 66, "meaning": 66, "128": [66, 75, 76, 78, 80, 110], "dimension": [66, 67], "384": [66, 80], "spacetim": 66, "space": [66, 83, 84, 98, 108], "interv": 66, "between": [66, 81, 82, 83, 84, 87, 94, 98, 99, 104, 106, 114, 115], "32": [66, 80], "aggr": 67, "nb_neighbor": 67, "features_subset": [67, 74, 76, 78, 92], "edgeconv": 67, "convolut": [67, 75, 76, 77, 78], "aggreg": [67, 68], "8": [67, 68, 74, 76, 78, 86, 92, 106, 107, 125, 127], "neighbour": [67, 74, 76, 78, 83, 84, 86, 92, 99], "slice": [67, 76], "sparsetensor": 67, "messagepass": 67, "tito": [67, 74, 78], "reset_paramet": 67, "reset": 67, "learnabl": [67, 73, 74, 75, 76, 77, 78, 79, 80, 92, 98], "messag": [67, 104, 122], "x_i": 67, "x_j": 67, "layer_s": 67, "n_head": [67, 74, 78], "dyntrans1": 67, "head": [67, 74, 78, 80, 98], "multiheadattent": 67, "drop_prob": 67, "drop": [67, 75], "stochast": 67, "depth": [67, 80, 89], "probabl": [67, 106], "dure": [67, 80, 85, 98, 104], "extra_repr": [67, 90], "extra": [67, 127], "in_featur": 67, "hidden_featur": 67, "out_featur": 67, "activ": [67, 74, 76, 88, 92, 94, 98, 125, 127], "gelu": 67, "dropout_prob": 67, "multi": [67, 76], "perceptron": [67, 76], "hidden": [67, 74, 76, 77, 92], "dropout": [67, 74, 92], "input_dim": 67, "num_head": 67, "mlp_ratio": 67, "qkv_bia": 67, "qk_scale": 67, "attn_drop": 67, "drop_path": 67, "init_valu": 67, "norm_lay": 67, "normal": [67, 76, 89, 98], "layernorm": 67, "attn_head_dim": 67, "beitv2": 67, "4": [67, 77, 80, 97, 102], "feedforward": 67, "bia": 67, "term": [67, 106], "matric": 67, "factor": [67, 104], "dot": 67, "gamma_1": 67, "gamma_2": 67, "key_padding_mask": 67, "rel_pos_bia": 67, "kv": 67, "proj_drop": 67, "mechan": 67, "rel": [67, 80], "multipli": [67, 104], "head_dim": 67, "q": 67, "k": [67, 74, 76, 78, 83, 86, 92, 99, 106], "attn_mask": 67, "just": [68, 127], "negat": 68, "cluster_index": 68, "distribut": [68, 76, 97, 98, 106, 108], "ident": [68, 98], "pmt": [68, 89], "f1": 68, "f2": 68, "6": [68, 102], "groupbi": 68, "3": [68, 74, 75, 78, 84, 89, 92, 97, 99, 101, 102, 106, 125, 127], "matrix": [68, 83, 84, 99, 106], "mathbb": 68, "r": [68, 83, 127], "n_1": 68, "n_b": 68, "f": 68, "obtain": [68, 106], "wise": 68, "dens": 68, "fc": 68, "known": 68, "std": 68, "repres": [68, 74, 85, 86, 88, 89, 99, 112, 114, 115], "averag": [68, 93, 106], "torch_geometr": [68, 99], "version": [68, 89, 98, 104, 125, 127], "standardis": 69, "icecubekaggl": [69, 71], "icecubedeepcor": [69, 71], "icecubeupgrad": [69, 71], "orca150": [69, 72], "ins": 70, "feature_map": [70, 71, 72], "input_featur": [70, 85], "input_feature_nam": [70, 85, 86, 88], "adjac": 70, "geometry_t": [70, 71, 72], "public": [70, 108], "retriev": 70, "geometri": [70, 85], "string_index_nam": 70, "sensor_position_nam": 70, "xyz": [70, 71, 72, 88, 89], "sensor_index_nam": 70, "sensor": [70, 85], "geometry_table_path": [71, 72], "home": [71, 72, 110, 127], "runner": [71, 72, 110], "lib": [71, 72, 110, 127], "python3": [71, 72, 110], "string_id_column": [71, 72], "sensor_id_column": [71, 72], "sensor_id": [71, 72], "icecube_upgrad": 71, "prototyp": 72, "orca_150": 72, "sensor_string_id": 72, "dynedgejinst": [73, 77], "dynedgetito": [73, 74, 78], "deepic": [73, 80], "rnn_dynedg": 74, "intend": [74, 92, 127], "amount": 74, "nb_input": [74, 75, 76, 77, 78, 79, 92, 96, 97, 98], "time_series_column": [74, 92], "treat": [74, 92], "nb_neighbour": [74, 76, 78, 92], "rnn_layer": 74, "rnn_hidden_s": 74, "64": [74, 127], "rnn_dropout": 74, "latent": [74, 76, 78, 80, 92, 96, 97, 98], "metric": [74, 76, 78, 84, 92, 104], "nearest": [74, 76, 78, 83, 84, 86, 92, 99], "dyntrans_layer_s": [74, 78], "post_processing_layer_s": [74, 76, 78], "post": [74, 76, 78], "readout_layer_s": [74, 76, 78], "readout": [74, 76, 78], "global_pooling_schem": [74, 76, 78], "scheme": [74, 76, 78], "embedding_dim": [74, 92], "ie": 74, "use_global_featur": [74, 78], "use_post_processing_lay": [74, 78], "author": [75, 77, 106], "martin": 75, "minh": 75, "nb_output": [75, 77, 79, 88, 96, 97, 98], "nb_intermedi": 75, "dropout_ratio": 75, "fraction": [75, 92, 107], "dynedge_layer_s": 76, "dimenion": [76, 78], "256": [76, 78], "336": [76, 78], "follow": [76, 94, 106, 108, 125, 127], "_and_": 76, "As": 76, "last": [76, 92, 96, 97, 98, 104, 107], "add_global_variables_after_pool": 76, "altern": [76, 106, 125], "activation_lay": 76, "add_norm_lay": 76, "linear": 76, "skip_readout": 76, "exact": [77, 106], "2209": 77, "03042": 77, "oerso": 77, "layer_size_scal": 77, "ic": [78, 80, 88], "univers": [78, 80], "south": [78, 80], "pole": [78, 80], "core": 79, "drhb": 80, "http": [80, 83, 85, 106, 125], "github": [80, 85, 106, 127], "com": [80, 85, 106, 127], "hidden_dim": 80, "head_siz": 80, "depth_rel": 80, "n_rel": 80, "scaled_emb": 80, "include_dynedg": 80, "dynedge_arg": 80, "impact": 80, "no_weight_decai": 80, "cls_tocken": 80, "subject": [80, 106], "decai": 80, "edgedefinit": [81, 82, 83, 84, 85, 87], "how": [81, 82, 87], "drawn": [81, 82, 86, 87], "minkowski": [81, 82], "knngraph": [81, 86], "lex_sort": [81, 89], "gather_cluster_sequ": [81, 89], "identify_indic": [81, 89], "cluster_summarize_with_percentil": [81, 89], "ice_transpar": [81, 89], "knnedg": [82, 83], "radialedg": [82, 83], "euclideanedg": [82, 83], "compute_minkowski_distance_mat": [82, 84], "minkowskiknnedg": [82, 84], "_construct_edg": 83, "definit": [83, 85, 86, 88, 90, 98, 125], "nb_nearest_neighbour": [83, 84, 86], "distanc": [83, 84, 86, 99], "sphere": 83, "chosen": [83, 89, 122], "radiu": 83, "centr": 83, "radial": 83, "center": 83, "euclidean": [83, 125], "org": [83, 106, 127], "pdf": 83, "1809": 83, "06166": 83, "space_coord": 84, "time_coord": 84, "pairwis": [84, 99], "second": 84, "m": [84, 89, 106], "light": [84, 127], "time_like_weight": 84, "prefer": [84, 127], "over": [84, 88], "time_lik": 84, "hold": 85, "alter": 85, "node_definit": [85, 86], "edge_definit": 85, "nodedefinit": [85, 86, 87, 88], "nodesaspuls": [85, 87, 88], "perturbation_dict": [85, 86], "deviat": [85, 86, 89], "perturb": [85, 86], "add_inactive_sensor": 85, "inact": 85, "append": 85, "pad": [85, 89, 99], "sensor_mask": 85, "mask": [85, 99], "string_mask": 85, "sort_bi": 85, "sort": [85, 89], "truth_dict": 85, "custom_label_funct": 85, "loss_weight": [85, 98], "data_path": 85, "num_row": 85, "team": [85, 125], "blob": [85, 106], "getting_start": 85, "md": 85, "your": [86, 125, 127], "percentileclust": [87, 88], "nodeasdomtimeseri": [87, 88], "icemixnod": [87, 88], "num_puls": 88, "node_feature_nam": 88, "new_features_nam": 88, "overridden": 88, "set_number_of_input": 88, "set_output_feature_nam": 88, "measur": [88, 89, 99], "cherenkov": [88, 89], "radiat": [88, 89], "percentil": [88, 89], "summari": [88, 89], "cluster_on": [88, 89], "50": [88, 89, 110], "90": [88, 89, 102], "add_count": [88, 89], "duplic": 88, "id_column": 88, "time_column": 88, "charge_column": 88, "max_activ": 88, "n_puls": 88, "limit": [88, 106], "minimum": [88, 98], "hlc": 88, "max_puls": 88, "768": 88, "z_name": 88, "hlc_name": 88, "coincid": 88, "cluster_column": 89, "numpi": 89, "along": 89, "backward": [89, 106], "feature_idx": 89, "turn": [89, 125], "gather": 89, "nan": 89, "n_cluster": 89, "l": [89, 99], "largest": 89, "suppos": 89, "n_pmt": 89, "three": [89, 106], "spatial": 89, "column_offset": 89, "feature_nam": 89, "summarization_indic": 89, "cluster_indic": 89, "interpol": [89, 104], "500": 89, "inaccur": 89, "scatter": 89, "f_absorpt": 89, "absorpt": 89, "f_scatter": 89, "verbose_print": 90, "save_state_dict": 90, "load_state_dict": [90, 93], "karg": [90, 93], "trust": 90, "enough": 90, "eval": [90, 127], "lambda": 90, "express": [90, 106], "consequ": 90, "set_verbose_print_recurs": 90, "descript": [90, 110], "print": [90, 104, 122], "about": [90, 112, 114, 115, 117], "extra_repr_recurs": 90, "indent": 90, "recurr": 91, "nodetimernn": 92, "standalon": 92, "pr": 92, "seper": 92, "hidden_s": [92, 96, 97, 98], "num_lay": 92, "clean_up_data_object": 92, "updat": [92, 93, 99, 101, 104], "swa": 93, "ema": 93, "standardaveragemodel": 93, "training_step": [93, 94], "train_batch": [93, 94], "batch_idx": [93, 94, 99], "step": [93, 94, 99, 104], "validation_step": [93, 94], "val_batch": [93, 94], "optimizer_step": 93, "epoch": [93, 104, 110], "optim": [93, 94, 104], "optimizer_closur": 93, "on_train_end": 93, "ones": [93, 127], "backbon": 94, "max_epoch": 94, "early_stopping_pati": [94, 117], "gpu": [94, 110, 127], "ckpt_path": 94, "log_every_n_step": 94, "gradient_clip_v": 94, "distribution_strategi": 94, "trainer_kwarg": 94, "pytorch_lightn": [94, 104, 122], "trainer": [94, 104, 107], "target_label": [94, 98], "target": [94, 96, 98, 106, 117], "prediction_label": [94, 98], "configure_optim": 94, "shared_step": 94, "share": 94, "compute_loss": [94, 98], "pred": [94, 98], "mode": [94, 98], "deactiv": [94, 98], "predict_as_datafram": 94, "additional_attribut": [94, 107], "multiclassclassificationtask": [95, 96], "binaryclassificationtask": [95, 96], "binaryclassificationtasklogit": [95, 96], "azimuthreconstructionwithkappa": [95, 97], "azimuthreconstruct": [95, 97], "directionreconstructionwithkappa": [95, 97], "zenithreconstruct": [95, 97], "zenithreconstructionwithkappa": [95, 97], "energyreconstruct": [95, 97], "energyreconstructionwithpow": [95, 97], "energytcreconstruct": [95, 97], "energyreconstructionwithuncertainti": [95, 97], "vertexreconstruct": [95, 97], "positionreconstruct": [95, 97], "timereconstruct": [95, 97], "inelasticityreconstruct": [95, 97], "learnedtask": [95, 98], "standardlearnedtask": [95, 96, 97, 98], "identitytask": [95, 96, 98], "standardflowtask": [95, 98], "classifi": 96, "untransform": 96, "interpret": 96, "logit": [96, 106], "binari": [96, 106], "default_target_label": [96, 97, 98], "default_prediction_label": [96, 97, 98], "target_pr": 96, "angl": [97, 105], "kappa": [97, 106], "var": 97, "azimuth_pr": 97, "azimuth_kappa": 97, "3d": [97, 106], "vmf": 97, "dir_x_pr": 97, "dir_y_pr": 97, "dir_z_pr": 97, "direction_kappa": 97, "zenith_pr": 97, "zenith_kappa": 97, "stabl": [97, 98], "energy_pr": 97, "cascad": 97, "energy_track_pr": 97, "energy_cascade_pr": 97, "uncertainti": 97, "energy_sigma": 97, "vertex": 97, "position_x_pr": 97, "position_y_pr": 97, "position_z_pr": 97, "interaction_time_pr": 97, "interact": 97, "hadron": 97, "inelasticity_pr": 97, "lossfunct": [98, 103, 106], "auto": 98, "matic": 98, "_pred": 98, "transform_prediction_and_target": 98, "numer": 98, "transform_target": 98, "log10": [98, 108], "rather": [98, 122], "transform_infer": 98, "invers": 98, "recov": 98, "transform_support": 98, "restrict": [98, 106], "invert": 98, "1e6": 98, "train_ev": 98, "act": [98, 106], "wrt": 98, "meet": 98, "come": [98, 125], "vast": 98, "major": 98, "supervis": 98, "grab": 98, "send": 98, "evalu": 98, "normalizingflow": 98, "jacobian": 98, "flow": 98, "xyzt": 99, "homophili": 99, "xyz_coord": 99, "nb_dom": 99, "excluding_valu": 99, "total": [99, 107], "belong": 99, "inf": 99, "masked_entri": 99, "config_updat": [100, 101], "weightfitt": [100, 101, 103, 108], "contourfitt": [100, 101], "read_entri": [100, 102], "plot_2d_contour": [100, 102], "plot_1d_contour": [100, 102], "contour": [101, 102], "config_path": 101, "new_config_path": 101, "dummy_sect": 101, "temp": 101, "dummi": 101, "section": 101, "header": 101, "configupdat": 101, "programat": 101, "statistical_fit": 101, "fit_weight": [101, 108], "config_outdir": 101, "weight_nam": [101, 108], "pisa_config_dict": 101, "add_to_databas": [101, 108], "flux": 101, "_database_path": 101, "statist": 101, "effect": [101, 104, 125], "account": 101, "systemat": 101, "hypersurfac": 101, "chang": [101, 106, 125], "assumpt": 101, "regard": 101, "pipeline_path": 101, "post_fix": 101, "include_retro": 101, "fit_1d_contour": 101, "run_nam": 101, "config_dict": 101, "grid_siz": 101, "theta23_minmax": 101, "36": 101, "54": 101, "dm31_minmax": 101, "1d": [101, 102], "fit_2d_contour": 101, "2d": [101, 102, 106], "content": 102, "contour_data": 102, "xlim": 102, "ylim": 102, "0023799999999999997": 102, "0025499999999999997": 102, "chi2_critical_valu": 102, "width": 102, "height": 102, "path_to_pisa_fit_result": 102, "name_of_my_model_in_fit": 102, "legend": 102, "color": 102, "linestyl": 102, "style": [102, 125], "line": [102, 104, 110], "upper": 102, "bound": 102, "axi": 102, "605": 102, "critic": [102, 122], "chi2": 102, "cl": 102, "right": [102, 106], "176": 102, "inch": 102, "388": 102, "706": 102, "abov": [102, 106, 108, 127], "352": 102, "piecewiselinearlr": [103, 104], "progressbar": [103, 104], "graphnetearlystop": [103, 104], "mseloss": [103, 106], "rmseloss": [103, 106], "logcoshloss": [103, 106], "crossentropyloss": [103, 106], "binarycrossentropyloss": [103, 106], "logcmk": [103, 106], "vonmisesfisherloss": [103, 106], "vonmisesfisher2dloss": [103, 106], "euclideandistanceloss": [103, 106], "vonmisesfisher3dloss": [103, 106], "collator_sequence_bucklet": [103, 107], "make_dataload": [103, 107], "make_train_validation_dataload": [103, 107], "get_predict": [103, 107], "save_result": [103, 107], "save_select": [103, 107], "uniform": [103, 108], "bjoernlow": [103, 108], "mileston": 104, "last_epoch": 104, "_lrschedul": 104, "linearli": 104, "closest": 104, "vice": 104, "versa": 104, "wrap": [104, 114, 115], "stdout": 104, "get_lr": 104, "refresh_r": 104, "process_posit": 104, "tqdmprogressbar": 104, "progress": 104, "bar": 104, "customis": 104, "init_validation_tqdm": 104, "init_predict_tqdm": 104, "init_test_tqdm": 104, "init_train_tqdm": 104, "get_metr": 104, "on_train_epoch_start": 104, "previou": 104, "behaviour": 104, "on_train_epoch_end": 104, "don": [104, 127], "duplciat": 104, "save_dir": 104, "earlystop": 104, "earli": [104, 110], "keyword": [104, 112, 117], "graphnet_model": 104, "on_validation_end": 104, "on_fit_end": 104, "runtim": [105, 127], "azimuth_kei": 105, "zenith_kei": 105, "access": [105, 127], "azimiuth": 105, "return_el": 106, "elementwis": 106, "squar": 106, "root": [106, 127], "cosh": 106, "small": 106, "cross": 106, "entropi": 106, "num_class": 106, "softmax": 106, "ed": 106, "mit": 106, "licens": 106, "copyright": 106, "2019": 106, "ryabinin": 106, "permiss": 106, "herebi": 106, "person": 106, "copi": 106, "document": 106, "deal": 106, "modifi": 106, "publish": 106, "sublicens": 106, "sell": 106, "permit": 106, "whom": 106, "furnish": 106, "so": [106, 127], "condit": 106, "shall": 106, "substanti": 106, "portion": 106, "THE": 106, "AS": 106, "warranti": 106, "OF": 106, "kind": 106, "OR": 106, "impli": 106, "BUT": 106, "TO": 106, "merchant": 106, "FOR": 106, "particular": [106, 125], "AND": 106, "noninfring": 106, "IN": 106, "NO": 106, "holder": 106, "BE": 106, "liabl": 106, "claim": 106, "damag": 106, "liabil": 106, "action": 106, "contract": 106, "tort": 106, "aris": 106, "WITH": 106, "_____________________": 106, "mryab": 106, "vmf_loss": 106, "master": 106, "py": [106, 127], "bessel": 106, "exponenti": 106, "ditto": 106, "iv": 106, "1812": 106, "04616": 106, "spite": 106, "suggest": 106, "sec": 106, "paper": 106, "correct": 106, "static": [106, 125], "ctx": 106, "grad_output": 106, "von": 106, "mise": 106, "fisher": 106, "log_cmk_exact": 106, "c_": 106, "exactli": [106, 122], "log_cmk_approx": 106, "approx": 106, "minu": 106, "sign": 106, "log_cmk": 106, "kappa_switch": 106, "diverg": 106, "700": 106, "float64": 106, "precis": 106, "unaccur": 106, "switch": 106, "batch_split": 107, "bucket": 107, "cut": 107, "mini": 107, "explicitli": [107, 112, 117], "alwai": 107, "respect": 107, "database_indic": 107, "test_siz": 107, "node_level": 107, "tag": [107, 125, 127], "archiv": 107, "file_path": 107, "csv": [107, 114], "uniformweightfitt": 108, "bin": 108, "privat": 108, "_fit_weight": 108, "sql": 108, "desir": [108, 120], "np": 108, "happen": 108, "x_low": 108, "wherea": 108, "curv": 108, "base_config": [109, 111], "dataset_config": [109, 111], "training_config": [109, 111], "argumentpars": [109, 110], "rename_state_dict_entri": [109, 119], "is_gcd_fil": [109, 120], "is_i3_fil": [109, 120], "has_extens": [109, 120], "find_i3_fil": [109, 120], "has_icecube_packag": [109, 121], "has_torch_packag": [109, 121], "has_pisa_packag": [109, 121], "requires_icecub": [109, 121], "repeatfilt": [109, 122], "eps_lik": [109, 123], "consist": [110, 122, 125], "cli": 110, "pop_default": 110, "usag": 110, "command": [110, 127], "standard_argu": 110, "training_example_data_sqlit": 110, "patienc": 110, "narg": 110, "example_energy_reconstruction_model": 110, "num": 110, "fetch": 110, "with_standard_argu": 110, "baseconfig": [111, 112, 113, 114, 115, 117], "get_all_argument_valu": [111, 112], "save_dataset_config": [111, 114], "datasetconfigsavermeta": [111, 114], "datasetconfigsaverabcmeta": [111, 114], "save_model_config": [111, 115], "modelconfigsavermeta": [111, 115], "modelconfigsaverabc": [111, 115], "traverse_and_appli": [111, 116], "list_all_submodul": [111, 116], "get_all_grapnet_class": [111, 116], "is_graphnet_modul": [111, 116], "is_graphnet_class": [111, 116], "get_graphnet_class": [111, 116], "trainingconfig": [111, 117], "basemodel": [112, 114, 115], "validationerror": [112, 117], "pydantic_cor": [112, 117], "dump": [112, 114, 115], "yaml": [112, 113], "as_dict": [112, 114, 115], "model_computed_field": [112, 114, 115, 117], "classvar": [112, 114, 115, 117], "computedfieldinfo": [112, 114, 115, 117], "configdict": [112, 114, 115, 117], "conform": [112, 114, 115, 117], "pydant": [112, 114, 115, 117], "model_field": [112, 114, 115, 117], "fieldinfo": [112, 114, 115, 117], "metadata": [112, 114, 115, 117], "replac": [112, 114, 115, 117, 119], "__fields__": [112, 114, 115, 117], "v1": [112, 114, 115, 117, 127], "re": [113, 127], "save_config": 113, "dataconfig": 114, "transpar": [114, 115, 125], "reproduc": [114, 115], "session": [114, 115], "anoth": [114, 115], "still": 114, "train_select": 114, "unambigu": [114, 115], "annot": [114, 115, 117], "nonetyp": 114, "init_fn": [114, 115], "__init__": [114, 115, 127], "metaclass": [114, 115], "abcmeta": [114, 115], "datasetconfigsav": 114, "trainabl": 115, "hyperparamet": 115, "thu": 115, "modelconfigsav": 115, "fn_kwarg": 116, "structur": 116, "moduletyp": 116, "grapnet": 116, "lookup": 116, "transit": 119, "old_phras": 119, "new_phras": 119, "deepcopi": 119, "who": 119, "renam": 119, "phrase": 119, "system": [120, 127], "filenam": 120, "dir": 120, "test_funct": 121, "repeat": 122, "nb_repeats_allow": 122, "record": 122, "logrecord": 122, "clear": 122, "intuit": 122, "composit": 122, "loggeradapt": 122, "clash": 122, "setlevel": 122, "deleg": 122, "msg": 122, "warn": 122, "info": [122, 127], "debug": 122, "warning_onc": 122, "onc": 122, "handler": 122, "file_handl": 122, "filehandl": 122, "stream_handl": 122, "streamhandl": 122, "assort": 123, "ep": 123, "api": 124, "To": [125, 127], "sure": [125, 127], "smooth": 125, "guidelin": 125, "guid": 125, "encourag": 125, "contributor": 125, "discuss": 125, "bug": 125, "anyth": 125, "describ": 125, "would": 125, "yourself": 125, "ownership": 125, "prioriti": 125, "situat": 125, "lot": 125, "effort": 125, "go": 125, "outsid": 125, "scope": 125, "better": 125, "fork": 125, "repo": 125, "dedic": 125, "branch": [125, 127], "repositori": 125, "own": [125, 127], "autom": 125, "review": 125, "least": [125, 127], "pep8": 125, "docstr": 125, "googl": 125, "hint": 125, "adher": 125, "pep": 125, "pylint": 125, "flake8": 125, "black": 125, "well": 125, "recommend": [125, 127], "mypi": 125, "pydocstyl": 125, "docformatt": 125, "commit": 125, "hook": 125, "instal": 125, "pip": [125, 127], "Then": 125, "everytim": 125, "pep257": 125, "concept": 125, "ljvmiranda921": 125, "io": 125, "notebook": 125, "2018": 125, "06": 125, "21": 125, "precommit": 125, "virtual": 127, "anaconda": 127, "prove": 127, "instruct": 127, "want": 127, "part": 127, "achiev": 127, "bash": 127, "shell": 127, "cvmf": 127, "opensciencegrid": 127, "py3": 127, "v4": 127, "sh": 127, "rhel_7_x86_64": 127, "metaproject": 127, "env": 127, "alia": 127, "script": 127, "With": 127, "now": 127, "geometr": 127, "won": 127, "later": 127, "torch_cpu": 127, "txt": 127, "torch_gpu": 127, "unix": 127, "git": 127, "clone": 127, "usernam": 127, "cd": 127, "conda": 127, "gcc_linux": 127, "gxx_linux": 127, "libgcc": 127, "cudatoolkit": 127, "11": 127, "forg": 127, "box": 127, "compil": 127, "gcc": 127, "date": 127, "possibli": 127, "cuda": 127, "toolkit": 127, "recent": 127, "omit": 127, "newer": 127, "export": 127, "ld_library_path": 127, "anaconda3": 127, "miniconda3": 127, "bashrc": 127, "librari": 127, "rm": 127, "asogaard": 127, "latest": 127, "dc423315742c": 127, "01_icetrai": 127, "01_convert_i3_fil": 127, "2023": 127, "01": 127, "24": 127, "41": 127, "27": 127, "graphnet_20230124": 127, "134127": 127, "46": 127, "convert_i3_fil": 127, "ic86": 127, "thread": 127, "00": 127, "79": 127, "26": 127, "413": 127, "88it": 127, "specialis": 127, "push": 127, "vx": 127}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [54, 0, 0, "-", "deployment"], [63, 0, 0, "-", "models"], [100, 0, 0, "-", "pisa"], [103, 0, 0, "-", "training"], [109, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "dataclasses"], [6, 0, 0, "-", "dataconverter"], [7, 0, 0, "-", "dataloader"], [8, 0, 0, "-", "datamodule"], [9, 0, 0, "-", "dataset"], [15, 0, 0, "-", "extractors"], [35, 0, 0, "-", "parquet"], [37, 0, 0, "-", "pipeline"], [38, 0, 0, "-", "pre_configured"], [40, 0, 0, "-", "readers"], [43, 0, 0, "-", "sqlite"], [45, 0, 0, "-", "utilities"], [50, 0, 0, "-", "writers"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.dataclasses": [[5, 1, 1, "", "I3FileSet"], [5, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_files"], [5, 2, 1, "", "modules"], [5, 2, 1, "", "output_folder"]], "graphnet.data.dataconverter": [[6, 1, 1, "", "DataConverter"], [6, 4, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[6, 3, 1, "", "get_map_function"], [6, 3, 1, "", "merge_files"]], "graphnet.data.dataloader": [[7, 1, 1, "", "DataLoader"], [7, 4, 1, "", "collate_fn"], [7, 4, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[7, 3, 1, "", "from_dataset_config"]], "graphnet.data.datamodule": [[8, 1, 1, "", "GraphNeTDataModule"]], "graphnet.data.datamodule.GraphNeTDataModule": [[8, 3, 1, "", "prepare_data"], [8, 3, 1, "", "setup"], [8, 3, 1, "", "teardown"], [8, 5, 1, "", "test_dataloader"], [8, 5, 1, "", "train_dataloader"], [8, 5, 1, "", "val_dataloader"]], "graphnet.data.dataset": [[10, 0, 0, "-", "dataset"], [11, 0, 0, "-", "parquet"], [13, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[10, 6, 1, "", "ColumnMissingException"], [10, 1, 1, "", "Dataset"], [10, 1, 1, "", "EnsembleDataset"], [10, 4, 1, "", "load_module"], [10, 4, 1, "", "parse_graph_definition"], [10, 4, 1, "", "parse_labels"]], "graphnet.data.dataset.dataset.Dataset": [[10, 3, 1, "", "add_label"], [10, 3, 1, "", "concatenate"], [10, 3, 1, "", "from_config"], [10, 5, 1, "", "path"], [10, 3, 1, "", "query_table"], [10, 5, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[12, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[12, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[12, 3, 1, "", "query_table"]], "graphnet.data.dataset.sqlite": [[14, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[14, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[14, 3, 1, "", "query_table"]], "graphnet.data.extractors": [[16, 0, 0, "-", "extractor"], [17, 0, 0, "-", "icecube"]], "graphnet.data.extractors.extractor": [[16, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[16, 5, 1, "", "name"]], "graphnet.data.extractors.icecube": [[18, 0, 0, "-", "i3extractor"], [19, 0, 0, "-", "i3featureextractor"], [20, 0, 0, "-", "i3genericextractor"], [21, 0, 0, "-", "i3hybridrecoextractor"], [22, 0, 0, "-", "i3ntmuonlabelsextractor"], [23, 0, 0, "-", "i3particleextractor"], [24, 0, 0, "-", "i3pisaextractor"], [25, 0, 0, "-", "i3quesoextractor"], [26, 0, 0, "-", "i3retroextractor"], [27, 0, 0, "-", "i3splinempeextractor"], [28, 0, 0, "-", "i3truthextractor"], [29, 0, 0, "-", "i3tumextractor"], [30, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[18, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[18, 3, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[19, 1, 1, "", "I3FeatureExtractor"], [19, 1, 1, "", "I3FeatureExtractorIceCube86"], [19, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [19, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [19, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[20, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[21, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[22, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[23, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[24, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[25, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[26, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[27, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[28, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[29, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[31, 0, 0, "-", "collections"], [32, 0, 0, "-", "frames"], [33, 0, 0, "-", "i3_filters"], [34, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[31, 4, 1, "", "flatten_nested_dictionary"], [31, 4, 1, "", "serialise"], [31, 4, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[32, 4, 1, "", "frame_is_montecarlo"], [32, 4, 1, "", "frame_is_noise"], [32, 4, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[33, 1, 1, "", "I3Filter"], [33, 1, 1, "", "I3FilterMask"], [33, 1, 1, "", "NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[34, 4, 1, "", "break_cyclic_recursion"], [34, 4, 1, "", "cast_object_to_pure_python"], [34, 4, 1, "", "cast_pulse_series_to_pure_python"], [34, 4, 1, "", "get_member_variables"], [34, 4, 1, "", "is_boost_class"], [34, 4, 1, "", "is_boost_enum"], [34, 4, 1, "", "is_icecube_class"], [34, 4, 1, "", "is_method"], [34, 4, 1, "", "is_type"]], "graphnet.data.parquet": [[36, 0, 0, "-", "deprecated_methods"]], "graphnet.data.parquet.deprecated_methods": [[36, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.pipeline": [[37, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.pre_configured": [[39, 0, 0, "-", "dataconverters"]], "graphnet.data.pre_configured.dataconverters": [[39, 1, 1, "", "I3ToParquetConverter"], [39, 1, 1, "", "I3ToSQLiteConverter"]], "graphnet.data.readers": [[41, 0, 0, "-", "graphnet_file_reader"], [42, 0, 0, "-", "i3reader"]], "graphnet.data.readers.graphnet_file_reader": [[41, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[41, 5, 1, "", "accepted_extractors"], [41, 5, 1, "", "accepted_file_extensions"], [41, 5, 1, "", "extracor_names"], [41, 3, 1, "", "find_files"], [41, 3, 1, "", "set_extractors"], [41, 3, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[42, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[42, 3, 1, "", "find_files"]], "graphnet.data.sqlite": [[44, 0, 0, "-", "deprecated_methods"]], "graphnet.data.sqlite.deprecated_methods": [[44, 1, 1, "", "SQLiteDataConverter"]], "graphnet.data.utilities": [[46, 0, 0, "-", "parquet_to_sqlite"], [47, 0, 0, "-", "random"], [48, 0, 0, "-", "sqlite_utilities"], [49, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.parquet_to_sqlite": [[46, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[46, 3, 1, "", "run"]], "graphnet.data.utilities.random": [[47, 4, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[48, 4, 1, "", "attach_index"], [48, 4, 1, "", "create_table"], [48, 4, 1, "", "create_table_and_save_to_sql"], [48, 4, 1, "", "database_exists"], [48, 4, 1, "", "database_table_exists"], [48, 4, 1, "", "get_primary_keys"], [48, 4, 1, "", "query_database"], [48, 4, 1, "", "run_sql_code"], [48, 4, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[49, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[49, 3, 1, "", "resolve"]], "graphnet.data.writers": [[51, 0, 0, "-", "graphnet_writer"], [52, 0, 0, "-", "parquet_writer"], [53, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[51, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[51, 5, 1, "", "expects_merged_dataframes"], [51, 5, 1, "", "file_extension"], [51, 3, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[52, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[52, 3, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[53, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[53, 3, 1, "", "merge_files"]], "graphnet.deployment": [[55, 0, 0, "-", "deployer"], [56, 0, 0, "-", "deployment_module"]], "graphnet.deployment.deployer": [[55, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[55, 3, 1, "", "run"]], "graphnet.deployment.deployment_module": [[56, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.icecube": [[60, 0, 0, "-", "cleaning_module"], [62, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[60, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.inference_module": [[62, 1, 1, "", "I3InferenceModule"]], "graphnet.models": [[64, 0, 0, "-", "coarsening"], [65, 0, 0, "-", "components"], [69, 0, 0, "-", "detector"], [73, 0, 0, "-", "gnn"], [81, 0, 0, "-", "graphs"], [90, 0, 0, "-", "model"], [91, 0, 0, "-", "rnn"], [93, 0, 0, "-", "standard_averaged_model"], [94, 0, 0, "-", "standard_model"], [95, 0, 0, "-", "task"], [99, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[64, 1, 1, "", "AttributeCoarsening"], [64, 1, 1, "", "Coarsening"], [64, 1, 1, "", "CustomDOMCoarsening"], [64, 1, 1, "", "DOMAndTimeWindowCoarsening"], [64, 1, 1, "", "DOMCoarsening"], [64, 4, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[64, 3, 1, "", "forward"], [64, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[66, 0, 0, "-", "embedding"], [67, 0, 0, "-", "layers"], [68, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[66, 1, 1, "", "FourierEncoder"], [66, 1, 1, "", "SinusoidalPosEmb"], [66, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[66, 3, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[66, 3, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[66, 3, 1, "", "forward"]], "graphnet.models.components.layers": [[67, 1, 1, "", "Attention_rel"], [67, 1, 1, "", "Block"], [67, 1, 1, "", "Block_rel"], [67, 1, 1, "", "DropPath"], [67, 1, 1, "", "DynEdgeConv"], [67, 1, 1, "", "DynTrans"], [67, 1, 1, "", "EdgeConvTito"], [67, 1, 1, "", "Mlp"]], "graphnet.models.components.layers.Attention_rel": [[67, 3, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[67, 3, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[67, 3, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[67, 3, 1, "", "extra_repr"], [67, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[67, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[67, 3, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[67, 3, 1, "", "forward"], [67, 3, 1, "", "message"], [67, 3, 1, "", "reset_parameters"]], "graphnet.models.components.layers.Mlp": [[67, 3, 1, "", "forward"]], "graphnet.models.components.pool": [[68, 4, 1, "", "group_by"], [68, 4, 1, "", "group_pulses_to_dom"], [68, 4, 1, "", "group_pulses_to_pmt"], [68, 4, 1, "", "min_pool"], [68, 4, 1, "", "min_pool_x"], [68, 4, 1, "", "std_pool"], [68, 4, 1, "", "std_pool_x"], [68, 4, 1, "", "sum_pool"], [68, 4, 1, "", "sum_pool_and_distribute"], [68, 4, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[70, 0, 0, "-", "detector"], [71, 0, 0, "-", "icecube"], [72, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[70, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[70, 3, 1, "", "feature_map"], [70, 3, 1, "", "forward"], [70, 5, 1, "", "geometry_table"], [70, 5, 1, "", "sensor_index_name"], [70, 5, 1, "", "sensor_position_names"], [70, 5, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[71, 1, 1, "", "IceCube86"], [71, 1, 1, "", "IceCubeDeepCore"], [71, 1, 1, "", "IceCubeKaggle"], [71, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[71, 3, 1, "", "feature_map"], [71, 2, 1, "", "geometry_table_path"], [71, 2, 1, "", "sensor_id_column"], [71, 2, 1, "", "string_id_column"], [71, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[71, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[71, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[71, 3, 1, "", "feature_map"], [71, 2, 1, "", "geometry_table_path"], [71, 2, 1, "", "sensor_id_column"], [71, 2, 1, "", "string_id_column"], [71, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[72, 1, 1, "", "ORCA150"], [72, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.ORCA150": [[72, 3, 1, "", "feature_map"], [72, 2, 1, "", "geometry_table_path"], [72, 2, 1, "", "sensor_id_column"], [72, 2, 1, "", "string_id_column"], [72, 2, 1, "", "xyz"]], "graphnet.models.gnn": [[74, 0, 0, "-", "RNN_tito"], [75, 0, 0, "-", "convnet"], [76, 0, 0, "-", "dynedge"], [77, 0, 0, "-", "dynedge_jinst"], [78, 0, 0, "-", "dynedge_kaggle_tito"], [79, 0, 0, "-", "gnn"], [80, 0, 0, "-", "icemix"]], "graphnet.models.gnn.RNN_tito": [[74, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[74, 3, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[75, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[75, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[76, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[76, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[77, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[77, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[78, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[78, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[79, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[79, 3, 1, "", "forward"], [79, 5, 1, "", "nb_inputs"], [79, 5, 1, "", "nb_outputs"]], "graphnet.models.gnn.icemix": [[80, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[80, 3, 1, "", "forward"], [80, 3, 1, "", "no_weight_decay"]], "graphnet.models.graphs": [[82, 0, 0, "-", "edges"], [85, 0, 0, "-", "graph_definition"], [86, 0, 0, "-", "graphs"], [87, 0, 0, "-", "nodes"], [89, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[83, 0, 0, "-", "edges"], [84, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[83, 1, 1, "", "EdgeDefinition"], [83, 1, 1, "", "EuclideanEdges"], [83, 1, 1, "", "KNNEdges"], [83, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[83, 3, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[84, 1, 1, "", "MinkowskiKNNEdges"], [84, 4, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[85, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[85, 3, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[86, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[88, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[88, 1, 1, "", "IceMixNodes"], [88, 1, 1, "", "NodeAsDOMTimeSeries"], [88, 1, 1, "", "NodeDefinition"], [88, 1, 1, "", "NodesAsPulses"], [88, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[88, 3, 1, "", "forward"], [88, 5, 1, "", "nb_outputs"], [88, 3, 1, "", "set_number_of_inputs"], [88, 3, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[89, 4, 1, "", "cluster_summarize_with_percentiles"], [89, 4, 1, "", "gather_cluster_sequence"], [89, 4, 1, "", "ice_transparency"], [89, 4, 1, "", "identify_indices"], [89, 4, 1, "", "lex_sort"]], "graphnet.models.model": [[90, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[90, 3, 1, "", "extra_repr"], [90, 3, 1, "", "extra_repr_recursive"], [90, 3, 1, "", "from_config"], [90, 3, 1, "", "load"], [90, 3, 1, "", "load_state_dict"], [90, 3, 1, "", "save"], [90, 3, 1, "", "save_state_dict"], [90, 3, 1, "", "set_verbose_print_recursively"], [90, 2, 1, "", "verbose_print"]], "graphnet.models.rnn": [[92, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[92, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[92, 3, 1, "", "clean_up_data_object"], [92, 3, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[93, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[93, 3, 1, "", "load_state_dict"], [93, 3, 1, "", "on_train_end"], [93, 3, 1, "", "optimizer_step"], [93, 3, 1, "", "training_step"], [93, 3, 1, "", "validation_step"]], "graphnet.models.standard_model": [[94, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[94, 3, 1, "", "compute_loss"], [94, 3, 1, "", "configure_optimizers"], [94, 3, 1, "", "fit"], [94, 3, 1, "", "forward"], [94, 3, 1, "", "inference"], [94, 3, 1, "", "predict"], [94, 3, 1, "", "predict_as_dataframe"], [94, 5, 1, "", "prediction_labels"], [94, 3, 1, "", "shared_step"], [94, 5, 1, "", "target_labels"], [94, 3, 1, "", "train"], [94, 3, 1, "", "training_step"], [94, 3, 1, "", "validation_step"]], "graphnet.models.task": [[96, 0, 0, "-", "classification"], [97, 0, 0, "-", "reconstruction"], [98, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[96, 1, 1, "", "BinaryClassificationTask"], [96, 1, 1, "", "BinaryClassificationTaskLogits"], [96, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[96, 2, 1, "", "default_prediction_labels"], [96, 2, 1, "", "default_target_labels"], [96, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[96, 2, 1, "", "default_prediction_labels"], [96, 2, 1, "", "default_target_labels"], [96, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[97, 1, 1, "", "AzimuthReconstruction"], [97, 1, 1, "", "AzimuthReconstructionWithKappa"], [97, 1, 1, "", "DirectionReconstructionWithKappa"], [97, 1, 1, "", "EnergyReconstruction"], [97, 1, 1, "", "EnergyReconstructionWithPower"], [97, 1, 1, "", "EnergyReconstructionWithUncertainty"], [97, 1, 1, "", "EnergyTCReconstruction"], [97, 1, 1, "", "InelasticityReconstruction"], [97, 1, 1, "", "PositionReconstruction"], [97, 1, 1, "", "TimeReconstruction"], [97, 1, 1, "", "VertexReconstruction"], [97, 1, 1, "", "ZenithReconstruction"], [97, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[97, 2, 1, "", "default_prediction_labels"], [97, 2, 1, "", "default_target_labels"], [97, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[97, 2, 1, "", "default_prediction_labels"], [97, 2, 1, "", "default_target_labels"], [97, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[97, 2, 1, "", "default_prediction_labels"], [97, 2, 1, "", "default_target_labels"], [97, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[97, 2, 1, "", "default_prediction_labels"], [97, 2, 1, "", "default_target_labels"], [97, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[97, 2, 1, "", "default_prediction_labels"], [97, 2, 1, "", "default_target_labels"], [97, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[97, 2, 1, "", "default_prediction_labels"], [97, 2, 1, "", "default_target_labels"], [97, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[97, 2, 1, "", "default_prediction_labels"], [97, 2, 1, "", "default_target_labels"], [97, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[97, 2, 1, "", "default_prediction_labels"], [97, 2, 1, "", "default_target_labels"], [97, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[97, 2, 1, "", "default_prediction_labels"], [97, 2, 1, "", "default_target_labels"], [97, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[97, 2, 1, "", "default_prediction_labels"], [97, 2, 1, "", "default_target_labels"], [97, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[97, 2, 1, "", "default_prediction_labels"], [97, 2, 1, "", "default_target_labels"], [97, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[97, 2, 1, "", "default_prediction_labels"], [97, 2, 1, "", "default_target_labels"], [97, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[97, 2, 1, "", "default_prediction_labels"], [97, 2, 1, "", "default_target_labels"], [97, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[98, 1, 1, "", "IdentityTask"], [98, 1, 1, "", "LearnedTask"], [98, 1, 1, "", "StandardFlowTask"], [98, 1, 1, "", "StandardLearnedTask"], [98, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[98, 5, 1, "", "default_prediction_labels"], [98, 5, 1, "", "default_target_labels"], [98, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[98, 3, 1, "", "compute_loss"], [98, 3, 1, "", "forward"], [98, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[98, 3, 1, "", "compute_loss"], [98, 3, 1, "", "forward"], [98, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[98, 3, 1, "", "compute_loss"], [98, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[98, 5, 1, "", "default_prediction_labels"], [98, 5, 1, "", "default_target_labels"], [98, 3, 1, "", "inference"], [98, 5, 1, "", "nb_inputs"], [98, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[99, 4, 1, "", "array_to_sequence"], [99, 4, 1, "", "calculate_distance_matrix"], [99, 4, 1, "", "calculate_xyzt_homophily"], [99, 4, 1, "", "knn_graph_batch"]], "graphnet.pisa": [[101, 0, 0, "-", "fitting"], [102, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[101, 1, 1, "", "ContourFitter"], [101, 1, 1, "", "WeightFitter"], [101, 4, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[101, 3, 1, "", "fit_1d_contour"], [101, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[101, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[102, 4, 1, "", "plot_1D_contour"], [102, 4, 1, "", "plot_2D_contour"], [102, 4, 1, "", "read_entry"]], "graphnet.training": [[104, 0, 0, "-", "callbacks"], [105, 0, 0, "-", "labels"], [106, 0, 0, "-", "loss_functions"], [107, 0, 0, "-", "utils"], [108, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[104, 1, 1, "", "GraphnetEarlyStopping"], [104, 1, 1, "", "PiecewiseLinearLR"], [104, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[104, 3, 1, "", "on_fit_end"], [104, 3, 1, "", "on_train_epoch_end"], [104, 3, 1, "", "on_validation_end"], [104, 3, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[104, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[104, 3, 1, "", "get_metrics"], [104, 3, 1, "", "init_predict_tqdm"], [104, 3, 1, "", "init_test_tqdm"], [104, 3, 1, "", "init_train_tqdm"], [104, 3, 1, "", "init_validation_tqdm"], [104, 3, 1, "", "on_train_epoch_end"], [104, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[105, 1, 1, "", "Direction"], [105, 1, 1, "", "Label"]], "graphnet.training.labels.Label": [[105, 5, 1, "", "key"]], "graphnet.training.loss_functions": [[106, 1, 1, "", "BinaryCrossEntropyLoss"], [106, 1, 1, "", "CrossEntropyLoss"], [106, 1, 1, "", "EuclideanDistanceLoss"], [106, 1, 1, "", "LogCMK"], [106, 1, 1, "", "LogCoshLoss"], [106, 1, 1, "", "LossFunction"], [106, 1, 1, "", "MSELoss"], [106, 1, 1, "", "RMSELoss"], [106, 1, 1, "", "VonMisesFisher2DLoss"], [106, 1, 1, "", "VonMisesFisher3DLoss"], [106, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[106, 3, 1, "", "backward"], [106, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[106, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[106, 3, 1, "", "log_cmk"], [106, 3, 1, "", "log_cmk_approx"], [106, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[107, 4, 1, "", "collate_fn"], [107, 1, 1, "", "collator_sequence_buckleting"], [107, 4, 1, "", "get_predictions"], [107, 4, 1, "", "make_dataloader"], [107, 4, 1, "", "make_train_validation_dataloader"], [107, 4, 1, "", "save_results"], [107, 4, 1, "", "save_selection"]], "graphnet.training.weight_fitting": [[108, 1, 1, "", "BjoernLow"], [108, 1, 1, "", "Uniform"], [108, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[108, 3, 1, "", "fit"]], "graphnet.utilities": [[110, 0, 0, "-", "argparse"], [111, 0, 0, "-", "config"], [118, 0, 0, "-", "decorators"], [119, 0, 0, "-", "deprecation_tools"], [120, 0, 0, "-", "filesys"], [121, 0, 0, "-", "imports"], [122, 0, 0, "-", "logging"], [123, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[110, 1, 1, "", "ArgumentParser"], [110, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[110, 2, 1, "", "standard_arguments"], [110, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[110, 3, 1, "", "contains"], [110, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[112, 0, 0, "-", "base_config"], [113, 0, 0, "-", "configurable"], [114, 0, 0, "-", "dataset_config"], [115, 0, 0, "-", "model_config"], [116, 0, 0, "-", "parsing"], [117, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[112, 1, 1, "", "BaseConfig"], [112, 4, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[112, 3, 1, "", "as_dict"], [112, 3, 1, "", "dump"], [112, 3, 1, "", "load"], [112, 2, 1, "", "model_computed_fields"], [112, 2, 1, "", "model_config"], [112, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[113, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[113, 5, 1, "", "config"], [113, 3, 1, "", "from_config"], [113, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[114, 1, 1, "", "DatasetConfig"], [114, 1, 1, "", "DatasetConfigSaverABCMeta"], [114, 1, 1, "", "DatasetConfigSaverMeta"], [114, 4, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[114, 3, 1, "", "as_dict"], [114, 2, 1, "", "features"], [114, 2, 1, "", "graph_definition"], [114, 2, 1, "", "index_column"], [114, 2, 1, "", "labels"], [114, 2, 1, "", "loss_weight_column"], [114, 2, 1, "", "loss_weight_default_value"], [114, 2, 1, "", "loss_weight_table"], [114, 2, 1, "", "model_computed_fields"], [114, 2, 1, "", "model_config"], [114, 2, 1, "", "model_fields"], [114, 2, 1, "", "node_truth"], [114, 2, 1, "", "node_truth_table"], [114, 2, 1, "", "path"], [114, 2, 1, "", "pulsemaps"], [114, 2, 1, "", "seed"], [114, 2, 1, "", "selection"], [114, 2, 1, "", "string_selection"], [114, 2, 1, "", "truth"], [114, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[115, 1, 1, "", "ModelConfig"], [115, 1, 1, "", "ModelConfigSaverABC"], [115, 1, 1, "", "ModelConfigSaverMeta"], [115, 4, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[115, 2, 1, "", "arguments"], [115, 3, 1, "", "as_dict"], [115, 2, 1, "", "class_name"], [115, 2, 1, "", "model_computed_fields"], [115, 2, 1, "", "model_config"], [115, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[116, 4, 1, "", "get_all_grapnet_classes"], [116, 4, 1, "", "get_graphnet_classes"], [116, 4, 1, "", "is_graphnet_class"], [116, 4, 1, "", "is_graphnet_module"], [116, 4, 1, "", "list_all_submodules"], [116, 4, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[117, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[117, 2, 1, "", "dataloader"], [117, 2, 1, "", "early_stopping_patience"], [117, 2, 1, "", "fit"], [117, 2, 1, "", "model_computed_fields"], [117, 2, 1, "", "model_config"], [117, 2, 1, "", "model_fields"], [117, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[119, 4, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[120, 4, 1, "", "find_i3_files"], [120, 4, 1, "", "has_extension"], [120, 4, 1, "", "is_gcd_file"], [120, 4, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[121, 4, 1, "", "has_icecube_package"], [121, 4, 1, "", "has_pisa_package"], [121, 4, 1, "", "has_torch_package"], [121, 4, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[122, 1, 1, "", "Logger"], [122, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[122, 3, 1, "", "critical"], [122, 3, 1, "", "debug"], [122, 3, 1, "", "error"], [122, 5, 1, "", "file_handlers"], [122, 5, 1, "", "handlers"], [122, 3, 1, "", "info"], [122, 3, 1, "", "setLevel"], [122, 5, 1, "", "stream_handlers"], [122, 3, 1, "", "warning"], [122, 3, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[122, 3, 1, "", "filter"], [122, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[123, 4, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 126], "impact": [0, 126], "usag": [0, 126], "acknowledg": [0, 126], "api": 1, "constant": [2, 4], "data": 3, "dataclass": 5, "dataconvert": [6, 39], "dataload": 7, "datamodul": 8, "dataset": [9, 10], "parquet": [11, 35], "parquet_dataset": 12, "sqlite": [13, 43], "sqlite_dataset": 14, "extractor": [15, 16], "icecub": [17, 59, 71], "i3extractor": 18, "i3featureextractor": 19, "i3genericextractor": 20, "i3hybridrecoextractor": 21, "i3ntmuonlabelsextractor": 22, "i3particleextractor": 23, "i3pisaextractor": 24, "i3quesoextractor": 25, "i3retroextractor": 26, "i3splinempeextractor": 27, "i3truthextractor": 28, "i3tumextractor": 29, "util": [30, 45, 89, 99, 107, 109], "collect": 31, "frame": 32, "i3_filt": 33, "type": 34, "deprecated_method": [36, 44, 58], "pipelin": 37, "pre_configur": 38, "reader": 40, "graphnet_file_read": 41, "i3read": 42, "parquet_to_sqlit": 46, "random": 47, "sqlite_util": 48, "string_selection_resolv": 49, "writer": 50, "graphnet_writ": 51, "parquet_writ": 52, "sqlite_writ": 53, "deploy": [54, 55], "deployment_modul": 56, "i3modul": 57, "cleaning_modul": 60, "i3deploy": 61, "inference_modul": 62, "model": [63, 90], "coarsen": 64, "compon": 65, "embed": 66, "layer": 67, "pool": 68, "detector": [69, 70], "prometheu": 72, "gnn": [73, 79], "rnn_tito": 74, "convnet": 75, "dynedg": 76, "dynedge_jinst": 77, "dynedge_kaggle_tito": 78, "icemix": 80, "graph": [81, 86], "edg": [82, 83], "minkowski": 84, "graph_definit": 85, "node": [87, 88], "rnn": 91, "node_rnn": 92, "standard_averaged_model": 93, "standard_model": 94, "task": [95, 98], "classif": 96, "reconstruct": 97, "pisa": 100, "fit": 101, "plot": 102, "train": 103, "callback": 104, "label": 105, "loss_funct": 106, "weight_fit": 108, "argpars": 110, "config": 111, "base_config": 112, "configur": 113, "dataset_config": 114, "model_config": 115, "pars": 116, "training_config": 117, "decor": 118, "deprecation_tool": 119, "filesi": 120, "import": 121, "log": 122, "math": 123, "src": 124, "contribut": 125, "github": 125, "issu": 125, "pull": 125, "request": 125, "convent": 125, "code": 125, "qualiti": 125, "instal": 127, "icetrai": 127, "stand": 127, "alon": 127, "run": 127, "docker": 127}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"], [126, "about"]], "Impact": [[0, "impact"], [126, "impact"]], "Usage": [[0, "usage"], [126, "usage"]], "Acknowledgements": [[0, "acknowledgements"], [126, "acknowledgements"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "dataclasses": [[5, "module-graphnet.data.dataclasses"]], "dataconverter": [[6, "module-graphnet.data.dataconverter"]], "dataloader": [[7, "module-graphnet.data.dataloader"]], "datamodule": [[8, "module-graphnet.data.datamodule"]], "dataset": [[9, "module-graphnet.data.dataset"], [10, "module-graphnet.data.dataset.dataset"]], "parquet": [[11, "module-graphnet.data.dataset.parquet"], [35, "module-graphnet.data.parquet"]], "parquet_dataset": [[12, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "sqlite": [[13, "module-graphnet.data.dataset.sqlite"], [43, "module-graphnet.data.sqlite"]], "sqlite_dataset": [[14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "extractors": [[15, "module-graphnet.data.extractors"]], "extractor": [[16, "module-graphnet.data.extractors.extractor"]], "icecube": [[17, "module-graphnet.data.extractors.icecube"], [59, "icecube"], [71, "module-graphnet.models.detector.icecube"]], "i3extractor": [[18, "module-graphnet.data.extractors.icecube.i3extractor"]], "i3featureextractor": [[19, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor": [[20, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3hybridrecoextractor": [[21, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3ntmuonlabelsextractor": [[22, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor": [[23, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor": [[24, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor": [[25, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3retroextractor": [[26, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeextractor": [[27, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor": [[28, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor": [[29, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "utilities": [[30, "module-graphnet.data.extractors.icecube.utilities"], [45, "module-graphnet.data.utilities"], [109, "module-graphnet.utilities"]], "collections": [[31, "module-graphnet.data.extractors.icecube.utilities.collections"]], "frames": [[32, "module-graphnet.data.extractors.icecube.utilities.frames"]], "i3_filters": [[33, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "types": [[34, "module-graphnet.data.extractors.icecube.utilities.types"]], "deprecated_methods": [[36, "module-graphnet.data.parquet.deprecated_methods"], [44, "module-graphnet.data.sqlite.deprecated_methods"], [58, "deprecated-methods"]], "pipeline": [[37, "module-graphnet.data.pipeline"]], "pre_configured": [[38, "module-graphnet.data.pre_configured"]], "dataconverters": [[39, "module-graphnet.data.pre_configured.dataconverters"]], "readers": [[40, "module-graphnet.data.readers"]], "graphnet_file_reader": [[41, "module-graphnet.data.readers.graphnet_file_reader"]], "i3reader": [[42, "module-graphnet.data.readers.i3reader"]], "parquet_to_sqlite": [[46, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[47, "module-graphnet.data.utilities.random"]], "sqlite_utilities": [[48, "module-graphnet.data.utilities.sqlite_utilities"]], "string_selection_resolver": [[49, "module-graphnet.data.utilities.string_selection_resolver"]], "writers": [[50, "module-graphnet.data.writers"]], "graphnet_writer": [[51, "module-graphnet.data.writers.graphnet_writer"]], "parquet_writer": [[52, "module-graphnet.data.writers.parquet_writer"]], "sqlite_writer": [[53, "module-graphnet.data.writers.sqlite_writer"]], "deployment": [[54, "module-graphnet.deployment"]], "deployer": [[55, "module-graphnet.deployment.deployer"]], "deployment_module": [[56, "module-graphnet.deployment.deployment_module"]], "i3modules": [[57, "i3modules"]], "cleaning_module": [[60, "module-graphnet.deployment.icecube.cleaning_module"]], "i3deployer": [[61, "i3deployer"]], "inference_module": [[62, "module-graphnet.deployment.icecube.inference_module"]], "models": [[63, "module-graphnet.models"]], "coarsening": [[64, "module-graphnet.models.coarsening"]], "components": [[65, "module-graphnet.models.components"]], "embedding": [[66, "module-graphnet.models.components.embedding"]], "layers": [[67, "module-graphnet.models.components.layers"]], "pool": [[68, "module-graphnet.models.components.pool"]], "detector": [[69, "module-graphnet.models.detector"], [70, "module-graphnet.models.detector.detector"]], "prometheus": [[72, "module-graphnet.models.detector.prometheus"]], "gnn": [[73, "module-graphnet.models.gnn"], [79, "module-graphnet.models.gnn.gnn"]], "RNN_tito": [[74, "module-graphnet.models.gnn.RNN_tito"]], "convnet": [[75, "module-graphnet.models.gnn.convnet"]], "dynedge": [[76, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[77, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedge_kaggle_tito": [[78, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "icemix": [[80, "module-graphnet.models.gnn.icemix"]], "graphs": [[81, "module-graphnet.models.graphs"], [86, "module-graphnet.models.graphs.graphs"]], "edges": [[82, "module-graphnet.models.graphs.edges"], [83, "module-graphnet.models.graphs.edges.edges"]], "minkowski": [[84, "module-graphnet.models.graphs.edges.minkowski"]], "graph_definition": [[85, "module-graphnet.models.graphs.graph_definition"]], "nodes": [[87, "module-graphnet.models.graphs.nodes"], [88, "module-graphnet.models.graphs.nodes.nodes"]], "utils": [[89, "module-graphnet.models.graphs.utils"], [99, "module-graphnet.models.utils"], [107, "module-graphnet.training.utils"]], "model": [[90, "module-graphnet.models.model"]], "rnn": [[91, "module-graphnet.models.rnn"]], "node_rnn": [[92, "module-graphnet.models.rnn.node_rnn"]], "standard_averaged_model": [[93, "module-graphnet.models.standard_averaged_model"]], "standard_model": [[94, "module-graphnet.models.standard_model"]], "task": [[95, "module-graphnet.models.task"], [98, "module-graphnet.models.task.task"]], "classification": [[96, "module-graphnet.models.task.classification"]], "reconstruction": [[97, "module-graphnet.models.task.reconstruction"]], "pisa": [[100, "module-graphnet.pisa"]], "fitting": [[101, "module-graphnet.pisa.fitting"]], "plotting": [[102, "module-graphnet.pisa.plotting"]], "training": [[103, "module-graphnet.training"]], "callbacks": [[104, "module-graphnet.training.callbacks"]], "labels": [[105, "module-graphnet.training.labels"]], "loss_functions": [[106, "module-graphnet.training.loss_functions"]], "weight_fitting": [[108, "module-graphnet.training.weight_fitting"]], "argparse": [[110, "module-graphnet.utilities.argparse"]], "config": [[111, "module-graphnet.utilities.config"]], "base_config": [[112, "module-graphnet.utilities.config.base_config"]], "configurable": [[113, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[114, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[115, "module-graphnet.utilities.config.model_config"]], "parsing": [[116, "module-graphnet.utilities.config.parsing"]], "training_config": [[117, "module-graphnet.utilities.config.training_config"]], "decorators": [[118, "module-graphnet.utilities.decorators"]], "deprecation_tools": [[119, "module-graphnet.utilities.deprecation_tools"]], "filesys": [[120, "module-graphnet.utilities.filesys"]], "imports": [[121, "module-graphnet.utilities.imports"]], "logging": [[122, "module-graphnet.utilities.logging"]], "maths": [[123, "module-graphnet.utilities.maths"]], "src": [[124, "src"]], "Contribute": [[125, "contribute"]], "GitHub issues": [[125, "github-issues"]], "Pull requests": [[125, "pull-requests"]], "Conventions": [[125, "conventions"]], "Code quality": [[125, "code-quality"]], "Install": [[127, "install"]], "Installing with IceTray": [[127, "installing-with-icetray"]], "Installing stand-alone": [[127, "installing-stand-alone"]], "Running in Docker": [[127, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.dataclasses"], [6, "module-graphnet.data.dataconverter"], [7, "module-graphnet.data.dataloader"], [8, "module-graphnet.data.datamodule"], [9, "module-graphnet.data.dataset"], [10, "module-graphnet.data.dataset.dataset"], [11, "module-graphnet.data.dataset.parquet"], [12, "module-graphnet.data.dataset.parquet.parquet_dataset"], [13, "module-graphnet.data.dataset.sqlite"], [14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"], [15, "module-graphnet.data.extractors"], [16, "module-graphnet.data.extractors.extractor"], [17, "module-graphnet.data.extractors.icecube"], [18, "module-graphnet.data.extractors.icecube.i3extractor"], [19, "module-graphnet.data.extractors.icecube.i3featureextractor"], [20, "module-graphnet.data.extractors.icecube.i3genericextractor"], [21, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"], [22, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"], [23, "module-graphnet.data.extractors.icecube.i3particleextractor"], [24, "module-graphnet.data.extractors.icecube.i3pisaextractor"], [25, "module-graphnet.data.extractors.icecube.i3quesoextractor"], [26, "module-graphnet.data.extractors.icecube.i3retroextractor"], [27, "module-graphnet.data.extractors.icecube.i3splinempeextractor"], [28, "module-graphnet.data.extractors.icecube.i3truthextractor"], [29, "module-graphnet.data.extractors.icecube.i3tumextractor"], [30, "module-graphnet.data.extractors.icecube.utilities"], [31, "module-graphnet.data.extractors.icecube.utilities.collections"], [32, "module-graphnet.data.extractors.icecube.utilities.frames"], [33, "module-graphnet.data.extractors.icecube.utilities.i3_filters"], [34, "module-graphnet.data.extractors.icecube.utilities.types"], [35, "module-graphnet.data.parquet"], [36, "module-graphnet.data.parquet.deprecated_methods"], [37, "module-graphnet.data.pipeline"], [38, "module-graphnet.data.pre_configured"], [39, "module-graphnet.data.pre_configured.dataconverters"], [40, "module-graphnet.data.readers"], [41, "module-graphnet.data.readers.graphnet_file_reader"], [42, "module-graphnet.data.readers.i3reader"], [43, "module-graphnet.data.sqlite"], [44, "module-graphnet.data.sqlite.deprecated_methods"], [45, "module-graphnet.data.utilities"], [46, "module-graphnet.data.utilities.parquet_to_sqlite"], [47, "module-graphnet.data.utilities.random"], [48, "module-graphnet.data.utilities.sqlite_utilities"], [49, "module-graphnet.data.utilities.string_selection_resolver"], [50, "module-graphnet.data.writers"], [51, "module-graphnet.data.writers.graphnet_writer"], [52, "module-graphnet.data.writers.parquet_writer"], [53, "module-graphnet.data.writers.sqlite_writer"], [54, "module-graphnet.deployment"], [55, "module-graphnet.deployment.deployer"], [56, "module-graphnet.deployment.deployment_module"], [60, "module-graphnet.deployment.icecube.cleaning_module"], [62, "module-graphnet.deployment.icecube.inference_module"], [63, "module-graphnet.models"], [64, "module-graphnet.models.coarsening"], [65, "module-graphnet.models.components"], [66, "module-graphnet.models.components.embedding"], [67, "module-graphnet.models.components.layers"], [68, "module-graphnet.models.components.pool"], [69, "module-graphnet.models.detector"], [70, "module-graphnet.models.detector.detector"], [71, "module-graphnet.models.detector.icecube"], [72, "module-graphnet.models.detector.prometheus"], [73, "module-graphnet.models.gnn"], [74, "module-graphnet.models.gnn.RNN_tito"], [75, "module-graphnet.models.gnn.convnet"], [76, "module-graphnet.models.gnn.dynedge"], [77, "module-graphnet.models.gnn.dynedge_jinst"], [78, "module-graphnet.models.gnn.dynedge_kaggle_tito"], [79, "module-graphnet.models.gnn.gnn"], [80, "module-graphnet.models.gnn.icemix"], [81, "module-graphnet.models.graphs"], [82, "module-graphnet.models.graphs.edges"], [83, "module-graphnet.models.graphs.edges.edges"], [84, "module-graphnet.models.graphs.edges.minkowski"], [85, "module-graphnet.models.graphs.graph_definition"], [86, "module-graphnet.models.graphs.graphs"], [87, "module-graphnet.models.graphs.nodes"], [88, "module-graphnet.models.graphs.nodes.nodes"], [89, "module-graphnet.models.graphs.utils"], [90, "module-graphnet.models.model"], [91, "module-graphnet.models.rnn"], [92, "module-graphnet.models.rnn.node_rnn"], [93, "module-graphnet.models.standard_averaged_model"], [94, "module-graphnet.models.standard_model"], [95, "module-graphnet.models.task"], [96, "module-graphnet.models.task.classification"], [97, "module-graphnet.models.task.reconstruction"], [98, "module-graphnet.models.task.task"], [99, "module-graphnet.models.utils"], [100, "module-graphnet.pisa"], [101, "module-graphnet.pisa.fitting"], [102, "module-graphnet.pisa.plotting"], [103, "module-graphnet.training"], [104, "module-graphnet.training.callbacks"], [105, "module-graphnet.training.labels"], [106, "module-graphnet.training.loss_functions"], [107, "module-graphnet.training.utils"], [108, "module-graphnet.training.weight_fitting"], [109, "module-graphnet.utilities"], [110, "module-graphnet.utilities.argparse"], [111, "module-graphnet.utilities.config"], [112, "module-graphnet.utilities.config.base_config"], [113, "module-graphnet.utilities.config.configurable"], [114, "module-graphnet.utilities.config.dataset_config"], [115, "module-graphnet.utilities.config.model_config"], [116, "module-graphnet.utilities.config.parsing"], [117, "module-graphnet.utilities.config.training_config"], [118, "module-graphnet.utilities.decorators"], [119, "module-graphnet.utilities.deprecation_tools"], [120, "module-graphnet.utilities.filesys"], [121, "module-graphnet.utilities.imports"], [122, "module-graphnet.utilities.logging"], [123, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "i3fileset (class in graphnet.data.dataclasses)": [[5, "graphnet.data.dataclasses.I3FileSet"]], "settings (class in graphnet.data.dataclasses)": [[5, "graphnet.data.dataclasses.Settings"]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[5, "graphnet.data.dataclasses.I3FileSet.gcd_file"]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.gcd_file"]], "graphnet.data.dataclasses": [[5, "module-graphnet.data.dataclasses"]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[5, "graphnet.data.dataclasses.I3FileSet.i3_file"]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.i3_files"]], "modules (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.modules"]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.output_folder"]], "dataconverter (class in graphnet.data.dataconverter)": [[6, "graphnet.data.dataconverter.DataConverter"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[6, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[6, "module-graphnet.data.dataconverter"]], "init_global_index() (in module graphnet.data.dataconverter)": [[6, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[6, "graphnet.data.dataconverter.DataConverter.merge_files"]], "dataloader (class in graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.DataLoader"]], "collate_fn() (in module graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.collate_fn"]], "do_shuffle() (in module graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.do_shuffle"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[7, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "graphnet.data.dataloader": [[7, "module-graphnet.data.dataloader"]], "graphnetdatamodule (class in graphnet.data.datamodule)": [[8, "graphnet.data.datamodule.GraphNeTDataModule"]], "graphnet.data.datamodule": [[8, "module-graphnet.data.datamodule"]], "prepare_data() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.prepare_data"]], "setup() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.setup"]], "teardown() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.teardown"]], "test_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.test_dataloader"]], "train_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.train_dataloader"]], "val_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.val_dataloader"]], "graphnet.data.dataset": [[9, "module-graphnet.data.dataset"]], "columnmissingexception": [[10, "graphnet.data.dataset.dataset.ColumnMissingException"]], "dataset (class in graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.Dataset"]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.EnsembleDataset"]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[10, "graphnet.data.dataset.dataset.Dataset.add_label"]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[10, "graphnet.data.dataset.dataset.Dataset.concatenate"]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[10, "graphnet.data.dataset.dataset.Dataset.from_config"]], "graphnet.data.dataset.dataset": [[10, "module-graphnet.data.dataset.dataset"]], "load_module() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.load_module"]], "parse_graph_definition() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.parse_graph_definition"]], "parse_labels() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.parse_labels"]], "path (graphnet.data.dataset.dataset.dataset property)": [[10, "graphnet.data.dataset.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[10, "graphnet.data.dataset.dataset.Dataset.query_table"]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[10, "graphnet.data.dataset.dataset.Dataset.truth_table"]], "graphnet.data.dataset.parquet": [[11, "module-graphnet.data.dataset.parquet"]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[12, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[12, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[12, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table"]], "graphnet.data.dataset.sqlite": [[13, "module-graphnet.data.dataset.sqlite"]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[14, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[14, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "graphnet.data.extractors": [[15, "module-graphnet.data.extractors"]], "extractor (class in graphnet.data.extractors.extractor)": [[16, "graphnet.data.extractors.extractor.Extractor"]], "graphnet.data.extractors.extractor": [[16, "module-graphnet.data.extractors.extractor"]], "name (graphnet.data.extractors.extractor.extractor property)": [[16, "graphnet.data.extractors.extractor.Extractor.name"]], "graphnet.data.extractors.icecube": [[17, "module-graphnet.data.extractors.icecube"]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[18, "graphnet.data.extractors.icecube.i3extractor.I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor": [[18, "module-graphnet.data.extractors.icecube.i3extractor"]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[18, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd"]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3featureextractor": [[19, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[20, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3genericextractor": [[20, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[21, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[21, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[22, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[22, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[23, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[23, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[24, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[24, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[25, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[25, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[26, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[26, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[27, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[27, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[28, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[28, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[29, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[29, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "graphnet.data.extractors.icecube.utilities": [[30, "module-graphnet.data.extractors.icecube.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[31, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.icecube.utilities.collections": [[31, "module-graphnet.data.extractors.icecube.utilities.collections"]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[31, "graphnet.data.extractors.icecube.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[31, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[32, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[32, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[32, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.frames": [[32, "module-graphnet.data.extractors.icecube.utilities.frames"]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[33, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter"]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[33, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask"]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[33, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[33, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.get_member_variables"]], "graphnet.data.extractors.icecube.utilities.types": [[34, "module-graphnet.data.extractors.icecube.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_type"]], "graphnet.data.parquet": [[35, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.deprecated_methods)": [[36, "graphnet.data.parquet.deprecated_methods.ParquetDataConverter"]], "graphnet.data.parquet.deprecated_methods": [[36, "module-graphnet.data.parquet.deprecated_methods"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[37, "graphnet.data.pipeline.InSQLitePipeline"]], "graphnet.data.pipeline": [[37, "module-graphnet.data.pipeline"]], "graphnet.data.pre_configured": [[38, "module-graphnet.data.pre_configured"]], "i3toparquetconverter (class in graphnet.data.pre_configured.dataconverters)": [[39, "graphnet.data.pre_configured.dataconverters.I3ToParquetConverter"]], "i3tosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[39, "graphnet.data.pre_configured.dataconverters.I3ToSQLiteConverter"]], "graphnet.data.pre_configured.dataconverters": [[39, "module-graphnet.data.pre_configured.dataconverters"]], "graphnet.data.readers": [[40, "module-graphnet.data.readers"]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader"]], "accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors"]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions"]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names"]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files"]], "graphnet.data.readers.graphnet_file_reader": [[41, "module-graphnet.data.readers.graphnet_file_reader"]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors"]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files"]], "i3reader (class in graphnet.data.readers.i3reader)": [[42, "graphnet.data.readers.i3reader.I3Reader"]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[42, "graphnet.data.readers.i3reader.I3Reader.find_files"]], "graphnet.data.readers.i3reader": [[42, "module-graphnet.data.readers.i3reader"]], "graphnet.data.sqlite": [[43, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.deprecated_methods)": [[44, "graphnet.data.sqlite.deprecated_methods.SQLiteDataConverter"]], "graphnet.data.sqlite.deprecated_methods": [[44, "module-graphnet.data.sqlite.deprecated_methods"]], "graphnet.data.utilities": [[45, "module-graphnet.data.utilities"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[46, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite": [[46, "module-graphnet.data.utilities.parquet_to_sqlite"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[46, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.data.utilities.random": [[47, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[47, "graphnet.data.utilities.random.pairwise_shuffle"]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.database_table_exists"]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.get_primary_keys"]], "graphnet.data.utilities.sqlite_utilities": [[48, "module-graphnet.data.utilities.sqlite_utilities"]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.query_database"]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.save_to_sql"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[49, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[49, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[49, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.data.writers": [[50, "module-graphnet.data.writers"]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[51, "graphnet.data.writers.graphnet_writer.GraphNeTWriter"]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[51, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes"]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[51, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension"]], "graphnet.data.writers.graphnet_writer": [[51, "module-graphnet.data.writers.graphnet_writer"]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[51, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files"]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[52, "graphnet.data.writers.parquet_writer.ParquetWriter"]], "graphnet.data.writers.parquet_writer": [[52, "module-graphnet.data.writers.parquet_writer"]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[52, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files"]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[53, "graphnet.data.writers.sqlite_writer.SQLiteWriter"]], "graphnet.data.writers.sqlite_writer": [[53, "module-graphnet.data.writers.sqlite_writer"]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[53, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files"]], "graphnet.deployment": [[54, "module-graphnet.deployment"]], "deployer (class in graphnet.deployment.deployer)": [[55, "graphnet.deployment.deployer.Deployer"]], "graphnet.deployment.deployer": [[55, "module-graphnet.deployment.deployer"]], "run() (graphnet.deployment.deployer.deployer method)": [[55, "graphnet.deployment.deployer.Deployer.run"]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[56, "graphnet.deployment.deployment_module.DeploymentModule"]], "graphnet.deployment.deployment_module": [[56, "module-graphnet.deployment.deployment_module"]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[60, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule"]], "graphnet.deployment.icecube.cleaning_module": [[60, "module-graphnet.deployment.icecube.cleaning_module"]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[62, "graphnet.deployment.icecube.inference_module.I3InferenceModule"]], "graphnet.deployment.icecube.inference_module": [[62, "module-graphnet.deployment.icecube.inference_module"]], "graphnet.models": [[63, "module-graphnet.models"]], "attributecoarsening (class in graphnet.models.coarsening)": [[64, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[64, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[64, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[64, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[64, "graphnet.models.coarsening.DOMCoarsening"]], "forward() (graphnet.models.coarsening.coarsening method)": [[64, "graphnet.models.coarsening.Coarsening.forward"]], "graphnet.models.coarsening": [[64, "module-graphnet.models.coarsening"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[64, "graphnet.models.coarsening.Coarsening.reduce_options"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[64, "graphnet.models.coarsening.unbatch_edge_index"]], "graphnet.models.components": [[65, "module-graphnet.models.components"]], "fourierencoder (class in graphnet.models.components.embedding)": [[66, "graphnet.models.components.embedding.FourierEncoder"]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[66, "graphnet.models.components.embedding.SinusoidalPosEmb"]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[66, "graphnet.models.components.embedding.SpacetimeEncoder"]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[66, "graphnet.models.components.embedding.FourierEncoder.forward"]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[66, "graphnet.models.components.embedding.SinusoidalPosEmb.forward"]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[66, "graphnet.models.components.embedding.SpacetimeEncoder.forward"]], "graphnet.models.components.embedding": [[66, "module-graphnet.models.components.embedding"]], "attention_rel (class in graphnet.models.components.layers)": [[67, "graphnet.models.components.layers.Attention_rel"]], "block (class in graphnet.models.components.layers)": [[67, "graphnet.models.components.layers.Block"]], "block_rel (class in graphnet.models.components.layers)": [[67, "graphnet.models.components.layers.Block_rel"]], "droppath (class in graphnet.models.components.layers)": [[67, "graphnet.models.components.layers.DropPath"]], "dynedgeconv (class in graphnet.models.components.layers)": [[67, "graphnet.models.components.layers.DynEdgeConv"]], "dyntrans (class in graphnet.models.components.layers)": [[67, "graphnet.models.components.layers.DynTrans"]], "edgeconvtito (class in graphnet.models.components.layers)": [[67, "graphnet.models.components.layers.EdgeConvTito"]], "mlp (class in graphnet.models.components.layers)": [[67, "graphnet.models.components.layers.Mlp"]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[67, "graphnet.models.components.layers.DropPath.extra_repr"]], "forward() (graphnet.models.components.layers.attention_rel method)": [[67, "graphnet.models.components.layers.Attention_rel.forward"]], "forward() (graphnet.models.components.layers.block method)": [[67, "graphnet.models.components.layers.Block.forward"]], "forward() (graphnet.models.components.layers.block_rel method)": [[67, "graphnet.models.components.layers.Block_rel.forward"]], "forward() (graphnet.models.components.layers.droppath method)": [[67, "graphnet.models.components.layers.DropPath.forward"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[67, "graphnet.models.components.layers.DynEdgeConv.forward"]], "forward() (graphnet.models.components.layers.dyntrans method)": [[67, "graphnet.models.components.layers.DynTrans.forward"]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[67, "graphnet.models.components.layers.EdgeConvTito.forward"]], "forward() (graphnet.models.components.layers.mlp method)": [[67, "graphnet.models.components.layers.Mlp.forward"]], "graphnet.models.components.layers": [[67, "module-graphnet.models.components.layers"]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[67, "graphnet.models.components.layers.EdgeConvTito.message"]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[67, "graphnet.models.components.layers.EdgeConvTito.reset_parameters"]], "graphnet.models.components.pool": [[68, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.sum_pool_x"]], "graphnet.models.detector": [[69, "module-graphnet.models.detector"]], "detector (class in graphnet.models.detector.detector)": [[70, "graphnet.models.detector.detector.Detector"]], "feature_map() (graphnet.models.detector.detector.detector method)": [[70, "graphnet.models.detector.detector.Detector.feature_map"]], "forward() (graphnet.models.detector.detector.detector method)": [[70, "graphnet.models.detector.detector.Detector.forward"]], "geometry_table (graphnet.models.detector.detector.detector property)": [[70, "graphnet.models.detector.detector.Detector.geometry_table"]], "graphnet.models.detector.detector": [[70, "module-graphnet.models.detector.detector"]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[70, "graphnet.models.detector.detector.Detector.sensor_index_name"]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[70, "graphnet.models.detector.detector.Detector.sensor_position_names"]], "string_index_name (graphnet.models.detector.detector.detector property)": [[70, "graphnet.models.detector.detector.Detector.string_index_name"]], "icecube86 (class in graphnet.models.detector.icecube)": [[71, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[71, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[71, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[71, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[71, "graphnet.models.detector.icecube.IceCube86.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[71, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[71, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[71, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map"]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[71, "graphnet.models.detector.icecube.IceCube86.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[71, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path"]], "graphnet.models.detector.icecube": [[71, "module-graphnet.models.detector.icecube"]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[71, "graphnet.models.detector.icecube.IceCube86.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[71, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[71, "graphnet.models.detector.icecube.IceCube86.string_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[71, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column"]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[71, "graphnet.models.detector.icecube.IceCube86.xyz"]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[71, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz"]], "orca150 (class in graphnet.models.detector.prometheus)": [[72, "graphnet.models.detector.prometheus.ORCA150"]], "prometheus (class in graphnet.models.detector.prometheus)": [[72, "graphnet.models.detector.prometheus.Prometheus"]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[72, "graphnet.models.detector.prometheus.ORCA150.feature_map"]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[72, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path"]], "graphnet.models.detector.prometheus": [[72, "module-graphnet.models.detector.prometheus"]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[72, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column"]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[72, "graphnet.models.detector.prometheus.ORCA150.string_id_column"]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[72, "graphnet.models.detector.prometheus.ORCA150.xyz"]], "graphnet.models.gnn": [[73, "module-graphnet.models.gnn"]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[74, "graphnet.models.gnn.RNN_tito.RNN_TITO"]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[74, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward"]], "graphnet.models.gnn.rnn_tito": [[74, "module-graphnet.models.gnn.RNN_tito"]], "convnet (class in graphnet.models.gnn.convnet)": [[75, "graphnet.models.gnn.convnet.ConvNet"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[75, "graphnet.models.gnn.convnet.ConvNet.forward"]], "graphnet.models.gnn.convnet": [[75, "module-graphnet.models.gnn.convnet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[76, "graphnet.models.gnn.dynedge.DynEdge"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[76, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "graphnet.models.gnn.dynedge": [[76, "module-graphnet.models.gnn.dynedge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[77, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[77, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "graphnet.models.gnn.dynedge_jinst": [[77, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[78, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO"]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[78, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[78, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "gnn (class in graphnet.models.gnn.gnn)": [[79, "graphnet.models.gnn.gnn.GNN"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[79, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn.gnn": [[79, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[79, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[79, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "deepice (class in graphnet.models.gnn.icemix)": [[80, "graphnet.models.gnn.icemix.DeepIce"]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[80, "graphnet.models.gnn.icemix.DeepIce.forward"]], "graphnet.models.gnn.icemix": [[80, "module-graphnet.models.gnn.icemix"]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[80, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay"]], "graphnet.models.graphs": [[81, "module-graphnet.models.graphs"]], "graphnet.models.graphs.edges": [[82, "module-graphnet.models.graphs.edges"]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[83, "graphnet.models.graphs.edges.edges.EdgeDefinition"]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[83, "graphnet.models.graphs.edges.edges.EuclideanEdges"]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[83, "graphnet.models.graphs.edges.edges.KNNEdges"]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[83, "graphnet.models.graphs.edges.edges.RadialEdges"]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[83, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward"]], "graphnet.models.graphs.edges.edges": [[83, "module-graphnet.models.graphs.edges.edges"]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[84, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges"]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[84, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat"]], "graphnet.models.graphs.edges.minkowski": [[84, "module-graphnet.models.graphs.edges.minkowski"]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[85, "graphnet.models.graphs.graph_definition.GraphDefinition"]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[85, "graphnet.models.graphs.graph_definition.GraphDefinition.forward"]], "graphnet.models.graphs.graph_definition": [[85, "module-graphnet.models.graphs.graph_definition"]], "knngraph (class in graphnet.models.graphs.graphs)": [[86, "graphnet.models.graphs.graphs.KNNGraph"]], "graphnet.models.graphs.graphs": [[86, "module-graphnet.models.graphs.graphs"]], "graphnet.models.graphs.nodes": [[87, "module-graphnet.models.graphs.nodes"]], "icemixnodes (class in graphnet.models.graphs.nodes.nodes)": [[88, "graphnet.models.graphs.nodes.nodes.IceMixNodes"]], "nodeasdomtimeseries (class in graphnet.models.graphs.nodes.nodes)": [[88, "graphnet.models.graphs.nodes.nodes.NodeAsDOMTimeSeries"]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[88, "graphnet.models.graphs.nodes.nodes.NodeDefinition"]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[88, "graphnet.models.graphs.nodes.nodes.NodesAsPulses"]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[88, "graphnet.models.graphs.nodes.nodes.PercentileClusters"]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[88, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward"]], "graphnet.models.graphs.nodes.nodes": [[88, "module-graphnet.models.graphs.nodes.nodes"]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[88, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs"]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[88, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs"]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[88, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names"]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[89, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles"]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[89, "graphnet.models.graphs.utils.gather_cluster_sequence"]], "graphnet.models.graphs.utils": [[89, "module-graphnet.models.graphs.utils"]], "ice_transparency() (in module graphnet.models.graphs.utils)": [[89, "graphnet.models.graphs.utils.ice_transparency"]], "identify_indices() (in module graphnet.models.graphs.utils)": [[89, "graphnet.models.graphs.utils.identify_indices"]], "lex_sort() (in module graphnet.models.graphs.utils)": [[89, "graphnet.models.graphs.utils.lex_sort"]], "model (class in graphnet.models.model)": [[90, "graphnet.models.model.Model"]], "extra_repr() (graphnet.models.model.model method)": [[90, "graphnet.models.model.Model.extra_repr"]], "extra_repr_recursive() (graphnet.models.model.model method)": [[90, "graphnet.models.model.Model.extra_repr_recursive"]], "from_config() (graphnet.models.model.model class method)": [[90, "graphnet.models.model.Model.from_config"]], "graphnet.models.model": [[90, "module-graphnet.models.model"]], "load() (graphnet.models.model.model class method)": [[90, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[90, "graphnet.models.model.Model.load_state_dict"]], "save() (graphnet.models.model.model method)": [[90, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[90, "graphnet.models.model.Model.save_state_dict"]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[90, "graphnet.models.model.Model.set_verbose_print_recursively"]], "verbose_print (graphnet.models.model.model attribute)": [[90, "graphnet.models.model.Model.verbose_print"]], "graphnet.models.rnn": [[91, "module-graphnet.models.rnn"]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[92, "graphnet.models.rnn.node_rnn.Node_RNN"]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[92, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object"]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[92, "graphnet.models.rnn.node_rnn.Node_RNN.forward"]], "graphnet.models.rnn.node_rnn": [[92, "module-graphnet.models.rnn.node_rnn"]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[93, "graphnet.models.standard_averaged_model.StandardAveragedModel"]], "graphnet.models.standard_averaged_model": [[93, "module-graphnet.models.standard_averaged_model"]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[93, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict"]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[93, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end"]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[93, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step"]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[93, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step"]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[93, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step"]], "standardmodel (class in graphnet.models.standard_model)": [[94, "graphnet.models.standard_model.StandardModel"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[94, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[94, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "fit() (graphnet.models.standard_model.standardmodel method)": [[94, "graphnet.models.standard_model.StandardModel.fit"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[94, "graphnet.models.standard_model.StandardModel.forward"]], "graphnet.models.standard_model": [[94, "module-graphnet.models.standard_model"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[94, "graphnet.models.standard_model.StandardModel.inference"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[94, "graphnet.models.standard_model.StandardModel.predict"]], "predict_as_dataframe() (graphnet.models.standard_model.standardmodel method)": [[94, "graphnet.models.standard_model.StandardModel.predict_as_dataframe"]], "prediction_labels (graphnet.models.standard_model.standardmodel property)": [[94, "graphnet.models.standard_model.StandardModel.prediction_labels"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[94, "graphnet.models.standard_model.StandardModel.shared_step"]], "target_labels (graphnet.models.standard_model.standardmodel property)": [[94, "graphnet.models.standard_model.StandardModel.target_labels"]], "train() (graphnet.models.standard_model.standardmodel method)": [[94, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[94, "graphnet.models.standard_model.StandardModel.training_step"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[94, "graphnet.models.standard_model.StandardModel.validation_step"]], "graphnet.models.task": [[95, "module-graphnet.models.task"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[96, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[96, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[96, "graphnet.models.task.classification.MulticlassClassificationTask"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[96, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[96, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[96, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[96, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels"]], "graphnet.models.task.classification": [[96, "module-graphnet.models.task.classification"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[96, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[96, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[97, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[97, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[97, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[97, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[97, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[97, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[97, "graphnet.models.task.reconstruction.EnergyTCReconstruction"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[97, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[97, "graphnet.models.task.reconstruction.PositionReconstruction"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[97, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[97, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[97, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[97, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[97, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[97, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[97, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[97, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[97, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[97, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[97, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[97, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[97, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[97, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[97, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[97, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels"]], "graphnet.models.task.reconstruction": [[97, "module-graphnet.models.task.reconstruction"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[97, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[97, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[97, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[97, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[97, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[97, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[97, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "identitytask (class in graphnet.models.task.task)": [[98, "graphnet.models.task.task.IdentityTask"]], "learnedtask (class in graphnet.models.task.task)": [[98, "graphnet.models.task.task.LearnedTask"]], "standardflowtask (class in graphnet.models.task.task)": [[98, "graphnet.models.task.task.StandardFlowTask"]], "standardlearnedtask (class in graphnet.models.task.task)": [[98, "graphnet.models.task.task.StandardLearnedTask"]], "task (class in graphnet.models.task.task)": [[98, "graphnet.models.task.task.Task"]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[98, "graphnet.models.task.task.LearnedTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardflowtask method)": [[98, "graphnet.models.task.task.StandardFlowTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[98, "graphnet.models.task.task.StandardLearnedTask.compute_loss"]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[98, "graphnet.models.task.task.IdentityTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.task.task property)": [[98, "graphnet.models.task.task.Task.default_prediction_labels"]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[98, "graphnet.models.task.task.IdentityTask.default_target_labels"]], "default_target_labels (graphnet.models.task.task.task property)": [[98, "graphnet.models.task.task.Task.default_target_labels"]], "forward() (graphnet.models.task.task.learnedtask method)": [[98, "graphnet.models.task.task.LearnedTask.forward"]], "forward() (graphnet.models.task.task.standardflowtask method)": [[98, "graphnet.models.task.task.StandardFlowTask.forward"]], "graphnet.models.task.task": [[98, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[98, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[98, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[98, "graphnet.models.task.task.LearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[98, "graphnet.models.task.task.StandardLearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[98, "graphnet.models.task.task.Task.nb_inputs"]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[98, "graphnet.models.task.task.StandardFlowTask.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[98, "graphnet.models.task.task.Task.train_eval"]], "array_to_sequence() (in module graphnet.models.utils)": [[99, "graphnet.models.utils.array_to_sequence"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[99, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[99, "graphnet.models.utils.calculate_xyzt_homophily"]], "graphnet.models.utils": [[99, "module-graphnet.models.utils"]], "knn_graph_batch() (in module graphnet.models.utils)": [[99, "graphnet.models.utils.knn_graph_batch"]], "graphnet.pisa": [[100, "module-graphnet.pisa"]], "contourfitter (class in graphnet.pisa.fitting)": [[101, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[101, "graphnet.pisa.fitting.WeightFitter"]], "config_updater() (in module graphnet.pisa.fitting)": [[101, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[101, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[101, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[101, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa.fitting": [[101, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[102, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[102, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[102, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[102, "graphnet.pisa.plotting.read_entry"]], "graphnet.training": [[103, "module-graphnet.training"]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[104, "graphnet.training.callbacks.GraphnetEarlyStopping"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[104, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[104, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[104, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[104, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[104, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[104, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[104, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[104, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[104, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[104, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end"]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[104, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[104, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[104, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[104, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end"]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[104, "graphnet.training.callbacks.GraphnetEarlyStopping.setup"]], "direction (class in graphnet.training.labels)": [[105, "graphnet.training.labels.Direction"]], "label (class in graphnet.training.labels)": [[105, "graphnet.training.labels.Label"]], "graphnet.training.labels": [[105, "module-graphnet.training.labels"]], "key (graphnet.training.labels.label property)": [[105, "graphnet.training.labels.Label.key"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[106, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[106, "graphnet.training.loss_functions.CrossEntropyLoss"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[106, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.training.loss_functions)": [[106, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[106, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[106, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[106, "graphnet.training.loss_functions.MSELoss"]], "rmseloss (class in graphnet.training.loss_functions)": [[106, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[106, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[106, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[106, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[106, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[106, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[106, "graphnet.training.loss_functions.LossFunction.forward"]], "graphnet.training.loss_functions": [[106, "module-graphnet.training.loss_functions"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[106, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[106, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[106, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "collate_fn() (in module graphnet.training.utils)": [[107, "graphnet.training.utils.collate_fn"]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[107, "graphnet.training.utils.collator_sequence_buckleting"]], "get_predictions() (in module graphnet.training.utils)": [[107, "graphnet.training.utils.get_predictions"]], "graphnet.training.utils": [[107, "module-graphnet.training.utils"]], "make_dataloader() (in module graphnet.training.utils)": [[107, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[107, "graphnet.training.utils.make_train_validation_dataloader"]], "save_results() (in module graphnet.training.utils)": [[107, "graphnet.training.utils.save_results"]], "save_selection() (in module graphnet.training.utils)": [[107, "graphnet.training.utils.save_selection"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[108, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[108, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[108, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[108, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[108, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[109, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[110, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[110, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[110, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[110, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[110, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[110, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[110, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[111, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[112, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[112, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[112, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[112, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[112, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[112, "graphnet.utilities.config.base_config.BaseConfig.load"]], "model_computed_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[112, "graphnet.utilities.config.base_config.BaseConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[112, "graphnet.utilities.config.base_config.BaseConfig.model_config"]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[112, "graphnet.utilities.config.base_config.BaseConfig.model_fields"]], "configurable (class in graphnet.utilities.config.configurable)": [[113, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[113, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[113, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[113, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[113, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta"]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta"]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition"]], "graphnet.utilities.config.dataset_config": [[114, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.labels"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "model_computed_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config"]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[114, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[114, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[115, "graphnet.utilities.config.model_config.ModelConfig"]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[115, "graphnet.utilities.config.model_config.ModelConfigSaverABC"]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[115, "graphnet.utilities.config.model_config.ModelConfigSaverMeta"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[115, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[115, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[115, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[115, "module-graphnet.utilities.config.model_config"]], "model_computed_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[115, "graphnet.utilities.config.model_config.ModelConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[115, "graphnet.utilities.config.model_config.ModelConfig.model_config"]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[115, "graphnet.utilities.config.model_config.ModelConfig.model_fields"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[115, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[116, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[116, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[116, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[116, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[116, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[116, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[116, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[117, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[117, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[117, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[117, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[117, "module-graphnet.utilities.config.training_config"]], "model_computed_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[117, "graphnet.utilities.config.training_config.TrainingConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[117, "graphnet.utilities.config.training_config.TrainingConfig.model_config"]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[117, "graphnet.utilities.config.training_config.TrainingConfig.model_fields"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[117, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[118, "module-graphnet.utilities.decorators"]], "graphnet.utilities.deprecation_tools": [[119, "module-graphnet.utilities.deprecation_tools"]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[119, "graphnet.utilities.deprecation_tools.rename_state_dict_entries"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[120, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[120, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[120, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[120, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[120, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[121, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[121, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[121, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[121, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[121, "graphnet.utilities.imports.requires_icecube"]], "logger (class in graphnet.utilities.logging)": [[122, "graphnet.utilities.logging.Logger"]], "repeatfilter (class in graphnet.utilities.logging)": [[122, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.logger method)": [[122, "graphnet.utilities.logging.Logger.critical"]], "debug() (graphnet.utilities.logging.logger method)": [[122, "graphnet.utilities.logging.Logger.debug"]], "error() (graphnet.utilities.logging.logger method)": [[122, "graphnet.utilities.logging.Logger.error"]], "file_handlers (graphnet.utilities.logging.logger property)": [[122, "graphnet.utilities.logging.Logger.file_handlers"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[122, "graphnet.utilities.logging.RepeatFilter.filter"]], "graphnet.utilities.logging": [[122, "module-graphnet.utilities.logging"]], "handlers (graphnet.utilities.logging.logger property)": [[122, "graphnet.utilities.logging.Logger.handlers"]], "info() (graphnet.utilities.logging.logger method)": [[122, "graphnet.utilities.logging.Logger.info"]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[122, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed"]], "setlevel() (graphnet.utilities.logging.logger method)": [[122, "graphnet.utilities.logging.Logger.setLevel"]], "stream_handlers (graphnet.utilities.logging.logger property)": [[122, "graphnet.utilities.logging.Logger.stream_handlers"]], "warning() (graphnet.utilities.logging.logger method)": [[122, "graphnet.utilities.logging.Logger.warning"]], "warning_once() (graphnet.utilities.logging.logger method)": [[122, "graphnet.utilities.logging.Logger.warning_once"]], "eps_like() (in module graphnet.utilities.maths)": [[123, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[123, "module-graphnet.utilities.maths"]]}})