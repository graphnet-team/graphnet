Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.combine_extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.extractors.liquido", "api/graphnet.data.extractors.liquido.h5_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pipeline", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.readers.liquido_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.liquido", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.icemix", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.pisa", "api/graphnet.pisa.fitting", "api/graphnet.pisa.plotting", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.combine_extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.extractors.liquido.rst", "api/graphnet.data.extractors.liquido.h5_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pipeline.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.readers.liquido_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.liquido.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.pisa.rst", "api/graphnet.pisa.fitting.rst", "api/graphnet.pisa.plotting.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "sqlite", "sqlite_dataset", "extractors", "combine_extractors", "extractor", "icecube", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "internal", "parquet_extractor", "liquido", "h5_extractor", "parquet", "deprecated_methods", "pipeline", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "internal_parquet_reader", "liquido_reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "deployment", "deployer", "deployment_module", "i3modules", "deprecated_methods", "icecube", "cleaning_module", "i3deployer", "inference_module", "exceptions", "exceptions", "models", "coarsening", "components", "embedding", "layers", "pool", "detector", "detector", "icecube", "liquido", "prometheus", "gnn", "RNN_tito", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "icemix", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "rnn", "node_rnn", "standard_averaged_model", "standard_model", "task", "classification", "reconstruction", "task", "utils", "pisa", "fitting", "plotting", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 42, 44, 46, 47, 48, 49, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 67, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137], "i": [0, 1, 8, 10, 12, 14, 16, 17, 19, 21, 32, 33, 34, 35, 37, 39, 41, 44, 47, 51, 54, 55, 56, 59, 60, 62, 67, 69, 73, 75, 76, 77, 85, 86, 90, 93, 95, 98, 99, 102, 107, 108, 109, 112, 114, 115, 116, 117, 118, 120, 122, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137], "an": [0, 17, 35, 41, 42, 44, 47, 51, 56, 95, 102, 103, 116, 130, 132, 135, 136, 137], "open": [0, 46, 135, 136], "sourc": [0, 4, 5, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 41, 42, 44, 46, 47, 48, 49, 51, 54, 55, 56, 58, 59, 60, 62, 63, 67, 69, 71, 73, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136], "python": [0, 1, 6, 17, 18, 21, 32, 35, 135, 136, 137], "framework": [0, 136], "aim": [0, 1, 135, 136], "provid": [0, 1, 6, 10, 12, 14, 67, 72, 90, 95, 100, 116, 135, 136, 137], "high": [0, 136], "qualiti": [0, 136], "user": [0, 72, 114, 136, 137], "friendli": [0, 58, 60, 136], "end": [0, 1, 114, 136], "function": [0, 6, 7, 10, 19, 35, 37, 54, 55, 67, 69, 73, 76, 77, 80, 81, 82, 86, 95, 99, 100, 108, 109, 111, 112, 116, 117, 119, 124, 125, 126, 129, 130, 131, 133, 136], "perform": [0, 8, 73, 75, 76, 77, 83, 84, 86, 88, 98, 102, 103, 104, 106, 108, 117, 136], "reconstruct": [0, 1, 20, 22, 23, 27, 28, 30, 42, 61, 72, 88, 90, 102, 105, 108, 136], "task": [0, 1, 8, 72, 104, 106, 107, 116, 135, 136], "neutrino": [0, 1, 19, 47, 76, 88, 90, 99, 111, 136], "telescop": [0, 1, 136], "us": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 19, 24, 29, 31, 32, 37, 39, 41, 42, 44, 46, 47, 50, 51, 52, 55, 56, 58, 59, 60, 61, 63, 67, 69, 72, 75, 76, 77, 79, 84, 86, 87, 88, 90, 93, 95, 96, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 114, 115, 116, 118, 119, 120, 121, 124, 125, 126, 131, 132, 135, 136, 137], "graph": [0, 1, 7, 10, 12, 14, 72, 76, 77, 79, 92, 93, 94, 95, 97, 98, 99, 102, 108, 109, 115, 117, 135, 136], "neural": [0, 1, 101, 136], "network": [0, 1, 76, 85, 101, 136], "gnn": [0, 1, 42, 72, 84, 85, 86, 87, 88, 90, 95, 102, 104, 136, 137], "make": [0, 6, 98, 118, 124, 125, 135, 136, 137], "fast": [0, 136, 137], "easi": [0, 136], "train": [0, 1, 6, 8, 9, 56, 61, 67, 76, 90, 95, 103, 104, 109, 114, 115, 116, 117, 118, 120, 124, 125, 127, 134, 136, 137], "complex": [0, 72, 136], "model": [0, 1, 61, 63, 67, 69, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 116, 117, 120, 122, 124, 125, 127, 134, 136, 137], "can": [0, 1, 8, 10, 12, 14, 17, 21, 24, 67, 75, 77, 95, 111, 112, 118, 120, 122, 124, 125, 135, 136, 137], "event": [0, 1, 6, 8, 10, 12, 14, 16, 26, 41, 44, 51, 55, 56, 59, 60, 67, 75, 77, 84, 95, 98, 99, 108, 109, 111, 116, 117, 118, 124, 136], "state": [0, 63, 84, 102, 129, 136], "art": [0, 136], "arbitrari": [0, 136], "detector": [0, 1, 29, 72, 80, 81, 82, 95, 96, 98, 104, 136], "configur": [0, 1, 8, 10, 43, 44, 63, 72, 100, 104, 111, 119, 121, 122, 124, 125, 127, 132, 136], "infer": [0, 1, 42, 60, 61, 63, 67, 69, 104, 108, 136, 137], "time": [0, 4, 55, 73, 75, 77, 84, 94, 98, 99, 102, 107, 109, 132, 136, 137], "ar": [0, 1, 4, 10, 12, 14, 19, 21, 34, 35, 46, 56, 58, 59, 60, 62, 67, 76, 77, 84, 86, 88, 91, 92, 93, 95, 96, 97, 98, 99, 102, 106, 111, 116, 118, 124, 125, 135, 136, 137], "order": [0, 32, 46, 62, 73, 98, 109, 136], "magnitud": [0, 136], "faster": [0, 136], "than": [0, 7, 108, 117, 132, 136], "tradit": [0, 136], "techniqu": [0, 136], "common": [0, 1, 116, 124, 125, 128, 131, 136], "ml": [0, 1, 136], "develop": [0, 1, 135, 136, 137], "physicist": [0, 1, 136], "wish": [0, 62, 135, 136], "tool": [0, 1, 136], "research": [0, 136], "By": [0, 41, 44, 47, 51, 108, 136], "unit": [0, 6, 94, 131, 135, 136], "both": [0, 21, 108, 112, 136], "group": [0, 77, 136], "increas": [0, 114, 136], "longev": [0, 136], "usabl": [0, 136], "individu": [0, 10, 12, 14, 77, 86, 109, 136], "code": [0, 29, 41, 51, 55, 95, 124, 125, 136], "contribut": [0, 136, 137], "from": [0, 1, 6, 7, 8, 10, 12, 14, 17, 18, 19, 21, 23, 24, 26, 32, 33, 34, 35, 37, 39, 42, 46, 47, 49, 53, 58, 60, 75, 77, 88, 90, 93, 95, 98, 99, 100, 103, 106, 107, 108, 109, 112, 114, 115, 116, 122, 123, 124, 125, 127, 132, 135, 136, 137], "build": [0, 1, 72, 79, 93, 94, 98, 99, 100, 122, 124, 125, 136], "gener": [0, 8, 10, 12, 14, 21, 34, 46, 58, 62, 67, 69, 75, 91, 92, 95, 96, 97, 106, 116, 136], "reusabl": [0, 136], "softwar": [0, 47, 116, 136], "packag": [0, 1, 54, 126, 130, 131, 135, 136, 137], "base": [0, 4, 5, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 37, 39, 41, 42, 44, 46, 47, 48, 49, 51, 56, 58, 59, 60, 62, 63, 67, 69, 71, 73, 75, 76, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 100, 102, 103, 104, 106, 107, 108, 111, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 127, 131, 132, 136], "engin": [0, 136], "best": [0, 114, 135, 136], "practic": [0, 135, 136], "lower": [0, 112, 136], "technic": [0, 136], "threshold": [0, 67, 136], "most": [0, 1, 56, 94, 108, 136, 137], "scientif": [0, 1, 136], "problem": [0, 93, 135, 136], "The": [0, 6, 8, 10, 12, 14, 16, 32, 35, 41, 42, 44, 51, 55, 58, 59, 60, 62, 63, 67, 69, 73, 75, 76, 77, 84, 86, 88, 90, 93, 95, 99, 102, 106, 107, 108, 109, 111, 112, 114, 115, 116, 129, 136], "improv": [0, 1, 120, 136], "classif": [0, 1, 72, 105, 108, 116, 136], "yield": [0, 86, 111, 116, 136], "veri": [0, 56, 136], "accur": [0, 136], "e": [0, 1, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 35, 37, 42, 55, 56, 60, 63, 67, 69, 73, 76, 77, 79, 80, 81, 82, 85, 89, 93, 95, 98, 99, 100, 103, 104, 106, 107, 108, 109, 114, 115, 116, 118, 122, 132, 135, 136, 137], "g": [0, 1, 10, 12, 14, 16, 17, 19, 29, 32, 35, 42, 55, 56, 60, 67, 69, 77, 95, 98, 99, 108, 109, 118, 132, 135, 136, 137], "low": [0, 136], "energi": [0, 4, 42, 107, 108, 118, 136], "observ": [0, 136], "icecub": [0, 1, 3, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 41, 44, 47, 51, 61, 67, 69, 72, 76, 78, 88, 90, 98, 99, 131, 136, 137], "here": [0, 95, 135, 136, 137], "implement": [0, 1, 17, 19, 46, 58, 63, 76, 84, 85, 86, 87, 88, 90, 93, 102, 116, 135, 136], "wa": [0, 6, 136], "appli": [0, 6, 10, 12, 14, 41, 44, 45, 46, 51, 62, 76, 77, 84, 85, 86, 87, 88, 89, 90, 99, 102, 104, 106, 108, 126, 136], "oscil": [0, 110, 136], "lead": [0, 136], "signific": [0, 136], "angular": [0, 136], "rang": [0, 108, 136], "relev": [0, 1, 35, 54, 130, 135, 136], "studi": [0, 136], "furthermor": [0, 102, 136], "shown": [0, 136], "could": [0, 135, 136], "muon": [0, 23, 136], "v": [0, 76, 136], "therebi": [0, 1, 124, 125, 136], "effici": [0, 136], "puriti": [0, 136], "sampl": [0, 56, 76, 95, 96, 98, 108, 136], "analysi": [0, 42, 62, 136, 137], "similarli": [0, 35, 136], "ha": [0, 35, 55, 67, 85, 99, 116, 130, 136, 137], "great": [0, 136], "point": [0, 28, 115, 116, 117, 136], "analys": [0, 61, 110, 136], "final": [0, 6, 75, 77, 114, 124, 136], "millisecond": [0, 136], "allow": [0, 37, 61, 72, 77, 114, 122, 127, 136, 137], "whole": [0, 136], "new": [0, 1, 16, 76, 98, 122, 127, 135, 136], "type": [0, 6, 7, 8, 10, 12, 14, 18, 19, 31, 32, 33, 39, 46, 47, 48, 49, 54, 55, 56, 58, 59, 60, 62, 73, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 111, 112, 114, 116, 117, 118, 120, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 135, 136], "cosmic": [0, 136], "alert": [0, 136], "which": [0, 10, 12, 14, 17, 19, 20, 29, 33, 37, 39, 42, 56, 58, 60, 62, 73, 77, 86, 95, 96, 99, 100, 106, 109, 111, 116, 117, 120, 136, 137], "were": [0, 136], "previous": [0, 136], "unfeas": [0, 136], "possibl": [0, 32, 60, 135, 136], "identifi": [0, 6, 10, 12, 14, 29, 98, 99, 109, 124, 125, 136], "10": [0, 8, 42, 80, 81, 82, 98, 99, 120, 136], "tev": [0, 136], "monitor": [0, 136], "rate": [0, 114, 136], "direct": [0, 88, 90, 99, 106, 107, 108, 113, 115, 136], "real": [0, 136], "thi": [0, 3, 6, 8, 10, 12, 14, 16, 17, 19, 21, 35, 37, 39, 41, 44, 46, 47, 51, 54, 55, 59, 60, 67, 72, 75, 77, 84, 86, 90, 94, 95, 96, 98, 99, 102, 104, 106, 107, 108, 109, 111, 112, 114, 116, 117, 118, 122, 124, 125, 127, 132, 135, 136, 137], "enabl": [0, 3, 136], "first": [0, 75, 84, 94, 102, 114, 117, 135, 136], "ever": [0, 136], "despit": [0, 136], "larg": [0, 84, 116, 136], "background": [0, 136], "origin": [0, 90, 111, 136], "compris": [0, 136], "number": [0, 6, 10, 12, 14, 17, 41, 42, 44, 51, 56, 59, 60, 62, 75, 76, 77, 84, 85, 86, 87, 88, 89, 90, 93, 94, 96, 98, 99, 102, 106, 107, 108, 109, 114, 117, 118, 120, 136], "modul": [0, 3, 5, 6, 10, 15, 16, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 57, 58, 60, 61, 62, 67, 71, 72, 75, 76, 78, 83, 91, 92, 94, 95, 96, 97, 100, 101, 105, 110, 113, 119, 121, 124, 125, 126, 127, 131, 136], "necessari": [0, 8, 32, 135, 136], "workflow": [0, 136], "ingest": [0, 1, 3, 78, 136], "raw": [0, 98, 99, 136], "data": [0, 1, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 98, 102, 103, 104, 108, 109, 115, 117, 120, 122, 124, 127, 131, 134, 136, 137], "domain": [0, 1, 3, 61, 136], "specif": [0, 1, 3, 5, 6, 10, 12, 14, 15, 17, 20, 35, 45, 46, 47, 55, 60, 61, 63, 71, 73, 77, 78, 79, 80, 81, 82, 83, 84, 89, 93, 95, 98, 101, 104, 105, 106, 107, 108, 116, 135, 136, 137], "format": [0, 1, 3, 6, 10, 32, 36, 37, 46, 48, 58, 59, 60, 75, 100, 102, 112, 124, 135, 136, 137], "deploi": [0, 1, 61, 63, 136], "chain": [0, 1, 61, 72, 104, 136, 137], "illustr": [0, 135, 136], "figur": [0, 112, 136], "level": [0, 10, 12, 14, 16, 29, 34, 41, 44, 46, 47, 48, 49, 51, 55, 58, 59, 73, 77, 90, 132, 136, 137], "overview": [0, 136], "typic": [0, 32, 102, 136], "convert": [0, 1, 3, 6, 12, 19, 32, 34, 41, 43, 44, 51, 53, 59, 109, 136, 137], "industri": [0, 3, 136], "standard": [0, 3, 4, 34, 56, 63, 80, 81, 82, 84, 95, 96, 98, 103, 104, 108, 120, 135, 136], "intermedi": [0, 1, 3, 6, 10, 85, 136, 137], "file": [0, 1, 3, 6, 10, 12, 14, 17, 19, 32, 34, 37, 38, 39, 41, 44, 46, 47, 48, 49, 51, 53, 54, 58, 59, 60, 62, 63, 67, 69, 95, 100, 111, 114, 116, 117, 120, 121, 122, 123, 124, 125, 130, 132, 136, 137], "read": [0, 3, 6, 10, 12, 14, 32, 45, 47, 48, 49, 79, 86, 104, 105, 136, 137], "simpl": [0, 72, 136], "physic": [0, 1, 19, 33, 35, 61, 67, 69, 72, 105, 108, 136], "orient": [0, 72, 136], "compon": [0, 1, 72, 75, 76, 77, 100, 104, 136], "manag": [0, 113, 136], "experi": [0, 1, 5, 6, 45, 46, 63, 113, 136], "log": [0, 1, 107, 113, 114, 116, 119, 136, 137], "deploy": [0, 1, 63, 67, 69, 95, 134, 136], "modular": [0, 72, 136], "subclass": [0, 72, 136], "torch": [0, 10, 12, 14, 72, 76, 95, 96, 100, 131, 136, 137], "nn": [0, 72, 76, 93, 96, 136], "mean": [0, 10, 12, 14, 72, 86, 88, 99, 116, 125, 136], "onli": [0, 1, 10, 12, 14, 60, 72, 77, 84, 108, 111, 118, 122, 125, 127, 131, 136, 137], "need": [0, 8, 32, 60, 72, 75, 100, 102, 116, 129, 136, 137], "import": [0, 1, 55, 72, 119, 136], "few": [0, 72, 135, 136], "exist": [0, 10, 12, 14, 42, 55, 72, 115, 124, 136], "purpos": [0, 72, 116, 136], "built": [0, 72, 95, 136], "them": [0, 1, 32, 63, 72, 86, 108, 111, 136, 137], "togeth": [0, 72, 93, 104, 136], "form": [0, 17, 72, 106, 122, 127, 136], "complet": [0, 72, 104, 136], "extend": [0, 1, 136], "suit": [0, 108, 136], "through": [0, 106, 107, 108, 116, 136], "layer": [0, 72, 74, 77, 84, 85, 86, 87, 88, 90, 102, 106, 107, 108, 136], "connect": [0, 8, 93, 94, 95, 98, 116, 136], "etc": [0, 116, 132, 136], "optimis": [0, 1, 136], "differ": [0, 10, 12, 14, 17, 19, 37, 38, 39, 46, 47, 48, 96, 104, 117, 135, 136, 137], "track": [0, 17, 19, 23, 37, 39, 107, 135, 136], "These": [0, 46, 58, 60, 95, 135, 136], "prepar": [0, 8, 116, 136], "satisfi": [0, 136], "o": [0, 81, 108, 136], "load": [0, 7, 10, 54, 63, 100, 103, 122, 124, 136], "requir": [0, 19, 25, 37, 55, 98, 106, 116, 124, 125, 127, 136, 137], "when": [0, 10, 12, 14, 32, 34, 55, 67, 76, 84, 86, 88, 102, 115, 132, 135, 136, 137], "batch": [0, 7, 12, 42, 59, 73, 76, 77, 102, 104, 109, 117, 120, 136], "do": [0, 63, 67, 116, 124, 125, 135, 136, 137], "predict": [0, 8, 24, 28, 30, 42, 67, 69, 85, 90, 104, 106, 108, 116, 117, 136], "either": [0, 8, 10, 14, 19, 116, 136, 137], "contain": [0, 5, 6, 10, 12, 14, 15, 16, 19, 32, 33, 36, 37, 38, 41, 42, 44, 46, 47, 48, 51, 55, 58, 59, 60, 62, 63, 67, 69, 71, 86, 91, 92, 94, 95, 96, 97, 99, 100, 108, 109, 116, 118, 120, 136, 137], "imag": [0, 1, 135, 136, 137], "portabl": [0, 136], "depend": [0, 136, 137], "free": [0, 116, 136], "split": [0, 8, 34, 60, 73, 136], "up": [0, 67, 135, 136, 137], "interfac": [0, 110, 124, 125, 136, 137], "block": [0, 1, 74, 76, 136], "pre": [0, 43, 44, 79, 95, 115, 135, 136], "directli": [0, 86, 136], "while": [0, 21, 114, 136], "continu": [0, 116, 136], "expand": [0, 136], "": [0, 6, 7, 8, 10, 12, 14, 32, 41, 44, 46, 49, 51, 58, 60, 62, 75, 79, 85, 86, 95, 104, 108, 109, 114, 118, 120, 124, 125, 132, 133, 136, 137], "capabl": [0, 136], "project": [0, 75, 76, 135, 136], "receiv": [0, 136], "fund": [0, 136], "european": [0, 136], "union": [0, 6, 7, 8, 10, 12, 14, 21, 32, 35, 41, 44, 46, 47, 48, 49, 51, 62, 63, 67, 69, 73, 76, 77, 84, 86, 95, 96, 104, 108, 124, 127, 130, 136], "horizon": [0, 136], "2020": [0, 136], "innov": [0, 136], "programm": [0, 136], "under": [0, 136], "mari": [0, 136], "sk\u0142odowska": [0, 136], "curi": [0, 136], "grant": [0, 116, 136], "agreement": [0, 135, 136], "No": [0, 136], "890778": [0, 136], "work": [0, 4, 33, 84, 135, 136, 137], "rasmu": [0, 87, 136], "\u00f8rs\u00f8e": [0, 136], "partli": [0, 136], "punch4nfdi": [0, 136], "consortium": [0, 136], "support": [0, 6, 35, 135, 136, 137], "dfg": [0, 136], "nfdi": [0, 136], "39": [0, 136, 137], "1": [0, 6, 8, 10, 12, 17, 32, 41, 44, 51, 56, 59, 62, 73, 76, 77, 84, 86, 88, 90, 93, 94, 96, 99, 102, 106, 107, 108, 109, 114, 116, 117, 118, 124, 136, 137], "germani": [0, 136], "conveni": [1, 135, 137], "collabor": 1, "solv": [1, 135], "It": [1, 32, 55, 67, 75, 99, 106, 108, 135], "leverag": 1, "advanc": [1, 77], "machin": [1, 137], "learn": [1, 58, 60, 67, 69, 106, 108, 114, 137], "without": [1, 93, 98, 111, 116, 137], "have": [1, 21, 41, 44, 47, 51, 55, 56, 60, 77, 90, 95, 99, 108, 135, 137], "expert": 1, "themselv": [1, 124, 125], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 10, 12, 14, 16, 17, 19, 21, 34, 55, 60, 67, 75, 76, 77, 79, 86, 89, 94, 95, 100, 116, 122, 123, 124, 125, 126, 127, 132, 135, 137], "streamlin": 1, "process": [1, 6, 41, 44, 51, 67, 75, 79, 84, 86, 88, 135, 137], "transform": [1, 76, 77, 88, 90, 102, 108, 118], "extens": [1, 46, 58, 130], "basic": 1, "across": [1, 2, 10, 12, 14, 35, 52, 62, 77, 104, 116, 119, 120, 121, 132], "variou": [1, 57], "easili": 1, "architectur": [1, 85, 86, 87, 88, 90, 102], "main": [1, 83, 95, 104, 135, 137], "featur": [1, 3, 4, 10, 12, 14, 20, 42, 60, 67, 69, 75, 76, 77, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 106, 109, 117, 124, 135], "i3": [1, 19, 33, 34, 35, 41, 44, 47, 51, 54, 62, 67, 69, 130, 137], "more": [1, 10, 12, 54, 55, 84, 100, 124, 125, 132], "index": [1, 6, 10, 12, 14, 35, 55, 59, 77, 79, 84, 94, 99, 102, 114], "sqlite": [1, 3, 8, 9, 14, 42, 44, 51, 53, 55, 60, 137], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 10, 58, 79, 89, 95, 108, 123], "awai": 1, "detail": [1, 84, 100, 114, 137], "expos": 1, "physicst": 1, "what": [1, 75, 95, 135], "i3modul": [1, 61, 63], "includ": [1, 12, 76, 98, 104, 111, 116, 122, 135], "docker": 1, "run": [1, 47, 62], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 9, 15, 18, 61, 72, 91, 119], "dataset": [1, 3, 7, 8, 11, 12, 13, 14, 23, 56, 59, 71, 84, 95, 102, 120, 124], "extractor": [1, 3, 6, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 51, 67, 69], "parquet": [1, 3, 9, 12, 37, 41, 44, 48, 51, 53, 59, 80, 81, 82, 137], "pre_configur": [1, 3, 44], "reader": [1, 3, 44, 46, 47, 48, 49], "util": [1, 3, 15, 18, 32, 33, 34, 35, 53, 54, 55, 56, 72, 91, 113, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134], "writer": [1, 3, 44, 58, 59, 60], "constant": [1, 3, 134], "dataclass": [1, 3, 33], "dataconvert": [1, 3, 43, 58, 59, 60], "dataload": [1, 3, 8, 42, 95, 104, 117, 127], "datamodul": [1, 3], "pipelin": [1, 3], "deployment_modul": [1, 61], "except": [1, 134], "rnn": [1, 72, 84, 102], "coarsen": [1, 72, 77], "standard_averaged_model": [1, 72], "standard_model": [1, 72], "pisa": [1, 25, 42, 111, 112, 131, 134, 137], "fit": [1, 8, 104, 110, 112, 116, 118, 127], "plot": [1, 110], "callback": [1, 104, 113], "label": [1, 10, 14, 23, 26, 85, 95, 104, 108, 112, 113, 117, 124], "loss_funct": [1, 108, 113], "weight_fit": [1, 113], "config": [1, 7, 56, 111, 114, 116, 119, 120, 122, 123, 124, 125, 126, 127], "argpars": [1, 119], "decor": [1, 119, 131], "deprecation_tool": [1, 119], "filesi": [1, 119], "math": [1, 76, 119], "submodul": [1, 3, 9, 11, 13, 15, 18, 31, 36, 38, 40, 43, 45, 50, 52, 57, 61, 64, 66, 70, 72, 74, 78, 83, 91, 92, 97, 101, 105, 110, 113, 119, 121, 126], "global": [2, 4, 84, 86, 88, 100], "intern": [3, 15, 37, 44, 48], "liquido": [3, 4, 15, 39, 49, 72, 78], "combine_extractor": [3, 15], "deprecated_method": [3, 40, 50, 61, 64], "graphnet_file_read": [3, 45], "i3read": [3, 41, 44, 45, 51], "internal_parquet_read": [3, 45], "liquido_read": [3, 45], "parquet_to_sqlit": [3, 52], "random": [3, 10, 12, 14, 52, 56, 59, 98, 124], "sqlite_util": [3, 52], "string_selection_resolv": [3, 52], "graphnet_writ": [3, 57], "parquet_writ": [3, 57], "sqlite_writ": [3, 57], "truth": [3, 4, 10, 12, 14, 20, 29, 42, 55, 59, 95, 108, 117, 118, 124], "i3fileset": [3, 5, 46, 47], "set": [3, 5, 8, 19, 21, 41, 44, 46, 47, 51, 58, 76, 90, 98, 99, 100, 108, 117, 135], "init_global_index": [3, 6], "collate_fn": [3, 7, 113, 117], "do_shuffl": [3, 7], "graphnetdatamodul": [3, 8], "insqlitepipelin": [3, 42], "class": [4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 37, 39, 41, 42, 44, 46, 47, 48, 49, 51, 56, 58, 59, 60, 62, 63, 67, 69, 73, 75, 76, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 100, 102, 103, 104, 106, 107, 108, 111, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 132, 135], "object": [4, 5, 10, 12, 14, 21, 32, 35, 73, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 100, 102, 103, 104, 106, 107, 108, 111, 114, 116, 117, 120, 122, 124, 125, 127, 132], "namespac": [4, 100, 124, 125], "name": [4, 6, 7, 10, 12, 14, 16, 17, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 39, 41, 42, 44, 46, 48, 49, 51, 55, 58, 59, 60, 63, 67, 69, 79, 95, 96, 98, 102, 108, 111, 115, 118, 120, 122, 124, 125, 126, 127, 132, 135, 137], "i3featureextractor": [4, 15, 18, 67, 69], "icecube86": [4, 78, 80], "dom_x": [4, 80, 98], "dom_i": [4, 80, 98], "dom_z": [4, 80, 98], "dom_tim": [4, 98], "charg": [4, 75, 84, 98, 99, 102, 116], "rde": 4, "pmt_area": 4, "deepcor": [4, 20, 80], "upgrad": [4, 20, 80, 137], "string": [4, 10, 12, 14, 32, 56, 77, 79, 80, 95, 100, 122], "pmt_number": 4, "dom_numb": 4, "pmt_dir_x": 4, "pmt_dir_i": 4, "pmt_dir_z": 4, "dom_typ": 4, "prometheu": [4, 72, 78], "sensor_pos_x": [4, 82], "sensor_pos_i": [4, 82], "sensor_pos_z": [4, 82], "t": [4, 35, 55, 112, 114, 116, 137], "kaggl": [4, 75, 76, 80, 88, 90], "x": [4, 29, 75, 76, 77, 94, 98, 99, 102, 108, 109, 112, 116, 118], "y": [4, 29, 75, 94, 109, 112, 137], "z": [4, 29, 75, 94, 98, 99, 109, 137], "auxiliari": [4, 75], "sipm_x": [4, 81], "sipm_i": [4, 81], "sipm_z": [4, 81], "i3truthextractor": [4, 15, 18], "energy_track": [4, 107], "energy_cascad": [4, 107], "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": [4, 107, 115], "zenith": [4, 107, 115], "pid": [4, 56, 124], "elast": 4, "interaction_typ": 4, "interaction_tim": [4, 107], "inelast": [4, 107], "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "vertex_x": 4, "vertex_i": 4, "vertex_z": 4, "i3_fil": [5, 19], "str": [5, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 41, 42, 44, 46, 47, 48, 49, 51, 54, 55, 56, 58, 59, 60, 62, 63, 67, 69, 76, 77, 79, 80, 81, 82, 84, 86, 88, 90, 95, 96, 98, 99, 100, 103, 104, 108, 111, 114, 115, 117, 118, 120, 122, 123, 124, 125, 126, 127, 129, 130, 132], "gcd_file": [5, 19, 67, 69], "paramet": [5, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 41, 42, 44, 46, 47, 48, 49, 51, 54, 55, 56, 58, 59, 60, 62, 63, 67, 69, 73, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133], "output_fold": [5, 62], "worker": [5, 6, 41, 42, 51, 54, 59, 62, 120, 132], "i3deploy": [5, 61, 66], "list": [5, 6, 7, 8, 10, 12, 14, 16, 21, 29, 32, 34, 35, 39, 41, 42, 44, 46, 47, 48, 49, 51, 54, 55, 56, 58, 59, 60, 62, 63, 67, 69, 73, 76, 77, 79, 84, 86, 88, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 108, 109, 112, 114, 117, 118, 124, 126, 127, 130, 132], "ani": [5, 6, 7, 8, 10, 12, 14, 32, 33, 34, 35, 46, 48, 49, 58, 60, 67, 73, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 112, 114, 116, 118, 120, 122, 123, 124, 125, 126, 127, 132, 137], "output_fil": 6, "global_index": 6, "avail": [6, 21, 42, 106, 107, 108, 131], "pool": [6, 72, 73, 74, 84, 86, 88], "return": [6, 7, 8, 10, 12, 14, 16, 17, 19, 32, 33, 35, 46, 47, 48, 49, 54, 55, 56, 58, 59, 60, 62, 73, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133], "none": [6, 7, 8, 10, 12, 14, 19, 21, 29, 33, 34, 35, 41, 42, 44, 46, 47, 48, 49, 51, 55, 56, 58, 59, 60, 62, 63, 69, 76, 77, 84, 86, 88, 90, 94, 95, 96, 98, 99, 100, 102, 103, 104, 108, 111, 114, 116, 117, 118, 120, 122, 123, 124, 126, 130, 132], "synchron": 6, "file_read": 6, "save_method": 6, "outdir": [6, 41, 42, 44, 51, 111], "index_column": [6, 10, 12, 14, 41, 44, 51, 55, 56, 59, 60, 111, 117, 118, 124], "num_work": [6, 7, 44, 59, 117], "abc": [6, 10, 17, 42, 46, 58, 62, 100, 115, 118, 123, 124, 125], "logger": [6, 8, 10, 17, 34, 42, 46, 48, 49, 56, 58, 62, 63, 93, 100, 104, 115, 118, 119, 132, 137], "A": [6, 8, 10, 34, 42, 46, 47, 48, 49, 55, 60, 62, 63, 67, 77, 95, 96, 99, 100, 106, 108, 109, 111, 116, 118, 122, 124, 125, 127, 137], "convers": [6, 36, 37, 41, 51, 98, 137], "parallel": [6, 41, 44, 51], "extract": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 37, 39, 54, 67, 69, 108], "also": [6, 10, 12, 14, 56, 84, 124], "assign": [6, 10, 12, 14, 73, 77, 135], "id": [6, 8, 12, 41, 44, 51, 60, 79, 95, 117], "exampl": [6, 32, 56, 73, 77, 99, 109, 116, 124, 125, 137], "initi": [6, 34, 47, 60, 62, 76, 84, 90, 94], "graphnetfileread": [6, 45, 46, 47, 48, 49], "method": [6, 8, 10, 12, 14, 17, 19, 31, 32, 33, 35, 40, 41, 46, 50, 51, 58, 59, 60, 63, 76, 77, 79, 99, 107, 116, 118], "graphnetwrit": [6, 57, 58, 59, 60], "save": [6, 17, 19, 32, 37, 39, 41, 44, 51, 55, 57, 58, 60, 100, 111, 114, 116, 117, 118, 122, 123, 124, 125, 137], "interim": [6, 57, 58, 59, 60], "directori": [6, 41, 42, 44, 46, 47, 48, 49, 51, 58, 59, 111, 114, 130], "i3extractor": [6, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 46, 51], "parquetextractor": [6, 36, 37, 39, 44, 46], "h5extractor": [6, 38, 39, 46], "input": [6, 10, 12, 14, 41, 42, 44, 46, 47, 51, 58, 62, 67, 69, 75, 76, 80, 84, 85, 86, 87, 88, 89, 90, 95, 96, 98, 102, 106, 108, 109, 122, 127, 129], "default": [6, 8, 10, 12, 14, 19, 21, 29, 32, 41, 42, 44, 47, 51, 55, 59, 60, 62, 63, 67, 69, 75, 76, 77, 84, 85, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 102, 108, 109, 111, 112, 114, 115, 116, 118, 120, 122, 124, 130], "event_no": [6, 10, 12, 14, 41, 44, 51, 55, 56, 59, 60, 118, 124], "column": [6, 10, 12, 14, 17, 39, 41, 44, 51, 55, 59, 60, 63, 69, 71, 79, 84, 93, 95, 96, 98, 99, 102, 104, 106, 107, 108, 109, 111, 118], "ad": [6, 10, 12, 14, 20, 41, 44, 51, 75, 86, 90, 95, 98, 99, 111], "int": [6, 7, 8, 10, 12, 14, 23, 26, 34, 41, 42, 44, 46, 47, 48, 49, 51, 56, 58, 59, 60, 62, 75, 76, 77, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 111, 114, 116, 117, 118, 120, 124, 127, 132], "cpu": [6, 41, 44, 51, 63, 137], "multiprocess": [6, 41, 44, 51, 137], "get_map_funct": 6, "nb_file": 6, "map": [6, 10, 12, 14, 20, 21, 55, 80, 81, 82, 95, 96, 108, 122, 124, 125, 127], "pure": [6, 17, 18, 21, 35], "tupl": [6, 10, 12, 14, 33, 35, 55, 76, 84, 86, 88, 99, 108, 109, 111, 112, 117, 120, 129], "option": [6, 8, 10, 12, 14, 19, 29, 42, 60, 63, 69, 76, 77, 84, 86, 88, 90, 94, 95, 96, 98, 99, 100, 102, 108, 111, 112, 114, 118, 119, 120, 122, 124, 130, 137], "merge_fil": [6, 58, 59, 60], "kwarg": [6, 7, 10, 12, 14, 34, 46, 48, 49, 58, 73, 76, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 100, 102, 103, 104, 106, 107, 108, 114, 116, 118, 122, 124, 125, 132], "merg": [6, 58, 59, 60, 116, 137], "call": [6, 21, 35, 75, 77, 108, 111, 114, 118, 132], "instanti": [6, 8, 125], "remov": [7, 41, 51, 95, 117, 120], "less": [7, 117], "two": [7, 86, 111, 114, 116, 117], "dom": [7, 10, 12, 14, 73, 77, 84, 98, 99, 102, 117], "hit": [7, 117], "should": [7, 10, 12, 14, 17, 19, 32, 56, 63, 76, 77, 84, 90, 95, 96, 102, 109, 116, 117, 122, 124, 125, 127, 135, 137], "occur": [7, 117], "product": [7, 76, 117], "selection_nam": 7, "check": [7, 33, 34, 35, 46, 55, 98, 120, 130, 131, 135, 137], "whether": [7, 33, 35, 55, 75, 76, 84, 86, 88, 90, 100, 116, 126, 130, 131], "shuffl": [7, 8, 54, 59, 117], "select": [7, 8, 10, 12, 14, 26, 56, 117, 118, 124, 135], "bool": [7, 33, 34, 35, 55, 56, 58, 67, 75, 76, 84, 86, 88, 90, 95, 98, 99, 100, 104, 111, 114, 116, 117, 118, 120, 126, 129, 130, 131, 132], "batch_siz": [7, 42, 109, 117], "persistent_work": [7, 117], "prefetch_factor": 7, "construct": [7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 37, 39, 46, 48, 49, 56, 58, 59, 60, 63, 73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 111, 114, 115, 116, 117, 118, 120, 123, 124, 125, 132], "t_co": 7, "callabl": [7, 10, 35, 76, 77, 79, 80, 81, 82, 95, 103, 108, 117, 118, 122, 124, 125, 126, 131], "classmethod": [7, 10, 100, 116, 122, 123], "from_dataset_config": 7, "datasetconfig": [7, 10, 56, 121, 124], "dict": [7, 8, 10, 14, 21, 32, 35, 42, 55, 63, 79, 80, 81, 82, 90, 95, 96, 98, 100, 103, 104, 111, 112, 114, 117, 120, 122, 124, 125, 126, 127, 129], "dataset_refer": 8, "dataset_arg": 8, "test_select": [8, 124], "train_dataloader_kwarg": 8, "validation_dataloader_kwarg": 8, "test_dataloader_kwarg": 8, "train_val_split": 8, "0": [8, 10, 12, 14, 41, 44, 47, 51, 56, 67, 73, 76, 77, 84, 85, 86, 88, 93, 94, 96, 99, 102, 109, 111, 112, 116, 117, 124], "9": 8, "split_se": 8, "lightningdatamodul": 8, "creat": [8, 42, 55, 95, 98, 122, 123, 127, 135, 137], "sqlitedataset": [8, 13, 14], "parquetdataset": [8, 11, 12], "non": [8, 32, 35, 55, 84, 116], "refer": [8, 82, 124], "argument": [8, 59, 90, 95, 114, 118, 120, 122, 124, 125, 127], "valid": [8, 35, 56, 103, 104, 108, 114, 116, 120, 122, 127], "test": [8, 56, 108, 117, 124, 131, 135], "ratio": [8, 76], "42": [8, 137], "seed": [8, 10, 12, 14, 56, 95, 96, 117, 124], "prepare_data": 8, "setup": [8, 114, 137], "stage": [8, 114], "lightn": [8, 114], "properti": [8, 10, 17, 24, 35, 46, 58, 77, 79, 89, 98, 99, 104, 108, 115, 123, 132], "train_dataload": [8, 104], "val_dataload": [8, 104], "test_dataload": 8, "teardown": 8, "cleanup": 8, "shutdown": 8, "procedur": 8, "close": 8, "after": [8, 76, 84, 86, 88, 114, 120, 124], "overrid": [8, 114], "parquet_dataset": [9, 11], "sqlite_dataset": [9, 13], "load_modul": [9, 10, 100], "parse_graph_definit": [9, 10], "parse_label": [9, 10], "ensembledataset": [9, 10, 124], "class_nam": [10, 34, 46, 48, 49, 58, 125, 132], "cfg": 10, "graphdefinit": [10, 12, 14, 91, 92, 95, 96, 97, 117, 135], "arg": [10, 12, 14, 16, 34, 73, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 100, 102, 103, 104, 106, 107, 108, 116, 120, 122, 132], "path": [10, 12, 14, 19, 41, 44, 46, 47, 48, 49, 51, 54, 55, 60, 62, 67, 69, 76, 95, 100, 103, 111, 112, 114, 117, 120, 122, 123, 124, 130, 137], "pulsemap": [10, 12, 14, 20, 67, 69, 117, 124], "puls": [10, 12, 14, 16, 20, 21, 33, 35, 55, 67, 73, 77, 90, 95, 98, 99, 109], "seri": [10, 12, 14, 20, 21, 33, 35, 55, 67, 84, 98, 102], "node": [10, 12, 14, 72, 73, 77, 84, 85, 86, 88, 91, 92, 93, 95, 96, 102, 109], "multipl": [10, 12, 14, 16, 99, 114, 124, 132], "store": [10, 12, 14, 42, 55, 58, 59, 60, 111, 115], "attribut": [10, 12, 14, 73, 108], "node_truth": [10, 12, 14, 117, 124], "uniqu": [10, 12, 14, 55, 98, 109, 124], "indici": [10, 12, 14, 33, 56, 116], "tabl": [10, 12, 14, 16, 17, 19, 37, 39, 42, 46, 55, 59, 60, 79, 95, 111, 118], "truth_tabl": [10, 12, 14, 59, 111, 117, 118, 124], "inform": [10, 12, 14, 16, 17, 19, 21, 29, 37, 39, 95, 98, 99, 100, 112], "node_truth_t": [10, 12, 14, 117, 124], "string_select": [10, 12, 14, 117, 124], "subset": [10, 12, 14, 76, 84, 86, 88, 102], "given": [10, 14, 19, 60, 77, 93, 108, 118, 120], "queri": [10, 12, 14, 55, 56, 60, 76], "pass": [10, 14, 75, 76, 84, 85, 86, 87, 88, 89, 90, 95, 102, 104, 108, 114, 116, 118, 135], "dtype": [10, 12, 14, 95, 96, 133], "float32": [10, 12, 14, 95, 96], "tensor": [10, 12, 14, 63, 73, 75, 76, 77, 79, 84, 85, 86, 87, 88, 89, 90, 94, 98, 102, 103, 104, 108, 109, 116, 129, 133], "loss_weight_t": [10, 12, 14, 117, 124], "per": [10, 12, 14, 21, 55, 76, 77, 84, 102, 108, 116, 118], "loss": [10, 12, 14, 95, 104, 108, 114, 116, 120], "weight": [10, 12, 14, 67, 69, 76, 90, 95, 108, 111, 116, 118, 125, 137], "loss_weight_column": [10, 12, 14, 95, 117, 124], "correspond": [10, 12, 14, 32, 35, 54, 86, 95, 99, 118, 122, 124, 125, 127, 130, 137], "loss_weight_default_valu": [10, 12, 14, 95, 124], "float": [10, 12, 14, 67, 76, 84, 85, 93, 94, 95, 96, 98, 99, 102, 104, 111, 112, 114, 116, 117, 124], "note": [10, 12, 14, 47, 59, 60, 99, 112, 125], "valu": [10, 12, 14, 29, 32, 55, 76, 77, 94, 95, 96, 109, 112, 115, 116, 120, 122], "specifi": [10, 12, 14, 56, 73, 99, 108, 112, 114, 137], "case": [10, 12, 14, 21, 41, 44, 47, 51, 67, 77, 99, 108, 137], "That": [10, 12, 14, 86, 107, 115], "ignor": [10, 12, 14, 35, 59], "resolv": [10, 12, 14, 56], "10000": [10, 12, 14, 56, 75], "5": [10, 12, 14, 56, 84, 102, 120, 137], "20": [10, 12, 14, 56, 132], "graph_definit": [10, 12, 14, 72, 91, 117, 124], "defin": [10, 12, 14, 56, 63, 67, 69, 77, 91, 92, 93, 95, 97, 99, 117, 122, 124, 125, 127], "represent": [10, 12, 14, 35, 75, 76, 77, 96, 100, 102], "dictionari": [10, 14, 17, 32, 33, 35, 42, 46, 55, 95, 96, 100, 111, 112, 122, 124, 125, 127], "from_config": [10, 100, 123, 124, 125], "instanc": [10, 17, 19, 29, 35, 37, 39, 41, 44, 47, 51, 95, 100, 111, 115, 117, 123, 125, 137], "concaten": [10, 32, 86], "one": [10, 12, 19, 55, 67, 77, 124, 125, 130, 135, 137], "query_t": [10, 12, 14], "sequential_index": [10, 12, 14], "some": [10, 12, 14, 41, 44, 47, 51, 95, 99], "out": [10, 12, 86, 104, 105, 116, 132, 135, 137], "sequenti": [10, 12], "len": [10, 12, 99], "self": [10, 12, 95, 111, 122, 127], "_may_": [10, 12], "_indic": [10, 12], "If": [10, 12, 19, 21, 34, 42, 60, 76, 86, 90, 95, 98, 99, 100, 108, 111, 114, 118, 135, 137], "entir": [10, 12, 100], "impos": [10, 12], "befor": [10, 12, 86, 94, 102, 108, 114], "ndarrai": [10, 12, 29, 95, 99, 118], "scalar": [10, 12, 17, 109, 116], "length": [10, 12, 35, 98, 99, 109, 114], "rais": [10, 12, 19, 21, 100, 122, 127], "columnmissingexcept": [10, 12, 70, 71], "element": [10, 12, 17, 32, 35, 104, 109, 117, 126], "present": [10, 12, 19, 34, 109, 120, 130, 131], "add_label": 10, "fn": [10, 35, 122, 126], "kei": [10, 21, 32, 33, 35, 55, 60, 76, 77, 98, 115, 124, 125], "add": [10, 76, 86, 120, 129, 135, 137], "custom": [10, 46, 70, 95, 114], "concatdataset": 10, "singl": [10, 16, 58, 60, 77, 86, 99, 115, 124, 125], "collect": [10, 18, 31, 116, 133], "iter": 10, "backend": [11, 13, 57, 59], "parquetwrit": [12, 37, 44, 57, 59], "cache_s": 12, "cach": 12, "memori": 12, "must": [12, 16, 46, 47, 55, 58, 73, 114, 118, 135], "least": [12, 135, 137], "databas": [14, 42, 55, 60, 111, 118, 137], "pytorch": [14, 114, 137], "i3genericextractor": [15, 18], "i3hybridrecoextractor": [15, 18], "i3ntmuonlabelsextractor": [15, 18], "i3particleextractor": [15, 18], "i3pisaextractor": [15, 18], "i3quesoextractor": [15, 18], "i3retroextractor": [15, 18], "i3splinempeextractor": [15, 18], "i3tumextractor": [15, 18], "parquet_extractor": [15, 36], "h5_extractor": [15, 38], "combinedextractor": [15, 16], "combin": [16, 32, 44, 84, 124], "extractor_nam": [16, 17, 19, 21, 24, 37, 39], "same": [16, 35, 55, 73, 77, 99, 106, 109, 114, 126, 132], "mix": 16, "fail": 16, "inherit": [17, 19, 35, 46, 58, 79, 98, 116, 132], "__call__": [17, 19, 46, 63], "output": [17, 60, 62, 63, 75, 76, 84, 85, 86, 87, 89, 98, 99, 102, 104, 106, 107, 108, 111, 118, 124, 125, 137], "var1": 17, "var_n": 17, "variabl": [17, 19, 21, 35, 46, 86, 98, 99, 109, 118, 132], "arrai": [17, 29, 32, 98, 99, 109], "like": [17, 35, 77, 94, 108, 109, 116, 133, 135], "shape": [17, 94, 95, 98, 109, 116], "n": [17, 73, 77, 94, 109, 116], "where": [17, 41, 44, 47, 51, 95, 96, 98, 99, 102, 109, 115], "denot": [17, 114], "conjunct": [17, 108], "fileread": [17, 46], "keep": [17, 19, 37, 39, 98], "proven": [17, 19, 37, 39], "mc_truth": 17, "get": [17, 33, 55, 79, 114, 117, 137], "i3fram": [18, 21, 33, 35, 67, 69], "frame": [18, 19, 21, 31, 34, 35, 69], "i3_filt": [18, 31, 41, 44, 47, 51], "i3featureextractoricecube86": [18, 20], "i3featureextractoricecubedeepcor": [18, 20], "i3featureextractoricecubeupgrad": [18, 20], "i3pulsenoisetruthflagicecubeupgrad": [18, 20], "i3galacticplanehybridrecoextractor": [18, 22], "i3ntmuonlabelextractor": [18, 23], "i3splinempeicextractor": [18, 28], "observatori": [19, 47], "set_gcd": 19, "gframe": 19, "cframe": 19, "gcd": [19, 33, 41, 44, 47, 51, 54, 67, 69, 130], "pair": [19, 41, 44, 47, 51, 75], "member": [19, 21, 35, 46, 98, 124, 125, 132], "being": [19, 67, 75, 106, 108], "attempt": 19, "find": [19, 94, 130], "c": [19, 32, 77, 94, 116, 137], "instead": [19, 41, 44, 47, 51, 116], "those": 19, "runtimeerror": 19, "86": [20, 80], "nois": [20, 33, 67], "flag": [20, 67], "exclude_kei": 21, "dynam": [21, 76, 86, 87, 88], "pars": [21, 112, 119, 120, 121, 122, 127], "tri": [21, 35], "automat": [21, 59, 95, 116, 135], "cast": [21, 35], "done": [21, 77, 132, 135], "recurs": [21, 35, 41, 44, 46, 47, 51, 100, 126, 130], "each": [21, 32, 35, 54, 55, 59, 60, 62, 63, 73, 75, 76, 77, 80, 81, 82, 84, 86, 88, 93, 95, 96, 98, 99, 102, 106, 108, 109, 111, 112, 114, 117, 130], "look": [21, 137], "signatur": [21, 35], "similar": [21, 35, 98, 137], "handl": [21, 116, 120, 129, 132], "hand": 21, "special": [21, 67, 102, 109], "mc": [21, 55], "tree": 21, "trigger": 21, "exclud": [21, 137], "valueerror": [21, 100], "hybrid": 22, "galatict": 22, "plane": [22, 116], "tum": [23, 30], "dnn": [23, 30], "padding_valu": [23, 26, 109], "northeren": 23, "i3particl": 24, "other": [24, 55, 93, 116, 135], "algorithm": 24, "comparison": [24, 116], "quantiti": [25, 108, 109], "queso": 26, "retro": [27, 42], "splinemp": 28, "border": 29, "mctree": [29, 33], "boundari": 29, "volum": 29, "coordin": [29, 79, 94, 98, 99, 109], "particl": [29, 55, 115], "start": [29, 135, 137], "stop": [29, 114, 120], "within": [29, 73, 76, 77, 86, 93], "hard": [29, 98], "i3mctre": 29, "flatten_nested_dictionari": [31, 32], "serialis": [31, 32], "transpose_list_of_dict": [31, 32], "frame_is_montecarlo": [31, 33], "frame_is_nois": [31, 33], "get_om_keys_and_pulseseri": [31, 33], "i3filt": [31, 34, 41, 44, 47, 51], "nullspliti3filt": [31, 34, 41, 44, 47, 51], "i3filtermask": [31, 34], "is_boost_enum": [31, 35], "is_boost_class": [31, 35], "is_icecube_class": [31, 35], "is_typ": [31, 35], "is_method": [31, 35], "break_cyclic_recurs": [31, 35], "get_member_vari": [31, 35], "cast_object_to_pure_python": [31, 35], "cast_pulse_series_to_pure_python": [31, 35], "manipul": [32, 91, 92, 97], "obj": [32, 35, 126], "parent_kei": 32, "separ": [32, 94, 114, 137], "flatten": 32, "nest": 32, "d": [32, 94, 95, 98, 109, 135], "b": [32, 73, 77, 109], "2": [32, 41, 51, 76, 77, 84, 86, 88, 93, 96, 99, 102, 107, 109, 111, 112, 116, 124, 137], "a__b": 32, "applic": 32, "parent": 32, "__": [32, 35], "nester": 32, "json": [32, 124], "therefor": [32, 47], "we": [32, 35, 56, 99, 135, 137], "outer": 32, "abl": [32, 98, 137], "de": 32, "transpos": 32, "mont": 33, "carlo": 33, "simul": [33, 67], "icetrai": [33, 35, 41, 44, 47, 51, 63, 131], "pulseseri": 33, "calibr": [33, 35], "gcd_dict": [33, 35], "p": [33, 116], "om": [33, 35], "i3calibr": 33, "indicesfor": 33, "filter": [34, 41, 44, 47, 51, 132], "log_fold": [34, 46, 48, 49, 58, 132], "skip": [34, 86], "null": [34, 55], "filter_nam": 34, "filter_ani": 34, "filtermask": 34, "true": [34, 55, 67, 84, 86, 88, 90, 95, 98, 100, 111, 114, 116, 118, 124, 125, 127, 130], "kept": 34, "fals": [34, 67, 75, 76, 86, 90, 95, 100, 111, 114, 116, 118, 124], "boost": 35, "enum": 35, "ensur": [35, 54, 116, 132, 135, 137], "isn": 35, "return_discard": 35, "mangl": 35, "take": [35, 77, 99, 102, 135], "mainli": 35, "cannot": [35, 102, 122, 127], "trivial": [35, 108], "For": [35, 98, 114], "doe": [35, 106, 108, 125], "try": 35, "equival": 35, "its": [35, 102], "regular": [35, 76], "otherwis": [35, 116], "itself": [35, 108], "deem": 35, "wai": [35, 56, 135, 137], "optic": [35, 99], "found": [35, 41, 44, 47, 51, 59, 99, 116], "ofintern": 36, "between": [37, 75, 91, 92, 93, 94, 97, 104, 108, 109, 114, 116, 124, 125], "param": [37, 39], "h5hitextractor": [38, 39], "h5truthextractor": [38, 39], "h5": [39, 49], "column_nam": 39, "hitdata": 39, "truthdata": 39, "deprec": [40, 41, 50, 51, 129], "parquetdataconvert": [40, 41], "gcd_rescu": [41, 44, 47, 51, 130], "i3toparquetconvert": [41, 43, 44], "subfold": [41, 44, 47, 51], "search": [41, 44, 46, 47, 48, 49, 51, 130], "convent": [41, 44, 47, 51], "folder": [41, 44, 47, 48, 49, 51, 62], "accompani": [41, 44, 47, 51], "howev": [41, 44, 47, 51], "broken": [41, 44, 47, 51], "In": [41, 44, 46, 47, 51, 58, 124, 125, 137], "icetray_verbos": [41, 44, 47, 51], "verbos": [41, 44, 47, 51, 104, 114], "pframe": [41, 44, 47, 51], "module_dict": 42, "devic": [42, 63], "retro_table_nam": 42, "n_worker": [42, 62, 111], "pipeline_nam": 42, "initialis": [42, 125], "gnn_module_for_energy_regress": 42, "modulelist": 42, "comput": [42, 63, 76, 94, 104, 108, 109, 116, 122, 124, 125, 127], "100": [42, 137], "size": [42, 60, 76, 77, 84, 86, 87, 88, 90, 109, 120], "alreadi": [42, 55, 137], "error": [42, 116, 132, 135], "prompt": 42, "avoid": [42, 132, 135], "overwrit": [42, 63, 114], "i3tosqliteconvert": [43, 44, 51], "parquettosqliteconvert": [43, 44], "preconfigur": 44, "written": [44, 62], "parquetread": [45, 48], "liquidoread": [45, 49], "addit": [46, 58, 73, 76, 104, 116, 118], "accepted_file_extens": 46, "accepted_extractor": 46, "accept": [46, 135], "compat": [46, 56, 108], "extracor_nam": 46, "produc": [46, 75, 115, 118], "find_fil": [46, 47, 48, 49], "mai": [46, 56, 63, 98, 137], "overwritten": [46, 120, 122], "match": [46, 118, 130, 133], "set_extractor": 46, "validate_fil": 46, "input_fil": [46, 62], "reli": 47, "environ": [47, 137], "sqlitedataconvert": [50, 51, 137], "pairwise_shuffl": [52, 54], "database_exist": [52, 55], "query_databas": [52, 55], "get_primary_kei": [52, 55], "database_table_exist": [52, 55], "run_sql_cod": [52, 55], "save_to_sql": [52, 55], "attach_index": [52, 55], "create_t": [52, 55], "create_table_and_save_to_sql": [52, 55], "stringselectionresolv": [52, 56], "rng": 54, "relat": [54, 130], "i3_list": [54, 130], "gcd_list": [54, 130], "correpond": 54, "handi": 54, "becaus": 54, "even": 54, "files_list": 54, "gcd_shuffl": 54, "i3_shuffl": 54, "database_path": [55, 111, 118], "execut": 55, "result": [55, 59, 77, 99, 114, 116, 117, 126, 137], "datafram": [55, 56, 58, 79, 104, 111, 117, 118], "primari": [55, 60], "splitinicepuls": 55, "table_nam": 55, "df": 55, "attach": 55, "default_typ": 55, "integer_primary_kei": 55, "NOT": [55, 116], "integ": [55, 84, 86, 87, 116], "Such": 55, "row": [55, 60, 99, 109], "appropri": [55, 108], "expect": [55, 56, 58, 67, 69, 95, 98], "doesn": 55, "indic": [56, 71, 77, 84, 94, 99, 102, 114, 120, 135], "use_cach": 56, "flexibl": 56, "below": [56, 98, 112, 118, 135, 137], "show": [56, 114], "involv": 56, "cover": 56, "current": [56, 102, 114, 135, 137], "yml": [56, 120, 124, 125], "50000": [56, 124], "ab": [56, 116, 124], "12": [56, 90, 124], "14": [56, 124], "16": [56, 75, 84, 124], "13": [56, 137], "panda": [56, 118], "syntax": [56, 116], "fix": 56, "randomli": [56, 95, 96, 125], "dataformat": [57, 60], "sqlitewrit": [57, 60], "graphnetfilesavemethod": [58, 60], "deep": [58, 60, 76, 88, 90], "save_fil": 58, "reciev": 58, "file_extens": 58, "output_dir": [58, 59, 60], "smaller": 58, "expects_merged_datafram": 58, "write": [59, 67, 69, 137], "events_per_batch": 59, "constitut": 59, "subsampl": 59, "full": 59, "200000": 59, "merged_database_nam": 60, "max_table_s": 60, "db": [60, 117, 118], "maximum": [60, 77, 98, 99, 108, 120], "proceedur": 60, "partit": 60, "approxim": 60, "you": [60, 62, 75, 124, 125, 135, 137], "mani": 60, "exceed": 60, "400": 60, "million": 60, "tend": 60, "notic": [60, 109, 116], "slower": 60, "put": 60, "primary_key_rescu": 60, "database_nam": 60, "my_databas": 60, "cleaning_modul": [61, 66], "inference_modul": [61, 66], "deploymentmodul": [61, 62, 63, 69], "baseclass": 62, "thei": 62, "appear": 62, "Will": [62, 67, 69, 93], "independ": 62, "sequenc": [62, 75, 76, 99, 109, 117], "determin": [62, 84], "divid": 62, "model_config": [63, 67, 69, 119, 121, 122, 124, 127], "state_dict": [63, 67, 69, 100, 103, 129], "prediction_column": [63, 69, 104, 117], "modelconfig": [63, 67, 69, 100, 121, 124, 125], "i3pulsecleanermodul": [66, 67], "i3inferencemodul": [66, 67, 69], "pulsemap_extractor": [67, 69], "model_nam": [67, 69, 111], "discard_empty_ev": 67, "clean": [67, 135, 137], "assum": [67, 75, 79, 95, 99, 108, 109], "been": [67, 116, 135], "pulsmap": [67, 69], "summar": [67, 69, 98, 99], "help": [67, 69, 120, 135], "entri": [67, 69, 86, 109, 112, 120], "dynedg": [67, 69, 72, 83, 87, 88, 90], "associ": [67, 69, 95, 99, 107, 108, 116], "7": [67, 77, 111], "consid": [67, 84, 137], "posit": [67, 75, 76, 77, 90, 99, 107, 122, 127], "signal": 67, "els": 67, "elimin": 67, "whose": 67, "empti": 67, "speed": [67, 94], "especi": 67, "sinc": [67, 116], "further": 67, "calcul": [67, 75, 93, 96, 98, 104, 109, 115, 116], "energy_reco": 69, "miss": 71, "embed": [72, 74, 84, 90, 102, 106, 108], "rnn_tito": [72, 83], "convnet": [72, 83], "dynedge_jinst": [72, 83], "dynedge_kaggle_tito": [72, 83], "icemix": [72, 83], "edg": [72, 76, 77, 86, 87, 88, 91, 94, 95, 96, 97, 98, 109], "node_rnn": [72, 84, 101], "unbatch_edge_index": [72, 73], "attributecoarsen": [72, 73], "domcoarsen": [72, 73], "customdomcoarsen": [72, 73], "domandtimewindowcoarsen": [72, 73], "standardaveragedmodel": [72, 103], "standardmodel": [72, 103, 104], "calculate_xyzt_homophili": [72, 109], "calculate_distance_matrix": [72, 109], "knn_graph_batch": [72, 109], "array_to_sequ": [72, 109], "oper": [73, 76, 83, 86], "cluster": [73, 76, 77, 84, 86, 88, 98, 99, 102], "local": [73, 80, 81, 82, 98, 120], "edge_index": [73, 76, 109], "accord": [73, 77, 93, 95, 96, 99], "vector": [73, 76, 77, 116], "longtensor": [73, 77, 109], "mathbf": [73, 77], "ldot": [73, 77], "reduce_opt": 73, "avg": 73, "avg_pool": 73, "avg_pool_x": 73, "max": [73, 76, 86, 88, 116, 120], "max_pool": [73, 77], "max_pool_x": [73, 77], "min": [73, 77, 86, 88], "min_pool": [73, 74, 77], "min_pool_x": [73, 74, 77], "sum": [73, 77, 86, 88, 104, 118], "sum_pool": [73, 74, 77], "sum_pool_x": [73, 74, 77], "forward": [73, 75, 76, 79, 84, 85, 86, 87, 88, 89, 90, 93, 95, 98, 102, 104, 108, 116], "simplecoarsen": 73, "window": 73, "time_window": 73, "sinusoidalposemb": [74, 75], "fourierencod": [74, 75], "spacetimeencod": [74, 75], "dynedgeconv": [74, 76, 86], "edgeconvtito": [74, 76], "dyntran": [74, 76, 84, 88], "droppath": [74, 76], "mlp": [74, 76, 86], "block_rel": [74, 76], "attention_rel": [74, 76], "sum_pool_and_distribut": [74, 77], "group_bi": [74, 77], "group_pulses_to_dom": [74, 77], "group_pulses_to_pmt": [74, 77], "std_pool_x": [74, 77], "std_pool": [74, 77], "dim": [75, 76], "n_freq": 75, "scale": [75, 76, 87, 90, 94, 95, 98, 99, 108, 116], "lightningmodul": [75, 76, 100, 114, 132], "sinusoid": [75, 90], "competit": [75, 76, 80, 88, 90], "2nd": [75, 90], "place": [75, 90, 129, 135], "solut": [75, 76, 88, 90, 135], "see": [75, 84, 93, 95, 114, 135, 137], "arxiv": [75, 93, 116], "2310": 75, "15674": 75, "fourier": 75, "encod": 75, "attent": [75, 76, 90], "1706": 75, "03762": 75, "seen": 75, "soft": 75, "digit": 75, "dimens": [75, 76, 80, 81, 82, 84, 85, 86, 88, 90, 99, 102, 108, 109, 116], "frequenc": 75, "seq_length": [75, 90, 109], "output_dim": 75, "n_featur": [75, 90], "incorpor": 75, "meaning": 75, "four": 75, "mandatori": 75, "128": [75, 85, 86, 88, 120], "dimension": [75, 76], "384": [75, 90], "6": [75, 77, 90, 112], "spacetim": 75, "space": [75, 93, 94, 108, 118], "interv": 75, "32": [75, 90], "aggr": 76, "nb_neighbor": 76, "features_subset": [76, 84, 86, 88, 102], "edgeconv": 76, "convolut": [76, 85, 86, 87, 88], "aggreg": [76, 77], "8": [76, 77, 84, 86, 88, 96, 102, 116, 117, 135, 137], "neighbour": [76, 84, 86, 88, 93, 94, 96, 102, 109], "slice": [76, 86], "sparsetensor": 76, "messagepass": 76, "tito": [76, 84, 88], "reset_paramet": 76, "reset": 76, "learnabl": [76, 83, 84, 85, 86, 87, 88, 89, 90, 102, 108], "messag": [76, 114, 132], "x_i": 76, "x_j": 76, "layer_s": 76, "n_head": [76, 84, 88], "dyntrans1": 76, "head": [76, 84, 88, 90, 108], "multiheadattent": 76, "drop_prob": 76, "drop": [76, 85], "stochast": 76, "depth": [76, 90, 99], "probabl": [76, 116], "dure": [76, 90, 95, 108, 114], "extra_repr": [76, 100], "extra": [76, 137], "in_featur": 76, "hidden_featur": 76, "out_featur": 76, "activ": [76, 84, 86, 98, 102, 104, 108, 135, 137], "gelu": 76, "dropout_prob": 76, "multi": [76, 86], "perceptron": [76, 86], "hidden": [76, 84, 86, 87, 102], "dropout": [76, 84, 102], "input_dim": 76, "num_head": 76, "mlp_ratio": 76, "qkv_bia": 76, "qk_scale": 76, "attn_drop": 76, "drop_path": 76, "init_valu": 76, "norm_lay": 76, "normal": [76, 86, 99, 108], "layernorm": 76, "attn_head_dim": 76, "beitv2": 76, "4": [76, 87, 90, 107, 112], "feedforward": 76, "bia": 76, "term": [76, 116], "matric": 76, "factor": [76, 99, 114], "dot": 76, "gamma_1": 76, "gamma_2": 76, "key_padding_mask": 76, "rel_pos_bia": 76, "kv": 76, "proj_drop": 76, "mechan": 76, "rel": [76, 90], "multipli": [76, 114], "head_dim": 76, "q": 76, "k": [76, 84, 86, 88, 93, 96, 102, 109, 116], "attn_mask": 76, "just": [77, 137], "negat": 77, "cluster_index": 77, "distribut": [77, 86, 107, 108, 116, 118], "ident": [77, 108], "pmt": [77, 99], "f1": 77, "f2": 77, "groupbi": 77, "3": [77, 84, 85, 88, 94, 99, 102, 107, 109, 111, 112, 116, 135, 137], "matrix": [77, 93, 94, 109, 116], "mathbb": 77, "r": [77, 93, 137], "n_1": 77, "n_b": 77, "f": 77, "obtain": [77, 116], "wise": 77, "dens": 77, "fc": 77, "known": 77, "std": 77, "repres": [77, 84, 95, 96, 98, 99, 109, 122, 124, 125], "averag": [77, 103, 116], "torch_geometr": [77, 109], "version": [77, 99, 108, 114, 135, 137], "standardis": 78, "icecubekaggl": [78, 80], "icecubedeepcor": [78, 80], "icecubeupgrad": [78, 80], "liquido_v1": [78, 81], "orca150": [78, 82], "ins": 79, "feature_map": [79, 80, 81, 82], "input_featur": [79, 95], "input_feature_nam": [79, 95, 96, 98], "adjac": 79, "geometry_t": [79, 80, 81, 82], "public": [79, 118], "retriev": 79, "geometri": [79, 95], "string_index_nam": 79, "sensor_position_nam": 79, "xyz": [79, 80, 81, 82, 98, 99], "sensor_index_nam": 79, "sensor": [79, 95], "geometry_table_path": [80, 81, 82], "home": [80, 81, 82, 120, 137], "runner": [80, 81, 82, 120], "lib": [80, 81, 82, 120, 137], "python3": [80, 81, 82, 120], "string_id_column": [80, 81, 82], "sensor_id_column": [80, 81, 82], "sensor_id": [80, 82], "icecube_upgrad": 80, "prototyp": [81, 82], "liquid": 81, "fiber_id": 81, "sipm_id": 81, "orca_150": 82, "sensor_string_id": 82, "dynedgejinst": [83, 87], "dynedgetito": [83, 84, 88], "deepic": [83, 90], "rnn_dynedg": 84, "intend": [84, 102, 137], "amount": 84, "nb_input": [84, 85, 86, 87, 88, 89, 102, 106, 107, 108], "time_series_column": [84, 102], "treat": [84, 102], "nb_neighbour": [84, 86, 88, 102], "rnn_layer": 84, "rnn_hidden_s": 84, "64": [84, 137], "rnn_dropout": 84, "latent": [84, 86, 88, 90, 102, 106, 107, 108], "metric": [84, 86, 88, 94, 102, 114], "nearest": [84, 86, 88, 93, 94, 96, 102, 109], "dyntrans_layer_s": [84, 88], "post_processing_layer_s": [84, 86, 88], "post": [84, 86, 88], "readout_layer_s": [84, 86, 88], "readout": [84, 86, 88], "global_pooling_schem": [84, 86, 88], "scheme": [84, 86, 88], "embedding_dim": [84, 102], "ie": 84, "use_global_featur": [84, 88], "use_post_processing_lay": [84, 88], "author": [85, 87, 116], "martin": 85, "minh": 85, "nb_output": [85, 87, 89, 98, 106, 107, 108], "nb_intermedi": 85, "dropout_ratio": 85, "fraction": [85, 102, 117], "dynedge_layer_s": 86, "dimenion": [86, 88], "256": [86, 88], "336": [86, 88], "follow": [86, 104, 116, 118, 135, 137], "_and_": 86, "As": 86, "last": [86, 102, 106, 107, 108, 114, 117], "add_global_variables_after_pool": 86, "altern": [86, 116, 135], "activation_lay": 86, "add_norm_lay": 86, "linear": 86, "skip_readout": 86, "exact": [87, 116], "2209": 87, "03042": 87, "oerso": 87, "layer_size_scal": 87, "ic": [88, 90, 98], "univers": [88, 90], "south": [88, 90], "pole": [88, 90], "core": 89, "drhb": 90, "http": [90, 93, 95, 116, 135], "github": [90, 95, 116, 137], "com": [90, 95, 116, 137], "hidden_dim": 90, "192": 90, "head_siz": 90, "depth_rel": 90, "n_rel": 90, "scaled_emb": 90, "include_dynedg": 90, "dynedge_arg": 90, "impact": 90, "no_weight_decai": 90, "cls_tocken": 90, "subject": [90, 116], "decai": 90, "edgedefinit": [91, 92, 93, 94, 95, 97], "how": [91, 92, 97], "drawn": [91, 92, 96, 97], "minkowski": [91, 92], "knngraph": [91, 96], "lex_sort": [91, 99], "gather_cluster_sequ": [91, 99], "identify_indic": [91, 99], "cluster_summarize_with_percentil": [91, 99], "ice_transpar": [91, 99], "knnedg": [92, 93], "radialedg": [92, 93], "euclideanedg": [92, 93], "compute_minkowski_distance_mat": [92, 94], "minkowskiknnedg": [92, 94], "_construct_edg": 93, "definit": [93, 95, 96, 98, 100, 108, 135], "nb_nearest_neighbour": [93, 94, 96], "distanc": [93, 94, 96, 109], "sphere": 93, "chosen": [93, 99, 132], "radiu": 93, "centr": 93, "radial": 93, "center": 93, "euclidean": [93, 135], "org": [93, 116, 137], "pdf": 93, "1809": 93, "06166": 93, "space_coord": 94, "time_coord": 94, "pairwis": [94, 109], "second": 94, "m": [94, 99, 116], "light": [94, 137], "time_like_weight": 94, "prefer": [94, 137], "over": [94, 98], "time_lik": 94, "hold": 95, "alter": 95, "node_definit": [95, 96], "edge_definit": 95, "nodedefinit": [95, 96, 97, 98], "nodesaspuls": [95, 97, 98], "perturbation_dict": [95, 96], "deviat": [95, 96, 99], "perturb": [95, 96], "add_inactive_sensor": 95, "inact": 95, "append": 95, "pad": [95, 99, 109], "sensor_mask": 95, "mask": [95, 109], "string_mask": 95, "sort_bi": 95, "sort": [95, 99], "truth_dict": 95, "custom_label_funct": 95, "loss_weight": [95, 108], "data_path": 95, "num_row": 95, "team": [95, 135], "blob": [95, 116], "getting_start": 95, "md": 95, "your": [96, 135, 137], "percentileclust": [97, 98], "nodeasdomtimeseri": [97, 98], "icemixnod": [97, 98], "num_puls": 98, "node_feature_nam": 98, "new_features_nam": 98, "overridden": 98, "set_number_of_input": 98, "set_output_feature_nam": 98, "measur": [98, 99, 109], "cherenkov": [98, 99], "radiat": [98, 99], "percentil": [98, 99], "summari": [98, 99], "cluster_on": [98, 99], "50": [98, 99, 120], "90": [98, 99, 112], "add_count": [98, 99], "duplic": 98, "id_column": 98, "time_column": 98, "charge_column": 98, "max_activ": 98, "n_puls": 98, "limit": [98, 116], "minimum": [98, 108], "hlc": 98, "max_puls": 98, "768": 98, "z_name": 98, "hlc_name": 98, "coincid": 98, "add_ice_properti": 98, "scatter": [98, 99], "absopt": 98, "ice_arg": 98, "z_offset": [98, 99], "z_scale": [98, 99], "offset": [98, 99], "cluster_column": 99, "numpi": 99, "along": 99, "backward": [99, 116], "feature_idx": 99, "turn": [99, 135], "gather": 99, "nan": 99, "n_cluster": 99, "l": [99, 109], "largest": 99, "suppos": 99, "n_pmt": 99, "three": [99, 116], "spatial": 99, "column_offset": 99, "feature_nam": 99, "summarization_indic": 99, "cluster_indic": 99, "interpol": [99, 114], "500": 99, "inaccur": 99, "f_absorpt": 99, "absorpt": 99, "f_scatter": 99, "verbose_print": 100, "save_state_dict": 100, "load_state_dict": [100, 103], "karg": [100, 103], "trust": 100, "enough": 100, "eval": [100, 137], "lambda": 100, "express": [100, 116], "consequ": 100, "set_verbose_print_recurs": 100, "descript": [100, 120], "print": [100, 114, 132], "about": [100, 122, 124, 125, 127], "extra_repr_recurs": 100, "indent": 100, "recurr": 101, "nodetimernn": 102, "standalon": 102, "pr": 102, "seper": 102, "hidden_s": [102, 106, 107, 108], "num_lay": 102, "clean_up_data_object": 102, "updat": [102, 103, 109, 111, 114], "swa": 103, "ema": 103, "standardaveragemodel": 103, "training_step": [103, 104], "train_batch": [103, 104], "batch_idx": [103, 104, 109], "step": [103, 104, 109, 114], "validation_step": [103, 104], "val_batch": [103, 104], "optimizer_step": 103, "epoch": [103, 114, 120], "optim": [103, 104, 114], "optimizer_closur": 103, "on_train_end": 103, "ones": [103, 137], "backbon": 104, "max_epoch": 104, "early_stopping_pati": [104, 127], "gpu": [104, 120, 137], "ckpt_path": 104, "log_every_n_step": 104, "gradient_clip_v": 104, "distribution_strategi": 104, "trainer_kwarg": 104, "pytorch_lightn": [104, 114, 132], "trainer": [104, 114, 117], "target_label": [104, 108], "target": [104, 106, 108, 116, 127], "prediction_label": [104, 108], "configure_optim": 104, "shared_step": 104, "share": 104, "compute_loss": [104, 108], "pred": [104, 108], "mode": [104, 108], "deactiv": [104, 108], "predict_as_datafram": 104, "additional_attribut": [104, 117], "multiclassclassificationtask": [105, 106], "binaryclassificationtask": [105, 106], "binaryclassificationtasklogit": [105, 106], "azimuthreconstructionwithkappa": [105, 107], "azimuthreconstruct": [105, 107], "directionreconstructionwithkappa": [105, 107], "zenithreconstruct": [105, 107], "zenithreconstructionwithkappa": [105, 107], "energyreconstruct": [105, 107], "energyreconstructionwithpow": [105, 107], "energytcreconstruct": [105, 107], "energyreconstructionwithuncertainti": [105, 107], "vertexreconstruct": [105, 107], "positionreconstruct": [105, 107], "timereconstruct": [105, 107], "inelasticityreconstruct": [105, 107], "learnedtask": [105, 108], "standardlearnedtask": [105, 106, 107, 108], "identitytask": [105, 106, 108], "standardflowtask": [105, 108], "classifi": 106, "untransform": 106, "interpret": 106, "logit": [106, 116], "binari": [106, 116], "default_target_label": [106, 107, 108], "default_prediction_label": [106, 107, 108], "target_pr": 106, "angl": [107, 115], "kappa": [107, 116], "var": 107, "azimuth_pr": 107, "azimuth_kappa": 107, "3d": [107, 116], "vmf": 107, "dir_x_pr": 107, "dir_y_pr": 107, "dir_z_pr": 107, "direction_kappa": 107, "zenith_pr": 107, "zenith_kappa": 107, "stabl": [107, 108], "energy_pr": 107, "cascad": 107, "energy_track_pr": 107, "energy_cascade_pr": 107, "uncertainti": 107, "energy_sigma": 107, "vertex": 107, "position_x_pr": 107, "position_y_pr": 107, "position_z_pr": 107, "interaction_time_pr": 107, "interact": 107, "hadron": 107, "inelasticity_pr": 107, "lossfunct": [108, 113, 116], "auto": 108, "matic": 108, "_pred": 108, "transform_prediction_and_target": 108, "numer": 108, "transform_target": 108, "log10": [108, 118], "rather": [108, 132], "transform_infer": 108, "invers": 108, "recov": 108, "transform_support": 108, "restrict": [108, 116], "invert": 108, "1e6": 108, "train_ev": 108, "act": [108, 116], "wrt": 108, "meet": 108, "come": [108, 135], "vast": 108, "major": 108, "supervis": 108, "grab": 108, "send": 108, "evalu": 108, "normalizingflow": 108, "jacobian": 108, "flow": 108, "xyzt": 109, "homophili": 109, "xyz_coord": 109, "nb_dom": 109, "excluding_valu": 109, "total": [109, 117, 118], "belong": 109, "inf": 109, "masked_entri": 109, "config_updat": [110, 111], "weightfitt": [110, 111, 113, 118], "contourfitt": [110, 111], "read_entri": [110, 112], "plot_2d_contour": [110, 112], "plot_1d_contour": [110, 112], "contour": [111, 112], "config_path": 111, "new_config_path": 111, "dummy_sect": 111, "temp": 111, "dummi": 111, "section": 111, "header": 111, "configupdat": 111, "programat": 111, "statistical_fit": 111, "fit_weight": [111, 118], "config_outdir": 111, "weight_nam": [111, 118], "pisa_config_dict": 111, "add_to_databas": [111, 118], "flux": 111, "_database_path": 111, "statist": 111, "effect": [111, 114, 135], "account": 111, "certain": 111, "systemat": 111, "hypersurfac": 111, "chang": [111, 116, 135], "assumpt": 111, "regard": 111, "pipeline_path": 111, "post_fix": 111, "include_retro": 111, "fit_1d_contour": 111, "run_nam": 111, "config_dict": 111, "grid_siz": 111, "theta23_minmax": 111, "36": 111, "54": 111, "dm31_minmax": 111, "1d": [111, 112], "fit_2d_contour": 111, "2d": [111, 112, 116], "content": 112, "contour_data": 112, "xlim": 112, "ylim": 112, "0023799999999999997": 112, "0025499999999999997": 112, "chi2_critical_valu": 112, "width": 112, "height": 112, "path_to_pisa_fit_result": 112, "name_of_my_model_in_fit": 112, "One": 112, "field": [112, 115, 122, 124, 125, 127, 129], "legend": 112, "color": 112, "linestyl": 112, "style": [112, 135], "line": [112, 114, 120], "upper": 112, "bound": 112, "axi": 112, "605": 112, "critic": [112, 132], "chi2": 112, "cl": 112, "right": [112, 116], "176": 112, "inch": 112, "388": 112, "706": 112, "abov": [112, 116, 118, 137], "352": 112, "piecewiselinearlr": [113, 114], "progressbar": [113, 114], "graphnetearlystop": [113, 114], "mseloss": [113, 116], "rmseloss": [113, 116], "logcoshloss": [113, 116], "crossentropyloss": [113, 116], "binarycrossentropyloss": [113, 116], "logcmk": [113, 116], "vonmisesfisherloss": [113, 116], "vonmisesfisher2dloss": [113, 116], "euclideandistanceloss": [113, 116], "vonmisesfisher3dloss": [113, 116], "collator_sequence_bucklet": [113, 117], "make_dataload": [113, 117], "make_train_validation_dataload": [113, 117], "get_predict": [113, 117], "save_result": [113, 117], "save_select": [113, 117], "uniform": [113, 118], "bjoernlow": [113, 118], "mileston": 114, "last_epoch": 114, "_lrschedul": 114, "linearli": 114, "closest": 114, "vice": 114, "versa": 114, "wrap": [114, 124, 125], "stdout": 114, "get_lr": 114, "refresh_r": 114, "process_posit": 114, "tqdmprogressbar": 114, "progress": 114, "bar": 114, "customis": 114, "init_validation_tqdm": 114, "init_predict_tqdm": 114, "init_test_tqdm": 114, "init_train_tqdm": 114, "get_metr": 114, "on_train_epoch_start": 114, "previou": 114, "behaviour": 114, "on_train_epoch_end": 114, "don": [114, 137], "duplciat": 114, "save_dir": 114, "earlystop": 114, "earli": [114, 120], "keyword": [114, 122, 127], "graphnet_model": 114, "on_validation_end": 114, "on_fit_end": 114, "runtim": [115, 137], "azimuth_kei": 115, "zenith_kei": 115, "access": [115, 137], "azimiuth": 115, "return_el": 116, "elementwis": 116, "squar": 116, "root": [116, 137], "cosh": 116, "small": 116, "cross": 116, "entropi": 116, "num_class": 116, "softmax": 116, "ed": 116, "mit": 116, "licens": 116, "copyright": 116, "2019": 116, "ryabinin": 116, "permiss": 116, "herebi": 116, "person": 116, "copi": 116, "document": 116, "deal": 116, "modifi": 116, "publish": 116, "sublicens": 116, "sell": 116, "permit": 116, "whom": 116, "furnish": 116, "so": [116, 137], "condit": 116, "shall": 116, "substanti": 116, "portion": 116, "THE": 116, "AS": 116, "warranti": 116, "OF": 116, "kind": 116, "OR": 116, "impli": 116, "BUT": 116, "TO": 116, "merchant": 116, "FOR": 116, "particular": [116, 135], "AND": 116, "noninfring": 116, "IN": 116, "NO": 116, "holder": 116, "BE": 116, "liabl": 116, "claim": 116, "damag": 116, "liabil": 116, "action": 116, "contract": 116, "tort": 116, "aris": 116, "WITH": 116, "_____________________": 116, "mryab": 116, "vmf_loss": 116, "master": 116, "py": [116, 137], "bessel": 116, "exponenti": 116, "ditto": 116, "iv": 116, "1812": 116, "04616": 116, "spite": 116, "suggest": 116, "sec": 116, "paper": 116, "correct": 116, "static": [116, 135], "ctx": 116, "grad_output": 116, "von": 116, "mise": 116, "fisher": 116, "log_cmk_exact": 116, "c_": 116, "exactli": [116, 132], "log_cmk_approx": 116, "approx": 116, "minu": 116, "sign": 116, "log_cmk": 116, "kappa_switch": 116, "diverg": 116, "700": 116, "float64": 116, "precis": 116, "unaccur": 116, "switch": 116, "batch_split": 117, "bucket": 117, "cut": 117, "mini": 117, "explicitli": [117, 122, 127], "alwai": 117, "respect": 117, "database_indic": 117, "test_siz": 117, "node_level": 117, "tag": [117, 135, 137], "archiv": 117, "file_path": 117, "csv": [117, 124], "uniformweightfitt": 118, "bin": 118, "db_count_norm": 118, "privat": 118, "_fit_weight": 118, "sql": 118, "desir": [118, 130], "np": 118, "happen": 118, "x_low": 118, "wherea": 118, "curv": 118, "base_config": [119, 121], "dataset_config": [119, 121], "training_config": [119, 121], "argumentpars": [119, 120], "rename_state_dict_entri": [119, 129], "is_gcd_fil": [119, 130], "is_i3_fil": [119, 130], "has_extens": [119, 130], "find_i3_fil": [119, 130], "has_icecube_packag": [119, 131], "has_torch_packag": [119, 131], "has_pisa_packag": [119, 131], "requires_icecub": [119, 131], "repeatfilt": [119, 132], "eps_lik": [119, 133], "consist": [120, 132, 135], "cli": 120, "pop_default": 120, "usag": 120, "command": [120, 137], "standard_argu": 120, "training_example_data_sqlit": 120, "patienc": 120, "narg": 120, "example_energy_reconstruction_model": 120, "num": 120, "fetch": 120, "with_standard_argu": 120, "baseconfig": [121, 122, 123, 124, 125, 127], "get_all_argument_valu": [121, 122], "save_dataset_config": [121, 124], "datasetconfigsavermeta": [121, 124], "datasetconfigsaverabcmeta": [121, 124], "save_model_config": [121, 125], "modelconfigsavermeta": [121, 125], "modelconfigsaverabc": [121, 125], "traverse_and_appli": [121, 126], "list_all_submodul": [121, 126], "get_all_grapnet_class": [121, 126], "is_graphnet_modul": [121, 126], "is_graphnet_class": [121, 126], "get_graphnet_class": [121, 126], "trainingconfig": [121, 127], "basemodel": [122, 124, 125], "validationerror": [122, 127], "pydantic_cor": [122, 127], "dump": [122, 124, 125], "yaml": [122, 123], "as_dict": [122, 124, 125], "model_computed_field": [122, 124, 125, 127], "classvar": [122, 124, 125, 127], "computedfieldinfo": [122, 124, 125, 127], "configdict": [122, 124, 125, 127], "conform": [122, 124, 125, 127], "pydant": [122, 124, 125, 127], "model_field": [122, 124, 125, 127], "fieldinfo": [122, 124, 125, 127], "metadata": [122, 124, 125, 127], "replac": [122, 124, 125, 127, 129], "__fields__": [122, 124, 125, 127], "v1": [122, 124, 125, 127, 137], "re": [123, 137], "save_config": 123, "dataconfig": 124, "transpar": [124, 125, 135], "reproduc": [124, 125], "session": [124, 125], "anoth": [124, 125], "still": 124, "train_select": 124, "unambigu": [124, 125], "annot": [124, 125, 127], "nonetyp": 124, "init_fn": [124, 125], "__init__": [124, 125, 137], "metaclass": [124, 125], "abcmeta": [124, 125], "datasetconfigsav": 124, "trainabl": 125, "hyperparamet": 125, "thu": 125, "modelconfigsav": 125, "fn_kwarg": 126, "structur": 126, "moduletyp": 126, "grapnet": 126, "lookup": 126, "transit": 129, "old_phras": 129, "new_phras": 129, "deepcopi": 129, "who": 129, "renam": 129, "phrase": 129, "system": [130, 137], "filenam": 130, "dir": 130, "test_funct": 131, "repeat": 132, "nb_repeats_allow": 132, "record": 132, "logrecord": 132, "clear": 132, "intuit": 132, "composit": 132, "loggeradapt": 132, "clash": 132, "setlevel": 132, "deleg": 132, "msg": 132, "warn": 132, "info": [132, 137], "debug": 132, "warning_onc": 132, "onc": 132, "handler": 132, "file_handl": 132, "filehandl": 132, "stream_handl": 132, "streamhandl": 132, "assort": 133, "ep": 133, "api": 134, "To": [135, 137], "sure": [135, 137], "smooth": 135, "guidelin": 135, "guid": 135, "encourag": 135, "contributor": 135, "discuss": 135, "bug": 135, "anyth": 135, "describ": 135, "would": 135, "yourself": 135, "ownership": 135, "prioriti": 135, "situat": 135, "lot": 135, "effort": 135, "go": 135, "outsid": 135, "scope": 135, "better": 135, "fork": 135, "repo": 135, "dedic": 135, "branch": [135, 137], "repositori": 135, "own": [135, 137], "autom": 135, "review": 135, "pep8": 135, "docstr": 135, "googl": 135, "hint": 135, "adher": 135, "pep": 135, "pylint": 135, "flake8": 135, "black": 135, "well": 135, "recommend": [135, 137], "mypi": 135, "pydocstyl": 135, "docformatt": 135, "commit": 135, "hook": 135, "instal": 135, "pip": [135, 137], "Then": 135, "everytim": 135, "pep257": 135, "concept": 135, "ljvmiranda921": 135, "io": 135, "notebook": 135, "2018": 135, "06": 135, "21": 135, "precommit": 135, "virtual": 137, "anaconda": 137, "prove": 137, "instruct": 137, "want": 137, "part": 137, "achiev": 137, "bash": 137, "shell": 137, "cvmf": 137, "opensciencegrid": 137, "py3": 137, "v4": 137, "sh": 137, "rhel_7_x86_64": 137, "metaproject": 137, "env": 137, "alia": 137, "script": 137, "everi": 137, "With": 137, "now": 137, "geometr": 137, "won": 137, "later": 137, "torch_cpu": 137, "txt": 137, "torch_gpu": 137, "unix": 137, "git": 137, "clone": 137, "usernam": 137, "cd": 137, "conda": 137, "gcc_linux": 137, "gxx_linux": 137, "libgcc": 137, "cudatoolkit": 137, "11": 137, "forg": 137, "box": 137, "compil": 137, "gcc": 137, "date": 137, "possibli": 137, "cuda": 137, "toolkit": 137, "recent": 137, "omit": 137, "newer": 137, "export": 137, "ld_library_path": 137, "anaconda3": 137, "miniconda3": 137, "bashrc": 137, "librari": 137, "rm": 137, "asogaard": 137, "latest": 137, "dc423315742c": 137, "01_icetrai": 137, "01_convert_i3_fil": 137, "2023": 137, "01": 137, "24": 137, "41": 137, "27": 137, "graphnet_20230124": 137, "134127": 137, "46": 137, "convert_i3_fil": 137, "ic86": 137, "thread": 137, "00": 137, "79": 137, "26": 137, "413": 137, "88it": 137, "specialis": 137, "push": 137, "vx": 137}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [61, 0, 0, "-", "deployment"], [70, 0, 0, "-", "exceptions"], [72, 0, 0, "-", "models"], [110, 0, 0, "-", "pisa"], [113, 0, 0, "-", "training"], [119, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "dataclasses"], [6, 0, 0, "-", "dataconverter"], [7, 0, 0, "-", "dataloader"], [8, 0, 0, "-", "datamodule"], [9, 0, 0, "-", "dataset"], [15, 0, 0, "-", "extractors"], [40, 0, 0, "-", "parquet"], [42, 0, 0, "-", "pipeline"], [43, 0, 0, "-", "pre_configured"], [45, 0, 0, "-", "readers"], [50, 0, 0, "-", "sqlite"], [52, 0, 0, "-", "utilities"], [57, 0, 0, "-", "writers"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.dataclasses": [[5, 1, 1, "", "I3FileSet"], [5, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_files"], [5, 2, 1, "", "modules"], [5, 2, 1, "", "output_folder"]], "graphnet.data.dataconverter": [[6, 1, 1, "", "DataConverter"], [6, 4, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[6, 3, 1, "", "get_map_function"], [6, 3, 1, "", "merge_files"]], "graphnet.data.dataloader": [[7, 1, 1, "", "DataLoader"], [7, 4, 1, "", "collate_fn"], [7, 4, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[7, 3, 1, "", "from_dataset_config"]], "graphnet.data.datamodule": [[8, 1, 1, "", "GraphNeTDataModule"]], "graphnet.data.datamodule.GraphNeTDataModule": [[8, 3, 1, "", "prepare_data"], [8, 3, 1, "", "setup"], [8, 3, 1, "", "teardown"], [8, 5, 1, "", "test_dataloader"], [8, 5, 1, "", "train_dataloader"], [8, 5, 1, "", "val_dataloader"]], "graphnet.data.dataset": [[10, 0, 0, "-", "dataset"], [11, 0, 0, "-", "parquet"], [13, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[10, 1, 1, "", "Dataset"], [10, 1, 1, "", "EnsembleDataset"], [10, 4, 1, "", "load_module"], [10, 4, 1, "", "parse_graph_definition"], [10, 4, 1, "", "parse_labels"]], "graphnet.data.dataset.dataset.Dataset": [[10, 3, 1, "", "add_label"], [10, 3, 1, "", "concatenate"], [10, 3, 1, "", "from_config"], [10, 5, 1, "", "path"], [10, 3, 1, "", "query_table"], [10, 5, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[12, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[12, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[12, 3, 1, "", "query_table"]], "graphnet.data.dataset.sqlite": [[14, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[14, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[14, 3, 1, "", "query_table"]], "graphnet.data.extractors": [[16, 0, 0, "-", "combine_extractors"], [17, 0, 0, "-", "extractor"], [18, 0, 0, "-", "icecube"], [36, 0, 0, "-", "internal"], [38, 0, 0, "-", "liquido"]], "graphnet.data.extractors.combine_extractors": [[16, 1, 1, "", "CombinedExtractor"]], "graphnet.data.extractors.extractor": [[17, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[17, 5, 1, "", "name"]], "graphnet.data.extractors.icecube": [[19, 0, 0, "-", "i3extractor"], [20, 0, 0, "-", "i3featureextractor"], [21, 0, 0, "-", "i3genericextractor"], [22, 0, 0, "-", "i3hybridrecoextractor"], [23, 0, 0, "-", "i3ntmuonlabelsextractor"], [24, 0, 0, "-", "i3particleextractor"], [25, 0, 0, "-", "i3pisaextractor"], [26, 0, 0, "-", "i3quesoextractor"], [27, 0, 0, "-", "i3retroextractor"], [28, 0, 0, "-", "i3splinempeextractor"], [29, 0, 0, "-", "i3truthextractor"], [30, 0, 0, "-", "i3tumextractor"], [31, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[19, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[19, 3, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[20, 1, 1, "", "I3FeatureExtractor"], [20, 1, 1, "", "I3FeatureExtractorIceCube86"], [20, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [20, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [20, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[21, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[22, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[23, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[24, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[25, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[26, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[27, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[28, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[29, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[30, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[32, 0, 0, "-", "collections"], [33, 0, 0, "-", "frames"], [34, 0, 0, "-", "i3_filters"], [35, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[32, 4, 1, "", "flatten_nested_dictionary"], [32, 4, 1, "", "serialise"], [32, 4, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[33, 4, 1, "", "frame_is_montecarlo"], [33, 4, 1, "", "frame_is_noise"], [33, 4, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[34, 1, 1, "", "I3Filter"], [34, 1, 1, "", "I3FilterMask"], [34, 1, 1, "", "NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[35, 4, 1, "", "break_cyclic_recursion"], [35, 4, 1, "", "cast_object_to_pure_python"], [35, 4, 1, "", "cast_pulse_series_to_pure_python"], [35, 4, 1, "", "get_member_variables"], [35, 4, 1, "", "is_boost_class"], [35, 4, 1, "", "is_boost_enum"], [35, 4, 1, "", "is_icecube_class"], [35, 4, 1, "", "is_method"], [35, 4, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[37, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[37, 1, 1, "", "ParquetExtractor"]], "graphnet.data.extractors.liquido": [[39, 0, 0, "-", "h5_extractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[39, 1, 1, "", "H5Extractor"], [39, 1, 1, "", "H5HitExtractor"], [39, 1, 1, "", "H5TruthExtractor"]], "graphnet.data.parquet": [[41, 0, 0, "-", "deprecated_methods"]], "graphnet.data.parquet.deprecated_methods": [[41, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.pipeline": [[42, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.pre_configured": [[44, 0, 0, "-", "dataconverters"]], "graphnet.data.pre_configured.dataconverters": [[44, 1, 1, "", "I3ToParquetConverter"], [44, 1, 1, "", "I3ToSQLiteConverter"], [44, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.readers": [[46, 0, 0, "-", "graphnet_file_reader"], [47, 0, 0, "-", "i3reader"], [48, 0, 0, "-", "internal_parquet_reader"], [49, 0, 0, "-", "liquido_reader"]], "graphnet.data.readers.graphnet_file_reader": [[46, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[46, 5, 1, "", "accepted_extractors"], [46, 5, 1, "", "accepted_file_extensions"], [46, 5, 1, "", "extracor_names"], [46, 3, 1, "", "find_files"], [46, 3, 1, "", "set_extractors"], [46, 3, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[47, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[47, 3, 1, "", "find_files"]], "graphnet.data.readers.internal_parquet_reader": [[48, 1, 1, "", "ParquetReader"]], "graphnet.data.readers.internal_parquet_reader.ParquetReader": [[48, 3, 1, "", "find_files"]], "graphnet.data.readers.liquido_reader": [[49, 1, 1, "", "LiquidOReader"]], "graphnet.data.readers.liquido_reader.LiquidOReader": [[49, 3, 1, "", "find_files"]], "graphnet.data.sqlite": [[51, 0, 0, "-", "deprecated_methods"]], "graphnet.data.sqlite.deprecated_methods": [[51, 1, 1, "", "SQLiteDataConverter"]], "graphnet.data.utilities": [[53, 0, 0, "-", "parquet_to_sqlite"], [54, 0, 0, "-", "random"], [55, 0, 0, "-", "sqlite_utilities"], [56, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.random": [[54, 4, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[55, 4, 1, "", "attach_index"], [55, 4, 1, "", "create_table"], [55, 4, 1, "", "create_table_and_save_to_sql"], [55, 4, 1, "", "database_exists"], [55, 4, 1, "", "database_table_exists"], [55, 4, 1, "", "get_primary_keys"], [55, 4, 1, "", "query_database"], [55, 4, 1, "", "run_sql_code"], [55, 4, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[56, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[56, 3, 1, "", "resolve"]], "graphnet.data.writers": [[58, 0, 0, "-", "graphnet_writer"], [59, 0, 0, "-", "parquet_writer"], [60, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[58, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[58, 5, 1, "", "expects_merged_dataframes"], [58, 5, 1, "", "file_extension"], [58, 3, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[59, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[59, 3, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[60, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[60, 3, 1, "", "merge_files"]], "graphnet.deployment": [[62, 0, 0, "-", "deployer"], [63, 0, 0, "-", "deployment_module"]], "graphnet.deployment.deployer": [[62, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[62, 3, 1, "", "run"]], "graphnet.deployment.deployment_module": [[63, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.icecube": [[67, 0, 0, "-", "cleaning_module"], [69, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[67, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.inference_module": [[69, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[71, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[71, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[73, 0, 0, "-", "coarsening"], [74, 0, 0, "-", "components"], [78, 0, 0, "-", "detector"], [83, 0, 0, "-", "gnn"], [91, 0, 0, "-", "graphs"], [100, 0, 0, "-", "model"], [101, 0, 0, "-", "rnn"], [103, 0, 0, "-", "standard_averaged_model"], [104, 0, 0, "-", "standard_model"], [105, 0, 0, "-", "task"], [109, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[73, 1, 1, "", "AttributeCoarsening"], [73, 1, 1, "", "Coarsening"], [73, 1, 1, "", "CustomDOMCoarsening"], [73, 1, 1, "", "DOMAndTimeWindowCoarsening"], [73, 1, 1, "", "DOMCoarsening"], [73, 4, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[73, 3, 1, "", "forward"], [73, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[75, 0, 0, "-", "embedding"], [76, 0, 0, "-", "layers"], [77, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[75, 1, 1, "", "FourierEncoder"], [75, 1, 1, "", "SinusoidalPosEmb"], [75, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[75, 3, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[75, 3, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[75, 3, 1, "", "forward"]], "graphnet.models.components.layers": [[76, 1, 1, "", "Attention_rel"], [76, 1, 1, "", "Block"], [76, 1, 1, "", "Block_rel"], [76, 1, 1, "", "DropPath"], [76, 1, 1, "", "DynEdgeConv"], [76, 1, 1, "", "DynTrans"], [76, 1, 1, "", "EdgeConvTito"], [76, 1, 1, "", "Mlp"]], "graphnet.models.components.layers.Attention_rel": [[76, 3, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[76, 3, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[76, 3, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[76, 3, 1, "", "extra_repr"], [76, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[76, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[76, 3, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[76, 3, 1, "", "forward"], [76, 3, 1, "", "message"], [76, 3, 1, "", "reset_parameters"]], "graphnet.models.components.layers.Mlp": [[76, 3, 1, "", "forward"]], "graphnet.models.components.pool": [[77, 4, 1, "", "group_by"], [77, 4, 1, "", "group_pulses_to_dom"], [77, 4, 1, "", "group_pulses_to_pmt"], [77, 4, 1, "", "min_pool"], [77, 4, 1, "", "min_pool_x"], [77, 4, 1, "", "std_pool"], [77, 4, 1, "", "std_pool_x"], [77, 4, 1, "", "sum_pool"], [77, 4, 1, "", "sum_pool_and_distribute"], [77, 4, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[79, 0, 0, "-", "detector"], [80, 0, 0, "-", "icecube"], [81, 0, 0, "-", "liquido"], [82, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[79, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[79, 3, 1, "", "feature_map"], [79, 3, 1, "", "forward"], [79, 5, 1, "", "geometry_table"], [79, 5, 1, "", "sensor_index_name"], [79, 5, 1, "", "sensor_position_names"], [79, 5, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[80, 1, 1, "", "IceCube86"], [80, 1, 1, "", "IceCubeDeepCore"], [80, 1, 1, "", "IceCubeKaggle"], [80, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[80, 3, 1, "", "feature_map"], [80, 2, 1, "", "geometry_table_path"], [80, 2, 1, "", "sensor_id_column"], [80, 2, 1, "", "string_id_column"], [80, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[80, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[80, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[80, 3, 1, "", "feature_map"], [80, 2, 1, "", "geometry_table_path"], [80, 2, 1, "", "sensor_id_column"], [80, 2, 1, "", "string_id_column"], [80, 2, 1, "", "xyz"]], "graphnet.models.detector.liquido": [[81, 1, 1, "", "LiquidO_v1"]], "graphnet.models.detector.liquido.LiquidO_v1": [[81, 3, 1, "", "feature_map"], [81, 2, 1, "", "geometry_table_path"], [81, 2, 1, "", "sensor_id_column"], [81, 2, 1, "", "string_id_column"], [81, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[82, 1, 1, "", "ORCA150"], [82, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.ORCA150": [[82, 3, 1, "", "feature_map"], [82, 2, 1, "", "geometry_table_path"], [82, 2, 1, "", "sensor_id_column"], [82, 2, 1, "", "string_id_column"], [82, 2, 1, "", "xyz"]], "graphnet.models.gnn": [[84, 0, 0, "-", "RNN_tito"], [85, 0, 0, "-", "convnet"], [86, 0, 0, "-", "dynedge"], [87, 0, 0, "-", "dynedge_jinst"], [88, 0, 0, "-", "dynedge_kaggle_tito"], [89, 0, 0, "-", "gnn"], [90, 0, 0, "-", "icemix"]], "graphnet.models.gnn.RNN_tito": [[84, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[84, 3, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[85, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[85, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[86, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[86, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[87, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[87, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[88, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[88, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[89, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[89, 3, 1, "", "forward"], [89, 5, 1, "", "nb_inputs"], [89, 5, 1, "", "nb_outputs"]], "graphnet.models.gnn.icemix": [[90, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[90, 3, 1, "", "forward"], [90, 3, 1, "", "no_weight_decay"]], "graphnet.models.graphs": [[92, 0, 0, "-", "edges"], [95, 0, 0, "-", "graph_definition"], [96, 0, 0, "-", "graphs"], [97, 0, 0, "-", "nodes"], [99, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[93, 0, 0, "-", "edges"], [94, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[93, 1, 1, "", "EdgeDefinition"], [93, 1, 1, "", "EuclideanEdges"], [93, 1, 1, "", "KNNEdges"], [93, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[93, 3, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[94, 1, 1, "", "MinkowskiKNNEdges"], [94, 4, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[95, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[95, 3, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[96, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[98, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[98, 1, 1, "", "IceMixNodes"], [98, 1, 1, "", "NodeAsDOMTimeSeries"], [98, 1, 1, "", "NodeDefinition"], [98, 1, 1, "", "NodesAsPulses"], [98, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[98, 3, 1, "", "forward"], [98, 5, 1, "", "nb_outputs"], [98, 3, 1, "", "set_number_of_inputs"], [98, 3, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[99, 4, 1, "", "cluster_summarize_with_percentiles"], [99, 4, 1, "", "gather_cluster_sequence"], [99, 4, 1, "", "ice_transparency"], [99, 4, 1, "", "identify_indices"], [99, 4, 1, "", "lex_sort"]], "graphnet.models.model": [[100, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[100, 3, 1, "", "extra_repr"], [100, 3, 1, "", "extra_repr_recursive"], [100, 3, 1, "", "from_config"], [100, 3, 1, "", "load"], [100, 3, 1, "", "load_state_dict"], [100, 3, 1, "", "save"], [100, 3, 1, "", "save_state_dict"], [100, 3, 1, "", "set_verbose_print_recursively"], [100, 2, 1, "", "verbose_print"]], "graphnet.models.rnn": [[102, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[102, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[102, 3, 1, "", "clean_up_data_object"], [102, 3, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[103, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[103, 3, 1, "", "load_state_dict"], [103, 3, 1, "", "on_train_end"], [103, 3, 1, "", "optimizer_step"], [103, 3, 1, "", "training_step"], [103, 3, 1, "", "validation_step"]], "graphnet.models.standard_model": [[104, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[104, 3, 1, "", "compute_loss"], [104, 3, 1, "", "configure_optimizers"], [104, 3, 1, "", "fit"], [104, 3, 1, "", "forward"], [104, 3, 1, "", "inference"], [104, 3, 1, "", "predict"], [104, 3, 1, "", "predict_as_dataframe"], [104, 5, 1, "", "prediction_labels"], [104, 3, 1, "", "shared_step"], [104, 5, 1, "", "target_labels"], [104, 3, 1, "", "train"], [104, 3, 1, "", "training_step"], [104, 3, 1, "", "validation_step"]], "graphnet.models.task": [[106, 0, 0, "-", "classification"], [107, 0, 0, "-", "reconstruction"], [108, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[106, 1, 1, "", "BinaryClassificationTask"], [106, 1, 1, "", "BinaryClassificationTaskLogits"], [106, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[106, 2, 1, "", "default_prediction_labels"], [106, 2, 1, "", "default_target_labels"], [106, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[106, 2, 1, "", "default_prediction_labels"], [106, 2, 1, "", "default_target_labels"], [106, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[107, 1, 1, "", "AzimuthReconstruction"], [107, 1, 1, "", "AzimuthReconstructionWithKappa"], [107, 1, 1, "", "DirectionReconstructionWithKappa"], [107, 1, 1, "", "EnergyReconstruction"], [107, 1, 1, "", "EnergyReconstructionWithPower"], [107, 1, 1, "", "EnergyReconstructionWithUncertainty"], [107, 1, 1, "", "EnergyTCReconstruction"], [107, 1, 1, "", "InelasticityReconstruction"], [107, 1, 1, "", "PositionReconstruction"], [107, 1, 1, "", "TimeReconstruction"], [107, 1, 1, "", "VertexReconstruction"], [107, 1, 1, "", "ZenithReconstruction"], [107, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[107, 2, 1, "", "default_prediction_labels"], [107, 2, 1, "", "default_target_labels"], [107, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[107, 2, 1, "", "default_prediction_labels"], [107, 2, 1, "", "default_target_labels"], [107, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[107, 2, 1, "", "default_prediction_labels"], [107, 2, 1, "", "default_target_labels"], [107, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[107, 2, 1, "", "default_prediction_labels"], [107, 2, 1, "", "default_target_labels"], [107, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[107, 2, 1, "", "default_prediction_labels"], [107, 2, 1, "", "default_target_labels"], [107, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[107, 2, 1, "", "default_prediction_labels"], [107, 2, 1, "", "default_target_labels"], [107, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[107, 2, 1, "", "default_prediction_labels"], [107, 2, 1, "", "default_target_labels"], [107, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[107, 2, 1, "", "default_prediction_labels"], [107, 2, 1, "", "default_target_labels"], [107, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[107, 2, 1, "", "default_prediction_labels"], [107, 2, 1, "", "default_target_labels"], [107, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[107, 2, 1, "", "default_prediction_labels"], [107, 2, 1, "", "default_target_labels"], [107, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[107, 2, 1, "", "default_prediction_labels"], [107, 2, 1, "", "default_target_labels"], [107, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[107, 2, 1, "", "default_prediction_labels"], [107, 2, 1, "", "default_target_labels"], [107, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[107, 2, 1, "", "default_prediction_labels"], [107, 2, 1, "", "default_target_labels"], [107, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[108, 1, 1, "", "IdentityTask"], [108, 1, 1, "", "LearnedTask"], [108, 1, 1, "", "StandardFlowTask"], [108, 1, 1, "", "StandardLearnedTask"], [108, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[108, 5, 1, "", "default_prediction_labels"], [108, 5, 1, "", "default_target_labels"], [108, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[108, 3, 1, "", "compute_loss"], [108, 3, 1, "", "forward"], [108, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[108, 3, 1, "", "compute_loss"], [108, 3, 1, "", "forward"], [108, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[108, 3, 1, "", "compute_loss"], [108, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[108, 5, 1, "", "default_prediction_labels"], [108, 5, 1, "", "default_target_labels"], [108, 3, 1, "", "inference"], [108, 5, 1, "", "nb_inputs"], [108, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[109, 4, 1, "", "array_to_sequence"], [109, 4, 1, "", "calculate_distance_matrix"], [109, 4, 1, "", "calculate_xyzt_homophily"], [109, 4, 1, "", "knn_graph_batch"]], "graphnet.pisa": [[111, 0, 0, "-", "fitting"], [112, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[111, 1, 1, "", "ContourFitter"], [111, 1, 1, "", "WeightFitter"], [111, 4, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[111, 3, 1, "", "fit_1d_contour"], [111, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[111, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[112, 4, 1, "", "plot_1D_contour"], [112, 4, 1, "", "plot_2D_contour"], [112, 4, 1, "", "read_entry"]], "graphnet.training": [[114, 0, 0, "-", "callbacks"], [115, 0, 0, "-", "labels"], [116, 0, 0, "-", "loss_functions"], [117, 0, 0, "-", "utils"], [118, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[114, 1, 1, "", "GraphnetEarlyStopping"], [114, 1, 1, "", "PiecewiseLinearLR"], [114, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[114, 3, 1, "", "on_fit_end"], [114, 3, 1, "", "on_train_epoch_end"], [114, 3, 1, "", "on_validation_end"], [114, 3, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[114, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[114, 3, 1, "", "get_metrics"], [114, 3, 1, "", "init_predict_tqdm"], [114, 3, 1, "", "init_test_tqdm"], [114, 3, 1, "", "init_train_tqdm"], [114, 3, 1, "", "init_validation_tqdm"], [114, 3, 1, "", "on_train_epoch_end"], [114, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[115, 1, 1, "", "Direction"], [115, 1, 1, "", "Label"]], "graphnet.training.labels.Label": [[115, 5, 1, "", "key"]], "graphnet.training.loss_functions": [[116, 1, 1, "", "BinaryCrossEntropyLoss"], [116, 1, 1, "", "CrossEntropyLoss"], [116, 1, 1, "", "EuclideanDistanceLoss"], [116, 1, 1, "", "LogCMK"], [116, 1, 1, "", "LogCoshLoss"], [116, 1, 1, "", "LossFunction"], [116, 1, 1, "", "MSELoss"], [116, 1, 1, "", "RMSELoss"], [116, 1, 1, "", "VonMisesFisher2DLoss"], [116, 1, 1, "", "VonMisesFisher3DLoss"], [116, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[116, 3, 1, "", "backward"], [116, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[116, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[116, 3, 1, "", "log_cmk"], [116, 3, 1, "", "log_cmk_approx"], [116, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[117, 4, 1, "", "collate_fn"], [117, 1, 1, "", "collator_sequence_buckleting"], [117, 4, 1, "", "get_predictions"], [117, 4, 1, "", "make_dataloader"], [117, 4, 1, "", "make_train_validation_dataloader"], [117, 4, 1, "", "save_results"], [117, 4, 1, "", "save_selection"]], "graphnet.training.weight_fitting": [[118, 1, 1, "", "BjoernLow"], [118, 1, 1, "", "Uniform"], [118, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[118, 3, 1, "", "fit"]], "graphnet.utilities": [[120, 0, 0, "-", "argparse"], [121, 0, 0, "-", "config"], [128, 0, 0, "-", "decorators"], [129, 0, 0, "-", "deprecation_tools"], [130, 0, 0, "-", "filesys"], [131, 0, 0, "-", "imports"], [132, 0, 0, "-", "logging"], [133, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[120, 1, 1, "", "ArgumentParser"], [120, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[120, 2, 1, "", "standard_arguments"], [120, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[120, 3, 1, "", "contains"], [120, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[122, 0, 0, "-", "base_config"], [123, 0, 0, "-", "configurable"], [124, 0, 0, "-", "dataset_config"], [125, 0, 0, "-", "model_config"], [126, 0, 0, "-", "parsing"], [127, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[122, 1, 1, "", "BaseConfig"], [122, 4, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[122, 3, 1, "", "as_dict"], [122, 3, 1, "", "dump"], [122, 3, 1, "", "load"], [122, 2, 1, "", "model_computed_fields"], [122, 2, 1, "", "model_config"], [122, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[123, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[123, 5, 1, "", "config"], [123, 3, 1, "", "from_config"], [123, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[124, 1, 1, "", "DatasetConfig"], [124, 1, 1, "", "DatasetConfigSaverABCMeta"], [124, 1, 1, "", "DatasetConfigSaverMeta"], [124, 4, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[124, 3, 1, "", "as_dict"], [124, 2, 1, "", "features"], [124, 2, 1, "", "graph_definition"], [124, 2, 1, "", "index_column"], [124, 2, 1, "", "labels"], [124, 2, 1, "", "loss_weight_column"], [124, 2, 1, "", "loss_weight_default_value"], [124, 2, 1, "", "loss_weight_table"], [124, 2, 1, "", "model_computed_fields"], [124, 2, 1, "", "model_config"], [124, 2, 1, "", "model_fields"], [124, 2, 1, "", "node_truth"], [124, 2, 1, "", "node_truth_table"], [124, 2, 1, "", "path"], [124, 2, 1, "", "pulsemaps"], [124, 2, 1, "", "seed"], [124, 2, 1, "", "selection"], [124, 2, 1, "", "string_selection"], [124, 2, 1, "", "truth"], [124, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[125, 1, 1, "", "ModelConfig"], [125, 1, 1, "", "ModelConfigSaverABC"], [125, 1, 1, "", "ModelConfigSaverMeta"], [125, 4, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[125, 2, 1, "", "arguments"], [125, 3, 1, "", "as_dict"], [125, 2, 1, "", "class_name"], [125, 2, 1, "", "model_computed_fields"], [125, 2, 1, "", "model_config"], [125, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[126, 4, 1, "", "get_all_grapnet_classes"], [126, 4, 1, "", "get_graphnet_classes"], [126, 4, 1, "", "is_graphnet_class"], [126, 4, 1, "", "is_graphnet_module"], [126, 4, 1, "", "list_all_submodules"], [126, 4, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[127, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[127, 2, 1, "", "dataloader"], [127, 2, 1, "", "early_stopping_patience"], [127, 2, 1, "", "fit"], [127, 2, 1, "", "model_computed_fields"], [127, 2, 1, "", "model_config"], [127, 2, 1, "", "model_fields"], [127, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[129, 4, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[130, 4, 1, "", "find_i3_files"], [130, 4, 1, "", "has_extension"], [130, 4, 1, "", "is_gcd_file"], [130, 4, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[131, 4, 1, "", "has_icecube_package"], [131, 4, 1, "", "has_pisa_package"], [131, 4, 1, "", "has_torch_package"], [131, 4, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[132, 1, 1, "", "Logger"], [132, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[132, 3, 1, "", "critical"], [132, 3, 1, "", "debug"], [132, 3, 1, "", "error"], [132, 5, 1, "", "file_handlers"], [132, 5, 1, "", "handlers"], [132, 3, 1, "", "info"], [132, 3, 1, "", "setLevel"], [132, 5, 1, "", "stream_handlers"], [132, 3, 1, "", "warning"], [132, 3, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[132, 3, 1, "", "filter"], [132, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[133, 4, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 136], "impact": [0, 136], "usag": [0, 136], "acknowledg": [0, 136], "api": 1, "constant": [2, 4], "data": 3, "dataclass": 5, "dataconvert": [6, 44], "dataload": 7, "datamodul": 8, "dataset": [9, 10], "parquet": [11, 40], "parquet_dataset": 12, "sqlite": [13, 50], "sqlite_dataset": 14, "extractor": [15, 17], "combine_extractor": 16, "icecub": [18, 66, 80], "i3extractor": 19, "i3featureextractor": 20, "i3genericextractor": 21, "i3hybridrecoextractor": 22, "i3ntmuonlabelsextractor": 23, "i3particleextractor": 24, "i3pisaextractor": 25, "i3quesoextractor": 26, "i3retroextractor": 27, "i3splinempeextractor": 28, "i3truthextractor": 29, "i3tumextractor": 30, "util": [31, 52, 99, 109, 117, 119], "collect": 32, "frame": 33, "i3_filt": 34, "type": 35, "intern": 36, "parquet_extractor": 37, "liquido": [38, 81], "h5_extractor": 39, "deprecated_method": [41, 51, 65], "pipelin": 42, "pre_configur": 43, "reader": 45, "graphnet_file_read": 46, "i3read": 47, "internal_parquet_read": 48, "liquido_read": 49, "parquet_to_sqlit": 53, "random": 54, "sqlite_util": 55, "string_selection_resolv": 56, "writer": 57, "graphnet_writ": 58, "parquet_writ": 59, "sqlite_writ": 60, "deploy": [61, 62], "deployment_modul": 63, "i3modul": 64, "cleaning_modul": 67, "i3deploy": 68, "inference_modul": 69, "except": [70, 71], "model": [72, 100], "coarsen": 73, "compon": 74, "embed": 75, "layer": 76, "pool": 77, "detector": [78, 79], "prometheu": 82, "gnn": [83, 89], "rnn_tito": 84, "convnet": 85, "dynedg": 86, "dynedge_jinst": 87, "dynedge_kaggle_tito": 88, "icemix": 90, "graph": [91, 96], "edg": [92, 93], "minkowski": 94, "graph_definit": 95, "node": [97, 98], "rnn": 101, "node_rnn": 102, "standard_averaged_model": 103, "standard_model": 104, "task": [105, 108], "classif": 106, "reconstruct": 107, "pisa": 110, "fit": 111, "plot": 112, "train": 113, "callback": 114, "label": 115, "loss_funct": 116, "weight_fit": 118, "argpars": 120, "config": 121, "base_config": 122, "configur": 123, "dataset_config": 124, "model_config": 125, "pars": 126, "training_config": 127, "decor": 128, "deprecation_tool": 129, "filesi": 130, "import": 131, "log": 132, "math": 133, "src": 134, "contribut": 135, "github": 135, "issu": 135, "pull": 135, "request": 135, "convent": 135, "code": 135, "qualiti": 135, "instal": 137, "icetrai": 137, "stand": 137, "alon": 137, "run": 137, "docker": 137}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"], [136, "about"]], "Impact": [[0, "impact"], [136, "impact"]], "Usage": [[0, "usage"], [136, "usage"]], "Acknowledgements": [[0, "acknowledgements"], [136, "acknowledgements"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "dataclasses": [[5, "module-graphnet.data.dataclasses"]], "dataconverter": [[6, "module-graphnet.data.dataconverter"]], "dataloader": [[7, "module-graphnet.data.dataloader"]], "datamodule": [[8, "module-graphnet.data.datamodule"]], "dataset": [[9, "module-graphnet.data.dataset"], [10, "module-graphnet.data.dataset.dataset"]], "parquet": [[11, "module-graphnet.data.dataset.parquet"], [40, "module-graphnet.data.parquet"]], "parquet_dataset": [[12, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "sqlite": [[13, "module-graphnet.data.dataset.sqlite"], [50, "module-graphnet.data.sqlite"]], "sqlite_dataset": [[14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "extractors": [[15, "module-graphnet.data.extractors"]], "combine_extractors": [[16, "module-graphnet.data.extractors.combine_extractors"]], "extractor": [[17, "module-graphnet.data.extractors.extractor"]], "icecube": [[18, "module-graphnet.data.extractors.icecube"], [66, "icecube"], [80, "module-graphnet.models.detector.icecube"]], "i3extractor": [[19, "module-graphnet.data.extractors.icecube.i3extractor"]], "i3featureextractor": [[20, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor": [[21, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3hybridrecoextractor": [[22, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3ntmuonlabelsextractor": [[23, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor": [[24, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor": [[25, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor": [[26, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3retroextractor": [[27, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeextractor": [[28, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor": [[29, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor": [[30, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "utilities": [[31, "module-graphnet.data.extractors.icecube.utilities"], [52, "module-graphnet.data.utilities"], [119, "module-graphnet.utilities"]], "collections": [[32, "module-graphnet.data.extractors.icecube.utilities.collections"]], "frames": [[33, "module-graphnet.data.extractors.icecube.utilities.frames"]], "i3_filters": [[34, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "types": [[35, "module-graphnet.data.extractors.icecube.utilities.types"]], "internal": [[36, "module-graphnet.data.extractors.internal"]], "parquet_extractor": [[37, "module-graphnet.data.extractors.internal.parquet_extractor"]], "liquido": [[38, "module-graphnet.data.extractors.liquido"], [81, "module-graphnet.models.detector.liquido"]], "h5_extractor": [[39, "module-graphnet.data.extractors.liquido.h5_extractor"]], "deprecated_methods": [[41, "module-graphnet.data.parquet.deprecated_methods"], [51, "module-graphnet.data.sqlite.deprecated_methods"], [65, "deprecated-methods"]], "pipeline": [[42, "module-graphnet.data.pipeline"]], "pre_configured": [[43, "module-graphnet.data.pre_configured"]], "dataconverters": [[44, "module-graphnet.data.pre_configured.dataconverters"]], "readers": [[45, "module-graphnet.data.readers"]], "graphnet_file_reader": [[46, "module-graphnet.data.readers.graphnet_file_reader"]], "i3reader": [[47, "module-graphnet.data.readers.i3reader"]], "internal_parquet_reader": [[48, "module-graphnet.data.readers.internal_parquet_reader"]], "liquido_reader": [[49, "module-graphnet.data.readers.liquido_reader"]], "parquet_to_sqlite": [[53, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[54, "module-graphnet.data.utilities.random"]], "sqlite_utilities": [[55, "module-graphnet.data.utilities.sqlite_utilities"]], "string_selection_resolver": [[56, "module-graphnet.data.utilities.string_selection_resolver"]], "writers": [[57, "module-graphnet.data.writers"]], "graphnet_writer": [[58, "module-graphnet.data.writers.graphnet_writer"]], "parquet_writer": [[59, "module-graphnet.data.writers.parquet_writer"]], "sqlite_writer": [[60, "module-graphnet.data.writers.sqlite_writer"]], "deployment": [[61, "module-graphnet.deployment"]], "deployer": [[62, "module-graphnet.deployment.deployer"]], "deployment_module": [[63, "module-graphnet.deployment.deployment_module"]], "i3modules": [[64, "i3modules"]], "cleaning_module": [[67, "module-graphnet.deployment.icecube.cleaning_module"]], "i3deployer": [[68, "i3deployer"]], "inference_module": [[69, "module-graphnet.deployment.icecube.inference_module"]], "exceptions": [[70, "module-graphnet.exceptions"], [71, "module-graphnet.exceptions.exceptions"]], "models": [[72, "module-graphnet.models"]], "coarsening": [[73, "module-graphnet.models.coarsening"]], "components": [[74, "module-graphnet.models.components"]], "embedding": [[75, "module-graphnet.models.components.embedding"]], "layers": [[76, "module-graphnet.models.components.layers"]], "pool": [[77, "module-graphnet.models.components.pool"]], "detector": [[78, "module-graphnet.models.detector"], [79, "module-graphnet.models.detector.detector"]], "prometheus": [[82, "module-graphnet.models.detector.prometheus"]], "gnn": [[83, "module-graphnet.models.gnn"], [89, "module-graphnet.models.gnn.gnn"]], "RNN_tito": [[84, "module-graphnet.models.gnn.RNN_tito"]], "convnet": [[85, "module-graphnet.models.gnn.convnet"]], "dynedge": [[86, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[87, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedge_kaggle_tito": [[88, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "icemix": [[90, "module-graphnet.models.gnn.icemix"]], "graphs": [[91, "module-graphnet.models.graphs"], [96, "module-graphnet.models.graphs.graphs"]], "edges": [[92, "module-graphnet.models.graphs.edges"], [93, "module-graphnet.models.graphs.edges.edges"]], "minkowski": [[94, "module-graphnet.models.graphs.edges.minkowski"]], "graph_definition": [[95, "module-graphnet.models.graphs.graph_definition"]], "nodes": [[97, "module-graphnet.models.graphs.nodes"], [98, "module-graphnet.models.graphs.nodes.nodes"]], "utils": [[99, "module-graphnet.models.graphs.utils"], [109, "module-graphnet.models.utils"], [117, "module-graphnet.training.utils"]], "model": [[100, "module-graphnet.models.model"]], "rnn": [[101, "module-graphnet.models.rnn"]], "node_rnn": [[102, "module-graphnet.models.rnn.node_rnn"]], "standard_averaged_model": [[103, "module-graphnet.models.standard_averaged_model"]], "standard_model": [[104, "module-graphnet.models.standard_model"]], "task": [[105, "module-graphnet.models.task"], [108, "module-graphnet.models.task.task"]], "classification": [[106, "module-graphnet.models.task.classification"]], "reconstruction": [[107, "module-graphnet.models.task.reconstruction"]], "pisa": [[110, "module-graphnet.pisa"]], "fitting": [[111, "module-graphnet.pisa.fitting"]], "plotting": [[112, "module-graphnet.pisa.plotting"]], "training": [[113, "module-graphnet.training"]], "callbacks": [[114, "module-graphnet.training.callbacks"]], "labels": [[115, "module-graphnet.training.labels"]], "loss_functions": [[116, "module-graphnet.training.loss_functions"]], "weight_fitting": [[118, "module-graphnet.training.weight_fitting"]], "argparse": [[120, "module-graphnet.utilities.argparse"]], "config": [[121, "module-graphnet.utilities.config"]], "base_config": [[122, "module-graphnet.utilities.config.base_config"]], "configurable": [[123, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[124, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[125, "module-graphnet.utilities.config.model_config"]], "parsing": [[126, "module-graphnet.utilities.config.parsing"]], "training_config": [[127, "module-graphnet.utilities.config.training_config"]], "decorators": [[128, "module-graphnet.utilities.decorators"]], "deprecation_tools": [[129, "module-graphnet.utilities.deprecation_tools"]], "filesys": [[130, "module-graphnet.utilities.filesys"]], "imports": [[131, "module-graphnet.utilities.imports"]], "logging": [[132, "module-graphnet.utilities.logging"]], "maths": [[133, "module-graphnet.utilities.maths"]], "src": [[134, "src"]], "Contribute": [[135, "contribute"]], "GitHub issues": [[135, "github-issues"]], "Pull requests": [[135, "pull-requests"]], "Conventions": [[135, "conventions"]], "Code quality": [[135, "code-quality"]], "Install": [[137, "install"]], "Installing with IceTray": [[137, "installing-with-icetray"]], "Installing stand-alone": [[137, "installing-stand-alone"]], "Running in Docker": [[137, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.dataclasses"], [6, "module-graphnet.data.dataconverter"], [7, "module-graphnet.data.dataloader"], [8, "module-graphnet.data.datamodule"], [9, "module-graphnet.data.dataset"], [10, "module-graphnet.data.dataset.dataset"], [11, "module-graphnet.data.dataset.parquet"], [12, "module-graphnet.data.dataset.parquet.parquet_dataset"], [13, "module-graphnet.data.dataset.sqlite"], [14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"], [15, "module-graphnet.data.extractors"], [16, "module-graphnet.data.extractors.combine_extractors"], [17, "module-graphnet.data.extractors.extractor"], [18, "module-graphnet.data.extractors.icecube"], [19, "module-graphnet.data.extractors.icecube.i3extractor"], [20, "module-graphnet.data.extractors.icecube.i3featureextractor"], [21, "module-graphnet.data.extractors.icecube.i3genericextractor"], [22, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"], [23, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"], [24, "module-graphnet.data.extractors.icecube.i3particleextractor"], [25, "module-graphnet.data.extractors.icecube.i3pisaextractor"], [26, "module-graphnet.data.extractors.icecube.i3quesoextractor"], [27, "module-graphnet.data.extractors.icecube.i3retroextractor"], [28, "module-graphnet.data.extractors.icecube.i3splinempeextractor"], [29, "module-graphnet.data.extractors.icecube.i3truthextractor"], [30, "module-graphnet.data.extractors.icecube.i3tumextractor"], [31, "module-graphnet.data.extractors.icecube.utilities"], [32, "module-graphnet.data.extractors.icecube.utilities.collections"], [33, "module-graphnet.data.extractors.icecube.utilities.frames"], [34, "module-graphnet.data.extractors.icecube.utilities.i3_filters"], [35, "module-graphnet.data.extractors.icecube.utilities.types"], [36, "module-graphnet.data.extractors.internal"], [37, "module-graphnet.data.extractors.internal.parquet_extractor"], [38, "module-graphnet.data.extractors.liquido"], [39, "module-graphnet.data.extractors.liquido.h5_extractor"], [40, "module-graphnet.data.parquet"], [41, "module-graphnet.data.parquet.deprecated_methods"], [42, "module-graphnet.data.pipeline"], [43, "module-graphnet.data.pre_configured"], [44, "module-graphnet.data.pre_configured.dataconverters"], [45, "module-graphnet.data.readers"], [46, "module-graphnet.data.readers.graphnet_file_reader"], [47, "module-graphnet.data.readers.i3reader"], [48, "module-graphnet.data.readers.internal_parquet_reader"], [49, "module-graphnet.data.readers.liquido_reader"], [50, "module-graphnet.data.sqlite"], [51, "module-graphnet.data.sqlite.deprecated_methods"], [52, "module-graphnet.data.utilities"], [53, "module-graphnet.data.utilities.parquet_to_sqlite"], [54, "module-graphnet.data.utilities.random"], [55, "module-graphnet.data.utilities.sqlite_utilities"], [56, "module-graphnet.data.utilities.string_selection_resolver"], [57, "module-graphnet.data.writers"], [58, "module-graphnet.data.writers.graphnet_writer"], [59, "module-graphnet.data.writers.parquet_writer"], [60, "module-graphnet.data.writers.sqlite_writer"], [61, "module-graphnet.deployment"], [62, "module-graphnet.deployment.deployer"], [63, "module-graphnet.deployment.deployment_module"], [67, "module-graphnet.deployment.icecube.cleaning_module"], [69, "module-graphnet.deployment.icecube.inference_module"], [70, "module-graphnet.exceptions"], [71, "module-graphnet.exceptions.exceptions"], [72, "module-graphnet.models"], [73, "module-graphnet.models.coarsening"], [74, "module-graphnet.models.components"], [75, "module-graphnet.models.components.embedding"], [76, "module-graphnet.models.components.layers"], [77, "module-graphnet.models.components.pool"], [78, "module-graphnet.models.detector"], [79, "module-graphnet.models.detector.detector"], [80, "module-graphnet.models.detector.icecube"], [81, "module-graphnet.models.detector.liquido"], [82, "module-graphnet.models.detector.prometheus"], [83, "module-graphnet.models.gnn"], [84, "module-graphnet.models.gnn.RNN_tito"], [85, "module-graphnet.models.gnn.convnet"], [86, "module-graphnet.models.gnn.dynedge"], [87, "module-graphnet.models.gnn.dynedge_jinst"], [88, "module-graphnet.models.gnn.dynedge_kaggle_tito"], [89, "module-graphnet.models.gnn.gnn"], [90, "module-graphnet.models.gnn.icemix"], [91, "module-graphnet.models.graphs"], [92, "module-graphnet.models.graphs.edges"], [93, "module-graphnet.models.graphs.edges.edges"], [94, "module-graphnet.models.graphs.edges.minkowski"], [95, "module-graphnet.models.graphs.graph_definition"], [96, "module-graphnet.models.graphs.graphs"], [97, "module-graphnet.models.graphs.nodes"], [98, "module-graphnet.models.graphs.nodes.nodes"], [99, "module-graphnet.models.graphs.utils"], [100, "module-graphnet.models.model"], [101, "module-graphnet.models.rnn"], [102, "module-graphnet.models.rnn.node_rnn"], [103, "module-graphnet.models.standard_averaged_model"], [104, "module-graphnet.models.standard_model"], [105, "module-graphnet.models.task"], [106, "module-graphnet.models.task.classification"], [107, "module-graphnet.models.task.reconstruction"], [108, "module-graphnet.models.task.task"], [109, "module-graphnet.models.utils"], [110, "module-graphnet.pisa"], [111, "module-graphnet.pisa.fitting"], [112, "module-graphnet.pisa.plotting"], [113, "module-graphnet.training"], [114, "module-graphnet.training.callbacks"], [115, "module-graphnet.training.labels"], [116, "module-graphnet.training.loss_functions"], [117, "module-graphnet.training.utils"], [118, "module-graphnet.training.weight_fitting"], [119, "module-graphnet.utilities"], [120, "module-graphnet.utilities.argparse"], [121, "module-graphnet.utilities.config"], [122, "module-graphnet.utilities.config.base_config"], [123, "module-graphnet.utilities.config.configurable"], [124, "module-graphnet.utilities.config.dataset_config"], [125, "module-graphnet.utilities.config.model_config"], [126, "module-graphnet.utilities.config.parsing"], [127, "module-graphnet.utilities.config.training_config"], [128, "module-graphnet.utilities.decorators"], [129, "module-graphnet.utilities.deprecation_tools"], [130, "module-graphnet.utilities.filesys"], [131, "module-graphnet.utilities.imports"], [132, "module-graphnet.utilities.logging"], [133, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "liquido (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.LIQUIDO"]], "liquido (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.LIQUIDO"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "i3fileset (class in graphnet.data.dataclasses)": [[5, "graphnet.data.dataclasses.I3FileSet"]], "settings (class in graphnet.data.dataclasses)": [[5, "graphnet.data.dataclasses.Settings"]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[5, "graphnet.data.dataclasses.I3FileSet.gcd_file"]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.gcd_file"]], "graphnet.data.dataclasses": [[5, "module-graphnet.data.dataclasses"]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[5, "graphnet.data.dataclasses.I3FileSet.i3_file"]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.i3_files"]], "modules (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.modules"]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.output_folder"]], "dataconverter (class in graphnet.data.dataconverter)": [[6, "graphnet.data.dataconverter.DataConverter"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[6, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[6, "module-graphnet.data.dataconverter"]], "init_global_index() (in module graphnet.data.dataconverter)": [[6, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[6, "graphnet.data.dataconverter.DataConverter.merge_files"]], "dataloader (class in graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.DataLoader"]], "collate_fn() (in module graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.collate_fn"]], "do_shuffle() (in module graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.do_shuffle"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[7, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "graphnet.data.dataloader": [[7, "module-graphnet.data.dataloader"]], "graphnetdatamodule (class in graphnet.data.datamodule)": [[8, "graphnet.data.datamodule.GraphNeTDataModule"]], "graphnet.data.datamodule": [[8, "module-graphnet.data.datamodule"]], "prepare_data() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.prepare_data"]], "setup() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.setup"]], "teardown() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.teardown"]], "test_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.test_dataloader"]], "train_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.train_dataloader"]], "val_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.val_dataloader"]], "graphnet.data.dataset": [[9, "module-graphnet.data.dataset"]], "dataset (class in graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.Dataset"]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.EnsembleDataset"]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[10, "graphnet.data.dataset.dataset.Dataset.add_label"]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[10, "graphnet.data.dataset.dataset.Dataset.concatenate"]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[10, "graphnet.data.dataset.dataset.Dataset.from_config"]], "graphnet.data.dataset.dataset": [[10, "module-graphnet.data.dataset.dataset"]], "load_module() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.load_module"]], "parse_graph_definition() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.parse_graph_definition"]], "parse_labels() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.parse_labels"]], "path (graphnet.data.dataset.dataset.dataset property)": [[10, "graphnet.data.dataset.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[10, "graphnet.data.dataset.dataset.Dataset.query_table"]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[10, "graphnet.data.dataset.dataset.Dataset.truth_table"]], "graphnet.data.dataset.parquet": [[11, "module-graphnet.data.dataset.parquet"]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[12, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[12, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[12, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table"]], "graphnet.data.dataset.sqlite": [[13, "module-graphnet.data.dataset.sqlite"]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[14, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[14, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "graphnet.data.extractors": [[15, "module-graphnet.data.extractors"]], "combinedextractor (class in graphnet.data.extractors.combine_extractors)": [[16, "graphnet.data.extractors.combine_extractors.CombinedExtractor"]], "graphnet.data.extractors.combine_extractors": [[16, "module-graphnet.data.extractors.combine_extractors"]], "extractor (class in graphnet.data.extractors.extractor)": [[17, "graphnet.data.extractors.extractor.Extractor"]], "graphnet.data.extractors.extractor": [[17, "module-graphnet.data.extractors.extractor"]], "name (graphnet.data.extractors.extractor.extractor property)": [[17, "graphnet.data.extractors.extractor.Extractor.name"]], "graphnet.data.extractors.icecube": [[18, "module-graphnet.data.extractors.icecube"]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[19, "graphnet.data.extractors.icecube.i3extractor.I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor": [[19, "module-graphnet.data.extractors.icecube.i3extractor"]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[19, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd"]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3featureextractor": [[20, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[21, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3genericextractor": [[21, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[22, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[22, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[23, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[23, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[24, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[24, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[25, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[25, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[26, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[26, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[27, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[27, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[28, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[28, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[29, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[29, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[30, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[30, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "graphnet.data.extractors.icecube.utilities": [[31, "module-graphnet.data.extractors.icecube.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[32, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.icecube.utilities.collections": [[32, "module-graphnet.data.extractors.icecube.utilities.collections"]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[32, "graphnet.data.extractors.icecube.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[32, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[33, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[33, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[33, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.frames": [[33, "module-graphnet.data.extractors.icecube.utilities.frames"]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[34, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter"]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[34, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask"]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[34, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[34, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.get_member_variables"]], "graphnet.data.extractors.icecube.utilities.types": [[35, "module-graphnet.data.extractors.icecube.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_type"]], "graphnet.data.extractors.internal": [[36, "module-graphnet.data.extractors.internal"]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[37, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[37, "module-graphnet.data.extractors.internal.parquet_extractor"]], "graphnet.data.extractors.liquido": [[38, "module-graphnet.data.extractors.liquido"]], "h5extractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[39, "graphnet.data.extractors.liquido.h5_extractor.H5Extractor"]], "h5hitextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[39, "graphnet.data.extractors.liquido.h5_extractor.H5HitExtractor"]], "h5truthextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[39, "graphnet.data.extractors.liquido.h5_extractor.H5TruthExtractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[39, "module-graphnet.data.extractors.liquido.h5_extractor"]], "graphnet.data.parquet": [[40, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.deprecated_methods)": [[41, "graphnet.data.parquet.deprecated_methods.ParquetDataConverter"]], "graphnet.data.parquet.deprecated_methods": [[41, "module-graphnet.data.parquet.deprecated_methods"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[42, "graphnet.data.pipeline.InSQLitePipeline"]], "graphnet.data.pipeline": [[42, "module-graphnet.data.pipeline"]], "graphnet.data.pre_configured": [[43, "module-graphnet.data.pre_configured"]], "i3toparquetconverter (class in graphnet.data.pre_configured.dataconverters)": [[44, "graphnet.data.pre_configured.dataconverters.I3ToParquetConverter"]], "i3tosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[44, "graphnet.data.pre_configured.dataconverters.I3ToSQLiteConverter"]], "parquettosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[44, "graphnet.data.pre_configured.dataconverters.ParquetToSQLiteConverter"]], "graphnet.data.pre_configured.dataconverters": [[44, "module-graphnet.data.pre_configured.dataconverters"]], "graphnet.data.readers": [[45, "module-graphnet.data.readers"]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[46, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader"]], "accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[46, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors"]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[46, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions"]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[46, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names"]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[46, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files"]], "graphnet.data.readers.graphnet_file_reader": [[46, "module-graphnet.data.readers.graphnet_file_reader"]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[46, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors"]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[46, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files"]], "i3reader (class in graphnet.data.readers.i3reader)": [[47, "graphnet.data.readers.i3reader.I3Reader"]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[47, "graphnet.data.readers.i3reader.I3Reader.find_files"]], "graphnet.data.readers.i3reader": [[47, "module-graphnet.data.readers.i3reader"]], "parquetreader (class in graphnet.data.readers.internal_parquet_reader)": [[48, "graphnet.data.readers.internal_parquet_reader.ParquetReader"]], "find_files() (graphnet.data.readers.internal_parquet_reader.parquetreader method)": [[48, "graphnet.data.readers.internal_parquet_reader.ParquetReader.find_files"]], "graphnet.data.readers.internal_parquet_reader": [[48, "module-graphnet.data.readers.internal_parquet_reader"]], "liquidoreader (class in graphnet.data.readers.liquido_reader)": [[49, "graphnet.data.readers.liquido_reader.LiquidOReader"]], "find_files() (graphnet.data.readers.liquido_reader.liquidoreader method)": [[49, "graphnet.data.readers.liquido_reader.LiquidOReader.find_files"]], "graphnet.data.readers.liquido_reader": [[49, "module-graphnet.data.readers.liquido_reader"]], "graphnet.data.sqlite": [[50, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.deprecated_methods)": [[51, "graphnet.data.sqlite.deprecated_methods.SQLiteDataConverter"]], "graphnet.data.sqlite.deprecated_methods": [[51, "module-graphnet.data.sqlite.deprecated_methods"]], "graphnet.data.utilities": [[52, "module-graphnet.data.utilities"]], "graphnet.data.utilities.parquet_to_sqlite": [[53, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random": [[54, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[54, "graphnet.data.utilities.random.pairwise_shuffle"]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[55, "graphnet.data.utilities.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[55, "graphnet.data.utilities.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[55, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[55, "graphnet.data.utilities.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[55, "graphnet.data.utilities.sqlite_utilities.database_table_exists"]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[55, "graphnet.data.utilities.sqlite_utilities.get_primary_keys"]], "graphnet.data.utilities.sqlite_utilities": [[55, "module-graphnet.data.utilities.sqlite_utilities"]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[55, "graphnet.data.utilities.sqlite_utilities.query_database"]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[55, "graphnet.data.utilities.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[55, "graphnet.data.utilities.sqlite_utilities.save_to_sql"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[56, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[56, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[56, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.data.writers": [[57, "module-graphnet.data.writers"]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[58, "graphnet.data.writers.graphnet_writer.GraphNeTWriter"]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[58, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes"]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[58, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension"]], "graphnet.data.writers.graphnet_writer": [[58, "module-graphnet.data.writers.graphnet_writer"]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[58, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files"]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[59, "graphnet.data.writers.parquet_writer.ParquetWriter"]], "graphnet.data.writers.parquet_writer": [[59, "module-graphnet.data.writers.parquet_writer"]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[59, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files"]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[60, "graphnet.data.writers.sqlite_writer.SQLiteWriter"]], "graphnet.data.writers.sqlite_writer": [[60, "module-graphnet.data.writers.sqlite_writer"]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[60, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files"]], "graphnet.deployment": [[61, "module-graphnet.deployment"]], "deployer (class in graphnet.deployment.deployer)": [[62, "graphnet.deployment.deployer.Deployer"]], "graphnet.deployment.deployer": [[62, "module-graphnet.deployment.deployer"]], "run() (graphnet.deployment.deployer.deployer method)": [[62, "graphnet.deployment.deployer.Deployer.run"]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[63, "graphnet.deployment.deployment_module.DeploymentModule"]], "graphnet.deployment.deployment_module": [[63, "module-graphnet.deployment.deployment_module"]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[67, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule"]], "graphnet.deployment.icecube.cleaning_module": [[67, "module-graphnet.deployment.icecube.cleaning_module"]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[69, "graphnet.deployment.icecube.inference_module.I3InferenceModule"]], "graphnet.deployment.icecube.inference_module": [[69, "module-graphnet.deployment.icecube.inference_module"]], "graphnet.exceptions": [[70, "module-graphnet.exceptions"]], "columnmissingexception": [[71, "graphnet.exceptions.exceptions.ColumnMissingException"]], "graphnet.exceptions.exceptions": [[71, "module-graphnet.exceptions.exceptions"]], "graphnet.models": [[72, "module-graphnet.models"]], "attributecoarsening (class in graphnet.models.coarsening)": [[73, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[73, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[73, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[73, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[73, "graphnet.models.coarsening.DOMCoarsening"]], "forward() (graphnet.models.coarsening.coarsening method)": [[73, "graphnet.models.coarsening.Coarsening.forward"]], "graphnet.models.coarsening": [[73, "module-graphnet.models.coarsening"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[73, "graphnet.models.coarsening.Coarsening.reduce_options"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[73, "graphnet.models.coarsening.unbatch_edge_index"]], "graphnet.models.components": [[74, "module-graphnet.models.components"]], "fourierencoder (class in graphnet.models.components.embedding)": [[75, "graphnet.models.components.embedding.FourierEncoder"]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[75, "graphnet.models.components.embedding.SinusoidalPosEmb"]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[75, "graphnet.models.components.embedding.SpacetimeEncoder"]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[75, "graphnet.models.components.embedding.FourierEncoder.forward"]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[75, "graphnet.models.components.embedding.SinusoidalPosEmb.forward"]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[75, "graphnet.models.components.embedding.SpacetimeEncoder.forward"]], "graphnet.models.components.embedding": [[75, "module-graphnet.models.components.embedding"]], "attention_rel (class in graphnet.models.components.layers)": [[76, "graphnet.models.components.layers.Attention_rel"]], "block (class in graphnet.models.components.layers)": [[76, "graphnet.models.components.layers.Block"]], "block_rel (class in graphnet.models.components.layers)": [[76, "graphnet.models.components.layers.Block_rel"]], "droppath (class in graphnet.models.components.layers)": [[76, "graphnet.models.components.layers.DropPath"]], "dynedgeconv (class in graphnet.models.components.layers)": [[76, "graphnet.models.components.layers.DynEdgeConv"]], "dyntrans (class in graphnet.models.components.layers)": [[76, "graphnet.models.components.layers.DynTrans"]], "edgeconvtito (class in graphnet.models.components.layers)": [[76, "graphnet.models.components.layers.EdgeConvTito"]], "mlp (class in graphnet.models.components.layers)": [[76, "graphnet.models.components.layers.Mlp"]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[76, "graphnet.models.components.layers.DropPath.extra_repr"]], "forward() (graphnet.models.components.layers.attention_rel method)": [[76, "graphnet.models.components.layers.Attention_rel.forward"]], "forward() (graphnet.models.components.layers.block method)": [[76, "graphnet.models.components.layers.Block.forward"]], "forward() (graphnet.models.components.layers.block_rel method)": [[76, "graphnet.models.components.layers.Block_rel.forward"]], "forward() (graphnet.models.components.layers.droppath method)": [[76, "graphnet.models.components.layers.DropPath.forward"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[76, "graphnet.models.components.layers.DynEdgeConv.forward"]], "forward() (graphnet.models.components.layers.dyntrans method)": [[76, "graphnet.models.components.layers.DynTrans.forward"]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[76, "graphnet.models.components.layers.EdgeConvTito.forward"]], "forward() (graphnet.models.components.layers.mlp method)": [[76, "graphnet.models.components.layers.Mlp.forward"]], "graphnet.models.components.layers": [[76, "module-graphnet.models.components.layers"]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[76, "graphnet.models.components.layers.EdgeConvTito.message"]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[76, "graphnet.models.components.layers.EdgeConvTito.reset_parameters"]], "graphnet.models.components.pool": [[77, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[77, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[77, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[77, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[77, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[77, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[77, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[77, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[77, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[77, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[77, "graphnet.models.components.pool.sum_pool_x"]], "graphnet.models.detector": [[78, "module-graphnet.models.detector"]], "detector (class in graphnet.models.detector.detector)": [[79, "graphnet.models.detector.detector.Detector"]], "feature_map() (graphnet.models.detector.detector.detector method)": [[79, "graphnet.models.detector.detector.Detector.feature_map"]], "forward() (graphnet.models.detector.detector.detector method)": [[79, "graphnet.models.detector.detector.Detector.forward"]], "geometry_table (graphnet.models.detector.detector.detector property)": [[79, "graphnet.models.detector.detector.Detector.geometry_table"]], "graphnet.models.detector.detector": [[79, "module-graphnet.models.detector.detector"]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[79, "graphnet.models.detector.detector.Detector.sensor_index_name"]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[79, "graphnet.models.detector.detector.Detector.sensor_position_names"]], "string_index_name (graphnet.models.detector.detector.detector property)": [[79, "graphnet.models.detector.detector.Detector.string_index_name"]], "icecube86 (class in graphnet.models.detector.icecube)": [[80, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[80, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[80, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[80, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[80, "graphnet.models.detector.icecube.IceCube86.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[80, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[80, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[80, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map"]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[80, "graphnet.models.detector.icecube.IceCube86.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[80, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path"]], "graphnet.models.detector.icecube": [[80, "module-graphnet.models.detector.icecube"]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[80, "graphnet.models.detector.icecube.IceCube86.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[80, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[80, "graphnet.models.detector.icecube.IceCube86.string_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[80, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column"]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[80, "graphnet.models.detector.icecube.IceCube86.xyz"]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[80, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz"]], "liquido_v1 (class in graphnet.models.detector.liquido)": [[81, "graphnet.models.detector.liquido.LiquidO_v1"]], "feature_map() (graphnet.models.detector.liquido.liquido_v1 method)": [[81, "graphnet.models.detector.liquido.LiquidO_v1.feature_map"]], "geometry_table_path (graphnet.models.detector.liquido.liquido_v1 attribute)": [[81, "graphnet.models.detector.liquido.LiquidO_v1.geometry_table_path"]], "graphnet.models.detector.liquido": [[81, "module-graphnet.models.detector.liquido"]], "sensor_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[81, "graphnet.models.detector.liquido.LiquidO_v1.sensor_id_column"]], "string_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[81, "graphnet.models.detector.liquido.LiquidO_v1.string_id_column"]], "xyz (graphnet.models.detector.liquido.liquido_v1 attribute)": [[81, "graphnet.models.detector.liquido.LiquidO_v1.xyz"]], "orca150 (class in graphnet.models.detector.prometheus)": [[82, "graphnet.models.detector.prometheus.ORCA150"]], "prometheus (class in graphnet.models.detector.prometheus)": [[82, "graphnet.models.detector.prometheus.Prometheus"]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[82, "graphnet.models.detector.prometheus.ORCA150.feature_map"]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[82, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path"]], "graphnet.models.detector.prometheus": [[82, "module-graphnet.models.detector.prometheus"]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[82, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column"]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[82, "graphnet.models.detector.prometheus.ORCA150.string_id_column"]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[82, "graphnet.models.detector.prometheus.ORCA150.xyz"]], "graphnet.models.gnn": [[83, "module-graphnet.models.gnn"]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[84, "graphnet.models.gnn.RNN_tito.RNN_TITO"]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[84, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward"]], "graphnet.models.gnn.rnn_tito": [[84, "module-graphnet.models.gnn.RNN_tito"]], "convnet (class in graphnet.models.gnn.convnet)": [[85, "graphnet.models.gnn.convnet.ConvNet"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[85, "graphnet.models.gnn.convnet.ConvNet.forward"]], "graphnet.models.gnn.convnet": [[85, "module-graphnet.models.gnn.convnet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[86, "graphnet.models.gnn.dynedge.DynEdge"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[86, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "graphnet.models.gnn.dynedge": [[86, "module-graphnet.models.gnn.dynedge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[87, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[87, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "graphnet.models.gnn.dynedge_jinst": [[87, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[88, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO"]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[88, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[88, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "gnn (class in graphnet.models.gnn.gnn)": [[89, "graphnet.models.gnn.gnn.GNN"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[89, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn.gnn": [[89, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[89, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[89, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "deepice (class in graphnet.models.gnn.icemix)": [[90, "graphnet.models.gnn.icemix.DeepIce"]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[90, "graphnet.models.gnn.icemix.DeepIce.forward"]], "graphnet.models.gnn.icemix": [[90, "module-graphnet.models.gnn.icemix"]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[90, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay"]], "graphnet.models.graphs": [[91, "module-graphnet.models.graphs"]], "graphnet.models.graphs.edges": [[92, "module-graphnet.models.graphs.edges"]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[93, "graphnet.models.graphs.edges.edges.EdgeDefinition"]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[93, "graphnet.models.graphs.edges.edges.EuclideanEdges"]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[93, "graphnet.models.graphs.edges.edges.KNNEdges"]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[93, "graphnet.models.graphs.edges.edges.RadialEdges"]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[93, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward"]], "graphnet.models.graphs.edges.edges": [[93, "module-graphnet.models.graphs.edges.edges"]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[94, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges"]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[94, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat"]], "graphnet.models.graphs.edges.minkowski": [[94, "module-graphnet.models.graphs.edges.minkowski"]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[95, "graphnet.models.graphs.graph_definition.GraphDefinition"]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[95, "graphnet.models.graphs.graph_definition.GraphDefinition.forward"]], "graphnet.models.graphs.graph_definition": [[95, "module-graphnet.models.graphs.graph_definition"]], "knngraph (class in graphnet.models.graphs.graphs)": [[96, "graphnet.models.graphs.graphs.KNNGraph"]], "graphnet.models.graphs.graphs": [[96, "module-graphnet.models.graphs.graphs"]], "graphnet.models.graphs.nodes": [[97, "module-graphnet.models.graphs.nodes"]], "icemixnodes (class in graphnet.models.graphs.nodes.nodes)": [[98, "graphnet.models.graphs.nodes.nodes.IceMixNodes"]], "nodeasdomtimeseries (class in graphnet.models.graphs.nodes.nodes)": [[98, "graphnet.models.graphs.nodes.nodes.NodeAsDOMTimeSeries"]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[98, "graphnet.models.graphs.nodes.nodes.NodeDefinition"]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[98, "graphnet.models.graphs.nodes.nodes.NodesAsPulses"]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[98, "graphnet.models.graphs.nodes.nodes.PercentileClusters"]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[98, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward"]], "graphnet.models.graphs.nodes.nodes": [[98, "module-graphnet.models.graphs.nodes.nodes"]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[98, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs"]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[98, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs"]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[98, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names"]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[99, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles"]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[99, "graphnet.models.graphs.utils.gather_cluster_sequence"]], "graphnet.models.graphs.utils": [[99, "module-graphnet.models.graphs.utils"]], "ice_transparency() (in module graphnet.models.graphs.utils)": [[99, "graphnet.models.graphs.utils.ice_transparency"]], "identify_indices() (in module graphnet.models.graphs.utils)": [[99, "graphnet.models.graphs.utils.identify_indices"]], "lex_sort() (in module graphnet.models.graphs.utils)": [[99, "graphnet.models.graphs.utils.lex_sort"]], "model (class in graphnet.models.model)": [[100, "graphnet.models.model.Model"]], "extra_repr() (graphnet.models.model.model method)": [[100, "graphnet.models.model.Model.extra_repr"]], "extra_repr_recursive() (graphnet.models.model.model method)": [[100, "graphnet.models.model.Model.extra_repr_recursive"]], "from_config() (graphnet.models.model.model class method)": [[100, "graphnet.models.model.Model.from_config"]], "graphnet.models.model": [[100, "module-graphnet.models.model"]], "load() (graphnet.models.model.model class method)": [[100, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[100, "graphnet.models.model.Model.load_state_dict"]], "save() (graphnet.models.model.model method)": [[100, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[100, "graphnet.models.model.Model.save_state_dict"]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[100, "graphnet.models.model.Model.set_verbose_print_recursively"]], "verbose_print (graphnet.models.model.model attribute)": [[100, "graphnet.models.model.Model.verbose_print"]], "graphnet.models.rnn": [[101, "module-graphnet.models.rnn"]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[102, "graphnet.models.rnn.node_rnn.Node_RNN"]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[102, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object"]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[102, "graphnet.models.rnn.node_rnn.Node_RNN.forward"]], "graphnet.models.rnn.node_rnn": [[102, "module-graphnet.models.rnn.node_rnn"]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[103, "graphnet.models.standard_averaged_model.StandardAveragedModel"]], "graphnet.models.standard_averaged_model": [[103, "module-graphnet.models.standard_averaged_model"]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[103, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict"]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[103, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end"]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[103, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step"]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[103, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step"]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[103, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step"]], "standardmodel (class in graphnet.models.standard_model)": [[104, "graphnet.models.standard_model.StandardModel"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[104, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[104, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "fit() (graphnet.models.standard_model.standardmodel method)": [[104, "graphnet.models.standard_model.StandardModel.fit"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[104, "graphnet.models.standard_model.StandardModel.forward"]], "graphnet.models.standard_model": [[104, "module-graphnet.models.standard_model"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[104, "graphnet.models.standard_model.StandardModel.inference"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[104, "graphnet.models.standard_model.StandardModel.predict"]], "predict_as_dataframe() (graphnet.models.standard_model.standardmodel method)": [[104, "graphnet.models.standard_model.StandardModel.predict_as_dataframe"]], "prediction_labels (graphnet.models.standard_model.standardmodel property)": [[104, "graphnet.models.standard_model.StandardModel.prediction_labels"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[104, "graphnet.models.standard_model.StandardModel.shared_step"]], "target_labels (graphnet.models.standard_model.standardmodel property)": [[104, "graphnet.models.standard_model.StandardModel.target_labels"]], "train() (graphnet.models.standard_model.standardmodel method)": [[104, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[104, "graphnet.models.standard_model.StandardModel.training_step"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[104, "graphnet.models.standard_model.StandardModel.validation_step"]], "graphnet.models.task": [[105, "module-graphnet.models.task"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[106, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[106, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[106, "graphnet.models.task.classification.MulticlassClassificationTask"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[106, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[106, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[106, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[106, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels"]], "graphnet.models.task.classification": [[106, "module-graphnet.models.task.classification"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[106, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[106, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[107, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[107, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[107, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[107, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[107, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[107, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[107, "graphnet.models.task.reconstruction.EnergyTCReconstruction"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[107, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[107, "graphnet.models.task.reconstruction.PositionReconstruction"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[107, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[107, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[107, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[107, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[107, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[107, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[107, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[107, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[107, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[107, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[107, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[107, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[107, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[107, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[107, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[107, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels"]], "graphnet.models.task.reconstruction": [[107, "module-graphnet.models.task.reconstruction"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[107, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[107, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[107, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[107, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[107, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[107, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[107, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "identitytask (class in graphnet.models.task.task)": [[108, "graphnet.models.task.task.IdentityTask"]], "learnedtask (class in graphnet.models.task.task)": [[108, "graphnet.models.task.task.LearnedTask"]], "standardflowtask (class in graphnet.models.task.task)": [[108, "graphnet.models.task.task.StandardFlowTask"]], "standardlearnedtask (class in graphnet.models.task.task)": [[108, "graphnet.models.task.task.StandardLearnedTask"]], "task (class in graphnet.models.task.task)": [[108, "graphnet.models.task.task.Task"]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[108, "graphnet.models.task.task.LearnedTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardflowtask method)": [[108, "graphnet.models.task.task.StandardFlowTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[108, "graphnet.models.task.task.StandardLearnedTask.compute_loss"]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[108, "graphnet.models.task.task.IdentityTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.task.task property)": [[108, "graphnet.models.task.task.Task.default_prediction_labels"]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[108, "graphnet.models.task.task.IdentityTask.default_target_labels"]], "default_target_labels (graphnet.models.task.task.task property)": [[108, "graphnet.models.task.task.Task.default_target_labels"]], "forward() (graphnet.models.task.task.learnedtask method)": [[108, "graphnet.models.task.task.LearnedTask.forward"]], "forward() (graphnet.models.task.task.standardflowtask method)": [[108, "graphnet.models.task.task.StandardFlowTask.forward"]], "graphnet.models.task.task": [[108, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[108, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[108, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[108, "graphnet.models.task.task.LearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[108, "graphnet.models.task.task.StandardLearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[108, "graphnet.models.task.task.Task.nb_inputs"]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[108, "graphnet.models.task.task.StandardFlowTask.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[108, "graphnet.models.task.task.Task.train_eval"]], "array_to_sequence() (in module graphnet.models.utils)": [[109, "graphnet.models.utils.array_to_sequence"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[109, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[109, "graphnet.models.utils.calculate_xyzt_homophily"]], "graphnet.models.utils": [[109, "module-graphnet.models.utils"]], "knn_graph_batch() (in module graphnet.models.utils)": [[109, "graphnet.models.utils.knn_graph_batch"]], "graphnet.pisa": [[110, "module-graphnet.pisa"]], "contourfitter (class in graphnet.pisa.fitting)": [[111, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[111, "graphnet.pisa.fitting.WeightFitter"]], "config_updater() (in module graphnet.pisa.fitting)": [[111, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[111, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[111, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[111, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa.fitting": [[111, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[112, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[112, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[112, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[112, "graphnet.pisa.plotting.read_entry"]], "graphnet.training": [[113, "module-graphnet.training"]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[114, "graphnet.training.callbacks.GraphnetEarlyStopping"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[114, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[114, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[114, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[114, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[114, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[114, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[114, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[114, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[114, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[114, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end"]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[114, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[114, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[114, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[114, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end"]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[114, "graphnet.training.callbacks.GraphnetEarlyStopping.setup"]], "direction (class in graphnet.training.labels)": [[115, "graphnet.training.labels.Direction"]], "label (class in graphnet.training.labels)": [[115, "graphnet.training.labels.Label"]], "graphnet.training.labels": [[115, "module-graphnet.training.labels"]], "key (graphnet.training.labels.label property)": [[115, "graphnet.training.labels.Label.key"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[116, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[116, "graphnet.training.loss_functions.CrossEntropyLoss"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[116, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.training.loss_functions)": [[116, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[116, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[116, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[116, "graphnet.training.loss_functions.MSELoss"]], "rmseloss (class in graphnet.training.loss_functions)": [[116, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[116, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[116, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[116, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[116, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[116, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[116, "graphnet.training.loss_functions.LossFunction.forward"]], "graphnet.training.loss_functions": [[116, "module-graphnet.training.loss_functions"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[116, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[116, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[116, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "collate_fn() (in module graphnet.training.utils)": [[117, "graphnet.training.utils.collate_fn"]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[117, "graphnet.training.utils.collator_sequence_buckleting"]], "get_predictions() (in module graphnet.training.utils)": [[117, "graphnet.training.utils.get_predictions"]], "graphnet.training.utils": [[117, "module-graphnet.training.utils"]], "make_dataloader() (in module graphnet.training.utils)": [[117, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[117, "graphnet.training.utils.make_train_validation_dataloader"]], "save_results() (in module graphnet.training.utils)": [[117, "graphnet.training.utils.save_results"]], "save_selection() (in module graphnet.training.utils)": [[117, "graphnet.training.utils.save_selection"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[118, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[118, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[118, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[118, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[118, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[119, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[120, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[120, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[120, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[120, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[120, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[120, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[120, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[121, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[122, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[122, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[122, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[122, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[122, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[122, "graphnet.utilities.config.base_config.BaseConfig.load"]], "model_computed_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[122, "graphnet.utilities.config.base_config.BaseConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[122, "graphnet.utilities.config.base_config.BaseConfig.model_config"]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[122, "graphnet.utilities.config.base_config.BaseConfig.model_fields"]], "configurable (class in graphnet.utilities.config.configurable)": [[123, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[123, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[123, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[123, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[123, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta"]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta"]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition"]], "graphnet.utilities.config.dataset_config": [[124, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.labels"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "model_computed_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config"]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[124, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[124, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[125, "graphnet.utilities.config.model_config.ModelConfig"]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[125, "graphnet.utilities.config.model_config.ModelConfigSaverABC"]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[125, "graphnet.utilities.config.model_config.ModelConfigSaverMeta"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[125, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[125, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[125, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[125, "module-graphnet.utilities.config.model_config"]], "model_computed_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[125, "graphnet.utilities.config.model_config.ModelConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[125, "graphnet.utilities.config.model_config.ModelConfig.model_config"]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[125, "graphnet.utilities.config.model_config.ModelConfig.model_fields"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[125, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[126, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[126, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[126, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[126, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[126, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[126, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[126, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[127, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[127, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[127, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[127, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[127, "module-graphnet.utilities.config.training_config"]], "model_computed_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[127, "graphnet.utilities.config.training_config.TrainingConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[127, "graphnet.utilities.config.training_config.TrainingConfig.model_config"]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[127, "graphnet.utilities.config.training_config.TrainingConfig.model_fields"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[127, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[128, "module-graphnet.utilities.decorators"]], "graphnet.utilities.deprecation_tools": [[129, "module-graphnet.utilities.deprecation_tools"]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[129, "graphnet.utilities.deprecation_tools.rename_state_dict_entries"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[130, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[130, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[130, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[130, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[130, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[131, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[131, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[131, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[131, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[131, "graphnet.utilities.imports.requires_icecube"]], "logger (class in graphnet.utilities.logging)": [[132, "graphnet.utilities.logging.Logger"]], "repeatfilter (class in graphnet.utilities.logging)": [[132, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.logger method)": [[132, "graphnet.utilities.logging.Logger.critical"]], "debug() (graphnet.utilities.logging.logger method)": [[132, "graphnet.utilities.logging.Logger.debug"]], "error() (graphnet.utilities.logging.logger method)": [[132, "graphnet.utilities.logging.Logger.error"]], "file_handlers (graphnet.utilities.logging.logger property)": [[132, "graphnet.utilities.logging.Logger.file_handlers"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[132, "graphnet.utilities.logging.RepeatFilter.filter"]], "graphnet.utilities.logging": [[132, "module-graphnet.utilities.logging"]], "handlers (graphnet.utilities.logging.logger property)": [[132, "graphnet.utilities.logging.Logger.handlers"]], "info() (graphnet.utilities.logging.logger method)": [[132, "graphnet.utilities.logging.Logger.info"]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[132, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed"]], "setlevel() (graphnet.utilities.logging.logger method)": [[132, "graphnet.utilities.logging.Logger.setLevel"]], "stream_handlers (graphnet.utilities.logging.logger property)": [[132, "graphnet.utilities.logging.Logger.stream_handlers"]], "warning() (graphnet.utilities.logging.logger method)": [[132, "graphnet.utilities.logging.Logger.warning"]], "warning_once() (graphnet.utilities.logging.logger method)": [[132, "graphnet.utilities.logging.Logger.warning_once"]], "eps_like() (in module graphnet.utilities.maths)": [[133, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[133, "module-graphnet.utilities.maths"]]}})