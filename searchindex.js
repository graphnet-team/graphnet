Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.combine_extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pipeline", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.icemix", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.pisa", "api/graphnet.pisa.fitting", "api/graphnet.pisa.plotting", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.combine_extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pipeline.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.pisa.rst", "api/graphnet.pisa.fitting.rst", "api/graphnet.pisa.plotting.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "sqlite", "sqlite_dataset", "extractors", "combine_extractors", "extractor", "icecube", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "internal", "parquet_extractor", "parquet", "deprecated_methods", "pipeline", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "internal_parquet_reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "deployment", "deployer", "deployment_module", "i3modules", "deprecated_methods", "icecube", "cleaning_module", "i3deployer", "inference_module", "exceptions", "exceptions", "models", "coarsening", "components", "embedding", "layers", "pool", "detector", "detector", "icecube", "prometheus", "gnn", "RNN_tito", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "icemix", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "rnn", "node_rnn", "standard_averaged_model", "standard_model", "task", "classification", "reconstruction", "task", "utils", "pisa", "fitting", "plotting", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 42, 44, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 64, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133], "i": [0, 1, 8, 10, 12, 14, 16, 17, 19, 21, 32, 33, 34, 35, 37, 39, 42, 45, 48, 51, 52, 53, 56, 57, 59, 64, 66, 70, 72, 73, 74, 81, 82, 86, 89, 91, 94, 95, 98, 103, 104, 105, 108, 110, 111, 112, 113, 114, 116, 118, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133], "an": [0, 17, 35, 39, 40, 42, 45, 48, 53, 91, 98, 99, 112, 126, 128, 131, 132, 133], "open": [0, 44, 131, 132], "sourc": [0, 4, 5, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 42, 44, 45, 46, 48, 51, 52, 53, 55, 56, 57, 59, 60, 64, 66, 68, 70, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132], "python": [0, 1, 6, 17, 18, 21, 32, 35, 131, 132, 133], "framework": [0, 132], "aim": [0, 1, 131, 132], "provid": [0, 1, 6, 10, 12, 14, 64, 69, 86, 91, 96, 112, 131, 132, 133], "high": [0, 132], "qualiti": [0, 132], "user": [0, 69, 110, 132, 133], "friendli": [0, 55, 57, 132], "end": [0, 1, 110, 132], "function": [0, 6, 7, 10, 19, 35, 37, 51, 52, 64, 66, 70, 73, 74, 77, 78, 82, 91, 95, 96, 104, 105, 107, 108, 112, 113, 115, 120, 121, 122, 125, 126, 127, 129, 132], "perform": [0, 8, 70, 72, 73, 74, 79, 80, 82, 84, 94, 98, 99, 100, 102, 104, 113, 132], "reconstruct": [0, 1, 20, 22, 23, 27, 28, 30, 40, 58, 69, 84, 86, 98, 101, 104, 132], "task": [0, 1, 8, 69, 100, 102, 103, 112, 131, 132], "neutrino": [0, 1, 19, 45, 73, 84, 86, 95, 107, 132], "telescop": [0, 1, 132], "us": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 19, 24, 29, 31, 32, 37, 39, 40, 42, 44, 45, 47, 48, 49, 52, 53, 55, 56, 57, 58, 60, 64, 66, 69, 72, 73, 74, 76, 80, 82, 83, 84, 86, 89, 91, 92, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 107, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 127, 128, 131, 132, 133], "graph": [0, 1, 7, 10, 12, 14, 69, 73, 74, 76, 88, 89, 90, 91, 93, 94, 95, 98, 104, 105, 111, 113, 131, 132], "neural": [0, 1, 97, 132], "network": [0, 1, 73, 81, 97, 132], "gnn": [0, 1, 40, 69, 80, 81, 82, 83, 84, 86, 91, 98, 100, 132, 133], "make": [0, 6, 94, 114, 120, 121, 131, 132, 133], "fast": [0, 132, 133], "easi": [0, 132], "train": [0, 1, 6, 8, 9, 53, 58, 64, 73, 86, 91, 99, 100, 105, 110, 111, 112, 113, 114, 116, 120, 121, 123, 130, 132, 133], "complex": [0, 69, 132], "model": [0, 1, 58, 60, 64, 66, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 116, 118, 120, 121, 123, 130, 132, 133], "can": [0, 1, 8, 10, 12, 14, 17, 21, 24, 64, 72, 74, 91, 107, 108, 114, 116, 118, 120, 121, 131, 132, 133], "event": [0, 1, 6, 8, 10, 12, 14, 16, 26, 39, 42, 48, 52, 53, 56, 57, 64, 72, 74, 80, 91, 94, 95, 104, 105, 107, 112, 113, 114, 120, 132], "state": [0, 60, 80, 98, 125, 132], "art": [0, 132], "arbitrari": [0, 132], "detector": [0, 1, 29, 69, 77, 78, 91, 92, 94, 100, 132], "configur": [0, 1, 8, 10, 41, 42, 60, 69, 96, 100, 107, 115, 117, 118, 120, 121, 123, 128, 132], "infer": [0, 1, 40, 57, 58, 60, 64, 66, 100, 104, 132, 133], "time": [0, 4, 52, 70, 72, 74, 80, 90, 94, 95, 98, 103, 105, 128, 132, 133], "ar": [0, 1, 4, 10, 12, 14, 19, 21, 34, 35, 44, 53, 55, 56, 57, 59, 64, 73, 74, 80, 82, 84, 87, 88, 89, 91, 92, 93, 94, 95, 98, 102, 107, 112, 114, 120, 121, 131, 132, 133], "order": [0, 32, 44, 59, 70, 94, 105, 132], "magnitud": [0, 132], "faster": [0, 132], "than": [0, 7, 104, 113, 128, 132], "tradit": [0, 132], "techniqu": [0, 132], "common": [0, 1, 112, 120, 121, 124, 127, 132], "ml": [0, 1, 132], "develop": [0, 1, 131, 132, 133], "physicist": [0, 1, 132], "wish": [0, 59, 131, 132], "tool": [0, 1, 132], "research": [0, 132], "By": [0, 39, 42, 45, 48, 104, 132], "unit": [0, 6, 90, 127, 131, 132], "both": [0, 21, 104, 108, 132], "group": [0, 74, 132], "increas": [0, 110, 132], "longev": [0, 132], "usabl": [0, 132], "individu": [0, 10, 12, 14, 74, 82, 105, 132], "code": [0, 29, 39, 48, 52, 91, 120, 121, 132], "contribut": [0, 132, 133], "from": [0, 1, 6, 7, 8, 10, 12, 14, 17, 18, 19, 21, 23, 24, 26, 32, 33, 34, 35, 37, 40, 44, 45, 50, 55, 57, 72, 74, 84, 86, 89, 91, 94, 95, 96, 99, 102, 103, 104, 105, 108, 110, 111, 112, 118, 119, 120, 121, 123, 128, 131, 132, 133], "build": [0, 1, 69, 76, 89, 90, 94, 95, 96, 118, 120, 121, 132], "gener": [0, 8, 10, 12, 14, 21, 34, 44, 55, 59, 64, 66, 72, 87, 88, 91, 92, 93, 102, 112, 132], "reusabl": [0, 132], "softwar": [0, 45, 112, 132], "packag": [0, 1, 51, 122, 126, 127, 131, 132, 133], "base": [0, 4, 5, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 37, 39, 40, 42, 44, 45, 46, 48, 53, 55, 56, 57, 59, 60, 64, 66, 68, 70, 72, 73, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 96, 98, 99, 100, 102, 103, 104, 107, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 123, 127, 128, 132], "engin": [0, 132], "best": [0, 110, 131, 132], "practic": [0, 131, 132], "lower": [0, 108, 132], "technic": [0, 132], "threshold": [0, 64, 132], "most": [0, 1, 53, 90, 104, 132, 133], "scientif": [0, 1, 132], "problem": [0, 89, 131, 132], "The": [0, 6, 8, 10, 12, 14, 16, 32, 35, 39, 40, 42, 48, 52, 55, 56, 57, 59, 60, 64, 66, 70, 72, 73, 74, 80, 82, 84, 86, 89, 91, 95, 98, 102, 103, 104, 105, 107, 108, 110, 111, 112, 125, 132], "improv": [0, 1, 116, 132], "classif": [0, 1, 69, 101, 104, 112, 132], "yield": [0, 82, 107, 112, 132], "veri": [0, 53, 132], "accur": [0, 132], "e": [0, 1, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 35, 37, 40, 52, 53, 57, 60, 64, 66, 70, 73, 74, 76, 77, 78, 81, 85, 89, 91, 94, 95, 96, 99, 100, 102, 103, 104, 105, 110, 111, 112, 114, 118, 128, 131, 132, 133], "g": [0, 1, 10, 12, 14, 16, 17, 19, 29, 32, 35, 40, 52, 53, 57, 64, 66, 74, 91, 94, 95, 104, 105, 114, 128, 131, 132, 133], "low": [0, 132], "energi": [0, 4, 40, 103, 104, 114, 132], "observ": [0, 132], "icecub": [0, 1, 3, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 42, 45, 48, 58, 64, 66, 69, 73, 75, 84, 86, 94, 95, 127, 132, 133], "here": [0, 91, 131, 132, 133], "implement": [0, 1, 17, 19, 44, 55, 60, 73, 80, 81, 82, 83, 84, 86, 89, 98, 112, 131, 132], "wa": [0, 6, 132], "appli": [0, 6, 10, 12, 14, 39, 42, 43, 44, 48, 59, 73, 74, 80, 81, 82, 83, 84, 85, 86, 95, 98, 100, 102, 104, 122, 132], "oscil": [0, 106, 132], "lead": [0, 132], "signific": [0, 132], "angular": [0, 132], "rang": [0, 104, 132], "relev": [0, 1, 35, 51, 126, 131, 132], "studi": [0, 132], "furthermor": [0, 98, 132], "shown": [0, 132], "could": [0, 131, 132], "muon": [0, 23, 132], "v": [0, 73, 132], "therebi": [0, 1, 120, 121, 132], "effici": [0, 132], "puriti": [0, 132], "sampl": [0, 53, 73, 91, 92, 94, 104, 132], "analysi": [0, 40, 59, 132, 133], "similarli": [0, 35, 132], "ha": [0, 35, 52, 64, 81, 95, 112, 126, 132, 133], "great": [0, 132], "point": [0, 28, 111, 112, 113, 132], "analys": [0, 58, 106, 132], "final": [0, 6, 72, 74, 110, 120, 132], "millisecond": [0, 132], "allow": [0, 37, 58, 69, 74, 110, 118, 123, 132, 133], "whole": [0, 132], "new": [0, 1, 16, 73, 94, 118, 123, 131, 132], "type": [0, 6, 7, 8, 10, 12, 14, 18, 19, 31, 32, 33, 44, 45, 46, 51, 52, 53, 55, 56, 57, 59, 70, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 112, 113, 114, 116, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 131, 132], "cosmic": [0, 132], "alert": [0, 132], "which": [0, 10, 12, 14, 17, 19, 20, 29, 33, 37, 40, 53, 55, 57, 59, 70, 74, 82, 91, 92, 95, 96, 102, 105, 107, 112, 113, 116, 132, 133], "were": [0, 132], "previous": [0, 132], "unfeas": [0, 132], "possibl": [0, 32, 57, 131, 132], "identifi": [0, 6, 10, 12, 14, 29, 94, 95, 105, 120, 121, 132], "10": [0, 8, 40, 77, 78, 94, 95, 116, 132], "tev": [0, 132], "monitor": [0, 132], "rate": [0, 110, 132], "direct": [0, 84, 86, 95, 102, 103, 104, 109, 111, 132], "real": [0, 132], "thi": [0, 3, 6, 8, 10, 12, 14, 16, 17, 19, 21, 35, 37, 39, 42, 44, 45, 48, 51, 52, 56, 57, 64, 69, 72, 74, 80, 82, 86, 90, 91, 92, 94, 95, 98, 100, 102, 103, 104, 105, 107, 108, 110, 112, 113, 114, 118, 120, 121, 123, 128, 131, 132, 133], "enabl": [0, 3, 132], "first": [0, 72, 80, 90, 98, 110, 113, 131, 132], "ever": [0, 132], "despit": [0, 132], "larg": [0, 80, 112, 132], "background": [0, 132], "origin": [0, 86, 107, 132], "compris": [0, 132], "number": [0, 6, 10, 12, 14, 17, 39, 40, 42, 48, 53, 56, 57, 59, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 89, 90, 92, 94, 95, 98, 102, 103, 104, 105, 110, 113, 114, 116, 132], "modul": [0, 3, 5, 6, 10, 15, 16, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 54, 55, 57, 58, 59, 64, 68, 69, 72, 73, 75, 79, 87, 88, 90, 91, 92, 93, 96, 97, 101, 106, 109, 115, 117, 120, 121, 122, 123, 127, 132], "necessari": [0, 8, 32, 131, 132], "workflow": [0, 132], "ingest": [0, 1, 3, 75, 132], "raw": [0, 94, 95, 132], "data": [0, 1, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 91, 92, 94, 98, 99, 100, 104, 105, 111, 113, 116, 118, 120, 123, 127, 130, 132, 133], "domain": [0, 1, 3, 58, 132], "specif": [0, 1, 3, 5, 6, 10, 12, 14, 15, 17, 20, 35, 43, 44, 45, 52, 57, 58, 60, 68, 70, 74, 75, 76, 77, 78, 79, 80, 85, 89, 91, 94, 97, 100, 101, 102, 103, 104, 112, 131, 132, 133], "format": [0, 1, 3, 6, 10, 32, 36, 37, 44, 46, 55, 56, 57, 72, 96, 98, 108, 120, 131, 132, 133], "deploi": [0, 1, 58, 60, 132], "chain": [0, 1, 58, 69, 100, 132, 133], "illustr": [0, 131, 132], "figur": [0, 108, 132], "level": [0, 10, 12, 14, 16, 29, 34, 39, 42, 44, 45, 46, 48, 52, 55, 56, 70, 74, 86, 128, 132, 133], "overview": [0, 132], "typic": [0, 32, 98, 132], "convert": [0, 1, 3, 6, 12, 19, 32, 34, 39, 41, 42, 48, 50, 56, 105, 132, 133], "industri": [0, 3, 132], "standard": [0, 3, 4, 34, 53, 60, 77, 78, 80, 91, 92, 94, 99, 100, 104, 116, 131, 132], "intermedi": [0, 1, 3, 6, 10, 81, 132, 133], "file": [0, 1, 3, 6, 10, 12, 14, 17, 19, 32, 34, 37, 39, 42, 44, 45, 46, 48, 50, 51, 55, 56, 57, 59, 60, 64, 66, 91, 96, 107, 110, 112, 113, 116, 117, 118, 119, 120, 121, 126, 128, 132, 133], "read": [0, 3, 6, 10, 12, 14, 32, 43, 45, 46, 76, 82, 100, 101, 132, 133], "simpl": [0, 69, 132], "physic": [0, 1, 19, 33, 35, 58, 64, 66, 69, 101, 104, 132], "orient": [0, 69, 132], "compon": [0, 1, 69, 72, 73, 74, 96, 100, 132], "manag": [0, 109, 132], "experi": [0, 1, 5, 6, 43, 44, 60, 109, 132], "log": [0, 1, 103, 109, 110, 112, 115, 132, 133], "deploy": [0, 1, 60, 64, 66, 91, 130, 132], "modular": [0, 69, 132], "subclass": [0, 69, 132], "torch": [0, 10, 12, 14, 69, 73, 91, 92, 96, 127, 132, 133], "nn": [0, 69, 73, 89, 92, 132], "mean": [0, 10, 12, 14, 69, 82, 84, 95, 112, 121, 132], "onli": [0, 1, 10, 12, 14, 57, 69, 74, 80, 104, 107, 114, 118, 121, 123, 127, 132, 133], "need": [0, 8, 32, 57, 69, 72, 96, 98, 112, 125, 132, 133], "import": [0, 1, 52, 69, 115, 132], "few": [0, 69, 131, 132], "exist": [0, 10, 12, 14, 40, 52, 69, 111, 120, 132], "purpos": [0, 69, 112, 132], "built": [0, 69, 91, 132], "them": [0, 1, 32, 60, 69, 82, 104, 107, 132, 133], "togeth": [0, 69, 89, 100, 132], "form": [0, 17, 69, 102, 118, 123, 132], "complet": [0, 69, 100, 132], "extend": [0, 1, 132], "suit": [0, 104, 132], "through": [0, 102, 103, 104, 112, 132], "layer": [0, 69, 71, 74, 80, 81, 82, 83, 84, 86, 98, 102, 103, 104, 132], "connect": [0, 8, 89, 90, 91, 94, 112, 132], "etc": [0, 112, 128, 132], "optimis": [0, 1, 132], "differ": [0, 10, 12, 14, 17, 19, 37, 44, 45, 46, 92, 100, 113, 131, 132, 133], "track": [0, 17, 19, 23, 37, 103, 131, 132], "These": [0, 44, 55, 57, 91, 131, 132], "prepar": [0, 8, 112, 132], "satisfi": [0, 132], "o": [0, 104, 132], "load": [0, 7, 10, 51, 60, 96, 99, 118, 120, 132], "requir": [0, 19, 25, 37, 52, 94, 102, 112, 120, 121, 123, 132, 133], "when": [0, 10, 12, 14, 32, 34, 52, 64, 73, 80, 82, 84, 98, 111, 128, 131, 132, 133], "batch": [0, 7, 12, 40, 56, 70, 73, 74, 98, 100, 105, 113, 116, 132], "do": [0, 60, 64, 112, 120, 121, 131, 132, 133], "predict": [0, 8, 24, 28, 30, 40, 64, 66, 81, 86, 100, 102, 104, 112, 113, 132], "either": [0, 8, 10, 14, 19, 112, 132, 133], "contain": [0, 5, 6, 10, 12, 14, 15, 16, 19, 32, 33, 36, 37, 39, 40, 42, 44, 45, 46, 48, 52, 55, 56, 57, 59, 60, 64, 66, 68, 82, 87, 88, 90, 91, 92, 93, 95, 96, 104, 105, 112, 114, 116, 132, 133], "imag": [0, 1, 131, 132, 133], "portabl": [0, 132], "depend": [0, 132, 133], "free": [0, 112, 132], "split": [0, 8, 34, 57, 70, 132], "up": [0, 64, 131, 132, 133], "interfac": [0, 106, 120, 121, 132, 133], "block": [0, 1, 71, 73, 132], "pre": [0, 41, 42, 76, 91, 111, 131, 132], "directli": [0, 82, 132], "while": [0, 21, 110, 132], "continu": [0, 112, 132], "expand": [0, 132], "": [0, 6, 7, 8, 10, 12, 14, 32, 39, 42, 44, 48, 55, 57, 59, 72, 76, 81, 82, 91, 100, 104, 105, 110, 114, 116, 120, 121, 128, 129, 132, 133], "capabl": [0, 132], "project": [0, 72, 73, 131, 132], "receiv": [0, 132], "fund": [0, 132], "european": [0, 132], "union": [0, 6, 7, 8, 10, 12, 14, 21, 32, 35, 39, 42, 44, 45, 46, 48, 59, 60, 64, 66, 70, 73, 74, 80, 82, 91, 92, 100, 104, 120, 123, 126, 132], "horizon": [0, 132], "2020": [0, 132], "innov": [0, 132], "programm": [0, 132], "under": [0, 132], "mari": [0, 132], "sk\u0142odowska": [0, 132], "curi": [0, 132], "grant": [0, 112, 132], "agreement": [0, 131, 132], "No": [0, 132], "890778": [0, 132], "work": [0, 4, 33, 80, 131, 132, 133], "rasmu": [0, 83, 132], "\u00f8rs\u00f8e": [0, 132], "partli": [0, 132], "punch4nfdi": [0, 132], "consortium": [0, 132], "support": [0, 6, 35, 131, 132, 133], "dfg": [0, 132], "nfdi": [0, 132], "39": [0, 132, 133], "1": [0, 6, 8, 10, 12, 17, 32, 39, 42, 48, 53, 56, 59, 70, 73, 74, 80, 82, 84, 86, 89, 90, 92, 95, 98, 102, 103, 104, 105, 110, 112, 113, 114, 120, 132, 133], "germani": [0, 132], "conveni": [1, 131, 133], "collabor": 1, "solv": [1, 131], "It": [1, 32, 52, 64, 72, 95, 102, 104, 131], "leverag": 1, "advanc": [1, 74], "machin": [1, 133], "learn": [1, 55, 57, 64, 66, 102, 104, 110, 133], "without": [1, 89, 94, 107, 112, 133], "have": [1, 21, 39, 42, 45, 48, 52, 53, 57, 74, 86, 91, 95, 104, 131, 133], "expert": 1, "themselv": [1, 120, 121], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 10, 12, 14, 16, 17, 19, 21, 34, 52, 57, 64, 72, 73, 74, 76, 82, 85, 90, 91, 96, 112, 118, 119, 120, 121, 122, 123, 128, 131, 133], "streamlin": 1, "process": [1, 6, 39, 42, 48, 64, 72, 76, 80, 82, 84, 131, 133], "transform": [1, 73, 74, 84, 86, 98, 104, 114], "extens": [1, 44, 55, 126], "basic": 1, "across": [1, 2, 10, 12, 14, 35, 49, 59, 74, 100, 112, 115, 116, 117, 128], "variou": [1, 54], "easili": 1, "architectur": [1, 81, 82, 83, 84, 86, 98], "main": [1, 79, 91, 100, 131, 133], "featur": [1, 3, 4, 10, 12, 14, 20, 40, 57, 64, 66, 72, 73, 74, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 102, 105, 113, 120, 131], "i3": [1, 19, 33, 34, 35, 39, 42, 45, 48, 51, 59, 64, 66, 126, 133], "more": [1, 10, 12, 51, 52, 80, 96, 120, 121, 128], "index": [1, 6, 10, 12, 14, 35, 52, 56, 74, 76, 80, 90, 95, 98, 110], "sqlite": [1, 3, 8, 9, 14, 40, 42, 48, 50, 52, 57, 133], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 10, 55, 76, 85, 91, 104, 119], "awai": 1, "detail": [1, 80, 96, 110, 133], "expos": 1, "physicst": 1, "what": [1, 72, 91, 131], "i3modul": [1, 58, 60], "includ": [1, 12, 73, 94, 100, 107, 112, 118, 131], "docker": 1, "run": [1, 45, 59], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 9, 15, 18, 58, 69, 87, 115], "dataset": [1, 3, 7, 8, 11, 12, 13, 14, 23, 53, 56, 68, 80, 91, 98, 116, 120], "extractor": [1, 3, 6, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 43, 44, 48, 64, 66], "parquet": [1, 3, 9, 12, 37, 39, 42, 46, 48, 50, 56, 77, 78, 133], "pre_configur": [1, 3, 42], "reader": [1, 3, 42, 44, 45, 46], "util": [1, 3, 15, 18, 32, 33, 34, 35, 50, 51, 52, 53, 69, 87, 109, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130], "writer": [1, 3, 42, 55, 56, 57], "constant": [1, 3, 130], "dataclass": [1, 3, 33], "dataconvert": [1, 3, 41, 55, 56, 57], "dataload": [1, 3, 8, 40, 91, 100, 113, 123], "datamodul": [1, 3], "pipelin": [1, 3], "deployment_modul": [1, 58], "except": [1, 130], "rnn": [1, 69, 80, 98], "coarsen": [1, 69, 74], "standard_averaged_model": [1, 69], "standard_model": [1, 69], "pisa": [1, 25, 40, 107, 108, 127, 130, 133], "fit": [1, 8, 100, 106, 108, 112, 114, 123], "plot": [1, 106], "callback": [1, 100, 109], "label": [1, 10, 14, 23, 26, 81, 91, 100, 104, 108, 109, 113, 120], "loss_funct": [1, 104, 109], "weight_fit": [1, 109], "config": [1, 7, 53, 107, 110, 112, 115, 116, 118, 119, 120, 121, 122, 123], "argpars": [1, 115], "decor": [1, 115, 127], "deprecation_tool": [1, 115], "filesi": [1, 115], "math": [1, 73, 115], "submodul": [1, 3, 9, 11, 13, 15, 18, 31, 36, 38, 41, 43, 47, 49, 54, 58, 61, 63, 67, 69, 71, 75, 79, 87, 88, 93, 97, 101, 106, 109, 115, 117, 122], "global": [2, 4, 80, 82, 84, 96], "intern": [3, 15, 37, 42, 46], "combine_extractor": [3, 15], "deprecated_method": [3, 38, 47, 58, 61], "graphnet_file_read": [3, 43], "i3read": [3, 39, 42, 43, 48], "internal_parquet_read": [3, 43], "parquet_to_sqlit": [3, 49], "random": [3, 10, 12, 14, 49, 53, 56, 94, 120], "sqlite_util": [3, 49], "string_selection_resolv": [3, 49], "graphnet_writ": [3, 54], "parquet_writ": [3, 54], "sqlite_writ": [3, 54], "truth": [3, 4, 10, 12, 14, 20, 29, 40, 52, 56, 91, 104, 113, 114, 120], "i3fileset": [3, 5, 44, 45], "set": [3, 5, 8, 19, 21, 39, 42, 44, 45, 48, 55, 73, 86, 94, 95, 96, 104, 113, 131], "init_global_index": [3, 6], "collate_fn": [3, 7, 109, 113], "do_shuffl": [3, 7], "graphnetdatamodul": [3, 8], "insqlitepipelin": [3, 40], "class": [4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 37, 39, 40, 42, 44, 45, 46, 48, 53, 55, 56, 57, 59, 60, 64, 66, 70, 72, 73, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 96, 98, 99, 100, 102, 103, 104, 107, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 128, 131], "object": [4, 5, 10, 12, 14, 21, 32, 35, 70, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 96, 98, 99, 100, 102, 103, 104, 107, 110, 112, 113, 116, 118, 120, 121, 123, 128], "namespac": [4, 96, 120, 121], "name": [4, 6, 7, 10, 12, 14, 16, 17, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 39, 40, 42, 44, 46, 48, 52, 55, 56, 57, 60, 64, 66, 76, 91, 92, 94, 98, 104, 107, 111, 114, 116, 118, 120, 121, 122, 123, 128, 131, 133], "i3featureextractor": [4, 15, 18, 64, 66], "icecube86": [4, 75, 77], "dom_x": [4, 77, 94], "dom_i": [4, 77, 94], "dom_z": [4, 77, 94], "dom_tim": [4, 94], "charg": [4, 72, 80, 94, 95, 98, 112], "rde": 4, "pmt_area": 4, "deepcor": [4, 20, 77], "upgrad": [4, 20, 77, 133], "string": [4, 10, 12, 14, 32, 53, 74, 76, 77, 91, 96, 118], "pmt_number": 4, "dom_numb": 4, "pmt_dir_x": 4, "pmt_dir_i": 4, "pmt_dir_z": 4, "dom_typ": 4, "prometheu": [4, 69, 75], "sensor_pos_x": [4, 78], "sensor_pos_i": [4, 78], "sensor_pos_z": [4, 78], "t": [4, 35, 52, 108, 110, 112, 133], "kaggl": [4, 72, 73, 77, 84, 86], "x": [4, 29, 72, 73, 74, 90, 94, 95, 98, 104, 105, 108, 112, 114], "y": [4, 29, 72, 90, 105, 108, 133], "z": [4, 29, 72, 90, 94, 95, 105, 133], "auxiliari": [4, 72], "i3truthextractor": [4, 15, 18], "energy_track": [4, 103], "energy_cascad": [4, 103], "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": [4, 103, 111], "zenith": [4, 103, 111], "pid": [4, 53, 120], "elast": 4, "interaction_typ": 4, "interaction_tim": [4, 103], "inelast": [4, 103], "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "i3_fil": [5, 19], "str": [5, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 42, 44, 45, 46, 48, 51, 52, 53, 55, 56, 57, 59, 60, 64, 66, 73, 74, 76, 77, 78, 80, 82, 84, 86, 91, 92, 94, 95, 96, 99, 100, 104, 107, 110, 111, 113, 114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 128], "gcd_file": [5, 19, 64, 66], "paramet": [5, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 42, 44, 45, 46, 48, 51, 52, 53, 55, 56, 57, 59, 60, 64, 66, 70, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129], "output_fold": [5, 59], "worker": [5, 6, 39, 40, 48, 51, 56, 59, 116, 128], "i3deploy": [5, 58, 63], "list": [5, 6, 7, 8, 10, 12, 14, 16, 21, 29, 32, 34, 35, 39, 40, 42, 44, 45, 46, 48, 51, 52, 53, 55, 56, 57, 59, 60, 64, 66, 70, 73, 74, 76, 80, 82, 84, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 104, 105, 108, 110, 113, 114, 120, 122, 123, 126, 128], "ani": [5, 6, 7, 8, 10, 12, 14, 32, 33, 34, 35, 44, 46, 55, 57, 64, 70, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 110, 112, 114, 116, 118, 119, 120, 121, 122, 123, 128, 133], "output_fil": 6, "global_index": 6, "avail": [6, 21, 40, 102, 103, 104, 127], "pool": [6, 69, 70, 71, 80, 82, 84], "return": [6, 7, 8, 10, 12, 14, 16, 17, 19, 32, 33, 35, 44, 45, 46, 51, 52, 53, 55, 56, 57, 59, 70, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129], "none": [6, 7, 8, 10, 12, 14, 19, 21, 29, 33, 34, 35, 39, 40, 42, 44, 45, 46, 48, 52, 53, 55, 56, 57, 59, 60, 66, 73, 74, 80, 82, 84, 86, 90, 91, 92, 94, 95, 96, 98, 99, 100, 104, 107, 110, 112, 113, 114, 116, 118, 119, 120, 122, 126, 128], "synchron": 6, "file_read": 6, "save_method": 6, "outdir": [6, 39, 40, 42, 48, 107], "index_column": [6, 10, 12, 14, 39, 42, 48, 52, 53, 56, 107, 113, 114, 120], "num_work": [6, 7, 42, 56, 113], "abc": [6, 10, 17, 40, 44, 55, 59, 96, 111, 114, 119, 120, 121], "logger": [6, 8, 10, 17, 34, 40, 44, 46, 53, 55, 59, 60, 89, 96, 100, 111, 114, 115, 128, 133], "A": [6, 8, 10, 34, 40, 44, 45, 46, 52, 57, 59, 60, 64, 74, 91, 92, 95, 96, 102, 104, 105, 107, 112, 114, 118, 120, 121, 123, 133], "convers": [6, 36, 37, 39, 48, 94, 133], "parallel": [6, 39, 42, 48], "extract": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 37, 51, 64, 66, 104], "also": [6, 10, 12, 14, 53, 80, 120], "assign": [6, 10, 12, 14, 70, 74, 131], "id": [6, 8, 12, 39, 42, 48, 76, 91, 113], "exampl": [6, 32, 53, 70, 74, 95, 105, 112, 120, 121, 133], "initi": [6, 34, 45, 57, 59, 73, 80, 86, 90], "graphnetfileread": [6, 43, 44, 45, 46], "method": [6, 8, 10, 12, 14, 17, 19, 31, 32, 33, 35, 38, 39, 44, 47, 48, 55, 56, 57, 60, 73, 74, 76, 95, 103, 112, 114], "graphnetwrit": [6, 54, 55, 56, 57], "save": [6, 17, 19, 32, 37, 39, 42, 48, 52, 54, 55, 57, 96, 107, 110, 112, 113, 114, 118, 119, 120, 121, 133], "interim": [6, 54, 55, 56, 57], "directori": [6, 39, 40, 42, 44, 45, 46, 48, 55, 56, 107, 110, 126], "i3extractor": [6, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 39, 42, 44, 48], "parquetextractor": [6, 36, 37, 42, 44], "input": [6, 10, 12, 14, 39, 40, 42, 44, 45, 48, 55, 59, 64, 66, 72, 73, 77, 80, 81, 82, 83, 84, 85, 86, 91, 92, 94, 98, 102, 104, 105, 118, 123, 125], "default": [6, 8, 10, 12, 14, 19, 21, 29, 32, 39, 40, 42, 45, 48, 52, 56, 57, 59, 60, 64, 66, 72, 73, 74, 80, 81, 82, 83, 84, 86, 89, 90, 91, 92, 94, 95, 96, 98, 104, 105, 107, 108, 110, 111, 112, 114, 116, 118, 120, 126], "event_no": [6, 10, 12, 14, 39, 42, 48, 52, 53, 56, 57, 114, 120], "column": [6, 10, 12, 14, 17, 39, 42, 48, 52, 56, 57, 60, 66, 68, 76, 80, 89, 91, 92, 94, 95, 98, 100, 102, 103, 104, 105, 107, 114], "ad": [6, 10, 12, 14, 20, 39, 42, 48, 72, 82, 86, 91, 94, 95, 107], "int": [6, 7, 8, 10, 12, 14, 23, 26, 34, 39, 40, 42, 44, 45, 46, 48, 53, 55, 56, 57, 59, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 107, 110, 112, 113, 114, 116, 120, 123, 128], "cpu": [6, 39, 42, 48, 60, 133], "multiprocess": [6, 39, 42, 48, 133], "get_map_funct": 6, "nb_file": 6, "map": [6, 10, 12, 14, 20, 21, 52, 77, 78, 91, 92, 104, 118, 120, 121, 123], "pure": [6, 17, 18, 21, 35], "tupl": [6, 10, 12, 14, 33, 35, 52, 73, 80, 82, 84, 95, 104, 105, 107, 108, 113, 116, 125], "option": [6, 8, 10, 12, 14, 19, 29, 40, 57, 60, 66, 73, 74, 80, 82, 84, 86, 90, 91, 92, 94, 95, 96, 98, 104, 107, 108, 110, 114, 115, 116, 118, 120, 126, 133], "merge_fil": [6, 55, 56, 57], "kwarg": [6, 7, 10, 12, 14, 34, 44, 46, 55, 70, 73, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 96, 98, 99, 100, 102, 103, 104, 110, 112, 114, 118, 120, 121, 128], "merg": [6, 55, 56, 57, 112, 133], "call": [6, 21, 35, 72, 74, 104, 107, 110, 114, 128], "instanti": [6, 8, 121], "remov": [7, 39, 48, 91, 113, 116], "less": [7, 113], "two": [7, 82, 107, 110, 112, 113], "dom": [7, 10, 12, 14, 70, 74, 80, 94, 95, 98, 113], "hit": [7, 113], "should": [7, 10, 12, 14, 17, 19, 32, 53, 60, 73, 74, 80, 86, 91, 92, 98, 105, 112, 113, 118, 120, 121, 123, 131, 133], "occur": [7, 113], "product": [7, 73, 113], "selection_nam": 7, "check": [7, 33, 34, 35, 44, 52, 94, 116, 126, 127, 131, 133], "whether": [7, 33, 35, 52, 72, 73, 80, 82, 84, 86, 96, 112, 122, 126, 127], "shuffl": [7, 8, 51, 56, 113], "select": [7, 8, 10, 12, 14, 26, 53, 113, 114, 120, 131], "bool": [7, 33, 34, 35, 52, 53, 55, 64, 72, 73, 80, 82, 84, 86, 91, 94, 95, 96, 100, 107, 110, 112, 113, 114, 116, 122, 125, 126, 127, 128], "batch_siz": [7, 40, 105, 113], "persistent_work": [7, 113], "prefetch_factor": 7, "construct": [7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 37, 44, 46, 53, 55, 56, 57, 60, 70, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 107, 110, 111, 112, 113, 114, 116, 119, 120, 121, 128], "t_co": 7, "callabl": [7, 10, 35, 73, 74, 76, 77, 78, 91, 99, 104, 113, 114, 118, 120, 121, 122, 127], "classmethod": [7, 10, 96, 112, 118, 119], "from_dataset_config": 7, "datasetconfig": [7, 10, 53, 117, 120], "dict": [7, 8, 10, 14, 21, 32, 35, 40, 52, 60, 76, 77, 78, 86, 91, 92, 94, 96, 99, 100, 107, 108, 110, 113, 116, 118, 120, 121, 122, 123, 125], "dataset_refer": 8, "dataset_arg": 8, "test_select": [8, 120], "train_dataloader_kwarg": 8, "validation_dataloader_kwarg": 8, "test_dataloader_kwarg": 8, "train_val_split": 8, "0": [8, 10, 12, 14, 39, 42, 45, 48, 53, 64, 70, 73, 74, 80, 81, 82, 84, 89, 90, 92, 95, 98, 105, 107, 108, 112, 113, 120], "9": 8, "split_se": 8, "lightningdatamodul": 8, "creat": [8, 40, 52, 91, 94, 118, 119, 123, 131, 133], "sqlitedataset": [8, 13, 14], "parquetdataset": [8, 11, 12], "non": [8, 32, 35, 52, 80, 112], "refer": [8, 78, 120], "argument": [8, 56, 86, 91, 110, 114, 116, 118, 120, 121, 123], "valid": [8, 35, 53, 99, 100, 104, 110, 112, 116, 118, 123], "test": [8, 53, 104, 113, 120, 127, 131], "ratio": [8, 73], "42": [8, 133], "seed": [8, 10, 12, 14, 53, 91, 92, 113, 120], "prepare_data": 8, "setup": [8, 110, 133], "stage": [8, 110], "lightn": [8, 110], "properti": [8, 10, 17, 24, 35, 44, 55, 74, 76, 85, 94, 95, 100, 104, 111, 119, 128], "train_dataload": [8, 100], "val_dataload": [8, 100], "test_dataload": 8, "teardown": 8, "cleanup": 8, "shutdown": 8, "procedur": 8, "close": 8, "after": [8, 73, 80, 82, 84, 110, 116, 120], "overrid": [8, 110], "parquet_dataset": [9, 11], "sqlite_dataset": [9, 13], "load_modul": [9, 10, 96], "parse_graph_definit": [9, 10], "parse_label": [9, 10], "ensembledataset": [9, 10, 120], "class_nam": [10, 34, 44, 46, 55, 121, 128], "cfg": 10, "graphdefinit": [10, 12, 14, 87, 88, 91, 92, 93, 113, 131], "arg": [10, 12, 14, 16, 34, 70, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 96, 98, 99, 100, 102, 103, 104, 112, 116, 118, 128], "path": [10, 12, 14, 19, 39, 42, 44, 45, 46, 48, 51, 52, 57, 59, 64, 66, 73, 91, 96, 99, 107, 108, 110, 113, 116, 118, 119, 120, 126, 133], "pulsemap": [10, 12, 14, 20, 64, 66, 113, 120], "puls": [10, 12, 14, 16, 20, 21, 33, 35, 52, 64, 70, 74, 86, 91, 94, 95, 105], "seri": [10, 12, 14, 20, 21, 33, 35, 52, 64, 80, 94, 98], "node": [10, 12, 14, 69, 70, 74, 80, 81, 82, 84, 87, 88, 89, 91, 92, 98, 105], "multipl": [10, 12, 14, 16, 95, 110, 120, 128], "store": [10, 12, 14, 40, 52, 55, 56, 57, 107, 111], "attribut": [10, 12, 14, 70, 104], "node_truth": [10, 12, 14, 113, 120], "uniqu": [10, 12, 14, 52, 94, 105, 120], "indici": [10, 12, 14, 33, 53, 112], "tabl": [10, 12, 14, 16, 17, 19, 37, 40, 44, 52, 56, 57, 76, 91, 107, 114], "truth_tabl": [10, 12, 14, 56, 107, 113, 114, 120], "inform": [10, 12, 14, 16, 17, 19, 21, 29, 37, 91, 94, 95, 96, 108], "node_truth_t": [10, 12, 14, 113, 120], "string_select": [10, 12, 14, 113, 120], "subset": [10, 12, 14, 73, 80, 82, 84, 98], "given": [10, 14, 19, 57, 74, 89, 104, 114, 116], "queri": [10, 12, 14, 52, 53, 57, 73], "pass": [10, 14, 72, 73, 80, 81, 82, 83, 84, 85, 86, 91, 98, 100, 104, 110, 112, 114, 131], "dtype": [10, 12, 14, 91, 92, 129], "float32": [10, 12, 14, 91, 92], "tensor": [10, 12, 14, 60, 70, 72, 73, 74, 76, 80, 81, 82, 83, 84, 85, 86, 90, 94, 98, 99, 100, 104, 105, 112, 125, 129], "loss_weight_t": [10, 12, 14, 113, 120], "per": [10, 12, 14, 21, 52, 73, 74, 80, 98, 104, 112, 114], "loss": [10, 12, 14, 91, 100, 104, 110, 112, 116], "weight": [10, 12, 14, 64, 66, 73, 86, 91, 104, 107, 112, 114, 121, 133], "loss_weight_column": [10, 12, 14, 91, 113, 120], "correspond": [10, 12, 14, 32, 35, 51, 82, 91, 95, 114, 118, 120, 121, 123, 126, 133], "loss_weight_default_valu": [10, 12, 14, 91, 120], "float": [10, 12, 14, 64, 73, 80, 81, 89, 90, 91, 92, 94, 95, 98, 100, 107, 108, 110, 112, 113, 120], "note": [10, 12, 14, 45, 56, 57, 95, 108, 121], "valu": [10, 12, 14, 29, 32, 52, 73, 74, 90, 91, 92, 105, 108, 111, 112, 116, 118], "specifi": [10, 12, 14, 53, 70, 95, 104, 108, 110, 133], "case": [10, 12, 14, 21, 39, 42, 45, 48, 64, 74, 95, 104, 133], "That": [10, 12, 14, 82, 103, 111], "ignor": [10, 12, 14, 35, 56], "resolv": [10, 12, 14, 53], "10000": [10, 12, 14, 53, 72], "5": [10, 12, 14, 53, 80, 98, 116, 133], "20": [10, 12, 14, 53, 128], "graph_definit": [10, 12, 14, 69, 87, 113, 120], "defin": [10, 12, 14, 53, 60, 64, 66, 74, 87, 88, 89, 91, 93, 95, 113, 118, 120, 121, 123], "represent": [10, 12, 14, 35, 72, 73, 74, 92, 96, 98], "dictionari": [10, 14, 17, 32, 33, 35, 40, 44, 52, 91, 92, 96, 107, 108, 118, 120, 121, 123], "from_config": [10, 96, 119, 120, 121], "instanc": [10, 17, 19, 29, 35, 37, 39, 42, 45, 48, 91, 96, 107, 111, 113, 119, 121, 133], "concaten": [10, 32, 82], "one": [10, 12, 19, 52, 64, 74, 120, 121, 126, 131, 133], "query_t": [10, 12, 14], "sequential_index": [10, 12, 14], "some": [10, 12, 14, 39, 42, 45, 48, 91, 95], "out": [10, 12, 82, 100, 101, 112, 128, 131, 133], "sequenti": [10, 12], "len": [10, 12, 95], "self": [10, 12, 91, 107, 118, 123], "_may_": [10, 12], "_indic": [10, 12], "If": [10, 12, 19, 21, 34, 40, 57, 73, 82, 86, 91, 94, 95, 96, 104, 107, 110, 114, 131, 133], "entir": [10, 12, 96], "impos": [10, 12], "befor": [10, 12, 82, 90, 98, 104, 110], "ndarrai": [10, 12, 29, 91, 95, 114], "scalar": [10, 12, 17, 105, 112], "length": [10, 12, 35, 94, 95, 105, 110], "rais": [10, 12, 19, 21, 96, 118, 123], "columnmissingexcept": [10, 12, 67, 68], "element": [10, 12, 17, 32, 35, 100, 105, 113, 122], "present": [10, 12, 19, 34, 105, 116, 126, 127], "add_label": 10, "fn": [10, 35, 118, 122], "kei": [10, 21, 32, 33, 35, 52, 57, 73, 74, 94, 111, 120, 121], "add": [10, 73, 82, 116, 125, 131, 133], "custom": [10, 44, 67, 91, 110], "concatdataset": 10, "singl": [10, 16, 55, 57, 74, 82, 95, 111, 120, 121], "collect": [10, 18, 31, 112, 129], "iter": 10, "backend": [11, 13, 54, 56], "parquetwrit": [12, 37, 42, 54, 56], "cache_s": 12, "cach": 12, "memori": 12, "must": [12, 16, 44, 45, 52, 55, 70, 110, 114, 131], "least": [12, 131, 133], "databas": [14, 40, 52, 57, 107, 114, 133], "pytorch": [14, 110, 133], "i3genericextractor": [15, 18], "i3hybridrecoextractor": [15, 18], "i3ntmuonlabelsextractor": [15, 18], "i3particleextractor": [15, 18], "i3pisaextractor": [15, 18], "i3quesoextractor": [15, 18], "i3retroextractor": [15, 18], "i3splinempeextractor": [15, 18], "i3tumextractor": [15, 18], "parquet_extractor": [15, 36], "combinedextractor": [15, 16], "combin": [16, 32, 42, 80, 120], "extractor_nam": [16, 17, 19, 21, 24, 37], "same": [16, 35, 52, 70, 74, 95, 102, 105, 110, 122, 128], "mix": 16, "fail": 16, "inherit": [17, 19, 35, 44, 55, 76, 94, 112, 128], "__call__": [17, 19, 44, 60], "output": [17, 57, 59, 60, 72, 73, 80, 81, 82, 83, 85, 94, 95, 98, 100, 102, 103, 104, 107, 114, 120, 121, 133], "var1": 17, "var_n": 17, "variabl": [17, 19, 21, 35, 44, 82, 94, 95, 105, 114, 128], "arrai": [17, 29, 32, 94, 95, 105], "like": [17, 35, 74, 90, 104, 105, 112, 129, 131], "shape": [17, 90, 91, 94, 105, 112], "n": [17, 70, 74, 90, 105, 112], "where": [17, 39, 42, 45, 48, 91, 92, 94, 95, 98, 105, 111], "denot": [17, 110], "conjunct": [17, 104], "fileread": [17, 44], "keep": [17, 19, 37, 94], "proven": [17, 19, 37], "mc_truth": 17, "get": [17, 33, 52, 76, 110, 113, 133], "i3fram": [18, 21, 33, 35, 64, 66], "frame": [18, 19, 21, 31, 34, 35, 66], "i3_filt": [18, 31, 39, 42, 45, 48], "i3featureextractoricecube86": [18, 20], "i3featureextractoricecubedeepcor": [18, 20], "i3featureextractoricecubeupgrad": [18, 20], "i3pulsenoisetruthflagicecubeupgrad": [18, 20], "i3galacticplanehybridrecoextractor": [18, 22], "i3ntmuonlabelextractor": [18, 23], "i3splinempeicextractor": [18, 28], "observatori": [19, 45], "set_gcd": 19, "gframe": 19, "cframe": 19, "gcd": [19, 33, 39, 42, 45, 48, 51, 64, 66, 126], "pair": [19, 39, 42, 45, 48, 72], "member": [19, 21, 35, 44, 94, 120, 121, 128], "being": [19, 64, 72, 102, 104], "attempt": 19, "find": [19, 90, 126], "c": [19, 32, 74, 90, 112, 133], "instead": [19, 39, 42, 45, 48, 112], "those": 19, "runtimeerror": 19, "86": [20, 77], "nois": [20, 33, 64], "flag": [20, 64], "exclude_kei": 21, "dynam": [21, 73, 82, 83, 84], "pars": [21, 108, 115, 116, 117, 118, 123], "tri": [21, 35], "automat": [21, 56, 91, 112, 131], "cast": [21, 35], "done": [21, 74, 128, 131], "recurs": [21, 35, 39, 42, 44, 45, 48, 96, 122, 126], "each": [21, 32, 35, 51, 52, 56, 57, 59, 60, 70, 72, 73, 74, 77, 78, 80, 82, 84, 89, 91, 92, 94, 95, 98, 102, 104, 105, 107, 108, 110, 113, 126], "look": [21, 133], "signatur": [21, 35], "similar": [21, 35, 94, 133], "handl": [21, 112, 116, 125, 128], "hand": 21, "special": [21, 64, 98, 105], "mc": [21, 52], "tree": 21, "trigger": 21, "exclud": [21, 133], "valueerror": [21, 96], "hybrid": 22, "galatict": 22, "plane": [22, 112], "tum": [23, 30], "dnn": [23, 30], "padding_valu": [23, 26, 105], "northeren": 23, "i3particl": 24, "other": [24, 52, 89, 112, 131], "algorithm": 24, "comparison": [24, 112], "quantiti": [25, 104, 105], "queso": 26, "retro": [27, 40], "splinemp": 28, "border": 29, "mctree": [29, 33], "boundari": 29, "volum": 29, "coordin": [29, 76, 90, 94, 95, 105], "particl": [29, 52, 111], "start": [29, 131, 133], "stop": [29, 110, 116], "within": [29, 70, 73, 74, 82, 89], "hard": [29, 94], "i3mctre": 29, "flatten_nested_dictionari": [31, 32], "serialis": [31, 32], "transpose_list_of_dict": [31, 32], "frame_is_montecarlo": [31, 33], "frame_is_nois": [31, 33], "get_om_keys_and_pulseseri": [31, 33], "i3filt": [31, 34, 39, 42, 45, 48], "nullspliti3filt": [31, 34, 39, 42, 45, 48], "i3filtermask": [31, 34], "is_boost_enum": [31, 35], "is_boost_class": [31, 35], "is_icecube_class": [31, 35], "is_typ": [31, 35], "is_method": [31, 35], "break_cyclic_recurs": [31, 35], "get_member_vari": [31, 35], "cast_object_to_pure_python": [31, 35], "cast_pulse_series_to_pure_python": [31, 35], "manipul": [32, 87, 88, 93], "obj": [32, 35, 122], "parent_kei": 32, "separ": [32, 90, 110, 133], "flatten": 32, "nest": 32, "d": [32, 90, 91, 94, 105, 131], "b": [32, 70, 74, 105], "2": [32, 39, 48, 73, 74, 80, 82, 84, 89, 92, 95, 98, 103, 105, 107, 108, 112, 120, 133], "a__b": 32, "applic": 32, "parent": 32, "__": [32, 35], "nester": 32, "json": [32, 120], "therefor": [32, 45], "we": [32, 35, 53, 95, 131, 133], "outer": 32, "abl": [32, 94, 133], "de": 32, "transpos": 32, "mont": 33, "carlo": 33, "simul": [33, 64], "icetrai": [33, 35, 39, 42, 45, 48, 60, 127], "pulseseri": 33, "calibr": [33, 35], "gcd_dict": [33, 35], "p": [33, 112], "om": [33, 35], "i3calibr": 33, "indicesfor": 33, "filter": [34, 39, 42, 45, 48, 128], "log_fold": [34, 44, 46, 55, 128], "skip": [34, 82], "null": [34, 52], "filter_nam": 34, "filter_ani": 34, "filtermask": 34, "true": [34, 52, 64, 80, 82, 84, 86, 91, 94, 96, 107, 110, 112, 114, 120, 121, 123, 126], "kept": 34, "fals": [34, 64, 72, 73, 82, 86, 91, 96, 107, 110, 112, 114, 120], "boost": 35, "enum": 35, "ensur": [35, 51, 112, 128, 131, 133], "isn": 35, "return_discard": 35, "mangl": 35, "take": [35, 74, 95, 98, 131], "mainli": 35, "cannot": [35, 98, 118, 123], "trivial": [35, 104], "For": [35, 94, 110], "doe": [35, 102, 104, 121], "try": 35, "equival": 35, "its": [35, 98], "regular": [35, 73], "otherwis": [35, 112], "itself": [35, 104], "deem": 35, "wai": [35, 53, 131, 133], "optic": [35, 95], "found": [35, 39, 42, 45, 48, 56, 95, 112], "ofintern": 36, "between": [37, 72, 87, 88, 89, 90, 93, 100, 104, 105, 110, 112, 120, 121], "param": 37, "deprec": [38, 39, 47, 48, 125], "parquetdataconvert": [38, 39], "gcd_rescu": [39, 42, 45, 48, 126], "i3toparquetconvert": [39, 41, 42], "subfold": [39, 42, 45, 48], "search": [39, 42, 44, 45, 46, 48, 126], "convent": [39, 42, 45, 48], "folder": [39, 42, 45, 46, 48, 59], "accompani": [39, 42, 45, 48], "howev": [39, 42, 45, 48], "broken": [39, 42, 45, 48], "In": [39, 42, 44, 45, 48, 55, 120, 121, 133], "icetray_verbos": [39, 42, 45, 48], "verbos": [39, 42, 45, 48, 100, 110], "pframe": [39, 42, 45, 48], "module_dict": 40, "devic": [40, 60], "retro_table_nam": 40, "n_worker": [40, 59, 107], "pipeline_nam": 40, "initialis": [40, 121], "gnn_module_for_energy_regress": 40, "modulelist": 40, "comput": [40, 60, 73, 90, 100, 104, 105, 112, 118, 120, 121, 123], "100": [40, 133], "size": [40, 57, 73, 74, 80, 82, 83, 84, 86, 105, 116], "alreadi": [40, 52, 133], "error": [40, 112, 128, 131], "prompt": 40, "avoid": [40, 128, 131], "overwrit": [40, 60, 110], "i3tosqliteconvert": [41, 42, 48], "parquettosqliteconvert": [41, 42], "preconfigur": 42, "written": [42, 59], "parquetread": [43, 46], "addit": [44, 55, 70, 73, 100, 112, 114], "accepted_file_extens": 44, "accepted_extractor": 44, "accept": [44, 131], "compat": [44, 53, 104], "extracor_nam": 44, "produc": [44, 72, 111, 114], "find_fil": [44, 45, 46], "mai": [44, 53, 60, 94, 133], "overwritten": [44, 116, 118], "match": [44, 114, 126, 129], "set_extractor": 44, "validate_fil": 44, "input_fil": [44, 59], "reli": 45, "environ": [45, 133], "sqlitedataconvert": [47, 48, 133], "pairwise_shuffl": [49, 51], "database_exist": [49, 52], "query_databas": [49, 52], "get_primary_kei": [49, 52], "database_table_exist": [49, 52], "run_sql_cod": [49, 52], "save_to_sql": [49, 52], "attach_index": [49, 52], "create_t": [49, 52], "create_table_and_save_to_sql": [49, 52], "stringselectionresolv": [49, 53], "rng": 51, "relat": [51, 126], "i3_list": [51, 126], "gcd_list": [51, 126], "correpond": 51, "handi": 51, "becaus": 51, "even": 51, "files_list": 51, "gcd_shuffl": 51, "i3_shuffl": 51, "database_path": [52, 107, 114], "execut": 52, "result": [52, 56, 74, 95, 110, 112, 113, 122, 133], "datafram": [52, 53, 55, 76, 100, 107, 113, 114], "primari": [52, 57], "splitinicepuls": 52, "table_nam": 52, "df": 52, "attach": 52, "default_typ": 52, "integer_primary_kei": 52, "NOT": [52, 112], "integ": [52, 80, 82, 83, 112], "Such": 52, "row": [52, 57, 95, 105], "appropri": [52, 104], "expect": [52, 53, 55, 64, 66, 91, 94], "doesn": 52, "indic": [53, 68, 74, 80, 90, 95, 98, 110, 116, 131], "use_cach": 53, "flexibl": 53, "below": [53, 94, 108, 114, 131, 133], "show": [53, 110], "involv": 53, "cover": 53, "current": [53, 98, 110, 131, 133], "yml": [53, 116, 120, 121], "50000": [53, 120], "ab": [53, 112, 120], "12": [53, 86, 120], "14": [53, 120], "16": [53, 72, 80, 120], "13": [53, 133], "panda": [53, 114], "syntax": [53, 112], "fix": 53, "randomli": [53, 91, 92, 121], "dataformat": [54, 57], "sqlitewrit": [54, 57], "graphnetfilesavemethod": [55, 57], "deep": [55, 57, 73, 84, 86], "save_fil": 55, "reciev": 55, "file_extens": 55, "output_dir": [55, 56, 57], "smaller": 55, "expects_merged_datafram": 55, "write": [56, 64, 66, 133], "events_per_batch": 56, "constitut": 56, "subsampl": 56, "full": 56, "200000": 56, "merged_database_nam": 57, "max_table_s": 57, "db": [57, 113, 114], "maximum": [57, 74, 94, 95, 104, 116], "proceedur": 57, "partit": 57, "approxim": 57, "you": [57, 59, 72, 120, 121, 131, 133], "mani": 57, "exceed": 57, "400": 57, "million": 57, "tend": 57, "notic": [57, 105, 112], "slower": 57, "put": 57, "primary_key_rescu": 57, "database_nam": 57, "my_databas": 57, "cleaning_modul": [58, 63], "inference_modul": [58, 63], "deploymentmodul": [58, 59, 60, 66], "baseclass": 59, "thei": 59, "appear": 59, "Will": [59, 64, 66, 89], "independ": 59, "sequenc": [59, 72, 73, 95, 105, 113], "determin": [59, 80], "divid": 59, "model_config": [60, 64, 66, 115, 117, 118, 120, 123], "state_dict": [60, 64, 66, 96, 99, 125], "prediction_column": [60, 66, 100, 113], "modelconfig": [60, 64, 66, 96, 117, 120, 121], "i3pulsecleanermodul": [63, 64], "i3inferencemodul": [63, 64, 66], "pulsemap_extractor": [64, 66], "model_nam": [64, 66, 107], "discard_empty_ev": 64, "clean": [64, 131, 133], "assum": [64, 72, 76, 91, 95, 104, 105], "been": [64, 112, 131], "pulsmap": [64, 66], "summar": [64, 66, 94, 95], "help": [64, 66, 116, 131], "entri": [64, 66, 82, 105, 108, 116], "dynedg": [64, 66, 69, 79, 83, 84, 86], "associ": [64, 66, 91, 95, 103, 104, 112], "7": [64, 74, 107], "consid": [64, 80, 133], "posit": [64, 72, 73, 74, 86, 95, 103, 118, 123], "signal": 64, "els": 64, "elimin": 64, "whose": 64, "empti": 64, "speed": [64, 90], "especi": 64, "sinc": [64, 112], "further": 64, "calcul": [64, 72, 89, 92, 94, 100, 105, 111, 112], "energy_reco": 66, "miss": 68, "embed": [69, 71, 80, 86, 98, 102, 104], "rnn_tito": [69, 79], "convnet": [69, 79], "dynedge_jinst": [69, 79], "dynedge_kaggle_tito": [69, 79], "icemix": [69, 79], "edg": [69, 73, 74, 82, 83, 84, 87, 90, 91, 92, 93, 94, 105], "node_rnn": [69, 80, 97], "unbatch_edge_index": [69, 70], "attributecoarsen": [69, 70], "domcoarsen": [69, 70], "customdomcoarsen": [69, 70], "domandtimewindowcoarsen": [69, 70], "standardaveragedmodel": [69, 99], "standardmodel": [69, 99, 100], "calculate_xyzt_homophili": [69, 105], "calculate_distance_matrix": [69, 105], "knn_graph_batch": [69, 105], "array_to_sequ": [69, 105], "oper": [70, 73, 79, 82], "cluster": [70, 73, 74, 80, 82, 84, 94, 95, 98], "local": [70, 77, 78, 94, 116], "edge_index": [70, 73, 105], "accord": [70, 74, 89, 91, 92, 95], "vector": [70, 73, 74, 112], "longtensor": [70, 74, 105], "mathbf": [70, 74], "ldot": [70, 74], "reduce_opt": 70, "avg": 70, "avg_pool": 70, "avg_pool_x": 70, "max": [70, 73, 82, 84, 112, 116], "max_pool": [70, 74], "max_pool_x": [70, 74], "min": [70, 74, 82, 84], "min_pool": [70, 71, 74], "min_pool_x": [70, 71, 74], "sum": [70, 74, 82, 84, 100, 114], "sum_pool": [70, 71, 74], "sum_pool_x": [70, 71, 74], "forward": [70, 72, 73, 76, 80, 81, 82, 83, 84, 85, 86, 89, 91, 94, 98, 100, 104, 112], "simplecoarsen": 70, "window": 70, "time_window": 70, "sinusoidalposemb": [71, 72], "fourierencod": [71, 72], "spacetimeencod": [71, 72], "dynedgeconv": [71, 73, 82], "edgeconvtito": [71, 73], "dyntran": [71, 73, 80, 84], "droppath": [71, 73], "mlp": [71, 73, 82], "block_rel": [71, 73], "attention_rel": [71, 73], "sum_pool_and_distribut": [71, 74], "group_bi": [71, 74], "group_pulses_to_dom": [71, 74], "group_pulses_to_pmt": [71, 74], "std_pool_x": [71, 74], "std_pool": [71, 74], "dim": [72, 73], "n_freq": 72, "scale": [72, 73, 83, 86, 90, 91, 94, 95, 104, 112], "lightningmodul": [72, 73, 96, 110, 128], "sinusoid": [72, 86], "competit": [72, 73, 77, 84, 86], "2nd": [72, 86], "place": [72, 86, 125, 131], "solut": [72, 73, 84, 86, 131], "see": [72, 80, 89, 91, 110, 131, 133], "arxiv": [72, 89, 112], "2310": 72, "15674": 72, "fourier": 72, "encod": 72, "attent": [72, 73, 86], "1706": 72, "03762": 72, "seen": 72, "soft": 72, "digit": 72, "dimens": [72, 73, 77, 78, 80, 81, 82, 84, 86, 95, 98, 104, 105, 112], "frequenc": 72, "seq_length": [72, 86, 105], "output_dim": 72, "n_featur": [72, 86], "incorpor": 72, "meaning": 72, "four": 72, "mandatori": 72, "128": [72, 81, 82, 84, 116], "dimension": [72, 73], "384": [72, 86], "6": [72, 74, 86, 108], "spacetim": 72, "space": [72, 89, 90, 104, 114], "interv": 72, "32": [72, 86], "aggr": 73, "nb_neighbor": 73, "features_subset": [73, 80, 82, 84, 98], "edgeconv": 73, "convolut": [73, 81, 82, 83, 84], "aggreg": [73, 74], "8": [73, 74, 80, 82, 84, 92, 98, 112, 113, 131, 133], "neighbour": [73, 80, 82, 84, 89, 90, 92, 98, 105], "slice": [73, 82], "sparsetensor": 73, "messagepass": 73, "tito": [73, 80, 84], "reset_paramet": 73, "reset": 73, "learnabl": [73, 79, 80, 81, 82, 83, 84, 85, 86, 98, 104], "messag": [73, 110, 128], "x_i": 73, "x_j": 73, "layer_s": 73, "n_head": [73, 80, 84], "dyntrans1": 73, "head": [73, 80, 84, 86, 104], "multiheadattent": 73, "drop_prob": 73, "drop": [73, 81], "stochast": 73, "depth": [73, 86, 95], "probabl": [73, 112], "dure": [73, 86, 91, 104, 110], "extra_repr": [73, 96], "extra": [73, 133], "in_featur": 73, "hidden_featur": 73, "out_featur": 73, "activ": [73, 80, 82, 94, 98, 100, 104, 131, 133], "gelu": 73, "dropout_prob": 73, "multi": [73, 82], "perceptron": [73, 82], "hidden": [73, 80, 82, 83, 98], "dropout": [73, 80, 98], "input_dim": 73, "num_head": 73, "mlp_ratio": 73, "qkv_bia": 73, "qk_scale": 73, "attn_drop": 73, "drop_path": 73, "init_valu": 73, "norm_lay": 73, "normal": [73, 82, 95, 104], "layernorm": 73, "attn_head_dim": 73, "beitv2": 73, "4": [73, 83, 86, 103, 108], "feedforward": 73, "bia": 73, "term": [73, 112], "matric": 73, "factor": [73, 95, 110], "dot": 73, "gamma_1": 73, "gamma_2": 73, "key_padding_mask": 73, "rel_pos_bia": 73, "kv": 73, "proj_drop": 73, "mechan": 73, "rel": [73, 86], "multipli": [73, 110], "head_dim": 73, "q": 73, "k": [73, 80, 82, 84, 89, 92, 98, 105, 112], "attn_mask": 73, "just": [74, 133], "negat": 74, "cluster_index": 74, "distribut": [74, 82, 103, 104, 112, 114], "ident": [74, 104], "pmt": [74, 95], "f1": 74, "f2": 74, "groupbi": 74, "3": [74, 80, 81, 84, 90, 95, 98, 103, 105, 107, 108, 112, 131, 133], "matrix": [74, 89, 90, 105, 112], "mathbb": 74, "r": [74, 89, 133], "n_1": 74, "n_b": 74, "f": 74, "obtain": [74, 112], "wise": 74, "dens": 74, "fc": 74, "known": 74, "std": 74, "repres": [74, 80, 91, 92, 94, 95, 105, 118, 120, 121], "averag": [74, 99, 112], "torch_geometr": [74, 105], "version": [74, 95, 104, 110, 131, 133], "standardis": 75, "icecubekaggl": [75, 77], "icecubedeepcor": [75, 77], "icecubeupgrad": [75, 77], "orca150": [75, 78], "ins": 76, "feature_map": [76, 77, 78], "input_featur": [76, 91], "input_feature_nam": [76, 91, 92, 94], "adjac": 76, "geometry_t": [76, 77, 78], "public": [76, 114], "retriev": 76, "geometri": [76, 91], "string_index_nam": 76, "sensor_position_nam": 76, "xyz": [76, 77, 78, 94, 95], "sensor_index_nam": 76, "sensor": [76, 91], "geometry_table_path": [77, 78], "home": [77, 78, 116, 133], "runner": [77, 78, 116], "lib": [77, 78, 116, 133], "python3": [77, 78, 116], "string_id_column": [77, 78], "sensor_id_column": [77, 78], "sensor_id": [77, 78], "icecube_upgrad": 77, "prototyp": 78, "orca_150": 78, "sensor_string_id": 78, "dynedgejinst": [79, 83], "dynedgetito": [79, 80, 84], "deepic": [79, 86], "rnn_dynedg": 80, "intend": [80, 98, 133], "amount": 80, "nb_input": [80, 81, 82, 83, 84, 85, 98, 102, 103, 104], "time_series_column": [80, 98], "treat": [80, 98], "nb_neighbour": [80, 82, 84, 98], "rnn_layer": 80, "rnn_hidden_s": 80, "64": [80, 133], "rnn_dropout": 80, "latent": [80, 82, 84, 86, 98, 102, 103, 104], "metric": [80, 82, 84, 90, 98, 110], "nearest": [80, 82, 84, 89, 90, 92, 98, 105], "dyntrans_layer_s": [80, 84], "post_processing_layer_s": [80, 82, 84], "post": [80, 82, 84], "readout_layer_s": [80, 82, 84], "readout": [80, 82, 84], "global_pooling_schem": [80, 82, 84], "scheme": [80, 82, 84], "embedding_dim": [80, 98], "ie": 80, "use_global_featur": [80, 84], "use_post_processing_lay": [80, 84], "author": [81, 83, 112], "martin": 81, "minh": 81, "nb_output": [81, 83, 85, 94, 102, 103, 104], "nb_intermedi": 81, "dropout_ratio": 81, "fraction": [81, 98, 113], "dynedge_layer_s": 82, "dimenion": [82, 84], "256": [82, 84], "336": [82, 84], "follow": [82, 100, 112, 114, 131, 133], "_and_": 82, "As": 82, "last": [82, 98, 102, 103, 104, 110, 113], "add_global_variables_after_pool": 82, "altern": [82, 112, 131], "activation_lay": 82, "add_norm_lay": 82, "linear": 82, "skip_readout": 82, "exact": [83, 112], "2209": 83, "03042": 83, "oerso": 83, "layer_size_scal": 83, "ic": [84, 86, 94], "univers": [84, 86], "south": [84, 86], "pole": [84, 86], "core": 85, "drhb": 86, "http": [86, 89, 91, 112, 131], "github": [86, 91, 112, 133], "com": [86, 91, 112, 133], "hidden_dim": 86, "192": 86, "head_siz": 86, "depth_rel": 86, "n_rel": 86, "scaled_emb": 86, "include_dynedg": 86, "dynedge_arg": 86, "impact": 86, "no_weight_decai": 86, "cls_tocken": 86, "subject": [86, 112], "decai": 86, "edgedefinit": [87, 88, 89, 90, 91, 93], "how": [87, 88, 93], "drawn": [87, 88, 92, 93], "minkowski": [87, 88], "knngraph": [87, 92], "lex_sort": [87, 95], "gather_cluster_sequ": [87, 95], "identify_indic": [87, 95], "cluster_summarize_with_percentil": [87, 95], "ice_transpar": [87, 95], "knnedg": [88, 89], "radialedg": [88, 89], "euclideanedg": [88, 89], "compute_minkowski_distance_mat": [88, 90], "minkowskiknnedg": [88, 90], "_construct_edg": 89, "definit": [89, 91, 92, 94, 96, 104, 131], "nb_nearest_neighbour": [89, 90, 92], "distanc": [89, 90, 92, 105], "sphere": 89, "chosen": [89, 95, 128], "radiu": 89, "centr": 89, "radial": 89, "center": 89, "euclidean": [89, 131], "org": [89, 112, 133], "pdf": 89, "1809": 89, "06166": 89, "space_coord": 90, "time_coord": 90, "pairwis": [90, 105], "second": 90, "m": [90, 95, 112], "light": [90, 133], "time_like_weight": 90, "prefer": [90, 133], "over": [90, 94], "time_lik": 90, "hold": 91, "alter": 91, "node_definit": [91, 92], "edge_definit": 91, "nodedefinit": [91, 92, 93, 94], "nodesaspuls": [91, 93, 94], "perturbation_dict": [91, 92], "deviat": [91, 92, 95], "perturb": [91, 92], "add_inactive_sensor": 91, "inact": 91, "append": 91, "pad": [91, 95, 105], "sensor_mask": 91, "mask": [91, 105], "string_mask": 91, "sort_bi": 91, "sort": [91, 95], "truth_dict": 91, "custom_label_funct": 91, "loss_weight": [91, 104], "data_path": 91, "num_row": 91, "team": [91, 131], "blob": [91, 112], "getting_start": 91, "md": 91, "your": [92, 131, 133], "percentileclust": [93, 94], "nodeasdomtimeseri": [93, 94], "icemixnod": [93, 94], "num_puls": 94, "node_feature_nam": 94, "new_features_nam": 94, "overridden": 94, "set_number_of_input": 94, "set_output_feature_nam": 94, "measur": [94, 95, 105], "cherenkov": [94, 95], "radiat": [94, 95], "percentil": [94, 95], "summari": [94, 95], "cluster_on": [94, 95], "50": [94, 95, 116], "90": [94, 95, 108], "add_count": [94, 95], "duplic": 94, "id_column": 94, "time_column": 94, "charge_column": 94, "max_activ": 94, "n_puls": 94, "limit": [94, 112], "minimum": [94, 104], "hlc": 94, "max_puls": 94, "768": 94, "z_name": 94, "hlc_name": 94, "coincid": 94, "add_ice_properti": 94, "scatter": [94, 95], "absopt": 94, "ice_arg": 94, "z_offset": [94, 95], "z_scale": [94, 95], "offset": [94, 95], "cluster_column": 95, "numpi": 95, "along": 95, "backward": [95, 112], "feature_idx": 95, "turn": [95, 131], "gather": 95, "nan": 95, "n_cluster": 95, "l": [95, 105], "largest": 95, "suppos": 95, "n_pmt": 95, "three": [95, 112], "spatial": 95, "column_offset": 95, "feature_nam": 95, "summarization_indic": 95, "cluster_indic": 95, "interpol": [95, 110], "500": 95, "inaccur": 95, "f_absorpt": 95, "absorpt": 95, "f_scatter": 95, "verbose_print": 96, "save_state_dict": 96, "load_state_dict": [96, 99], "karg": [96, 99], "trust": 96, "enough": 96, "eval": [96, 133], "lambda": 96, "express": [96, 112], "consequ": 96, "set_verbose_print_recurs": 96, "descript": [96, 116], "print": [96, 110, 128], "about": [96, 118, 120, 121, 123], "extra_repr_recurs": 96, "indent": 96, "recurr": 97, "nodetimernn": 98, "standalon": 98, "pr": 98, "seper": 98, "hidden_s": [98, 102, 103, 104], "num_lay": 98, "clean_up_data_object": 98, "updat": [98, 99, 105, 107, 110], "swa": 99, "ema": 99, "standardaveragemodel": 99, "training_step": [99, 100], "train_batch": [99, 100], "batch_idx": [99, 100, 105], "step": [99, 100, 105, 110], "validation_step": [99, 100], "val_batch": [99, 100], "optimizer_step": 99, "epoch": [99, 110, 116], "optim": [99, 100, 110], "optimizer_closur": 99, "on_train_end": 99, "ones": [99, 133], "backbon": 100, "max_epoch": 100, "early_stopping_pati": [100, 123], "gpu": [100, 116, 133], "ckpt_path": 100, "log_every_n_step": 100, "gradient_clip_v": 100, "distribution_strategi": 100, "trainer_kwarg": 100, "pytorch_lightn": [100, 110, 128], "trainer": [100, 110, 113], "target_label": [100, 104], "target": [100, 102, 104, 112, 123], "prediction_label": [100, 104], "configure_optim": 100, "shared_step": 100, "share": 100, "compute_loss": [100, 104], "pred": [100, 104], "mode": [100, 104], "deactiv": [100, 104], "predict_as_datafram": 100, "additional_attribut": [100, 113], "multiclassclassificationtask": [101, 102], "binaryclassificationtask": [101, 102], "binaryclassificationtasklogit": [101, 102], "azimuthreconstructionwithkappa": [101, 103], "azimuthreconstruct": [101, 103], "directionreconstructionwithkappa": [101, 103], "zenithreconstruct": [101, 103], "zenithreconstructionwithkappa": [101, 103], "energyreconstruct": [101, 103], "energyreconstructionwithpow": [101, 103], "energytcreconstruct": [101, 103], "energyreconstructionwithuncertainti": [101, 103], "vertexreconstruct": [101, 103], "positionreconstruct": [101, 103], "timereconstruct": [101, 103], "inelasticityreconstruct": [101, 103], "learnedtask": [101, 104], "standardlearnedtask": [101, 102, 103, 104], "identitytask": [101, 102, 104], "standardflowtask": [101, 104], "classifi": 102, "untransform": 102, "interpret": 102, "logit": [102, 112], "binari": [102, 112], "default_target_label": [102, 103, 104], "default_prediction_label": [102, 103, 104], "target_pr": 102, "angl": [103, 111], "kappa": [103, 112], "var": 103, "azimuth_pr": 103, "azimuth_kappa": 103, "3d": [103, 112], "vmf": 103, "dir_x_pr": 103, "dir_y_pr": 103, "dir_z_pr": 103, "direction_kappa": 103, "zenith_pr": 103, "zenith_kappa": 103, "stabl": [103, 104], "energy_pr": 103, "cascad": 103, "energy_track_pr": 103, "energy_cascade_pr": 103, "uncertainti": 103, "energy_sigma": 103, "vertex": 103, "position_x_pr": 103, "position_y_pr": 103, "position_z_pr": 103, "interaction_time_pr": 103, "interact": 103, "hadron": 103, "inelasticity_pr": 103, "lossfunct": [104, 109, 112], "auto": 104, "matic": 104, "_pred": 104, "transform_prediction_and_target": 104, "numer": 104, "transform_target": 104, "log10": [104, 114], "rather": [104, 128], "transform_infer": 104, "invers": 104, "recov": 104, "transform_support": 104, "restrict": [104, 112], "invert": 104, "1e6": 104, "train_ev": 104, "act": [104, 112], "wrt": 104, "meet": 104, "come": [104, 131], "vast": 104, "major": 104, "supervis": 104, "grab": 104, "send": 104, "evalu": 104, "normalizingflow": 104, "jacobian": 104, "flow": 104, "xyzt": 105, "homophili": 105, "xyz_coord": 105, "nb_dom": 105, "excluding_valu": 105, "total": [105, 113, 114], "belong": 105, "inf": 105, "masked_entri": 105, "config_updat": [106, 107], "weightfitt": [106, 107, 109, 114], "contourfitt": [106, 107], "read_entri": [106, 108], "plot_2d_contour": [106, 108], "plot_1d_contour": [106, 108], "contour": [107, 108], "config_path": 107, "new_config_path": 107, "dummy_sect": 107, "temp": 107, "dummi": 107, "section": 107, "header": 107, "configupdat": 107, "programat": 107, "statistical_fit": 107, "fit_weight": [107, 114], "config_outdir": 107, "weight_nam": [107, 114], "pisa_config_dict": 107, "add_to_databas": [107, 114], "flux": 107, "_database_path": 107, "statist": 107, "effect": [107, 110, 131], "account": 107, "certain": 107, "systemat": 107, "hypersurfac": 107, "chang": [107, 112, 131], "assumpt": 107, "regard": 107, "pipeline_path": 107, "post_fix": 107, "include_retro": 107, "fit_1d_contour": 107, "run_nam": 107, "config_dict": 107, "grid_siz": 107, "theta23_minmax": 107, "36": 107, "54": 107, "dm31_minmax": 107, "1d": [107, 108], "fit_2d_contour": 107, "2d": [107, 108, 112], "content": 108, "contour_data": 108, "xlim": 108, "ylim": 108, "0023799999999999997": 108, "0025499999999999997": 108, "chi2_critical_valu": 108, "width": 108, "height": 108, "path_to_pisa_fit_result": 108, "name_of_my_model_in_fit": 108, "One": 108, "field": [108, 111, 118, 120, 121, 123, 125], "legend": 108, "color": 108, "linestyl": 108, "style": [108, 131], "line": [108, 110, 116], "upper": 108, "bound": 108, "axi": 108, "605": 108, "critic": [108, 128], "chi2": 108, "cl": 108, "right": [108, 112], "176": 108, "inch": 108, "388": 108, "706": 108, "abov": [108, 112, 114, 133], "352": 108, "piecewiselinearlr": [109, 110], "progressbar": [109, 110], "graphnetearlystop": [109, 110], "mseloss": [109, 112], "rmseloss": [109, 112], "logcoshloss": [109, 112], "crossentropyloss": [109, 112], "binarycrossentropyloss": [109, 112], "logcmk": [109, 112], "vonmisesfisherloss": [109, 112], "vonmisesfisher2dloss": [109, 112], "euclideandistanceloss": [109, 112], "vonmisesfisher3dloss": [109, 112], "collator_sequence_bucklet": [109, 113], "make_dataload": [109, 113], "make_train_validation_dataload": [109, 113], "get_predict": [109, 113], "save_result": [109, 113], "save_select": [109, 113], "uniform": [109, 114], "bjoernlow": [109, 114], "mileston": 110, "last_epoch": 110, "_lrschedul": 110, "linearli": 110, "closest": 110, "vice": 110, "versa": 110, "wrap": [110, 120, 121], "stdout": 110, "get_lr": 110, "refresh_r": 110, "process_posit": 110, "tqdmprogressbar": 110, "progress": 110, "bar": 110, "customis": 110, "init_validation_tqdm": 110, "init_predict_tqdm": 110, "init_test_tqdm": 110, "init_train_tqdm": 110, "get_metr": 110, "on_train_epoch_start": 110, "previou": 110, "behaviour": 110, "on_train_epoch_end": 110, "don": [110, 133], "duplciat": 110, "save_dir": 110, "earlystop": 110, "earli": [110, 116], "keyword": [110, 118, 123], "graphnet_model": 110, "on_validation_end": 110, "on_fit_end": 110, "runtim": [111, 133], "azimuth_kei": 111, "zenith_kei": 111, "access": [111, 133], "azimiuth": 111, "return_el": 112, "elementwis": 112, "squar": 112, "root": [112, 133], "cosh": 112, "small": 112, "cross": 112, "entropi": 112, "num_class": 112, "softmax": 112, "ed": 112, "mit": 112, "licens": 112, "copyright": 112, "2019": 112, "ryabinin": 112, "permiss": 112, "herebi": 112, "person": 112, "copi": 112, "document": 112, "deal": 112, "modifi": 112, "publish": 112, "sublicens": 112, "sell": 112, "permit": 112, "whom": 112, "furnish": 112, "so": [112, 133], "condit": 112, "shall": 112, "substanti": 112, "portion": 112, "THE": 112, "AS": 112, "warranti": 112, "OF": 112, "kind": 112, "OR": 112, "impli": 112, "BUT": 112, "TO": 112, "merchant": 112, "FOR": 112, "particular": [112, 131], "AND": 112, "noninfring": 112, "IN": 112, "NO": 112, "holder": 112, "BE": 112, "liabl": 112, "claim": 112, "damag": 112, "liabil": 112, "action": 112, "contract": 112, "tort": 112, "aris": 112, "WITH": 112, "_____________________": 112, "mryab": 112, "vmf_loss": 112, "master": 112, "py": [112, 133], "bessel": 112, "exponenti": 112, "ditto": 112, "iv": 112, "1812": 112, "04616": 112, "spite": 112, "suggest": 112, "sec": 112, "paper": 112, "correct": 112, "static": [112, 131], "ctx": 112, "grad_output": 112, "von": 112, "mise": 112, "fisher": 112, "log_cmk_exact": 112, "c_": 112, "exactli": [112, 128], "log_cmk_approx": 112, "approx": 112, "minu": 112, "sign": 112, "log_cmk": 112, "kappa_switch": 112, "diverg": 112, "700": 112, "float64": 112, "precis": 112, "unaccur": 112, "switch": 112, "batch_split": 113, "bucket": 113, "cut": 113, "mini": 113, "explicitli": [113, 118, 123], "alwai": 113, "respect": 113, "database_indic": 113, "test_siz": 113, "node_level": 113, "tag": [113, 131, 133], "archiv": 113, "file_path": 113, "csv": [113, 120], "uniformweightfitt": 114, "bin": 114, "db_count_norm": 114, "privat": 114, "_fit_weight": 114, "sql": 114, "desir": [114, 126], "np": 114, "happen": 114, "x_low": 114, "wherea": 114, "curv": 114, "base_config": [115, 117], "dataset_config": [115, 117], "training_config": [115, 117], "argumentpars": [115, 116], "rename_state_dict_entri": [115, 125], "is_gcd_fil": [115, 126], "is_i3_fil": [115, 126], "has_extens": [115, 126], "find_i3_fil": [115, 126], "has_icecube_packag": [115, 127], "has_torch_packag": [115, 127], "has_pisa_packag": [115, 127], "requires_icecub": [115, 127], "repeatfilt": [115, 128], "eps_lik": [115, 129], "consist": [116, 128, 131], "cli": 116, "pop_default": 116, "usag": 116, "command": [116, 133], "standard_argu": 116, "training_example_data_sqlit": 116, "patienc": 116, "narg": 116, "example_energy_reconstruction_model": 116, "num": 116, "fetch": 116, "with_standard_argu": 116, "baseconfig": [117, 118, 119, 120, 121, 123], "get_all_argument_valu": [117, 118], "save_dataset_config": [117, 120], "datasetconfigsavermeta": [117, 120], "datasetconfigsaverabcmeta": [117, 120], "save_model_config": [117, 121], "modelconfigsavermeta": [117, 121], "modelconfigsaverabc": [117, 121], "traverse_and_appli": [117, 122], "list_all_submodul": [117, 122], "get_all_grapnet_class": [117, 122], "is_graphnet_modul": [117, 122], "is_graphnet_class": [117, 122], "get_graphnet_class": [117, 122], "trainingconfig": [117, 123], "basemodel": [118, 120, 121], "validationerror": [118, 123], "pydantic_cor": [118, 123], "dump": [118, 120, 121], "yaml": [118, 119], "as_dict": [118, 120, 121], "model_computed_field": [118, 120, 121, 123], "classvar": [118, 120, 121, 123], "computedfieldinfo": [118, 120, 121, 123], "configdict": [118, 120, 121, 123], "conform": [118, 120, 121, 123], "pydant": [118, 120, 121, 123], "model_field": [118, 120, 121, 123], "fieldinfo": [118, 120, 121, 123], "metadata": [118, 120, 121, 123], "replac": [118, 120, 121, 123, 125], "__fields__": [118, 120, 121, 123], "v1": [118, 120, 121, 123, 133], "re": [119, 133], "save_config": 119, "dataconfig": 120, "transpar": [120, 121, 131], "reproduc": [120, 121], "session": [120, 121], "anoth": [120, 121], "still": 120, "train_select": 120, "unambigu": [120, 121], "annot": [120, 121, 123], "nonetyp": 120, "init_fn": [120, 121], "__init__": [120, 121, 133], "metaclass": [120, 121], "abcmeta": [120, 121], "datasetconfigsav": 120, "trainabl": 121, "hyperparamet": 121, "thu": 121, "modelconfigsav": 121, "fn_kwarg": 122, "structur": 122, "moduletyp": 122, "grapnet": 122, "lookup": 122, "transit": 125, "old_phras": 125, "new_phras": 125, "deepcopi": 125, "who": 125, "renam": 125, "phrase": 125, "system": [126, 133], "filenam": 126, "dir": 126, "test_funct": 127, "repeat": 128, "nb_repeats_allow": 128, "record": 128, "logrecord": 128, "clear": 128, "intuit": 128, "composit": 128, "loggeradapt": 128, "clash": 128, "setlevel": 128, "deleg": 128, "msg": 128, "warn": 128, "info": [128, 133], "debug": 128, "warning_onc": 128, "onc": 128, "handler": 128, "file_handl": 128, "filehandl": 128, "stream_handl": 128, "streamhandl": 128, "assort": 129, "ep": 129, "api": 130, "To": [131, 133], "sure": [131, 133], "smooth": 131, "guidelin": 131, "guid": 131, "encourag": 131, "contributor": 131, "discuss": 131, "bug": 131, "anyth": 131, "describ": 131, "would": 131, "yourself": 131, "ownership": 131, "prioriti": 131, "situat": 131, "lot": 131, "effort": 131, "go": 131, "outsid": 131, "scope": 131, "better": 131, "fork": 131, "repo": 131, "dedic": 131, "branch": [131, 133], "repositori": 131, "own": [131, 133], "autom": 131, "review": 131, "pep8": 131, "docstr": 131, "googl": 131, "hint": 131, "adher": 131, "pep": 131, "pylint": 131, "flake8": 131, "black": 131, "well": 131, "recommend": [131, 133], "mypi": 131, "pydocstyl": 131, "docformatt": 131, "commit": 131, "hook": 131, "instal": 131, "pip": [131, 133], "Then": 131, "everytim": 131, "pep257": 131, "concept": 131, "ljvmiranda921": 131, "io": 131, "notebook": 131, "2018": 131, "06": 131, "21": 131, "precommit": 131, "virtual": 133, "anaconda": 133, "prove": 133, "instruct": 133, "want": 133, "part": 133, "achiev": 133, "bash": 133, "shell": 133, "cvmf": 133, "opensciencegrid": 133, "py3": 133, "v4": 133, "sh": 133, "rhel_7_x86_64": 133, "metaproject": 133, "env": 133, "alia": 133, "script": 133, "everi": 133, "With": 133, "now": 133, "geometr": 133, "won": 133, "later": 133, "torch_cpu": 133, "txt": 133, "torch_gpu": 133, "unix": 133, "git": 133, "clone": 133, "usernam": 133, "cd": 133, "conda": 133, "gcc_linux": 133, "gxx_linux": 133, "libgcc": 133, "cudatoolkit": 133, "11": 133, "forg": 133, "box": 133, "compil": 133, "gcc": 133, "date": 133, "possibli": 133, "cuda": 133, "toolkit": 133, "recent": 133, "omit": 133, "newer": 133, "export": 133, "ld_library_path": 133, "anaconda3": 133, "miniconda3": 133, "bashrc": 133, "librari": 133, "rm": 133, "asogaard": 133, "latest": 133, "dc423315742c": 133, "01_icetrai": 133, "01_convert_i3_fil": 133, "2023": 133, "01": 133, "24": 133, "41": 133, "27": 133, "graphnet_20230124": 133, "134127": 133, "46": 133, "convert_i3_fil": 133, "ic86": 133, "thread": 133, "00": 133, "79": 133, "26": 133, "413": 133, "88it": 133, "specialis": 133, "push": 133, "vx": 133}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [58, 0, 0, "-", "deployment"], [67, 0, 0, "-", "exceptions"], [69, 0, 0, "-", "models"], [106, 0, 0, "-", "pisa"], [109, 0, 0, "-", "training"], [115, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "dataclasses"], [6, 0, 0, "-", "dataconverter"], [7, 0, 0, "-", "dataloader"], [8, 0, 0, "-", "datamodule"], [9, 0, 0, "-", "dataset"], [15, 0, 0, "-", "extractors"], [38, 0, 0, "-", "parquet"], [40, 0, 0, "-", "pipeline"], [41, 0, 0, "-", "pre_configured"], [43, 0, 0, "-", "readers"], [47, 0, 0, "-", "sqlite"], [49, 0, 0, "-", "utilities"], [54, 0, 0, "-", "writers"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.dataclasses": [[5, 1, 1, "", "I3FileSet"], [5, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_files"], [5, 2, 1, "", "modules"], [5, 2, 1, "", "output_folder"]], "graphnet.data.dataconverter": [[6, 1, 1, "", "DataConverter"], [6, 4, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[6, 3, 1, "", "get_map_function"], [6, 3, 1, "", "merge_files"]], "graphnet.data.dataloader": [[7, 1, 1, "", "DataLoader"], [7, 4, 1, "", "collate_fn"], [7, 4, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[7, 3, 1, "", "from_dataset_config"]], "graphnet.data.datamodule": [[8, 1, 1, "", "GraphNeTDataModule"]], "graphnet.data.datamodule.GraphNeTDataModule": [[8, 3, 1, "", "prepare_data"], [8, 3, 1, "", "setup"], [8, 3, 1, "", "teardown"], [8, 5, 1, "", "test_dataloader"], [8, 5, 1, "", "train_dataloader"], [8, 5, 1, "", "val_dataloader"]], "graphnet.data.dataset": [[10, 0, 0, "-", "dataset"], [11, 0, 0, "-", "parquet"], [13, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[10, 1, 1, "", "Dataset"], [10, 1, 1, "", "EnsembleDataset"], [10, 4, 1, "", "load_module"], [10, 4, 1, "", "parse_graph_definition"], [10, 4, 1, "", "parse_labels"]], "graphnet.data.dataset.dataset.Dataset": [[10, 3, 1, "", "add_label"], [10, 3, 1, "", "concatenate"], [10, 3, 1, "", "from_config"], [10, 5, 1, "", "path"], [10, 3, 1, "", "query_table"], [10, 5, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[12, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[12, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[12, 3, 1, "", "query_table"]], "graphnet.data.dataset.sqlite": [[14, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[14, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[14, 3, 1, "", "query_table"]], "graphnet.data.extractors": [[16, 0, 0, "-", "combine_extractors"], [17, 0, 0, "-", "extractor"], [18, 0, 0, "-", "icecube"], [36, 0, 0, "-", "internal"]], "graphnet.data.extractors.combine_extractors": [[16, 1, 1, "", "CombinedExtractor"]], "graphnet.data.extractors.extractor": [[17, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[17, 5, 1, "", "name"]], "graphnet.data.extractors.icecube": [[19, 0, 0, "-", "i3extractor"], [20, 0, 0, "-", "i3featureextractor"], [21, 0, 0, "-", "i3genericextractor"], [22, 0, 0, "-", "i3hybridrecoextractor"], [23, 0, 0, "-", "i3ntmuonlabelsextractor"], [24, 0, 0, "-", "i3particleextractor"], [25, 0, 0, "-", "i3pisaextractor"], [26, 0, 0, "-", "i3quesoextractor"], [27, 0, 0, "-", "i3retroextractor"], [28, 0, 0, "-", "i3splinempeextractor"], [29, 0, 0, "-", "i3truthextractor"], [30, 0, 0, "-", "i3tumextractor"], [31, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[19, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[19, 3, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[20, 1, 1, "", "I3FeatureExtractor"], [20, 1, 1, "", "I3FeatureExtractorIceCube86"], [20, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [20, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [20, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[21, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[22, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[23, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[24, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[25, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[26, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[27, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[28, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[29, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[30, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[32, 0, 0, "-", "collections"], [33, 0, 0, "-", "frames"], [34, 0, 0, "-", "i3_filters"], [35, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[32, 4, 1, "", "flatten_nested_dictionary"], [32, 4, 1, "", "serialise"], [32, 4, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[33, 4, 1, "", "frame_is_montecarlo"], [33, 4, 1, "", "frame_is_noise"], [33, 4, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[34, 1, 1, "", "I3Filter"], [34, 1, 1, "", "I3FilterMask"], [34, 1, 1, "", "NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[35, 4, 1, "", "break_cyclic_recursion"], [35, 4, 1, "", "cast_object_to_pure_python"], [35, 4, 1, "", "cast_pulse_series_to_pure_python"], [35, 4, 1, "", "get_member_variables"], [35, 4, 1, "", "is_boost_class"], [35, 4, 1, "", "is_boost_enum"], [35, 4, 1, "", "is_icecube_class"], [35, 4, 1, "", "is_method"], [35, 4, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[37, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[37, 1, 1, "", "ParquetExtractor"]], "graphnet.data.parquet": [[39, 0, 0, "-", "deprecated_methods"]], "graphnet.data.parquet.deprecated_methods": [[39, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.pipeline": [[40, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.pre_configured": [[42, 0, 0, "-", "dataconverters"]], "graphnet.data.pre_configured.dataconverters": [[42, 1, 1, "", "I3ToParquetConverter"], [42, 1, 1, "", "I3ToSQLiteConverter"], [42, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.readers": [[44, 0, 0, "-", "graphnet_file_reader"], [45, 0, 0, "-", "i3reader"], [46, 0, 0, "-", "internal_parquet_reader"]], "graphnet.data.readers.graphnet_file_reader": [[44, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[44, 5, 1, "", "accepted_extractors"], [44, 5, 1, "", "accepted_file_extensions"], [44, 5, 1, "", "extracor_names"], [44, 3, 1, "", "find_files"], [44, 3, 1, "", "set_extractors"], [44, 3, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[45, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[45, 3, 1, "", "find_files"]], "graphnet.data.readers.internal_parquet_reader": [[46, 1, 1, "", "ParquetReader"]], "graphnet.data.readers.internal_parquet_reader.ParquetReader": [[46, 3, 1, "", "find_files"]], "graphnet.data.sqlite": [[48, 0, 0, "-", "deprecated_methods"]], "graphnet.data.sqlite.deprecated_methods": [[48, 1, 1, "", "SQLiteDataConverter"]], "graphnet.data.utilities": [[50, 0, 0, "-", "parquet_to_sqlite"], [51, 0, 0, "-", "random"], [52, 0, 0, "-", "sqlite_utilities"], [53, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.random": [[51, 4, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[52, 4, 1, "", "attach_index"], [52, 4, 1, "", "create_table"], [52, 4, 1, "", "create_table_and_save_to_sql"], [52, 4, 1, "", "database_exists"], [52, 4, 1, "", "database_table_exists"], [52, 4, 1, "", "get_primary_keys"], [52, 4, 1, "", "query_database"], [52, 4, 1, "", "run_sql_code"], [52, 4, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[53, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[53, 3, 1, "", "resolve"]], "graphnet.data.writers": [[55, 0, 0, "-", "graphnet_writer"], [56, 0, 0, "-", "parquet_writer"], [57, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[55, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[55, 5, 1, "", "expects_merged_dataframes"], [55, 5, 1, "", "file_extension"], [55, 3, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[56, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[56, 3, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[57, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[57, 3, 1, "", "merge_files"]], "graphnet.deployment": [[59, 0, 0, "-", "deployer"], [60, 0, 0, "-", "deployment_module"]], "graphnet.deployment.deployer": [[59, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[59, 3, 1, "", "run"]], "graphnet.deployment.deployment_module": [[60, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.icecube": [[64, 0, 0, "-", "cleaning_module"], [66, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[64, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.inference_module": [[66, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[68, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[68, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[70, 0, 0, "-", "coarsening"], [71, 0, 0, "-", "components"], [75, 0, 0, "-", "detector"], [79, 0, 0, "-", "gnn"], [87, 0, 0, "-", "graphs"], [96, 0, 0, "-", "model"], [97, 0, 0, "-", "rnn"], [99, 0, 0, "-", "standard_averaged_model"], [100, 0, 0, "-", "standard_model"], [101, 0, 0, "-", "task"], [105, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[70, 1, 1, "", "AttributeCoarsening"], [70, 1, 1, "", "Coarsening"], [70, 1, 1, "", "CustomDOMCoarsening"], [70, 1, 1, "", "DOMAndTimeWindowCoarsening"], [70, 1, 1, "", "DOMCoarsening"], [70, 4, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[70, 3, 1, "", "forward"], [70, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[72, 0, 0, "-", "embedding"], [73, 0, 0, "-", "layers"], [74, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[72, 1, 1, "", "FourierEncoder"], [72, 1, 1, "", "SinusoidalPosEmb"], [72, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[72, 3, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[72, 3, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[72, 3, 1, "", "forward"]], "graphnet.models.components.layers": [[73, 1, 1, "", "Attention_rel"], [73, 1, 1, "", "Block"], [73, 1, 1, "", "Block_rel"], [73, 1, 1, "", "DropPath"], [73, 1, 1, "", "DynEdgeConv"], [73, 1, 1, "", "DynTrans"], [73, 1, 1, "", "EdgeConvTito"], [73, 1, 1, "", "Mlp"]], "graphnet.models.components.layers.Attention_rel": [[73, 3, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[73, 3, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[73, 3, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[73, 3, 1, "", "extra_repr"], [73, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[73, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[73, 3, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[73, 3, 1, "", "forward"], [73, 3, 1, "", "message"], [73, 3, 1, "", "reset_parameters"]], "graphnet.models.components.layers.Mlp": [[73, 3, 1, "", "forward"]], "graphnet.models.components.pool": [[74, 4, 1, "", "group_by"], [74, 4, 1, "", "group_pulses_to_dom"], [74, 4, 1, "", "group_pulses_to_pmt"], [74, 4, 1, "", "min_pool"], [74, 4, 1, "", "min_pool_x"], [74, 4, 1, "", "std_pool"], [74, 4, 1, "", "std_pool_x"], [74, 4, 1, "", "sum_pool"], [74, 4, 1, "", "sum_pool_and_distribute"], [74, 4, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[76, 0, 0, "-", "detector"], [77, 0, 0, "-", "icecube"], [78, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[76, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[76, 3, 1, "", "feature_map"], [76, 3, 1, "", "forward"], [76, 5, 1, "", "geometry_table"], [76, 5, 1, "", "sensor_index_name"], [76, 5, 1, "", "sensor_position_names"], [76, 5, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[77, 1, 1, "", "IceCube86"], [77, 1, 1, "", "IceCubeDeepCore"], [77, 1, 1, "", "IceCubeKaggle"], [77, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[77, 3, 1, "", "feature_map"], [77, 2, 1, "", "geometry_table_path"], [77, 2, 1, "", "sensor_id_column"], [77, 2, 1, "", "string_id_column"], [77, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[77, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[77, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[77, 3, 1, "", "feature_map"], [77, 2, 1, "", "geometry_table_path"], [77, 2, 1, "", "sensor_id_column"], [77, 2, 1, "", "string_id_column"], [77, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[78, 1, 1, "", "ORCA150"], [78, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.ORCA150": [[78, 3, 1, "", "feature_map"], [78, 2, 1, "", "geometry_table_path"], [78, 2, 1, "", "sensor_id_column"], [78, 2, 1, "", "string_id_column"], [78, 2, 1, "", "xyz"]], "graphnet.models.gnn": [[80, 0, 0, "-", "RNN_tito"], [81, 0, 0, "-", "convnet"], [82, 0, 0, "-", "dynedge"], [83, 0, 0, "-", "dynedge_jinst"], [84, 0, 0, "-", "dynedge_kaggle_tito"], [85, 0, 0, "-", "gnn"], [86, 0, 0, "-", "icemix"]], "graphnet.models.gnn.RNN_tito": [[80, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[80, 3, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[81, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[81, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[82, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[82, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[83, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[83, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[84, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[84, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[85, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[85, 3, 1, "", "forward"], [85, 5, 1, "", "nb_inputs"], [85, 5, 1, "", "nb_outputs"]], "graphnet.models.gnn.icemix": [[86, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[86, 3, 1, "", "forward"], [86, 3, 1, "", "no_weight_decay"]], "graphnet.models.graphs": [[88, 0, 0, "-", "edges"], [91, 0, 0, "-", "graph_definition"], [92, 0, 0, "-", "graphs"], [93, 0, 0, "-", "nodes"], [95, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[89, 0, 0, "-", "edges"], [90, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[89, 1, 1, "", "EdgeDefinition"], [89, 1, 1, "", "EuclideanEdges"], [89, 1, 1, "", "KNNEdges"], [89, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[89, 3, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[90, 1, 1, "", "MinkowskiKNNEdges"], [90, 4, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[91, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[91, 3, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[92, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[94, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[94, 1, 1, "", "IceMixNodes"], [94, 1, 1, "", "NodeAsDOMTimeSeries"], [94, 1, 1, "", "NodeDefinition"], [94, 1, 1, "", "NodesAsPulses"], [94, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[94, 3, 1, "", "forward"], [94, 5, 1, "", "nb_outputs"], [94, 3, 1, "", "set_number_of_inputs"], [94, 3, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[95, 4, 1, "", "cluster_summarize_with_percentiles"], [95, 4, 1, "", "gather_cluster_sequence"], [95, 4, 1, "", "ice_transparency"], [95, 4, 1, "", "identify_indices"], [95, 4, 1, "", "lex_sort"]], "graphnet.models.model": [[96, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[96, 3, 1, "", "extra_repr"], [96, 3, 1, "", "extra_repr_recursive"], [96, 3, 1, "", "from_config"], [96, 3, 1, "", "load"], [96, 3, 1, "", "load_state_dict"], [96, 3, 1, "", "save"], [96, 3, 1, "", "save_state_dict"], [96, 3, 1, "", "set_verbose_print_recursively"], [96, 2, 1, "", "verbose_print"]], "graphnet.models.rnn": [[98, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[98, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[98, 3, 1, "", "clean_up_data_object"], [98, 3, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[99, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[99, 3, 1, "", "load_state_dict"], [99, 3, 1, "", "on_train_end"], [99, 3, 1, "", "optimizer_step"], [99, 3, 1, "", "training_step"], [99, 3, 1, "", "validation_step"]], "graphnet.models.standard_model": [[100, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[100, 3, 1, "", "compute_loss"], [100, 3, 1, "", "configure_optimizers"], [100, 3, 1, "", "fit"], [100, 3, 1, "", "forward"], [100, 3, 1, "", "inference"], [100, 3, 1, "", "predict"], [100, 3, 1, "", "predict_as_dataframe"], [100, 5, 1, "", "prediction_labels"], [100, 3, 1, "", "shared_step"], [100, 5, 1, "", "target_labels"], [100, 3, 1, "", "train"], [100, 3, 1, "", "training_step"], [100, 3, 1, "", "validation_step"]], "graphnet.models.task": [[102, 0, 0, "-", "classification"], [103, 0, 0, "-", "reconstruction"], [104, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[102, 1, 1, "", "BinaryClassificationTask"], [102, 1, 1, "", "BinaryClassificationTaskLogits"], [102, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[102, 2, 1, "", "default_prediction_labels"], [102, 2, 1, "", "default_target_labels"], [102, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[102, 2, 1, "", "default_prediction_labels"], [102, 2, 1, "", "default_target_labels"], [102, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[103, 1, 1, "", "AzimuthReconstruction"], [103, 1, 1, "", "AzimuthReconstructionWithKappa"], [103, 1, 1, "", "DirectionReconstructionWithKappa"], [103, 1, 1, "", "EnergyReconstruction"], [103, 1, 1, "", "EnergyReconstructionWithPower"], [103, 1, 1, "", "EnergyReconstructionWithUncertainty"], [103, 1, 1, "", "EnergyTCReconstruction"], [103, 1, 1, "", "InelasticityReconstruction"], [103, 1, 1, "", "PositionReconstruction"], [103, 1, 1, "", "TimeReconstruction"], [103, 1, 1, "", "VertexReconstruction"], [103, 1, 1, "", "ZenithReconstruction"], [103, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[103, 2, 1, "", "default_prediction_labels"], [103, 2, 1, "", "default_target_labels"], [103, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[103, 2, 1, "", "default_prediction_labels"], [103, 2, 1, "", "default_target_labels"], [103, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[103, 2, 1, "", "default_prediction_labels"], [103, 2, 1, "", "default_target_labels"], [103, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[103, 2, 1, "", "default_prediction_labels"], [103, 2, 1, "", "default_target_labels"], [103, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[103, 2, 1, "", "default_prediction_labels"], [103, 2, 1, "", "default_target_labels"], [103, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[103, 2, 1, "", "default_prediction_labels"], [103, 2, 1, "", "default_target_labels"], [103, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[103, 2, 1, "", "default_prediction_labels"], [103, 2, 1, "", "default_target_labels"], [103, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[103, 2, 1, "", "default_prediction_labels"], [103, 2, 1, "", "default_target_labels"], [103, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[103, 2, 1, "", "default_prediction_labels"], [103, 2, 1, "", "default_target_labels"], [103, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[103, 2, 1, "", "default_prediction_labels"], [103, 2, 1, "", "default_target_labels"], [103, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[103, 2, 1, "", "default_prediction_labels"], [103, 2, 1, "", "default_target_labels"], [103, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[103, 2, 1, "", "default_prediction_labels"], [103, 2, 1, "", "default_target_labels"], [103, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[103, 2, 1, "", "default_prediction_labels"], [103, 2, 1, "", "default_target_labels"], [103, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[104, 1, 1, "", "IdentityTask"], [104, 1, 1, "", "LearnedTask"], [104, 1, 1, "", "StandardFlowTask"], [104, 1, 1, "", "StandardLearnedTask"], [104, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[104, 5, 1, "", "default_prediction_labels"], [104, 5, 1, "", "default_target_labels"], [104, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[104, 3, 1, "", "compute_loss"], [104, 3, 1, "", "forward"], [104, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[104, 3, 1, "", "compute_loss"], [104, 3, 1, "", "forward"], [104, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[104, 3, 1, "", "compute_loss"], [104, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[104, 5, 1, "", "default_prediction_labels"], [104, 5, 1, "", "default_target_labels"], [104, 3, 1, "", "inference"], [104, 5, 1, "", "nb_inputs"], [104, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[105, 4, 1, "", "array_to_sequence"], [105, 4, 1, "", "calculate_distance_matrix"], [105, 4, 1, "", "calculate_xyzt_homophily"], [105, 4, 1, "", "knn_graph_batch"]], "graphnet.pisa": [[107, 0, 0, "-", "fitting"], [108, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[107, 1, 1, "", "ContourFitter"], [107, 1, 1, "", "WeightFitter"], [107, 4, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[107, 3, 1, "", "fit_1d_contour"], [107, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[107, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[108, 4, 1, "", "plot_1D_contour"], [108, 4, 1, "", "plot_2D_contour"], [108, 4, 1, "", "read_entry"]], "graphnet.training": [[110, 0, 0, "-", "callbacks"], [111, 0, 0, "-", "labels"], [112, 0, 0, "-", "loss_functions"], [113, 0, 0, "-", "utils"], [114, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[110, 1, 1, "", "GraphnetEarlyStopping"], [110, 1, 1, "", "PiecewiseLinearLR"], [110, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[110, 3, 1, "", "on_fit_end"], [110, 3, 1, "", "on_train_epoch_end"], [110, 3, 1, "", "on_validation_end"], [110, 3, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[110, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[110, 3, 1, "", "get_metrics"], [110, 3, 1, "", "init_predict_tqdm"], [110, 3, 1, "", "init_test_tqdm"], [110, 3, 1, "", "init_train_tqdm"], [110, 3, 1, "", "init_validation_tqdm"], [110, 3, 1, "", "on_train_epoch_end"], [110, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[111, 1, 1, "", "Direction"], [111, 1, 1, "", "Label"]], "graphnet.training.labels.Label": [[111, 5, 1, "", "key"]], "graphnet.training.loss_functions": [[112, 1, 1, "", "BinaryCrossEntropyLoss"], [112, 1, 1, "", "CrossEntropyLoss"], [112, 1, 1, "", "EuclideanDistanceLoss"], [112, 1, 1, "", "LogCMK"], [112, 1, 1, "", "LogCoshLoss"], [112, 1, 1, "", "LossFunction"], [112, 1, 1, "", "MSELoss"], [112, 1, 1, "", "RMSELoss"], [112, 1, 1, "", "VonMisesFisher2DLoss"], [112, 1, 1, "", "VonMisesFisher3DLoss"], [112, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[112, 3, 1, "", "backward"], [112, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[112, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[112, 3, 1, "", "log_cmk"], [112, 3, 1, "", "log_cmk_approx"], [112, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[113, 4, 1, "", "collate_fn"], [113, 1, 1, "", "collator_sequence_buckleting"], [113, 4, 1, "", "get_predictions"], [113, 4, 1, "", "make_dataloader"], [113, 4, 1, "", "make_train_validation_dataloader"], [113, 4, 1, "", "save_results"], [113, 4, 1, "", "save_selection"]], "graphnet.training.weight_fitting": [[114, 1, 1, "", "BjoernLow"], [114, 1, 1, "", "Uniform"], [114, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[114, 3, 1, "", "fit"]], "graphnet.utilities": [[116, 0, 0, "-", "argparse"], [117, 0, 0, "-", "config"], [124, 0, 0, "-", "decorators"], [125, 0, 0, "-", "deprecation_tools"], [126, 0, 0, "-", "filesys"], [127, 0, 0, "-", "imports"], [128, 0, 0, "-", "logging"], [129, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[116, 1, 1, "", "ArgumentParser"], [116, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[116, 2, 1, "", "standard_arguments"], [116, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[116, 3, 1, "", "contains"], [116, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[118, 0, 0, "-", "base_config"], [119, 0, 0, "-", "configurable"], [120, 0, 0, "-", "dataset_config"], [121, 0, 0, "-", "model_config"], [122, 0, 0, "-", "parsing"], [123, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[118, 1, 1, "", "BaseConfig"], [118, 4, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[118, 3, 1, "", "as_dict"], [118, 3, 1, "", "dump"], [118, 3, 1, "", "load"], [118, 2, 1, "", "model_computed_fields"], [118, 2, 1, "", "model_config"], [118, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[119, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[119, 5, 1, "", "config"], [119, 3, 1, "", "from_config"], [119, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[120, 1, 1, "", "DatasetConfig"], [120, 1, 1, "", "DatasetConfigSaverABCMeta"], [120, 1, 1, "", "DatasetConfigSaverMeta"], [120, 4, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[120, 3, 1, "", "as_dict"], [120, 2, 1, "", "features"], [120, 2, 1, "", "graph_definition"], [120, 2, 1, "", "index_column"], [120, 2, 1, "", "labels"], [120, 2, 1, "", "loss_weight_column"], [120, 2, 1, "", "loss_weight_default_value"], [120, 2, 1, "", "loss_weight_table"], [120, 2, 1, "", "model_computed_fields"], [120, 2, 1, "", "model_config"], [120, 2, 1, "", "model_fields"], [120, 2, 1, "", "node_truth"], [120, 2, 1, "", "node_truth_table"], [120, 2, 1, "", "path"], [120, 2, 1, "", "pulsemaps"], [120, 2, 1, "", "seed"], [120, 2, 1, "", "selection"], [120, 2, 1, "", "string_selection"], [120, 2, 1, "", "truth"], [120, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[121, 1, 1, "", "ModelConfig"], [121, 1, 1, "", "ModelConfigSaverABC"], [121, 1, 1, "", "ModelConfigSaverMeta"], [121, 4, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[121, 2, 1, "", "arguments"], [121, 3, 1, "", "as_dict"], [121, 2, 1, "", "class_name"], [121, 2, 1, "", "model_computed_fields"], [121, 2, 1, "", "model_config"], [121, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[122, 4, 1, "", "get_all_grapnet_classes"], [122, 4, 1, "", "get_graphnet_classes"], [122, 4, 1, "", "is_graphnet_class"], [122, 4, 1, "", "is_graphnet_module"], [122, 4, 1, "", "list_all_submodules"], [122, 4, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[123, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[123, 2, 1, "", "dataloader"], [123, 2, 1, "", "early_stopping_patience"], [123, 2, 1, "", "fit"], [123, 2, 1, "", "model_computed_fields"], [123, 2, 1, "", "model_config"], [123, 2, 1, "", "model_fields"], [123, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[125, 4, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[126, 4, 1, "", "find_i3_files"], [126, 4, 1, "", "has_extension"], [126, 4, 1, "", "is_gcd_file"], [126, 4, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[127, 4, 1, "", "has_icecube_package"], [127, 4, 1, "", "has_pisa_package"], [127, 4, 1, "", "has_torch_package"], [127, 4, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[128, 1, 1, "", "Logger"], [128, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[128, 3, 1, "", "critical"], [128, 3, 1, "", "debug"], [128, 3, 1, "", "error"], [128, 5, 1, "", "file_handlers"], [128, 5, 1, "", "handlers"], [128, 3, 1, "", "info"], [128, 3, 1, "", "setLevel"], [128, 5, 1, "", "stream_handlers"], [128, 3, 1, "", "warning"], [128, 3, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[128, 3, 1, "", "filter"], [128, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[129, 4, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 132], "impact": [0, 132], "usag": [0, 132], "acknowledg": [0, 132], "api": 1, "constant": [2, 4], "data": 3, "dataclass": 5, "dataconvert": [6, 42], "dataload": 7, "datamodul": 8, "dataset": [9, 10], "parquet": [11, 38], "parquet_dataset": 12, "sqlite": [13, 47], "sqlite_dataset": 14, "extractor": [15, 17], "combine_extractor": 16, "icecub": [18, 63, 77], "i3extractor": 19, "i3featureextractor": 20, "i3genericextractor": 21, "i3hybridrecoextractor": 22, "i3ntmuonlabelsextractor": 23, "i3particleextractor": 24, "i3pisaextractor": 25, "i3quesoextractor": 26, "i3retroextractor": 27, "i3splinempeextractor": 28, "i3truthextractor": 29, "i3tumextractor": 30, "util": [31, 49, 95, 105, 113, 115], "collect": 32, "frame": 33, "i3_filt": 34, "type": 35, "intern": 36, "parquet_extractor": 37, "deprecated_method": [39, 48, 62], "pipelin": 40, "pre_configur": 41, "reader": 43, "graphnet_file_read": 44, "i3read": 45, "internal_parquet_read": 46, "parquet_to_sqlit": 50, "random": 51, "sqlite_util": 52, "string_selection_resolv": 53, "writer": 54, "graphnet_writ": 55, "parquet_writ": 56, "sqlite_writ": 57, "deploy": [58, 59], "deployment_modul": 60, "i3modul": 61, "cleaning_modul": 64, "i3deploy": 65, "inference_modul": 66, "except": [67, 68], "model": [69, 96], "coarsen": 70, "compon": 71, "embed": 72, "layer": 73, "pool": 74, "detector": [75, 76], "prometheu": 78, "gnn": [79, 85], "rnn_tito": 80, "convnet": 81, "dynedg": 82, "dynedge_jinst": 83, "dynedge_kaggle_tito": 84, "icemix": 86, "graph": [87, 92], "edg": [88, 89], "minkowski": 90, "graph_definit": 91, "node": [93, 94], "rnn": 97, "node_rnn": 98, "standard_averaged_model": 99, "standard_model": 100, "task": [101, 104], "classif": 102, "reconstruct": 103, "pisa": 106, "fit": 107, "plot": 108, "train": 109, "callback": 110, "label": 111, "loss_funct": 112, "weight_fit": 114, "argpars": 116, "config": 117, "base_config": 118, "configur": 119, "dataset_config": 120, "model_config": 121, "pars": 122, "training_config": 123, "decor": 124, "deprecation_tool": 125, "filesi": 126, "import": 127, "log": 128, "math": 129, "src": 130, "contribut": 131, "github": 131, "issu": 131, "pull": 131, "request": 131, "convent": 131, "code": 131, "qualiti": 131, "instal": 133, "icetrai": 133, "stand": 133, "alon": 133, "run": 133, "docker": 133}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"], [132, "about"]], "Impact": [[0, "impact"], [132, "impact"]], "Usage": [[0, "usage"], [132, "usage"]], "Acknowledgements": [[0, "acknowledgements"], [132, "acknowledgements"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "dataclasses": [[5, "module-graphnet.data.dataclasses"]], "dataconverter": [[6, "module-graphnet.data.dataconverter"]], "dataloader": [[7, "module-graphnet.data.dataloader"]], "datamodule": [[8, "module-graphnet.data.datamodule"]], "dataset": [[9, "module-graphnet.data.dataset"], [10, "module-graphnet.data.dataset.dataset"]], "parquet": [[11, "module-graphnet.data.dataset.parquet"], [38, "module-graphnet.data.parquet"]], "parquet_dataset": [[12, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "sqlite": [[13, "module-graphnet.data.dataset.sqlite"], [47, "module-graphnet.data.sqlite"]], "sqlite_dataset": [[14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "extractors": [[15, "module-graphnet.data.extractors"]], "combine_extractors": [[16, "module-graphnet.data.extractors.combine_extractors"]], "extractor": [[17, "module-graphnet.data.extractors.extractor"]], "icecube": [[18, "module-graphnet.data.extractors.icecube"], [63, "icecube"], [77, "module-graphnet.models.detector.icecube"]], "i3extractor": [[19, "module-graphnet.data.extractors.icecube.i3extractor"]], "i3featureextractor": [[20, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor": [[21, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3hybridrecoextractor": [[22, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3ntmuonlabelsextractor": [[23, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor": [[24, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor": [[25, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor": [[26, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3retroextractor": [[27, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeextractor": [[28, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor": [[29, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor": [[30, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "utilities": [[31, "module-graphnet.data.extractors.icecube.utilities"], [49, "module-graphnet.data.utilities"], [115, "module-graphnet.utilities"]], "collections": [[32, "module-graphnet.data.extractors.icecube.utilities.collections"]], "frames": [[33, "module-graphnet.data.extractors.icecube.utilities.frames"]], "i3_filters": [[34, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "types": [[35, "module-graphnet.data.extractors.icecube.utilities.types"]], "internal": [[36, "module-graphnet.data.extractors.internal"]], "parquet_extractor": [[37, "module-graphnet.data.extractors.internal.parquet_extractor"]], "deprecated_methods": [[39, "module-graphnet.data.parquet.deprecated_methods"], [48, "module-graphnet.data.sqlite.deprecated_methods"], [62, "deprecated-methods"]], "pipeline": [[40, "module-graphnet.data.pipeline"]], "pre_configured": [[41, "module-graphnet.data.pre_configured"]], "dataconverters": [[42, "module-graphnet.data.pre_configured.dataconverters"]], "readers": [[43, "module-graphnet.data.readers"]], "graphnet_file_reader": [[44, "module-graphnet.data.readers.graphnet_file_reader"]], "i3reader": [[45, "module-graphnet.data.readers.i3reader"]], "internal_parquet_reader": [[46, "module-graphnet.data.readers.internal_parquet_reader"]], "parquet_to_sqlite": [[50, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[51, "module-graphnet.data.utilities.random"]], "sqlite_utilities": [[52, "module-graphnet.data.utilities.sqlite_utilities"]], "string_selection_resolver": [[53, "module-graphnet.data.utilities.string_selection_resolver"]], "writers": [[54, "module-graphnet.data.writers"]], "graphnet_writer": [[55, "module-graphnet.data.writers.graphnet_writer"]], "parquet_writer": [[56, "module-graphnet.data.writers.parquet_writer"]], "sqlite_writer": [[57, "module-graphnet.data.writers.sqlite_writer"]], "deployment": [[58, "module-graphnet.deployment"]], "deployer": [[59, "module-graphnet.deployment.deployer"]], "deployment_module": [[60, "module-graphnet.deployment.deployment_module"]], "i3modules": [[61, "i3modules"]], "cleaning_module": [[64, "module-graphnet.deployment.icecube.cleaning_module"]], "i3deployer": [[65, "i3deployer"]], "inference_module": [[66, "module-graphnet.deployment.icecube.inference_module"]], "exceptions": [[67, "module-graphnet.exceptions"], [68, "module-graphnet.exceptions.exceptions"]], "models": [[69, "module-graphnet.models"]], "coarsening": [[70, "module-graphnet.models.coarsening"]], "components": [[71, "module-graphnet.models.components"]], "embedding": [[72, "module-graphnet.models.components.embedding"]], "layers": [[73, "module-graphnet.models.components.layers"]], "pool": [[74, "module-graphnet.models.components.pool"]], "detector": [[75, "module-graphnet.models.detector"], [76, "module-graphnet.models.detector.detector"]], "prometheus": [[78, "module-graphnet.models.detector.prometheus"]], "gnn": [[79, "module-graphnet.models.gnn"], [85, "module-graphnet.models.gnn.gnn"]], "RNN_tito": [[80, "module-graphnet.models.gnn.RNN_tito"]], "convnet": [[81, "module-graphnet.models.gnn.convnet"]], "dynedge": [[82, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[83, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedge_kaggle_tito": [[84, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "icemix": [[86, "module-graphnet.models.gnn.icemix"]], "graphs": [[87, "module-graphnet.models.graphs"], [92, "module-graphnet.models.graphs.graphs"]], "edges": [[88, "module-graphnet.models.graphs.edges"], [89, "module-graphnet.models.graphs.edges.edges"]], "minkowski": [[90, "module-graphnet.models.graphs.edges.minkowski"]], "graph_definition": [[91, "module-graphnet.models.graphs.graph_definition"]], "nodes": [[93, "module-graphnet.models.graphs.nodes"], [94, "module-graphnet.models.graphs.nodes.nodes"]], "utils": [[95, "module-graphnet.models.graphs.utils"], [105, "module-graphnet.models.utils"], [113, "module-graphnet.training.utils"]], "model": [[96, "module-graphnet.models.model"]], "rnn": [[97, "module-graphnet.models.rnn"]], "node_rnn": [[98, "module-graphnet.models.rnn.node_rnn"]], "standard_averaged_model": [[99, "module-graphnet.models.standard_averaged_model"]], "standard_model": [[100, "module-graphnet.models.standard_model"]], "task": [[101, "module-graphnet.models.task"], [104, "module-graphnet.models.task.task"]], "classification": [[102, "module-graphnet.models.task.classification"]], "reconstruction": [[103, "module-graphnet.models.task.reconstruction"]], "pisa": [[106, "module-graphnet.pisa"]], "fitting": [[107, "module-graphnet.pisa.fitting"]], "plotting": [[108, "module-graphnet.pisa.plotting"]], "training": [[109, "module-graphnet.training"]], "callbacks": [[110, "module-graphnet.training.callbacks"]], "labels": [[111, "module-graphnet.training.labels"]], "loss_functions": [[112, "module-graphnet.training.loss_functions"]], "weight_fitting": [[114, "module-graphnet.training.weight_fitting"]], "argparse": [[116, "module-graphnet.utilities.argparse"]], "config": [[117, "module-graphnet.utilities.config"]], "base_config": [[118, "module-graphnet.utilities.config.base_config"]], "configurable": [[119, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[120, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[121, "module-graphnet.utilities.config.model_config"]], "parsing": [[122, "module-graphnet.utilities.config.parsing"]], "training_config": [[123, "module-graphnet.utilities.config.training_config"]], "decorators": [[124, "module-graphnet.utilities.decorators"]], "deprecation_tools": [[125, "module-graphnet.utilities.deprecation_tools"]], "filesys": [[126, "module-graphnet.utilities.filesys"]], "imports": [[127, "module-graphnet.utilities.imports"]], "logging": [[128, "module-graphnet.utilities.logging"]], "maths": [[129, "module-graphnet.utilities.maths"]], "src": [[130, "src"]], "Contribute": [[131, "contribute"]], "GitHub issues": [[131, "github-issues"]], "Pull requests": [[131, "pull-requests"]], "Conventions": [[131, "conventions"]], "Code quality": [[131, "code-quality"]], "Install": [[133, "install"]], "Installing with IceTray": [[133, "installing-with-icetray"]], "Installing stand-alone": [[133, "installing-stand-alone"]], "Running in Docker": [[133, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.dataclasses"], [6, "module-graphnet.data.dataconverter"], [7, "module-graphnet.data.dataloader"], [8, "module-graphnet.data.datamodule"], [9, "module-graphnet.data.dataset"], [10, "module-graphnet.data.dataset.dataset"], [11, "module-graphnet.data.dataset.parquet"], [12, "module-graphnet.data.dataset.parquet.parquet_dataset"], [13, "module-graphnet.data.dataset.sqlite"], [14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"], [15, "module-graphnet.data.extractors"], [16, "module-graphnet.data.extractors.combine_extractors"], [17, "module-graphnet.data.extractors.extractor"], [18, "module-graphnet.data.extractors.icecube"], [19, "module-graphnet.data.extractors.icecube.i3extractor"], [20, "module-graphnet.data.extractors.icecube.i3featureextractor"], [21, "module-graphnet.data.extractors.icecube.i3genericextractor"], [22, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"], [23, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"], [24, "module-graphnet.data.extractors.icecube.i3particleextractor"], [25, "module-graphnet.data.extractors.icecube.i3pisaextractor"], [26, "module-graphnet.data.extractors.icecube.i3quesoextractor"], [27, "module-graphnet.data.extractors.icecube.i3retroextractor"], [28, "module-graphnet.data.extractors.icecube.i3splinempeextractor"], [29, "module-graphnet.data.extractors.icecube.i3truthextractor"], [30, "module-graphnet.data.extractors.icecube.i3tumextractor"], [31, "module-graphnet.data.extractors.icecube.utilities"], [32, "module-graphnet.data.extractors.icecube.utilities.collections"], [33, "module-graphnet.data.extractors.icecube.utilities.frames"], [34, "module-graphnet.data.extractors.icecube.utilities.i3_filters"], [35, "module-graphnet.data.extractors.icecube.utilities.types"], [36, "module-graphnet.data.extractors.internal"], [37, "module-graphnet.data.extractors.internal.parquet_extractor"], [38, "module-graphnet.data.parquet"], [39, "module-graphnet.data.parquet.deprecated_methods"], [40, "module-graphnet.data.pipeline"], [41, "module-graphnet.data.pre_configured"], [42, "module-graphnet.data.pre_configured.dataconverters"], [43, "module-graphnet.data.readers"], [44, "module-graphnet.data.readers.graphnet_file_reader"], [45, "module-graphnet.data.readers.i3reader"], [46, "module-graphnet.data.readers.internal_parquet_reader"], [47, "module-graphnet.data.sqlite"], [48, "module-graphnet.data.sqlite.deprecated_methods"], [49, "module-graphnet.data.utilities"], [50, "module-graphnet.data.utilities.parquet_to_sqlite"], [51, "module-graphnet.data.utilities.random"], [52, "module-graphnet.data.utilities.sqlite_utilities"], [53, "module-graphnet.data.utilities.string_selection_resolver"], [54, "module-graphnet.data.writers"], [55, "module-graphnet.data.writers.graphnet_writer"], [56, "module-graphnet.data.writers.parquet_writer"], [57, "module-graphnet.data.writers.sqlite_writer"], [58, "module-graphnet.deployment"], [59, "module-graphnet.deployment.deployer"], [60, "module-graphnet.deployment.deployment_module"], [64, "module-graphnet.deployment.icecube.cleaning_module"], [66, "module-graphnet.deployment.icecube.inference_module"], [67, "module-graphnet.exceptions"], [68, "module-graphnet.exceptions.exceptions"], [69, "module-graphnet.models"], [70, "module-graphnet.models.coarsening"], [71, "module-graphnet.models.components"], [72, "module-graphnet.models.components.embedding"], [73, "module-graphnet.models.components.layers"], [74, "module-graphnet.models.components.pool"], [75, "module-graphnet.models.detector"], [76, "module-graphnet.models.detector.detector"], [77, "module-graphnet.models.detector.icecube"], [78, "module-graphnet.models.detector.prometheus"], [79, "module-graphnet.models.gnn"], [80, "module-graphnet.models.gnn.RNN_tito"], [81, "module-graphnet.models.gnn.convnet"], [82, "module-graphnet.models.gnn.dynedge"], [83, "module-graphnet.models.gnn.dynedge_jinst"], [84, "module-graphnet.models.gnn.dynedge_kaggle_tito"], [85, "module-graphnet.models.gnn.gnn"], [86, "module-graphnet.models.gnn.icemix"], [87, "module-graphnet.models.graphs"], [88, "module-graphnet.models.graphs.edges"], [89, "module-graphnet.models.graphs.edges.edges"], [90, "module-graphnet.models.graphs.edges.minkowski"], [91, "module-graphnet.models.graphs.graph_definition"], [92, "module-graphnet.models.graphs.graphs"], [93, "module-graphnet.models.graphs.nodes"], [94, "module-graphnet.models.graphs.nodes.nodes"], [95, "module-graphnet.models.graphs.utils"], [96, "module-graphnet.models.model"], [97, "module-graphnet.models.rnn"], [98, "module-graphnet.models.rnn.node_rnn"], [99, "module-graphnet.models.standard_averaged_model"], [100, "module-graphnet.models.standard_model"], [101, "module-graphnet.models.task"], [102, "module-graphnet.models.task.classification"], [103, "module-graphnet.models.task.reconstruction"], [104, "module-graphnet.models.task.task"], [105, "module-graphnet.models.utils"], [106, "module-graphnet.pisa"], [107, "module-graphnet.pisa.fitting"], [108, "module-graphnet.pisa.plotting"], [109, "module-graphnet.training"], [110, "module-graphnet.training.callbacks"], [111, "module-graphnet.training.labels"], [112, "module-graphnet.training.loss_functions"], [113, "module-graphnet.training.utils"], [114, "module-graphnet.training.weight_fitting"], [115, "module-graphnet.utilities"], [116, "module-graphnet.utilities.argparse"], [117, "module-graphnet.utilities.config"], [118, "module-graphnet.utilities.config.base_config"], [119, "module-graphnet.utilities.config.configurable"], [120, "module-graphnet.utilities.config.dataset_config"], [121, "module-graphnet.utilities.config.model_config"], [122, "module-graphnet.utilities.config.parsing"], [123, "module-graphnet.utilities.config.training_config"], [124, "module-graphnet.utilities.decorators"], [125, "module-graphnet.utilities.deprecation_tools"], [126, "module-graphnet.utilities.filesys"], [127, "module-graphnet.utilities.imports"], [128, "module-graphnet.utilities.logging"], [129, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "i3fileset (class in graphnet.data.dataclasses)": [[5, "graphnet.data.dataclasses.I3FileSet"]], "settings (class in graphnet.data.dataclasses)": [[5, "graphnet.data.dataclasses.Settings"]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[5, "graphnet.data.dataclasses.I3FileSet.gcd_file"]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.gcd_file"]], "graphnet.data.dataclasses": [[5, "module-graphnet.data.dataclasses"]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[5, "graphnet.data.dataclasses.I3FileSet.i3_file"]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.i3_files"]], "modules (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.modules"]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.output_folder"]], "dataconverter (class in graphnet.data.dataconverter)": [[6, "graphnet.data.dataconverter.DataConverter"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[6, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[6, "module-graphnet.data.dataconverter"]], "init_global_index() (in module graphnet.data.dataconverter)": [[6, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[6, "graphnet.data.dataconverter.DataConverter.merge_files"]], "dataloader (class in graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.DataLoader"]], "collate_fn() (in module graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.collate_fn"]], "do_shuffle() (in module graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.do_shuffle"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[7, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "graphnet.data.dataloader": [[7, "module-graphnet.data.dataloader"]], "graphnetdatamodule (class in graphnet.data.datamodule)": [[8, "graphnet.data.datamodule.GraphNeTDataModule"]], "graphnet.data.datamodule": [[8, "module-graphnet.data.datamodule"]], "prepare_data() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.prepare_data"]], "setup() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.setup"]], "teardown() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.teardown"]], "test_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.test_dataloader"]], "train_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.train_dataloader"]], "val_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.val_dataloader"]], "graphnet.data.dataset": [[9, "module-graphnet.data.dataset"]], "dataset (class in graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.Dataset"]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.EnsembleDataset"]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[10, "graphnet.data.dataset.dataset.Dataset.add_label"]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[10, "graphnet.data.dataset.dataset.Dataset.concatenate"]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[10, "graphnet.data.dataset.dataset.Dataset.from_config"]], "graphnet.data.dataset.dataset": [[10, "module-graphnet.data.dataset.dataset"]], "load_module() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.load_module"]], "parse_graph_definition() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.parse_graph_definition"]], "parse_labels() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.parse_labels"]], "path (graphnet.data.dataset.dataset.dataset property)": [[10, "graphnet.data.dataset.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[10, "graphnet.data.dataset.dataset.Dataset.query_table"]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[10, "graphnet.data.dataset.dataset.Dataset.truth_table"]], "graphnet.data.dataset.parquet": [[11, "module-graphnet.data.dataset.parquet"]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[12, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[12, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[12, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table"]], "graphnet.data.dataset.sqlite": [[13, "module-graphnet.data.dataset.sqlite"]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[14, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[14, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "graphnet.data.extractors": [[15, "module-graphnet.data.extractors"]], "combinedextractor (class in graphnet.data.extractors.combine_extractors)": [[16, "graphnet.data.extractors.combine_extractors.CombinedExtractor"]], "graphnet.data.extractors.combine_extractors": [[16, "module-graphnet.data.extractors.combine_extractors"]], "extractor (class in graphnet.data.extractors.extractor)": [[17, "graphnet.data.extractors.extractor.Extractor"]], "graphnet.data.extractors.extractor": [[17, "module-graphnet.data.extractors.extractor"]], "name (graphnet.data.extractors.extractor.extractor property)": [[17, "graphnet.data.extractors.extractor.Extractor.name"]], "graphnet.data.extractors.icecube": [[18, "module-graphnet.data.extractors.icecube"]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[19, "graphnet.data.extractors.icecube.i3extractor.I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor": [[19, "module-graphnet.data.extractors.icecube.i3extractor"]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[19, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd"]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3featureextractor": [[20, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[21, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3genericextractor": [[21, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[22, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[22, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[23, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[23, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[24, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[24, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[25, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[25, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[26, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[26, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[27, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[27, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[28, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[28, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[29, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[29, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[30, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[30, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "graphnet.data.extractors.icecube.utilities": [[31, "module-graphnet.data.extractors.icecube.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[32, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.icecube.utilities.collections": [[32, "module-graphnet.data.extractors.icecube.utilities.collections"]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[32, "graphnet.data.extractors.icecube.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[32, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[33, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[33, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[33, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.frames": [[33, "module-graphnet.data.extractors.icecube.utilities.frames"]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[34, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter"]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[34, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask"]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[34, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[34, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.get_member_variables"]], "graphnet.data.extractors.icecube.utilities.types": [[35, "module-graphnet.data.extractors.icecube.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_type"]], "graphnet.data.extractors.internal": [[36, "module-graphnet.data.extractors.internal"]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[37, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[37, "module-graphnet.data.extractors.internal.parquet_extractor"]], "graphnet.data.parquet": [[38, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.deprecated_methods)": [[39, "graphnet.data.parquet.deprecated_methods.ParquetDataConverter"]], "graphnet.data.parquet.deprecated_methods": [[39, "module-graphnet.data.parquet.deprecated_methods"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[40, "graphnet.data.pipeline.InSQLitePipeline"]], "graphnet.data.pipeline": [[40, "module-graphnet.data.pipeline"]], "graphnet.data.pre_configured": [[41, "module-graphnet.data.pre_configured"]], "i3toparquetconverter (class in graphnet.data.pre_configured.dataconverters)": [[42, "graphnet.data.pre_configured.dataconverters.I3ToParquetConverter"]], "i3tosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[42, "graphnet.data.pre_configured.dataconverters.I3ToSQLiteConverter"]], "parquettosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[42, "graphnet.data.pre_configured.dataconverters.ParquetToSQLiteConverter"]], "graphnet.data.pre_configured.dataconverters": [[42, "module-graphnet.data.pre_configured.dataconverters"]], "graphnet.data.readers": [[43, "module-graphnet.data.readers"]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[44, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader"]], "accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[44, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors"]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[44, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions"]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[44, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names"]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[44, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files"]], "graphnet.data.readers.graphnet_file_reader": [[44, "module-graphnet.data.readers.graphnet_file_reader"]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[44, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors"]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[44, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files"]], "i3reader (class in graphnet.data.readers.i3reader)": [[45, "graphnet.data.readers.i3reader.I3Reader"]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[45, "graphnet.data.readers.i3reader.I3Reader.find_files"]], "graphnet.data.readers.i3reader": [[45, "module-graphnet.data.readers.i3reader"]], "parquetreader (class in graphnet.data.readers.internal_parquet_reader)": [[46, "graphnet.data.readers.internal_parquet_reader.ParquetReader"]], "find_files() (graphnet.data.readers.internal_parquet_reader.parquetreader method)": [[46, "graphnet.data.readers.internal_parquet_reader.ParquetReader.find_files"]], "graphnet.data.readers.internal_parquet_reader": [[46, "module-graphnet.data.readers.internal_parquet_reader"]], "graphnet.data.sqlite": [[47, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.deprecated_methods)": [[48, "graphnet.data.sqlite.deprecated_methods.SQLiteDataConverter"]], "graphnet.data.sqlite.deprecated_methods": [[48, "module-graphnet.data.sqlite.deprecated_methods"]], "graphnet.data.utilities": [[49, "module-graphnet.data.utilities"]], "graphnet.data.utilities.parquet_to_sqlite": [[50, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random": [[51, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[51, "graphnet.data.utilities.random.pairwise_shuffle"]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[52, "graphnet.data.utilities.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[52, "graphnet.data.utilities.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[52, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[52, "graphnet.data.utilities.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[52, "graphnet.data.utilities.sqlite_utilities.database_table_exists"]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[52, "graphnet.data.utilities.sqlite_utilities.get_primary_keys"]], "graphnet.data.utilities.sqlite_utilities": [[52, "module-graphnet.data.utilities.sqlite_utilities"]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[52, "graphnet.data.utilities.sqlite_utilities.query_database"]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[52, "graphnet.data.utilities.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[52, "graphnet.data.utilities.sqlite_utilities.save_to_sql"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[53, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[53, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[53, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.data.writers": [[54, "module-graphnet.data.writers"]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[55, "graphnet.data.writers.graphnet_writer.GraphNeTWriter"]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[55, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes"]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[55, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension"]], "graphnet.data.writers.graphnet_writer": [[55, "module-graphnet.data.writers.graphnet_writer"]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[55, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files"]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[56, "graphnet.data.writers.parquet_writer.ParquetWriter"]], "graphnet.data.writers.parquet_writer": [[56, "module-graphnet.data.writers.parquet_writer"]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[56, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files"]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[57, "graphnet.data.writers.sqlite_writer.SQLiteWriter"]], "graphnet.data.writers.sqlite_writer": [[57, "module-graphnet.data.writers.sqlite_writer"]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[57, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files"]], "graphnet.deployment": [[58, "module-graphnet.deployment"]], "deployer (class in graphnet.deployment.deployer)": [[59, "graphnet.deployment.deployer.Deployer"]], "graphnet.deployment.deployer": [[59, "module-graphnet.deployment.deployer"]], "run() (graphnet.deployment.deployer.deployer method)": [[59, "graphnet.deployment.deployer.Deployer.run"]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[60, "graphnet.deployment.deployment_module.DeploymentModule"]], "graphnet.deployment.deployment_module": [[60, "module-graphnet.deployment.deployment_module"]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[64, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule"]], "graphnet.deployment.icecube.cleaning_module": [[64, "module-graphnet.deployment.icecube.cleaning_module"]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[66, "graphnet.deployment.icecube.inference_module.I3InferenceModule"]], "graphnet.deployment.icecube.inference_module": [[66, "module-graphnet.deployment.icecube.inference_module"]], "graphnet.exceptions": [[67, "module-graphnet.exceptions"]], "columnmissingexception": [[68, "graphnet.exceptions.exceptions.ColumnMissingException"]], "graphnet.exceptions.exceptions": [[68, "module-graphnet.exceptions.exceptions"]], "graphnet.models": [[69, "module-graphnet.models"]], "attributecoarsening (class in graphnet.models.coarsening)": [[70, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[70, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[70, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[70, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[70, "graphnet.models.coarsening.DOMCoarsening"]], "forward() (graphnet.models.coarsening.coarsening method)": [[70, "graphnet.models.coarsening.Coarsening.forward"]], "graphnet.models.coarsening": [[70, "module-graphnet.models.coarsening"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[70, "graphnet.models.coarsening.Coarsening.reduce_options"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[70, "graphnet.models.coarsening.unbatch_edge_index"]], "graphnet.models.components": [[71, "module-graphnet.models.components"]], "fourierencoder (class in graphnet.models.components.embedding)": [[72, "graphnet.models.components.embedding.FourierEncoder"]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[72, "graphnet.models.components.embedding.SinusoidalPosEmb"]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[72, "graphnet.models.components.embedding.SpacetimeEncoder"]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[72, "graphnet.models.components.embedding.FourierEncoder.forward"]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[72, "graphnet.models.components.embedding.SinusoidalPosEmb.forward"]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[72, "graphnet.models.components.embedding.SpacetimeEncoder.forward"]], "graphnet.models.components.embedding": [[72, "module-graphnet.models.components.embedding"]], "attention_rel (class in graphnet.models.components.layers)": [[73, "graphnet.models.components.layers.Attention_rel"]], "block (class in graphnet.models.components.layers)": [[73, "graphnet.models.components.layers.Block"]], "block_rel (class in graphnet.models.components.layers)": [[73, "graphnet.models.components.layers.Block_rel"]], "droppath (class in graphnet.models.components.layers)": [[73, "graphnet.models.components.layers.DropPath"]], "dynedgeconv (class in graphnet.models.components.layers)": [[73, "graphnet.models.components.layers.DynEdgeConv"]], "dyntrans (class in graphnet.models.components.layers)": [[73, "graphnet.models.components.layers.DynTrans"]], "edgeconvtito (class in graphnet.models.components.layers)": [[73, "graphnet.models.components.layers.EdgeConvTito"]], "mlp (class in graphnet.models.components.layers)": [[73, "graphnet.models.components.layers.Mlp"]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[73, "graphnet.models.components.layers.DropPath.extra_repr"]], "forward() (graphnet.models.components.layers.attention_rel method)": [[73, "graphnet.models.components.layers.Attention_rel.forward"]], "forward() (graphnet.models.components.layers.block method)": [[73, "graphnet.models.components.layers.Block.forward"]], "forward() (graphnet.models.components.layers.block_rel method)": [[73, "graphnet.models.components.layers.Block_rel.forward"]], "forward() (graphnet.models.components.layers.droppath method)": [[73, "graphnet.models.components.layers.DropPath.forward"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[73, "graphnet.models.components.layers.DynEdgeConv.forward"]], "forward() (graphnet.models.components.layers.dyntrans method)": [[73, "graphnet.models.components.layers.DynTrans.forward"]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[73, "graphnet.models.components.layers.EdgeConvTito.forward"]], "forward() (graphnet.models.components.layers.mlp method)": [[73, "graphnet.models.components.layers.Mlp.forward"]], "graphnet.models.components.layers": [[73, "module-graphnet.models.components.layers"]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[73, "graphnet.models.components.layers.EdgeConvTito.message"]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[73, "graphnet.models.components.layers.EdgeConvTito.reset_parameters"]], "graphnet.models.components.pool": [[74, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[74, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[74, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[74, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[74, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[74, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[74, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[74, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[74, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[74, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[74, "graphnet.models.components.pool.sum_pool_x"]], "graphnet.models.detector": [[75, "module-graphnet.models.detector"]], "detector (class in graphnet.models.detector.detector)": [[76, "graphnet.models.detector.detector.Detector"]], "feature_map() (graphnet.models.detector.detector.detector method)": [[76, "graphnet.models.detector.detector.Detector.feature_map"]], "forward() (graphnet.models.detector.detector.detector method)": [[76, "graphnet.models.detector.detector.Detector.forward"]], "geometry_table (graphnet.models.detector.detector.detector property)": [[76, "graphnet.models.detector.detector.Detector.geometry_table"]], "graphnet.models.detector.detector": [[76, "module-graphnet.models.detector.detector"]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[76, "graphnet.models.detector.detector.Detector.sensor_index_name"]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[76, "graphnet.models.detector.detector.Detector.sensor_position_names"]], "string_index_name (graphnet.models.detector.detector.detector property)": [[76, "graphnet.models.detector.detector.Detector.string_index_name"]], "icecube86 (class in graphnet.models.detector.icecube)": [[77, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[77, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[77, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[77, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[77, "graphnet.models.detector.icecube.IceCube86.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[77, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[77, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[77, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map"]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[77, "graphnet.models.detector.icecube.IceCube86.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[77, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path"]], "graphnet.models.detector.icecube": [[77, "module-graphnet.models.detector.icecube"]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[77, "graphnet.models.detector.icecube.IceCube86.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[77, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[77, "graphnet.models.detector.icecube.IceCube86.string_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[77, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column"]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[77, "graphnet.models.detector.icecube.IceCube86.xyz"]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[77, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz"]], "orca150 (class in graphnet.models.detector.prometheus)": [[78, "graphnet.models.detector.prometheus.ORCA150"]], "prometheus (class in graphnet.models.detector.prometheus)": [[78, "graphnet.models.detector.prometheus.Prometheus"]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[78, "graphnet.models.detector.prometheus.ORCA150.feature_map"]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[78, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path"]], "graphnet.models.detector.prometheus": [[78, "module-graphnet.models.detector.prometheus"]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[78, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column"]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[78, "graphnet.models.detector.prometheus.ORCA150.string_id_column"]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[78, "graphnet.models.detector.prometheus.ORCA150.xyz"]], "graphnet.models.gnn": [[79, "module-graphnet.models.gnn"]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[80, "graphnet.models.gnn.RNN_tito.RNN_TITO"]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[80, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward"]], "graphnet.models.gnn.rnn_tito": [[80, "module-graphnet.models.gnn.RNN_tito"]], "convnet (class in graphnet.models.gnn.convnet)": [[81, "graphnet.models.gnn.convnet.ConvNet"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[81, "graphnet.models.gnn.convnet.ConvNet.forward"]], "graphnet.models.gnn.convnet": [[81, "module-graphnet.models.gnn.convnet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[82, "graphnet.models.gnn.dynedge.DynEdge"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[82, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "graphnet.models.gnn.dynedge": [[82, "module-graphnet.models.gnn.dynedge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[83, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[83, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "graphnet.models.gnn.dynedge_jinst": [[83, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[84, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO"]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[84, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[84, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "gnn (class in graphnet.models.gnn.gnn)": [[85, "graphnet.models.gnn.gnn.GNN"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[85, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn.gnn": [[85, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[85, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[85, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "deepice (class in graphnet.models.gnn.icemix)": [[86, "graphnet.models.gnn.icemix.DeepIce"]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[86, "graphnet.models.gnn.icemix.DeepIce.forward"]], "graphnet.models.gnn.icemix": [[86, "module-graphnet.models.gnn.icemix"]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[86, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay"]], "graphnet.models.graphs": [[87, "module-graphnet.models.graphs"]], "graphnet.models.graphs.edges": [[88, "module-graphnet.models.graphs.edges"]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[89, "graphnet.models.graphs.edges.edges.EdgeDefinition"]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[89, "graphnet.models.graphs.edges.edges.EuclideanEdges"]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[89, "graphnet.models.graphs.edges.edges.KNNEdges"]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[89, "graphnet.models.graphs.edges.edges.RadialEdges"]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[89, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward"]], "graphnet.models.graphs.edges.edges": [[89, "module-graphnet.models.graphs.edges.edges"]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[90, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges"]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[90, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat"]], "graphnet.models.graphs.edges.minkowski": [[90, "module-graphnet.models.graphs.edges.minkowski"]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[91, "graphnet.models.graphs.graph_definition.GraphDefinition"]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[91, "graphnet.models.graphs.graph_definition.GraphDefinition.forward"]], "graphnet.models.graphs.graph_definition": [[91, "module-graphnet.models.graphs.graph_definition"]], "knngraph (class in graphnet.models.graphs.graphs)": [[92, "graphnet.models.graphs.graphs.KNNGraph"]], "graphnet.models.graphs.graphs": [[92, "module-graphnet.models.graphs.graphs"]], "graphnet.models.graphs.nodes": [[93, "module-graphnet.models.graphs.nodes"]], "icemixnodes (class in graphnet.models.graphs.nodes.nodes)": [[94, "graphnet.models.graphs.nodes.nodes.IceMixNodes"]], "nodeasdomtimeseries (class in graphnet.models.graphs.nodes.nodes)": [[94, "graphnet.models.graphs.nodes.nodes.NodeAsDOMTimeSeries"]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[94, "graphnet.models.graphs.nodes.nodes.NodeDefinition"]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[94, "graphnet.models.graphs.nodes.nodes.NodesAsPulses"]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[94, "graphnet.models.graphs.nodes.nodes.PercentileClusters"]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[94, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward"]], "graphnet.models.graphs.nodes.nodes": [[94, "module-graphnet.models.graphs.nodes.nodes"]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[94, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs"]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[94, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs"]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[94, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names"]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[95, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles"]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[95, "graphnet.models.graphs.utils.gather_cluster_sequence"]], "graphnet.models.graphs.utils": [[95, "module-graphnet.models.graphs.utils"]], "ice_transparency() (in module graphnet.models.graphs.utils)": [[95, "graphnet.models.graphs.utils.ice_transparency"]], "identify_indices() (in module graphnet.models.graphs.utils)": [[95, "graphnet.models.graphs.utils.identify_indices"]], "lex_sort() (in module graphnet.models.graphs.utils)": [[95, "graphnet.models.graphs.utils.lex_sort"]], "model (class in graphnet.models.model)": [[96, "graphnet.models.model.Model"]], "extra_repr() (graphnet.models.model.model method)": [[96, "graphnet.models.model.Model.extra_repr"]], "extra_repr_recursive() (graphnet.models.model.model method)": [[96, "graphnet.models.model.Model.extra_repr_recursive"]], "from_config() (graphnet.models.model.model class method)": [[96, "graphnet.models.model.Model.from_config"]], "graphnet.models.model": [[96, "module-graphnet.models.model"]], "load() (graphnet.models.model.model class method)": [[96, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[96, "graphnet.models.model.Model.load_state_dict"]], "save() (graphnet.models.model.model method)": [[96, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[96, "graphnet.models.model.Model.save_state_dict"]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[96, "graphnet.models.model.Model.set_verbose_print_recursively"]], "verbose_print (graphnet.models.model.model attribute)": [[96, "graphnet.models.model.Model.verbose_print"]], "graphnet.models.rnn": [[97, "module-graphnet.models.rnn"]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[98, "graphnet.models.rnn.node_rnn.Node_RNN"]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[98, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object"]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[98, "graphnet.models.rnn.node_rnn.Node_RNN.forward"]], "graphnet.models.rnn.node_rnn": [[98, "module-graphnet.models.rnn.node_rnn"]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[99, "graphnet.models.standard_averaged_model.StandardAveragedModel"]], "graphnet.models.standard_averaged_model": [[99, "module-graphnet.models.standard_averaged_model"]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[99, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict"]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[99, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end"]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[99, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step"]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[99, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step"]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[99, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step"]], "standardmodel (class in graphnet.models.standard_model)": [[100, "graphnet.models.standard_model.StandardModel"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[100, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[100, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "fit() (graphnet.models.standard_model.standardmodel method)": [[100, "graphnet.models.standard_model.StandardModel.fit"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[100, "graphnet.models.standard_model.StandardModel.forward"]], "graphnet.models.standard_model": [[100, "module-graphnet.models.standard_model"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[100, "graphnet.models.standard_model.StandardModel.inference"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[100, "graphnet.models.standard_model.StandardModel.predict"]], "predict_as_dataframe() (graphnet.models.standard_model.standardmodel method)": [[100, "graphnet.models.standard_model.StandardModel.predict_as_dataframe"]], "prediction_labels (graphnet.models.standard_model.standardmodel property)": [[100, "graphnet.models.standard_model.StandardModel.prediction_labels"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[100, "graphnet.models.standard_model.StandardModel.shared_step"]], "target_labels (graphnet.models.standard_model.standardmodel property)": [[100, "graphnet.models.standard_model.StandardModel.target_labels"]], "train() (graphnet.models.standard_model.standardmodel method)": [[100, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[100, "graphnet.models.standard_model.StandardModel.training_step"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[100, "graphnet.models.standard_model.StandardModel.validation_step"]], "graphnet.models.task": [[101, "module-graphnet.models.task"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[102, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[102, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[102, "graphnet.models.task.classification.MulticlassClassificationTask"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[102, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[102, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[102, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[102, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels"]], "graphnet.models.task.classification": [[102, "module-graphnet.models.task.classification"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[102, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[102, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[103, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[103, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[103, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[103, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[103, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[103, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[103, "graphnet.models.task.reconstruction.EnergyTCReconstruction"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[103, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[103, "graphnet.models.task.reconstruction.PositionReconstruction"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[103, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[103, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[103, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[103, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[103, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[103, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[103, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[103, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[103, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[103, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[103, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[103, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[103, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[103, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[103, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[103, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels"]], "graphnet.models.task.reconstruction": [[103, "module-graphnet.models.task.reconstruction"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[103, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[103, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[103, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[103, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[103, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[103, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[103, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "identitytask (class in graphnet.models.task.task)": [[104, "graphnet.models.task.task.IdentityTask"]], "learnedtask (class in graphnet.models.task.task)": [[104, "graphnet.models.task.task.LearnedTask"]], "standardflowtask (class in graphnet.models.task.task)": [[104, "graphnet.models.task.task.StandardFlowTask"]], "standardlearnedtask (class in graphnet.models.task.task)": [[104, "graphnet.models.task.task.StandardLearnedTask"]], "task (class in graphnet.models.task.task)": [[104, "graphnet.models.task.task.Task"]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[104, "graphnet.models.task.task.LearnedTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardflowtask method)": [[104, "graphnet.models.task.task.StandardFlowTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[104, "graphnet.models.task.task.StandardLearnedTask.compute_loss"]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[104, "graphnet.models.task.task.IdentityTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.task.task property)": [[104, "graphnet.models.task.task.Task.default_prediction_labels"]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[104, "graphnet.models.task.task.IdentityTask.default_target_labels"]], "default_target_labels (graphnet.models.task.task.task property)": [[104, "graphnet.models.task.task.Task.default_target_labels"]], "forward() (graphnet.models.task.task.learnedtask method)": [[104, "graphnet.models.task.task.LearnedTask.forward"]], "forward() (graphnet.models.task.task.standardflowtask method)": [[104, "graphnet.models.task.task.StandardFlowTask.forward"]], "graphnet.models.task.task": [[104, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[104, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[104, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[104, "graphnet.models.task.task.LearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[104, "graphnet.models.task.task.StandardLearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[104, "graphnet.models.task.task.Task.nb_inputs"]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[104, "graphnet.models.task.task.StandardFlowTask.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[104, "graphnet.models.task.task.Task.train_eval"]], "array_to_sequence() (in module graphnet.models.utils)": [[105, "graphnet.models.utils.array_to_sequence"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[105, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[105, "graphnet.models.utils.calculate_xyzt_homophily"]], "graphnet.models.utils": [[105, "module-graphnet.models.utils"]], "knn_graph_batch() (in module graphnet.models.utils)": [[105, "graphnet.models.utils.knn_graph_batch"]], "graphnet.pisa": [[106, "module-graphnet.pisa"]], "contourfitter (class in graphnet.pisa.fitting)": [[107, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[107, "graphnet.pisa.fitting.WeightFitter"]], "config_updater() (in module graphnet.pisa.fitting)": [[107, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[107, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[107, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[107, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa.fitting": [[107, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[108, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[108, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[108, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[108, "graphnet.pisa.plotting.read_entry"]], "graphnet.training": [[109, "module-graphnet.training"]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[110, "graphnet.training.callbacks.GraphnetEarlyStopping"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[110, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[110, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[110, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[110, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[110, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[110, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[110, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[110, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[110, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[110, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end"]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[110, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[110, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[110, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[110, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end"]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[110, "graphnet.training.callbacks.GraphnetEarlyStopping.setup"]], "direction (class in graphnet.training.labels)": [[111, "graphnet.training.labels.Direction"]], "label (class in graphnet.training.labels)": [[111, "graphnet.training.labels.Label"]], "graphnet.training.labels": [[111, "module-graphnet.training.labels"]], "key (graphnet.training.labels.label property)": [[111, "graphnet.training.labels.Label.key"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.CrossEntropyLoss"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.MSELoss"]], "rmseloss (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[112, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[112, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[112, "graphnet.training.loss_functions.LossFunction.forward"]], "graphnet.training.loss_functions": [[112, "module-graphnet.training.loss_functions"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[112, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[112, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[112, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "collate_fn() (in module graphnet.training.utils)": [[113, "graphnet.training.utils.collate_fn"]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[113, "graphnet.training.utils.collator_sequence_buckleting"]], "get_predictions() (in module graphnet.training.utils)": [[113, "graphnet.training.utils.get_predictions"]], "graphnet.training.utils": [[113, "module-graphnet.training.utils"]], "make_dataloader() (in module graphnet.training.utils)": [[113, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[113, "graphnet.training.utils.make_train_validation_dataloader"]], "save_results() (in module graphnet.training.utils)": [[113, "graphnet.training.utils.save_results"]], "save_selection() (in module graphnet.training.utils)": [[113, "graphnet.training.utils.save_selection"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[114, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[114, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[114, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[114, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[114, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[115, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[116, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[116, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[116, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[116, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[116, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[116, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[116, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[117, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[118, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[118, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[118, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[118, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[118, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[118, "graphnet.utilities.config.base_config.BaseConfig.load"]], "model_computed_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[118, "graphnet.utilities.config.base_config.BaseConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[118, "graphnet.utilities.config.base_config.BaseConfig.model_config"]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[118, "graphnet.utilities.config.base_config.BaseConfig.model_fields"]], "configurable (class in graphnet.utilities.config.configurable)": [[119, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[119, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[119, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[119, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[119, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta"]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta"]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition"]], "graphnet.utilities.config.dataset_config": [[120, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.labels"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "model_computed_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config"]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[120, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[121, "graphnet.utilities.config.model_config.ModelConfig"]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[121, "graphnet.utilities.config.model_config.ModelConfigSaverABC"]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[121, "graphnet.utilities.config.model_config.ModelConfigSaverMeta"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[121, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[121, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[121, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[121, "module-graphnet.utilities.config.model_config"]], "model_computed_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[121, "graphnet.utilities.config.model_config.ModelConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[121, "graphnet.utilities.config.model_config.ModelConfig.model_config"]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[121, "graphnet.utilities.config.model_config.ModelConfig.model_fields"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[121, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[122, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[122, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[122, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[122, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[122, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[122, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[122, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[123, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[123, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[123, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[123, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[123, "module-graphnet.utilities.config.training_config"]], "model_computed_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[123, "graphnet.utilities.config.training_config.TrainingConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[123, "graphnet.utilities.config.training_config.TrainingConfig.model_config"]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[123, "graphnet.utilities.config.training_config.TrainingConfig.model_fields"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[123, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[124, "module-graphnet.utilities.decorators"]], "graphnet.utilities.deprecation_tools": [[125, "module-graphnet.utilities.deprecation_tools"]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[125, "graphnet.utilities.deprecation_tools.rename_state_dict_entries"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[126, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[126, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[126, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[126, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[126, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[127, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[127, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[127, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[127, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[127, "graphnet.utilities.imports.requires_icecube"]], "logger (class in graphnet.utilities.logging)": [[128, "graphnet.utilities.logging.Logger"]], "repeatfilter (class in graphnet.utilities.logging)": [[128, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.logger method)": [[128, "graphnet.utilities.logging.Logger.critical"]], "debug() (graphnet.utilities.logging.logger method)": [[128, "graphnet.utilities.logging.Logger.debug"]], "error() (graphnet.utilities.logging.logger method)": [[128, "graphnet.utilities.logging.Logger.error"]], "file_handlers (graphnet.utilities.logging.logger property)": [[128, "graphnet.utilities.logging.Logger.file_handlers"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[128, "graphnet.utilities.logging.RepeatFilter.filter"]], "graphnet.utilities.logging": [[128, "module-graphnet.utilities.logging"]], "handlers (graphnet.utilities.logging.logger property)": [[128, "graphnet.utilities.logging.Logger.handlers"]], "info() (graphnet.utilities.logging.logger method)": [[128, "graphnet.utilities.logging.Logger.info"]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[128, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed"]], "setlevel() (graphnet.utilities.logging.logger method)": [[128, "graphnet.utilities.logging.Logger.setLevel"]], "stream_handlers (graphnet.utilities.logging.logger property)": [[128, "graphnet.utilities.logging.Logger.stream_handlers"]], "warning() (graphnet.utilities.logging.logger method)": [[128, "graphnet.utilities.logging.Logger.warning"]], "warning_once() (graphnet.utilities.logging.logger method)": [[128, "graphnet.utilities.logging.Logger.warning_once"]], "eps_like() (in module graphnet.utilities.maths)": [[129, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[129, "module-graphnet.utilities.maths"]]}})