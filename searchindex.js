Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.curated_datamodule", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.combine_extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.extractors.liquido", "api/graphnet.data.extractors.liquido.h5_extractor", "api/graphnet.data.extractors.prometheus", "api/graphnet.data.extractors.prometheus.prometheus_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.readers.liquido_reader", "api/graphnet.data.readers.prometheus_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.datasets", "api/graphnet.datasets.test_dataset", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.liquido", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.icemix", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.curated_datamodule.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.combine_extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.extractors.liquido.rst", "api/graphnet.data.extractors.liquido.h5_extractor.rst", "api/graphnet.data.extractors.prometheus.rst", "api/graphnet.data.extractors.prometheus.prometheus_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.readers.liquido_reader.rst", "api/graphnet.data.readers.prometheus_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.datasets.rst", "api/graphnet.datasets.test_dataset.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.liquido.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "curated_datamodule", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "sqlite", "sqlite_dataset", "extractors", "combine_extractors", "extractor", "icecube", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "internal", "parquet_extractor", "liquido", "h5_extractor", "prometheus", "prometheus_extractor", "parquet", "deprecated_methods", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "internal_parquet_reader", "liquido_reader", "prometheus_reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "datasets", "test_dataset", "deployment", "deployer", "deployment_module", "i3modules", "deprecated_methods", "icecube", "cleaning_module", "i3deployer", "inference_module", "exceptions", "exceptions", "models", "coarsening", "components", "embedding", "layers", "pool", "detector", "detector", "icecube", "liquido", "prometheus", "gnn", "RNN_tito", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "icemix", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "rnn", "node_rnn", "standard_averaged_model", "standard_model", "task", "classification", "reconstruction", "task", "utils", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 72, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139], "i": [0, 1, 5, 9, 11, 13, 15, 17, 18, 20, 22, 33, 34, 35, 36, 38, 40, 42, 44, 46, 49, 54, 57, 58, 59, 62, 63, 67, 72, 74, 78, 80, 81, 82, 90, 91, 95, 98, 100, 103, 104, 107, 112, 113, 114, 116, 117, 118, 119, 120, 122, 124, 127, 128, 129, 131, 132, 133, 134, 137, 138, 139], "an": [0, 18, 36, 44, 46, 49, 54, 59, 100, 107, 108, 118, 132, 134, 137, 138, 139], "open": [0, 48, 137, 138], "sourc": [0, 4, 5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 65, 67, 68, 72, 74, 76, 78, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138], "python": [0, 1, 7, 18, 19, 22, 33, 36, 137, 138, 139], "framework": [0, 138], "aim": [0, 1, 137, 138], "provid": [0, 1, 7, 11, 13, 15, 72, 77, 95, 100, 105, 118, 137, 138, 139], "high": [0, 138], "qualiti": [0, 138], "user": [0, 5, 77, 116, 138, 139], "friendli": [0, 61, 63, 138], "end": [0, 1, 116, 138], "function": [0, 7, 8, 11, 20, 36, 38, 42, 57, 58, 72, 74, 78, 81, 82, 85, 86, 87, 91, 100, 104, 105, 113, 114, 118, 119, 121, 126, 127, 128, 131, 132, 133, 135, 138], "perform": [0, 9, 78, 80, 81, 82, 88, 89, 91, 93, 103, 107, 108, 109, 111, 113, 119, 138], "reconstruct": [0, 1, 21, 23, 24, 28, 29, 31, 66, 77, 93, 95, 107, 110, 113, 138], "task": [0, 1, 9, 77, 109, 111, 112, 118, 137, 138], "neutrino": [0, 1, 20, 42, 49, 81, 93, 95, 104, 138], "telescop": [0, 1, 138], "us": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 25, 30, 32, 33, 38, 40, 42, 44, 46, 48, 49, 53, 54, 55, 58, 59, 61, 62, 63, 65, 66, 68, 72, 74, 77, 80, 81, 82, 84, 89, 91, 92, 93, 95, 98, 100, 101, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 126, 127, 128, 133, 134, 137, 138, 139], "graph": [0, 1, 8, 11, 13, 15, 77, 81, 82, 84, 97, 98, 99, 100, 102, 103, 104, 107, 113, 114, 117, 119, 137, 138], "neural": [0, 1, 106, 138], "network": [0, 1, 81, 90, 106, 138], "gnn": [0, 1, 77, 89, 90, 91, 92, 93, 95, 100, 107, 109, 138, 139], "make": [0, 7, 103, 120, 126, 127, 137, 138, 139], "fast": [0, 138, 139], "easi": [0, 138], "train": [0, 1, 5, 7, 9, 10, 59, 64, 65, 66, 72, 81, 95, 100, 108, 109, 114, 116, 117, 118, 119, 120, 122, 126, 127, 129, 136, 138, 139], "complex": [0, 77, 138], "model": [0, 1, 5, 66, 68, 72, 74, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 122, 124, 126, 127, 129, 136, 138, 139], "can": [0, 1, 5, 9, 11, 13, 15, 18, 22, 25, 72, 80, 82, 100, 120, 122, 124, 126, 127, 137, 138, 139], "event": [0, 1, 5, 7, 9, 11, 13, 15, 17, 27, 42, 44, 46, 54, 58, 59, 62, 63, 65, 72, 80, 82, 89, 100, 103, 104, 113, 114, 118, 119, 120, 126, 138], "state": [0, 68, 89, 107, 131, 138], "art": [0, 138], "arbitrari": [0, 138], "detector": [0, 1, 30, 77, 85, 86, 87, 100, 101, 103, 109, 138], "configur": [0, 1, 9, 11, 45, 46, 68, 77, 105, 109, 121, 123, 124, 126, 127, 129, 134, 138], "infer": [0, 1, 63, 66, 68, 72, 74, 109, 113, 138, 139], "time": [0, 4, 58, 78, 80, 82, 89, 99, 103, 104, 107, 112, 114, 134, 138, 139], "ar": [0, 1, 4, 5, 11, 13, 15, 20, 22, 35, 36, 48, 59, 61, 62, 63, 67, 72, 81, 82, 89, 91, 93, 96, 97, 98, 100, 101, 102, 103, 104, 107, 111, 118, 120, 126, 127, 137, 138, 139], "order": [0, 33, 48, 67, 78, 103, 114, 138], "magnitud": [0, 138], "faster": [0, 138], "than": [0, 8, 113, 119, 134, 138], "tradit": [0, 138], "techniqu": [0, 138], "common": [0, 1, 118, 126, 127, 130, 133, 138], "ml": [0, 1, 138], "develop": [0, 1, 137, 138, 139], "physicist": [0, 1, 138], "wish": [0, 67, 137, 138], "tool": [0, 1, 138], "research": [0, 138], "By": [0, 44, 46, 49, 54, 113, 138], "unit": [0, 7, 65, 99, 133, 137, 138], "both": [0, 22, 113, 138], "group": [0, 82, 138], "increas": [0, 116, 138], "longev": [0, 138], "usabl": [0, 138], "individu": [0, 11, 13, 15, 82, 91, 114, 138], "code": [0, 30, 44, 54, 58, 100, 126, 127, 138], "contribut": [0, 138, 139], "from": [0, 1, 5, 7, 8, 9, 11, 13, 15, 18, 19, 20, 22, 24, 25, 27, 33, 34, 35, 36, 38, 40, 41, 42, 48, 49, 51, 52, 56, 61, 63, 65, 80, 82, 93, 95, 98, 100, 103, 104, 105, 108, 111, 112, 113, 114, 116, 117, 118, 124, 125, 126, 127, 129, 134, 137, 138, 139], "build": [0, 1, 77, 84, 98, 99, 103, 104, 105, 124, 126, 127, 138], "gener": [0, 5, 9, 11, 13, 15, 22, 35, 48, 61, 67, 72, 74, 80, 96, 97, 100, 101, 102, 111, 118, 138], "reusabl": [0, 138], "softwar": [0, 49, 118, 138], "packag": [0, 1, 57, 128, 132, 133, 137, 138, 139], "base": [0, 4, 5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 59, 61, 62, 63, 65, 67, 68, 72, 74, 76, 78, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 105, 107, 108, 109, 111, 112, 113, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 129, 133, 134, 138], "engin": [0, 138], "best": [0, 116, 137, 138], "practic": [0, 137, 138], "lower": [0, 138], "technic": [0, 138], "threshold": [0, 72, 138], "most": [0, 1, 59, 99, 113, 138, 139], "scientif": [0, 1, 138], "problem": [0, 98, 137, 138], "The": [0, 7, 9, 11, 13, 15, 17, 33, 36, 44, 46, 54, 58, 61, 62, 63, 67, 68, 72, 74, 78, 80, 81, 82, 89, 91, 93, 95, 98, 100, 104, 107, 111, 112, 113, 114, 116, 117, 118, 131, 138], "improv": [0, 1, 122, 138], "classif": [0, 1, 77, 110, 113, 118, 138], "yield": [0, 91, 118, 138], "veri": [0, 59, 138], "accur": [0, 138], "e": [0, 1, 5, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 36, 38, 42, 58, 59, 63, 68, 72, 74, 78, 81, 82, 84, 85, 86, 87, 90, 94, 98, 100, 103, 104, 105, 108, 109, 111, 112, 113, 114, 116, 117, 118, 120, 124, 134, 137, 138, 139], "g": [0, 1, 5, 11, 13, 15, 17, 18, 20, 30, 33, 36, 58, 59, 63, 72, 74, 82, 100, 103, 104, 113, 114, 120, 134, 137, 138, 139], "low": [0, 138], "energi": [0, 4, 112, 113, 120, 138], "observ": [0, 138], "icecub": [0, 1, 3, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 44, 46, 49, 54, 66, 72, 74, 77, 81, 83, 93, 95, 103, 104, 133, 138, 139], "here": [0, 100, 137, 138, 139], "implement": [0, 1, 5, 18, 20, 48, 61, 68, 81, 89, 90, 91, 92, 93, 95, 98, 107, 118, 137, 138], "wa": [0, 7, 138], "appli": [0, 7, 11, 13, 15, 44, 46, 47, 48, 54, 67, 81, 82, 89, 90, 91, 92, 93, 94, 95, 104, 107, 109, 111, 113, 128, 138], "oscil": [0, 138], "lead": [0, 138], "signific": [0, 138], "angular": [0, 138], "rang": [0, 113, 138], "relev": [0, 1, 36, 57, 132, 137, 138], "studi": [0, 138], "furthermor": [0, 107, 138], "shown": [0, 138], "could": [0, 137, 138], "muon": [0, 24, 138], "v": [0, 81, 138], "therebi": [0, 1, 126, 127, 138], "effici": [0, 138], "puriti": [0, 138], "sampl": [0, 59, 81, 100, 101, 103, 113, 138], "analysi": [0, 67, 138, 139], "similarli": [0, 36, 138], "ha": [0, 5, 36, 58, 72, 90, 104, 118, 132, 138, 139], "great": [0, 138], "point": [0, 5, 29, 117, 118, 119, 138], "analys": [0, 66, 138], "final": [0, 7, 80, 82, 116, 126, 138], "millisecond": [0, 138], "allow": [0, 5, 38, 66, 77, 82, 116, 124, 129, 138, 139], "whole": [0, 138], "new": [0, 1, 17, 81, 103, 124, 129, 137, 138], "type": [0, 5, 7, 8, 9, 11, 13, 15, 19, 20, 32, 33, 34, 40, 42, 48, 49, 50, 51, 52, 57, 58, 59, 61, 62, 63, 67, 78, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 137, 138], "cosmic": [0, 138], "alert": [0, 138], "which": [0, 5, 11, 13, 15, 18, 20, 21, 30, 34, 38, 40, 42, 59, 61, 63, 67, 78, 82, 91, 100, 101, 104, 105, 111, 114, 118, 119, 122, 138, 139], "were": [0, 138], "previous": [0, 138], "unfeas": [0, 138], "possibl": [0, 33, 63, 137, 138], "identifi": [0, 7, 11, 13, 15, 30, 103, 104, 114, 126, 127, 138], "10": [0, 9, 85, 86, 87, 103, 104, 122, 138], "tev": [0, 138], "monitor": [0, 138], "rate": [0, 116, 138], "direct": [0, 93, 95, 104, 111, 112, 113, 115, 117, 138], "real": [0, 138], "thi": [0, 3, 5, 7, 9, 11, 13, 15, 17, 18, 20, 22, 36, 38, 40, 42, 44, 46, 48, 49, 54, 57, 58, 62, 63, 65, 72, 77, 80, 82, 89, 91, 95, 99, 100, 101, 103, 104, 107, 109, 111, 112, 113, 114, 116, 118, 119, 120, 124, 126, 127, 129, 134, 137, 138, 139], "enabl": [0, 3, 138], "first": [0, 80, 89, 99, 107, 116, 119, 137, 138], "ever": [0, 138], "despit": [0, 138], "larg": [0, 89, 118, 138], "background": [0, 138], "origin": [0, 95, 138], "compris": [0, 138], "number": [0, 5, 7, 11, 13, 15, 18, 44, 46, 54, 59, 62, 63, 67, 80, 81, 82, 89, 90, 91, 92, 93, 94, 95, 98, 99, 101, 103, 104, 107, 111, 112, 113, 114, 116, 119, 120, 122, 138], "modul": [0, 3, 6, 7, 11, 16, 17, 36, 37, 39, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 63, 66, 67, 72, 76, 77, 80, 81, 83, 88, 96, 97, 99, 100, 101, 102, 105, 106, 110, 115, 121, 123, 126, 127, 128, 129, 133, 138], "necessari": [0, 9, 33, 137, 138], "workflow": [0, 138], "ingest": [0, 1, 3, 83, 138], "raw": [0, 103, 104, 138], "data": [0, 1, 4, 5, 6, 7, 8, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 103, 107, 108, 109, 113, 114, 117, 119, 122, 124, 126, 129, 133, 136, 138, 139], "domain": [0, 1, 3, 66, 138], "specif": [0, 1, 3, 5, 6, 7, 11, 13, 15, 16, 18, 21, 36, 47, 48, 49, 58, 63, 66, 68, 76, 78, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 100, 103, 106, 109, 110, 111, 112, 113, 118, 137, 138, 139], "format": [0, 1, 3, 5, 7, 11, 33, 37, 38, 48, 50, 61, 62, 63, 80, 105, 107, 126, 137, 138, 139], "deploi": [0, 1, 66, 68, 138], "chain": [0, 1, 66, 77, 109, 138, 139], "illustr": [0, 137, 138], "figur": [0, 138], "level": [0, 5, 11, 13, 15, 17, 30, 35, 42, 44, 46, 48, 49, 50, 51, 52, 54, 58, 61, 62, 65, 78, 82, 95, 134, 138, 139], "overview": [0, 138], "typic": [0, 33, 107, 138], "convert": [0, 1, 3, 5, 7, 13, 20, 33, 35, 44, 45, 46, 54, 56, 62, 64, 114, 138, 139], "industri": [0, 3, 138], "standard": [0, 3, 4, 35, 59, 68, 85, 86, 87, 89, 100, 101, 103, 108, 109, 113, 122, 137, 138], "intermedi": [0, 1, 3, 7, 11, 90, 138, 139], "file": [0, 1, 3, 5, 7, 11, 13, 15, 18, 20, 33, 35, 38, 39, 40, 41, 42, 44, 46, 48, 49, 50, 51, 52, 54, 56, 57, 61, 62, 63, 67, 68, 72, 74, 100, 105, 116, 118, 119, 122, 123, 124, 125, 126, 127, 132, 134, 138, 139], "read": [0, 3, 7, 11, 13, 15, 33, 47, 49, 50, 51, 52, 84, 91, 109, 110, 138, 139], "simpl": [0, 77, 138], "physic": [0, 1, 20, 34, 36, 66, 72, 74, 77, 110, 113, 138], "orient": [0, 77, 138], "compon": [0, 1, 77, 80, 81, 82, 105, 109, 138], "manag": [0, 115, 138], "experi": [0, 1, 5, 6, 7, 47, 48, 68, 115, 138], "log": [0, 1, 112, 115, 116, 118, 121, 138, 139], "deploy": [0, 1, 68, 72, 74, 100, 136, 138], "modular": [0, 77, 138], "subclass": [0, 5, 77, 138], "torch": [0, 11, 13, 15, 77, 81, 100, 101, 105, 133, 138, 139], "nn": [0, 77, 81, 98, 101, 138], "mean": [0, 11, 13, 15, 77, 91, 93, 104, 118, 127, 138], "onli": [0, 1, 11, 13, 15, 63, 77, 82, 89, 113, 120, 124, 127, 129, 133, 138, 139], "need": [0, 5, 9, 33, 63, 77, 80, 105, 107, 118, 131, 138, 139], "import": [0, 1, 5, 58, 77, 121, 138], "few": [0, 77, 137, 138], "exist": [0, 11, 13, 15, 58, 77, 117, 126, 138], "purpos": [0, 77, 118, 138], "built": [0, 77, 100, 138], "them": [0, 1, 33, 68, 77, 91, 113, 138, 139], "togeth": [0, 77, 98, 109, 138], "form": [0, 18, 77, 111, 124, 129, 138], "complet": [0, 77, 109, 138], "extend": [0, 1, 138], "suit": [0, 113, 138], "through": [0, 111, 112, 113, 118, 138], "layer": [0, 77, 79, 82, 89, 90, 91, 92, 93, 95, 107, 111, 112, 113, 138], "connect": [0, 9, 98, 99, 100, 103, 118, 138], "etc": [0, 118, 134, 138], "optimis": [0, 1, 138], "differ": [0, 11, 13, 15, 18, 20, 38, 39, 40, 42, 48, 49, 50, 101, 109, 119, 137, 138, 139], "track": [0, 18, 20, 24, 38, 40, 42, 112, 137, 138], "These": [0, 48, 61, 63, 100, 137, 138], "prepar": [0, 5, 9, 118, 138], "satisfi": [0, 138], "o": [0, 86, 113, 138], "load": [0, 8, 11, 57, 68, 105, 108, 124, 126, 138], "requir": [0, 20, 26, 38, 42, 58, 103, 111, 118, 126, 127, 129, 138, 139], "when": [0, 11, 13, 15, 33, 35, 58, 72, 81, 89, 91, 93, 107, 117, 134, 137, 138, 139], "batch": [0, 8, 13, 62, 78, 81, 82, 107, 109, 114, 119, 122, 138], "do": [0, 68, 72, 118, 126, 127, 137, 138, 139], "predict": [0, 9, 25, 29, 31, 72, 74, 90, 95, 109, 111, 113, 118, 119, 138], "either": [0, 5, 9, 11, 15, 20, 65, 118, 138, 139], "contain": [0, 5, 6, 7, 11, 13, 15, 16, 17, 20, 33, 34, 37, 38, 39, 42, 44, 46, 48, 49, 50, 54, 58, 61, 62, 63, 64, 67, 68, 72, 74, 76, 91, 96, 97, 99, 100, 101, 102, 104, 105, 113, 114, 118, 120, 122, 138, 139], "imag": [0, 1, 137, 138, 139], "portabl": [0, 138], "depend": [0, 138, 139], "free": [0, 118, 138], "split": [0, 9, 35, 63, 78, 138], "up": [0, 72, 137, 138, 139], "interfac": [0, 126, 127, 138, 139], "block": [0, 1, 79, 81, 138], "pre": [0, 5, 45, 46, 64, 84, 100, 117, 137, 138], "directli": [0, 91, 138], "while": [0, 22, 116, 138], "continu": [0, 118, 138], "expand": [0, 138], "": [0, 7, 8, 9, 11, 13, 15, 33, 44, 46, 48, 51, 52, 54, 61, 63, 67, 80, 84, 90, 91, 100, 109, 113, 114, 116, 120, 122, 126, 127, 134, 135, 138, 139], "capabl": [0, 138], "project": [0, 52, 80, 81, 137, 138], "receiv": [0, 138], "fund": [0, 138], "european": [0, 138], "union": [0, 7, 8, 9, 11, 13, 15, 22, 33, 36, 44, 46, 48, 49, 50, 51, 52, 54, 67, 68, 72, 74, 78, 81, 82, 89, 91, 100, 101, 109, 113, 126, 129, 132, 138], "horizon": [0, 138], "2020": [0, 138], "innov": [0, 138], "programm": [0, 138], "under": [0, 138], "mari": [0, 138], "sk\u0142odowska": [0, 138], "curi": [0, 138], "grant": [0, 118, 138], "agreement": [0, 137, 138], "No": [0, 138], "890778": [0, 138], "work": [0, 4, 34, 89, 137, 138, 139], "rasmu": [0, 92, 138], "\u00f8rs\u00f8e": [0, 138], "partli": [0, 138], "punch4nfdi": [0, 138], "consortium": [0, 138], "support": [0, 7, 36, 137, 138, 139], "dfg": [0, 138], "nfdi": [0, 138], "39": [0, 138, 139], "1": [0, 7, 9, 11, 13, 18, 33, 44, 46, 54, 59, 62, 67, 78, 81, 82, 89, 91, 93, 95, 98, 99, 101, 104, 107, 111, 112, 113, 114, 116, 118, 119, 120, 126, 138, 139], "germani": [0, 138], "conveni": [1, 137, 139], "collabor": 1, "solv": [1, 137], "It": [1, 5, 33, 58, 72, 80, 104, 111, 113, 137], "leverag": 1, "advanc": [1, 82], "machin": [1, 139], "learn": [1, 5, 61, 63, 72, 74, 111, 113, 116, 139], "without": [1, 98, 103, 118, 139], "have": [1, 5, 13, 22, 44, 46, 49, 54, 58, 59, 63, 82, 95, 100, 104, 113, 137, 139], "expert": 1, "themselv": [1, 126, 127], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 5, 11, 13, 15, 17, 18, 20, 22, 35, 58, 63, 65, 72, 80, 81, 82, 84, 91, 94, 99, 100, 105, 118, 124, 125, 126, 127, 128, 129, 134, 137, 139], "streamlin": 1, "process": [1, 7, 44, 46, 54, 72, 80, 84, 89, 91, 93, 137, 139], "transform": [1, 81, 82, 93, 95, 107, 113, 120], "extens": [1, 5, 48, 61, 132], "basic": 1, "across": [1, 2, 11, 13, 15, 36, 55, 67, 82, 109, 118, 121, 122, 123, 134], "variou": [1, 60], "easili": 1, "architectur": [1, 90, 91, 92, 93, 95, 107], "main": [1, 88, 100, 109, 137, 139], "featur": [1, 3, 4, 5, 11, 13, 15, 21, 63, 65, 72, 74, 80, 81, 82, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 107, 111, 114, 119, 126, 137], "i3": [1, 20, 34, 35, 36, 44, 46, 49, 54, 57, 67, 72, 74, 132, 139], "more": [1, 11, 13, 57, 58, 89, 105, 126, 127, 134], "index": [1, 7, 11, 13, 15, 36, 58, 62, 82, 84, 89, 99, 104, 107, 116], "sqlite": [1, 3, 5, 9, 10, 15, 46, 54, 56, 58, 63, 65, 139], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 5, 11, 61, 84, 94, 100, 113, 125], "awai": 1, "detail": [1, 5, 89, 105, 116, 139], "expos": 1, "physicst": 1, "what": [1, 80, 100, 137], "i3modul": [1, 66, 68], "includ": [1, 5, 13, 65, 81, 103, 109, 118, 124, 137], "docker": 1, "run": [1, 49, 67], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 10, 16, 19, 66, 77, 96, 121], "dataset": [1, 3, 5, 8, 9, 12, 13, 14, 15, 24, 59, 62, 65, 76, 89, 100, 107, 122, 126, 136], "extractor": [1, 3, 7, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 54, 72, 74], "parquet": [1, 3, 5, 10, 13, 38, 41, 42, 44, 46, 50, 52, 54, 56, 62, 65, 85, 86, 87, 139], "pre_configur": [1, 3, 46], "reader": [1, 3, 46, 48, 49, 50, 51, 52], "util": [1, 3, 16, 19, 33, 34, 35, 36, 56, 57, 58, 59, 77, 96, 115, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136], "writer": [1, 3, 46, 61, 62, 63], "constant": [1, 3, 136], "curated_datamodul": [1, 3], "dataclass": [1, 3, 34], "dataconvert": [1, 3, 45, 61, 62, 63], "dataload": [1, 3, 5, 9, 13, 65, 100, 109, 119, 129], "datamodul": [1, 3, 5], "test_dataset": [1, 64], "deployment_modul": [1, 66], "except": [1, 136], "rnn": [1, 77, 89, 107], "coarsen": [1, 77, 82], "standard_averaged_model": [1, 77], "standard_model": [1, 77], "callback": [1, 109, 115], "label": [1, 11, 15, 24, 27, 90, 100, 109, 113, 115, 119, 126], "loss_funct": [1, 113, 115], "weight_fit": [1, 115], "config": [1, 8, 59, 116, 118, 121, 122, 124, 125, 126, 127, 128, 129], "argpars": [1, 121], "decor": [1, 121, 133], "deprecation_tool": [1, 121], "filesi": [1, 121], "math": [1, 81, 121], "submodul": [1, 3, 10, 12, 14, 16, 19, 32, 37, 39, 41, 43, 45, 47, 53, 55, 60, 64, 66, 69, 71, 75, 77, 79, 83, 88, 96, 97, 102, 106, 110, 115, 121, 123, 128], "global": [2, 4, 89, 91, 93, 105], "intern": [3, 16, 38, 46, 50], "liquido": [3, 4, 16, 40, 51, 77, 83], "prometheu": [3, 4, 16, 42, 52, 77, 83], "combine_extractor": [3, 16], "deprecated_method": [3, 43, 53, 66, 69], "graphnet_file_read": [3, 47], "i3read": [3, 44, 46, 47, 54], "internal_parquet_read": [3, 47], "liquido_read": [3, 47], "prometheus_read": [3, 47], "parquet_to_sqlit": [3, 55], "random": [3, 11, 13, 15, 55, 59, 62, 103, 126], "sqlite_util": [3, 55], "string_selection_resolv": [3, 55], "graphnet_writ": [3, 60], "parquet_writ": [3, 60], "sqlite_writ": [3, 60], "truth": [3, 4, 5, 11, 13, 15, 21, 30, 42, 58, 62, 65, 100, 113, 119, 120, 126], "curateddataset": [3, 5, 65], "erdahosteddataset": [3, 5, 65], "i3fileset": [3, 6, 48, 49], "set": [3, 6, 9, 13, 20, 22, 44, 46, 48, 49, 54, 61, 81, 95, 103, 104, 105, 113, 119, 137], "init_global_index": [3, 7], "collate_fn": [3, 8, 115, 119], "do_shuffl": [3, 8], "graphnetdatamodul": [3, 5, 9], "class": [4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 59, 61, 62, 63, 65, 67, 68, 72, 74, 78, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 105, 107, 108, 109, 111, 112, 113, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 134, 137], "object": [4, 6, 11, 13, 15, 22, 33, 36, 78, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 105, 107, 108, 109, 111, 112, 113, 116, 118, 119, 122, 124, 126, 127, 129, 134], "namespac": [4, 105, 126, 127], "name": [4, 5, 7, 8, 11, 13, 15, 17, 18, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 33, 35, 36, 38, 40, 42, 44, 46, 48, 50, 51, 52, 54, 58, 61, 62, 63, 68, 72, 74, 84, 100, 101, 103, 107, 113, 117, 120, 122, 124, 126, 127, 128, 129, 134, 137, 139], "i3featureextractor": [4, 16, 19, 72, 74], "icecube86": [4, 83, 85, 87], "dom_x": [4, 85, 103], "dom_i": [4, 85, 103], "dom_z": [4, 85, 103], "dom_tim": [4, 103], "charg": [4, 80, 89, 103, 104, 107, 118], "rde": 4, "pmt_area": 4, "deepcor": [4, 21, 85], "upgrad": [4, 21, 85, 139], "string": [4, 5, 11, 13, 15, 33, 59, 82, 84, 85, 100, 105, 124], "pmt_number": 4, "dom_numb": 4, "pmt_dir_x": 4, "pmt_dir_i": 4, "pmt_dir_z": 4, "dom_typ": 4, "sensor_pos_x": [4, 87], "sensor_pos_i": [4, 87], "sensor_pos_z": [4, 87], "t": [4, 36, 58, 116, 118, 139], "kaggl": [4, 80, 81, 85, 93, 95], "x": [4, 30, 80, 81, 82, 99, 103, 104, 107, 113, 114, 118, 120], "y": [4, 30, 80, 99, 114, 139], "z": [4, 30, 80, 99, 103, 104, 114, 139], "auxiliari": [4, 80], "sipm_x": [4, 86], "sipm_i": [4, 86], "sipm_z": [4, 86], "i3truthextractor": [4, 16, 19], "energy_track": [4, 112], "energy_cascad": [4, 112], "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": [4, 112, 117], "zenith": [4, 112, 117], "pid": [4, 59, 126], "elast": 4, "interaction_typ": 4, "interaction_tim": [4, 112], "inelast": [4, 112], "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "vertex_x": 4, "vertex_i": 4, "vertex_z": 4, "curat": 5, "inherit": [5, 18, 20, 36, 48, 61, 84, 103, 118, 134], "download": [5, 65], "converteddataset": 5, "deep": [5, 61, 63, 81, 93, 95], "method": [5, 7, 9, 11, 13, 15, 18, 20, 32, 33, 34, 36, 43, 44, 48, 53, 54, 61, 62, 63, 65, 68, 81, 82, 84, 104, 112, 118, 120], "graph_definit": [5, 11, 13, 15, 65, 77, 96, 119, 126], "download_dir": [5, 65], "backend": [5, 12, 14, 60, 62, 65], "train_dataloader_kwarg": [5, 9, 65], "validation_dataloader_kwarg": [5, 9, 65], "test_dataloader_kwarg": [5, 9, 65], "been": [5, 72, 118, 137], "evalu": [5, 113], "On": 5, "benchmark": 5, "against": 5, "sota": 5, "construct": [5, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 38, 40, 42, 48, 50, 51, 52, 59, 61, 62, 63, 65, 68, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 116, 117, 118, 119, 120, 122, 125, 126, 127, 134], "paramet": [5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 65, 67, 68, 72, 74, 78, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135], "graphdefinit": [5, 11, 13, 15, 65, 96, 97, 100, 101, 102, 119, 137], "defin": [5, 11, 13, 15, 59, 65, 68, 72, 74, 82, 96, 97, 98, 100, 102, 104, 119, 124, 126, 127, 129], "represent": [5, 11, 13, 15, 36, 65, 80, 81, 82, 101, 105, 107], "str": [5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 65, 67, 68, 72, 74, 81, 82, 84, 85, 86, 87, 89, 91, 93, 95, 100, 101, 103, 104, 105, 108, 109, 113, 116, 117, 119, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134], "directori": [5, 7, 44, 46, 48, 49, 50, 51, 52, 54, 61, 62, 65, 116, 132], "option": [5, 7, 9, 11, 13, 15, 20, 30, 63, 65, 68, 74, 81, 82, 89, 91, 93, 95, 99, 100, 101, 103, 104, 105, 107, 113, 116, 120, 121, 122, 124, 126, 132, 139], "list": [5, 6, 7, 8, 9, 11, 13, 15, 17, 22, 30, 33, 35, 36, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 65, 67, 68, 72, 74, 78, 81, 82, 84, 89, 91, 93, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 113, 114, 116, 119, 120, 126, 128, 129, 132, 134], "Will": [5, 65, 67, 72, 74, 98], "avail": [5, 7, 22, 65, 111, 112, 113, 133], "inform": [5, 11, 13, 15, 17, 18, 20, 22, 30, 38, 40, 42, 65, 100, 103, 104, 105], "given": [5, 11, 15, 20, 63, 65, 82, 98, 113, 120, 122], "input": [5, 7, 11, 13, 15, 44, 46, 48, 49, 54, 61, 65, 67, 72, 74, 80, 81, 85, 89, 90, 91, 92, 93, 94, 95, 100, 101, 103, 107, 111, 113, 114, 124, 129, 131], "pulsemap": [5, 11, 13, 15, 21, 65, 72, 74, 119, 126], "If": [5, 11, 13, 20, 22, 35, 63, 65, 81, 91, 95, 100, 103, 104, 105, 113, 116, 120, 137, 139], "default": [5, 7, 9, 11, 13, 15, 20, 22, 30, 33, 42, 44, 46, 49, 54, 58, 62, 63, 65, 67, 68, 72, 74, 80, 81, 82, 89, 90, 91, 92, 93, 95, 98, 99, 100, 101, 103, 104, 105, 107, 113, 114, 116, 117, 118, 120, 122, 124, 126, 132], "argument": [5, 9, 62, 65, 95, 100, 116, 120, 122, 124, 126, 127, 129], "none": [5, 7, 8, 9, 11, 13, 15, 20, 22, 30, 34, 35, 36, 44, 46, 48, 49, 50, 51, 52, 54, 58, 59, 61, 62, 63, 65, 67, 68, 74, 81, 82, 89, 91, 93, 95, 99, 100, 101, 103, 104, 105, 107, 108, 109, 113, 116, 118, 119, 120, 122, 124, 125, 126, 128, 132, 134], "valid": [5, 9, 36, 59, 65, 108, 109, 113, 116, 118, 122, 124, 129], "test": [5, 9, 59, 65, 113, 119, 126, 133, 137], "prepare_data": [5, 9], "return": [5, 7, 8, 9, 11, 13, 15, 17, 18, 20, 33, 34, 36, 48, 49, 50, 51, 52, 57, 58, 59, 61, 62, 63, 67, 78, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135], "descript": [5, 105, 122], "print": [5, 105, 116, 134], "properti": [5, 9, 11, 18, 25, 36, 48, 61, 82, 84, 94, 103, 104, 109, 113, 117, 125, 134], "produc": [5, 48, 80, 117, 120], "truth_tabl": [5, 11, 13, 15, 62, 119, 120, 126], "tabl": [5, 11, 13, 15, 17, 18, 20, 38, 40, 42, 48, 58, 62, 63, 84, 100, 120], "event_truth": 5, "pulse_truth": 5, "puls": [5, 11, 13, 15, 17, 21, 22, 34, 36, 42, 58, 72, 78, 82, 95, 100, 103, 104, 114], "come": [5, 113, 137], "citat": 5, "describ": [5, 137], "how": [5, 96, 97, 102], "cite": 5, "comment": 5, "creator": 5, "person": [5, 118], "who": [5, 131], "creat": [5, 9, 58, 100, 103, 124, 125, 129, 137, 139], "dict": [5, 8, 9, 11, 15, 22, 33, 36, 58, 68, 84, 85, 86, 87, 95, 100, 101, 103, 105, 108, 109, 116, 119, 122, 124, 126, 127, 128, 129, 131], "int": [5, 7, 8, 9, 11, 13, 15, 24, 27, 35, 44, 46, 48, 49, 50, 51, 52, 54, 59, 61, 62, 63, 67, 80, 81, 82, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 116, 118, 119, 120, 122, 126, 129, 134], "each": [5, 22, 33, 36, 57, 58, 62, 63, 67, 68, 78, 80, 81, 82, 85, 86, 87, 89, 91, 93, 98, 100, 101, 103, 104, 107, 111, 113, 114, 116, 119, 132], "select": [5, 8, 9, 11, 13, 15, 27, 59, 119, 120, 126, 137], "available_backend": 5, "dataset_dir": 5, "path": [5, 11, 13, 15, 20, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 63, 67, 72, 74, 81, 100, 105, 108, 116, 119, 122, 124, 125, 126, 132, 139], "A": [5, 7, 9, 11, 35, 48, 49, 50, 51, 52, 58, 63, 65, 67, 68, 72, 82, 100, 101, 104, 105, 111, 113, 114, 118, 120, 124, 126, 127, 129, 139], "host": 5, "erda": 5, "just": [5, 82, 139], "fill": 5, "out": [5, 11, 13, 91, 109, 110, 118, 134, 137, 139], "_file_hash": 5, "attribut": [5, 11, 13, 15, 78, 113], "id": [5, 7, 9, 13, 44, 46, 54, 63, 84, 100, 119], "sharelink": 5, "assum": [5, 72, 80, 84, 100, 104, 113, 114], "singl": [5, 11, 17, 61, 63, 82, 91, 104, 117, 126, 127], "compress": 5, "tar": 5, "gz": 5, "suppos": [5, 104], "below": [5, 59, 103, 120, 137, 139], "http": [5, 95, 98, 100, 118, 137], "sid": 5, "dk": 5, "share_redirect": 5, "fbeezabg5a": 5, "databas": [5, 15, 58, 63, 120, 139], "Then": [5, 137], "i3_fil": [6, 20], "gcd_file": [6, 20, 72, 74], "output_fold": [6, 67], "worker": [6, 7, 44, 54, 57, 62, 67, 122, 134], "i3deploy": [6, 66, 71], "ani": [6, 7, 8, 9, 11, 13, 15, 33, 34, 35, 36, 48, 50, 51, 52, 61, 63, 72, 78, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 116, 118, 120, 122, 124, 125, 126, 127, 128, 129, 134, 139], "output_fil": 7, "global_index": 7, "pool": [7, 77, 78, 79, 89, 91, 93], "synchron": 7, "file_read": 7, "save_method": 7, "outdir": [7, 44, 46, 54], "index_column": [7, 11, 13, 15, 44, 46, 54, 58, 59, 62, 63, 119, 120, 126], "num_work": [7, 8, 9, 46, 62, 119], "abc": [7, 11, 18, 48, 61, 67, 105, 117, 120, 125, 126, 127], "logger": [7, 9, 11, 18, 35, 48, 50, 51, 52, 59, 61, 67, 68, 98, 105, 109, 117, 120, 121, 134, 139], "convers": [7, 37, 38, 42, 44, 54, 103, 139], "parallel": [7, 44, 46, 54], "extract": [7, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 38, 40, 41, 42, 57, 72, 74, 113], "also": [7, 11, 13, 15, 59, 89, 126], "assign": [7, 11, 13, 15, 78, 82, 137], "exampl": [7, 33, 59, 78, 82, 104, 114, 118, 126, 127, 139], "initi": [7, 35, 49, 63, 67, 81, 89, 95, 99], "graphnetfileread": [7, 47, 48, 49, 50, 51, 52], "graphnetwrit": [7, 60, 61, 62, 63], "save": [7, 18, 20, 33, 38, 40, 42, 44, 46, 54, 58, 60, 61, 63, 105, 116, 118, 119, 120, 124, 125, 126, 127, 139], "interim": [7, 60, 61, 62, 63], "i3extractor": [7, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 44, 46, 48, 54], "parquetextractor": [7, 37, 38, 40, 46, 48], "h5extractor": [7, 39, 40, 48], "prometheusextractor": [7, 41, 42, 48], "event_no": [7, 11, 13, 15, 44, 46, 54, 58, 59, 62, 63, 120, 126], "column": [7, 11, 13, 15, 18, 40, 42, 44, 46, 54, 58, 62, 63, 68, 74, 76, 84, 89, 98, 100, 101, 103, 104, 107, 109, 111, 112, 113, 114, 120], "ad": [7, 11, 13, 15, 21, 44, 46, 54, 80, 91, 95, 100, 103, 104], "cpu": [7, 44, 46, 54, 68, 139], "multiprocess": [7, 44, 46, 54, 139], "get_map_funct": 7, "nb_file": 7, "map": [7, 11, 13, 15, 21, 22, 58, 85, 86, 87, 100, 101, 113, 124, 126, 127, 129], "pure": [7, 18, 19, 22, 36], "tupl": [7, 11, 13, 15, 34, 36, 58, 81, 89, 91, 93, 104, 113, 114, 119, 122, 131], "merge_fil": [7, 61, 62, 63], "kwarg": [7, 8, 11, 13, 15, 35, 48, 50, 51, 52, 61, 78, 81, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 105, 107, 108, 109, 111, 112, 113, 116, 118, 120, 124, 126, 127, 134], "merg": [7, 61, 62, 63, 118, 139], "call": [7, 22, 36, 80, 82, 113, 116, 120, 134], "instanti": [7, 9, 127], "remov": [8, 44, 54, 100, 119, 122], "less": [8, 119], "two": [8, 91, 116, 118, 119], "dom": [8, 11, 13, 15, 78, 82, 89, 103, 104, 107, 119], "hit": [8, 119], "should": [8, 11, 13, 15, 18, 20, 33, 59, 65, 68, 81, 82, 89, 95, 100, 101, 107, 114, 118, 119, 124, 126, 127, 129, 137, 139], "occur": [8, 119], "product": [8, 81, 119], "selection_nam": 8, "check": [8, 34, 35, 36, 48, 58, 103, 122, 132, 133, 137, 139], "whether": [8, 34, 36, 58, 80, 81, 89, 91, 93, 95, 105, 118, 128, 132, 133], "shuffl": [8, 9, 57, 62, 119], "bool": [8, 34, 35, 36, 58, 59, 61, 72, 80, 81, 89, 91, 93, 95, 100, 103, 104, 105, 109, 116, 118, 119, 120, 122, 128, 131, 132, 133, 134], "batch_siz": [8, 9, 114, 119], "persistent_work": [8, 119], "prefetch_factor": 8, "t_co": 8, "callabl": [8, 11, 36, 81, 82, 84, 85, 86, 87, 100, 108, 113, 119, 120, 124, 126, 127, 128, 133], "classmethod": [8, 11, 105, 118, 124, 125], "from_dataset_config": 8, "datasetconfig": [8, 11, 59, 123, 126], "dataset_refer": 9, "dataset_arg": 9, "test_select": [9, 126], "2": [9, 33, 44, 54, 81, 82, 89, 91, 93, 98, 101, 104, 107, 112, 114, 118, 126, 139], "train_val_split": 9, "0": [9, 11, 13, 15, 44, 46, 49, 54, 59, 72, 78, 81, 82, 89, 90, 91, 93, 98, 99, 101, 104, 107, 114, 118, 119, 126], "9": 9, "split_se": 9, "lightningdatamodul": 9, "sqlitedataset": [9, 14, 15], "parquetdataset": [9, 12, 13], "non": [9, 33, 36, 58, 89, 118], "refer": [9, 87, 126], "ratio": [9, 81], "42": [9, 139], "seed": [9, 11, 13, 15, 59, 100, 101, 119, 126], "setup": [9, 116, 139], "stage": [9, 116], "lightn": [9, 116], "fit": [9, 109, 118, 120, 129], "train_dataload": [9, 109], "val_dataload": [9, 109], "test_dataload": 9, "teardown": 9, "cleanup": 9, "shutdown": 9, "procedur": 9, "close": 9, "after": [9, 81, 89, 91, 93, 116, 122, 126], "overrid": [9, 116], "parquet_dataset": [10, 12], "sqlite_dataset": [10, 14], "load_modul": [10, 11, 105], "parse_graph_definit": [10, 11], "parse_label": [10, 11], "ensembledataset": [10, 11, 126], "class_nam": [11, 35, 48, 50, 51, 52, 61, 127, 134], "cfg": 11, "arg": [11, 13, 15, 17, 35, 78, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 105, 107, 108, 109, 111, 112, 113, 118, 122, 124, 134], "seri": [11, 13, 15, 21, 22, 34, 36, 58, 72, 89, 103, 107], "node": [11, 13, 15, 77, 78, 82, 89, 90, 91, 93, 96, 97, 98, 100, 101, 107, 114], "multipl": [11, 13, 15, 17, 104, 116, 126, 134], "store": [11, 13, 15, 58, 61, 62, 63, 117], "node_truth": [11, 13, 15, 119, 126], "uniqu": [11, 13, 15, 58, 103, 114, 126], "indici": [11, 13, 15, 34, 59, 118], "node_truth_t": [11, 13, 15, 119, 126], "string_select": [11, 13, 15, 119, 126], "subset": [11, 13, 15, 81, 89, 91, 93, 107], "queri": [11, 13, 15, 58, 59, 63, 81], "pass": [11, 15, 80, 81, 89, 90, 91, 92, 93, 94, 95, 100, 107, 109, 113, 116, 118, 120, 137], "dtype": [11, 13, 15, 100, 101, 135], "float32": [11, 13, 15, 100, 101], "tensor": [11, 13, 15, 68, 78, 80, 81, 82, 84, 89, 90, 91, 92, 93, 94, 95, 99, 103, 107, 108, 109, 113, 114, 118, 131, 135], "loss_weight_t": [11, 13, 15, 119, 126], "per": [11, 13, 15, 22, 58, 81, 82, 89, 107, 113, 118, 120], "loss": [11, 13, 15, 100, 109, 113, 116, 118, 122], "weight": [11, 13, 15, 72, 74, 81, 95, 100, 113, 118, 120, 127, 139], "loss_weight_column": [11, 13, 15, 100, 119, 126], "correspond": [11, 13, 15, 33, 36, 57, 91, 100, 104, 120, 124, 126, 127, 129, 132, 139], "loss_weight_default_valu": [11, 13, 15, 100, 126], "float": [11, 13, 15, 72, 81, 89, 90, 98, 99, 100, 101, 103, 104, 107, 109, 116, 118, 119, 126], "note": [11, 13, 15, 49, 62, 63, 104, 127], "valu": [11, 13, 15, 30, 33, 58, 81, 82, 99, 100, 101, 114, 117, 118, 122, 124], "specifi": [11, 13, 15, 59, 78, 104, 113, 116, 139], "case": [11, 13, 15, 22, 44, 46, 49, 54, 72, 82, 104, 113, 139], "That": [11, 13, 15, 91, 112, 117], "ignor": [11, 13, 15, 36, 62], "resolv": [11, 13, 15, 59], "10000": [11, 13, 15, 59, 80], "5": [11, 13, 15, 59, 89, 107, 122, 139], "20": [11, 13, 15, 59, 134], "dictionari": [11, 15, 18, 33, 34, 36, 48, 58, 100, 101, 105, 124, 126, 127, 129], "from_config": [11, 105, 125, 126, 127], "instanc": [11, 18, 20, 30, 36, 38, 40, 42, 44, 46, 49, 54, 100, 105, 117, 119, 125, 127, 139], "concaten": [11, 33, 91], "one": [11, 13, 20, 58, 72, 82, 126, 127, 132, 137, 139], "query_t": [11, 13, 15], "sequential_index": [11, 13, 15], "some": [11, 13, 15, 44, 46, 49, 54, 100, 104], "sequenti": [11, 13], "len": [11, 13, 104], "self": [11, 13, 100, 124, 129], "_may_": [11, 13], "_indic": [11, 13], "entir": [11, 13, 105], "impos": [11, 13], "befor": [11, 13, 91, 99, 107, 113, 116], "ndarrai": [11, 13, 30, 100, 104, 120], "scalar": [11, 13, 18, 114, 118], "length": [11, 13, 36, 103, 104, 114, 116], "rais": [11, 13, 20, 22, 105, 124, 129], "columnmissingexcept": [11, 13, 75, 76], "element": [11, 13, 18, 33, 36, 109, 114, 119, 128], "present": [11, 13, 20, 35, 114, 122, 132, 133], "add_label": 11, "fn": [11, 36, 124, 128], "kei": [11, 22, 33, 34, 36, 58, 63, 81, 82, 103, 117, 126, 127], "add": [11, 81, 91, 122, 131, 137, 139], "custom": [11, 48, 75, 100, 116], "concatdataset": 11, "collect": [11, 19, 32, 118, 135], "iter": 11, "parquetwrit": [13, 38, 46, 60, 62], "multiprocessing_context": 13, "spawn": 13, "avoid": [13, 134, 137], "thread": [13, 139], "lock": 13, "cache_s": 13, "cach": 13, "memori": 13, "must": [13, 17, 48, 49, 58, 61, 78, 116, 120, 137], "least": [13, 137, 139], "pytorch": [15, 116, 139], "i3genericextractor": [16, 19], "i3hybridrecoextractor": [16, 19], "i3ntmuonlabelsextractor": [16, 19], "i3particleextractor": [16, 19], "i3pisaextractor": [16, 19], "i3quesoextractor": [16, 19], "i3retroextractor": [16, 19], "i3splinempeextractor": [16, 19], "i3tumextractor": [16, 19], "parquet_extractor": [16, 37], "h5_extractor": [16, 39], "prometheus_extractor": [16, 41], "combinedextractor": [16, 17], "combin": [17, 33, 46, 89, 126], "extractor_nam": [17, 18, 20, 22, 25, 38, 40, 42], "same": [17, 36, 58, 78, 82, 104, 111, 114, 116, 128, 134], "mix": 17, "fail": 17, "__call__": [18, 20, 48, 68], "output": [18, 63, 67, 68, 80, 81, 89, 90, 91, 92, 94, 103, 104, 107, 109, 111, 112, 113, 120, 126, 127, 139], "var1": 18, "var_n": 18, "variabl": [18, 20, 22, 36, 48, 91, 103, 104, 114, 120, 134], "arrai": [18, 30, 33, 103, 104, 114], "like": [18, 36, 82, 99, 113, 114, 118, 135, 137], "shape": [18, 99, 100, 103, 114, 118], "n": [18, 78, 82, 99, 114, 118], "where": [18, 44, 46, 49, 54, 100, 101, 103, 104, 107, 114, 117], "denot": [18, 116], "conjunct": [18, 113], "fileread": [18, 48], "keep": [18, 20, 38, 40, 42, 103], "proven": [18, 20, 38, 40, 42], "mc_truth": [18, 42], "get": [18, 34, 58, 84, 116, 119, 139], "i3fram": [19, 22, 34, 36, 72, 74], "frame": [19, 20, 22, 32, 35, 36, 74], "i3_filt": [19, 32, 44, 46, 49, 54], "i3featureextractoricecube86": [19, 21], "i3featureextractoricecubedeepcor": [19, 21], "i3featureextractoricecubeupgrad": [19, 21], "i3pulsenoisetruthflagicecubeupgrad": [19, 21], "i3galacticplanehybridrecoextractor": [19, 23], "i3ntmuonlabelextractor": [19, 24], "i3splinempeicextractor": [19, 29], "observatori": [20, 49], "set_gcd": 20, "gframe": 20, "cframe": 20, "gcd": [20, 34, 44, 46, 49, 54, 57, 72, 74, 132], "pair": [20, 44, 46, 49, 54, 80], "member": [20, 22, 36, 48, 103, 126, 127, 134], "being": [20, 72, 80, 111, 113], "attempt": 20, "find": [20, 99, 132], "c": [20, 33, 82, 99, 118, 139], "instead": [20, 44, 46, 49, 54, 118], "those": 20, "runtimeerror": 20, "86": [21, 85], "nois": [21, 34, 72], "flag": [21, 72], "exclude_kei": 22, "dynam": [22, 81, 91, 92, 93], "pars": [22, 121, 122, 123, 124, 129], "tri": [22, 36], "automat": [22, 62, 100, 118, 137], "cast": [22, 36], "done": [22, 82, 134, 137], "recurs": [22, 36, 44, 46, 48, 49, 54, 105, 128, 132], "look": [22, 139], "signatur": [22, 36], "similar": [22, 36, 103, 139], "handl": [22, 118, 122, 131, 134], "hand": 22, "special": [22, 72, 107, 114], "mc": [22, 58], "tree": 22, "trigger": 22, "exclud": [22, 139], "valueerror": [22, 105], "hybrid": 23, "galatict": 23, "plane": [23, 118], "tum": [24, 31], "dnn": [24, 31], "padding_valu": [24, 27, 114], "northeren": 24, "i3particl": 25, "other": [25, 58, 98, 118, 137], "algorithm": 25, "comparison": [25, 118], "quantiti": [26, 113, 114], "pisa": [26, 139], "queso": 27, "retro": 28, "splinemp": 29, "border": 30, "mctree": [30, 34], "boundari": 30, "volum": 30, "coordin": [30, 84, 99, 103, 104, 114], "particl": [30, 58, 117], "start": [30, 137, 139], "stop": [30, 116, 122], "within": [30, 78, 81, 82, 91, 98], "hard": [30, 103], "i3mctre": 30, "flatten_nested_dictionari": [32, 33], "serialis": [32, 33], "transpose_list_of_dict": [32, 33], "frame_is_montecarlo": [32, 34], "frame_is_nois": [32, 34], "get_om_keys_and_pulseseri": [32, 34], "i3filt": [32, 35, 44, 46, 49, 54], "nullspliti3filt": [32, 35, 44, 46, 49, 54], "i3filtermask": [32, 35], "is_boost_enum": [32, 36], "is_boost_class": [32, 36], "is_icecube_class": [32, 36], "is_typ": [32, 36], "is_method": [32, 36], "break_cyclic_recurs": [32, 36], "get_member_vari": [32, 36], "cast_object_to_pure_python": [32, 36], "cast_pulse_series_to_pure_python": [32, 36], "manipul": [33, 96, 97, 102], "obj": [33, 36, 128], "parent_kei": 33, "separ": [33, 99, 116, 139], "flatten": 33, "nest": 33, "d": [33, 99, 100, 103, 114, 137], "b": [33, 78, 82, 114], "a__b": 33, "applic": 33, "parent": 33, "__": [33, 36], "nester": 33, "json": [33, 126], "therefor": [33, 49], "we": [33, 36, 59, 104, 137, 139], "outer": 33, "abl": [33, 103, 139], "de": 33, "transpos": 33, "mont": 34, "carlo": 34, "simul": [34, 42, 52, 72], "icetrai": [34, 36, 44, 46, 49, 54, 68, 133], "pulseseri": 34, "calibr": [34, 36], "gcd_dict": [34, 36], "p": [34, 118], "om": [34, 36], "i3calibr": 34, "indicesfor": 34, "filter": [35, 44, 46, 49, 54, 134], "log_fold": [35, 48, 50, 51, 52, 61, 134], "skip": [35, 91], "null": [35, 58], "filter_nam": 35, "filter_ani": 35, "filtermask": 35, "true": [35, 58, 72, 89, 91, 93, 95, 100, 103, 105, 116, 118, 120, 126, 127, 129, 132], "kept": 35, "fals": [35, 72, 80, 81, 91, 95, 100, 105, 116, 118, 120, 126], "boost": 36, "enum": 36, "ensur": [36, 57, 118, 134, 137, 139], "isn": 36, "return_discard": 36, "mangl": 36, "take": [36, 82, 104, 107, 137], "mainli": 36, "cannot": [36, 107, 124, 129], "trivial": [36, 113], "For": [36, 103, 116], "doe": [36, 111, 113, 127], "try": 36, "equival": 36, "its": [36, 107], "regular": [36, 81], "otherwis": [36, 118], "itself": [36, 113], "deem": 36, "wai": [36, 59, 137, 139], "optic": [36, 104], "found": [36, 44, 46, 49, 54, 62, 104, 118], "ofintern": 37, "between": [38, 80, 96, 97, 98, 99, 102, 109, 113, 114, 116, 118, 126, 127], "param": [38, 40, 42], "h5hitextractor": [39, 40], "h5truthextractor": [39, 40], "h5": [40, 51], "column_nam": 40, "hitdata": 40, "truthdata": 40, "prometheustruthextractor": [41, 42], "prometheusfeatureextractor": [41, 42], "table_nam": [42, 58], "initial_st": 42, "photon": 42, "deprec": [43, 44, 53, 54, 131], "parquetdataconvert": [43, 44], "gcd_rescu": [44, 46, 49, 54, 132], "i3toparquetconvert": [44, 45, 46], "subfold": [44, 46, 49, 54], "search": [44, 46, 48, 49, 50, 51, 52, 54, 132], "convent": [44, 46, 49, 54], "folder": [44, 46, 49, 50, 51, 52, 54, 67], "accompani": [44, 46, 49, 54], "howev": [44, 46, 49, 54], "broken": [44, 46, 49, 54], "In": [44, 46, 48, 49, 54, 61, 126, 127, 139], "icetray_verbos": [44, 46, 49, 54], "verbos": [44, 46, 49, 54, 109, 116], "pframe": [44, 46, 49, 54], "i3tosqliteconvert": [45, 46, 54], "parquettosqliteconvert": [45, 46], "preconfigur": 46, "written": [46, 67], "parquetread": [47, 50], "liquidoread": [47, 51], "prometheusread": [47, 52], "addit": [48, 61, 78, 81, 109, 118, 120], "accepted_file_extens": 48, "accepted_extractor": 48, "accept": [48, 137], "compat": [48, 59, 113], "extracor_nam": 48, "find_fil": [48, 49, 50, 51, 52], "mai": [48, 59, 68, 103, 139], "overwritten": [48, 122, 124], "match": [48, 120, 132, 135], "set_extractor": 48, "validate_fil": 48, "input_fil": [48, 67], "reli": 49, "environ": [49, 139], "sqlitedataconvert": [53, 54, 139], "pairwise_shuffl": [55, 57], "database_exist": [55, 58], "query_databas": [55, 58], "get_primary_kei": [55, 58], "database_table_exist": [55, 58], "run_sql_cod": [55, 58], "save_to_sql": [55, 58], "attach_index": [55, 58], "create_t": [55, 58], "create_table_and_save_to_sql": [55, 58], "stringselectionresolv": [55, 59], "rng": 57, "relat": [57, 132], "i3_list": [57, 132], "gcd_list": [57, 132], "correpond": 57, "handi": 57, "becaus": 57, "even": 57, "files_list": 57, "gcd_shuffl": 57, "i3_shuffl": 57, "database_path": [58, 120], "execut": 58, "result": [58, 62, 82, 104, 116, 118, 119, 128, 139], "datafram": [58, 59, 61, 84, 109, 119, 120], "primari": [58, 63], "splitinicepuls": 58, "df": 58, "alreadi": [58, 139], "attach": 58, "default_typ": 58, "integer_primary_kei": 58, "NOT": [58, 118], "integ": [58, 89, 91, 92, 118], "Such": 58, "row": [58, 63, 104, 114], "appropri": [58, 113], "expect": [58, 59, 61, 72, 74, 100, 103], "doesn": 58, "indic": [59, 76, 82, 89, 99, 104, 107, 116, 122, 137], "use_cach": 59, "flexibl": 59, "show": [59, 116], "involv": 59, "cover": 59, "current": [59, 107, 116, 137, 139], "yml": [59, 122, 126, 127], "50000": [59, 126], "ab": [59, 118, 126], "12": [59, 95, 126], "14": [59, 126], "16": [59, 80, 89, 126], "13": [59, 139], "panda": [59, 120], "syntax": [59, 118], "fix": 59, "randomli": [59, 100, 101, 127], "dataformat": [60, 63], "sqlitewrit": [60, 63], "graphnetfilesavemethod": [61, 63], "save_fil": 61, "reciev": 61, "file_extens": 61, "output_dir": [61, 62, 63], "smaller": 61, "expects_merged_datafram": 61, "write": [62, 72, 74, 139], "events_per_batch": 62, "constitut": 62, "subsampl": 62, "full": 62, "200000": 62, "merged_database_nam": 63, "max_table_s": 63, "db": [63, 119, 120], "maximum": [63, 82, 103, 104, 113, 122], "proceedur": 63, "partit": 63, "size": [63, 81, 82, 89, 91, 92, 93, 95, 114, 122], "approxim": 63, "you": [63, 67, 80, 126, 127, 137, 139], "mani": 63, "exceed": 63, "400": 63, "million": 63, "tend": 63, "notic": [63, 114, 118], "slower": 63, "put": 63, "primary_key_rescu": 63, "database_nam": 63, "my_databas": 63, "readi": 64, "testdataset": [64, 65], "erdahost": 65, "outsid": [65, 137], "context": 65, "cleaning_modul": [66, 71], "inference_modul": [66, 71], "deploymentmodul": [66, 67, 68, 74], "n_worker": 67, "baseclass": 67, "thei": 67, "appear": 67, "independ": 67, "sequenc": [67, 80, 81, 104, 114, 119], "determin": [67, 89], "divid": 67, "model_config": [68, 72, 74, 121, 123, 124, 126, 129], "state_dict": [68, 72, 74, 105, 108, 131], "devic": 68, "prediction_column": [68, 74, 109, 119], "overwrit": [68, 116], "modelconfig": [68, 72, 74, 105, 123, 126, 127], "comput": [68, 81, 99, 109, 113, 114, 118, 124, 126, 127, 129], "i3pulsecleanermodul": [71, 72], "i3inferencemodul": [71, 72, 74], "pulsemap_extractor": [72, 74], "model_nam": [72, 74], "discard_empty_ev": 72, "clean": [72, 137, 139], "pulsmap": [72, 74], "summar": [72, 74, 103, 104], "help": [72, 74, 122, 137], "entri": [72, 74, 91, 114, 122], "dynedg": [72, 74, 77, 88, 92, 93, 95], "associ": [72, 74, 100, 104, 112, 113, 118], "7": [72, 82], "consid": [72, 89, 139], "posit": [72, 80, 81, 82, 95, 104, 112, 124, 129], "signal": 72, "els": 72, "elimin": 72, "whose": 72, "empti": 72, "speed": [72, 99], "especi": 72, "sinc": [72, 118], "further": 72, "calcul": [72, 80, 98, 101, 103, 109, 114, 117, 118], "energy_reco": 74, "miss": 76, "embed": [77, 79, 89, 95, 107, 111, 113], "rnn_tito": [77, 88], "convnet": [77, 88], "dynedge_jinst": [77, 88], "dynedge_kaggle_tito": [77, 88], "icemix": [77, 88], "edg": [77, 81, 82, 91, 92, 93, 96, 99, 100, 101, 102, 103, 114], "node_rnn": [77, 89, 106], "unbatch_edge_index": [77, 78], "attributecoarsen": [77, 78], "domcoarsen": [77, 78], "customdomcoarsen": [77, 78], "domandtimewindowcoarsen": [77, 78], "standardaveragedmodel": [77, 108], "standardmodel": [77, 108, 109], "calculate_xyzt_homophili": [77, 114], "calculate_distance_matrix": [77, 114], "knn_graph_batch": [77, 114], "array_to_sequ": [77, 114], "oper": [78, 81, 88, 91], "cluster": [78, 81, 82, 89, 91, 93, 103, 104, 107], "local": [78, 85, 86, 87, 103, 122], "edge_index": [78, 81, 114], "accord": [78, 82, 98, 100, 101, 104], "vector": [78, 81, 82, 118], "longtensor": [78, 82, 114], "mathbf": [78, 82], "ldot": [78, 82], "reduce_opt": 78, "avg": 78, "avg_pool": 78, "avg_pool_x": 78, "max": [78, 81, 91, 93, 118, 122], "max_pool": [78, 82], "max_pool_x": [78, 82], "min": [78, 82, 91, 93], "min_pool": [78, 79, 82], "min_pool_x": [78, 79, 82], "sum": [78, 82, 91, 93, 109, 120], "sum_pool": [78, 79, 82], "sum_pool_x": [78, 79, 82], "forward": [78, 80, 81, 84, 89, 90, 91, 92, 93, 94, 95, 98, 100, 103, 107, 109, 113, 118], "simplecoarsen": 78, "window": 78, "time_window": 78, "sinusoidalposemb": [79, 80], "fourierencod": [79, 80], "spacetimeencod": [79, 80], "dynedgeconv": [79, 81, 91], "edgeconvtito": [79, 81], "dyntran": [79, 81, 89, 93], "droppath": [79, 81], "mlp": [79, 81, 91], "block_rel": [79, 81], "attention_rel": [79, 81], "sum_pool_and_distribut": [79, 82], "group_bi": [79, 82], "group_pulses_to_dom": [79, 82], "group_pulses_to_pmt": [79, 82], "std_pool_x": [79, 82], "std_pool": [79, 82], "dim": [80, 81], "n_freq": 80, "scale": [80, 81, 92, 95, 99, 100, 103, 104, 113, 118], "lightningmodul": [80, 81, 105, 116, 134], "sinusoid": [80, 95], "competit": [80, 81, 85, 93, 95], "2nd": [80, 95], "place": [80, 95, 131, 137], "solut": [80, 81, 93, 95, 137], "see": [80, 89, 98, 100, 116, 137, 139], "arxiv": [80, 98, 118], "2310": 80, "15674": 80, "fourier": 80, "encod": 80, "attent": [80, 81, 95], "1706": 80, "03762": 80, "seen": 80, "soft": 80, "digit": 80, "dimens": [80, 81, 85, 86, 87, 89, 90, 91, 93, 95, 104, 107, 113, 114, 118], "frequenc": 80, "seq_length": [80, 95, 114], "output_dim": 80, "n_featur": [80, 95], "incorpor": 80, "meaning": 80, "four": 80, "mandatori": 80, "128": [80, 90, 91, 93, 122], "dimension": [80, 81], "384": [80, 95], "6": [80, 82, 95], "spacetim": 80, "space": [80, 98, 99, 113, 120], "interv": 80, "32": [80, 95], "aggr": 81, "nb_neighbor": 81, "features_subset": [81, 89, 91, 93, 107], "edgeconv": 81, "convolut": [81, 90, 91, 92, 93], "aggreg": [81, 82], "8": [81, 82, 89, 91, 93, 101, 107, 118, 119, 137, 139], "neighbour": [81, 89, 91, 93, 98, 99, 101, 107, 114], "slice": [81, 91], "sparsetensor": 81, "messagepass": 81, "tito": [81, 89, 93], "reset_paramet": 81, "reset": 81, "learnabl": [81, 88, 89, 90, 91, 92, 93, 94, 95, 107, 113], "messag": [81, 116, 134], "x_i": 81, "x_j": 81, "layer_s": 81, "n_head": [81, 89, 93], "dyntrans1": 81, "head": [81, 89, 93, 95, 113], "multiheadattent": 81, "drop_prob": 81, "drop": [81, 90], "stochast": 81, "depth": [81, 95, 104], "probabl": [81, 118], "dure": [81, 95, 100, 113, 116], "extra_repr": [81, 105], "extra": [81, 139], "in_featur": 81, "hidden_featur": 81, "out_featur": 81, "activ": [81, 89, 91, 103, 107, 109, 113, 137, 139], "gelu": 81, "dropout_prob": 81, "multi": [81, 91], "perceptron": [81, 91], "hidden": [81, 89, 91, 92, 107], "dropout": [81, 89, 107], "input_dim": 81, "num_head": 81, "mlp_ratio": 81, "qkv_bia": 81, "qk_scale": 81, "attn_drop": 81, "drop_path": 81, "init_valu": 81, "norm_lay": 81, "normal": [81, 91, 104, 113], "layernorm": 81, "attn_head_dim": 81, "beitv2": 81, "4": [81, 92, 95, 112], "feedforward": 81, "bia": 81, "term": [81, 118], "matric": 81, "factor": [81, 104, 116], "dot": 81, "gamma_1": 81, "gamma_2": 81, "key_padding_mask": 81, "rel_pos_bia": 81, "kv": 81, "proj_drop": 81, "mechan": 81, "rel": [81, 95], "multipli": [81, 116], "head_dim": 81, "q": 81, "k": [81, 89, 91, 93, 98, 101, 107, 114, 118], "attn_mask": 81, "negat": 82, "cluster_index": 82, "distribut": [82, 91, 112, 113, 118, 120], "ident": [82, 113], "pmt": [82, 104], "f1": 82, "f2": 82, "groupbi": 82, "3": [82, 89, 90, 93, 99, 104, 107, 112, 114, 118, 137, 139], "matrix": [82, 98, 99, 114, 118], "mathbb": 82, "r": [82, 98, 139], "n_1": 82, "n_b": 82, "f": 82, "obtain": [82, 118], "wise": 82, "dens": 82, "fc": 82, "known": 82, "std": 82, "repres": [82, 89, 100, 101, 103, 104, 114, 124, 126, 127], "averag": [82, 108, 118], "torch_geometr": [82, 114], "version": [82, 104, 113, 116, 137, 139], "standardis": 83, "icecubekaggl": [83, 85], "icecubedeepcor": [83, 85], "icecubeupgrad": [83, 85], "liquido_v1": [83, 86], "orca150superdens": [83, 87], "trident1211": [83, 87], "icecubeupgrade7": [83, 87], "waterdemo81": [83, 87], "baikalgvd8": [83, 87], "icedemo81": [83, 87], "arca115": [83, 87], "orca150": [83, 87], "icecubedeepcore8": [83, 87], "icecubegen2": [83, 87], "ins": 84, "feature_map": [84, 85, 86, 87], "input_featur": [84, 100], "input_feature_nam": [84, 100, 101, 103], "adjac": 84, "geometry_t": [84, 85, 86, 87], "public": [84, 120], "retriev": 84, "geometri": [84, 100], "string_index_nam": 84, "sensor_position_nam": 84, "xyz": [84, 85, 86, 87, 103, 104], "sensor_index_nam": 84, "sensor": [84, 100], "geometry_table_path": [85, 86, 87], "home": [85, 86, 87, 122, 139], "runner": [85, 86, 87, 122], "lib": [85, 86, 87, 122, 139], "python3": [85, 86, 87, 122], "string_id_column": [85, 86, 87], "sensor_id_column": [85, 86, 87], "sensor_id": [85, 87], "icecube_upgrad": [85, 87], "prototyp": 86, "liquid": 86, "fiber_id": 86, "sipm_id": 86, "orca_150": 87, "sensor_string_id": 87, "trident": 87, "demo_wat": 87, "gvd": 87, "demo_ic": 87, "arca": 87, "orca": 87, "icecube_deepcor": 87, "icecube_gen2": 87, "dynedgejinst": [88, 92], "dynedgetito": [88, 89, 93], "deepic": [88, 95], "rnn_dynedg": 89, "intend": [89, 107, 139], "amount": 89, "nb_input": [89, 90, 91, 92, 93, 94, 107, 111, 112, 113], "time_series_column": [89, 107], "treat": [89, 107], "nb_neighbour": [89, 91, 93, 107], "rnn_layer": 89, "rnn_hidden_s": 89, "64": [89, 139], "rnn_dropout": 89, "latent": [89, 91, 93, 95, 107, 111, 112, 113], "metric": [89, 91, 93, 99, 107, 116], "nearest": [89, 91, 93, 98, 99, 101, 107, 114], "dyntrans_layer_s": [89, 93], "post_processing_layer_s": [89, 91, 93], "post": [89, 91, 93], "readout_layer_s": [89, 91, 93], "readout": [89, 91, 93], "global_pooling_schem": [89, 91, 93], "scheme": [89, 91, 93], "embedding_dim": [89, 107], "ie": 89, "use_global_featur": [89, 93], "use_post_processing_lay": [89, 93], "author": [90, 92, 118], "martin": 90, "minh": 90, "nb_output": [90, 92, 94, 103, 111, 112, 113], "nb_intermedi": 90, "dropout_ratio": 90, "fraction": [90, 107, 119], "dynedge_layer_s": 91, "dimenion": [91, 93], "256": [91, 93], "336": [91, 93], "follow": [91, 109, 118, 120, 137, 139], "_and_": 91, "As": 91, "last": [91, 107, 111, 112, 113, 116, 119], "add_global_variables_after_pool": 91, "altern": [91, 118, 137], "activation_lay": 91, "add_norm_lay": 91, "linear": 91, "skip_readout": 91, "exact": [92, 118], "2209": 92, "03042": 92, "oerso": 92, "layer_size_scal": 92, "ic": [93, 95, 103], "univers": [93, 95], "south": [93, 95], "pole": [93, 95], "core": 94, "drhb": 95, "github": [95, 100, 118, 139], "com": [95, 100, 118, 139], "hidden_dim": 95, "192": 95, "head_siz": 95, "depth_rel": 95, "n_rel": 95, "scaled_emb": 95, "include_dynedg": 95, "dynedge_arg": 95, "impact": 95, "no_weight_decai": 95, "cls_tocken": 95, "subject": [95, 118], "decai": 95, "edgedefinit": [96, 97, 98, 99, 100, 102], "drawn": [96, 97, 101, 102], "minkowski": [96, 97], "knngraph": [96, 101], "lex_sort": [96, 104], "gather_cluster_sequ": [96, 104], "identify_indic": [96, 104], "cluster_summarize_with_percentil": [96, 104], "ice_transpar": [96, 104], "knnedg": [97, 98], "radialedg": [97, 98], "euclideanedg": [97, 98], "compute_minkowski_distance_mat": [97, 99], "minkowskiknnedg": [97, 99], "_construct_edg": 98, "definit": [98, 100, 101, 103, 105, 113, 137], "nb_nearest_neighbour": [98, 99, 101], "distanc": [98, 99, 101, 114], "sphere": 98, "chosen": [98, 104, 134], "radiu": 98, "centr": 98, "radial": 98, "center": 98, "euclidean": [98, 137], "org": [98, 118, 139], "pdf": 98, "1809": 98, "06166": 98, "space_coord": 99, "time_coord": 99, "pairwis": [99, 114], "second": 99, "m": [99, 104, 118], "light": [99, 139], "time_like_weight": 99, "prefer": [99, 139], "over": [99, 103], "time_lik": 99, "hold": 100, "alter": 100, "node_definit": [100, 101], "edge_definit": 100, "nodedefinit": [100, 101, 102, 103], "nodesaspuls": [100, 102, 103], "perturbation_dict": [100, 101], "deviat": [100, 101, 104], "perturb": [100, 101], "add_inactive_sensor": 100, "inact": 100, "append": 100, "pad": [100, 104, 114], "sensor_mask": 100, "mask": [100, 114], "string_mask": 100, "sort_bi": 100, "sort": [100, 104], "truth_dict": 100, "custom_label_funct": 100, "loss_weight": [100, 113], "data_path": 100, "num_row": 100, "team": [100, 137], "blob": [100, 118], "getting_start": 100, "md": 100, "your": [101, 137, 139], "percentileclust": [102, 103], "nodeasdomtimeseri": [102, 103], "icemixnod": [102, 103], "num_puls": 103, "node_feature_nam": 103, "new_features_nam": 103, "overridden": 103, "set_number_of_input": 103, "set_output_feature_nam": 103, "measur": [103, 104, 114], "cherenkov": [103, 104], "radiat": [103, 104], "percentil": [103, 104], "summari": [103, 104], "cluster_on": [103, 104], "50": [103, 104, 122], "90": [103, 104], "add_count": [103, 104], "duplic": 103, "id_column": 103, "time_column": 103, "charge_column": 103, "max_activ": 103, "n_puls": 103, "limit": [103, 118], "minimum": [103, 113], "hlc": 103, "max_puls": 103, "768": 103, "z_name": 103, "hlc_name": 103, "coincid": 103, "add_ice_properti": 103, "scatter": [103, 104], "absopt": 103, "ice_arg": 103, "z_offset": [103, 104], "z_scale": [103, 104], "offset": [103, 104], "cluster_column": 104, "numpi": 104, "along": 104, "backward": [104, 118], "feature_idx": 104, "turn": [104, 137], "gather": 104, "nan": 104, "n_cluster": 104, "l": [104, 114], "largest": 104, "n_pmt": 104, "three": [104, 118], "spatial": 104, "column_offset": 104, "feature_nam": 104, "summarization_indic": 104, "cluster_indic": 104, "interpol": [104, 116], "500": 104, "inaccur": 104, "f_absorpt": 104, "absorpt": 104, "f_scatter": 104, "verbose_print": 105, "save_state_dict": 105, "load_state_dict": [105, 108], "karg": [105, 108], "trust": 105, "enough": 105, "eval": [105, 139], "lambda": 105, "express": [105, 118], "consequ": 105, "set_verbose_print_recurs": 105, "about": [105, 124, 126, 127, 129], "extra_repr_recurs": 105, "indent": 105, "recurr": 106, "nodetimernn": 107, "standalon": 107, "pr": 107, "seper": 107, "hidden_s": [107, 111, 112, 113], "num_lay": 107, "clean_up_data_object": 107, "updat": [107, 108, 114, 116], "swa": 108, "ema": 108, "standardaveragemodel": 108, "training_step": [108, 109], "train_batch": [108, 109], "batch_idx": [108, 109, 114], "step": [108, 109, 114, 116], "validation_step": [108, 109], "val_batch": [108, 109], "optimizer_step": 108, "epoch": [108, 116, 122], "optim": [108, 109, 116], "optimizer_closur": 108, "on_train_end": 108, "ones": [108, 139], "backbon": 109, "max_epoch": 109, "early_stopping_pati": [109, 129], "gpu": [109, 122, 139], "ckpt_path": 109, "log_every_n_step": 109, "gradient_clip_v": 109, "distribution_strategi": 109, "trainer_kwarg": 109, "pytorch_lightn": [109, 116, 134], "trainer": [109, 116, 119], "target_label": [109, 113], "target": [109, 111, 113, 118, 129], "prediction_label": [109, 113], "configure_optim": 109, "shared_step": 109, "share": 109, "compute_loss": [109, 113], "pred": [109, 113], "mode": [109, 113], "deactiv": [109, 113], "predict_as_datafram": 109, "additional_attribut": [109, 119], "multiclassclassificationtask": [110, 111], "binaryclassificationtask": [110, 111], "binaryclassificationtasklogit": [110, 111], "azimuthreconstructionwithkappa": [110, 112], "azimuthreconstruct": [110, 112], "directionreconstructionwithkappa": [110, 112], "zenithreconstruct": [110, 112], "zenithreconstructionwithkappa": [110, 112], "energyreconstruct": [110, 112], "energyreconstructionwithpow": [110, 112], "energytcreconstruct": [110, 112], "energyreconstructionwithuncertainti": [110, 112], "vertexreconstruct": [110, 112], "positionreconstruct": [110, 112], "timereconstruct": [110, 112], "inelasticityreconstruct": [110, 112], "learnedtask": [110, 113], "standardlearnedtask": [110, 111, 112, 113], "identitytask": [110, 111, 113], "standardflowtask": [110, 113], "classifi": 111, "untransform": 111, "interpret": 111, "logit": [111, 118], "binari": [111, 118], "default_target_label": [111, 112, 113], "default_prediction_label": [111, 112, 113], "target_pr": 111, "angl": [112, 117], "kappa": [112, 118], "var": 112, "azimuth_pr": 112, "azimuth_kappa": 112, "3d": [112, 118], "vmf": 112, "dir_x_pr": 112, "dir_y_pr": 112, "dir_z_pr": 112, "direction_kappa": 112, "zenith_pr": 112, "zenith_kappa": 112, "stabl": [112, 113], "energy_pr": 112, "cascad": 112, "energy_track_pr": 112, "energy_cascade_pr": 112, "uncertainti": 112, "energy_sigma": 112, "vertex": 112, "position_x_pr": 112, "position_y_pr": 112, "position_z_pr": 112, "interaction_time_pr": 112, "interact": 112, "hadron": 112, "inelasticity_pr": 112, "lossfunct": [113, 115, 118], "auto": 113, "matic": 113, "_pred": 113, "transform_prediction_and_target": 113, "numer": 113, "transform_target": 113, "log10": [113, 120], "rather": [113, 134], "transform_infer": 113, "invers": 113, "recov": 113, "transform_support": 113, "restrict": [113, 118], "invert": 113, "1e6": 113, "train_ev": 113, "act": [113, 118], "wrt": 113, "meet": 113, "vast": 113, "major": 113, "supervis": 113, "grab": 113, "send": 113, "normalizingflow": 113, "jacobian": 113, "flow": 113, "xyzt": 114, "homophili": 114, "xyz_coord": 114, "nb_dom": 114, "excluding_valu": 114, "total": [114, 119, 120], "belong": 114, "inf": 114, "masked_entri": 114, "piecewiselinearlr": [115, 116], "progressbar": [115, 116], "graphnetearlystop": [115, 116], "mseloss": [115, 118], "rmseloss": [115, 118], "logcoshloss": [115, 118], "crossentropyloss": [115, 118], "binarycrossentropyloss": [115, 118], "logcmk": [115, 118], "vonmisesfisherloss": [115, 118], "vonmisesfisher2dloss": [115, 118], "euclideandistanceloss": [115, 118], "vonmisesfisher3dloss": [115, 118], "collator_sequence_bucklet": [115, 119], "make_dataload": [115, 119], "make_train_validation_dataload": [115, 119], "get_predict": [115, 119], "save_result": [115, 119], "save_select": [115, 119], "weightfitt": [115, 120], "uniform": [115, 120], "bjoernlow": [115, 120], "mileston": 116, "last_epoch": 116, "_lrschedul": 116, "linearli": 116, "closest": 116, "vice": 116, "versa": 116, "wrap": [116, 126, 127], "stdout": 116, "get_lr": 116, "effect": [116, 137], "refresh_r": 116, "process_posit": 116, "tqdmprogressbar": 116, "progress": 116, "bar": 116, "customis": 116, "init_validation_tqdm": 116, "init_predict_tqdm": 116, "init_test_tqdm": 116, "init_train_tqdm": 116, "get_metr": 116, "on_train_epoch_start": 116, "previou": 116, "line": [116, 122], "behaviour": 116, "on_train_epoch_end": 116, "don": [116, 139], "duplciat": 116, "save_dir": 116, "earlystop": 116, "earli": [116, 122], "keyword": [116, 124, 129], "graphnet_model": 116, "on_validation_end": 116, "on_fit_end": 116, "runtim": [117, 139], "field": [117, 124, 126, 127, 129, 131], "azimuth_kei": 117, "zenith_kei": 117, "access": [117, 139], "azimiuth": 117, "return_el": 118, "elementwis": 118, "squar": 118, "error": [118, 134, 137], "root": [118, 139], "cosh": 118, "small": 118, "cross": 118, "entropi": 118, "num_class": 118, "softmax": 118, "ed": 118, "mit": 118, "licens": 118, "copyright": 118, "2019": 118, "ryabinin": 118, "permiss": 118, "herebi": 118, "copi": 118, "document": 118, "deal": 118, "right": 118, "modifi": 118, "publish": 118, "sublicens": 118, "sell": 118, "permit": 118, "whom": 118, "furnish": 118, "so": [118, 139], "condit": 118, "abov": [118, 120, 139], "shall": 118, "substanti": 118, "portion": 118, "THE": 118, "AS": 118, "warranti": 118, "OF": 118, "kind": 118, "OR": 118, "impli": 118, "BUT": 118, "TO": 118, "merchant": 118, "FOR": 118, "particular": [118, 137], "AND": 118, "noninfring": 118, "IN": 118, "NO": 118, "holder": 118, "BE": 118, "liabl": 118, "claim": 118, "damag": 118, "liabil": 118, "action": 118, "contract": 118, "tort": 118, "aris": 118, "WITH": 118, "_____________________": 118, "mryab": 118, "vmf_loss": 118, "master": 118, "py": [118, 139], "bessel": 118, "exponenti": 118, "ditto": 118, "iv": 118, "1812": 118, "04616": 118, "spite": 118, "suggest": 118, "sec": 118, "paper": 118, "chang": [118, 137], "correct": 118, "static": [118, 137], "ctx": 118, "grad_output": 118, "von": 118, "mise": 118, "fisher": 118, "log_cmk_exact": 118, "c_": 118, "exactli": [118, 134], "log_cmk_approx": 118, "approx": 118, "minu": 118, "sign": 118, "log_cmk": 118, "kappa_switch": 118, "diverg": 118, "700": 118, "float64": 118, "precis": 118, "unaccur": 118, "switch": 118, "2d": 118, "batch_split": 119, "bucket": 119, "cut": 119, "mini": 119, "explicitli": [119, 124, 129], "alwai": 119, "respect": 119, "database_indic": 119, "test_siz": 119, "node_level": 119, "tag": [119, 137, 139], "archiv": 119, "file_path": 119, "csv": [119, 126], "fit_weight": 120, "uniformweightfitt": 120, "bin": 120, "weight_nam": 120, "add_to_databas": 120, "db_count_norm": 120, "privat": 120, "_fit_weight": 120, "sql": 120, "desir": [120, 132], "np": 120, "happen": 120, "x_low": 120, "wherea": 120, "curv": 120, "base_config": [121, 123], "dataset_config": [121, 123], "training_config": [121, 123], "argumentpars": [121, 122], "rename_state_dict_entri": [121, 131], "is_gcd_fil": [121, 132], "is_i3_fil": [121, 132], "has_extens": [121, 132], "find_i3_fil": [121, 132], "has_icecube_packag": [121, 133], "has_torch_packag": [121, 133], "requires_icecub": [121, 133], "repeatfilt": [121, 134], "eps_lik": [121, 135], "consist": [122, 134, 137], "cli": 122, "pop_default": 122, "usag": 122, "command": [122, 139], "standard_argu": 122, "training_example_data_sqlit": 122, "patienc": 122, "narg": 122, "example_energy_reconstruction_model": 122, "num": 122, "fetch": 122, "with_standard_argu": 122, "baseconfig": [123, 124, 125, 126, 127, 129], "get_all_argument_valu": [123, 124], "save_dataset_config": [123, 126], "datasetconfigsavermeta": [123, 126], "datasetconfigsaverabcmeta": [123, 126], "save_model_config": [123, 127], "modelconfigsavermeta": [123, 127], "modelconfigsaverabc": [123, 127], "traverse_and_appli": [123, 128], "list_all_submodul": [123, 128], "get_all_grapnet_class": [123, 128], "is_graphnet_modul": [123, 128], "is_graphnet_class": [123, 128], "get_graphnet_class": [123, 128], "trainingconfig": [123, 129], "basemodel": [124, 126, 127], "validationerror": [124, 129], "pydantic_cor": [124, 129], "dump": [124, 126, 127], "yaml": [124, 125], "as_dict": [124, 126, 127], "model_computed_field": [124, 126, 127, 129], "classvar": [124, 126, 127, 129], "computedfieldinfo": [124, 126, 127, 129], "configdict": [124, 126, 127, 129], "conform": [124, 126, 127, 129], "pydant": [124, 126, 127, 129], "model_field": [124, 126, 127, 129], "fieldinfo": [124, 126, 127, 129], "metadata": [124, 126, 127, 129], "replac": [124, 126, 127, 129, 131], "__fields__": [124, 126, 127, 129], "v1": [124, 126, 127, 129, 139], "re": [125, 139], "save_config": 125, "dataconfig": 126, "transpar": [126, 127, 137], "reproduc": [126, 127], "session": [126, 127], "anoth": [126, 127], "still": 126, "train_select": 126, "unambigu": [126, 127], "annot": [126, 127, 129], "nonetyp": 126, "init_fn": [126, 127], "__init__": [126, 127, 139], "metaclass": [126, 127], "abcmeta": [126, 127], "datasetconfigsav": 126, "trainabl": 127, "hyperparamet": 127, "initialis": 127, "thu": 127, "modelconfigsav": 127, "fn_kwarg": 128, "structur": 128, "moduletyp": 128, "grapnet": 128, "lookup": 128, "transit": 131, "old_phras": 131, "new_phras": 131, "deepcopi": 131, "renam": 131, "phrase": 131, "system": [132, 139], "filenam": 132, "dir": 132, "test_funct": 133, "repeat": 134, "nb_repeats_allow": 134, "record": 134, "logrecord": 134, "clear": 134, "intuit": 134, "composit": 134, "loggeradapt": 134, "clash": 134, "setlevel": 134, "deleg": 134, "critic": 134, "msg": 134, "warn": 134, "info": [134, 139], "debug": 134, "warning_onc": 134, "onc": 134, "handler": 134, "file_handl": 134, "filehandl": 134, "stream_handl": 134, "streamhandl": 134, "assort": 135, "ep": 135, "api": 136, "To": [137, 139], "sure": [137, 139], "smooth": 137, "guidelin": 137, "guid": 137, "encourag": 137, "contributor": 137, "discuss": 137, "bug": 137, "anyth": 137, "would": 137, "yourself": 137, "ownership": 137, "prioriti": 137, "situat": 137, "lot": 137, "effort": 137, "go": 137, "scope": 137, "better": 137, "fork": 137, "repo": 137, "dedic": 137, "branch": [137, 139], "repositori": 137, "own": [137, 139], "autom": 137, "review": 137, "pep8": 137, "docstr": 137, "googl": 137, "style": 137, "hint": 137, "adher": 137, "pep": 137, "pylint": 137, "flake8": 137, "black": 137, "well": 137, "recommend": [137, 139], "mypi": 137, "pydocstyl": 137, "docformatt": 137, "commit": 137, "hook": 137, "instal": 137, "pip": [137, 139], "everytim": 137, "pep257": 137, "concept": 137, "ljvmiranda921": 137, "io": 137, "notebook": 137, "2018": 137, "06": 137, "21": 137, "precommit": 137, "virtual": 139, "anaconda": 139, "prove": 139, "instruct": 139, "want": 139, "part": 139, "achiev": 139, "bash": 139, "shell": 139, "cvmf": 139, "opensciencegrid": 139, "py3": 139, "v4": 139, "sh": 139, "rhel_7_x86_64": 139, "metaproject": 139, "env": 139, "alia": 139, "script": 139, "everi": 139, "With": 139, "now": 139, "geometr": 139, "won": 139, "later": 139, "torch_cpu": 139, "txt": 139, "torch_gpu": 139, "unix": 139, "git": 139, "clone": 139, "usernam": 139, "cd": 139, "conda": 139, "gcc_linux": 139, "gxx_linux": 139, "libgcc": 139, "cudatoolkit": 139, "11": 139, "forg": 139, "box": 139, "compil": 139, "gcc": 139, "date": 139, "possibli": 139, "cuda": 139, "toolkit": 139, "recent": 139, "omit": 139, "newer": 139, "export": 139, "ld_library_path": 139, "anaconda3": 139, "miniconda3": 139, "bashrc": 139, "librari": 139, "rm": 139, "asogaard": 139, "latest": 139, "dc423315742c": 139, "01_icetrai": 139, "01_convert_i3_fil": 139, "2023": 139, "01": 139, "24": 139, "41": 139, "27": 139, "graphnet_20230124": 139, "134127": 139, "46": 139, "convert_i3_fil": 139, "ic86": 139, "100": 139, "00": 139, "79": 139, "26": 139, "413": 139, "88it": 139, "specialis": 139, "push": 139, "vx": 139}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [64, 0, 0, "-", "datasets"], [66, 0, 0, "-", "deployment"], [75, 0, 0, "-", "exceptions"], [77, 0, 0, "-", "models"], [115, 0, 0, "-", "training"], [121, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "curated_datamodule"], [6, 0, 0, "-", "dataclasses"], [7, 0, 0, "-", "dataconverter"], [8, 0, 0, "-", "dataloader"], [9, 0, 0, "-", "datamodule"], [10, 0, 0, "-", "dataset"], [16, 0, 0, "-", "extractors"], [43, 0, 0, "-", "parquet"], [45, 0, 0, "-", "pre_configured"], [47, 0, 0, "-", "readers"], [53, 0, 0, "-", "sqlite"], [55, 0, 0, "-", "utilities"], [60, 0, 0, "-", "writers"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.curated_datamodule": [[5, 1, 1, "", "CuratedDataset"], [5, 1, 1, "", "ERDAHostedDataset"]], "graphnet.data.curated_datamodule.CuratedDataset": [[5, 3, 1, "", "available_backends"], [5, 3, 1, "", "citation"], [5, 3, 1, "", "comments"], [5, 3, 1, "", "creator"], [5, 3, 1, "", "dataset_dir"], [5, 4, 1, "", "description"], [5, 3, 1, "", "event_truth"], [5, 3, 1, "", "events"], [5, 3, 1, "", "experiment"], [5, 3, 1, "", "features"], [5, 4, 1, "", "prepare_data"], [5, 3, 1, "", "pulse_truth"], [5, 3, 1, "", "pulsemaps"], [5, 3, 1, "", "truth_table"]], "graphnet.data.curated_datamodule.ERDAHostedDataset": [[5, 4, 1, "", "prepare_data"]], "graphnet.data.dataclasses": [[6, 1, 1, "", "I3FileSet"], [6, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_files"], [6, 2, 1, "", "modules"], [6, 2, 1, "", "output_folder"]], "graphnet.data.dataconverter": [[7, 1, 1, "", "DataConverter"], [7, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[7, 4, 1, "", "get_map_function"], [7, 4, 1, "", "merge_files"]], "graphnet.data.dataloader": [[8, 1, 1, "", "DataLoader"], [8, 5, 1, "", "collate_fn"], [8, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[8, 4, 1, "", "from_dataset_config"]], "graphnet.data.datamodule": [[9, 1, 1, "", "GraphNeTDataModule"]], "graphnet.data.datamodule.GraphNeTDataModule": [[9, 4, 1, "", "prepare_data"], [9, 4, 1, "", "setup"], [9, 4, 1, "", "teardown"], [9, 3, 1, "", "test_dataloader"], [9, 3, 1, "", "train_dataloader"], [9, 3, 1, "", "val_dataloader"]], "graphnet.data.dataset": [[11, 0, 0, "-", "dataset"], [12, 0, 0, "-", "parquet"], [14, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[11, 1, 1, "", "Dataset"], [11, 1, 1, "", "EnsembleDataset"], [11, 5, 1, "", "load_module"], [11, 5, 1, "", "parse_graph_definition"], [11, 5, 1, "", "parse_labels"]], "graphnet.data.dataset.dataset.Dataset": [[11, 4, 1, "", "add_label"], [11, 4, 1, "", "concatenate"], [11, 4, 1, "", "from_config"], [11, 3, 1, "", "path"], [11, 4, 1, "", "query_table"], [11, 3, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[13, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[13, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[13, 4, 1, "", "query_table"]], "graphnet.data.dataset.sqlite": [[15, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[15, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[15, 4, 1, "", "query_table"]], "graphnet.data.extractors": [[17, 0, 0, "-", "combine_extractors"], [18, 0, 0, "-", "extractor"], [19, 0, 0, "-", "icecube"], [37, 0, 0, "-", "internal"], [39, 0, 0, "-", "liquido"], [41, 0, 0, "-", "prometheus"]], "graphnet.data.extractors.combine_extractors": [[17, 1, 1, "", "CombinedExtractor"]], "graphnet.data.extractors.extractor": [[18, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[18, 3, 1, "", "name"]], "graphnet.data.extractors.icecube": [[20, 0, 0, "-", "i3extractor"], [21, 0, 0, "-", "i3featureextractor"], [22, 0, 0, "-", "i3genericextractor"], [23, 0, 0, "-", "i3hybridrecoextractor"], [24, 0, 0, "-", "i3ntmuonlabelsextractor"], [25, 0, 0, "-", "i3particleextractor"], [26, 0, 0, "-", "i3pisaextractor"], [27, 0, 0, "-", "i3quesoextractor"], [28, 0, 0, "-", "i3retroextractor"], [29, 0, 0, "-", "i3splinempeextractor"], [30, 0, 0, "-", "i3truthextractor"], [31, 0, 0, "-", "i3tumextractor"], [32, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[20, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[20, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[21, 1, 1, "", "I3FeatureExtractor"], [21, 1, 1, "", "I3FeatureExtractorIceCube86"], [21, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [21, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [21, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[22, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[23, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[24, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[25, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[26, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[27, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[28, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[29, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[30, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[31, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[33, 0, 0, "-", "collections"], [34, 0, 0, "-", "frames"], [35, 0, 0, "-", "i3_filters"], [36, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[33, 5, 1, "", "flatten_nested_dictionary"], [33, 5, 1, "", "serialise"], [33, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[34, 5, 1, "", "frame_is_montecarlo"], [34, 5, 1, "", "frame_is_noise"], [34, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[35, 1, 1, "", "I3Filter"], [35, 1, 1, "", "I3FilterMask"], [35, 1, 1, "", "NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[36, 5, 1, "", "break_cyclic_recursion"], [36, 5, 1, "", "cast_object_to_pure_python"], [36, 5, 1, "", "cast_pulse_series_to_pure_python"], [36, 5, 1, "", "get_member_variables"], [36, 5, 1, "", "is_boost_class"], [36, 5, 1, "", "is_boost_enum"], [36, 5, 1, "", "is_icecube_class"], [36, 5, 1, "", "is_method"], [36, 5, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[38, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[38, 1, 1, "", "ParquetExtractor"]], "graphnet.data.extractors.liquido": [[40, 0, 0, "-", "h5_extractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[40, 1, 1, "", "H5Extractor"], [40, 1, 1, "", "H5HitExtractor"], [40, 1, 1, "", "H5TruthExtractor"]], "graphnet.data.extractors.prometheus": [[42, 0, 0, "-", "prometheus_extractor"]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[42, 1, 1, "", "PrometheusExtractor"], [42, 1, 1, "", "PrometheusFeatureExtractor"], [42, 1, 1, "", "PrometheusTruthExtractor"]], "graphnet.data.parquet": [[44, 0, 0, "-", "deprecated_methods"]], "graphnet.data.parquet.deprecated_methods": [[44, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.pre_configured": [[46, 0, 0, "-", "dataconverters"]], "graphnet.data.pre_configured.dataconverters": [[46, 1, 1, "", "I3ToParquetConverter"], [46, 1, 1, "", "I3ToSQLiteConverter"], [46, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.readers": [[48, 0, 0, "-", "graphnet_file_reader"], [49, 0, 0, "-", "i3reader"], [50, 0, 0, "-", "internal_parquet_reader"], [51, 0, 0, "-", "liquido_reader"], [52, 0, 0, "-", "prometheus_reader"]], "graphnet.data.readers.graphnet_file_reader": [[48, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[48, 3, 1, "", "accepted_extractors"], [48, 3, 1, "", "accepted_file_extensions"], [48, 3, 1, "", "extracor_names"], [48, 4, 1, "", "find_files"], [48, 4, 1, "", "set_extractors"], [48, 4, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[49, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[49, 4, 1, "", "find_files"]], "graphnet.data.readers.internal_parquet_reader": [[50, 1, 1, "", "ParquetReader"]], "graphnet.data.readers.internal_parquet_reader.ParquetReader": [[50, 4, 1, "", "find_files"]], "graphnet.data.readers.liquido_reader": [[51, 1, 1, "", "LiquidOReader"]], "graphnet.data.readers.liquido_reader.LiquidOReader": [[51, 4, 1, "", "find_files"]], "graphnet.data.readers.prometheus_reader": [[52, 1, 1, "", "PrometheusReader"]], "graphnet.data.readers.prometheus_reader.PrometheusReader": [[52, 4, 1, "", "find_files"]], "graphnet.data.sqlite": [[54, 0, 0, "-", "deprecated_methods"]], "graphnet.data.sqlite.deprecated_methods": [[54, 1, 1, "", "SQLiteDataConverter"]], "graphnet.data.utilities": [[56, 0, 0, "-", "parquet_to_sqlite"], [57, 0, 0, "-", "random"], [58, 0, 0, "-", "sqlite_utilities"], [59, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.random": [[57, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[58, 5, 1, "", "attach_index"], [58, 5, 1, "", "create_table"], [58, 5, 1, "", "create_table_and_save_to_sql"], [58, 5, 1, "", "database_exists"], [58, 5, 1, "", "database_table_exists"], [58, 5, 1, "", "get_primary_keys"], [58, 5, 1, "", "query_database"], [58, 5, 1, "", "run_sql_code"], [58, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[59, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[59, 4, 1, "", "resolve"]], "graphnet.data.writers": [[61, 0, 0, "-", "graphnet_writer"], [62, 0, 0, "-", "parquet_writer"], [63, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[61, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[61, 3, 1, "", "expects_merged_dataframes"], [61, 3, 1, "", "file_extension"], [61, 4, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[62, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[62, 4, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[63, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[63, 4, 1, "", "merge_files"]], "graphnet.datasets": [[65, 0, 0, "-", "test_dataset"]], "graphnet.datasets.test_dataset": [[65, 1, 1, "", "TestDataset"]], "graphnet.deployment": [[67, 0, 0, "-", "deployer"], [68, 0, 0, "-", "deployment_module"]], "graphnet.deployment.deployer": [[67, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[67, 4, 1, "", "run"]], "graphnet.deployment.deployment_module": [[68, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.icecube": [[72, 0, 0, "-", "cleaning_module"], [74, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[72, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.inference_module": [[74, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[76, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[76, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[78, 0, 0, "-", "coarsening"], [79, 0, 0, "-", "components"], [83, 0, 0, "-", "detector"], [88, 0, 0, "-", "gnn"], [96, 0, 0, "-", "graphs"], [105, 0, 0, "-", "model"], [106, 0, 0, "-", "rnn"], [108, 0, 0, "-", "standard_averaged_model"], [109, 0, 0, "-", "standard_model"], [110, 0, 0, "-", "task"], [114, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[78, 1, 1, "", "AttributeCoarsening"], [78, 1, 1, "", "Coarsening"], [78, 1, 1, "", "CustomDOMCoarsening"], [78, 1, 1, "", "DOMAndTimeWindowCoarsening"], [78, 1, 1, "", "DOMCoarsening"], [78, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[78, 4, 1, "", "forward"], [78, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[80, 0, 0, "-", "embedding"], [81, 0, 0, "-", "layers"], [82, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[80, 1, 1, "", "FourierEncoder"], [80, 1, 1, "", "SinusoidalPosEmb"], [80, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[80, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[80, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[80, 4, 1, "", "forward"]], "graphnet.models.components.layers": [[81, 1, 1, "", "Attention_rel"], [81, 1, 1, "", "Block"], [81, 1, 1, "", "Block_rel"], [81, 1, 1, "", "DropPath"], [81, 1, 1, "", "DynEdgeConv"], [81, 1, 1, "", "DynTrans"], [81, 1, 1, "", "EdgeConvTito"], [81, 1, 1, "", "Mlp"]], "graphnet.models.components.layers.Attention_rel": [[81, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[81, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[81, 4, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[81, 4, 1, "", "extra_repr"], [81, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[81, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[81, 4, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[81, 4, 1, "", "forward"], [81, 4, 1, "", "message"], [81, 4, 1, "", "reset_parameters"]], "graphnet.models.components.layers.Mlp": [[81, 4, 1, "", "forward"]], "graphnet.models.components.pool": [[82, 5, 1, "", "group_by"], [82, 5, 1, "", "group_pulses_to_dom"], [82, 5, 1, "", "group_pulses_to_pmt"], [82, 5, 1, "", "min_pool"], [82, 5, 1, "", "min_pool_x"], [82, 5, 1, "", "std_pool"], [82, 5, 1, "", "std_pool_x"], [82, 5, 1, "", "sum_pool"], [82, 5, 1, "", "sum_pool_and_distribute"], [82, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[84, 0, 0, "-", "detector"], [85, 0, 0, "-", "icecube"], [86, 0, 0, "-", "liquido"], [87, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[84, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[84, 4, 1, "", "feature_map"], [84, 4, 1, "", "forward"], [84, 3, 1, "", "geometry_table"], [84, 3, 1, "", "sensor_index_name"], [84, 3, 1, "", "sensor_position_names"], [84, 3, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[85, 1, 1, "", "IceCube86"], [85, 1, 1, "", "IceCubeDeepCore"], [85, 1, 1, "", "IceCubeKaggle"], [85, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[85, 4, 1, "", "feature_map"], [85, 2, 1, "", "geometry_table_path"], [85, 2, 1, "", "sensor_id_column"], [85, 2, 1, "", "string_id_column"], [85, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[85, 4, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[85, 4, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[85, 4, 1, "", "feature_map"], [85, 2, 1, "", "geometry_table_path"], [85, 2, 1, "", "sensor_id_column"], [85, 2, 1, "", "string_id_column"], [85, 2, 1, "", "xyz"]], "graphnet.models.detector.liquido": [[86, 1, 1, "", "LiquidO_v1"]], "graphnet.models.detector.liquido.LiquidO_v1": [[86, 4, 1, "", "feature_map"], [86, 2, 1, "", "geometry_table_path"], [86, 2, 1, "", "sensor_id_column"], [86, 2, 1, "", "string_id_column"], [86, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[87, 1, 1, "", "ARCA115"], [87, 1, 1, "", "BaikalGVD8"], [87, 1, 1, "", "IceCube86"], [87, 1, 1, "", "IceCubeDeepCore8"], [87, 1, 1, "", "IceCubeGen2"], [87, 1, 1, "", "IceCubeUpgrade7"], [87, 1, 1, "", "IceDemo81"], [87, 1, 1, "", "ORCA150"], [87, 1, 1, "", "ORCA150SuperDense"], [87, 1, 1, "", "Prometheus"], [87, 1, 1, "", "TRIDENT1211"], [87, 1, 1, "", "WaterDemo81"]], "graphnet.models.detector.prometheus.ARCA115": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.BaikalGVD8": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCube86": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeDeepCore8": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeGen2": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeUpgrade7": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceDemo81": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150SuperDense": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.TRIDENT1211": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.WaterDemo81": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.gnn": [[89, 0, 0, "-", "RNN_tito"], [90, 0, 0, "-", "convnet"], [91, 0, 0, "-", "dynedge"], [92, 0, 0, "-", "dynedge_jinst"], [93, 0, 0, "-", "dynedge_kaggle_tito"], [94, 0, 0, "-", "gnn"], [95, 0, 0, "-", "icemix"]], "graphnet.models.gnn.RNN_tito": [[89, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[89, 4, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[90, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[90, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[91, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[91, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[92, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[92, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[93, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[93, 4, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[94, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[94, 4, 1, "", "forward"], [94, 3, 1, "", "nb_inputs"], [94, 3, 1, "", "nb_outputs"]], "graphnet.models.gnn.icemix": [[95, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[95, 4, 1, "", "forward"], [95, 4, 1, "", "no_weight_decay"]], "graphnet.models.graphs": [[97, 0, 0, "-", "edges"], [100, 0, 0, "-", "graph_definition"], [101, 0, 0, "-", "graphs"], [102, 0, 0, "-", "nodes"], [104, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[98, 0, 0, "-", "edges"], [99, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[98, 1, 1, "", "EdgeDefinition"], [98, 1, 1, "", "EuclideanEdges"], [98, 1, 1, "", "KNNEdges"], [98, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[98, 4, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[99, 1, 1, "", "MinkowskiKNNEdges"], [99, 5, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[100, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[100, 4, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[101, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[103, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[103, 1, 1, "", "IceMixNodes"], [103, 1, 1, "", "NodeAsDOMTimeSeries"], [103, 1, 1, "", "NodeDefinition"], [103, 1, 1, "", "NodesAsPulses"], [103, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[103, 4, 1, "", "forward"], [103, 3, 1, "", "nb_outputs"], [103, 4, 1, "", "set_number_of_inputs"], [103, 4, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[104, 5, 1, "", "cluster_summarize_with_percentiles"], [104, 5, 1, "", "gather_cluster_sequence"], [104, 5, 1, "", "ice_transparency"], [104, 5, 1, "", "identify_indices"], [104, 5, 1, "", "lex_sort"]], "graphnet.models.model": [[105, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[105, 4, 1, "", "extra_repr"], [105, 4, 1, "", "extra_repr_recursive"], [105, 4, 1, "", "from_config"], [105, 4, 1, "", "load"], [105, 4, 1, "", "load_state_dict"], [105, 4, 1, "", "save"], [105, 4, 1, "", "save_state_dict"], [105, 4, 1, "", "set_verbose_print_recursively"], [105, 2, 1, "", "verbose_print"]], "graphnet.models.rnn": [[107, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[107, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[107, 4, 1, "", "clean_up_data_object"], [107, 4, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[108, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[108, 4, 1, "", "load_state_dict"], [108, 4, 1, "", "on_train_end"], [108, 4, 1, "", "optimizer_step"], [108, 4, 1, "", "training_step"], [108, 4, 1, "", "validation_step"]], "graphnet.models.standard_model": [[109, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[109, 4, 1, "", "compute_loss"], [109, 4, 1, "", "configure_optimizers"], [109, 4, 1, "", "fit"], [109, 4, 1, "", "forward"], [109, 4, 1, "", "inference"], [109, 4, 1, "", "predict"], [109, 4, 1, "", "predict_as_dataframe"], [109, 3, 1, "", "prediction_labels"], [109, 4, 1, "", "shared_step"], [109, 3, 1, "", "target_labels"], [109, 4, 1, "", "train"], [109, 4, 1, "", "training_step"], [109, 4, 1, "", "validation_step"]], "graphnet.models.task": [[111, 0, 0, "-", "classification"], [112, 0, 0, "-", "reconstruction"], [113, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[111, 1, 1, "", "BinaryClassificationTask"], [111, 1, 1, "", "BinaryClassificationTaskLogits"], [111, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[111, 2, 1, "", "default_prediction_labels"], [111, 2, 1, "", "default_target_labels"], [111, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[111, 2, 1, "", "default_prediction_labels"], [111, 2, 1, "", "default_target_labels"], [111, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[112, 1, 1, "", "AzimuthReconstruction"], [112, 1, 1, "", "AzimuthReconstructionWithKappa"], [112, 1, 1, "", "DirectionReconstructionWithKappa"], [112, 1, 1, "", "EnergyReconstruction"], [112, 1, 1, "", "EnergyReconstructionWithPower"], [112, 1, 1, "", "EnergyReconstructionWithUncertainty"], [112, 1, 1, "", "EnergyTCReconstruction"], [112, 1, 1, "", "InelasticityReconstruction"], [112, 1, 1, "", "PositionReconstruction"], [112, 1, 1, "", "TimeReconstruction"], [112, 1, 1, "", "VertexReconstruction"], [112, 1, 1, "", "ZenithReconstruction"], [112, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[113, 1, 1, "", "IdentityTask"], [113, 1, 1, "", "LearnedTask"], [113, 1, 1, "", "StandardFlowTask"], [113, 1, 1, "", "StandardLearnedTask"], [113, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[113, 3, 1, "", "default_prediction_labels"], [113, 3, 1, "", "default_target_labels"], [113, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[113, 4, 1, "", "compute_loss"], [113, 4, 1, "", "forward"], [113, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[113, 4, 1, "", "compute_loss"], [113, 4, 1, "", "forward"], [113, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[113, 4, 1, "", "compute_loss"], [113, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[113, 3, 1, "", "default_prediction_labels"], [113, 3, 1, "", "default_target_labels"], [113, 4, 1, "", "inference"], [113, 3, 1, "", "nb_inputs"], [113, 4, 1, "", "train_eval"]], "graphnet.models.utils": [[114, 5, 1, "", "array_to_sequence"], [114, 5, 1, "", "calculate_distance_matrix"], [114, 5, 1, "", "calculate_xyzt_homophily"], [114, 5, 1, "", "knn_graph_batch"]], "graphnet.training": [[116, 0, 0, "-", "callbacks"], [117, 0, 0, "-", "labels"], [118, 0, 0, "-", "loss_functions"], [119, 0, 0, "-", "utils"], [120, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[116, 1, 1, "", "GraphnetEarlyStopping"], [116, 1, 1, "", "PiecewiseLinearLR"], [116, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[116, 4, 1, "", "on_fit_end"], [116, 4, 1, "", "on_train_epoch_end"], [116, 4, 1, "", "on_validation_end"], [116, 4, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[116, 4, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[116, 4, 1, "", "get_metrics"], [116, 4, 1, "", "init_predict_tqdm"], [116, 4, 1, "", "init_test_tqdm"], [116, 4, 1, "", "init_train_tqdm"], [116, 4, 1, "", "init_validation_tqdm"], [116, 4, 1, "", "on_train_epoch_end"], [116, 4, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[117, 1, 1, "", "Direction"], [117, 1, 1, "", "Label"]], "graphnet.training.labels.Label": [[117, 3, 1, "", "key"]], "graphnet.training.loss_functions": [[118, 1, 1, "", "BinaryCrossEntropyLoss"], [118, 1, 1, "", "CrossEntropyLoss"], [118, 1, 1, "", "EuclideanDistanceLoss"], [118, 1, 1, "", "LogCMK"], [118, 1, 1, "", "LogCoshLoss"], [118, 1, 1, "", "LossFunction"], [118, 1, 1, "", "MSELoss"], [118, 1, 1, "", "RMSELoss"], [118, 1, 1, "", "VonMisesFisher2DLoss"], [118, 1, 1, "", "VonMisesFisher3DLoss"], [118, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[118, 4, 1, "", "backward"], [118, 4, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[118, 4, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[118, 4, 1, "", "log_cmk"], [118, 4, 1, "", "log_cmk_approx"], [118, 4, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[119, 5, 1, "", "collate_fn"], [119, 1, 1, "", "collator_sequence_buckleting"], [119, 5, 1, "", "get_predictions"], [119, 5, 1, "", "make_dataloader"], [119, 5, 1, "", "make_train_validation_dataloader"], [119, 5, 1, "", "save_results"], [119, 5, 1, "", "save_selection"]], "graphnet.training.weight_fitting": [[120, 1, 1, "", "BjoernLow"], [120, 1, 1, "", "Uniform"], [120, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[120, 4, 1, "", "fit"]], "graphnet.utilities": [[122, 0, 0, "-", "argparse"], [123, 0, 0, "-", "config"], [130, 0, 0, "-", "decorators"], [131, 0, 0, "-", "deprecation_tools"], [132, 0, 0, "-", "filesys"], [133, 0, 0, "-", "imports"], [134, 0, 0, "-", "logging"], [135, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[122, 1, 1, "", "ArgumentParser"], [122, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[122, 2, 1, "", "standard_arguments"], [122, 4, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[122, 4, 1, "", "contains"], [122, 4, 1, "", "pop_default"]], "graphnet.utilities.config": [[124, 0, 0, "-", "base_config"], [125, 0, 0, "-", "configurable"], [126, 0, 0, "-", "dataset_config"], [127, 0, 0, "-", "model_config"], [128, 0, 0, "-", "parsing"], [129, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[124, 1, 1, "", "BaseConfig"], [124, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[124, 4, 1, "", "as_dict"], [124, 4, 1, "", "dump"], [124, 4, 1, "", "load"], [124, 2, 1, "", "model_computed_fields"], [124, 2, 1, "", "model_config"], [124, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[125, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[125, 3, 1, "", "config"], [125, 4, 1, "", "from_config"], [125, 4, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[126, 1, 1, "", "DatasetConfig"], [126, 1, 1, "", "DatasetConfigSaverABCMeta"], [126, 1, 1, "", "DatasetConfigSaverMeta"], [126, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[126, 4, 1, "", "as_dict"], [126, 2, 1, "", "features"], [126, 2, 1, "", "graph_definition"], [126, 2, 1, "", "index_column"], [126, 2, 1, "", "labels"], [126, 2, 1, "", "loss_weight_column"], [126, 2, 1, "", "loss_weight_default_value"], [126, 2, 1, "", "loss_weight_table"], [126, 2, 1, "", "model_computed_fields"], [126, 2, 1, "", "model_config"], [126, 2, 1, "", "model_fields"], [126, 2, 1, "", "node_truth"], [126, 2, 1, "", "node_truth_table"], [126, 2, 1, "", "path"], [126, 2, 1, "", "pulsemaps"], [126, 2, 1, "", "seed"], [126, 2, 1, "", "selection"], [126, 2, 1, "", "string_selection"], [126, 2, 1, "", "truth"], [126, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[127, 1, 1, "", "ModelConfig"], [127, 1, 1, "", "ModelConfigSaverABC"], [127, 1, 1, "", "ModelConfigSaverMeta"], [127, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[127, 2, 1, "", "arguments"], [127, 4, 1, "", "as_dict"], [127, 2, 1, "", "class_name"], [127, 2, 1, "", "model_computed_fields"], [127, 2, 1, "", "model_config"], [127, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[128, 5, 1, "", "get_all_grapnet_classes"], [128, 5, 1, "", "get_graphnet_classes"], [128, 5, 1, "", "is_graphnet_class"], [128, 5, 1, "", "is_graphnet_module"], [128, 5, 1, "", "list_all_submodules"], [128, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[129, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[129, 2, 1, "", "dataloader"], [129, 2, 1, "", "early_stopping_patience"], [129, 2, 1, "", "fit"], [129, 2, 1, "", "model_computed_fields"], [129, 2, 1, "", "model_config"], [129, 2, 1, "", "model_fields"], [129, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[131, 5, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[132, 5, 1, "", "find_i3_files"], [132, 5, 1, "", "has_extension"], [132, 5, 1, "", "is_gcd_file"], [132, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[133, 5, 1, "", "has_icecube_package"], [133, 5, 1, "", "has_torch_package"], [133, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[134, 1, 1, "", "Logger"], [134, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[134, 4, 1, "", "critical"], [134, 4, 1, "", "debug"], [134, 4, 1, "", "error"], [134, 3, 1, "", "file_handlers"], [134, 3, 1, "", "handlers"], [134, 4, 1, "", "info"], [134, 4, 1, "", "setLevel"], [134, 3, 1, "", "stream_handlers"], [134, 4, 1, "", "warning"], [134, 4, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[134, 4, 1, "", "filter"], [134, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[135, 5, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 138], "impact": [0, 138], "usag": [0, 138], "acknowledg": [0, 138], "api": 1, "constant": [2, 4], "data": 3, "curated_datamodul": 5, "dataclass": 6, "dataconvert": [7, 46], "dataload": 8, "datamodul": 9, "dataset": [10, 11, 64], "parquet": [12, 43], "parquet_dataset": 13, "sqlite": [14, 53], "sqlite_dataset": 15, "extractor": [16, 18], "combine_extractor": 17, "icecub": [19, 71, 85], "i3extractor": 20, "i3featureextractor": 21, "i3genericextractor": 22, "i3hybridrecoextractor": 23, "i3ntmuonlabelsextractor": 24, "i3particleextractor": 25, "i3pisaextractor": 26, "i3quesoextractor": 27, "i3retroextractor": 28, "i3splinempeextractor": 29, "i3truthextractor": 30, "i3tumextractor": 31, "util": [32, 55, 104, 114, 119, 121], "collect": 33, "frame": 34, "i3_filt": 35, "type": 36, "intern": 37, "parquet_extractor": 38, "liquido": [39, 86], "h5_extractor": 40, "prometheu": [41, 87], "prometheus_extractor": 42, "deprecated_method": [44, 54, 70], "pre_configur": 45, "reader": 47, "graphnet_file_read": 48, "i3read": 49, "internal_parquet_read": 50, "liquido_read": 51, "prometheus_read": 52, "parquet_to_sqlit": 56, "random": 57, "sqlite_util": 58, "string_selection_resolv": 59, "writer": 60, "graphnet_writ": 61, "parquet_writ": 62, "sqlite_writ": 63, "test_dataset": 65, "deploy": [66, 67], "deployment_modul": 68, "i3modul": 69, "cleaning_modul": 72, "i3deploy": 73, "inference_modul": 74, "except": [75, 76], "model": [77, 105], "coarsen": 78, "compon": 79, "embed": 80, "layer": 81, "pool": 82, "detector": [83, 84], "gnn": [88, 94], "rnn_tito": 89, "convnet": 90, "dynedg": 91, "dynedge_jinst": 92, "dynedge_kaggle_tito": 93, "icemix": 95, "graph": [96, 101], "edg": [97, 98], "minkowski": 99, "graph_definit": 100, "node": [102, 103], "rnn": 106, "node_rnn": 107, "standard_averaged_model": 108, "standard_model": 109, "task": [110, 113], "classif": 111, "reconstruct": 112, "train": 115, "callback": 116, "label": 117, "loss_funct": 118, "weight_fit": 120, "argpars": 122, "config": 123, "base_config": 124, "configur": 125, "dataset_config": 126, "model_config": 127, "pars": 128, "training_config": 129, "decor": 130, "deprecation_tool": 131, "filesi": 132, "import": 133, "log": 134, "math": 135, "src": 136, "contribut": 137, "github": 137, "issu": 137, "pull": 137, "request": 137, "convent": 137, "code": 137, "qualiti": 137, "instal": 139, "icetrai": 139, "stand": 139, "alon": 139, "run": 139, "docker": 139}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"], [138, "about"]], "Impact": [[0, "impact"], [138, "impact"]], "Usage": [[0, "usage"], [138, "usage"]], "Acknowledgements": [[0, "acknowledgements"], [138, "acknowledgements"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "curated_datamodule": [[5, "module-graphnet.data.curated_datamodule"]], "dataclasses": [[6, "module-graphnet.data.dataclasses"]], "dataconverter": [[7, "module-graphnet.data.dataconverter"]], "dataloader": [[8, "module-graphnet.data.dataloader"]], "datamodule": [[9, "module-graphnet.data.datamodule"]], "dataset": [[10, "module-graphnet.data.dataset"], [11, "module-graphnet.data.dataset.dataset"]], "parquet": [[12, "module-graphnet.data.dataset.parquet"], [43, "module-graphnet.data.parquet"]], "parquet_dataset": [[13, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "sqlite": [[14, "module-graphnet.data.dataset.sqlite"], [53, "module-graphnet.data.sqlite"]], "sqlite_dataset": [[15, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "extractors": [[16, "module-graphnet.data.extractors"]], "combine_extractors": [[17, "module-graphnet.data.extractors.combine_extractors"]], "extractor": [[18, "module-graphnet.data.extractors.extractor"]], "icecube": [[19, "module-graphnet.data.extractors.icecube"], [71, "icecube"], [85, "module-graphnet.models.detector.icecube"]], "i3extractor": [[20, "module-graphnet.data.extractors.icecube.i3extractor"]], "i3featureextractor": [[21, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor": [[22, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3hybridrecoextractor": [[23, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3ntmuonlabelsextractor": [[24, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor": [[25, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor": [[26, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor": [[27, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3retroextractor": [[28, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeextractor": [[29, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor": [[30, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor": [[31, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "utilities": [[32, "module-graphnet.data.extractors.icecube.utilities"], [55, "module-graphnet.data.utilities"], [121, "module-graphnet.utilities"]], "collections": [[33, "module-graphnet.data.extractors.icecube.utilities.collections"]], "frames": [[34, "module-graphnet.data.extractors.icecube.utilities.frames"]], "i3_filters": [[35, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "types": [[36, "module-graphnet.data.extractors.icecube.utilities.types"]], "internal": [[37, "module-graphnet.data.extractors.internal"]], "parquet_extractor": [[38, "module-graphnet.data.extractors.internal.parquet_extractor"]], "liquido": [[39, "module-graphnet.data.extractors.liquido"], [86, "module-graphnet.models.detector.liquido"]], "h5_extractor": [[40, "module-graphnet.data.extractors.liquido.h5_extractor"]], "prometheus": [[41, "module-graphnet.data.extractors.prometheus"], [87, "module-graphnet.models.detector.prometheus"]], "prometheus_extractor": [[42, "module-graphnet.data.extractors.prometheus.prometheus_extractor"]], "deprecated_methods": [[44, "module-graphnet.data.parquet.deprecated_methods"], [54, "module-graphnet.data.sqlite.deprecated_methods"], [70, "deprecated-methods"]], "pre_configured": [[45, "module-graphnet.data.pre_configured"]], "dataconverters": [[46, "module-graphnet.data.pre_configured.dataconverters"]], "readers": [[47, "module-graphnet.data.readers"]], "graphnet_file_reader": [[48, "module-graphnet.data.readers.graphnet_file_reader"]], "i3reader": [[49, "module-graphnet.data.readers.i3reader"]], "internal_parquet_reader": [[50, "module-graphnet.data.readers.internal_parquet_reader"]], "liquido_reader": [[51, "module-graphnet.data.readers.liquido_reader"]], "prometheus_reader": [[52, "module-graphnet.data.readers.prometheus_reader"]], "parquet_to_sqlite": [[56, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[57, "module-graphnet.data.utilities.random"]], "sqlite_utilities": [[58, "module-graphnet.data.utilities.sqlite_utilities"]], "string_selection_resolver": [[59, "module-graphnet.data.utilities.string_selection_resolver"]], "writers": [[60, "module-graphnet.data.writers"]], "graphnet_writer": [[61, "module-graphnet.data.writers.graphnet_writer"]], "parquet_writer": [[62, "module-graphnet.data.writers.parquet_writer"]], "sqlite_writer": [[63, "module-graphnet.data.writers.sqlite_writer"]], "datasets": [[64, "module-graphnet.datasets"]], "test_dataset": [[65, "module-graphnet.datasets.test_dataset"]], "deployment": [[66, "module-graphnet.deployment"]], "deployer": [[67, "module-graphnet.deployment.deployer"]], "deployment_module": [[68, "module-graphnet.deployment.deployment_module"]], "i3modules": [[69, "i3modules"]], "cleaning_module": [[72, "module-graphnet.deployment.icecube.cleaning_module"]], "i3deployer": [[73, "i3deployer"]], "inference_module": [[74, "module-graphnet.deployment.icecube.inference_module"]], "exceptions": [[75, "module-graphnet.exceptions"], [76, "module-graphnet.exceptions.exceptions"]], "models": [[77, "module-graphnet.models"]], "coarsening": [[78, "module-graphnet.models.coarsening"]], "components": [[79, "module-graphnet.models.components"]], "embedding": [[80, "module-graphnet.models.components.embedding"]], "layers": [[81, "module-graphnet.models.components.layers"]], "pool": [[82, "module-graphnet.models.components.pool"]], "detector": [[83, "module-graphnet.models.detector"], [84, "module-graphnet.models.detector.detector"]], "gnn": [[88, "module-graphnet.models.gnn"], [94, "module-graphnet.models.gnn.gnn"]], "RNN_tito": [[89, "module-graphnet.models.gnn.RNN_tito"]], "convnet": [[90, "module-graphnet.models.gnn.convnet"]], "dynedge": [[91, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[92, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedge_kaggle_tito": [[93, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "icemix": [[95, "module-graphnet.models.gnn.icemix"]], "graphs": [[96, "module-graphnet.models.graphs"], [101, "module-graphnet.models.graphs.graphs"]], "edges": [[97, "module-graphnet.models.graphs.edges"], [98, "module-graphnet.models.graphs.edges.edges"]], "minkowski": [[99, "module-graphnet.models.graphs.edges.minkowski"]], "graph_definition": [[100, "module-graphnet.models.graphs.graph_definition"]], "nodes": [[102, "module-graphnet.models.graphs.nodes"], [103, "module-graphnet.models.graphs.nodes.nodes"]], "utils": [[104, "module-graphnet.models.graphs.utils"], [114, "module-graphnet.models.utils"], [119, "module-graphnet.training.utils"]], "model": [[105, "module-graphnet.models.model"]], "rnn": [[106, "module-graphnet.models.rnn"]], "node_rnn": [[107, "module-graphnet.models.rnn.node_rnn"]], "standard_averaged_model": [[108, "module-graphnet.models.standard_averaged_model"]], "standard_model": [[109, "module-graphnet.models.standard_model"]], "task": [[110, "module-graphnet.models.task"], [113, "module-graphnet.models.task.task"]], "classification": [[111, "module-graphnet.models.task.classification"]], "reconstruction": [[112, "module-graphnet.models.task.reconstruction"]], "training": [[115, "module-graphnet.training"]], "callbacks": [[116, "module-graphnet.training.callbacks"]], "labels": [[117, "module-graphnet.training.labels"]], "loss_functions": [[118, "module-graphnet.training.loss_functions"]], "weight_fitting": [[120, "module-graphnet.training.weight_fitting"]], "argparse": [[122, "module-graphnet.utilities.argparse"]], "config": [[123, "module-graphnet.utilities.config"]], "base_config": [[124, "module-graphnet.utilities.config.base_config"]], "configurable": [[125, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[126, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[127, "module-graphnet.utilities.config.model_config"]], "parsing": [[128, "module-graphnet.utilities.config.parsing"]], "training_config": [[129, "module-graphnet.utilities.config.training_config"]], "decorators": [[130, "module-graphnet.utilities.decorators"]], "deprecation_tools": [[131, "module-graphnet.utilities.deprecation_tools"]], "filesys": [[132, "module-graphnet.utilities.filesys"]], "imports": [[133, "module-graphnet.utilities.imports"]], "logging": [[134, "module-graphnet.utilities.logging"]], "maths": [[135, "module-graphnet.utilities.maths"]], "src": [[136, "src"]], "Contribute": [[137, "contribute"]], "GitHub issues": [[137, "github-issues"]], "Pull requests": [[137, "pull-requests"]], "Conventions": [[137, "conventions"]], "Code quality": [[137, "code-quality"]], "Install": [[139, "install"]], "Installing with IceTray": [[139, "installing-with-icetray"]], "Installing stand-alone": [[139, "installing-stand-alone"]], "Running in Docker": [[139, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.curated_datamodule"], [6, "module-graphnet.data.dataclasses"], [7, "module-graphnet.data.dataconverter"], [8, "module-graphnet.data.dataloader"], [9, "module-graphnet.data.datamodule"], [10, "module-graphnet.data.dataset"], [11, "module-graphnet.data.dataset.dataset"], [12, "module-graphnet.data.dataset.parquet"], [13, "module-graphnet.data.dataset.parquet.parquet_dataset"], [14, "module-graphnet.data.dataset.sqlite"], [15, "module-graphnet.data.dataset.sqlite.sqlite_dataset"], [16, "module-graphnet.data.extractors"], [17, "module-graphnet.data.extractors.combine_extractors"], [18, "module-graphnet.data.extractors.extractor"], [19, "module-graphnet.data.extractors.icecube"], [20, "module-graphnet.data.extractors.icecube.i3extractor"], [21, "module-graphnet.data.extractors.icecube.i3featureextractor"], [22, "module-graphnet.data.extractors.icecube.i3genericextractor"], [23, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"], [24, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"], [25, "module-graphnet.data.extractors.icecube.i3particleextractor"], [26, "module-graphnet.data.extractors.icecube.i3pisaextractor"], [27, "module-graphnet.data.extractors.icecube.i3quesoextractor"], [28, "module-graphnet.data.extractors.icecube.i3retroextractor"], [29, "module-graphnet.data.extractors.icecube.i3splinempeextractor"], [30, "module-graphnet.data.extractors.icecube.i3truthextractor"], [31, "module-graphnet.data.extractors.icecube.i3tumextractor"], [32, "module-graphnet.data.extractors.icecube.utilities"], [33, "module-graphnet.data.extractors.icecube.utilities.collections"], [34, "module-graphnet.data.extractors.icecube.utilities.frames"], [35, "module-graphnet.data.extractors.icecube.utilities.i3_filters"], [36, "module-graphnet.data.extractors.icecube.utilities.types"], [37, "module-graphnet.data.extractors.internal"], [38, "module-graphnet.data.extractors.internal.parquet_extractor"], [39, "module-graphnet.data.extractors.liquido"], [40, "module-graphnet.data.extractors.liquido.h5_extractor"], [41, "module-graphnet.data.extractors.prometheus"], [42, "module-graphnet.data.extractors.prometheus.prometheus_extractor"], [43, "module-graphnet.data.parquet"], [44, "module-graphnet.data.parquet.deprecated_methods"], [45, "module-graphnet.data.pre_configured"], [46, "module-graphnet.data.pre_configured.dataconverters"], [47, "module-graphnet.data.readers"], [48, "module-graphnet.data.readers.graphnet_file_reader"], [49, "module-graphnet.data.readers.i3reader"], [50, "module-graphnet.data.readers.internal_parquet_reader"], [51, "module-graphnet.data.readers.liquido_reader"], [52, "module-graphnet.data.readers.prometheus_reader"], [53, "module-graphnet.data.sqlite"], [54, "module-graphnet.data.sqlite.deprecated_methods"], [55, "module-graphnet.data.utilities"], [56, "module-graphnet.data.utilities.parquet_to_sqlite"], [57, "module-graphnet.data.utilities.random"], [58, "module-graphnet.data.utilities.sqlite_utilities"], [59, "module-graphnet.data.utilities.string_selection_resolver"], [60, "module-graphnet.data.writers"], [61, "module-graphnet.data.writers.graphnet_writer"], [62, "module-graphnet.data.writers.parquet_writer"], [63, "module-graphnet.data.writers.sqlite_writer"], [64, "module-graphnet.datasets"], [65, "module-graphnet.datasets.test_dataset"], [66, "module-graphnet.deployment"], [67, "module-graphnet.deployment.deployer"], [68, "module-graphnet.deployment.deployment_module"], [72, "module-graphnet.deployment.icecube.cleaning_module"], [74, "module-graphnet.deployment.icecube.inference_module"], [75, "module-graphnet.exceptions"], [76, "module-graphnet.exceptions.exceptions"], [77, "module-graphnet.models"], [78, "module-graphnet.models.coarsening"], [79, "module-graphnet.models.components"], [80, "module-graphnet.models.components.embedding"], [81, "module-graphnet.models.components.layers"], [82, "module-graphnet.models.components.pool"], [83, "module-graphnet.models.detector"], [84, "module-graphnet.models.detector.detector"], [85, "module-graphnet.models.detector.icecube"], [86, "module-graphnet.models.detector.liquido"], [87, "module-graphnet.models.detector.prometheus"], [88, "module-graphnet.models.gnn"], [89, "module-graphnet.models.gnn.RNN_tito"], [90, "module-graphnet.models.gnn.convnet"], [91, "module-graphnet.models.gnn.dynedge"], [92, "module-graphnet.models.gnn.dynedge_jinst"], [93, "module-graphnet.models.gnn.dynedge_kaggle_tito"], [94, "module-graphnet.models.gnn.gnn"], [95, "module-graphnet.models.gnn.icemix"], [96, "module-graphnet.models.graphs"], [97, "module-graphnet.models.graphs.edges"], [98, "module-graphnet.models.graphs.edges.edges"], [99, "module-graphnet.models.graphs.edges.minkowski"], [100, "module-graphnet.models.graphs.graph_definition"], [101, "module-graphnet.models.graphs.graphs"], [102, "module-graphnet.models.graphs.nodes"], [103, "module-graphnet.models.graphs.nodes.nodes"], [104, "module-graphnet.models.graphs.utils"], [105, "module-graphnet.models.model"], [106, "module-graphnet.models.rnn"], [107, "module-graphnet.models.rnn.node_rnn"], [108, "module-graphnet.models.standard_averaged_model"], [109, "module-graphnet.models.standard_model"], [110, "module-graphnet.models.task"], [111, "module-graphnet.models.task.classification"], [112, "module-graphnet.models.task.reconstruction"], [113, "module-graphnet.models.task.task"], [114, "module-graphnet.models.utils"], [115, "module-graphnet.training"], [116, "module-graphnet.training.callbacks"], [117, "module-graphnet.training.labels"], [118, "module-graphnet.training.loss_functions"], [119, "module-graphnet.training.utils"], [120, "module-graphnet.training.weight_fitting"], [121, "module-graphnet.utilities"], [122, "module-graphnet.utilities.argparse"], [123, "module-graphnet.utilities.config"], [124, "module-graphnet.utilities.config.base_config"], [125, "module-graphnet.utilities.config.configurable"], [126, "module-graphnet.utilities.config.dataset_config"], [127, "module-graphnet.utilities.config.model_config"], [128, "module-graphnet.utilities.config.parsing"], [129, "module-graphnet.utilities.config.training_config"], [130, "module-graphnet.utilities.decorators"], [131, "module-graphnet.utilities.deprecation_tools"], [132, "module-graphnet.utilities.filesys"], [133, "module-graphnet.utilities.imports"], [134, "module-graphnet.utilities.logging"], [135, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "liquido (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.LIQUIDO"]], "liquido (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.LIQUIDO"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "curateddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.CuratedDataset"]], "erdahosteddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.ERDAHostedDataset"]], "available_backends (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.available_backends"]], "citation (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.citation"]], "comments (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.comments"]], "creator (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.creator"]], "dataset_dir (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.dataset_dir"]], "description() (graphnet.data.curated_datamodule.curateddataset method)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.description"]], "event_truth (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.event_truth"]], "events (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.events"]], "experiment (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.experiment"]], "features (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.features"]], "graphnet.data.curated_datamodule": [[5, "module-graphnet.data.curated_datamodule"]], "prepare_data() (graphnet.data.curated_datamodule.curateddataset method)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.prepare_data"]], "prepare_data() (graphnet.data.curated_datamodule.erdahosteddataset method)": [[5, "graphnet.data.curated_datamodule.ERDAHostedDataset.prepare_data"]], "pulse_truth (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.pulse_truth"]], "pulsemaps (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.pulsemaps"]], "truth_table (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.truth_table"]], "i3fileset (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.I3FileSet"]], "settings (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.Settings"]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.gcd_file"]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.gcd_file"]], "graphnet.data.dataclasses": [[6, "module-graphnet.data.dataclasses"]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.i3_file"]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.i3_files"]], "modules (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.modules"]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.output_folder"]], "dataconverter (class in graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.DataConverter"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[7, "module-graphnet.data.dataconverter"]], "init_global_index() (in module graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.merge_files"]], "dataloader (class in graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.DataLoader"]], "collate_fn() (in module graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.collate_fn"]], "do_shuffle() (in module graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.do_shuffle"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[8, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "graphnet.data.dataloader": [[8, "module-graphnet.data.dataloader"]], "graphnetdatamodule (class in graphnet.data.datamodule)": [[9, "graphnet.data.datamodule.GraphNeTDataModule"]], "graphnet.data.datamodule": [[9, "module-graphnet.data.datamodule"]], "prepare_data() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.prepare_data"]], "setup() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.setup"]], "teardown() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.teardown"]], "test_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.test_dataloader"]], "train_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.train_dataloader"]], "val_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.val_dataloader"]], "graphnet.data.dataset": [[10, "module-graphnet.data.dataset"]], "dataset (class in graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.Dataset"]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.EnsembleDataset"]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[11, "graphnet.data.dataset.dataset.Dataset.add_label"]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[11, "graphnet.data.dataset.dataset.Dataset.concatenate"]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[11, "graphnet.data.dataset.dataset.Dataset.from_config"]], "graphnet.data.dataset.dataset": [[11, "module-graphnet.data.dataset.dataset"]], "load_module() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.load_module"]], "parse_graph_definition() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.parse_graph_definition"]], "parse_labels() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.parse_labels"]], "path (graphnet.data.dataset.dataset.dataset property)": [[11, "graphnet.data.dataset.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[11, "graphnet.data.dataset.dataset.Dataset.query_table"]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[11, "graphnet.data.dataset.dataset.Dataset.truth_table"]], "graphnet.data.dataset.parquet": [[12, "module-graphnet.data.dataset.parquet"]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[13, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table"]], "graphnet.data.dataset.sqlite": [[14, "module-graphnet.data.dataset.sqlite"]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[15, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[15, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[15, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "graphnet.data.extractors": [[16, "module-graphnet.data.extractors"]], "combinedextractor (class in graphnet.data.extractors.combine_extractors)": [[17, "graphnet.data.extractors.combine_extractors.CombinedExtractor"]], "graphnet.data.extractors.combine_extractors": [[17, "module-graphnet.data.extractors.combine_extractors"]], "extractor (class in graphnet.data.extractors.extractor)": [[18, "graphnet.data.extractors.extractor.Extractor"]], "graphnet.data.extractors.extractor": [[18, "module-graphnet.data.extractors.extractor"]], "name (graphnet.data.extractors.extractor.extractor property)": [[18, "graphnet.data.extractors.extractor.Extractor.name"]], "graphnet.data.extractors.icecube": [[19, "module-graphnet.data.extractors.icecube"]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[20, "graphnet.data.extractors.icecube.i3extractor.I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor": [[20, "module-graphnet.data.extractors.icecube.i3extractor"]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[20, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd"]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3featureextractor": [[21, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[22, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3genericextractor": [[22, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[23, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[23, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[24, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[24, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[25, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[25, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[26, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[26, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[27, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[27, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[28, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[28, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[29, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[29, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[30, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[30, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[31, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[31, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "graphnet.data.extractors.icecube.utilities": [[32, "module-graphnet.data.extractors.icecube.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[33, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.icecube.utilities.collections": [[33, "module-graphnet.data.extractors.icecube.utilities.collections"]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[33, "graphnet.data.extractors.icecube.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[33, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[34, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[34, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[34, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.frames": [[34, "module-graphnet.data.extractors.icecube.utilities.frames"]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[35, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter"]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[35, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask"]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[35, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[35, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.get_member_variables"]], "graphnet.data.extractors.icecube.utilities.types": [[36, "module-graphnet.data.extractors.icecube.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_type"]], "graphnet.data.extractors.internal": [[37, "module-graphnet.data.extractors.internal"]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[38, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[38, "module-graphnet.data.extractors.internal.parquet_extractor"]], "graphnet.data.extractors.liquido": [[39, "module-graphnet.data.extractors.liquido"]], "h5extractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[40, "graphnet.data.extractors.liquido.h5_extractor.H5Extractor"]], "h5hitextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[40, "graphnet.data.extractors.liquido.h5_extractor.H5HitExtractor"]], "h5truthextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[40, "graphnet.data.extractors.liquido.h5_extractor.H5TruthExtractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[40, "module-graphnet.data.extractors.liquido.h5_extractor"]], "graphnet.data.extractors.prometheus": [[41, "module-graphnet.data.extractors.prometheus"]], "prometheusextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[42, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusExtractor"]], "prometheusfeatureextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[42, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusFeatureExtractor"]], "prometheustruthextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[42, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusTruthExtractor"]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[42, "module-graphnet.data.extractors.prometheus.prometheus_extractor"]], "graphnet.data.parquet": [[43, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.deprecated_methods)": [[44, "graphnet.data.parquet.deprecated_methods.ParquetDataConverter"]], "graphnet.data.parquet.deprecated_methods": [[44, "module-graphnet.data.parquet.deprecated_methods"]], "graphnet.data.pre_configured": [[45, "module-graphnet.data.pre_configured"]], "i3toparquetconverter (class in graphnet.data.pre_configured.dataconverters)": [[46, "graphnet.data.pre_configured.dataconverters.I3ToParquetConverter"]], "i3tosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[46, "graphnet.data.pre_configured.dataconverters.I3ToSQLiteConverter"]], "parquettosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[46, "graphnet.data.pre_configured.dataconverters.ParquetToSQLiteConverter"]], "graphnet.data.pre_configured.dataconverters": [[46, "module-graphnet.data.pre_configured.dataconverters"]], "graphnet.data.readers": [[47, "module-graphnet.data.readers"]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader"]], "accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors"]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions"]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names"]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files"]], "graphnet.data.readers.graphnet_file_reader": [[48, "module-graphnet.data.readers.graphnet_file_reader"]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors"]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files"]], "i3reader (class in graphnet.data.readers.i3reader)": [[49, "graphnet.data.readers.i3reader.I3Reader"]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[49, "graphnet.data.readers.i3reader.I3Reader.find_files"]], "graphnet.data.readers.i3reader": [[49, "module-graphnet.data.readers.i3reader"]], "parquetreader (class in graphnet.data.readers.internal_parquet_reader)": [[50, "graphnet.data.readers.internal_parquet_reader.ParquetReader"]], "find_files() (graphnet.data.readers.internal_parquet_reader.parquetreader method)": [[50, "graphnet.data.readers.internal_parquet_reader.ParquetReader.find_files"]], "graphnet.data.readers.internal_parquet_reader": [[50, "module-graphnet.data.readers.internal_parquet_reader"]], "liquidoreader (class in graphnet.data.readers.liquido_reader)": [[51, "graphnet.data.readers.liquido_reader.LiquidOReader"]], "find_files() (graphnet.data.readers.liquido_reader.liquidoreader method)": [[51, "graphnet.data.readers.liquido_reader.LiquidOReader.find_files"]], "graphnet.data.readers.liquido_reader": [[51, "module-graphnet.data.readers.liquido_reader"]], "prometheusreader (class in graphnet.data.readers.prometheus_reader)": [[52, "graphnet.data.readers.prometheus_reader.PrometheusReader"]], "find_files() (graphnet.data.readers.prometheus_reader.prometheusreader method)": [[52, "graphnet.data.readers.prometheus_reader.PrometheusReader.find_files"]], "graphnet.data.readers.prometheus_reader": [[52, "module-graphnet.data.readers.prometheus_reader"]], "graphnet.data.sqlite": [[53, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.deprecated_methods)": [[54, "graphnet.data.sqlite.deprecated_methods.SQLiteDataConverter"]], "graphnet.data.sqlite.deprecated_methods": [[54, "module-graphnet.data.sqlite.deprecated_methods"]], "graphnet.data.utilities": [[55, "module-graphnet.data.utilities"]], "graphnet.data.utilities.parquet_to_sqlite": [[56, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random": [[57, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[57, "graphnet.data.utilities.random.pairwise_shuffle"]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.database_table_exists"]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.get_primary_keys"]], "graphnet.data.utilities.sqlite_utilities": [[58, "module-graphnet.data.utilities.sqlite_utilities"]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.query_database"]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.save_to_sql"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[59, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[59, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[59, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.data.writers": [[60, "module-graphnet.data.writers"]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[61, "graphnet.data.writers.graphnet_writer.GraphNeTWriter"]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[61, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes"]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[61, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension"]], "graphnet.data.writers.graphnet_writer": [[61, "module-graphnet.data.writers.graphnet_writer"]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[61, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files"]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[62, "graphnet.data.writers.parquet_writer.ParquetWriter"]], "graphnet.data.writers.parquet_writer": [[62, "module-graphnet.data.writers.parquet_writer"]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[62, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files"]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[63, "graphnet.data.writers.sqlite_writer.SQLiteWriter"]], "graphnet.data.writers.sqlite_writer": [[63, "module-graphnet.data.writers.sqlite_writer"]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[63, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files"]], "graphnet.datasets": [[64, "module-graphnet.datasets"]], "testdataset (class in graphnet.datasets.test_dataset)": [[65, "graphnet.datasets.test_dataset.TestDataset"]], "graphnet.datasets.test_dataset": [[65, "module-graphnet.datasets.test_dataset"]], "graphnet.deployment": [[66, "module-graphnet.deployment"]], "deployer (class in graphnet.deployment.deployer)": [[67, "graphnet.deployment.deployer.Deployer"]], "graphnet.deployment.deployer": [[67, "module-graphnet.deployment.deployer"]], "run() (graphnet.deployment.deployer.deployer method)": [[67, "graphnet.deployment.deployer.Deployer.run"]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[68, "graphnet.deployment.deployment_module.DeploymentModule"]], "graphnet.deployment.deployment_module": [[68, "module-graphnet.deployment.deployment_module"]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[72, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule"]], "graphnet.deployment.icecube.cleaning_module": [[72, "module-graphnet.deployment.icecube.cleaning_module"]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[74, "graphnet.deployment.icecube.inference_module.I3InferenceModule"]], "graphnet.deployment.icecube.inference_module": [[74, "module-graphnet.deployment.icecube.inference_module"]], "graphnet.exceptions": [[75, "module-graphnet.exceptions"]], "columnmissingexception": [[76, "graphnet.exceptions.exceptions.ColumnMissingException"]], "graphnet.exceptions.exceptions": [[76, "module-graphnet.exceptions.exceptions"]], "graphnet.models": [[77, "module-graphnet.models"]], "attributecoarsening (class in graphnet.models.coarsening)": [[78, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[78, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[78, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[78, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[78, "graphnet.models.coarsening.DOMCoarsening"]], "forward() (graphnet.models.coarsening.coarsening method)": [[78, "graphnet.models.coarsening.Coarsening.forward"]], "graphnet.models.coarsening": [[78, "module-graphnet.models.coarsening"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[78, "graphnet.models.coarsening.Coarsening.reduce_options"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[78, "graphnet.models.coarsening.unbatch_edge_index"]], "graphnet.models.components": [[79, "module-graphnet.models.components"]], "fourierencoder (class in graphnet.models.components.embedding)": [[80, "graphnet.models.components.embedding.FourierEncoder"]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[80, "graphnet.models.components.embedding.SinusoidalPosEmb"]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[80, "graphnet.models.components.embedding.SpacetimeEncoder"]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[80, "graphnet.models.components.embedding.FourierEncoder.forward"]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[80, "graphnet.models.components.embedding.SinusoidalPosEmb.forward"]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[80, "graphnet.models.components.embedding.SpacetimeEncoder.forward"]], "graphnet.models.components.embedding": [[80, "module-graphnet.models.components.embedding"]], "attention_rel (class in graphnet.models.components.layers)": [[81, "graphnet.models.components.layers.Attention_rel"]], "block (class in graphnet.models.components.layers)": [[81, "graphnet.models.components.layers.Block"]], "block_rel (class in graphnet.models.components.layers)": [[81, "graphnet.models.components.layers.Block_rel"]], "droppath (class in graphnet.models.components.layers)": [[81, "graphnet.models.components.layers.DropPath"]], "dynedgeconv (class in graphnet.models.components.layers)": [[81, "graphnet.models.components.layers.DynEdgeConv"]], "dyntrans (class in graphnet.models.components.layers)": [[81, "graphnet.models.components.layers.DynTrans"]], "edgeconvtito (class in graphnet.models.components.layers)": [[81, "graphnet.models.components.layers.EdgeConvTito"]], "mlp (class in graphnet.models.components.layers)": [[81, "graphnet.models.components.layers.Mlp"]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[81, "graphnet.models.components.layers.DropPath.extra_repr"]], "forward() (graphnet.models.components.layers.attention_rel method)": [[81, "graphnet.models.components.layers.Attention_rel.forward"]], "forward() (graphnet.models.components.layers.block method)": [[81, "graphnet.models.components.layers.Block.forward"]], "forward() (graphnet.models.components.layers.block_rel method)": [[81, "graphnet.models.components.layers.Block_rel.forward"]], "forward() (graphnet.models.components.layers.droppath method)": [[81, "graphnet.models.components.layers.DropPath.forward"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[81, "graphnet.models.components.layers.DynEdgeConv.forward"]], "forward() (graphnet.models.components.layers.dyntrans method)": [[81, "graphnet.models.components.layers.DynTrans.forward"]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[81, "graphnet.models.components.layers.EdgeConvTito.forward"]], "forward() (graphnet.models.components.layers.mlp method)": [[81, "graphnet.models.components.layers.Mlp.forward"]], "graphnet.models.components.layers": [[81, "module-graphnet.models.components.layers"]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[81, "graphnet.models.components.layers.EdgeConvTito.message"]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[81, "graphnet.models.components.layers.EdgeConvTito.reset_parameters"]], "graphnet.models.components.pool": [[82, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.sum_pool_x"]], "graphnet.models.detector": [[83, "module-graphnet.models.detector"]], "detector (class in graphnet.models.detector.detector)": [[84, "graphnet.models.detector.detector.Detector"]], "feature_map() (graphnet.models.detector.detector.detector method)": [[84, "graphnet.models.detector.detector.Detector.feature_map"]], "forward() (graphnet.models.detector.detector.detector method)": [[84, "graphnet.models.detector.detector.Detector.forward"]], "geometry_table (graphnet.models.detector.detector.detector property)": [[84, "graphnet.models.detector.detector.Detector.geometry_table"]], "graphnet.models.detector.detector": [[84, "module-graphnet.models.detector.detector"]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[84, "graphnet.models.detector.detector.Detector.sensor_index_name"]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[84, "graphnet.models.detector.detector.Detector.sensor_position_names"]], "string_index_name (graphnet.models.detector.detector.detector property)": [[84, "graphnet.models.detector.detector.Detector.string_index_name"]], "icecube86 (class in graphnet.models.detector.icecube)": [[85, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[85, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[85, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[85, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[85, "graphnet.models.detector.icecube.IceCube86.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[85, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[85, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[85, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map"]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[85, "graphnet.models.detector.icecube.IceCube86.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[85, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path"]], "graphnet.models.detector.icecube": [[85, "module-graphnet.models.detector.icecube"]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[85, "graphnet.models.detector.icecube.IceCube86.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[85, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[85, "graphnet.models.detector.icecube.IceCube86.string_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[85, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column"]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[85, "graphnet.models.detector.icecube.IceCube86.xyz"]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[85, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz"]], "liquido_v1 (class in graphnet.models.detector.liquido)": [[86, "graphnet.models.detector.liquido.LiquidO_v1"]], "feature_map() (graphnet.models.detector.liquido.liquido_v1 method)": [[86, "graphnet.models.detector.liquido.LiquidO_v1.feature_map"]], "geometry_table_path (graphnet.models.detector.liquido.liquido_v1 attribute)": [[86, "graphnet.models.detector.liquido.LiquidO_v1.geometry_table_path"]], "graphnet.models.detector.liquido": [[86, "module-graphnet.models.detector.liquido"]], "sensor_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[86, "graphnet.models.detector.liquido.LiquidO_v1.sensor_id_column"]], "string_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[86, "graphnet.models.detector.liquido.LiquidO_v1.string_id_column"]], "xyz (graphnet.models.detector.liquido.liquido_v1 attribute)": [[86, "graphnet.models.detector.liquido.LiquidO_v1.xyz"]], "arca115 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.ARCA115"]], "baikalgvd8 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.BaikalGVD8"]], "icecube86 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.IceCube86"]], "icecubedeepcore8 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.IceCubeDeepCore8"]], "icecubegen2 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.IceCubeGen2"]], "icecubeupgrade7 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.IceCubeUpgrade7"]], "icedemo81 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.IceDemo81"]], "orca150 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.ORCA150"]], "orca150superdense (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.ORCA150SuperDense"]], "prometheus (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.Prometheus"]], "trident1211 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.TRIDENT1211"]], "waterdemo81 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.WaterDemo81"]], "feature_map() (graphnet.models.detector.prometheus.arca115 method)": [[87, "graphnet.models.detector.prometheus.ARCA115.feature_map"]], "feature_map() (graphnet.models.detector.prometheus.baikalgvd8 method)": [[87, "graphnet.models.detector.prometheus.BaikalGVD8.feature_map"]], "feature_map() (graphnet.models.detector.prometheus.icecube86 method)": [[87, "graphnet.models.detector.prometheus.IceCube86.feature_map"]], "feature_map() (graphnet.models.detector.prometheus.icecubedeepcore8 method)": [[87, "graphnet.models.detector.prometheus.IceCubeDeepCore8.feature_map"]], "feature_map() (graphnet.models.detector.prometheus.icecubegen2 method)": [[87, "graphnet.models.detector.prometheus.IceCubeGen2.feature_map"]], "feature_map() (graphnet.models.detector.prometheus.icecubeupgrade7 method)": [[87, "graphnet.models.detector.prometheus.IceCubeUpgrade7.feature_map"]], "feature_map() (graphnet.models.detector.prometheus.icedemo81 method)": [[87, "graphnet.models.detector.prometheus.IceDemo81.feature_map"]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[87, "graphnet.models.detector.prometheus.ORCA150.feature_map"]], "feature_map() (graphnet.models.detector.prometheus.orca150superdense method)": [[87, "graphnet.models.detector.prometheus.ORCA150SuperDense.feature_map"]], "feature_map() (graphnet.models.detector.prometheus.trident1211 method)": [[87, "graphnet.models.detector.prometheus.TRIDENT1211.feature_map"]], "feature_map() (graphnet.models.detector.prometheus.waterdemo81 method)": [[87, "graphnet.models.detector.prometheus.WaterDemo81.feature_map"]], "geometry_table_path (graphnet.models.detector.prometheus.arca115 attribute)": [[87, "graphnet.models.detector.prometheus.ARCA115.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[87, "graphnet.models.detector.prometheus.BaikalGVD8.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.prometheus.icecube86 attribute)": [[87, "graphnet.models.detector.prometheus.IceCube86.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeDeepCore8.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeGen2.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeUpgrade7.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.prometheus.icedemo81 attribute)": [[87, "graphnet.models.detector.prometheus.IceDemo81.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[87, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.prometheus.orca150superdense attribute)": [[87, "graphnet.models.detector.prometheus.ORCA150SuperDense.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.prometheus.trident1211 attribute)": [[87, "graphnet.models.detector.prometheus.TRIDENT1211.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[87, "graphnet.models.detector.prometheus.WaterDemo81.geometry_table_path"]], "graphnet.models.detector.prometheus": [[87, "module-graphnet.models.detector.prometheus"]], "sensor_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[87, "graphnet.models.detector.prometheus.ARCA115.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[87, "graphnet.models.detector.prometheus.BaikalGVD8.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.prometheus.icecube86 attribute)": [[87, "graphnet.models.detector.prometheus.IceCube86.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeDeepCore8.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeGen2.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeUpgrade7.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[87, "graphnet.models.detector.prometheus.IceDemo81.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[87, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[87, "graphnet.models.detector.prometheus.ORCA150SuperDense.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[87, "graphnet.models.detector.prometheus.TRIDENT1211.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[87, "graphnet.models.detector.prometheus.WaterDemo81.sensor_id_column"]], "string_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[87, "graphnet.models.detector.prometheus.ARCA115.string_id_column"]], "string_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[87, "graphnet.models.detector.prometheus.BaikalGVD8.string_id_column"]], "string_id_column (graphnet.models.detector.prometheus.icecube86 attribute)": [[87, "graphnet.models.detector.prometheus.IceCube86.string_id_column"]], "string_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeDeepCore8.string_id_column"]], "string_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeGen2.string_id_column"]], "string_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeUpgrade7.string_id_column"]], "string_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[87, "graphnet.models.detector.prometheus.IceDemo81.string_id_column"]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[87, "graphnet.models.detector.prometheus.ORCA150.string_id_column"]], "string_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[87, "graphnet.models.detector.prometheus.ORCA150SuperDense.string_id_column"]], "string_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[87, "graphnet.models.detector.prometheus.TRIDENT1211.string_id_column"]], "string_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[87, "graphnet.models.detector.prometheus.WaterDemo81.string_id_column"]], "xyz (graphnet.models.detector.prometheus.arca115 attribute)": [[87, "graphnet.models.detector.prometheus.ARCA115.xyz"]], "xyz (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[87, "graphnet.models.detector.prometheus.BaikalGVD8.xyz"]], "xyz (graphnet.models.detector.prometheus.icecube86 attribute)": [[87, "graphnet.models.detector.prometheus.IceCube86.xyz"]], "xyz (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeDeepCore8.xyz"]], "xyz (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeGen2.xyz"]], "xyz (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeUpgrade7.xyz"]], "xyz (graphnet.models.detector.prometheus.icedemo81 attribute)": [[87, "graphnet.models.detector.prometheus.IceDemo81.xyz"]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[87, "graphnet.models.detector.prometheus.ORCA150.xyz"]], "xyz (graphnet.models.detector.prometheus.orca150superdense attribute)": [[87, "graphnet.models.detector.prometheus.ORCA150SuperDense.xyz"]], "xyz (graphnet.models.detector.prometheus.trident1211 attribute)": [[87, "graphnet.models.detector.prometheus.TRIDENT1211.xyz"]], "xyz (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[87, "graphnet.models.detector.prometheus.WaterDemo81.xyz"]], "graphnet.models.gnn": [[88, "module-graphnet.models.gnn"]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[89, "graphnet.models.gnn.RNN_tito.RNN_TITO"]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[89, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward"]], "graphnet.models.gnn.rnn_tito": [[89, "module-graphnet.models.gnn.RNN_tito"]], "convnet (class in graphnet.models.gnn.convnet)": [[90, "graphnet.models.gnn.convnet.ConvNet"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[90, "graphnet.models.gnn.convnet.ConvNet.forward"]], "graphnet.models.gnn.convnet": [[90, "module-graphnet.models.gnn.convnet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[91, "graphnet.models.gnn.dynedge.DynEdge"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[91, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "graphnet.models.gnn.dynedge": [[91, "module-graphnet.models.gnn.dynedge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[92, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[92, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "graphnet.models.gnn.dynedge_jinst": [[92, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[93, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO"]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[93, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[93, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "gnn (class in graphnet.models.gnn.gnn)": [[94, "graphnet.models.gnn.gnn.GNN"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[94, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn.gnn": [[94, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[94, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[94, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "deepice (class in graphnet.models.gnn.icemix)": [[95, "graphnet.models.gnn.icemix.DeepIce"]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[95, "graphnet.models.gnn.icemix.DeepIce.forward"]], "graphnet.models.gnn.icemix": [[95, "module-graphnet.models.gnn.icemix"]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[95, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay"]], "graphnet.models.graphs": [[96, "module-graphnet.models.graphs"]], "graphnet.models.graphs.edges": [[97, "module-graphnet.models.graphs.edges"]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[98, "graphnet.models.graphs.edges.edges.EdgeDefinition"]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[98, "graphnet.models.graphs.edges.edges.EuclideanEdges"]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[98, "graphnet.models.graphs.edges.edges.KNNEdges"]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[98, "graphnet.models.graphs.edges.edges.RadialEdges"]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[98, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward"]], "graphnet.models.graphs.edges.edges": [[98, "module-graphnet.models.graphs.edges.edges"]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[99, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges"]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[99, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat"]], "graphnet.models.graphs.edges.minkowski": [[99, "module-graphnet.models.graphs.edges.minkowski"]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[100, "graphnet.models.graphs.graph_definition.GraphDefinition"]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[100, "graphnet.models.graphs.graph_definition.GraphDefinition.forward"]], "graphnet.models.graphs.graph_definition": [[100, "module-graphnet.models.graphs.graph_definition"]], "knngraph (class in graphnet.models.graphs.graphs)": [[101, "graphnet.models.graphs.graphs.KNNGraph"]], "graphnet.models.graphs.graphs": [[101, "module-graphnet.models.graphs.graphs"]], "graphnet.models.graphs.nodes": [[102, "module-graphnet.models.graphs.nodes"]], "icemixnodes (class in graphnet.models.graphs.nodes.nodes)": [[103, "graphnet.models.graphs.nodes.nodes.IceMixNodes"]], "nodeasdomtimeseries (class in graphnet.models.graphs.nodes.nodes)": [[103, "graphnet.models.graphs.nodes.nodes.NodeAsDOMTimeSeries"]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[103, "graphnet.models.graphs.nodes.nodes.NodeDefinition"]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[103, "graphnet.models.graphs.nodes.nodes.NodesAsPulses"]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[103, "graphnet.models.graphs.nodes.nodes.PercentileClusters"]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[103, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward"]], "graphnet.models.graphs.nodes.nodes": [[103, "module-graphnet.models.graphs.nodes.nodes"]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[103, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs"]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[103, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs"]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[103, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names"]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[104, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles"]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[104, "graphnet.models.graphs.utils.gather_cluster_sequence"]], "graphnet.models.graphs.utils": [[104, "module-graphnet.models.graphs.utils"]], "ice_transparency() (in module graphnet.models.graphs.utils)": [[104, "graphnet.models.graphs.utils.ice_transparency"]], "identify_indices() (in module graphnet.models.graphs.utils)": [[104, "graphnet.models.graphs.utils.identify_indices"]], "lex_sort() (in module graphnet.models.graphs.utils)": [[104, "graphnet.models.graphs.utils.lex_sort"]], "model (class in graphnet.models.model)": [[105, "graphnet.models.model.Model"]], "extra_repr() (graphnet.models.model.model method)": [[105, "graphnet.models.model.Model.extra_repr"]], "extra_repr_recursive() (graphnet.models.model.model method)": [[105, "graphnet.models.model.Model.extra_repr_recursive"]], "from_config() (graphnet.models.model.model class method)": [[105, "graphnet.models.model.Model.from_config"]], "graphnet.models.model": [[105, "module-graphnet.models.model"]], "load() (graphnet.models.model.model class method)": [[105, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[105, "graphnet.models.model.Model.load_state_dict"]], "save() (graphnet.models.model.model method)": [[105, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[105, "graphnet.models.model.Model.save_state_dict"]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[105, "graphnet.models.model.Model.set_verbose_print_recursively"]], "verbose_print (graphnet.models.model.model attribute)": [[105, "graphnet.models.model.Model.verbose_print"]], "graphnet.models.rnn": [[106, "module-graphnet.models.rnn"]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[107, "graphnet.models.rnn.node_rnn.Node_RNN"]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[107, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object"]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[107, "graphnet.models.rnn.node_rnn.Node_RNN.forward"]], "graphnet.models.rnn.node_rnn": [[107, "module-graphnet.models.rnn.node_rnn"]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[108, "graphnet.models.standard_averaged_model.StandardAveragedModel"]], "graphnet.models.standard_averaged_model": [[108, "module-graphnet.models.standard_averaged_model"]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[108, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict"]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[108, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end"]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[108, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step"]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[108, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step"]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[108, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step"]], "standardmodel (class in graphnet.models.standard_model)": [[109, "graphnet.models.standard_model.StandardModel"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "fit() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.fit"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.forward"]], "graphnet.models.standard_model": [[109, "module-graphnet.models.standard_model"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.inference"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.predict"]], "predict_as_dataframe() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.predict_as_dataframe"]], "prediction_labels (graphnet.models.standard_model.standardmodel property)": [[109, "graphnet.models.standard_model.StandardModel.prediction_labels"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.shared_step"]], "target_labels (graphnet.models.standard_model.standardmodel property)": [[109, "graphnet.models.standard_model.StandardModel.target_labels"]], "train() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.training_step"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.validation_step"]], "graphnet.models.task": [[110, "module-graphnet.models.task"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[111, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[111, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[111, "graphnet.models.task.classification.MulticlassClassificationTask"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[111, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[111, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[111, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[111, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels"]], "graphnet.models.task.classification": [[111, "module-graphnet.models.task.classification"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[111, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[111, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.EnergyTCReconstruction"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.PositionReconstruction"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[112, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[112, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[112, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[112, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[112, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[112, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[112, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[112, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[112, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[112, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[112, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[112, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels"]], "graphnet.models.task.reconstruction": [[112, "module-graphnet.models.task.reconstruction"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[112, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[112, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[112, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[112, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[112, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[112, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "identitytask (class in graphnet.models.task.task)": [[113, "graphnet.models.task.task.IdentityTask"]], "learnedtask (class in graphnet.models.task.task)": [[113, "graphnet.models.task.task.LearnedTask"]], "standardflowtask (class in graphnet.models.task.task)": [[113, "graphnet.models.task.task.StandardFlowTask"]], "standardlearnedtask (class in graphnet.models.task.task)": [[113, "graphnet.models.task.task.StandardLearnedTask"]], "task (class in graphnet.models.task.task)": [[113, "graphnet.models.task.task.Task"]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[113, "graphnet.models.task.task.LearnedTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardflowtask method)": [[113, "graphnet.models.task.task.StandardFlowTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[113, "graphnet.models.task.task.StandardLearnedTask.compute_loss"]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[113, "graphnet.models.task.task.IdentityTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.task.task property)": [[113, "graphnet.models.task.task.Task.default_prediction_labels"]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[113, "graphnet.models.task.task.IdentityTask.default_target_labels"]], "default_target_labels (graphnet.models.task.task.task property)": [[113, "graphnet.models.task.task.Task.default_target_labels"]], "forward() (graphnet.models.task.task.learnedtask method)": [[113, "graphnet.models.task.task.LearnedTask.forward"]], "forward() (graphnet.models.task.task.standardflowtask method)": [[113, "graphnet.models.task.task.StandardFlowTask.forward"]], "graphnet.models.task.task": [[113, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[113, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[113, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[113, "graphnet.models.task.task.LearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[113, "graphnet.models.task.task.StandardLearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[113, "graphnet.models.task.task.Task.nb_inputs"]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[113, "graphnet.models.task.task.StandardFlowTask.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[113, "graphnet.models.task.task.Task.train_eval"]], "array_to_sequence() (in module graphnet.models.utils)": [[114, "graphnet.models.utils.array_to_sequence"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[114, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[114, "graphnet.models.utils.calculate_xyzt_homophily"]], "graphnet.models.utils": [[114, "module-graphnet.models.utils"]], "knn_graph_batch() (in module graphnet.models.utils)": [[114, "graphnet.models.utils.knn_graph_batch"]], "graphnet.training": [[115, "module-graphnet.training"]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[116, "graphnet.training.callbacks.GraphnetEarlyStopping"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[116, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[116, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[116, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[116, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[116, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[116, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[116, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[116, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[116, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[116, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end"]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[116, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[116, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[116, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[116, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end"]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[116, "graphnet.training.callbacks.GraphnetEarlyStopping.setup"]], "direction (class in graphnet.training.labels)": [[117, "graphnet.training.labels.Direction"]], "label (class in graphnet.training.labels)": [[117, "graphnet.training.labels.Label"]], "graphnet.training.labels": [[117, "module-graphnet.training.labels"]], "key (graphnet.training.labels.label property)": [[117, "graphnet.training.labels.Label.key"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[118, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[118, "graphnet.training.loss_functions.CrossEntropyLoss"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[118, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.training.loss_functions)": [[118, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[118, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[118, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[118, "graphnet.training.loss_functions.MSELoss"]], "rmseloss (class in graphnet.training.loss_functions)": [[118, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[118, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[118, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[118, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[118, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[118, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[118, "graphnet.training.loss_functions.LossFunction.forward"]], "graphnet.training.loss_functions": [[118, "module-graphnet.training.loss_functions"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[118, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[118, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[118, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "collate_fn() (in module graphnet.training.utils)": [[119, "graphnet.training.utils.collate_fn"]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[119, "graphnet.training.utils.collator_sequence_buckleting"]], "get_predictions() (in module graphnet.training.utils)": [[119, "graphnet.training.utils.get_predictions"]], "graphnet.training.utils": [[119, "module-graphnet.training.utils"]], "make_dataloader() (in module graphnet.training.utils)": [[119, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[119, "graphnet.training.utils.make_train_validation_dataloader"]], "save_results() (in module graphnet.training.utils)": [[119, "graphnet.training.utils.save_results"]], "save_selection() (in module graphnet.training.utils)": [[119, "graphnet.training.utils.save_selection"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[120, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[120, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[120, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[120, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[120, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[121, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[122, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[122, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[122, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[122, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[122, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[122, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[122, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[123, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[124, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[124, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[124, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[124, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[124, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[124, "graphnet.utilities.config.base_config.BaseConfig.load"]], "model_computed_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[124, "graphnet.utilities.config.base_config.BaseConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[124, "graphnet.utilities.config.base_config.BaseConfig.model_config"]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[124, "graphnet.utilities.config.base_config.BaseConfig.model_fields"]], "configurable (class in graphnet.utilities.config.configurable)": [[125, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[125, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[125, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[125, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[125, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta"]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta"]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition"]], "graphnet.utilities.config.dataset_config": [[126, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.labels"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "model_computed_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config"]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[126, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[126, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[127, "graphnet.utilities.config.model_config.ModelConfig"]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[127, "graphnet.utilities.config.model_config.ModelConfigSaverABC"]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[127, "graphnet.utilities.config.model_config.ModelConfigSaverMeta"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[127, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[127, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[127, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[127, "module-graphnet.utilities.config.model_config"]], "model_computed_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[127, "graphnet.utilities.config.model_config.ModelConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[127, "graphnet.utilities.config.model_config.ModelConfig.model_config"]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[127, "graphnet.utilities.config.model_config.ModelConfig.model_fields"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[127, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[128, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[128, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[128, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[128, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[128, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[128, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[128, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[129, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[129, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[129, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[129, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[129, "module-graphnet.utilities.config.training_config"]], "model_computed_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[129, "graphnet.utilities.config.training_config.TrainingConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[129, "graphnet.utilities.config.training_config.TrainingConfig.model_config"]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[129, "graphnet.utilities.config.training_config.TrainingConfig.model_fields"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[129, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[130, "module-graphnet.utilities.decorators"]], "graphnet.utilities.deprecation_tools": [[131, "module-graphnet.utilities.deprecation_tools"]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[131, "graphnet.utilities.deprecation_tools.rename_state_dict_entries"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[132, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[132, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[132, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[132, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[132, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[133, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[133, "graphnet.utilities.imports.has_icecube_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[133, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[133, "graphnet.utilities.imports.requires_icecube"]], "logger (class in graphnet.utilities.logging)": [[134, "graphnet.utilities.logging.Logger"]], "repeatfilter (class in graphnet.utilities.logging)": [[134, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.logger method)": [[134, "graphnet.utilities.logging.Logger.critical"]], "debug() (graphnet.utilities.logging.logger method)": [[134, "graphnet.utilities.logging.Logger.debug"]], "error() (graphnet.utilities.logging.logger method)": [[134, "graphnet.utilities.logging.Logger.error"]], "file_handlers (graphnet.utilities.logging.logger property)": [[134, "graphnet.utilities.logging.Logger.file_handlers"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[134, "graphnet.utilities.logging.RepeatFilter.filter"]], "graphnet.utilities.logging": [[134, "module-graphnet.utilities.logging"]], "handlers (graphnet.utilities.logging.logger property)": [[134, "graphnet.utilities.logging.Logger.handlers"]], "info() (graphnet.utilities.logging.logger method)": [[134, "graphnet.utilities.logging.Logger.info"]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[134, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed"]], "setlevel() (graphnet.utilities.logging.logger method)": [[134, "graphnet.utilities.logging.Logger.setLevel"]], "stream_handlers (graphnet.utilities.logging.logger property)": [[134, "graphnet.utilities.logging.Logger.stream_handlers"]], "warning() (graphnet.utilities.logging.logger method)": [[134, "graphnet.utilities.logging.Logger.warning"]], "warning_once() (graphnet.utilities.logging.logger method)": [[134, "graphnet.utilities.logging.Logger.warning_once"]], "eps_like() (in module graphnet.utilities.maths)": [[135, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[135, "module-graphnet.utilities.maths"]]}})