Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.i3extractor", "api/graphnet.data.extractors.i3featureextractor", "api/graphnet.data.extractors.i3genericextractor", "api/graphnet.data.extractors.i3hybridrecoextractor", "api/graphnet.data.extractors.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.i3particleextractor", "api/graphnet.data.extractors.i3pisaextractor", "api/graphnet.data.extractors.i3quesoextractor", "api/graphnet.data.extractors.i3retroextractor", "api/graphnet.data.extractors.i3splinempeextractor", "api/graphnet.data.extractors.i3truthextractor", "api/graphnet.data.extractors.i3tumextractor", "api/graphnet.data.extractors.utilities", "api/graphnet.data.extractors.utilities.collections", "api/graphnet.data.extractors.utilities.frames", "api/graphnet.data.extractors.utilities.types", "api/graphnet.data.filters", "api/graphnet.data.parquet", "api/graphnet.data.parquet.parquet_dataconverter", "api/graphnet.data.pipeline", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.sqlite_dataconverter", "api/graphnet.data.sqlite.sqlite_utilities", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.deployment", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deployer", "api/graphnet.deployment.i3modules.graphnet_module", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.pisa", "api/graphnet.pisa.fitting", "api/graphnet.pisa.plotting", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.i3extractor.rst", "api/graphnet.data.extractors.i3featureextractor.rst", "api/graphnet.data.extractors.i3genericextractor.rst", "api/graphnet.data.extractors.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.i3particleextractor.rst", "api/graphnet.data.extractors.i3pisaextractor.rst", "api/graphnet.data.extractors.i3quesoextractor.rst", "api/graphnet.data.extractors.i3retroextractor.rst", "api/graphnet.data.extractors.i3splinempeextractor.rst", "api/graphnet.data.extractors.i3truthextractor.rst", "api/graphnet.data.extractors.i3tumextractor.rst", "api/graphnet.data.extractors.utilities.rst", "api/graphnet.data.extractors.utilities.collections.rst", "api/graphnet.data.extractors.utilities.frames.rst", "api/graphnet.data.extractors.utilities.types.rst", "api/graphnet.data.filters.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.parquet_dataconverter.rst", "api/graphnet.data.pipeline.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.sqlite_dataconverter.rst", "api/graphnet.data.sqlite.sqlite_utilities.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deployer.rst", "api/graphnet.deployment.i3modules.graphnet_module.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.pisa.rst", "api/graphnet.pisa.fitting.rst", "api/graphnet.pisa.plotting.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "dataconverter", "dataloader", "dataset", "dataset", "parquet", "parquet_dataset", "sqlite", "sqlite_dataset", "extractors", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "types", "filters", "parquet", "parquet_dataconverter", "pipeline", "sqlite", "sqlite_dataconverter", "sqlite_utilities", "utilities", "parquet_to_sqlite", "random", "string_selection_resolver", "deployment", "i3modules", "deployer", "graphnet_module", "models", "coarsening", "components", "layers", "pool", "detector", "detector", "icecube", "prometheus", "gnn", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "graphs", "edges", "edges", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "standard_model", "task", "classification", "reconstruction", "task", "utils", "pisa", "fitting", "plotting", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "filesys", "imports", "logging", "maths", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101], "i": [0, 1, 8, 10, 12, 14, 16, 27, 28, 29, 30, 35, 36, 39, 40, 44, 46, 49, 55, 56, 62, 63, 66, 67, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 85, 90, 91, 94, 95, 96, 99, 100, 101], "an": [0, 5, 29, 32, 33, 35, 40, 44, 63, 81, 94, 96, 99, 100, 101], "open": [0, 99, 100], "sourc": [0, 4, 5, 6, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 44, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100], "python": [0, 1, 5, 13, 14, 16, 27, 29, 99, 100, 101], "framework": [0, 100], "aim": [0, 1, 99, 100], "provid": [0, 1, 8, 10, 12, 44, 45, 63, 81, 99, 100, 101], "high": [0, 100], "qualiti": [0, 100], "user": [0, 45, 79, 100, 101], "friendli": [0, 100], "end": [0, 1, 5, 32, 35, 100], "function": [0, 5, 6, 8, 29, 36, 39, 44, 46, 49, 52, 53, 63, 67, 68, 71, 72, 73, 74, 76, 77, 81, 82, 84, 89, 90, 91, 94, 95, 97, 100], "perform": [0, 46, 48, 49, 54, 56, 58, 69, 71, 72, 73, 82, 100], "reconstruct": [0, 1, 15, 17, 18, 22, 23, 25, 33, 41, 45, 58, 70, 73, 100], "task": [0, 1, 45, 69, 71, 72, 81, 99, 100], "neutrino": [0, 1, 48, 58, 67, 76, 100], "telescop": [0, 1, 100], "us": [0, 1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 14, 19, 24, 26, 27, 32, 33, 35, 36, 37, 38, 40, 41, 44, 45, 48, 49, 51, 56, 57, 58, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101], "graph": [0, 1, 6, 8, 10, 12, 44, 45, 48, 49, 51, 61, 62, 63, 65, 66, 67, 74, 80, 82, 99, 100], "neural": [0, 1, 100], "network": [0, 1, 55, 100], "gnn": [0, 1, 33, 45, 55, 56, 57, 58, 63, 69, 100, 101], "make": [0, 5, 83, 89, 90, 99, 100, 101], "fast": [0, 100, 101], "easi": [0, 100], "train": [0, 1, 7, 40, 41, 44, 63, 69, 79, 80, 81, 82, 83, 85, 89, 90, 92, 98, 100, 101], "complex": [0, 45, 100], "model": [0, 1, 41, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 85, 87, 89, 90, 92, 98, 100, 101], "can": [0, 1, 8, 10, 12, 14, 16, 19, 38, 44, 49, 63, 76, 77, 83, 85, 87, 89, 90, 99, 100, 101], "event": [0, 1, 8, 10, 12, 21, 36, 38, 40, 44, 49, 63, 67, 71, 72, 73, 74, 76, 81, 83, 89, 100], "state": [0, 100], "art": [0, 100], "arbitrari": [0, 100], "detector": [0, 1, 24, 45, 52, 53, 63, 64, 66, 69, 100], "configur": [0, 1, 8, 45, 68, 69, 76, 84, 86, 87, 89, 90, 92, 96, 100], "infer": [0, 1, 33, 41, 44, 69, 71, 72, 73, 100, 101], "time": [0, 4, 36, 46, 49, 66, 67, 72, 96, 100, 101], "ar": [0, 1, 4, 5, 8, 10, 12, 16, 29, 30, 32, 35, 38, 40, 44, 49, 56, 58, 60, 61, 62, 63, 64, 65, 67, 71, 76, 81, 83, 89, 90, 99, 100, 101], "order": [0, 27, 46, 74, 100], "magnitud": [0, 100], "faster": [0, 100], "than": [0, 6, 71, 72, 73, 82, 96, 100], "tradit": [0, 100], "techniqu": [0, 100], "common": [0, 1, 81, 87, 89, 90, 92, 93, 95, 100], "ml": [0, 1, 100], "develop": [0, 1, 99, 100, 101], "physicist": [0, 1, 100], "wish": [0, 99, 100], "tool": [0, 1, 100], "research": [0, 100], "By": [0, 38, 71, 72, 73, 100], "unit": [0, 5, 95, 99, 100], "both": [0, 16, 71, 72, 73, 77, 100], "group": [0, 5, 32, 35, 49, 100], "increas": [0, 79, 100], "longev": [0, 100], "usabl": [0, 100], "individu": [0, 5, 8, 10, 12, 49, 56, 74, 100], "code": [0, 24, 36, 63, 89, 90, 100], "contribut": [0, 100, 101], "from": [0, 1, 6, 8, 10, 12, 13, 14, 16, 18, 19, 21, 27, 28, 29, 30, 33, 35, 38, 44, 49, 58, 62, 63, 66, 67, 68, 71, 72, 73, 74, 77, 79, 80, 81, 87, 88, 89, 90, 92, 96, 99, 100, 101], "build": [0, 1, 45, 51, 62, 66, 67, 68, 87, 89, 90, 100], "gener": [0, 5, 8, 10, 12, 16, 30, 44, 60, 61, 63, 64, 65, 71, 81, 100], "reusabl": [0, 100], "softwar": [0, 81, 100], "packag": [0, 1, 39, 91, 94, 95, 99, 100, 101], "base": [0, 4, 5, 6, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 32, 33, 35, 38, 40, 44, 46, 48, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 68, 69, 71, 72, 73, 76, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 92, 95, 96, 100], "engin": [0, 100], "best": [0, 99, 100], "practic": [0, 99, 100], "lower": [0, 77, 100], "technic": [0, 100], "threshold": [0, 44, 100], "most": [0, 1, 40, 100, 101], "scientif": [0, 1, 100], "problem": [0, 62, 99, 100], "The": [0, 5, 8, 10, 12, 27, 29, 33, 35, 36, 44, 46, 48, 49, 56, 58, 62, 63, 67, 71, 72, 73, 74, 76, 77, 79, 80, 81, 100], "improv": [0, 1, 85, 100], "classif": [0, 1, 45, 70, 73, 81, 100], "yield": [0, 56, 76, 81, 100], "veri": [0, 40, 100], "accur": [0, 100], "e": [0, 1, 5, 6, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 32, 33, 35, 36, 40, 44, 46, 48, 49, 51, 52, 53, 55, 59, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 79, 80, 81, 83, 87, 96, 99, 100, 101], "g": [0, 1, 5, 8, 10, 12, 24, 27, 29, 32, 33, 35, 36, 40, 44, 49, 63, 66, 67, 71, 72, 73, 74, 83, 96, 99, 100, 101], "low": [0, 100], "energi": [0, 4, 33, 71, 72, 73, 83, 100], "observ": [0, 100], "icecub": [0, 1, 15, 28, 29, 45, 48, 50, 58, 95, 100, 101], "here": [0, 63, 99, 100, 101], "implement": [0, 1, 5, 14, 31, 32, 34, 35, 48, 55, 56, 57, 58, 62, 81, 99, 100], "wa": [0, 100], "appli": [0, 8, 10, 12, 14, 49, 55, 56, 57, 58, 59, 69, 91, 100], "oscil": [0, 75, 100], "lead": [0, 100], "signific": [0, 100], "angular": [0, 100], "rang": [0, 71, 72, 73, 100], "relev": [0, 1, 29, 39, 94, 99, 100], "studi": [0, 100], "furthermor": [0, 100], "shown": [0, 100], "could": [0, 99, 100], "muon": [0, 18, 100], "v": [0, 100], "therebi": [0, 1, 89, 90, 100], "effici": [0, 100], "puriti": [0, 100], "sampl": [0, 40, 63, 64, 100], "analysi": [0, 33, 100, 101], "similarli": [0, 29, 100], "ha": [0, 5, 29, 32, 35, 36, 44, 55, 67, 81, 94, 100, 101], "great": [0, 100], "point": [0, 23, 80, 81, 82, 100], "analys": [0, 41, 75, 100], "final": [0, 49, 79, 89, 100], "millisecond": [0, 100], "allow": [0, 41, 45, 49, 79, 87, 92, 100, 101], "whole": [0, 100], "new": [0, 1, 35, 48, 66, 87, 92, 99, 100], "type": [0, 5, 6, 8, 10, 12, 13, 14, 26, 27, 28, 32, 35, 36, 38, 39, 40, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 79, 81, 82, 83, 85, 87, 88, 89, 90, 91, 94, 95, 96, 97, 99, 100], "cosmic": [0, 100], "alert": [0, 100], "which": [0, 8, 10, 12, 14, 15, 24, 28, 33, 40, 44, 46, 49, 56, 63, 64, 67, 68, 71, 76, 81, 82, 85, 100, 101], "were": [0, 100], "previous": [0, 100], "unfeas": [0, 100], "possibl": [0, 27, 99, 100], "identifi": [0, 5, 8, 10, 12, 24, 67, 89, 90, 100], "10": [0, 33, 52, 53, 66, 67, 85, 100], "tev": [0, 100], "monitor": [0, 100], "rate": [0, 79, 100], "direct": [0, 58, 67, 71, 72, 73, 78, 80, 100], "real": [0, 100], "thi": [0, 3, 5, 8, 10, 12, 14, 16, 29, 32, 35, 36, 39, 44, 45, 49, 56, 63, 64, 66, 69, 71, 72, 73, 74, 76, 77, 79, 81, 82, 83, 87, 89, 90, 92, 96, 99, 100, 101], "enabl": [0, 3, 100], "first": [0, 79, 82, 87, 92, 99, 100], "ever": [0, 100], "despit": [0, 100], "larg": [0, 81, 100], "background": [0, 100], "origin": [0, 76, 100], "compris": [0, 100], "number": [0, 5, 8, 10, 12, 32, 33, 35, 40, 48, 49, 55, 56, 57, 58, 59, 62, 64, 66, 67, 71, 72, 73, 79, 82, 85, 100], "modul": [0, 3, 8, 29, 33, 41, 44, 45, 48, 50, 54, 60, 61, 63, 64, 65, 68, 70, 75, 78, 84, 86, 89, 90, 91, 92, 95, 100], "necessari": [0, 27, 99, 100], "workflow": [0, 100], "ingest": [0, 1, 3, 50, 100], "raw": [0, 66, 67, 100], "data": [0, 1, 4, 5, 6, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 69, 71, 72, 73, 74, 80, 82, 85, 87, 89, 92, 95, 98, 100, 101], "domain": [0, 1, 3, 41, 100], "specif": [0, 1, 3, 5, 8, 10, 12, 15, 29, 31, 32, 34, 35, 36, 41, 46, 49, 50, 51, 52, 53, 54, 59, 62, 63, 66, 69, 70, 71, 72, 73, 81, 99, 100, 101], "format": [0, 1, 3, 5, 8, 27, 32, 35, 77, 89, 99, 100, 101], "deploi": [0, 1, 41, 44, 100], "chain": [0, 1, 41, 45, 69, 100, 101], "illustr": [0, 99, 100], "figur": [0, 77, 100], "level": [0, 8, 10, 12, 24, 30, 36, 46, 49, 96, 100, 101], "overview": [0, 100], "typic": [0, 27, 100], "convert": [0, 1, 3, 5, 27, 30, 32, 35, 38, 100, 101], "industri": [0, 3, 100], "standard": [0, 3, 4, 5, 30, 32, 35, 40, 52, 53, 63, 64, 66, 69, 85, 99, 100], "intermedi": [0, 1, 3, 5, 8, 32, 35, 55, 100, 101], "file": [0, 1, 3, 5, 8, 10, 12, 14, 27, 30, 32, 35, 38, 39, 44, 63, 68, 76, 79, 81, 85, 86, 87, 88, 89, 90, 94, 96, 100, 101], "read": [0, 3, 8, 10, 12, 27, 51, 56, 69, 70, 100, 101], "simpl": [0, 45, 100], "physic": [0, 1, 14, 28, 29, 41, 44, 45, 70, 71, 72, 73, 100], "orient": [0, 45, 100], "compon": [0, 1, 45, 48, 49, 68, 69, 100], "manag": [0, 14, 78, 100], "experi": [0, 1, 78, 100], "log": [0, 1, 72, 78, 79, 81, 84, 100, 101], "deploy": [0, 1, 42, 44, 63, 98, 100], "modular": [0, 45, 100], "subclass": [0, 45, 100], "torch": [0, 8, 10, 12, 45, 48, 63, 64, 68, 95, 100, 101], "nn": [0, 45, 48, 62, 64, 100], "mean": [0, 5, 8, 10, 12, 32, 35, 45, 56, 58, 67, 81, 90, 100], "onli": [0, 1, 8, 10, 12, 45, 49, 71, 72, 73, 76, 83, 90, 95, 100, 101], "need": [0, 27, 45, 68, 81, 100, 101], "import": [0, 1, 36, 45, 84, 100], "few": [0, 45, 99, 100], "exist": [0, 8, 10, 12, 33, 35, 36, 45, 80, 89, 100], "purpos": [0, 45, 81, 100], "built": [0, 45, 63, 100], "them": [0, 1, 27, 45, 56, 71, 72, 73, 76, 100, 101], "togeth": [0, 45, 62, 69, 100], "form": [0, 45, 71, 87, 92, 100], "complet": [0, 45, 69, 100], "extend": [0, 1, 100], "suit": [0, 100], "through": [0, 81, 100], "layer": [0, 45, 47, 49, 55, 56, 57, 58, 71, 72, 73, 100], "connect": [0, 62, 63, 66, 81, 100], "etc": [0, 81, 96, 100], "optimis": [0, 1, 100], "differ": [0, 8, 10, 12, 14, 64, 69, 82, 99, 100, 101], "track": [0, 14, 18, 72, 99, 100], "These": [0, 63, 99, 100], "prepar": [0, 81, 100], "satisfi": [0, 100], "o": [0, 71, 72, 73, 100], "load": [0, 6, 8, 39, 68, 87, 89, 100], "requir": [0, 20, 36, 71, 81, 89, 90, 92, 100, 101], "when": [0, 5, 8, 10, 12, 27, 30, 32, 35, 36, 44, 48, 56, 58, 80, 96, 99, 100, 101], "batch": [0, 6, 33, 46, 48, 49, 69, 74, 82, 85, 100], "do": [0, 44, 81, 89, 90, 99, 100, 101], "predict": [0, 19, 23, 25, 33, 44, 55, 69, 71, 72, 73, 81, 82, 100], "either": [0, 8, 10, 12, 81, 100, 101], "contain": [0, 5, 8, 10, 12, 27, 28, 32, 33, 35, 44, 56, 60, 61, 63, 64, 65, 67, 68, 71, 72, 73, 81, 83, 85, 100, 101], "imag": [0, 1, 99, 100, 101], "portabl": [0, 100], "depend": [0, 100, 101], "free": [0, 81, 100], "split": [0, 30, 46, 100], "up": [0, 5, 32, 35, 44, 99, 100, 101], "interfac": [0, 75, 89, 90, 100, 101], "block": [0, 1, 100], "pre": [0, 51, 63, 80, 99, 100], "directli": [0, 14, 100], "while": [0, 16, 79, 100], "continu": [0, 81, 100], "expand": [0, 100], "": [0, 5, 6, 8, 10, 12, 14, 27, 35, 38, 51, 55, 56, 63, 69, 71, 72, 73, 74, 79, 83, 85, 89, 90, 96, 97, 100, 101], "capabl": [0, 100], "project": [0, 99, 100], "receiv": [0, 100], "fund": [0, 100], "european": [0, 100], "union": [0, 6, 8, 10, 12, 16, 27, 29, 44, 46, 48, 49, 56, 63, 64, 69, 71, 72, 73, 89, 92, 94, 100], "horizon": [0, 100], "2020": [0, 100], "innov": [0, 100], "programm": [0, 100], "under": [0, 100], "mari": [0, 100], "sk\u0142odowska": [0, 100], "curi": [0, 100], "grant": [0, 81, 100], "agreement": [0, 99, 100], "No": [0, 100], "890778": [0, 100], "work": [0, 4, 28, 99, 100, 101], "rasmu": [0, 57, 100], "\u00f8rs\u00f8e": [0, 100], "partli": [0, 100], "punch4nfdi": [0, 100], "consortium": [0, 100], "support": [0, 29, 99, 100, 101], "dfg": [0, 100], "nfdi": [0, 100], "39": [0, 100, 101], "1": [0, 5, 8, 27, 32, 35, 40, 46, 49, 56, 58, 62, 64, 67, 71, 72, 73, 74, 79, 81, 82, 83, 89, 100, 101], "germani": [0, 100], "conveni": [1, 99, 101], "collabor": 1, "solv": [1, 99], "It": [1, 27, 36, 44, 67, 99], "leverag": 1, "advanc": [1, 49], "machin": [1, 101], "learn": [1, 44, 79, 101], "without": [1, 62, 66, 76, 81, 101], "have": [1, 5, 16, 32, 35, 36, 40, 49, 63, 67, 71, 72, 73, 99, 101], "expert": 1, "themselv": [1, 89, 90], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 5, 8, 10, 12, 14, 16, 30, 32, 35, 36, 44, 48, 49, 51, 56, 59, 63, 68, 73, 81, 87, 88, 89, 90, 91, 92, 96, 99, 101], "streamlin": 1, "process": [1, 5, 14, 44, 51, 56, 58, 99, 101], "transform": [1, 49, 58, 71, 72, 73, 83], "extens": [1, 94], "basic": 1, "across": [1, 2, 8, 10, 12, 29, 37, 49, 69, 81, 84, 85, 86, 96], "variou": 1, "easili": 1, "architectur": [1, 55, 56, 57, 58, 69], "main": [1, 54, 63, 69, 99, 101], "featur": [1, 3, 4, 5, 8, 10, 12, 15, 33, 44, 48, 49, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 74, 82, 89, 99], "i3": [1, 5, 14, 28, 29, 30, 32, 35, 39, 44, 94, 101], "more": [1, 8, 36, 39, 87, 89, 90, 92, 96], "index": [1, 5, 8, 10, 12, 29, 36, 49, 51, 67, 79], "sqlite": [1, 3, 7, 12, 33, 35, 36, 38, 101], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 5, 8, 51, 59, 63, 73, 88], "awai": 1, "detail": [1, 101], "expos": 1, "physicst": 1, "what": [1, 63, 99], "i3modul": [1, 41, 44], "includ": [1, 69, 76, 81, 87, 99], "docker": 1, "run": [1, 38], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 7, 13, 41, 45, 60, 84], "dataset": [1, 3, 6, 9, 10, 11, 12, 18, 40, 63, 85, 89], "extractor": [1, 3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 35, 44], "parquet": [1, 3, 7, 10, 32, 38, 52, 53, 101], "util": [1, 3, 13, 27, 28, 29, 36, 38, 39, 40, 45, 60, 78, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98], "constant": [1, 3, 98], "dataconvert": [1, 3, 32, 35], "dataload": [1, 3, 33, 63, 69, 82, 92], "filter": [1, 3, 96], "pipelin": [1, 3], "coarsen": [1, 45, 49], "standard_model": [1, 45], "pisa": [1, 20, 33, 76, 77, 95, 98, 101], "fit": [1, 69, 75, 77, 81, 83, 92], "plot": [1, 75], "callback": [1, 69, 78], "label": [1, 8, 18, 21, 55, 63, 69, 73, 77, 78, 82], "loss_funct": [1, 71, 72, 73, 78], "weight_fit": [1, 78], "config": [1, 6, 40, 76, 81, 84, 85, 87, 88, 89, 90, 91, 92], "argpars": [1, 84], "decor": [1, 5, 84, 95], "filesi": [1, 84], "math": [1, 84], "submodul": [1, 3, 7, 9, 11, 13, 26, 31, 34, 37, 42, 45, 47, 50, 54, 60, 61, 65, 70, 75, 78, 84, 86, 91], "global": [2, 4, 56, 58, 68], "i3extractor": [3, 5, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 32, 35], "i3featureextractor": [3, 4, 13, 35, 44], "i3genericextractor": [3, 13, 35], "i3hybridrecoextractor": [3, 13], "i3ntmuonlabelsextractor": [3, 13], "i3particleextractor": [3, 13], "i3pisaextractor": [3, 13], "i3quesoextractor": [3, 13], "i3retroextractor": [3, 13], "i3splinempeextractor": [3, 13], "i3truthextractor": [3, 4, 13], "i3tumextractor": [3, 13], "parquet_dataconvert": [3, 31], "sqlite_dataconvert": [3, 34], "sqlite_util": [3, 34], "parquet_to_sqlit": [3, 37], "random": [3, 8, 10, 12, 37, 40, 89], "string_selection_resolv": [3, 37], "truth": [3, 4, 8, 10, 12, 15, 24, 33, 36, 63, 82, 83, 89], "fileset": [3, 5], "init_global_index": [3, 5], "cache_output_fil": [3, 5], "collate_fn": [3, 6, 78, 82], "do_shuffl": [3, 6], "i3filt": [3, 5, 30, 32, 35], "nullspliti3filt": [3, 30], "i3filtermask": [3, 30], "insqlitepipelin": [3, 33], "class": [4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 38, 40, 44, 46, 48, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 68, 69, 71, 72, 73, 76, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 96, 99], "object": [4, 5, 8, 10, 12, 14, 16, 27, 29, 44, 46, 49, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 68, 69, 71, 72, 73, 76, 81, 82, 85, 96], "namespac": [4, 68, 89, 90], "name": [4, 5, 6, 8, 10, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 32, 33, 35, 36, 38, 44, 51, 63, 64, 66, 71, 72, 73, 76, 80, 83, 85, 87, 89, 90, 91, 92, 96, 99, 101], "icecube86": [4, 50, 52], "dom_x": [4, 44, 52, 66], "dom_i": [4, 44, 52, 66], "dom_z": [4, 44, 52, 66], "dom_tim": 4, "charg": [4, 44, 66, 67, 81], "rde": 4, "pmt_area": 4, "deepcor": [4, 15, 52], "upgrad": [4, 15, 52, 101], "string": [4, 5, 8, 10, 12, 27, 32, 35, 40, 49, 51, 52, 63, 87], "pmt_number": 4, "dom_numb": 4, "pmt_dir_x": 4, "pmt_dir_i": 4, "pmt_dir_z": 4, "dom_typ": 4, "prometheu": [4, 45, 50], "sensor_pos_x": [4, 53], "sensor_pos_i": [4, 53], "sensor_pos_z": [4, 53], "t": [4, 29, 36, 77, 79, 81, 101], "kaggl": [4, 48, 52, 58], "x": [4, 5, 24, 32, 35, 48, 49, 66, 67, 73, 74, 77, 81, 83], "y": [4, 24, 74, 77, 101], "z": [4, 5, 24, 32, 35, 74, 101], "auxiliari": 4, "energy_track": 4, "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": [4, 72, 80], "zenith": [4, 72, 80], "pid": [4, 40, 89], "elast": 4, "sim_typ": 4, "interaction_typ": 4, "interaction_tim": [4, 72], "inelast": [4, 72], "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "i3_fil": [5, 14], "str": [5, 6, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 44, 48, 49, 51, 52, 53, 56, 58, 63, 64, 66, 67, 68, 69, 71, 72, 73, 76, 80, 82, 83, 85, 87, 88, 89, 90, 91, 92, 94, 96], "gcd_file": [5, 14, 44], "paramet": [5, 6, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 44, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97], "output_fil": [5, 32, 35], "global_index": 5, "avail": [5, 16, 33, 95], "pool": [5, 45, 46, 47, 56, 58], "worker": [5, 32, 33, 35, 39, 85, 96], "return": [5, 6, 8, 10, 12, 14, 27, 28, 29, 32, 35, 36, 38, 39, 40, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 94, 95, 96, 97], "none": [5, 6, 8, 10, 12, 14, 16, 24, 28, 29, 30, 32, 33, 35, 36, 38, 40, 44, 48, 49, 56, 58, 63, 64, 66, 68, 69, 71, 72, 73, 76, 79, 81, 82, 83, 85, 87, 88, 89, 91, 94, 96], "synchron": 5, "list": [5, 6, 8, 10, 12, 14, 16, 24, 27, 29, 30, 32, 33, 35, 36, 38, 39, 40, 44, 46, 48, 49, 51, 56, 58, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 77, 79, 82, 83, 89, 91, 92, 94, 96], "process_method": 5, "cach": 5, "output": [5, 32, 35, 38, 55, 56, 57, 59, 66, 67, 69, 76, 83, 89, 90, 101], "typevar": 5, "f": [5, 49], "bound": [5, 77], "callabl": [5, 6, 8, 29, 48, 49, 51, 52, 53, 63, 71, 72, 73, 82, 83, 87, 89, 90, 91, 95], "ani": [5, 6, 8, 10, 12, 27, 28, 29, 30, 32, 35, 44, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 68, 69, 71, 72, 73, 77, 81, 83, 85, 87, 88, 89, 90, 91, 92, 96, 101], "outdir": [5, 32, 33, 35, 38, 76], "gcd_rescu": [5, 32, 35, 94], "nb_files_to_batch": [5, 32, 35], "sequential_batch_pattern": [5, 32, 35], "input_file_batch_pattern": [5, 32, 35], "index_column": [5, 8, 10, 12, 32, 35, 36, 40, 76, 82, 83, 89], "icetray_verbos": [5, 32, 35], "i3_filt": [5, 32, 35], "abc": [5, 8, 14, 33, 68, 80, 83, 88, 89, 90], "logger": [5, 8, 14, 30, 33, 38, 40, 62, 68, 69, 80, 83, 84, 96, 101], "construct": [5, 6, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 32, 35, 38, 40, 46, 47, 48, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 76, 79, 80, 81, 82, 83, 85, 88, 89, 90, 96], "regular": [5, 29, 32, 35], "express": [5, 32, 35, 68, 81], "accord": [5, 32, 35, 46, 49, 62, 63, 64, 67], "match": [5, 32, 35, 83, 94, 97], "certain": [5, 32, 35, 38, 76], "pattern": [5, 32, 35], "wildcard": [5, 32, 35], "same": [5, 29, 32, 35, 36, 46, 49, 67, 71, 74, 79, 91, 96], "input": [5, 8, 10, 12, 32, 33, 35, 44, 52, 55, 56, 57, 58, 59, 63, 64, 66, 71, 73, 74, 87, 92], "replac": [5, 32, 35, 87, 89, 90, 92], "period": [5, 32, 35], "special": [5, 16, 32, 35, 44, 74], "interpret": [5, 32, 35, 71], "liter": [5, 32, 35], "charact": [5, 32, 35], "regex": [5, 32, 35], "For": [5, 29, 32, 35, 79], "instanc": [5, 8, 14, 24, 29, 32, 35, 44, 63, 68, 76, 80, 82, 88, 90, 101], "A": [5, 8, 30, 32, 33, 35, 44, 49, 63, 64, 67, 74, 76, 81, 83, 101], "_": [5, 32, 35], "0": [5, 8, 10, 12, 32, 35, 40, 44, 46, 49, 55, 56, 58, 62, 64, 67, 74, 76, 77, 81, 82, 89], "9": [5, 32, 35], "5": [5, 8, 10, 12, 32, 35, 40, 85, 101], "zst": [5, 32, 35], "find": [5, 32, 35, 94], "whose": [5, 32, 35, 44], "one": [5, 8, 32, 35, 36, 44, 49, 89, 90, 94, 99, 101], "capit": [5, 32, 35], "letter": [5, 32, 35], "follow": [5, 32, 35, 56, 69, 81, 83, 99, 101], "underscor": [5, 32, 35], "five": [5, 32, 35], "upgrade_genie_step4_141020_a_000000": [5, 32, 35], "upgrade_genie_step4_141020_a_000001": [5, 32, 35], "upgrade_genie_step4_141020_a_000008": [5, 32, 35], "upgrade_genie_step4_141020_a_000009": [5, 32, 35], "would": [5, 32, 35, 99], "upgrade_genie_step4_141020_a_00000x": [5, 32, 35], "suffix": [5, 32, 35], "upgrade_genie_step4_141020_a_000010": [5, 32, 35], "separ": [5, 27, 32, 35, 79, 101], "upgrade_genie_step4_141020_a_00001x": [5, 32, 35], "int": [5, 6, 8, 10, 12, 18, 21, 30, 32, 33, 35, 40, 48, 49, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 69, 71, 72, 73, 74, 76, 79, 81, 82, 83, 85, 89, 92, 96], "properti": [5, 8, 14, 19, 29, 49, 51, 59, 66, 69, 73, 80, 88, 96], "file_suffix": [5, 32, 35], "execut": [5, 36], "method": [5, 8, 10, 12, 14, 26, 27, 28, 29, 32, 35, 44, 48, 49, 51, 72, 81, 83], "set": [5, 16, 66, 67, 71, 72, 73, 82, 99], "inherit": [5, 14, 29, 51, 66, 81, 96], "path": [5, 8, 10, 12, 36, 39, 44, 63, 68, 76, 77, 85, 87, 88, 89, 94, 101], "correspond": [5, 8, 10, 12, 27, 29, 35, 39, 56, 63, 67, 83, 94, 101], "gcd": [5, 14, 28, 39, 44, 94], "save_data": [5, 32, 35], "save": [5, 14, 27, 32, 35, 36, 68, 76, 81, 82, 83, 87, 88, 89, 90, 101], "ordereddict": [5, 32, 35], "extract": [5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 35, 38, 39, 44, 71, 72, 73], "merge_fil": [5, 32, 35], "input_fil": [5, 32, 35], "merg": [5, 32, 35, 81, 101], "result": [5, 32, 35, 49, 67, 79, 81, 82, 91, 101], "option": [5, 8, 10, 12, 24, 32, 33, 35, 44, 48, 49, 56, 58, 63, 64, 66, 68, 71, 72, 73, 76, 77, 83, 84, 85, 87, 89, 94, 101], "default": [5, 8, 10, 12, 16, 24, 27, 32, 33, 35, 36, 38, 44, 48, 49, 55, 56, 57, 58, 62, 63, 64, 66, 68, 71, 72, 73, 76, 77, 79, 80, 81, 83, 85, 87, 89, 94], "current": [5, 32, 35, 40, 79, 99, 101], "rais": [5, 8, 16, 32, 68, 87, 92], "notimplementederror": [5, 32], "If": [5, 8, 16, 30, 32, 33, 35, 63, 66, 67, 68, 71, 72, 73, 76, 79, 83, 99, 101], "been": [5, 32, 44, 81, 99], "backend": [5, 9, 11, 32, 35], "question": 5, "get_map_funct": 5, "nb_file": 5, "map": [5, 8, 10, 12, 15, 16, 35, 36, 44, 52, 53, 63, 64, 87, 89, 90, 92], "pure": [5, 13, 14, 16, 29], "multiprocess": [5, 101], "tupl": [5, 8, 10, 12, 28, 29, 48, 56, 58, 67, 71, 72, 73, 74, 76, 77, 82, 85], "remov": [6, 63, 82, 85], "less": [6, 82], "two": [6, 56, 76, 79, 81, 82], "dom": [6, 8, 10, 12, 46, 49, 66, 67, 82], "hit": [6, 82], "should": [6, 8, 10, 12, 14, 27, 40, 48, 49, 63, 64, 81, 82, 87, 89, 90, 92, 99, 101], "occur": [6, 82], "product": [6, 82], "selection_nam": 6, "check": [6, 28, 29, 30, 35, 36, 85, 94, 95, 99, 101], "whether": [6, 28, 29, 35, 36, 56, 58, 68, 81, 91, 94, 95], "shuffl": [6, 39, 82], "select": [6, 8, 10, 12, 21, 40, 82, 83, 89, 99], "bool": [6, 28, 29, 30, 35, 36, 40, 44, 56, 58, 63, 66, 67, 68, 69, 76, 79, 81, 82, 83, 85, 91, 94, 95, 96], "batch_siz": [6, 33, 74, 82], "num_work": [6, 82], "persistent_work": [6, 82], "prefetch_factor": 6, "kwarg": [6, 8, 10, 12, 30, 46, 48, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 68, 69, 71, 72, 73, 81, 83, 87, 89, 90, 96], "t_co": 6, "classmethod": [6, 8, 68, 81, 87, 88], "from_dataset_config": 6, "datasetconfig": [6, 8, 40, 86, 89], "dict": [6, 8, 16, 27, 29, 33, 35, 51, 52, 53, 63, 64, 68, 69, 76, 77, 79, 82, 85, 87, 89, 90, 91, 92], "parquet_dataset": [7, 9], "sqlite_dataset": [7, 11], "columnmissingexcept": [7, 8], "load_modul": [7, 8, 68], "parse_graph_definit": [7, 8], "ensembledataset": [7, 8, 89], "except": 8, "indic": [8, 40, 49, 67, 79, 85, 99], "miss": 8, "column": [8, 10, 12, 36, 44, 51, 62, 63, 64, 66, 67, 69, 71, 72, 73, 74, 76, 83], "class_nam": [8, 30, 90, 96], "cfg": 8, "graphdefinit": [8, 10, 12, 44, 60, 61, 63, 64, 65, 82, 99], "arg": [8, 10, 12, 30, 46, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 68, 69, 71, 72, 73, 81, 85, 87, 92, 96], "pulsemap": [8, 10, 12, 15, 35, 44, 82, 89], "puls": [8, 10, 12, 15, 16, 28, 29, 35, 36, 44, 46, 49, 63, 66, 67, 74], "seri": [8, 10, 12, 15, 16, 28, 29, 36, 44], "node": [8, 10, 12, 45, 46, 49, 55, 56, 58, 60, 61, 62, 63, 64, 71, 72, 73, 74], "multipl": [8, 10, 12, 14, 67, 79, 89, 96], "store": [8, 10, 12, 14, 33, 36, 76, 80], "ad": [8, 10, 12, 15, 56, 63, 66, 67, 76], "attribut": [8, 10, 12, 46, 71, 72, 73], "node_truth": [8, 10, 12, 82, 89], "event_no": [8, 10, 12, 36, 40, 83, 89], "uniqu": [8, 10, 12, 36, 38, 66, 89], "indici": [8, 10, 12, 28, 40, 81], "tabl": [8, 10, 12, 14, 33, 35, 36, 51, 63, 76, 83], "truth_tabl": [8, 10, 12, 76, 82, 83, 89], "inform": [8, 10, 12, 14, 16, 24, 63, 66, 67, 77], "node_truth_t": [8, 10, 12, 82, 89], "string_select": [8, 10, 12, 82, 89], "subset": [8, 10, 12, 48, 56, 58], "given": [8, 10, 12, 35, 49, 62, 71, 72, 73, 83, 85], "queri": [8, 10, 12, 36, 40], "pass": [8, 10, 12, 48, 55, 56, 57, 58, 59, 63, 69, 71, 72, 73, 81, 83, 99], "dtype": [8, 10, 12, 63, 64, 97], "float32": [8, 10, 12, 63, 64], "tensor": [8, 10, 12, 46, 48, 49, 51, 55, 56, 57, 58, 59, 66, 69, 71, 72, 73, 74, 81, 97], "loss_weight_t": [8, 10, 12, 82, 89], "per": [8, 10, 12, 16, 36, 49, 71, 72, 73, 81, 83], "loss": [8, 10, 12, 63, 69, 71, 72, 73, 79, 81, 85], "weight": [8, 10, 12, 44, 63, 71, 72, 73, 76, 81, 83, 90, 101], "loss_weight_column": [8, 10, 12, 63, 82, 89], "also": [8, 10, 12, 40, 89], "assign": [8, 10, 12, 38, 46, 49, 99], "loss_weight_default_valu": [8, 10, 12, 63, 89], "float": [8, 10, 12, 44, 55, 62, 63, 64, 69, 76, 77, 79, 81, 82, 89], "note": [8, 10, 12, 67, 77, 90], "valu": [8, 10, 12, 24, 27, 35, 36, 49, 63, 64, 77, 80, 81, 85, 87], "specifi": [8, 10, 12, 40, 46, 67, 71, 72, 73, 77, 79, 101], "case": [8, 10, 12, 16, 44, 49, 67, 71, 72, 73, 101], "That": [8, 10, 12, 56, 72, 80], "ignor": [8, 10, 12, 29], "seed": [8, 10, 12, 40, 63, 64, 82, 89], "resolv": [8, 10, 12, 40], "10000": [8, 10, 12, 40], "20": [8, 10, 12, 40, 96], "graph_definit": [8, 10, 12, 44, 45, 60, 82, 89], "defin": [8, 10, 12, 40, 44, 49, 60, 61, 62, 63, 65, 67, 82, 87, 89, 90, 92], "represent": [8, 10, 12, 29, 49, 64], "from_config": [8, 68, 88, 89, 90], "concaten": [8, 27, 56], "query_t": [8, 10, 12], "sequential_index": [8, 10, 12], "some": [8, 10, 12, 63, 67], "out": [8, 56, 69, 70, 81, 96, 99, 101], "sequenti": 8, "len": [8, 67], "self": [8, 63, 76, 87, 92], "_may_": 8, "_indic": 8, "entir": [8, 68], "impos": 8, "befor": [8, 56, 71, 72, 73, 79], "scalar": [8, 74, 81], "length": [8, 29, 67, 79], "element": [8, 27, 29, 69, 74, 82, 91], "present": [8, 30, 85, 94, 95], "add_label": 8, "fn": [8, 29, 87, 91], "kei": [8, 16, 27, 28, 29, 35, 36, 49, 80, 89, 90], "add": [8, 56, 85, 99, 101], "custom": [8, 63, 79], "concatdataset": 8, "singl": [8, 14, 49, 56, 67, 80, 89, 90], "collect": [8, 13, 14, 26, 81, 97], "iter": 8, "parquetdataset": [9, 10], "pytorch": [10, 12, 79, 101], "sqlitedataset": [11, 12], "databas": [12, 33, 35, 36, 38, 76, 83, 101], "i3fram": [13, 14, 16, 28, 29, 44], "frame": [13, 14, 16, 26, 29, 30, 35, 44], "i3extractorcollect": [13, 14], "i3featureextractoricecube86": [13, 15], "i3featureextractoricecubedeepcor": [13, 15], "i3featureextractoricecubeupgrad": [13, 15], "i3pulsenoisetruthflagicecubeupgrad": [13, 15], "i3galacticplanehybridrecoextractor": [13, 17], "i3ntmuonlabelextractor": [13, 18], "i3splinempeicextractor": [13, 23], "__call__": 14, "icetrai": [14, 28, 29, 44, 95], "keep": 14, "proven": 14, "set_fil": 14, "refer": [14, 53, 89], "being": [14, 44, 71, 72, 73], "get": [14, 28, 51, 79, 82, 101], "treat": 14, "86": [15, 52], "nois": [15, 28, 44], "flag": [15, 44], "exclude_kei": 16, "dynam": [16, 48, 56, 57, 58], "pars": [16, 77, 84, 85, 86, 87, 92], "call": [16, 29, 35, 49, 76, 83, 96], "tri": [16, 29], "automat": [16, 63, 81, 99], "cast": [16, 29], "done": [16, 49, 96, 99], "recurs": [16, 29, 91, 94], "each": [16, 27, 29, 36, 38, 39, 46, 49, 52, 53, 56, 58, 62, 63, 64, 66, 67, 71, 72, 73, 74, 76, 77, 79, 82, 94], "look": [16, 101], "member": [16, 29, 66, 89, 90, 96], "variabl": [16, 29, 56, 66, 67, 74, 83, 96], "signatur": [16, 29], "similar": [16, 29, 101], "handl": [16, 81, 85, 96], "hand": 16, "mc": [16, 35, 36], "tree": [16, 35], "trigger": 16, "exclud": [16, 38, 101], "valueerror": [16, 68], "hybrid": 17, "galatict": 17, "plane": [17, 81], "tum": [18, 25], "dnn": [18, 25], "padding_valu": [18, 21], "northeren": 18, "i3particl": 19, "other": [19, 36, 62, 81, 99], "algorithm": 19, "comparison": [19, 81], "quantiti": [20, 71, 72, 73, 74], "queso": 21, "retro": [22, 33], "splinemp": 23, "border": 24, "mctree": [24, 28], "ndarrai": [24, 63, 67, 83], "arrai": [24, 27, 66, 67], "boundari": 24, "volum": 24, "coordin": [24, 51, 66, 74], "particl": [24, 36, 80], "start": [24, 99, 101], "stop": [24, 85], "within": [24, 46, 48, 49, 56, 62], "hard": 24, "i3mctre": 24, "flatten_nested_dictionari": [26, 27], "serialis": [26, 27], "transpose_list_of_dict": [26, 27], "frame_is_montecarlo": [26, 28], "frame_is_nois": [26, 28], "get_om_keys_and_pulseseri": [26, 28], "is_boost_enum": [26, 29], "is_boost_class": [26, 29], "is_icecube_class": [26, 29], "is_typ": [26, 29], "is_method": [26, 29], "break_cyclic_recurs": [26, 29], "get_member_vari": [26, 29], "cast_object_to_pure_python": [26, 29], "cast_pulse_series_to_pure_python": [26, 29], "manipul": [27, 60, 61, 65], "obj": [27, 29, 91], "parent_kei": 27, "flatten": 27, "nest": 27, "dictionari": [27, 28, 29, 33, 35, 63, 64, 76, 77, 87, 89, 90, 92], "non": [27, 29, 35, 36, 81], "exampl": [27, 40, 46, 49, 67, 81, 89, 90, 101], "d": [27, 63, 66, 99], "b": [27, 46, 49], "c": [27, 49, 81, 101], "2": [27, 49, 56, 58, 62, 64, 67, 72, 74, 76, 77, 81, 89, 101], "a__b": 27, "applic": 27, "combin": [27, 89], "parent": 27, "__": [27, 29], "nester": 27, "json": [27, 89], "therefor": 27, "we": [27, 29, 40, 67, 99, 101], "outer": 27, "abl": [27, 101], "de": 27, "transpos": 27, "mont": 28, "carlo": 28, "simul": [28, 44], "pulseseri": 28, "calibr": [28, 29], "gcd_dict": [28, 29], "p": [28, 35, 81], "om": [28, 29], "dataclass": 28, "i3calibr": 28, "indicesfor": 28, "boost": 29, "enum": 29, "ensur": [29, 39, 81, 96, 99, 101], "isn": 29, "return_discard": 29, "valid": [29, 40, 69, 71, 72, 73, 81, 85, 87, 92], "mangl": 29, "take": [29, 35, 49, 99], "mainli": 29, "cannot": [29, 87, 92], "trivial": [29, 73], "doe": [29, 90], "try": 29, "equival": 29, "its": 29, "like": [29, 49, 74, 81, 97, 99], "otherwis": [29, 81], "itself": [29, 71, 72, 73], "deem": 29, "wai": [29, 40, 99, 101], "optic": 29, "found": [29, 67, 81], "log_fold": [30, 96], "skip": [30, 56], "null": [30, 36], "filter_nam": 30, "filter_ani": 30, "filtermask": 30, "initi": 30, "true": [30, 35, 36, 44, 58, 63, 66, 76, 79, 81, 83, 89, 90, 92], "kept": 30, "fals": [30, 44, 56, 63, 68, 76, 79, 81, 83, 89], "parquetdataconvert": [31, 32], "module_dict": 33, "devic": 33, "retro_table_nam": 33, "n_worker": [33, 76], "pipeline_nam": 33, "creat": [33, 35, 36, 63, 66, 87, 88, 92, 99, 101], "initialis": [33, 90], "gnn_module_for_energy_regress": 33, "modulelist": 33, "comput": [33, 69, 71, 72, 73, 74, 81], "directori": [33, 38, 76, 94], "100": [33, 101], "size": [33, 48, 49, 56, 57, 58, 85], "alreadi": [33, 36, 101], "error": [33, 81, 96, 99], "prompt": 33, "avoid": [33, 96, 99], "overwrit": [33, 79], "sqlitedataconvert": [34, 35, 101], "construct_datafram": [34, 35], "is_pulse_map": [34, 35], "is_mc_tre": [34, 35], "database_exist": [34, 36], "database_table_exist": [34, 36], "run_sql_cod": [34, 36], "save_to_sql": [34, 36], "attach_index": [34, 36], "create_t": [34, 36], "create_table_and_save_to_sql": [34, 36], "db": [35, 82], "max_table_s": 35, "maximum": [35, 49, 67, 71, 72, 73, 85], "row": [35, 36, 67], "exce": 35, "limit": [35, 81], "any_pulsemap_is_non_empti": 35, "data_dict": 35, "empti": [35, 44], "retriev": [35, 51], "splitinicepuls": 35, "least": [35, 99, 101], "becaus": [35, 39], "instead": [35, 81, 87, 92], "alwai": [35, 82], "panda": [35, 40, 83], "datafram": [35, 36, 40, 51, 69, 76, 82, 83], "table_nam": [35, 36], "database_path": [36, 76, 83], "df": 36, "must": [36, 46, 79, 83, 99], "attach": 36, "default_typ": 36, "integer_primary_kei": 36, "NOT": [36, 81], "integ": [36, 56, 57, 81], "primari": 36, "Such": 36, "appropri": [36, 71, 72, 73], "expect": [36, 40, 44, 63, 66], "doesn": 36, "parquettosqliteconvert": [37, 38], "pairwise_shuffl": [37, 39], "stringselectionresolv": [37, 40], "parquet_path": 38, "mc_truth_tabl": 38, "excluded_field": 38, "id": [38, 51, 63], "everi": [38, 101], "field": [38, 77, 80, 87, 89, 90, 92], "One": [38, 77], "choos": 38, "argument": [38, 83, 85, 87, 89, 90, 92], "exclude_field": 38, "database_nam": 38, "convers": [38, 101], "rng": 39, "relat": [39, 94], "i3_list": [39, 94], "gcd_list": [39, 94], "correpond": 39, "handi": 39, "even": 39, "files_list": 39, "gcd_shuffl": 39, "i3_shuffl": 39, "use_cach": 40, "flexibl": 40, "below": [40, 77, 83, 99, 101], "show": [40, 79], "involv": 40, "cover": 40, "yml": [40, 85, 89, 90], "test": [40, 71, 72, 73, 82, 89, 95, 99], "50000": [40, 89], "ab": [40, 81, 89], "12": [40, 89], "14": [40, 89], "16": [40, 89], "13": [40, 101], "compat": 40, "syntax": [40, 81], "mai": [40, 66, 101], "fix": 40, "randomli": [40, 63, 64, 90], "graphnet_modul": [41, 42], "graphneti3modul": [42, 44], "i3inferencemodul": [42, 44], "i3pulsecleanermodul": [42, 44], "pulsemap_extractor": 44, "produc": [44, 80, 83], "write": [44, 101], "constructor": 44, "knngraph": [44, 60, 64], "associ": [44, 63, 67, 72, 81], "model_config": [44, 84, 86, 87, 89, 92], "state_dict": [44, 68], "model_nam": [44, 76], "prediction_column": [44, 69, 82], "pulsmap": 44, "modelconfig": [44, 68, 86, 89, 90], "summar": [44, 66, 67], "Will": [44, 62], "help": [44, 85, 99], "entri": [44, 56, 77, 85], "dynedg": [44, 45, 54, 57, 58], "energy_reco": 44, "discard_empty_ev": 44, "clean": [44, 99, 101], "assum": [44, 51, 63, 67, 73, 74], "7": [44, 49, 76], "consid": [44, 101], "posit": [44, 49, 67, 72], "signal": 44, "els": 44, "elimin": 44, "speed": 44, "especi": 44, "sinc": [44, 81], "further": 44, "calcul": [44, 62, 64, 69, 74, 80, 81], "convnet": [45, 54], "dynedge_jinst": [45, 54], "dynedge_kaggle_tito": [45, 54], "edg": [45, 48, 49, 56, 57, 58, 60, 63, 64, 65, 66, 74], "unbatch_edge_index": [45, 46], "attributecoarsen": [45, 46], "domcoarsen": [45, 46], "customdomcoarsen": [45, 46], "domandtimewindowcoarsen": [45, 46], "standardmodel": [45, 69], "calculate_xyzt_homophili": [45, 74], "calculate_distance_matrix": [45, 74], "knn_graph_batch": [45, 74], "oper": [46, 48, 54, 56], "cluster": [46, 48, 49, 56, 58, 66, 67], "local": [46, 52, 53, 85], "edge_index": [46, 48, 74], "vector": [46, 49, 81], "longtensor": [46, 49, 74], "mathbf": [46, 49], "ldot": [46, 49], "n": [46, 49, 81], "reduce_opt": 46, "avg": 46, "avg_pool": 46, "avg_pool_x": 46, "max": [46, 48, 56, 58, 81, 85], "max_pool": [46, 49], "max_pool_x": [46, 49], "min": [46, 49, 56, 58], "min_pool": [46, 47, 49], "min_pool_x": [46, 47, 49], "sum": [46, 49, 56, 58, 69], "sum_pool": [46, 47, 49], "sum_pool_x": [46, 47, 49], "forward": [46, 48, 51, 55, 56, 57, 58, 59, 62, 63, 66, 69, 73, 81], "simplecoarsen": 46, "addit": [46, 48, 69, 81, 83], "window": 46, "time_window": 46, "dynedgeconv": [47, 48, 56], "edgeconvtito": [47, 48], "dyntran": [47, 48, 58], "sum_pool_and_distribut": [47, 49], "group_bi": [47, 49], "group_pulses_to_dom": [47, 49], "group_pulses_to_pmt": [47, 49], "std_pool_x": [47, 49], "std_pool": [47, 49], "aggr": 48, "nb_neighbor": 48, "features_subset": [48, 56, 58], "edgeconv": 48, "lightningmodul": [48, 68, 79, 96], "convolut": [48, 55, 56, 57, 58], "mlp": [48, 56], "aggreg": [48, 49], "8": [48, 49, 56, 64, 81, 82, 99, 101], "neighbour": [48, 56, 58, 62, 64, 74], "after": [48, 56, 58, 79, 85, 89], "sequenc": [48, 67, 82], "slice": [48, 56], "sparsetensor": 48, "messagepass": 48, "tito": [48, 58], "solut": [48, 58, 99], "deep": [48, 58], "competit": [48, 52, 58], "reset_paramet": 48, "reset": 48, "learnabl": [48, 54, 55, 56, 57, 58, 59], "messag": [48, 79, 96], "x_i": 48, "x_j": 48, "layer_s": 48, "n_head": 48, "dyntrans1": 48, "head": 48, "multiheadattent": 48, "just": [49, 101], "negat": 49, "cluster_index": 49, "distribut": [49, 56, 72, 81, 83], "ident": [49, 73], "pmt": [49, 67], "f1": 49, "f2": 49, "6": [49, 77], "groupbi": 49, "3": [49, 55, 58, 67, 72, 74, 76, 77, 81, 99, 101], "matrix": [49, 62, 74, 81], "mathbb": 49, "r": [49, 62, 101], "n_1": 49, "n_b": 49, "obtain": [49, 81], "wise": 49, "dens": 49, "fc": 49, "known": 49, "std": 49, "repres": [49, 63, 64, 66, 67, 87, 89, 90], "averag": [49, 81], "torch_geometr": 49, "version": [49, 67, 71, 72, 73, 79, 99, 101], "standardis": 50, "icecubekaggl": [50, 52], "icecubedeepcor": [50, 52], "icecubeupgrad": [50, 52], "orca150": [50, 53], "ins": 51, "feature_map": [51, 52, 53], "input_featur": [51, 63], "input_feature_nam": [51, 63, 64, 66], "adjac": 51, "geometry_t": [51, 52, 53], "public": [51, 83], "geometri": [51, 63], "string_index_nam": 51, "sensor_position_nam": 51, "xyz": [51, 52, 53, 66, 67], "sensor_index_nam": 51, "sensor": [51, 63], "geometry_table_path": [52, 53], "home": [52, 53, 85, 101], "runner": [52, 53, 85], "lib": [52, 53, 85, 101], "python3": [52, 53, 85], "string_id_column": [52, 53], "sensor_id_column": [52, 53], "sensor_id": [52, 53], "dimens": [52, 53, 55, 56, 58, 67, 81], "icecube_upgrad": 52, "prototyp": 53, "orca_150": 53, "sensor_string_id": 53, "dynedgejinst": [54, 57], "dynedgetito": [54, 58], "author": [55, 57, 81], "martin": 55, "minh": 55, "nb_input": [55, 56, 57, 58, 59, 71, 72, 73], "nb_output": [55, 57, 59, 66, 71, 73], "nb_intermedi": 55, "128": [55, 56, 85], "dropout_ratio": 55, "fraction": [55, 82], "drop": 55, "nb_neighbour": 56, "k": [56, 58, 62, 64, 74, 81], "nearest": [56, 58, 62, 64, 74], "latent": [56, 58, 71], "metric": [56, 58, 79], "dynedge_layer_s": 56, "dimenion": [56, 58], "multi": 56, "perceptron": 56, "256": [56, 58], "336": 56, "post_processing_layer_s": 56, "hidden": [56, 57, 71, 73], "readout_layer_s": 56, "post": [56, 58], "_and_": 56, "As": 56, "last": [56, 71, 73, 79, 82], "global_pooling_schem": [56, 58], "scheme": [56, 58], "add_global_variables_after_pool": 56, "altern": [56, 81, 99], "exact": [57, 81], "2209": 57, "03042": 57, "oerso": 57, "layer_size_scal": 57, "4": [57, 72, 77], "scale": [57, 63, 71, 72, 73, 81], "ic": 58, "univers": 58, "south": 58, "pole": 58, "dyntrans_layer_s": 58, "use_global_featur": 58, "use_post_processing_lay": 58, "core": 59, "edgedefinit": [60, 61, 62, 63, 65], "how": [60, 61, 65], "drawn": [60, 61, 64, 65], "between": [60, 61, 62, 65, 69, 74, 79, 81, 89, 90], "lex_sort": [60, 67], "gather_cluster_sequ": [60, 67], "identify_indic": [60, 67], "cluster_summarize_with_percentil": [60, 67], "knnedg": [61, 62], "radialedg": [61, 62], "euclideanedg": [61, 62], "_construct_edg": 62, "definit": [62, 63, 64, 66, 68, 99], "nb_nearest_neighbour": [62, 64], "space": [62, 83], "distanc": [62, 64, 74], "sphere": 62, "chosen": [62, 67, 96], "radiu": 62, "centr": 62, "radial": 62, "center": 62, "euclidean": [62, 99], "see": [62, 63, 79, 99, 101], "http": [62, 63, 81, 99], "arxiv": [62, 81], "org": [62, 81, 101], "pdf": 62, "1809": 62, "06166": 62, "hold": 63, "alter": 63, "dure": [63, 71, 72, 73, 79], "node_definit": [63, 64], "edge_definit": 63, "nodedefinit": [63, 64, 65, 66], "nodesaspuls": [63, 64, 65, 66], "perturbation_dict": [63, 64], "deviat": [63, 64], "perturb": [63, 64], "add_inactive_sensor": 63, "inact": 63, "append": 63, "pad": [63, 67], "sensor_mask": 63, "mask": 63, "string_mask": 63, "sort_bi": 63, "sort": [63, 67], "truth_dict": 63, "custom_label_funct": 63, "loss_weight": [63, 71, 72, 73], "data_path": 63, "shape": [63, 66, 74, 81], "num_row": 63, "github": [63, 81, 101], "com": [63, 81, 101], "team": [63, 99], "blob": [63, 81], "getting_start": 63, "md": 63, "where": [63, 64, 66, 67, 80], "your": [64, 99, 101], "percentileclust": [65, 66], "num_puls": 66, "node_feature_nam": 66, "new_features_nam": 66, "overridden": 66, "set_number_of_input": 66, "set_output_feature_nam": 66, "measur": [66, 67, 74], "cherenkov": [66, 67], "radiat": [66, 67], "percentil": [66, 67], "summari": [66, 67], "cluster_on": [66, 67], "50": [66, 67, 85], "90": [66, 67, 77], "add_count": [66, 67], "duplic": 66, "cluster_column": 67, "numpi": 67, "along": 67, "backward": [67, 81], "feature_idx": 67, "turn": [67, 99], "gather": 67, "nan": 67, "n_cluster": 67, "l": 67, "largest": 67, "suppos": 67, "n_pmt": 67, "m": [67, 81], "three": [67, 81], "spatial": 67, "column_offset": 67, "feature_nam": 67, "summarization_indic": 67, "cluster_indic": 67, "save_state_dict": 68, "load_state_dict": 68, "karg": 68, "trust": 68, "enough": 68, "eval": [68, 101], "lambda": 68, "consequ": 68, "train_dataload": 69, "val_dataload": 69, "max_epoch": 69, "gpu": [69, 85, 101], "ckpt_path": 69, "log_every_n_step": 69, "gradient_clip_v": 69, "distribution_strategi": 69, "trainer_kwarg": 69, "pytorch_lightn": [69, 96], "trainer": [69, 79, 82], "target_label": [69, 71, 72, 73], "target": [69, 71, 72, 73, 81, 92], "prediction_label": [69, 71, 72, 73], "configure_optim": 69, "optim": [69, 79], "shared_step": 69, "batch_idx": 69, "share": 69, "step": [69, 79], "training_step": 69, "train_batch": 69, "validation_step": 69, "val_batch": 69, "compute_loss": [69, 71, 72, 73], "pred": [69, 73], "verbos": [69, 79], "activ": [69, 73, 99, 101], "mode": [69, 73], "deactiv": [69, 73], "predict_as_datafram": 69, "additional_attribut": [69, 82], "multiclassclassificationtask": [70, 71], "binaryclassificationtask": [70, 71], "binaryclassificationtasklogit": [70, 71], "azimuthreconstructionwithkappa": [70, 72], "azimuthreconstruct": [70, 72], "directionreconstructionwithkappa": [70, 72], "zenithreconstruct": [70, 72], "zenithreconstructionwithkappa": [70, 72], "energyreconstruct": [70, 72], "energyreconstructionwithpow": [70, 72], "energyreconstructionwithuncertainti": [70, 72], "vertexreconstruct": [70, 72], "positionreconstruct": [70, 72], "timereconstruct": [70, 72], "inelasticityreconstruct": [70, 72], "identitytask": [70, 71, 73], "classifi": 71, "untransform": 71, "logit": [71, 81], "affin": [71, 72, 73], "binari": [71, 81], "hidden_s": [71, 72, 73], "feed": [71, 72, 73], "lossfunct": [71, 72, 73, 78, 81], "auto": [71, 72, 73], "matic": [71, 72, 73], "_pred": [71, 72, 73], "transform_prediction_and_target": [71, 72, 73], "numer": [71, 72, 73], "stabl": [71, 72, 73], "transform_target": [71, 72, 73], "log10": [71, 72, 73, 83], "rather": [71, 72, 73, 96], "conjunct": [71, 72, 73], "transform_infer": [71, 72, 73], "invers": [71, 72, 73], "recov": [71, 72, 73], "transform_support": [71, 72, 73], "minimum": [71, 72, 73], "restrict": [71, 72, 73, 81], "invert": [71, 72, 73], "1e6": [71, 72, 73], "default_target_label": [71, 72, 73], "default_prediction_label": [71, 72, 73], "target_pr": 71, "angl": [72, 80], "kappa": [72, 81], "var": 72, "azimuth_pr": 72, "azimuth_kappa": 72, "3d": [72, 81], "vmf": 72, "dir_x_pr": 72, "dir_y_pr": 72, "dir_z_pr": 72, "direction_kappa": 72, "zenith_pr": 72, "zenith_kappa": 72, "energy_pr": 72, "uncertainti": 72, "energy_sigma": 72, "vertex": 72, "position_x_pr": 72, "position_y_pr": 72, "position_z_pr": 72, "interaction_time_pr": 72, "interact": 72, "hadron": 72, "inelasticity_pr": 72, "wrt": 73, "train_ev": 73, "xyzt": 74, "homophili": 74, "notic": [74, 81], "xyz_coord": 74, "pairwis": 74, "nb_dom": 74, "updat": [74, 76, 79], "config_updat": [75, 76], "weightfitt": [75, 76, 78, 83], "contourfitt": [75, 76], "read_entri": [75, 77], "plot_2d_contour": [75, 77], "plot_1d_contour": [75, 77], "contour": [76, 77], "config_path": 76, "new_config_path": 76, "dummy_sect": 76, "temp": 76, "dummi": 76, "section": 76, "header": 76, "configupdat": 76, "programat": 76, "statistical_fit": 76, "fit_weight": [76, 83], "config_outdir": 76, "weight_nam": [76, 83], "pisa_config_dict": 76, "add_to_databas": [76, 83], "flux": 76, "_database_path": 76, "statist": 76, "effect": [76, 79, 99], "account": 76, "systemat": 76, "hypersurfac": 76, "chang": [76, 81, 99], "assumpt": 76, "regard": 76, "pipeline_path": 76, "post_fix": 76, "include_retro": 76, "fit_1d_contour": 76, "run_nam": 76, "config_dict": 76, "grid_siz": 76, "theta23_minmax": 76, "36": 76, "54": 76, "dm31_minmax": 76, "1d": [76, 77], "fit_2d_contour": 76, "2d": [76, 77, 81], "content": 77, "contour_data": 77, "xlim": 77, "ylim": 77, "0023799999999999997": 77, "0025499999999999997": 77, "chi2_critical_valu": 77, "width": 77, "height": 77, "path_to_pisa_fit_result": 77, "name_of_my_model_in_fit": 77, "legend": 77, "color": 77, "linestyl": 77, "style": [77, 99], "line": [77, 79, 85], "upper": 77, "axi": 77, "605": 77, "critic": [77, 96], "chi2": 77, "cl": 77, "right": [77, 81], "176": 77, "inch": 77, "388": 77, "706": 77, "abov": [77, 81, 83, 101], "352": 77, "piecewiselinearlr": [78, 79], "progressbar": [78, 79], "mseloss": [78, 81], "rmseloss": [78, 81], "logcoshloss": [78, 81], "crossentropyloss": [78, 81], "binarycrossentropyloss": [78, 81], "logcmk": [78, 81], "vonmisesfisherloss": [78, 81], "vonmisesfisher2dloss": [78, 81], "euclideandistanceloss": [78, 81], "vonmisesfisher3dloss": [78, 81], "collator_sequence_bucklet": [78, 82], "make_dataload": [78, 82], "make_train_validation_dataload": [78, 82], "get_predict": [78, 82], "save_result": [78, 82], "uniform": [78, 83], "bjoernlow": [78, 83], "mileston": 79, "factor": 79, "last_epoch": 79, "_lrschedul": 79, "interpol": 79, "linearli": 79, "denot": 79, "multipli": 79, "closest": 79, "vice": 79, "versa": 79, "wrap": [79, 89, 90], "epoch": [79, 85], "print": [79, 96], "stdout": 79, "get_lr": 79, "refresh_r": 79, "process_posit": 79, "tqdmprogressbar": 79, "progress": 79, "bar": 79, "customis": 79, "lightn": 79, "init_validation_tqdm": 79, "overrid": 79, "init_predict_tqdm": 79, "init_test_tqdm": 79, "init_train_tqdm": 79, "get_metr": 79, "on_train_epoch_start": 79, "previou": 79, "behaviour": 79, "on_train_epoch_end": 79, "don": [79, 101], "duplciat": 79, "runtim": [80, 101], "azimuth_kei": 80, "zenith_kei": 80, "access": [80, 101], "azimiuth": 80, "return_el": 81, "elementwis": 81, "term": 81, "squar": 81, "root": [81, 101], "cosh": 81, "act": 81, "small": 81, "cross": 81, "entropi": 81, "num_class": 81, "softmax": 81, "ed": 81, "probabl": 81, "mit": 81, "licens": 81, "copyright": 81, "2019": 81, "ryabinin": 81, "permiss": 81, "herebi": 81, "person": 81, "copi": 81, "document": 81, "deal": 81, "modifi": 81, "publish": 81, "sublicens": 81, "sell": 81, "permit": 81, "whom": 81, "furnish": 81, "so": [81, 101], "subject": 81, "condit": 81, "shall": 81, "substanti": 81, "portion": 81, "THE": 81, "AS": 81, "warranti": 81, "OF": 81, "kind": 81, "OR": 81, "impli": 81, "BUT": 81, "TO": 81, "merchant": 81, "FOR": 81, "particular": [81, 99], "AND": 81, "noninfring": 81, "IN": 81, "NO": 81, "holder": 81, "BE": 81, "liabl": 81, "claim": 81, "damag": 81, "liabil": 81, "action": 81, "contract": 81, "tort": 81, "aris": 81, "WITH": 81, "_____________________": 81, "mryab": 81, "vmf_loss": 81, "master": 81, "py": [81, 101], "bessel": 81, "exponenti": 81, "ditto": 81, "iv": 81, "1812": 81, "04616": 81, "spite": 81, "suggest": 81, "sec": 81, "paper": 81, "correct": 81, "static": [81, 99], "ctx": 81, "grad_output": 81, "von": 81, "mise": 81, "fisher": 81, "log_cmk_exact": 81, "c_": 81, "exactli": [81, 96], "log_cmk_approx": 81, "approx": 81, "minu": 81, "sign": 81, "log_cmk": 81, "kappa_switch": 81, "diverg": 81, "700": 81, "float64": 81, "precis": 81, "unaccur": 81, "switch": 81, "batch_split": 82, "bucket": 82, "cut": 82, "mini": 82, "total": 82, "explicitli": 82, "respect": 82, "database_indic": 82, "test_siz": 82, "node_level": 82, "tag": [82, 99, 101], "archiv": 82, "uniformweightfitt": 83, "bin": 83, "privat": 83, "_fit_weight": 83, "sql": 83, "desir": [83, 94], "np": 83, "happen": 83, "x_low": 83, "wherea": 83, "curv": 83, "base_config": [84, 86], "dataset_config": [84, 86], "training_config": [84, 86], "argumentpars": [84, 85], "is_gcd_fil": [84, 94], "is_i3_fil": [84, 94], "has_extens": [84, 94], "find_i3_fil": [84, 94], "has_icecube_packag": [84, 95], "has_torch_packag": [84, 95], "has_pisa_packag": [84, 95], "requires_icecub": [84, 95], "repeatfilt": [84, 96], "eps_lik": [84, 97], "consist": [85, 96, 99], "cli": 85, "pop_default": 85, "usag": 85, "descript": 85, "command": [85, 101], "standard_argu": 85, "training_example_data_sqlit": 85, "earli": 85, "patienc": 85, "narg": 85, "example_energy_reconstruction_model": 85, "num": 85, "fetch": 85, "with_standard_argu": 85, "overwritten": [85, 87], "baseconfig": [86, 87, 88, 89, 90, 92], "get_all_argument_valu": [86, 87], "save_dataset_config": [86, 89], "datasetconfigsavermeta": [86, 89], "datasetconfigsaverabcmeta": [86, 89], "save_model_config": [86, 90], "modelconfigsavermeta": [86, 90], "modelconfigsaverabc": [86, 90], "traverse_and_appli": [86, 91], "list_all_submodul": [86, 91], "get_all_grapnet_class": [86, 91], "is_graphnet_modul": [86, 91], "is_graphnet_class": [86, 91], "get_graphnet_class": [86, 91], "trainingconfig": [86, 92], "basemodel": [87, 89, 90], "keyword": [87, 92], "validationerror": [87, 92], "pydantic_cor": [87, 92], "__init__": [87, 89, 90, 92, 101], "__pydantic_self__": [87, 92], "dump": [87, 89, 90], "yaml": [87, 88], "as_dict": [87, 89, 90], "classvar": [87, 89, 90, 92], "configdict": [87, 89, 90, 92], "conform": [87, 89, 90, 92], "pydant": [87, 89, 90, 92], "model_field": [87, 89, 90, 92], "fieldinfo": [87, 89, 90, 92], "metadata": [87, 89, 90, 92], "about": [87, 89, 90, 92], "__fields__": [87, 89, 90, 92], "v1": [87, 89, 90, 92, 101], "re": [88, 101], "save_config": 88, "dataconfig": 89, "transpar": [89, 90, 99], "reproduc": [89, 90], "In": [89, 90, 101], "session": [89, 90], "anoth": [89, 90], "you": [89, 90, 99, 101], "still": 89, "csv": 89, "train_select": 89, "test_select": 89, "unambigu": [89, 90], "annot": [89, 90, 92], "nonetyp": 89, "init_fn": [89, 90], "metaclass": [89, 90], "abcmeta": [89, 90], "datasetconfigsav": 89, "trainabl": 90, "hyperparamet": 90, "instanti": 90, "thu": 90, "modelconfigsav": 90, "fn_kwarg": 91, "structur": 91, "moduletyp": 91, "grapnet": 91, "lookup": 91, "early_stopping_pati": 92, "system": [94, 101], "filenam": 94, "dir": 94, "search": 94, "test_funct": 95, "repeat": 96, "nb_repeats_allow": 96, "record": 96, "logrecord": 96, "clear": 96, "intuit": 96, "composit": 96, "loggeradapt": 96, "clash": 96, "setlevel": 96, "deleg": 96, "msg": 96, "warn": 96, "info": [96, 101], "debug": 96, "warning_onc": 96, "onc": 96, "handler": 96, "file_handl": 96, "filehandl": 96, "stream_handl": 96, "streamhandl": 96, "assort": 97, "ep": 97, "api": 98, "To": [99, 101], "sure": [99, 101], "smooth": 99, "guidelin": 99, "guid": 99, "encourag": 99, "contributor": 99, "discuss": 99, "bug": 99, "anyth": 99, "place": 99, "describ": 99, "yourself": 99, "ownership": 99, "prioriti": 99, "situat": 99, "lot": 99, "effort": 99, "go": 99, "outsid": 99, "scope": 99, "better": 99, "fork": 99, "repo": 99, "dedic": 99, "branch": [99, 101], "repositori": 99, "own": [99, 101], "accept": 99, "autom": 99, "review": 99, "pep8": 99, "docstr": 99, "googl": 99, "hint": 99, "adher": 99, "pep": 99, "pylint": 99, "flake8": 99, "black": 99, "well": 99, "recommend": [99, 101], "mypi": 99, "pydocstyl": 99, "docformatt": 99, "commit": 99, "hook": 99, "instal": 99, "come": 99, "pip": [99, 101], "Then": 99, "everytim": 99, "pep257": 99, "concept": 99, "ljvmiranda921": 99, "io": 99, "notebook": 99, "2018": 99, "06": 99, "21": 99, "precommit": 99, "environ": 101, "virtual": 101, "anaconda": 101, "prove": 101, "instruct": 101, "setup": 101, "want": 101, "part": 101, "achiev": 101, "bash": 101, "shell": 101, "cvmf": 101, "opensciencegrid": 101, "py3": 101, "v4": 101, "sh": 101, "rhel_7_x86_64": 101, "metaproject": 101, "env": 101, "alia": 101, "script": 101, "With": 101, "now": 101, "light": 101, "extra": 101, "geometr": 101, "won": 101, "later": 101, "torch_cpu": 101, "txt": 101, "cpu": 101, "torch_gpu": 101, "prefer": 101, "unix": 101, "git": 101, "clone": 101, "usernam": 101, "cd": 101, "conda": 101, "gcc_linux": 101, "64": 101, "gxx_linux": 101, "libgcc": 101, "cudatoolkit": 101, "11": 101, "forg": 101, "box": 101, "compil": 101, "gcc": 101, "date": 101, "possibli": 101, "cuda": 101, "toolkit": 101, "recent": 101, "omit": 101, "newer": 101, "export": 101, "ld_library_path": 101, "anaconda3": 101, "miniconda3": 101, "bashrc": 101, "librari": 101, "intend": 101, "rm": 101, "asogaard": 101, "latest": 101, "dc423315742c": 101, "01_icetrai": 101, "01_convert_i3_fil": 101, "2023": 101, "01": 101, "24": 101, "41": 101, "27": 101, "graphnet_20230124": 101, "134127": 101, "46": 101, "convert_i3_fil": 101, "ic86": 101, "thread": 101, "00": 101, "79": 101, "42": 101, "26": 101, "413": 101, "88it": 101, "specialis": 101, "ones": 101, "push": 101, "vx": 101}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [41, 0, 0, "-", "deployment"], [45, 0, 0, "-", "models"], [75, 0, 0, "-", "pisa"], [78, 0, 0, "-", "training"], [84, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "dataconverter"], [6, 0, 0, "-", "dataloader"], [7, 0, 0, "-", "dataset"], [13, 0, 0, "-", "extractors"], [30, 0, 0, "-", "filters"], [31, 0, 0, "-", "parquet"], [33, 0, 0, "-", "pipeline"], [34, 0, 0, "-", "sqlite"], [37, 0, 0, "-", "utilities"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.dataconverter": [[5, 1, 1, "", "DataConverter"], [5, 1, 1, "", "FileSet"], [5, 5, 1, "", "cache_output_files"], [5, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[5, 3, 1, "", "execute"], [5, 4, 1, "", "file_suffix"], [5, 3, 1, "", "get_map_function"], [5, 3, 1, "", "merge_files"], [5, 3, 1, "", "save_data"]], "graphnet.data.dataconverter.FileSet": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_file"]], "graphnet.data.dataloader": [[6, 1, 1, "", "DataLoader"], [6, 5, 1, "", "collate_fn"], [6, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[6, 3, 1, "", "from_dataset_config"]], "graphnet.data.dataset": [[8, 0, 0, "-", "dataset"], [9, 0, 0, "-", "parquet"], [11, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[8, 6, 1, "", "ColumnMissingException"], [8, 1, 1, "", "Dataset"], [8, 1, 1, "", "EnsembleDataset"], [8, 5, 1, "", "load_module"], [8, 5, 1, "", "parse_graph_definition"]], "graphnet.data.dataset.dataset.Dataset": [[8, 3, 1, "", "add_label"], [8, 3, 1, "", "concatenate"], [8, 3, 1, "", "from_config"], [8, 4, 1, "", "path"], [8, 3, 1, "", "query_table"], [8, 4, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[10, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[10, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[10, 3, 1, "", "query_table"]], "graphnet.data.dataset.sqlite": [[12, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[12, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[12, 3, 1, "", "query_table"]], "graphnet.data.extractors": [[14, 0, 0, "-", "i3extractor"], [15, 0, 0, "-", "i3featureextractor"], [16, 0, 0, "-", "i3genericextractor"], [17, 0, 0, "-", "i3hybridrecoextractor"], [18, 0, 0, "-", "i3ntmuonlabelsextractor"], [19, 0, 0, "-", "i3particleextractor"], [20, 0, 0, "-", "i3pisaextractor"], [21, 0, 0, "-", "i3quesoextractor"], [22, 0, 0, "-", "i3retroextractor"], [23, 0, 0, "-", "i3splinempeextractor"], [24, 0, 0, "-", "i3truthextractor"], [25, 0, 0, "-", "i3tumextractor"], [26, 0, 0, "-", "utilities"]], "graphnet.data.extractors.i3extractor": [[14, 1, 1, "", "I3Extractor"], [14, 1, 1, "", "I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor.I3Extractor": [[14, 4, 1, "", "name"], [14, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3extractor.I3ExtractorCollection": [[14, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3featureextractor": [[15, 1, 1, "", "I3FeatureExtractor"], [15, 1, 1, "", "I3FeatureExtractorIceCube86"], [15, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [15, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [15, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3genericextractor": [[16, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[17, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3ntmuonlabelsextractor": [[18, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.i3particleextractor": [[19, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[20, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.i3quesoextractor": [[21, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.i3retroextractor": [[22, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[23, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3truthextractor": [[24, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.i3tumextractor": [[25, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.utilities": [[27, 0, 0, "-", "collections"], [28, 0, 0, "-", "frames"], [29, 0, 0, "-", "types"]], "graphnet.data.extractors.utilities.collections": [[27, 5, 1, "", "flatten_nested_dictionary"], [27, 5, 1, "", "serialise"], [27, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.utilities.frames": [[28, 5, 1, "", "frame_is_montecarlo"], [28, 5, 1, "", "frame_is_noise"], [28, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.types": [[29, 5, 1, "", "break_cyclic_recursion"], [29, 5, 1, "", "cast_object_to_pure_python"], [29, 5, 1, "", "cast_pulse_series_to_pure_python"], [29, 5, 1, "", "get_member_variables"], [29, 5, 1, "", "is_boost_class"], [29, 5, 1, "", "is_boost_enum"], [29, 5, 1, "", "is_icecube_class"], [29, 5, 1, "", "is_method"], [29, 5, 1, "", "is_type"]], "graphnet.data.filters": [[30, 1, 1, "", "I3Filter"], [30, 1, 1, "", "I3FilterMask"], [30, 1, 1, "", "NullSplitI3Filter"]], "graphnet.data.parquet": [[32, 0, 0, "-", "parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataconverter": [[32, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter": [[32, 2, 1, "", "file_suffix"], [32, 3, 1, "", "merge_files"], [32, 3, 1, "", "save_data"]], "graphnet.data.pipeline": [[33, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.sqlite": [[35, 0, 0, "-", "sqlite_dataconverter"], [36, 0, 0, "-", "sqlite_utilities"]], "graphnet.data.sqlite.sqlite_dataconverter": [[35, 1, 1, "", "SQLiteDataConverter"], [35, 5, 1, "", "construct_dataframe"], [35, 5, 1, "", "is_mc_tree"], [35, 5, 1, "", "is_pulse_map"]], "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter": [[35, 3, 1, "", "any_pulsemap_is_non_empty"], [35, 2, 1, "", "file_suffix"], [35, 3, 1, "", "merge_files"], [35, 3, 1, "", "save_data"]], "graphnet.data.sqlite.sqlite_utilities": [[36, 5, 1, "", "attach_index"], [36, 5, 1, "", "create_table"], [36, 5, 1, "", "create_table_and_save_to_sql"], [36, 5, 1, "", "database_exists"], [36, 5, 1, "", "database_table_exists"], [36, 5, 1, "", "run_sql_code"], [36, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities": [[38, 0, 0, "-", "parquet_to_sqlite"], [39, 0, 0, "-", "random"], [40, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.parquet_to_sqlite": [[38, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[38, 3, 1, "", "run"]], "graphnet.data.utilities.random": [[39, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.string_selection_resolver": [[40, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[40, 3, 1, "", "resolve"]], "graphnet.deployment.i3modules": [[44, 0, 0, "-", "graphnet_module"]], "graphnet.deployment.i3modules.graphnet_module": [[44, 1, 1, "", "GraphNeTI3Module"], [44, 1, 1, "", "I3InferenceModule"], [44, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.models": [[46, 0, 0, "-", "coarsening"], [47, 0, 0, "-", "components"], [50, 0, 0, "-", "detector"], [54, 0, 0, "-", "gnn"], [60, 0, 0, "-", "graphs"], [68, 0, 0, "-", "model"], [69, 0, 0, "-", "standard_model"], [70, 0, 0, "-", "task"], [74, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[46, 1, 1, "", "AttributeCoarsening"], [46, 1, 1, "", "Coarsening"], [46, 1, 1, "", "CustomDOMCoarsening"], [46, 1, 1, "", "DOMAndTimeWindowCoarsening"], [46, 1, 1, "", "DOMCoarsening"], [46, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[46, 3, 1, "", "forward"], [46, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[48, 0, 0, "-", "layers"], [49, 0, 0, "-", "pool"]], "graphnet.models.components.layers": [[48, 1, 1, "", "DynEdgeConv"], [48, 1, 1, "", "DynTrans"], [48, 1, 1, "", "EdgeConvTito"]], "graphnet.models.components.layers.DynEdgeConv": [[48, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[48, 3, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[48, 3, 1, "", "forward"], [48, 3, 1, "", "message"], [48, 3, 1, "", "reset_parameters"]], "graphnet.models.components.pool": [[49, 5, 1, "", "group_by"], [49, 5, 1, "", "group_pulses_to_dom"], [49, 5, 1, "", "group_pulses_to_pmt"], [49, 5, 1, "", "min_pool"], [49, 5, 1, "", "min_pool_x"], [49, 5, 1, "", "std_pool"], [49, 5, 1, "", "std_pool_x"], [49, 5, 1, "", "sum_pool"], [49, 5, 1, "", "sum_pool_and_distribute"], [49, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[51, 0, 0, "-", "detector"], [52, 0, 0, "-", "icecube"], [53, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[51, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[51, 3, 1, "", "feature_map"], [51, 3, 1, "", "forward"], [51, 4, 1, "", "geometry_table"], [51, 4, 1, "", "sensor_index_name"], [51, 4, 1, "", "sensor_position_names"], [51, 4, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[52, 1, 1, "", "IceCube86"], [52, 1, 1, "", "IceCubeDeepCore"], [52, 1, 1, "", "IceCubeKaggle"], [52, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[52, 3, 1, "", "feature_map"], [52, 2, 1, "", "geometry_table_path"], [52, 2, 1, "", "sensor_id_column"], [52, 2, 1, "", "string_id_column"], [52, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[52, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[52, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[52, 3, 1, "", "feature_map"], [52, 2, 1, "", "geometry_table_path"], [52, 2, 1, "", "sensor_id_column"], [52, 2, 1, "", "string_id_column"], [52, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[53, 1, 1, "", "ORCA150"], [53, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.ORCA150": [[53, 3, 1, "", "feature_map"], [53, 2, 1, "", "geometry_table_path"], [53, 2, 1, "", "sensor_id_column"], [53, 2, 1, "", "string_id_column"], [53, 2, 1, "", "xyz"]], "graphnet.models.gnn": [[55, 0, 0, "-", "convnet"], [56, 0, 0, "-", "dynedge"], [57, 0, 0, "-", "dynedge_jinst"], [58, 0, 0, "-", "dynedge_kaggle_tito"], [59, 0, 0, "-", "gnn"]], "graphnet.models.gnn.convnet": [[55, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[55, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[56, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[56, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[57, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[57, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[58, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[58, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[59, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[59, 3, 1, "", "forward"], [59, 4, 1, "", "nb_inputs"], [59, 4, 1, "", "nb_outputs"]], "graphnet.models.graphs": [[61, 0, 0, "-", "edges"], [63, 0, 0, "-", "graph_definition"], [64, 0, 0, "-", "graphs"], [65, 0, 0, "-", "nodes"], [67, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[62, 0, 0, "-", "edges"]], "graphnet.models.graphs.edges.edges": [[62, 1, 1, "", "EdgeDefinition"], [62, 1, 1, "", "EuclideanEdges"], [62, 1, 1, "", "KNNEdges"], [62, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[62, 3, 1, "", "forward"]], "graphnet.models.graphs.graph_definition": [[63, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[63, 3, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[64, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[66, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[66, 1, 1, "", "NodeDefinition"], [66, 1, 1, "", "NodesAsPulses"], [66, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[66, 3, 1, "", "forward"], [66, 4, 1, "", "nb_outputs"], [66, 3, 1, "", "set_number_of_inputs"], [66, 3, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[67, 5, 1, "", "cluster_summarize_with_percentiles"], [67, 5, 1, "", "gather_cluster_sequence"], [67, 5, 1, "", "identify_indices"], [67, 5, 1, "", "lex_sort"]], "graphnet.models.model": [[68, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[68, 3, 1, "", "from_config"], [68, 3, 1, "", "load"], [68, 3, 1, "", "load_state_dict"], [68, 3, 1, "", "save"], [68, 3, 1, "", "save_state_dict"]], "graphnet.models.standard_model": [[69, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[69, 3, 1, "", "compute_loss"], [69, 3, 1, "", "configure_optimizers"], [69, 3, 1, "", "fit"], [69, 3, 1, "", "forward"], [69, 3, 1, "", "inference"], [69, 3, 1, "", "predict"], [69, 3, 1, "", "predict_as_dataframe"], [69, 4, 1, "", "prediction_labels"], [69, 3, 1, "", "shared_step"], [69, 4, 1, "", "target_labels"], [69, 3, 1, "", "train"], [69, 3, 1, "", "training_step"], [69, 3, 1, "", "validation_step"]], "graphnet.models.task": [[71, 0, 0, "-", "classification"], [72, 0, 0, "-", "reconstruction"], [73, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[71, 1, 1, "", "BinaryClassificationTask"], [71, 1, 1, "", "BinaryClassificationTaskLogits"], [71, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[71, 2, 1, "", "default_prediction_labels"], [71, 2, 1, "", "default_target_labels"], [71, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[71, 2, 1, "", "default_prediction_labels"], [71, 2, 1, "", "default_target_labels"], [71, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[72, 1, 1, "", "AzimuthReconstruction"], [72, 1, 1, "", "AzimuthReconstructionWithKappa"], [72, 1, 1, "", "DirectionReconstructionWithKappa"], [72, 1, 1, "", "EnergyReconstruction"], [72, 1, 1, "", "EnergyReconstructionWithPower"], [72, 1, 1, "", "EnergyReconstructionWithUncertainty"], [72, 1, 1, "", "InelasticityReconstruction"], [72, 1, 1, "", "PositionReconstruction"], [72, 1, 1, "", "TimeReconstruction"], [72, 1, 1, "", "VertexReconstruction"], [72, 1, 1, "", "ZenithReconstruction"], [72, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[72, 2, 1, "", "default_prediction_labels"], [72, 2, 1, "", "default_target_labels"], [72, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[72, 2, 1, "", "default_prediction_labels"], [72, 2, 1, "", "default_target_labels"], [72, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[72, 2, 1, "", "default_prediction_labels"], [72, 2, 1, "", "default_target_labels"], [72, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[72, 2, 1, "", "default_prediction_labels"], [72, 2, 1, "", "default_target_labels"], [72, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[72, 2, 1, "", "default_prediction_labels"], [72, 2, 1, "", "default_target_labels"], [72, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[72, 2, 1, "", "default_prediction_labels"], [72, 2, 1, "", "default_target_labels"], [72, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[72, 2, 1, "", "default_prediction_labels"], [72, 2, 1, "", "default_target_labels"], [72, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[72, 2, 1, "", "default_prediction_labels"], [72, 2, 1, "", "default_target_labels"], [72, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[72, 2, 1, "", "default_prediction_labels"], [72, 2, 1, "", "default_target_labels"], [72, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[72, 2, 1, "", "default_prediction_labels"], [72, 2, 1, "", "default_target_labels"], [72, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[72, 2, 1, "", "default_prediction_labels"], [72, 2, 1, "", "default_target_labels"], [72, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[72, 2, 1, "", "default_prediction_labels"], [72, 2, 1, "", "default_target_labels"], [72, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[73, 1, 1, "", "IdentityTask"], [73, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[73, 4, 1, "", "default_prediction_labels"], [73, 4, 1, "", "default_target_labels"], [73, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[73, 3, 1, "", "compute_loss"], [73, 4, 1, "", "default_prediction_labels"], [73, 4, 1, "", "default_target_labels"], [73, 3, 1, "", "forward"], [73, 3, 1, "", "inference"], [73, 4, 1, "", "nb_inputs"], [73, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[74, 5, 1, "", "calculate_distance_matrix"], [74, 5, 1, "", "calculate_xyzt_homophily"], [74, 5, 1, "", "knn_graph_batch"]], "graphnet.pisa": [[76, 0, 0, "-", "fitting"], [77, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[76, 1, 1, "", "ContourFitter"], [76, 1, 1, "", "WeightFitter"], [76, 5, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[76, 3, 1, "", "fit_1d_contour"], [76, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[76, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[77, 5, 1, "", "plot_1D_contour"], [77, 5, 1, "", "plot_2D_contour"], [77, 5, 1, "", "read_entry"]], "graphnet.training": [[79, 0, 0, "-", "callbacks"], [80, 0, 0, "-", "labels"], [81, 0, 0, "-", "loss_functions"], [82, 0, 0, "-", "utils"], [83, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[79, 1, 1, "", "PiecewiseLinearLR"], [79, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[79, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[79, 3, 1, "", "get_metrics"], [79, 3, 1, "", "init_predict_tqdm"], [79, 3, 1, "", "init_test_tqdm"], [79, 3, 1, "", "init_train_tqdm"], [79, 3, 1, "", "init_validation_tqdm"], [79, 3, 1, "", "on_train_epoch_end"], [79, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[80, 1, 1, "", "Direction"], [80, 1, 1, "", "Label"]], "graphnet.training.labels.Label": [[80, 4, 1, "", "key"]], "graphnet.training.loss_functions": [[81, 1, 1, "", "BinaryCrossEntropyLoss"], [81, 1, 1, "", "CrossEntropyLoss"], [81, 1, 1, "", "EuclideanDistanceLoss"], [81, 1, 1, "", "LogCMK"], [81, 1, 1, "", "LogCoshLoss"], [81, 1, 1, "", "LossFunction"], [81, 1, 1, "", "MSELoss"], [81, 1, 1, "", "RMSELoss"], [81, 1, 1, "", "VonMisesFisher2DLoss"], [81, 1, 1, "", "VonMisesFisher3DLoss"], [81, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[81, 3, 1, "", "backward"], [81, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[81, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[81, 3, 1, "", "log_cmk"], [81, 3, 1, "", "log_cmk_approx"], [81, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[82, 5, 1, "", "collate_fn"], [82, 1, 1, "", "collator_sequence_buckleting"], [82, 5, 1, "", "get_predictions"], [82, 5, 1, "", "make_dataloader"], [82, 5, 1, "", "make_train_validation_dataloader"], [82, 5, 1, "", "save_results"]], "graphnet.training.weight_fitting": [[83, 1, 1, "", "BjoernLow"], [83, 1, 1, "", "Uniform"], [83, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[83, 3, 1, "", "fit"]], "graphnet.utilities": [[85, 0, 0, "-", "argparse"], [86, 0, 0, "-", "config"], [93, 0, 0, "-", "decorators"], [94, 0, 0, "-", "filesys"], [95, 0, 0, "-", "imports"], [96, 0, 0, "-", "logging"], [97, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[85, 1, 1, "", "ArgumentParser"], [85, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[85, 2, 1, "", "standard_arguments"], [85, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[85, 3, 1, "", "contains"], [85, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[87, 0, 0, "-", "base_config"], [88, 0, 0, "-", "configurable"], [89, 0, 0, "-", "dataset_config"], [90, 0, 0, "-", "model_config"], [91, 0, 0, "-", "parsing"], [92, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[87, 1, 1, "", "BaseConfig"], [87, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[87, 3, 1, "", "as_dict"], [87, 3, 1, "", "dump"], [87, 3, 1, "", "load"], [87, 2, 1, "", "model_config"], [87, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[88, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[88, 4, 1, "", "config"], [88, 3, 1, "", "from_config"], [88, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[89, 1, 1, "", "DatasetConfig"], [89, 1, 1, "", "DatasetConfigSaverABCMeta"], [89, 1, 1, "", "DatasetConfigSaverMeta"], [89, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[89, 3, 1, "", "as_dict"], [89, 2, 1, "", "features"], [89, 2, 1, "", "graph_definition"], [89, 2, 1, "", "index_column"], [89, 2, 1, "", "loss_weight_column"], [89, 2, 1, "", "loss_weight_default_value"], [89, 2, 1, "", "loss_weight_table"], [89, 2, 1, "", "model_config"], [89, 2, 1, "", "model_fields"], [89, 2, 1, "", "node_truth"], [89, 2, 1, "", "node_truth_table"], [89, 2, 1, "", "path"], [89, 2, 1, "", "pulsemaps"], [89, 2, 1, "", "seed"], [89, 2, 1, "", "selection"], [89, 2, 1, "", "string_selection"], [89, 2, 1, "", "truth"], [89, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[90, 1, 1, "", "ModelConfig"], [90, 1, 1, "", "ModelConfigSaverABC"], [90, 1, 1, "", "ModelConfigSaverMeta"], [90, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[90, 2, 1, "", "arguments"], [90, 3, 1, "", "as_dict"], [90, 2, 1, "", "class_name"], [90, 2, 1, "", "model_config"], [90, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[91, 5, 1, "", "get_all_grapnet_classes"], [91, 5, 1, "", "get_graphnet_classes"], [91, 5, 1, "", "is_graphnet_class"], [91, 5, 1, "", "is_graphnet_module"], [91, 5, 1, "", "list_all_submodules"], [91, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[92, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[92, 2, 1, "", "dataloader"], [92, 2, 1, "", "early_stopping_patience"], [92, 2, 1, "", "fit"], [92, 2, 1, "", "model_config"], [92, 2, 1, "", "model_fields"], [92, 2, 1, "", "target"]], "graphnet.utilities.filesys": [[94, 5, 1, "", "find_i3_files"], [94, 5, 1, "", "has_extension"], [94, 5, 1, "", "is_gcd_file"], [94, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[95, 5, 1, "", "has_icecube_package"], [95, 5, 1, "", "has_pisa_package"], [95, 5, 1, "", "has_torch_package"], [95, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[96, 1, 1, "", "Logger"], [96, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[96, 3, 1, "", "critical"], [96, 3, 1, "", "debug"], [96, 3, 1, "", "error"], [96, 4, 1, "", "file_handlers"], [96, 4, 1, "", "handlers"], [96, 3, 1, "", "info"], [96, 3, 1, "", "setLevel"], [96, 4, 1, "", "stream_handlers"], [96, 3, 1, "", "warning"], [96, 3, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[96, 3, 1, "", "filter"], [96, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[97, 5, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 100], "impact": [0, 100], "usag": [0, 100], "acknowledg": [0, 100], "api": 1, "constant": [2, 4], "data": 3, "dataconvert": 5, "dataload": 6, "dataset": [7, 8], "parquet": [9, 31], "parquet_dataset": 10, "sqlite": [11, 34], "sqlite_dataset": 12, "extractor": 13, "i3extractor": 14, "i3featureextractor": 15, "i3genericextractor": 16, "i3hybridrecoextractor": 17, "i3ntmuonlabelsextractor": 18, "i3particleextractor": 19, "i3pisaextractor": 20, "i3quesoextractor": 21, "i3retroextractor": 22, "i3splinempeextractor": 23, "i3truthextractor": 24, "i3tumextractor": 25, "util": [26, 37, 67, 74, 82, 84], "collect": 27, "frame": 28, "type": 29, "filter": 30, "parquet_dataconvert": 32, "pipelin": 33, "sqlite_dataconvert": 35, "sqlite_util": 36, "parquet_to_sqlit": 38, "random": 39, "string_selection_resolv": 40, "deploy": [41, 43], "i3modul": 42, "graphnet_modul": 44, "model": [45, 68], "coarsen": 46, "compon": 47, "layer": 48, "pool": 49, "detector": [50, 51], "icecub": 52, "prometheu": 53, "gnn": [54, 59], "convnet": 55, "dynedg": 56, "dynedge_jinst": 57, "dynedge_kaggle_tito": 58, "graph": [60, 64], "edg": [61, 62], "graph_definit": 63, "node": [65, 66], "standard_model": 69, "task": [70, 73], "classif": 71, "reconstruct": 72, "pisa": 75, "fit": 76, "plot": 77, "train": 78, "callback": 79, "label": 80, "loss_funct": 81, "weight_fit": 83, "argpars": 85, "config": 86, "base_config": 87, "configur": 88, "dataset_config": 89, "model_config": 90, "pars": 91, "training_config": 92, "decor": 93, "filesi": 94, "import": 95, "log": 96, "math": 97, "src": 98, "contribut": 99, "github": 99, "issu": 99, "pull": 99, "request": 99, "convent": 99, "code": 99, "qualiti": 99, "instal": 101, "icetrai": 101, "stand": 101, "alon": 101, "run": 101, "docker": 101}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"], [100, "about"]], "Impact": [[0, "impact"], [100, "impact"]], "Usage": [[0, "usage"], [100, "usage"]], "Acknowledgements": [[0, "acknowledgements"], [100, "acknowledgements"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "dataconverter": [[5, "module-graphnet.data.dataconverter"]], "dataloader": [[6, "module-graphnet.data.dataloader"]], "dataset": [[7, "module-graphnet.data.dataset"], [8, "module-graphnet.data.dataset.dataset"]], "parquet": [[9, "module-graphnet.data.dataset.parquet"], [31, "module-graphnet.data.parquet"]], "parquet_dataset": [[10, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "sqlite": [[11, "module-graphnet.data.dataset.sqlite"], [34, "module-graphnet.data.sqlite"]], "sqlite_dataset": [[12, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "extractors": [[13, "module-graphnet.data.extractors"]], "i3extractor": [[14, "module-graphnet.data.extractors.i3extractor"]], "i3featureextractor": [[15, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor": [[16, "module-graphnet.data.extractors.i3genericextractor"]], "i3hybridrecoextractor": [[17, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3ntmuonlabelsextractor": [[18, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"]], "i3particleextractor": [[19, "module-graphnet.data.extractors.i3particleextractor"]], "i3pisaextractor": [[20, "module-graphnet.data.extractors.i3pisaextractor"]], "i3quesoextractor": [[21, "module-graphnet.data.extractors.i3quesoextractor"]], "i3retroextractor": [[22, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeextractor": [[23, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor": [[24, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor": [[25, "module-graphnet.data.extractors.i3tumextractor"]], "utilities": [[26, "module-graphnet.data.extractors.utilities"], [37, "module-graphnet.data.utilities"], [84, "module-graphnet.utilities"]], "collections": [[27, "module-graphnet.data.extractors.utilities.collections"]], "frames": [[28, "module-graphnet.data.extractors.utilities.frames"]], "types": [[29, "module-graphnet.data.extractors.utilities.types"]], "filters": [[30, "module-graphnet.data.filters"]], "parquet_dataconverter": [[32, "module-graphnet.data.parquet.parquet_dataconverter"]], "pipeline": [[33, "module-graphnet.data.pipeline"]], "sqlite_dataconverter": [[35, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "sqlite_utilities": [[36, "module-graphnet.data.sqlite.sqlite_utilities"]], "parquet_to_sqlite": [[38, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[39, "module-graphnet.data.utilities.random"]], "string_selection_resolver": [[40, "module-graphnet.data.utilities.string_selection_resolver"]], "deployment": [[41, "module-graphnet.deployment"]], "i3modules": [[42, "i3modules"]], "deployer": [[43, "deployer"]], "graphnet_module": [[44, "module-graphnet.deployment.i3modules.graphnet_module"]], "models": [[45, "module-graphnet.models"]], "coarsening": [[46, "module-graphnet.models.coarsening"]], "components": [[47, "module-graphnet.models.components"]], "layers": [[48, "module-graphnet.models.components.layers"]], "pool": [[49, "module-graphnet.models.components.pool"]], "detector": [[50, "module-graphnet.models.detector"], [51, "module-graphnet.models.detector.detector"]], "icecube": [[52, "module-graphnet.models.detector.icecube"]], "prometheus": [[53, "module-graphnet.models.detector.prometheus"]], "gnn": [[54, "module-graphnet.models.gnn"], [59, "module-graphnet.models.gnn.gnn"]], "convnet": [[55, "module-graphnet.models.gnn.convnet"]], "dynedge": [[56, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[57, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedge_kaggle_tito": [[58, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "graphs": [[60, "module-graphnet.models.graphs"], [64, "module-graphnet.models.graphs.graphs"]], "edges": [[61, "module-graphnet.models.graphs.edges"], [62, "module-graphnet.models.graphs.edges.edges"]], "graph_definition": [[63, "module-graphnet.models.graphs.graph_definition"]], "nodes": [[65, "module-graphnet.models.graphs.nodes"], [66, "module-graphnet.models.graphs.nodes.nodes"]], "utils": [[67, "module-graphnet.models.graphs.utils"], [74, "module-graphnet.models.utils"], [82, "module-graphnet.training.utils"]], "model": [[68, "module-graphnet.models.model"]], "standard_model": [[69, "module-graphnet.models.standard_model"]], "task": [[70, "module-graphnet.models.task"], [73, "module-graphnet.models.task.task"]], "classification": [[71, "module-graphnet.models.task.classification"]], "reconstruction": [[72, "module-graphnet.models.task.reconstruction"]], "pisa": [[75, "module-graphnet.pisa"]], "fitting": [[76, "module-graphnet.pisa.fitting"]], "plotting": [[77, "module-graphnet.pisa.plotting"]], "training": [[78, "module-graphnet.training"]], "callbacks": [[79, "module-graphnet.training.callbacks"]], "labels": [[80, "module-graphnet.training.labels"]], "loss_functions": [[81, "module-graphnet.training.loss_functions"]], "weight_fitting": [[83, "module-graphnet.training.weight_fitting"]], "argparse": [[85, "module-graphnet.utilities.argparse"]], "config": [[86, "module-graphnet.utilities.config"]], "base_config": [[87, "module-graphnet.utilities.config.base_config"]], "configurable": [[88, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[89, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[90, "module-graphnet.utilities.config.model_config"]], "parsing": [[91, "module-graphnet.utilities.config.parsing"]], "training_config": [[92, "module-graphnet.utilities.config.training_config"]], "decorators": [[93, "module-graphnet.utilities.decorators"]], "filesys": [[94, "module-graphnet.utilities.filesys"]], "imports": [[95, "module-graphnet.utilities.imports"]], "logging": [[96, "module-graphnet.utilities.logging"]], "maths": [[97, "module-graphnet.utilities.maths"]], "src": [[98, "src"]], "Contribute": [[99, "contribute"]], "GitHub issues": [[99, "github-issues"]], "Pull requests": [[99, "pull-requests"]], "Conventions": [[99, "conventions"]], "Code quality": [[99, "code-quality"]], "Install": [[101, "install"]], "Installing with IceTray": [[101, "installing-with-icetray"]], "Installing stand-alone": [[101, "installing-stand-alone"]], "Running in Docker": [[101, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.dataconverter"], [6, "module-graphnet.data.dataloader"], [7, "module-graphnet.data.dataset"], [8, "module-graphnet.data.dataset.dataset"], [9, "module-graphnet.data.dataset.parquet"], [10, "module-graphnet.data.dataset.parquet.parquet_dataset"], [11, "module-graphnet.data.dataset.sqlite"], [12, "module-graphnet.data.dataset.sqlite.sqlite_dataset"], [13, "module-graphnet.data.extractors"], [14, "module-graphnet.data.extractors.i3extractor"], [15, "module-graphnet.data.extractors.i3featureextractor"], [16, "module-graphnet.data.extractors.i3genericextractor"], [17, "module-graphnet.data.extractors.i3hybridrecoextractor"], [18, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"], [19, "module-graphnet.data.extractors.i3particleextractor"], [20, "module-graphnet.data.extractors.i3pisaextractor"], [21, "module-graphnet.data.extractors.i3quesoextractor"], [22, "module-graphnet.data.extractors.i3retroextractor"], [23, "module-graphnet.data.extractors.i3splinempeextractor"], [24, "module-graphnet.data.extractors.i3truthextractor"], [25, "module-graphnet.data.extractors.i3tumextractor"], [26, "module-graphnet.data.extractors.utilities"], [27, "module-graphnet.data.extractors.utilities.collections"], [28, "module-graphnet.data.extractors.utilities.frames"], [29, "module-graphnet.data.extractors.utilities.types"], [30, "module-graphnet.data.filters"], [31, "module-graphnet.data.parquet"], [32, "module-graphnet.data.parquet.parquet_dataconverter"], [33, "module-graphnet.data.pipeline"], [34, "module-graphnet.data.sqlite"], [35, "module-graphnet.data.sqlite.sqlite_dataconverter"], [36, "module-graphnet.data.sqlite.sqlite_utilities"], [37, "module-graphnet.data.utilities"], [38, "module-graphnet.data.utilities.parquet_to_sqlite"], [39, "module-graphnet.data.utilities.random"], [40, "module-graphnet.data.utilities.string_selection_resolver"], [41, "module-graphnet.deployment"], [44, "module-graphnet.deployment.i3modules.graphnet_module"], [45, "module-graphnet.models"], [46, "module-graphnet.models.coarsening"], [47, "module-graphnet.models.components"], [48, "module-graphnet.models.components.layers"], [49, "module-graphnet.models.components.pool"], [50, "module-graphnet.models.detector"], [51, "module-graphnet.models.detector.detector"], [52, "module-graphnet.models.detector.icecube"], [53, "module-graphnet.models.detector.prometheus"], [54, "module-graphnet.models.gnn"], [55, "module-graphnet.models.gnn.convnet"], [56, "module-graphnet.models.gnn.dynedge"], [57, "module-graphnet.models.gnn.dynedge_jinst"], [58, "module-graphnet.models.gnn.dynedge_kaggle_tito"], [59, "module-graphnet.models.gnn.gnn"], [60, "module-graphnet.models.graphs"], [61, "module-graphnet.models.graphs.edges"], [62, "module-graphnet.models.graphs.edges.edges"], [63, "module-graphnet.models.graphs.graph_definition"], [64, "module-graphnet.models.graphs.graphs"], [65, "module-graphnet.models.graphs.nodes"], [66, "module-graphnet.models.graphs.nodes.nodes"], [67, "module-graphnet.models.graphs.utils"], [68, "module-graphnet.models.model"], [69, "module-graphnet.models.standard_model"], [70, "module-graphnet.models.task"], [71, "module-graphnet.models.task.classification"], [72, "module-graphnet.models.task.reconstruction"], [73, "module-graphnet.models.task.task"], [74, "module-graphnet.models.utils"], [75, "module-graphnet.pisa"], [76, "module-graphnet.pisa.fitting"], [77, "module-graphnet.pisa.plotting"], [78, "module-graphnet.training"], [79, "module-graphnet.training.callbacks"], [80, "module-graphnet.training.labels"], [81, "module-graphnet.training.loss_functions"], [82, "module-graphnet.training.utils"], [83, "module-graphnet.training.weight_fitting"], [84, "module-graphnet.utilities"], [85, "module-graphnet.utilities.argparse"], [86, "module-graphnet.utilities.config"], [87, "module-graphnet.utilities.config.base_config"], [88, "module-graphnet.utilities.config.configurable"], [89, "module-graphnet.utilities.config.dataset_config"], [90, "module-graphnet.utilities.config.model_config"], [91, "module-graphnet.utilities.config.parsing"], [92, "module-graphnet.utilities.config.training_config"], [93, "module-graphnet.utilities.decorators"], [94, "module-graphnet.utilities.filesys"], [95, "module-graphnet.utilities.imports"], [96, "module-graphnet.utilities.logging"], [97, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "dataconverter (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.DataConverter"]], "fileset (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.FileSet"]], "cache_output_files() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.cache_output_files"]], "execute() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.execute"]], "file_suffix (graphnet.data.dataconverter.dataconverter property)": [[5, "graphnet.data.dataconverter.DataConverter.file_suffix"]], "gcd_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.gcd_file"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[5, "module-graphnet.data.dataconverter"]], "i3_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.i3_file"]], "init_global_index() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.merge_files"]], "save_data() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.save_data"]], "dataloader (class in graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.DataLoader"]], "collate_fn() (in module graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.collate_fn"]], "do_shuffle() (in module graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.do_shuffle"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[6, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "graphnet.data.dataloader": [[6, "module-graphnet.data.dataloader"]], "graphnet.data.dataset": [[7, "module-graphnet.data.dataset"]], "columnmissingexception": [[8, "graphnet.data.dataset.dataset.ColumnMissingException"]], "dataset (class in graphnet.data.dataset.dataset)": [[8, "graphnet.data.dataset.dataset.Dataset"]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[8, "graphnet.data.dataset.dataset.EnsembleDataset"]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[8, "graphnet.data.dataset.dataset.Dataset.add_label"]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[8, "graphnet.data.dataset.dataset.Dataset.concatenate"]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[8, "graphnet.data.dataset.dataset.Dataset.from_config"]], "graphnet.data.dataset.dataset": [[8, "module-graphnet.data.dataset.dataset"]], "load_module() (in module graphnet.data.dataset.dataset)": [[8, "graphnet.data.dataset.dataset.load_module"]], "parse_graph_definition() (in module graphnet.data.dataset.dataset)": [[8, "graphnet.data.dataset.dataset.parse_graph_definition"]], "path (graphnet.data.dataset.dataset.dataset property)": [[8, "graphnet.data.dataset.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[8, "graphnet.data.dataset.dataset.Dataset.query_table"]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[8, "graphnet.data.dataset.dataset.Dataset.truth_table"]], "graphnet.data.dataset.parquet": [[9, "module-graphnet.data.dataset.parquet"]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[10, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[10, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[10, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table"]], "graphnet.data.dataset.sqlite": [[11, "module-graphnet.data.dataset.sqlite"]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[12, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[12, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[12, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "graphnet.data.extractors": [[13, "module-graphnet.data.extractors"]], "i3extractor (class in graphnet.data.extractors.i3extractor)": [[14, "graphnet.data.extractors.i3extractor.I3Extractor"]], "i3extractorcollection (class in graphnet.data.extractors.i3extractor)": [[14, "graphnet.data.extractors.i3extractor.I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor": [[14, "module-graphnet.data.extractors.i3extractor"]], "name (graphnet.data.extractors.i3extractor.i3extractor property)": [[14, "graphnet.data.extractors.i3extractor.I3Extractor.name"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractor method)": [[14, "graphnet.data.extractors.i3extractor.I3Extractor.set_files"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[14, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.set_files"]], "i3featureextractor (class in graphnet.data.extractors.i3featureextractor)": [[15, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.i3featureextractor)": [[15, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.i3featureextractor)": [[15, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[15, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[15, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3featureextractor": [[15, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.i3genericextractor)": [[16, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.i3genericextractor": [[16, "module-graphnet.data.extractors.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.i3hybridrecoextractor)": [[17, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[17, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.i3ntmuonlabelsextractor)": [[18, "graphnet.data.extractors.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor"]], "graphnet.data.extractors.i3ntmuonlabelsextractor": [[18, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"]], "i3particleextractor (class in graphnet.data.extractors.i3particleextractor)": [[19, "graphnet.data.extractors.i3particleextractor.I3ParticleExtractor"]], "graphnet.data.extractors.i3particleextractor": [[19, "module-graphnet.data.extractors.i3particleextractor"]], "i3pisaextractor (class in graphnet.data.extractors.i3pisaextractor)": [[20, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[20, "module-graphnet.data.extractors.i3pisaextractor"]], "i3quesoextractor (class in graphnet.data.extractors.i3quesoextractor)": [[21, "graphnet.data.extractors.i3quesoextractor.I3QUESOExtractor"]], "graphnet.data.extractors.i3quesoextractor": [[21, "module-graphnet.data.extractors.i3quesoextractor"]], "i3retroextractor (class in graphnet.data.extractors.i3retroextractor)": [[22, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.i3retroextractor": [[22, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.i3splinempeextractor)": [[23, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[23, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.i3truthextractor)": [[24, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.i3truthextractor": [[24, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.i3tumextractor)": [[25, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.i3tumextractor": [[25, "module-graphnet.data.extractors.i3tumextractor"]], "graphnet.data.extractors.utilities": [[26, "module-graphnet.data.extractors.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.utilities.collections)": [[27, "graphnet.data.extractors.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.utilities.collections": [[27, "module-graphnet.data.extractors.utilities.collections"]], "serialise() (in module graphnet.data.extractors.utilities.collections)": [[27, "graphnet.data.extractors.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.utilities.collections)": [[27, "graphnet.data.extractors.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.utilities.frames)": [[28, "graphnet.data.extractors.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.utilities.frames)": [[28, "graphnet.data.extractors.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.utilities.frames)": [[28, "graphnet.data.extractors.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.frames": [[28, "module-graphnet.data.extractors.utilities.frames"]], "break_cyclic_recursion() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.get_member_variables"]], "graphnet.data.extractors.utilities.types": [[29, "module-graphnet.data.extractors.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.is_type"]], "i3filter (class in graphnet.data.filters)": [[30, "graphnet.data.filters.I3Filter"]], "i3filtermask (class in graphnet.data.filters)": [[30, "graphnet.data.filters.I3FilterMask"]], "nullspliti3filter (class in graphnet.data.filters)": [[30, "graphnet.data.filters.NullSplitI3Filter"]], "graphnet.data.filters": [[30, "module-graphnet.data.filters"]], "graphnet.data.parquet": [[31, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.parquet_dataconverter)": [[32, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter"]], "file_suffix (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter attribute)": [[32, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.file_suffix"]], "graphnet.data.parquet.parquet_dataconverter": [[32, "module-graphnet.data.parquet.parquet_dataconverter"]], "merge_files() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[32, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.merge_files"]], "save_data() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[32, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.save_data"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[33, "graphnet.data.pipeline.InSQLitePipeline"]], "graphnet.data.pipeline": [[33, "module-graphnet.data.pipeline"]], "graphnet.data.sqlite": [[34, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.sqlite_dataconverter)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter"]], "any_pulsemap_is_non_empty() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.any_pulsemap_is_non_empty"]], "construct_dataframe() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.construct_dataframe"]], "file_suffix (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter attribute)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.file_suffix"]], "graphnet.data.sqlite.sqlite_dataconverter": [[35, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "is_mc_tree() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.is_mc_tree"]], "is_pulse_map() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.is_pulse_map"]], "merge_files() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.merge_files"]], "save_data() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.save_data"]], "attach_index() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.database_table_exists"]], "graphnet.data.sqlite.sqlite_utilities": [[36, "module-graphnet.data.sqlite.sqlite_utilities"]], "run_sql_code() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.save_to_sql"]], "graphnet.data.utilities": [[37, "module-graphnet.data.utilities"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[38, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite": [[38, "module-graphnet.data.utilities.parquet_to_sqlite"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[38, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.data.utilities.random": [[39, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[39, "graphnet.data.utilities.random.pairwise_shuffle"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[40, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[40, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[40, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.deployment": [[41, "module-graphnet.deployment"]], "graphneti3module (class in graphnet.deployment.i3modules.graphnet_module)": [[44, "graphnet.deployment.i3modules.graphnet_module.GraphNeTI3Module"]], "i3inferencemodule (class in graphnet.deployment.i3modules.graphnet_module)": [[44, "graphnet.deployment.i3modules.graphnet_module.I3InferenceModule"]], "i3pulsecleanermodule (class in graphnet.deployment.i3modules.graphnet_module)": [[44, "graphnet.deployment.i3modules.graphnet_module.I3PulseCleanerModule"]], "graphnet.deployment.i3modules.graphnet_module": [[44, "module-graphnet.deployment.i3modules.graphnet_module"]], "graphnet.models": [[45, "module-graphnet.models"]], "attributecoarsening (class in graphnet.models.coarsening)": [[46, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[46, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[46, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[46, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[46, "graphnet.models.coarsening.DOMCoarsening"]], "forward() (graphnet.models.coarsening.coarsening method)": [[46, "graphnet.models.coarsening.Coarsening.forward"]], "graphnet.models.coarsening": [[46, "module-graphnet.models.coarsening"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[46, "graphnet.models.coarsening.Coarsening.reduce_options"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[46, "graphnet.models.coarsening.unbatch_edge_index"]], "graphnet.models.components": [[47, "module-graphnet.models.components"]], "dynedgeconv (class in graphnet.models.components.layers)": [[48, "graphnet.models.components.layers.DynEdgeConv"]], "dyntrans (class in graphnet.models.components.layers)": [[48, "graphnet.models.components.layers.DynTrans"]], "edgeconvtito (class in graphnet.models.components.layers)": [[48, "graphnet.models.components.layers.EdgeConvTito"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[48, "graphnet.models.components.layers.DynEdgeConv.forward"]], "forward() (graphnet.models.components.layers.dyntrans method)": [[48, "graphnet.models.components.layers.DynTrans.forward"]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[48, "graphnet.models.components.layers.EdgeConvTito.forward"]], "graphnet.models.components.layers": [[48, "module-graphnet.models.components.layers"]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[48, "graphnet.models.components.layers.EdgeConvTito.message"]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[48, "graphnet.models.components.layers.EdgeConvTito.reset_parameters"]], "graphnet.models.components.pool": [[49, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[49, "graphnet.models.components.pool.sum_pool_x"]], "graphnet.models.detector": [[50, "module-graphnet.models.detector"]], "detector (class in graphnet.models.detector.detector)": [[51, "graphnet.models.detector.detector.Detector"]], "feature_map() (graphnet.models.detector.detector.detector method)": [[51, "graphnet.models.detector.detector.Detector.feature_map"]], "forward() (graphnet.models.detector.detector.detector method)": [[51, "graphnet.models.detector.detector.Detector.forward"]], "geometry_table (graphnet.models.detector.detector.detector property)": [[51, "graphnet.models.detector.detector.Detector.geometry_table"]], "graphnet.models.detector.detector": [[51, "module-graphnet.models.detector.detector"]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[51, "graphnet.models.detector.detector.Detector.sensor_index_name"]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[51, "graphnet.models.detector.detector.Detector.sensor_position_names"]], "string_index_name (graphnet.models.detector.detector.detector property)": [[51, "graphnet.models.detector.detector.Detector.string_index_name"]], "icecube86 (class in graphnet.models.detector.icecube)": [[52, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[52, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[52, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[52, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[52, "graphnet.models.detector.icecube.IceCube86.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[52, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[52, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[52, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map"]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[52, "graphnet.models.detector.icecube.IceCube86.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[52, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path"]], "graphnet.models.detector.icecube": [[52, "module-graphnet.models.detector.icecube"]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[52, "graphnet.models.detector.icecube.IceCube86.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[52, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[52, "graphnet.models.detector.icecube.IceCube86.string_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[52, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column"]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[52, "graphnet.models.detector.icecube.IceCube86.xyz"]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[52, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz"]], "orca150 (class in graphnet.models.detector.prometheus)": [[53, "graphnet.models.detector.prometheus.ORCA150"]], "prometheus (class in graphnet.models.detector.prometheus)": [[53, "graphnet.models.detector.prometheus.Prometheus"]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[53, "graphnet.models.detector.prometheus.ORCA150.feature_map"]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[53, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path"]], "graphnet.models.detector.prometheus": [[53, "module-graphnet.models.detector.prometheus"]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[53, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column"]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[53, "graphnet.models.detector.prometheus.ORCA150.string_id_column"]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[53, "graphnet.models.detector.prometheus.ORCA150.xyz"]], "graphnet.models.gnn": [[54, "module-graphnet.models.gnn"]], "convnet (class in graphnet.models.gnn.convnet)": [[55, "graphnet.models.gnn.convnet.ConvNet"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[55, "graphnet.models.gnn.convnet.ConvNet.forward"]], "graphnet.models.gnn.convnet": [[55, "module-graphnet.models.gnn.convnet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[56, "graphnet.models.gnn.dynedge.DynEdge"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[56, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "graphnet.models.gnn.dynedge": [[56, "module-graphnet.models.gnn.dynedge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[57, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[57, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "graphnet.models.gnn.dynedge_jinst": [[57, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[58, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO"]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[58, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[58, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "gnn (class in graphnet.models.gnn.gnn)": [[59, "graphnet.models.gnn.gnn.GNN"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[59, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn.gnn": [[59, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[59, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[59, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "graphnet.models.graphs": [[60, "module-graphnet.models.graphs"]], "graphnet.models.graphs.edges": [[61, "module-graphnet.models.graphs.edges"]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[62, "graphnet.models.graphs.edges.edges.EdgeDefinition"]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[62, "graphnet.models.graphs.edges.edges.EuclideanEdges"]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[62, "graphnet.models.graphs.edges.edges.KNNEdges"]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[62, "graphnet.models.graphs.edges.edges.RadialEdges"]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[62, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward"]], "graphnet.models.graphs.edges.edges": [[62, "module-graphnet.models.graphs.edges.edges"]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[63, "graphnet.models.graphs.graph_definition.GraphDefinition"]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[63, "graphnet.models.graphs.graph_definition.GraphDefinition.forward"]], "graphnet.models.graphs.graph_definition": [[63, "module-graphnet.models.graphs.graph_definition"]], "knngraph (class in graphnet.models.graphs.graphs)": [[64, "graphnet.models.graphs.graphs.KNNGraph"]], "graphnet.models.graphs.graphs": [[64, "module-graphnet.models.graphs.graphs"]], "graphnet.models.graphs.nodes": [[65, "module-graphnet.models.graphs.nodes"]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[66, "graphnet.models.graphs.nodes.nodes.NodeDefinition"]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[66, "graphnet.models.graphs.nodes.nodes.NodesAsPulses"]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[66, "graphnet.models.graphs.nodes.nodes.PercentileClusters"]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[66, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward"]], "graphnet.models.graphs.nodes.nodes": [[66, "module-graphnet.models.graphs.nodes.nodes"]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[66, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs"]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[66, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs"]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[66, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names"]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[67, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles"]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[67, "graphnet.models.graphs.utils.gather_cluster_sequence"]], "graphnet.models.graphs.utils": [[67, "module-graphnet.models.graphs.utils"]], "identify_indices() (in module graphnet.models.graphs.utils)": [[67, "graphnet.models.graphs.utils.identify_indices"]], "lex_sort() (in module graphnet.models.graphs.utils)": [[67, "graphnet.models.graphs.utils.lex_sort"]], "model (class in graphnet.models.model)": [[68, "graphnet.models.model.Model"]], "from_config() (graphnet.models.model.model class method)": [[68, "graphnet.models.model.Model.from_config"]], "graphnet.models.model": [[68, "module-graphnet.models.model"]], "load() (graphnet.models.model.model class method)": [[68, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[68, "graphnet.models.model.Model.load_state_dict"]], "save() (graphnet.models.model.model method)": [[68, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[68, "graphnet.models.model.Model.save_state_dict"]], "standardmodel (class in graphnet.models.standard_model)": [[69, "graphnet.models.standard_model.StandardModel"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[69, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[69, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "fit() (graphnet.models.standard_model.standardmodel method)": [[69, "graphnet.models.standard_model.StandardModel.fit"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[69, "graphnet.models.standard_model.StandardModel.forward"]], "graphnet.models.standard_model": [[69, "module-graphnet.models.standard_model"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[69, "graphnet.models.standard_model.StandardModel.inference"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[69, "graphnet.models.standard_model.StandardModel.predict"]], "predict_as_dataframe() (graphnet.models.standard_model.standardmodel method)": [[69, "graphnet.models.standard_model.StandardModel.predict_as_dataframe"]], "prediction_labels (graphnet.models.standard_model.standardmodel property)": [[69, "graphnet.models.standard_model.StandardModel.prediction_labels"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[69, "graphnet.models.standard_model.StandardModel.shared_step"]], "target_labels (graphnet.models.standard_model.standardmodel property)": [[69, "graphnet.models.standard_model.StandardModel.target_labels"]], "train() (graphnet.models.standard_model.standardmodel method)": [[69, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[69, "graphnet.models.standard_model.StandardModel.training_step"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[69, "graphnet.models.standard_model.StandardModel.validation_step"]], "graphnet.models.task": [[70, "module-graphnet.models.task"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[71, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[71, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[71, "graphnet.models.task.classification.MulticlassClassificationTask"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[71, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[71, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[71, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[71, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels"]], "graphnet.models.task.classification": [[71, "module-graphnet.models.task.classification"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[71, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[71, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[72, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[72, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[72, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[72, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[72, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[72, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[72, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[72, "graphnet.models.task.reconstruction.PositionReconstruction"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[72, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[72, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[72, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[72, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[72, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[72, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[72, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[72, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[72, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[72, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[72, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[72, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[72, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[72, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[72, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[72, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[72, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[72, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[72, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[72, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[72, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[72, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[72, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[72, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[72, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[72, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[72, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[72, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels"]], "graphnet.models.task.reconstruction": [[72, "module-graphnet.models.task.reconstruction"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[72, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[72, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[72, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[72, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[72, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[72, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[72, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[72, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[72, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[72, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[72, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[72, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "identitytask (class in graphnet.models.task.task)": [[73, "graphnet.models.task.task.IdentityTask"]], "task (class in graphnet.models.task.task)": [[73, "graphnet.models.task.task.Task"]], "compute_loss() (graphnet.models.task.task.task method)": [[73, "graphnet.models.task.task.Task.compute_loss"]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[73, "graphnet.models.task.task.IdentityTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.task.task property)": [[73, "graphnet.models.task.task.Task.default_prediction_labels"]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[73, "graphnet.models.task.task.IdentityTask.default_target_labels"]], "default_target_labels (graphnet.models.task.task.task property)": [[73, "graphnet.models.task.task.Task.default_target_labels"]], "forward() (graphnet.models.task.task.task method)": [[73, "graphnet.models.task.task.Task.forward"]], "graphnet.models.task.task": [[73, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[73, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[73, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[73, "graphnet.models.task.task.Task.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[73, "graphnet.models.task.task.Task.train_eval"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[74, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[74, "graphnet.models.utils.calculate_xyzt_homophily"]], "graphnet.models.utils": [[74, "module-graphnet.models.utils"]], "knn_graph_batch() (in module graphnet.models.utils)": [[74, "graphnet.models.utils.knn_graph_batch"]], "graphnet.pisa": [[75, "module-graphnet.pisa"]], "contourfitter (class in graphnet.pisa.fitting)": [[76, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[76, "graphnet.pisa.fitting.WeightFitter"]], "config_updater() (in module graphnet.pisa.fitting)": [[76, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[76, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[76, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[76, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa.fitting": [[76, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[77, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[77, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[77, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[77, "graphnet.pisa.plotting.read_entry"]], "graphnet.training": [[78, "module-graphnet.training"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[79, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[79, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[79, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[79, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[79, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[79, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[79, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[79, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[79, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[79, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[79, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "direction (class in graphnet.training.labels)": [[80, "graphnet.training.labels.Direction"]], "label (class in graphnet.training.labels)": [[80, "graphnet.training.labels.Label"]], "graphnet.training.labels": [[80, "module-graphnet.training.labels"]], "key (graphnet.training.labels.label property)": [[80, "graphnet.training.labels.Label.key"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[81, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[81, "graphnet.training.loss_functions.CrossEntropyLoss"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[81, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.training.loss_functions)": [[81, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[81, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[81, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[81, "graphnet.training.loss_functions.MSELoss"]], "rmseloss (class in graphnet.training.loss_functions)": [[81, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[81, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[81, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[81, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[81, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[81, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[81, "graphnet.training.loss_functions.LossFunction.forward"]], "graphnet.training.loss_functions": [[81, "module-graphnet.training.loss_functions"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[81, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[81, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[81, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "collate_fn() (in module graphnet.training.utils)": [[82, "graphnet.training.utils.collate_fn"]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[82, "graphnet.training.utils.collator_sequence_buckleting"]], "get_predictions() (in module graphnet.training.utils)": [[82, "graphnet.training.utils.get_predictions"]], "graphnet.training.utils": [[82, "module-graphnet.training.utils"]], "make_dataloader() (in module graphnet.training.utils)": [[82, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[82, "graphnet.training.utils.make_train_validation_dataloader"]], "save_results() (in module graphnet.training.utils)": [[82, "graphnet.training.utils.save_results"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[83, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[83, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[83, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[83, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[83, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[84, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[85, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[85, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[85, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[85, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[85, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[85, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[85, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[86, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[87, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[87, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[87, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[87, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[87, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[87, "graphnet.utilities.config.base_config.BaseConfig.load"]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[87, "graphnet.utilities.config.base_config.BaseConfig.model_config"]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[87, "graphnet.utilities.config.base_config.BaseConfig.model_fields"]], "configurable (class in graphnet.utilities.config.configurable)": [[88, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[88, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[88, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[88, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[88, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta"]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta"]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition"]], "graphnet.utilities.config.dataset_config": [[89, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config"]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[89, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[89, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[90, "graphnet.utilities.config.model_config.ModelConfig"]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[90, "graphnet.utilities.config.model_config.ModelConfigSaverABC"]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[90, "graphnet.utilities.config.model_config.ModelConfigSaverMeta"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[90, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[90, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[90, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[90, "module-graphnet.utilities.config.model_config"]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[90, "graphnet.utilities.config.model_config.ModelConfig.model_config"]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[90, "graphnet.utilities.config.model_config.ModelConfig.model_fields"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[90, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[91, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[91, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[91, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[91, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[91, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[91, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[91, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[92, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[92, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[92, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[92, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[92, "module-graphnet.utilities.config.training_config"]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[92, "graphnet.utilities.config.training_config.TrainingConfig.model_config"]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[92, "graphnet.utilities.config.training_config.TrainingConfig.model_fields"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[92, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[93, "module-graphnet.utilities.decorators"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[94, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[94, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[94, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[94, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[94, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[95, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[95, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[95, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[95, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[95, "graphnet.utilities.imports.requires_icecube"]], "logger (class in graphnet.utilities.logging)": [[96, "graphnet.utilities.logging.Logger"]], "repeatfilter (class in graphnet.utilities.logging)": [[96, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.logger method)": [[96, "graphnet.utilities.logging.Logger.critical"]], "debug() (graphnet.utilities.logging.logger method)": [[96, "graphnet.utilities.logging.Logger.debug"]], "error() (graphnet.utilities.logging.logger method)": [[96, "graphnet.utilities.logging.Logger.error"]], "file_handlers (graphnet.utilities.logging.logger property)": [[96, "graphnet.utilities.logging.Logger.file_handlers"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[96, "graphnet.utilities.logging.RepeatFilter.filter"]], "graphnet.utilities.logging": [[96, "module-graphnet.utilities.logging"]], "handlers (graphnet.utilities.logging.logger property)": [[96, "graphnet.utilities.logging.Logger.handlers"]], "info() (graphnet.utilities.logging.logger method)": [[96, "graphnet.utilities.logging.Logger.info"]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[96, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed"]], "setlevel() (graphnet.utilities.logging.logger method)": [[96, "graphnet.utilities.logging.Logger.setLevel"]], "stream_handlers (graphnet.utilities.logging.logger property)": [[96, "graphnet.utilities.logging.Logger.stream_handlers"]], "warning() (graphnet.utilities.logging.logger method)": [[96, "graphnet.utilities.logging.Logger.warning"]], "warning_once() (graphnet.utilities.logging.logger method)": [[96, "graphnet.utilities.logging.Logger.warning_once"]], "eps_like() (in module graphnet.utilities.maths)": [[97, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[97, "module-graphnet.utilities.maths"]]}})