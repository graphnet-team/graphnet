Search.setIndex({"alltitles": {"1) Adding Support for Your Data": [[147, "adding-support-for-your-data"]], "2) Implementing a Detector Class": [[147, "implementing-a-detector-class"]], "Acknowledgements": [[0, "acknowledgements"]], "Adding Your Own Model": [[149, "adding-your-own-model"]], "Adding custom Labels": [[143, "adding-custom-labels"]], "Adding custom truth labels": [[144, "adding-custom-truth-labels"]], "Advanced Functionality in SQLiteDataset": [[144, "advanced-functionality-in-sqlitedataset"]], "Appendix": [[144, "appendix"]], "Choosing a subset of events using selection": [[143, "choosing-a-subset-of-events-using-selection"]], "Code quality": [[141, "code-quality"]], "Combining Multiple Datasets": [[143, "combining-multiple-datasets"], [144, "combining-multiple-datasets"]], "Contents": [[144, "contents"]], "Contributing To GraphNeTgraphnet": [[141, null]], "Conventions": [[141, "conventions"]], "Creating reproducible Datasets using DatasetConfig": [[144, "creating-reproducible-datasets-using-datasetconfig"]], "Creating reproducible Models using ModelConfig": [[144, "creating-reproducible-models-using-modelconfig"]], "Data Conversion in GraphNeTgraphnet": [[142, null]], "DataConverter": [[142, "dataconverter"]], "Dataset": [[143, "dataset"]], "Datasets In GraphNeTgraphnet": [[143, null]], "Example DataConfig": [[144, "example-dataconfig"]], "Example ModelConfig": [[144, "example-modelconfig"]], "Example of geometry table before applying multi-index": [[147, "id1"]], "Example: Energy Reconstruction using ModelConfig": [[149, "example-energy-reconstruction-using-modelconfig"]], "Experiment Tracking": [[149, "experiment-tracking"]], "Extractors": [[142, "extractors"]], "GitHub issues": [[141, "github-issues"]], "GraphDefinition, backbone & Task": [[149, "graphdefinition-backbone-task"]], "GraphNeT tutorial": [[144, null]], "GraphNeTgraphnet": [[145, null], [148, null]], "Implementing a new Dataset": [[143, "implementing-a-new-dataset"]], "Installation": [[146, null]], "Installation in CVMFS (IceCube)": [[146, "installation-in-cvmfs-icecube"]], "Instantiating a StandardModel": [[149, "instantiating-a-standardmodel"]], "Integrating New Experiments into GraphNeTgraphnet": [[147, null]], "Introduction": [[144, "introduction"]], "Model.save": [[149, "model-save"]], "ModelConfig and state_dict": [[149, "modelconfig-and-state-dict"]], "Models In GraphNeTgraphnet": [[149, null]], "Overview of GraphNeT": [[144, "overview-of-graphnet"]], "Pull requests": [[141, "pull-requests"]], "Quick Start": [[146, "quick-start"]], "Readers": [[142, "readers"]], "SQLiteDataset & ParquetDataset": [[143, "sqlitedataset-parquetdataset"]], "SQLiteDataset vs. ParquetDataset": [[143, "sqlitedataset-vs-parquetdataset"]], "Saving, loading, and checkpointing Models": [[149, "saving-loading-and-checkpointing-models"]], "Submodules": [[1, "submodules"], [3, "submodules"], [10, "submodules"], [12, "submodules"], [14, "submodules"], [16, "submodules"], [19, "submodules"], [32, "submodules"], [37, "submodules"], [39, "submodules"], [41, "submodules"], [43, "submodules"], [45, "submodules"], [47, "submodules"], [53, "submodules"], [55, "submodules"], [60, "submodules"], [64, "submodules"], [67, "submodules"], [70, "submodules"], [72, "submodules"], [76, "submodules"], [78, "submodules"], [80, "submodules"], [84, "submodules"], [90, "submodules"], [98, "submodules"], [99, "submodules"], [104, "submodules"], [108, "submodules"], [112, "submodules"], [116, "submodules"], [119, "submodules"], [125, "submodules"], [127, "submodules"]], "Subpackages": [[1, null], [3, "subpackages"], [10, "subpackages"], [16, "subpackages"], [19, "subpackages"], [67, "subpackages"], [78, "subpackages"], [98, "subpackages"], [125, "subpackages"]], "The Model class": [[144, "the-model-class"], [149, "the-model-class"]], "The StandardModel class": [[144, "the-standardmodel-class"], [149, "the-standardmodel-class"]], "Training Syntax for StandardModel": [[149, "training-syntax-for-standardmodel"]], "Usage": [[0, null]], "Using checkpoints": [[149, "using-checkpoints"]], "Writers": [[142, "writers"]], "Writing your own Extractor and GraphNeTFileReader": [[147, "writing-your-own-extractor-and-graphnetfilereader"]], "graphnet.constants module": [[2, null]], "graphnet.data package": [[3, null]], "graphnet.data.constants module": [[4, null]], "graphnet.data.curated_datamodule module": [[5, null]], "graphnet.data.dataclasses module": [[6, null]], "graphnet.data.dataconverter module": [[7, null]], "graphnet.data.dataloader module": [[8, null]], "graphnet.data.datamodule module": [[9, null]], "graphnet.data.dataset package": [[10, null]], "graphnet.data.dataset.dataset module": [[11, null]], "graphnet.data.dataset.parquet package": [[12, null]], "graphnet.data.dataset.parquet.parquet_dataset module": [[13, null]], "graphnet.data.dataset.sqlite package": [[14, null]], "graphnet.data.dataset.sqlite.sqlite_dataset module": [[15, null]], "graphnet.data.extractors package": [[16, null]], "graphnet.data.extractors.combine_extractors module": [[17, null]], "graphnet.data.extractors.extractor module": [[18, null]], "graphnet.data.extractors.icecube package": [[19, null]], "graphnet.data.extractors.icecube.i3extractor module": [[20, null]], "graphnet.data.extractors.icecube.i3featureextractor module": [[21, null]], "graphnet.data.extractors.icecube.i3genericextractor module": [[22, null]], "graphnet.data.extractors.icecube.i3hybridrecoextractor module": [[23, null]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor module": [[24, null]], "graphnet.data.extractors.icecube.i3particleextractor module": [[25, null]], "graphnet.data.extractors.icecube.i3pisaextractor module": [[26, null]], "graphnet.data.extractors.icecube.i3quesoextractor module": [[27, null]], "graphnet.data.extractors.icecube.i3retroextractor module": [[28, null]], "graphnet.data.extractors.icecube.i3splinempeextractor module": [[29, null]], "graphnet.data.extractors.icecube.i3truthextractor module": [[30, null]], "graphnet.data.extractors.icecube.i3tumextractor module": [[31, null]], "graphnet.data.extractors.icecube.utilities package": [[32, null]], "graphnet.data.extractors.icecube.utilities.collections module": [[33, null]], "graphnet.data.extractors.icecube.utilities.frames module": [[34, null]], "graphnet.data.extractors.icecube.utilities.i3_filters module": [[35, null]], "graphnet.data.extractors.icecube.utilities.types module": [[36, null]], "graphnet.data.extractors.internal package": [[37, null]], "graphnet.data.extractors.internal.parquet_extractor module": [[38, null]], "graphnet.data.extractors.liquido package": [[39, null]], "graphnet.data.extractors.liquido.h5_extractor module": [[40, null]], "graphnet.data.extractors.prometheus package": [[41, null]], "graphnet.data.extractors.prometheus.prometheus_extractor module": [[42, null]], "graphnet.data.parquet package": [[43, null]], "graphnet.data.parquet.deprecated_methods module": [[44, null]], "graphnet.data.pre_configured package": [[45, null]], "graphnet.data.pre_configured.dataconverters module": [[46, null]], "graphnet.data.readers package": [[47, null]], "graphnet.data.readers.graphnet_file_reader module": [[48, null]], "graphnet.data.readers.i3reader module": [[49, null]], "graphnet.data.readers.internal_parquet_reader module": [[50, null]], "graphnet.data.readers.liquido_reader module": [[51, null]], "graphnet.data.readers.prometheus_reader module": [[52, null]], "graphnet.data.sqlite package": [[53, null]], "graphnet.data.sqlite.deprecated_methods module": [[54, null]], "graphnet.data.utilities package": [[55, null]], "graphnet.data.utilities.parquet_to_sqlite module": [[56, null]], "graphnet.data.utilities.random module": [[57, null]], "graphnet.data.utilities.sqlite_utilities module": [[58, null]], "graphnet.data.utilities.string_selection_resolver module": [[59, null]], "graphnet.data.writers package": [[60, null]], "graphnet.data.writers.graphnet_writer module": [[61, null]], "graphnet.data.writers.parquet_writer module": [[62, null]], "graphnet.data.writers.sqlite_writer module": [[63, null]], "graphnet.datasets package": [[64, null]], "graphnet.datasets.prometheus_datasets module": [[65, null]], "graphnet.datasets.test_dataset module": [[66, null]], "graphnet.deployment package": [[67, null]], "graphnet.deployment.deployer module": [[68, null]], "graphnet.deployment.deployment_module module": [[69, null]], "graphnet.deployment.i3modules package": [[70, null]], "graphnet.deployment.i3modules.deprecated_methods module": [[71, null]], "graphnet.deployment.icecube package": [[72, null]], "graphnet.deployment.icecube.cleaning_module module": [[73, null]], "graphnet.deployment.icecube.i3deployer module": [[74, null]], "graphnet.deployment.icecube.inference_module module": [[75, null]], "graphnet.exceptions package": [[76, null]], "graphnet.exceptions.exceptions module": [[77, null]], "graphnet.models package": [[78, null]], "graphnet.models.coarsening module": [[79, null]], "graphnet.models.components package": [[80, null]], "graphnet.models.components.embedding module": [[81, null]], "graphnet.models.components.layers module": [[82, null]], "graphnet.models.components.pool module": [[83, null]], "graphnet.models.detector package": [[84, null]], "graphnet.models.detector.detector module": [[85, null]], "graphnet.models.detector.icecube module": [[86, null]], "graphnet.models.detector.liquido module": [[87, null]], "graphnet.models.detector.prometheus module": [[88, null]], "graphnet.models.easy_model module": [[89, null]], "graphnet.models.gnn package": [[90, null]], "graphnet.models.gnn.RNN_tito module": [[91, null]], "graphnet.models.gnn.convnet module": [[92, null]], "graphnet.models.gnn.dynedge module": [[93, null]], "graphnet.models.gnn.dynedge_jinst module": [[94, null]], "graphnet.models.gnn.dynedge_kaggle_tito module": [[95, null]], "graphnet.models.gnn.gnn module": [[96, null]], "graphnet.models.gnn.icemix module": [[97, null]], "graphnet.models.graphs package": [[98, null]], "graphnet.models.graphs.edges package": [[99, null]], "graphnet.models.graphs.edges.edges module": [[100, null]], "graphnet.models.graphs.edges.minkowski module": [[101, null]], "graphnet.models.graphs.graph_definition module": [[102, null]], "graphnet.models.graphs.graphs module": [[103, null]], "graphnet.models.graphs.nodes package": [[104, null]], "graphnet.models.graphs.nodes.nodes module": [[105, null]], "graphnet.models.graphs.utils module": [[106, null]], "graphnet.models.model module": [[107, null]], "graphnet.models.rnn package": [[108, null]], "graphnet.models.rnn.node_rnn module": [[109, null]], "graphnet.models.standard_averaged_model module": [[110, null]], "graphnet.models.standard_model module": [[111, null]], "graphnet.models.task package": [[112, null]], "graphnet.models.task.classification module": [[113, null]], "graphnet.models.task.reconstruction module": [[114, null]], "graphnet.models.task.task module": [[115, null]], "graphnet.models.transformer package": [[116, null]], "graphnet.models.transformer.iseecube module": [[117, null]], "graphnet.models.utils module": [[118, null]], "graphnet.training package": [[119, null]], "graphnet.training.callbacks module": [[120, null]], "graphnet.training.labels module": [[121, null]], "graphnet.training.loss_functions module": [[122, null]], "graphnet.training.utils module": [[123, null]], "graphnet.training.weight_fitting module": [[124, null]], "graphnet.utilities package": [[125, null]], "graphnet.utilities.argparse module": [[126, null]], "graphnet.utilities.config package": [[127, null]], "graphnet.utilities.config.base_config module": [[128, null]], "graphnet.utilities.config.configurable module": [[129, null]], "graphnet.utilities.config.dataset_config module": [[130, null]], "graphnet.utilities.config.model_config module": [[131, null]], "graphnet.utilities.config.parsing module": [[132, null]], "graphnet.utilities.config.training_config module": [[133, null]], "graphnet.utilities.decorators module": [[134, null]], "graphnet.utilities.deprecation_tools module": [[135, null]], "graphnet.utilities.filesys module": [[136, null]], "graphnet.utilities.imports module": [[137, null]], "graphnet.utilities.logging module": [[138, null]], "graphnet.utilities.maths module": [[139, null]], "src": [[140, null]]}, "docnames": ["about/about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.curated_datamodule", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.combine_extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.extractors.liquido", "api/graphnet.data.extractors.liquido.h5_extractor", "api/graphnet.data.extractors.prometheus", "api/graphnet.data.extractors.prometheus.prometheus_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.readers.liquido_reader", "api/graphnet.data.readers.prometheus_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.datasets", "api/graphnet.datasets.prometheus_datasets", "api/graphnet.datasets.test_dataset", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.liquido", "api/graphnet.models.detector.prometheus", "api/graphnet.models.easy_model", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.icemix", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.transformer", "api/graphnet.models.transformer.iseecube", "api/graphnet.models.utils", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute/contribute", "data_conversion/data_conversion", "datasets/datasets", "getting_started/getting_started", "index", "installation/install", "integration/integration", "intro/intro", "models/models", "substitutions"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["about/about.rst", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.curated_datamodule.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.combine_extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.extractors.liquido.rst", "api/graphnet.data.extractors.liquido.h5_extractor.rst", "api/graphnet.data.extractors.prometheus.rst", "api/graphnet.data.extractors.prometheus.prometheus_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.readers.liquido_reader.rst", "api/graphnet.data.readers.prometheus_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.datasets.rst", "api/graphnet.datasets.prometheus_datasets.rst", "api/graphnet.datasets.test_dataset.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.liquido.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.easy_model.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.transformer.rst", "api/graphnet.models.transformer.iseecube.rst", "api/graphnet.models.utils.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute/contribute.rst", "data_conversion/data_conversion.rst", "datasets/datasets.rst", "getting_started/getting_started.md", "index.rst", "installation/install.rst", "integration/integration.rst", "intro/intro.rst", "models/models.rst", "substitutions.rst"], "indexentries": {"accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors", false]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions", false]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[11, "graphnet.data.dataset.dataset.Dataset.add_label", false]], "arca115 (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.ARCA115", false]], "argumentparser (class in graphnet.utilities.argparse)": [[126, "graphnet.utilities.argparse.ArgumentParser", false]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[131, "graphnet.utilities.config.model_config.ModelConfig.arguments", false]], "array_to_sequence() (in module graphnet.models.utils)": [[118, "graphnet.models.utils.array_to_sequence", false]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[128, "graphnet.utilities.config.base_config.BaseConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[131, "graphnet.utilities.config.model_config.ModelConfig.as_dict", false]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.attach_index", false]], "attention_rel (class in graphnet.models.components.layers)": [[82, "graphnet.models.components.layers.Attention_rel", false]], "attributecoarsening (class in graphnet.models.coarsening)": [[79, "graphnet.models.coarsening.AttributeCoarsening", false]], "available_backends (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.available_backends", false]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[114, "graphnet.models.task.reconstruction.AzimuthReconstruction", false]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[114, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa", false]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[122, "graphnet.training.loss_functions.LogCMK.backward", false]], "baikalgvd8 (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.BaikalGVD8", false]], "baikalgvdsmall (class in graphnet.datasets.prometheus_datasets)": [[65, "graphnet.datasets.prometheus_datasets.BaikalGVDSmall", false]], "baseconfig (class in graphnet.utilities.config.base_config)": [[128, "graphnet.utilities.config.base_config.BaseConfig", false]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[113, "graphnet.models.task.classification.BinaryClassificationTask", false]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[113, "graphnet.models.task.classification.BinaryClassificationTaskLogits", false]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[122, "graphnet.training.loss_functions.BinaryCrossEntropyLoss", false]], "bjoernlow (class in graphnet.training.weight_fitting)": [[124, "graphnet.training.weight_fitting.BjoernLow", false]], "block (class in graphnet.models.components.layers)": [[82, "graphnet.models.components.layers.Block", false]], "block_rel (class in graphnet.models.components.layers)": [[82, "graphnet.models.components.layers.Block_rel", false]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion", false]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[118, "graphnet.models.utils.calculate_distance_matrix", false]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[118, "graphnet.models.utils.calculate_xyzt_homophily", false]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python", false]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python", false]], "citation (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.citation", false]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[131, "graphnet.utilities.config.model_config.ModelConfig.class_name", false]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[109, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object", false]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[106, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles", false]], "coarsening (class in graphnet.models.coarsening)": [[79, "graphnet.models.coarsening.Coarsening", false]], "collate_fn() (in module graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.collate_fn", false]], "collate_fn() (in module graphnet.training.utils)": [[123, "graphnet.training.utils.collate_fn", false]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[123, "graphnet.training.utils.collator_sequence_buckleting", false]], "columnmissingexception": [[77, "graphnet.exceptions.exceptions.ColumnMissingException", false]], "combinedextractor (class in graphnet.data.extractors.combine_extractors)": [[17, "graphnet.data.extractors.combine_extractors.CombinedExtractor", false]], "comments (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.comments", false]], "compute_loss() (graphnet.models.easy_model.easysyntax method)": [[89, "graphnet.models.easy_model.EasySyntax.compute_loss", false]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[111, "graphnet.models.standard_model.StandardModel.compute_loss", false]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[115, "graphnet.models.task.task.LearnedTask.compute_loss", false]], "compute_loss() (graphnet.models.task.task.standardflowtask method)": [[115, "graphnet.models.task.task.StandardFlowTask.compute_loss", false]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[115, "graphnet.models.task.task.StandardLearnedTask.compute_loss", false]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[101, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat", false]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[11, "graphnet.data.dataset.dataset.Dataset.concatenate", false]], "config (graphnet.utilities.config.configurable.configurable property)": [[129, "graphnet.utilities.config.configurable.Configurable.config", false]], "configurable (class in graphnet.utilities.config.configurable)": [[129, "graphnet.utilities.config.configurable.Configurable", false]], "configure_optimizers() (graphnet.models.easy_model.easysyntax method)": [[89, "graphnet.models.easy_model.EasySyntax.configure_optimizers", false]], "contains() (graphnet.utilities.argparse.options method)": [[126, "graphnet.utilities.argparse.Options.contains", false]], "convnet (class in graphnet.models.gnn.convnet)": [[92, "graphnet.models.gnn.convnet.ConvNet", false]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.create_table", false]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql", false]], "creator (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.creator", false]], "critical() (graphnet.utilities.logging.logger method)": [[138, "graphnet.utilities.logging.Logger.critical", false]], "crossentropyloss (class in graphnet.training.loss_functions)": [[122, "graphnet.training.loss_functions.CrossEntropyLoss", false]], "curateddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.CuratedDataset", false]], "customdomcoarsening (class in graphnet.models.coarsening)": [[79, "graphnet.models.coarsening.CustomDOMCoarsening", false]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.database_exists", false]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.database_table_exists", false]], "dataconverter (class in graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.DataConverter", false]], "dataloader (class in graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.DataLoader", false]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[133, "graphnet.utilities.config.training_config.TrainingConfig.dataloader", false]], "dataset (class in graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.Dataset", false]], "dataset_dir (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.dataset_dir", false]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig", false]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta", false]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta", false]], "debug() (graphnet.utilities.logging.logger method)": [[138, "graphnet.utilities.logging.Logger.debug", false]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE", false]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE", false]], "deepice (class in graphnet.models.gnn.icemix)": [[97, "graphnet.models.gnn.icemix.DeepIce", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[113, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[113, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[114, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[114, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[114, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[114, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[114, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[114, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[115, "graphnet.models.task.task.IdentityTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.task property)": [[115, "graphnet.models.task.task.Task.default_prediction_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[113, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[113, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[114, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[114, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[114, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[114, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[114, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[114, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[115, "graphnet.models.task.task.IdentityTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.task property)": [[115, "graphnet.models.task.task.Task.default_target_labels", false]], "deployer (class in graphnet.deployment.deployer)": [[68, "graphnet.deployment.deployer.Deployer", false]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[69, "graphnet.deployment.deployment_module.DeploymentModule", false]], "description() (graphnet.data.curated_datamodule.curateddataset method)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.description", false]], "detector (class in graphnet.models.detector.detector)": [[85, "graphnet.models.detector.detector.Detector", false]], "direction (class in graphnet.training.labels)": [[121, "graphnet.training.labels.Direction", false]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[114, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa", false]], "do_shuffle() (in module graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.do_shuffle", false]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[79, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening", false]], "domcoarsening (class in graphnet.models.coarsening)": [[79, "graphnet.models.coarsening.DOMCoarsening", false]], "droppath (class in graphnet.models.components.layers)": [[82, "graphnet.models.components.layers.DropPath", false]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[128, "graphnet.utilities.config.base_config.BaseConfig.dump", false]], "dynedge (class in graphnet.models.gnn.dynedge)": [[93, "graphnet.models.gnn.dynedge.DynEdge", false]], "dynedgeconv (class in graphnet.models.components.layers)": [[82, "graphnet.models.components.layers.DynEdgeConv", false]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[94, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST", false]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[95, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO", false]], "dyntrans (class in graphnet.models.components.layers)": [[82, "graphnet.models.components.layers.DynTrans", false]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[133, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience", false]], "easysyntax (class in graphnet.models.easy_model)": [[89, "graphnet.models.easy_model.EasySyntax", false]], "edgeconvtito (class in graphnet.models.components.layers)": [[82, "graphnet.models.components.layers.EdgeConvTito", false]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[100, "graphnet.models.graphs.edges.edges.EdgeDefinition", false]], "edgelessgraph (class in graphnet.models.graphs.graphs)": [[103, "graphnet.models.graphs.graphs.EdgelessGraph", false]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[114, "graphnet.models.task.reconstruction.EnergyReconstruction", false]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[114, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower", false]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[114, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty", false]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[114, "graphnet.models.task.reconstruction.EnergyTCReconstruction", false]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.EnsembleDataset", false]], "ensembleloss (class in graphnet.training.loss_functions)": [[122, "graphnet.training.loss_functions.EnsembleLoss", false]], "eps_like() (in module graphnet.utilities.maths)": [[139, "graphnet.utilities.maths.eps_like", false]], "erdahosteddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.ERDAHostedDataset", false]], "error() (graphnet.utilities.logging.logger method)": [[138, "graphnet.utilities.logging.Logger.error", false]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[122, "graphnet.training.loss_functions.EuclideanDistanceLoss", false]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[100, "graphnet.models.graphs.edges.edges.EuclideanEdges", false]], "event_truth (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.event_truth", false]], "events (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.events", false]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[61, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes", false]], "experiment (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.experiment", false]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[82, "graphnet.models.components.layers.DropPath.extra_repr", false]], "extra_repr() (graphnet.models.model.model method)": [[107, "graphnet.models.model.Model.extra_repr", false]], "extra_repr_recursive() (graphnet.models.model.model method)": [[107, "graphnet.models.model.Model.extra_repr_recursive", false]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names", false]], "extractor (class in graphnet.data.extractors.extractor)": [[18, "graphnet.data.extractors.extractor.Extractor", false]], "feature_map() (graphnet.models.detector.detector.detector method)": [[85, "graphnet.models.detector.detector.Detector.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[86, "graphnet.models.detector.icecube.IceCube86.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[86, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[86, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[86, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map", false]], "feature_map() (graphnet.models.detector.liquido.liquido_v1 method)": [[87, "graphnet.models.detector.liquido.LiquidO_v1.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.arca115 method)": [[88, "graphnet.models.detector.prometheus.ARCA115.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.baikalgvd8 method)": [[88, "graphnet.models.detector.prometheus.BaikalGVD8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecube86prometheus method)": [[88, "graphnet.models.detector.prometheus.IceCube86Prometheus.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubedeepcore8 method)": [[88, "graphnet.models.detector.prometheus.IceCubeDeepCore8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubegen2 method)": [[88, "graphnet.models.detector.prometheus.IceCubeGen2.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubeupgrade7 method)": [[88, "graphnet.models.detector.prometheus.IceCubeUpgrade7.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icedemo81 method)": [[88, "graphnet.models.detector.prometheus.IceDemo81.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[88, "graphnet.models.detector.prometheus.ORCA150.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150superdense method)": [[88, "graphnet.models.detector.prometheus.ORCA150SuperDense.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.ponetriangle method)": [[88, "graphnet.models.detector.prometheus.PONETriangle.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.trident1211 method)": [[88, "graphnet.models.detector.prometheus.TRIDENT1211.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.waterdemo81 method)": [[88, "graphnet.models.detector.prometheus.WaterDemo81.feature_map", false]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES", false]], "features (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.features", false]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.features", false]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[61, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension", false]], "file_handlers (graphnet.utilities.logging.logger property)": [[138, "graphnet.utilities.logging.Logger.file_handlers", false]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[138, "graphnet.utilities.logging.RepeatFilter.filter", false]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files", false]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[49, "graphnet.data.readers.i3reader.I3Reader.find_files", false]], "find_files() (graphnet.data.readers.internal_parquet_reader.parquetreader method)": [[50, "graphnet.data.readers.internal_parquet_reader.ParquetReader.find_files", false]], "find_files() (graphnet.data.readers.liquido_reader.liquidoreader method)": [[51, "graphnet.data.readers.liquido_reader.LiquidOReader.find_files", false]], "find_files() (graphnet.data.readers.prometheus_reader.prometheusreader method)": [[52, "graphnet.data.readers.prometheus_reader.PrometheusReader.find_files", false]], "find_i3_files() (in module graphnet.utilities.filesys)": [[136, "graphnet.utilities.filesys.find_i3_files", false]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[133, "graphnet.utilities.config.training_config.TrainingConfig.fit", false]], "fit() (graphnet.models.easy_model.easysyntax method)": [[89, "graphnet.models.easy_model.EasySyntax.fit", false]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[124, "graphnet.training.weight_fitting.WeightFitter.fit", false]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[33, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary", false]], "forward() (graphnet.models.coarsening.coarsening method)": [[79, "graphnet.models.coarsening.Coarsening.forward", false]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[81, "graphnet.models.components.embedding.FourierEncoder.forward", false]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[81, "graphnet.models.components.embedding.SinusoidalPosEmb.forward", false]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[81, "graphnet.models.components.embedding.SpacetimeEncoder.forward", false]], "forward() (graphnet.models.components.layers.attention_rel method)": [[82, "graphnet.models.components.layers.Attention_rel.forward", false]], "forward() (graphnet.models.components.layers.block method)": [[82, "graphnet.models.components.layers.Block.forward", false]], "forward() (graphnet.models.components.layers.block_rel method)": [[82, "graphnet.models.components.layers.Block_rel.forward", false]], "forward() (graphnet.models.components.layers.droppath method)": [[82, "graphnet.models.components.layers.DropPath.forward", false]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[82, "graphnet.models.components.layers.DynEdgeConv.forward", false]], "forward() (graphnet.models.components.layers.dyntrans method)": [[82, "graphnet.models.components.layers.DynTrans.forward", false]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[82, "graphnet.models.components.layers.EdgeConvTito.forward", false]], "forward() (graphnet.models.components.layers.mlp method)": [[82, "graphnet.models.components.layers.Mlp.forward", false]], "forward() (graphnet.models.detector.detector.detector method)": [[85, "graphnet.models.detector.detector.Detector.forward", false]], "forward() (graphnet.models.easy_model.easysyntax method)": [[89, "graphnet.models.easy_model.EasySyntax.forward", false]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[92, "graphnet.models.gnn.convnet.ConvNet.forward", false]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[93, "graphnet.models.gnn.dynedge.DynEdge.forward", false]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[94, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward", false]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[95, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward", false]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[96, "graphnet.models.gnn.gnn.GNN.forward", false]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[97, "graphnet.models.gnn.icemix.DeepIce.forward", false]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[91, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward", false]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[100, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward", false]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[102, "graphnet.models.graphs.graph_definition.GraphDefinition.forward", false]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[105, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward", false]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[109, "graphnet.models.rnn.node_rnn.Node_RNN.forward", false]], "forward() (graphnet.models.standard_model.standardmodel method)": [[111, "graphnet.models.standard_model.StandardModel.forward", false]], "forward() (graphnet.models.task.task.learnedtask method)": [[115, "graphnet.models.task.task.LearnedTask.forward", false]], "forward() (graphnet.models.task.task.standardflowtask method)": [[115, "graphnet.models.task.task.StandardFlowTask.forward", false]], "forward() (graphnet.models.transformer.iseecube.iseecube method)": [[117, "graphnet.models.transformer.iseecube.ISeeCube.forward", false]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[122, "graphnet.training.loss_functions.LogCMK.forward", false]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[122, "graphnet.training.loss_functions.LossFunction.forward", false]], "fourierencoder (class in graphnet.models.components.embedding)": [[81, "graphnet.models.components.embedding.FourierEncoder", false]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[34, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo", false]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[34, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise", false]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[11, "graphnet.data.dataset.dataset.Dataset.from_config", false]], "from_config() (graphnet.models.model.model class method)": [[107, "graphnet.models.model.Model.from_config", false]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[129, "graphnet.utilities.config.configurable.Configurable.from_config", false]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[8, "graphnet.data.dataloader.DataLoader.from_dataset_config", false]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[106, "graphnet.models.graphs.utils.gather_cluster_sequence", false]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.gcd_file", false]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.gcd_file", false]], "geometry_table (graphnet.models.detector.detector.detector property)": [[85, "graphnet.models.detector.detector.Detector.geometry_table", false]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[86, "graphnet.models.detector.icecube.IceCube86.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubekaggle attribute)": [[86, "graphnet.models.detector.icecube.IceCubeKaggle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[86, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.liquido.liquido_v1 attribute)": [[87, "graphnet.models.detector.liquido.LiquidO_v1.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.arca115 attribute)": [[88, "graphnet.models.detector.prometheus.ARCA115.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[88, "graphnet.models.detector.prometheus.BaikalGVD8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[88, "graphnet.models.detector.prometheus.IceCube86Prometheus.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeDeepCore8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeGen2.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeUpgrade7.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icedemo81 attribute)": [[88, "graphnet.models.detector.prometheus.IceDemo81.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[88, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150superdense attribute)": [[88, "graphnet.models.detector.prometheus.ORCA150SuperDense.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.ponetriangle attribute)": [[88, "graphnet.models.detector.prometheus.PONETriangle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.trident1211 attribute)": [[88, "graphnet.models.detector.prometheus.TRIDENT1211.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[88, "graphnet.models.detector.prometheus.WaterDemo81.geometry_table_path", false]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[128, "graphnet.utilities.config.base_config.get_all_argument_values", false]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[132, "graphnet.utilities.config.parsing.get_all_grapnet_classes", false]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[132, "graphnet.utilities.config.parsing.get_graphnet_classes", false]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[120, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr", false]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.get_map_function", false]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.get_member_variables", false]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[120, "graphnet.training.callbacks.ProgressBar.get_metrics", false]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[34, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries", false]], "get_predictions() (in module graphnet.training.utils)": [[123, "graphnet.training.utils.get_predictions", false]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.get_primary_keys", false]], "gnn (class in graphnet.models.gnn.gnn)": [[96, "graphnet.models.gnn.gnn.GNN", false]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition", false]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[102, "graphnet.models.graphs.graph_definition.GraphDefinition", false]], "graphnet": [[1, "module-graphnet", false]], "graphnet.constants": [[2, "module-graphnet.constants", false]], "graphnet.data": [[3, "module-graphnet.data", false]], "graphnet.data.constants": [[4, "module-graphnet.data.constants", false]], "graphnet.data.curated_datamodule": [[5, "module-graphnet.data.curated_datamodule", false]], "graphnet.data.dataclasses": [[6, "module-graphnet.data.dataclasses", false]], "graphnet.data.dataconverter": [[7, "module-graphnet.data.dataconverter", false]], "graphnet.data.dataloader": [[8, "module-graphnet.data.dataloader", false]], "graphnet.data.datamodule": [[9, "module-graphnet.data.datamodule", false]], "graphnet.data.dataset": [[10, "module-graphnet.data.dataset", false]], "graphnet.data.dataset.dataset": [[11, "module-graphnet.data.dataset.dataset", false]], "graphnet.data.dataset.parquet": [[12, "module-graphnet.data.dataset.parquet", false]], "graphnet.data.dataset.parquet.parquet_dataset": [[13, "module-graphnet.data.dataset.parquet.parquet_dataset", false]], "graphnet.data.dataset.sqlite": [[14, "module-graphnet.data.dataset.sqlite", false]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[15, "module-graphnet.data.dataset.sqlite.sqlite_dataset", false]], "graphnet.data.extractors": [[16, "module-graphnet.data.extractors", false]], "graphnet.data.extractors.combine_extractors": [[17, "module-graphnet.data.extractors.combine_extractors", false]], "graphnet.data.extractors.extractor": [[18, "module-graphnet.data.extractors.extractor", false]], "graphnet.data.extractors.icecube": [[19, "module-graphnet.data.extractors.icecube", false]], "graphnet.data.extractors.icecube.i3extractor": [[20, "module-graphnet.data.extractors.icecube.i3extractor", false]], "graphnet.data.extractors.icecube.i3featureextractor": [[21, "module-graphnet.data.extractors.icecube.i3featureextractor", false]], "graphnet.data.extractors.icecube.i3genericextractor": [[22, "module-graphnet.data.extractors.icecube.i3genericextractor", false]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[23, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[24, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false]], "graphnet.data.extractors.icecube.i3particleextractor": [[25, "module-graphnet.data.extractors.icecube.i3particleextractor", false]], "graphnet.data.extractors.icecube.i3pisaextractor": [[26, "module-graphnet.data.extractors.icecube.i3pisaextractor", false]], "graphnet.data.extractors.icecube.i3quesoextractor": [[27, "module-graphnet.data.extractors.icecube.i3quesoextractor", false]], "graphnet.data.extractors.icecube.i3retroextractor": [[28, "module-graphnet.data.extractors.icecube.i3retroextractor", false]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[29, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false]], "graphnet.data.extractors.icecube.i3truthextractor": [[30, "module-graphnet.data.extractors.icecube.i3truthextractor", false]], "graphnet.data.extractors.icecube.i3tumextractor": [[31, "module-graphnet.data.extractors.icecube.i3tumextractor", false]], "graphnet.data.extractors.icecube.utilities": [[32, "module-graphnet.data.extractors.icecube.utilities", false]], "graphnet.data.extractors.icecube.utilities.collections": [[33, "module-graphnet.data.extractors.icecube.utilities.collections", false]], "graphnet.data.extractors.icecube.utilities.frames": [[34, "module-graphnet.data.extractors.icecube.utilities.frames", false]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[35, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false]], "graphnet.data.extractors.icecube.utilities.types": [[36, "module-graphnet.data.extractors.icecube.utilities.types", false]], "graphnet.data.extractors.internal": [[37, "module-graphnet.data.extractors.internal", false]], "graphnet.data.extractors.internal.parquet_extractor": [[38, "module-graphnet.data.extractors.internal.parquet_extractor", false]], "graphnet.data.extractors.liquido": [[39, "module-graphnet.data.extractors.liquido", false]], "graphnet.data.extractors.liquido.h5_extractor": [[40, "module-graphnet.data.extractors.liquido.h5_extractor", false]], "graphnet.data.extractors.prometheus": [[41, "module-graphnet.data.extractors.prometheus", false]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[42, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false]], "graphnet.data.parquet": [[43, "module-graphnet.data.parquet", false]], "graphnet.data.parquet.deprecated_methods": [[44, "module-graphnet.data.parquet.deprecated_methods", false]], "graphnet.data.pre_configured": [[45, "module-graphnet.data.pre_configured", false]], "graphnet.data.pre_configured.dataconverters": [[46, "module-graphnet.data.pre_configured.dataconverters", false]], "graphnet.data.readers": [[47, "module-graphnet.data.readers", false]], "graphnet.data.readers.graphnet_file_reader": [[48, "module-graphnet.data.readers.graphnet_file_reader", false]], "graphnet.data.readers.i3reader": [[49, "module-graphnet.data.readers.i3reader", false]], "graphnet.data.readers.internal_parquet_reader": [[50, "module-graphnet.data.readers.internal_parquet_reader", false]], "graphnet.data.readers.liquido_reader": [[51, "module-graphnet.data.readers.liquido_reader", false]], "graphnet.data.readers.prometheus_reader": [[52, "module-graphnet.data.readers.prometheus_reader", false]], "graphnet.data.sqlite": [[53, "module-graphnet.data.sqlite", false]], "graphnet.data.sqlite.deprecated_methods": [[54, "module-graphnet.data.sqlite.deprecated_methods", false]], "graphnet.data.utilities": [[55, "module-graphnet.data.utilities", false]], "graphnet.data.utilities.parquet_to_sqlite": [[56, "module-graphnet.data.utilities.parquet_to_sqlite", false]], "graphnet.data.utilities.random": [[57, "module-graphnet.data.utilities.random", false]], "graphnet.data.utilities.sqlite_utilities": [[58, "module-graphnet.data.utilities.sqlite_utilities", false]], "graphnet.data.utilities.string_selection_resolver": [[59, "module-graphnet.data.utilities.string_selection_resolver", false]], "graphnet.data.writers": [[60, "module-graphnet.data.writers", false]], "graphnet.data.writers.graphnet_writer": [[61, "module-graphnet.data.writers.graphnet_writer", false]], "graphnet.data.writers.parquet_writer": [[62, "module-graphnet.data.writers.parquet_writer", false]], "graphnet.data.writers.sqlite_writer": [[63, "module-graphnet.data.writers.sqlite_writer", false]], "graphnet.datasets": [[64, "module-graphnet.datasets", false]], "graphnet.datasets.prometheus_datasets": [[65, "module-graphnet.datasets.prometheus_datasets", false]], "graphnet.datasets.test_dataset": [[66, "module-graphnet.datasets.test_dataset", false]], "graphnet.deployment": [[67, "module-graphnet.deployment", false]], "graphnet.deployment.deployer": [[68, "module-graphnet.deployment.deployer", false]], "graphnet.deployment.deployment_module": [[69, "module-graphnet.deployment.deployment_module", false]], "graphnet.deployment.icecube.cleaning_module": [[73, "module-graphnet.deployment.icecube.cleaning_module", false]], "graphnet.deployment.icecube.inference_module": [[75, "module-graphnet.deployment.icecube.inference_module", false]], "graphnet.exceptions": [[76, "module-graphnet.exceptions", false]], "graphnet.exceptions.exceptions": [[77, "module-graphnet.exceptions.exceptions", false]], "graphnet.models": [[78, "module-graphnet.models", false]], "graphnet.models.coarsening": [[79, "module-graphnet.models.coarsening", false]], "graphnet.models.components": [[80, "module-graphnet.models.components", false]], "graphnet.models.components.embedding": [[81, "module-graphnet.models.components.embedding", false]], "graphnet.models.components.layers": [[82, "module-graphnet.models.components.layers", false]], "graphnet.models.components.pool": [[83, "module-graphnet.models.components.pool", false]], "graphnet.models.detector": [[84, "module-graphnet.models.detector", false]], "graphnet.models.detector.detector": [[85, "module-graphnet.models.detector.detector", false]], "graphnet.models.detector.icecube": [[86, "module-graphnet.models.detector.icecube", false]], "graphnet.models.detector.liquido": [[87, "module-graphnet.models.detector.liquido", false]], "graphnet.models.detector.prometheus": [[88, "module-graphnet.models.detector.prometheus", false]], "graphnet.models.easy_model": [[89, "module-graphnet.models.easy_model", false]], "graphnet.models.gnn": [[90, "module-graphnet.models.gnn", false]], "graphnet.models.gnn.convnet": [[92, "module-graphnet.models.gnn.convnet", false]], "graphnet.models.gnn.dynedge": [[93, "module-graphnet.models.gnn.dynedge", false]], "graphnet.models.gnn.dynedge_jinst": [[94, "module-graphnet.models.gnn.dynedge_jinst", false]], "graphnet.models.gnn.dynedge_kaggle_tito": [[95, "module-graphnet.models.gnn.dynedge_kaggle_tito", false]], "graphnet.models.gnn.gnn": [[96, "module-graphnet.models.gnn.gnn", false]], "graphnet.models.gnn.icemix": [[97, "module-graphnet.models.gnn.icemix", false]], "graphnet.models.gnn.rnn_tito": [[91, "module-graphnet.models.gnn.RNN_tito", false]], "graphnet.models.graphs": [[98, "module-graphnet.models.graphs", false]], "graphnet.models.graphs.edges": [[99, "module-graphnet.models.graphs.edges", false]], "graphnet.models.graphs.edges.edges": [[100, "module-graphnet.models.graphs.edges.edges", false]], "graphnet.models.graphs.edges.minkowski": [[101, "module-graphnet.models.graphs.edges.minkowski", false]], "graphnet.models.graphs.graph_definition": [[102, "module-graphnet.models.graphs.graph_definition", false]], "graphnet.models.graphs.graphs": [[103, "module-graphnet.models.graphs.graphs", false]], "graphnet.models.graphs.nodes": [[104, "module-graphnet.models.graphs.nodes", false]], "graphnet.models.graphs.nodes.nodes": [[105, "module-graphnet.models.graphs.nodes.nodes", false]], "graphnet.models.graphs.utils": [[106, "module-graphnet.models.graphs.utils", false]], "graphnet.models.model": [[107, "module-graphnet.models.model", false]], "graphnet.models.rnn": [[108, "module-graphnet.models.rnn", false]], "graphnet.models.rnn.node_rnn": [[109, "module-graphnet.models.rnn.node_rnn", false]], "graphnet.models.standard_averaged_model": [[110, "module-graphnet.models.standard_averaged_model", false]], "graphnet.models.standard_model": [[111, "module-graphnet.models.standard_model", false]], "graphnet.models.task": [[112, "module-graphnet.models.task", false]], "graphnet.models.task.classification": [[113, "module-graphnet.models.task.classification", false]], "graphnet.models.task.reconstruction": [[114, "module-graphnet.models.task.reconstruction", false]], "graphnet.models.task.task": [[115, "module-graphnet.models.task.task", false]], "graphnet.models.transformer": [[116, "module-graphnet.models.transformer", false]], "graphnet.models.transformer.iseecube": [[117, "module-graphnet.models.transformer.iseecube", false]], "graphnet.models.utils": [[118, "module-graphnet.models.utils", false]], "graphnet.training": [[119, "module-graphnet.training", false]], "graphnet.training.callbacks": [[120, "module-graphnet.training.callbacks", false]], "graphnet.training.labels": [[121, "module-graphnet.training.labels", false]], "graphnet.training.loss_functions": [[122, "module-graphnet.training.loss_functions", false]], "graphnet.training.utils": [[123, "module-graphnet.training.utils", false]], "graphnet.training.weight_fitting": [[124, "module-graphnet.training.weight_fitting", false]], "graphnet.utilities": [[125, "module-graphnet.utilities", false]], "graphnet.utilities.argparse": [[126, "module-graphnet.utilities.argparse", false]], "graphnet.utilities.config": [[127, "module-graphnet.utilities.config", false]], "graphnet.utilities.config.base_config": [[128, "module-graphnet.utilities.config.base_config", false]], "graphnet.utilities.config.configurable": [[129, "module-graphnet.utilities.config.configurable", false]], "graphnet.utilities.config.dataset_config": [[130, "module-graphnet.utilities.config.dataset_config", false]], "graphnet.utilities.config.model_config": [[131, "module-graphnet.utilities.config.model_config", false]], "graphnet.utilities.config.parsing": [[132, "module-graphnet.utilities.config.parsing", false]], "graphnet.utilities.config.training_config": [[133, "module-graphnet.utilities.config.training_config", false]], "graphnet.utilities.decorators": [[134, "module-graphnet.utilities.decorators", false]], "graphnet.utilities.deprecation_tools": [[135, "module-graphnet.utilities.deprecation_tools", false]], "graphnet.utilities.filesys": [[136, "module-graphnet.utilities.filesys", false]], "graphnet.utilities.imports": [[137, "module-graphnet.utilities.imports", false]], "graphnet.utilities.logging": [[138, "module-graphnet.utilities.logging", false]], "graphnet.utilities.maths": [[139, "module-graphnet.utilities.maths", false]], "graphnetdatamodule (class in graphnet.data.datamodule)": [[9, "graphnet.data.datamodule.GraphNeTDataModule", false]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[120, "graphnet.training.callbacks.GraphnetEarlyStopping", false]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader", false]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[61, "graphnet.data.writers.graphnet_writer.GraphNeTWriter", false]], "group_by() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.group_by", false]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.group_pulses_to_dom", false]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.group_pulses_to_pmt", false]], "h5extractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[40, "graphnet.data.extractors.liquido.h5_extractor.H5Extractor", false]], "h5hitextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[40, "graphnet.data.extractors.liquido.h5_extractor.H5HitExtractor", false]], "h5truthextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[40, "graphnet.data.extractors.liquido.h5_extractor.H5TruthExtractor", false]], "handlers (graphnet.utilities.logging.logger property)": [[138, "graphnet.utilities.logging.Logger.handlers", false]], "has_extension() (in module graphnet.utilities.filesys)": [[136, "graphnet.utilities.filesys.has_extension", false]], "has_icecube_package() (in module graphnet.utilities.imports)": [[137, "graphnet.utilities.imports.has_icecube_package", false]], "has_torch_package() (in module graphnet.utilities.imports)": [[137, "graphnet.utilities.imports.has_torch_package", false]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.i3_file", false]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.i3_files", false]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[20, "graphnet.data.extractors.icecube.i3extractor.I3Extractor", false]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor", false]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86", false]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore", false]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade", false]], "i3fileset (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.I3FileSet", false]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[35, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter", false]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[35, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask", false]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[23, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor", false]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[22, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor", false]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[75, "graphnet.deployment.icecube.inference_module.I3InferenceModule", false]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[24, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor", false]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[25, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor", false]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[26, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor", false]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[73, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule", false]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade", false]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[27, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor", false]], "i3reader (class in graphnet.data.readers.i3reader)": [[49, "graphnet.data.readers.i3reader.I3Reader", false]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[28, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor", false]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[29, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor", false]], "i3toparquetconverter (class in graphnet.data.pre_configured.dataconverters)": [[46, "graphnet.data.pre_configured.dataconverters.I3ToParquetConverter", false]], "i3tosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[46, "graphnet.data.pre_configured.dataconverters.I3ToSQLiteConverter", false]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[30, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor", false]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[31, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor", false]], "ice_transparency() (in module graphnet.models.graphs.utils)": [[106, "graphnet.models.graphs.utils.ice_transparency", false]], "icecube86 (class in graphnet.models.detector.icecube)": [[86, "graphnet.models.detector.icecube.IceCube86", false]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86", false]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86", false]], "icecube86prometheus (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.IceCube86Prometheus", false]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[86, "graphnet.models.detector.icecube.IceCubeDeepCore", false]], "icecubedeepcore8 (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.IceCubeDeepCore8", false]], "icecubegen2 (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.IceCubeGen2", false]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[86, "graphnet.models.detector.icecube.IceCubeKaggle", false]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[86, "graphnet.models.detector.icecube.IceCubeUpgrade", false]], "icecubeupgrade7 (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.IceCubeUpgrade7", false]], "icedemo81 (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.IceDemo81", false]], "icemixnodes (class in graphnet.models.graphs.nodes.nodes)": [[105, "graphnet.models.graphs.nodes.nodes.IceMixNodes", false]], "identify_indices() (in module graphnet.models.graphs.utils)": [[106, "graphnet.models.graphs.utils.identify_indices", false]], "identitytask (class in graphnet.models.task.task)": [[115, "graphnet.models.task.task.IdentityTask", false]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column", false]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[114, "graphnet.models.task.reconstruction.InelasticityReconstruction", false]], "inference() (graphnet.models.easy_model.easysyntax method)": [[89, "graphnet.models.easy_model.EasySyntax.inference", false]], "inference() (graphnet.models.task.task.task method)": [[115, "graphnet.models.task.task.Task.inference", false]], "info() (graphnet.utilities.logging.logger method)": [[138, "graphnet.utilities.logging.Logger.info", false]], "init_global_index() (in module graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.init_global_index", false]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[120, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm", false]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[120, "graphnet.training.callbacks.ProgressBar.init_test_tqdm", false]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[120, "graphnet.training.callbacks.ProgressBar.init_train_tqdm", false]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[120, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm", false]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_boost_class", false]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum", false]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[136, "graphnet.utilities.filesys.is_gcd_file", false]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[132, "graphnet.utilities.config.parsing.is_graphnet_class", false]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[132, "graphnet.utilities.config.parsing.is_graphnet_module", false]], "is_i3_file() (in module graphnet.utilities.filesys)": [[136, "graphnet.utilities.filesys.is_i3_file", false]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class", false]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_method", false]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_type", false]], "iseecube (class in graphnet.models.transformer.iseecube)": [[117, "graphnet.models.transformer.iseecube.ISeeCube", false]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE", false]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE", false]], "key (graphnet.training.labels.label property)": [[121, "graphnet.training.labels.Label.key", false]], "knn_graph_batch() (in module graphnet.models.utils)": [[118, "graphnet.models.utils.knn_graph_batch", false]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[100, "graphnet.models.graphs.edges.edges.KNNEdges", false]], "knngraph (class in graphnet.models.graphs.graphs)": [[103, "graphnet.models.graphs.graphs.KNNGraph", false]], "label (class in graphnet.training.labels)": [[121, "graphnet.training.labels.Label", false]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.labels", false]], "learnedtask (class in graphnet.models.task.task)": [[115, "graphnet.models.task.task.LearnedTask", false]], "lex_sort() (in module graphnet.models.graphs.utils)": [[106, "graphnet.models.graphs.utils.lex_sort", false]], "liquido (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.LIQUIDO", false]], "liquido (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.LIQUIDO", false]], "liquido_v1 (class in graphnet.models.detector.liquido)": [[87, "graphnet.models.detector.liquido.LiquidO_v1", false]], "liquidoreader (class in graphnet.data.readers.liquido_reader)": [[51, "graphnet.data.readers.liquido_reader.LiquidOReader", false]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[132, "graphnet.utilities.config.parsing.list_all_submodules", false]], "load() (graphnet.models.model.model class method)": [[107, "graphnet.models.model.Model.load", false]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[128, "graphnet.utilities.config.base_config.BaseConfig.load", false]], "load_module() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.load_module", false]], "load_state_dict() (graphnet.models.model.model method)": [[107, "graphnet.models.model.Model.load_state_dict", false]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[110, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict", false]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[122, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk", false]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[122, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx", false]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[122, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact", false]], "logcmk (class in graphnet.training.loss_functions)": [[122, "graphnet.training.loss_functions.LogCMK", false]], "logcoshloss (class in graphnet.training.loss_functions)": [[122, "graphnet.training.loss_functions.LogCoshLoss", false]], "logger (class in graphnet.utilities.logging)": [[138, "graphnet.utilities.logging.Logger", false]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column", false]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value", false]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table", false]], "lossfunction (class in graphnet.training.loss_functions)": [[122, "graphnet.training.loss_functions.LossFunction", false]], "make_dataloader() (in module graphnet.training.utils)": [[123, "graphnet.training.utils.make_dataloader", false]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[123, "graphnet.training.utils.make_train_validation_dataloader", false]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.merge_files", false]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[61, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files", false]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[62, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files", false]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[63, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files", false]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[82, "graphnet.models.components.layers.EdgeConvTito.message", false]], "min_pool() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.min_pool", false]], "min_pool_x() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.min_pool_x", false]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[101, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges", false]], "mlp (class in graphnet.models.components.layers)": [[82, "graphnet.models.components.layers.Mlp", false]], "model (class in graphnet.models.model)": [[107, "graphnet.models.model.Model", false]], "model_computed_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[128, "graphnet.utilities.config.base_config.BaseConfig.model_computed_fields", false]], "model_computed_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.model_computed_fields", false]], "model_computed_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[131, "graphnet.utilities.config.model_config.ModelConfig.model_computed_fields", false]], "model_computed_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[133, "graphnet.utilities.config.training_config.TrainingConfig.model_computed_fields", false]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[128, "graphnet.utilities.config.base_config.BaseConfig.model_config", false]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config", false]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[131, "graphnet.utilities.config.model_config.ModelConfig.model_config", false]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[133, "graphnet.utilities.config.training_config.TrainingConfig.model_config", false]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[128, "graphnet.utilities.config.base_config.BaseConfig.model_fields", false]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields", false]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[131, "graphnet.utilities.config.model_config.ModelConfig.model_fields", false]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[133, "graphnet.utilities.config.training_config.TrainingConfig.model_fields", false]], "modelconfig (class in graphnet.utilities.config.model_config)": [[131, "graphnet.utilities.config.model_config.ModelConfig", false]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[131, "graphnet.utilities.config.model_config.ModelConfigSaverABC", false]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[131, "graphnet.utilities.config.model_config.ModelConfigSaverMeta", false]], "module": [[1, "module-graphnet", false], [2, "module-graphnet.constants", false], [3, "module-graphnet.data", false], [4, "module-graphnet.data.constants", false], [5, "module-graphnet.data.curated_datamodule", false], [6, "module-graphnet.data.dataclasses", false], [7, "module-graphnet.data.dataconverter", false], [8, "module-graphnet.data.dataloader", false], [9, "module-graphnet.data.datamodule", false], [10, "module-graphnet.data.dataset", false], [11, "module-graphnet.data.dataset.dataset", false], [12, "module-graphnet.data.dataset.parquet", false], [13, "module-graphnet.data.dataset.parquet.parquet_dataset", false], [14, "module-graphnet.data.dataset.sqlite", false], [15, "module-graphnet.data.dataset.sqlite.sqlite_dataset", false], [16, "module-graphnet.data.extractors", false], [17, "module-graphnet.data.extractors.combine_extractors", false], [18, "module-graphnet.data.extractors.extractor", false], [19, "module-graphnet.data.extractors.icecube", false], [20, "module-graphnet.data.extractors.icecube.i3extractor", false], [21, "module-graphnet.data.extractors.icecube.i3featureextractor", false], [22, "module-graphnet.data.extractors.icecube.i3genericextractor", false], [23, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false], [24, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false], [25, "module-graphnet.data.extractors.icecube.i3particleextractor", false], [26, "module-graphnet.data.extractors.icecube.i3pisaextractor", false], [27, "module-graphnet.data.extractors.icecube.i3quesoextractor", false], [28, "module-graphnet.data.extractors.icecube.i3retroextractor", false], [29, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false], [30, "module-graphnet.data.extractors.icecube.i3truthextractor", false], [31, "module-graphnet.data.extractors.icecube.i3tumextractor", false], [32, "module-graphnet.data.extractors.icecube.utilities", false], [33, "module-graphnet.data.extractors.icecube.utilities.collections", false], [34, "module-graphnet.data.extractors.icecube.utilities.frames", false], [35, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false], [36, "module-graphnet.data.extractors.icecube.utilities.types", false], [37, "module-graphnet.data.extractors.internal", false], [38, "module-graphnet.data.extractors.internal.parquet_extractor", false], [39, "module-graphnet.data.extractors.liquido", false], [40, "module-graphnet.data.extractors.liquido.h5_extractor", false], [41, "module-graphnet.data.extractors.prometheus", false], [42, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false], [43, "module-graphnet.data.parquet", false], [44, "module-graphnet.data.parquet.deprecated_methods", false], [45, "module-graphnet.data.pre_configured", false], [46, "module-graphnet.data.pre_configured.dataconverters", false], [47, "module-graphnet.data.readers", false], [48, "module-graphnet.data.readers.graphnet_file_reader", false], [49, "module-graphnet.data.readers.i3reader", false], [50, "module-graphnet.data.readers.internal_parquet_reader", false], [51, "module-graphnet.data.readers.liquido_reader", false], [52, "module-graphnet.data.readers.prometheus_reader", false], [53, "module-graphnet.data.sqlite", false], [54, "module-graphnet.data.sqlite.deprecated_methods", false], [55, "module-graphnet.data.utilities", false], [56, "module-graphnet.data.utilities.parquet_to_sqlite", false], [57, "module-graphnet.data.utilities.random", false], [58, "module-graphnet.data.utilities.sqlite_utilities", false], [59, "module-graphnet.data.utilities.string_selection_resolver", false], [60, "module-graphnet.data.writers", false], [61, "module-graphnet.data.writers.graphnet_writer", false], [62, "module-graphnet.data.writers.parquet_writer", false], [63, "module-graphnet.data.writers.sqlite_writer", false], [64, "module-graphnet.datasets", false], [65, "module-graphnet.datasets.prometheus_datasets", false], [66, "module-graphnet.datasets.test_dataset", false], [67, "module-graphnet.deployment", false], [68, "module-graphnet.deployment.deployer", false], [69, "module-graphnet.deployment.deployment_module", false], [73, "module-graphnet.deployment.icecube.cleaning_module", false], [75, "module-graphnet.deployment.icecube.inference_module", false], [76, "module-graphnet.exceptions", false], [77, "module-graphnet.exceptions.exceptions", false], [78, "module-graphnet.models", false], [79, "module-graphnet.models.coarsening", false], [80, "module-graphnet.models.components", false], [81, "module-graphnet.models.components.embedding", false], [82, "module-graphnet.models.components.layers", false], [83, "module-graphnet.models.components.pool", false], [84, "module-graphnet.models.detector", false], [85, "module-graphnet.models.detector.detector", false], [86, "module-graphnet.models.detector.icecube", false], [87, "module-graphnet.models.detector.liquido", false], [88, "module-graphnet.models.detector.prometheus", false], [89, "module-graphnet.models.easy_model", false], [90, "module-graphnet.models.gnn", false], [91, "module-graphnet.models.gnn.RNN_tito", false], [92, "module-graphnet.models.gnn.convnet", false], [93, "module-graphnet.models.gnn.dynedge", false], [94, "module-graphnet.models.gnn.dynedge_jinst", false], [95, "module-graphnet.models.gnn.dynedge_kaggle_tito", false], [96, "module-graphnet.models.gnn.gnn", false], [97, "module-graphnet.models.gnn.icemix", false], [98, "module-graphnet.models.graphs", false], [99, "module-graphnet.models.graphs.edges", false], [100, "module-graphnet.models.graphs.edges.edges", false], [101, "module-graphnet.models.graphs.edges.minkowski", false], [102, "module-graphnet.models.graphs.graph_definition", false], [103, "module-graphnet.models.graphs.graphs", false], [104, "module-graphnet.models.graphs.nodes", false], [105, "module-graphnet.models.graphs.nodes.nodes", false], [106, "module-graphnet.models.graphs.utils", false], [107, "module-graphnet.models.model", false], [108, "module-graphnet.models.rnn", false], [109, "module-graphnet.models.rnn.node_rnn", false], [110, "module-graphnet.models.standard_averaged_model", false], [111, "module-graphnet.models.standard_model", false], [112, "module-graphnet.models.task", false], [113, "module-graphnet.models.task.classification", false], [114, "module-graphnet.models.task.reconstruction", false], [115, "module-graphnet.models.task.task", false], [116, "module-graphnet.models.transformer", false], [117, "module-graphnet.models.transformer.iseecube", false], [118, "module-graphnet.models.utils", false], [119, "module-graphnet.training", false], [120, "module-graphnet.training.callbacks", false], [121, "module-graphnet.training.labels", false], [122, "module-graphnet.training.loss_functions", false], [123, "module-graphnet.training.utils", false], [124, "module-graphnet.training.weight_fitting", false], [125, "module-graphnet.utilities", false], [126, "module-graphnet.utilities.argparse", false], [127, "module-graphnet.utilities.config", false], [128, "module-graphnet.utilities.config.base_config", false], [129, "module-graphnet.utilities.config.configurable", false], [130, "module-graphnet.utilities.config.dataset_config", false], [131, "module-graphnet.utilities.config.model_config", false], [132, "module-graphnet.utilities.config.parsing", false], [133, "module-graphnet.utilities.config.training_config", false], [134, "module-graphnet.utilities.decorators", false], [135, "module-graphnet.utilities.deprecation_tools", false], [136, "module-graphnet.utilities.filesys", false], [137, "module-graphnet.utilities.imports", false], [138, "module-graphnet.utilities.logging", false], [139, "module-graphnet.utilities.maths", false]], "modules (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.modules", false]], "mseloss (class in graphnet.training.loss_functions)": [[122, "graphnet.training.loss_functions.MSELoss", false]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[113, "graphnet.models.task.classification.MulticlassClassificationTask", false]], "name (graphnet.data.extractors.extractor.extractor property)": [[18, "graphnet.data.extractors.extractor.Extractor.name", false]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[96, "graphnet.models.gnn.gnn.GNN.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[113, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[113, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[114, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[114, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[114, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[114, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[114, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[114, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[114, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[115, "graphnet.models.task.task.IdentityTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[115, "graphnet.models.task.task.LearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[115, "graphnet.models.task.task.StandardLearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.task property)": [[115, "graphnet.models.task.task.Task.nb_inputs", false]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[115, "graphnet.models.task.task.StandardFlowTask.nb_inputs", false]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[96, "graphnet.models.gnn.gnn.GNN.nb_outputs", false]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[105, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs", false]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[138, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed", false]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[97, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay", false]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[109, "graphnet.models.rnn.node_rnn.Node_RNN", false]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth", false]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table", false]], "nodeasdomtimeseries (class in graphnet.models.graphs.nodes.nodes)": [[105, "graphnet.models.graphs.nodes.nodes.NodeAsDOMTimeSeries", false]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[105, "graphnet.models.graphs.nodes.nodes.NodeDefinition", false]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[105, "graphnet.models.graphs.nodes.nodes.NodesAsPulses", false]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[35, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter", false]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[120, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end", false]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[110, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[120, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[120, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end", false]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[120, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start", false]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[120, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end", false]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[110, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step", false]], "options (class in graphnet.utilities.argparse)": [[126, "graphnet.utilities.argparse.Options", false]], "orca150 (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.ORCA150", false]], "orca150superdense (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.ORCA150SuperDense", false]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.output_folder", false]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[57, "graphnet.data.utilities.random.pairwise_shuffle", false]], "parquetdataconverter (class in graphnet.data.parquet.deprecated_methods)": [[44, "graphnet.data.parquet.deprecated_methods.ParquetDataConverter", false]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset", false]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[38, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor", false]], "parquetreader (class in graphnet.data.readers.internal_parquet_reader)": [[50, "graphnet.data.readers.internal_parquet_reader.ParquetReader", false]], "parquettosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[46, "graphnet.data.pre_configured.dataconverters.ParquetToSQLiteConverter", false]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[62, "graphnet.data.writers.parquet_writer.ParquetWriter", false]], "parse_graph_definition() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.parse_graph_definition", false]], "parse_labels() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.parse_labels", false]], "path (graphnet.data.dataset.dataset.dataset property)": [[11, "graphnet.data.dataset.dataset.Dataset.path", false]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.path", false]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[105, "graphnet.models.graphs.nodes.nodes.PercentileClusters", false]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[120, "graphnet.training.callbacks.PiecewiseLinearLR", false]], "ponesmall (class in graphnet.datasets.prometheus_datasets)": [[65, "graphnet.datasets.prometheus_datasets.PONESmall", false]], "ponetriangle (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.PONETriangle", false]], "pop_default() (graphnet.utilities.argparse.options method)": [[126, "graphnet.utilities.argparse.Options.pop_default", false]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[114, "graphnet.models.task.reconstruction.PositionReconstruction", false]], "predict() (graphnet.models.easy_model.easysyntax method)": [[89, "graphnet.models.easy_model.EasySyntax.predict", false]], "predict_as_dataframe() (graphnet.models.easy_model.easysyntax method)": [[89, "graphnet.models.easy_model.EasySyntax.predict_as_dataframe", false]], "prediction_labels (graphnet.models.easy_model.easysyntax property)": [[89, "graphnet.models.easy_model.EasySyntax.prediction_labels", false]], "prepare_data() (graphnet.data.curated_datamodule.curateddataset method)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.prepare_data", false]], "prepare_data() (graphnet.data.curated_datamodule.erdahosteddataset method)": [[5, "graphnet.data.curated_datamodule.ERDAHostedDataset.prepare_data", false]], "prepare_data() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.prepare_data", false]], "progressbar (class in graphnet.training.callbacks)": [[120, "graphnet.training.callbacks.ProgressBar", false]], "prometheus (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.Prometheus", false]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS", false]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS", false]], "prometheusextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[42, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusExtractor", false]], "prometheusfeatureextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[42, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusFeatureExtractor", false]], "prometheusreader (class in graphnet.data.readers.prometheus_reader)": [[52, "graphnet.data.readers.prometheus_reader.PrometheusReader", false]], "prometheustruthextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[42, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusTruthExtractor", false]], "publicprometheusdataset (class in graphnet.datasets.prometheus_datasets)": [[65, "graphnet.datasets.prometheus_datasets.PublicPrometheusDataset", false]], "pulse_truth (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.pulse_truth", false]], "pulsemaps (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.pulsemaps", false]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps", false]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.query_database", false]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[11, "graphnet.data.dataset.dataset.Dataset.query_table", false]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table", false]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[15, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table", false]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[100, "graphnet.models.graphs.edges.edges.RadialEdges", false]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[79, "graphnet.models.coarsening.Coarsening.reduce_options", false]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[135, "graphnet.utilities.deprecation_tools.rename_state_dict_entries", false]], "repeatfilter (class in graphnet.utilities.logging)": [[138, "graphnet.utilities.logging.RepeatFilter", false]], "requires_icecube() (in module graphnet.utilities.imports)": [[137, "graphnet.utilities.imports.requires_icecube", false]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[82, "graphnet.models.components.layers.EdgeConvTito.reset_parameters", false]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[59, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve", false]], "rmseloss (class in graphnet.training.loss_functions)": [[122, "graphnet.training.loss_functions.RMSELoss", false]], "rmsevonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[122, "graphnet.training.loss_functions.RMSEVonMisesFisher3DLoss", false]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[91, "graphnet.models.gnn.RNN_tito.RNN_TITO", false]], "run() (graphnet.deployment.deployer.deployer method)": [[68, "graphnet.deployment.deployer.Deployer.run", false]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.run_sql_code", false]], "save() (graphnet.models.model.model method)": [[107, "graphnet.models.model.Model.save", false]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[129, "graphnet.utilities.config.configurable.Configurable.save_config", false]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[130, "graphnet.utilities.config.dataset_config.save_dataset_config", false]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[131, "graphnet.utilities.config.model_config.save_model_config", false]], "save_results() (in module graphnet.training.utils)": [[123, "graphnet.training.utils.save_results", false]], "save_selection() (in module graphnet.training.utils)": [[123, "graphnet.training.utils.save_selection", false]], "save_state_dict() (graphnet.models.model.model method)": [[107, "graphnet.models.model.Model.save_state_dict", false]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.save_to_sql", false]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.seed", false]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.selection", false]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[86, "graphnet.models.detector.icecube.IceCube86.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[86, "graphnet.models.detector.icecube.IceCubeKaggle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[86, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[87, "graphnet.models.detector.liquido.LiquidO_v1.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[88, "graphnet.models.detector.prometheus.ARCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[88, "graphnet.models.detector.prometheus.BaikalGVD8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[88, "graphnet.models.detector.prometheus.IceCube86Prometheus.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeDeepCore8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeGen2.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeUpgrade7.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[88, "graphnet.models.detector.prometheus.IceDemo81.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[88, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[88, "graphnet.models.detector.prometheus.ORCA150SuperDense.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[88, "graphnet.models.detector.prometheus.PONETriangle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[88, "graphnet.models.detector.prometheus.TRIDENT1211.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[88, "graphnet.models.detector.prometheus.WaterDemo81.sensor_id_column", false]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[85, "graphnet.models.detector.detector.Detector.sensor_index_name", false]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[85, "graphnet.models.detector.detector.Detector.sensor_position_names", false]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[33, "graphnet.data.extractors.icecube.utilities.collections.serialise", false]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors", false]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[20, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd", false]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[105, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs", false]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[105, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names", false]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[107, "graphnet.models.model.Model.set_verbose_print_recursively", false]], "setlevel() (graphnet.utilities.logging.logger method)": [[138, "graphnet.utilities.logging.Logger.setLevel", false]], "settings (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.Settings", false]], "setup() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.setup", false]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[120, "graphnet.training.callbacks.GraphnetEarlyStopping.setup", false]], "shared_step() (graphnet.models.easy_model.easysyntax method)": [[89, "graphnet.models.easy_model.EasySyntax.shared_step", false]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[111, "graphnet.models.standard_model.StandardModel.shared_step", false]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[81, "graphnet.models.components.embedding.SinusoidalPosEmb", false]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[81, "graphnet.models.components.embedding.SpacetimeEncoder", false]], "sqlitedataconverter (class in graphnet.data.sqlite.deprecated_methods)": [[54, "graphnet.data.sqlite.deprecated_methods.SQLiteDataConverter", false]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[15, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset", false]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[63, "graphnet.data.writers.sqlite_writer.SQLiteWriter", false]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[126, "graphnet.utilities.argparse.ArgumentParser.standard_arguments", false]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[110, "graphnet.models.standard_averaged_model.StandardAveragedModel", false]], "standardflowtask (class in graphnet.models.task.task)": [[115, "graphnet.models.task.task.StandardFlowTask", false]], "standardlearnedtask (class in graphnet.models.task.task)": [[115, "graphnet.models.task.task.StandardLearnedTask", false]], "standardmodel (class in graphnet.models.standard_model)": [[111, "graphnet.models.standard_model.StandardModel", false]], "std_pool() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.std_pool", false]], "std_pool_x() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.std_pool_x", false]], "stream_handlers (graphnet.utilities.logging.logger property)": [[138, "graphnet.utilities.logging.Logger.stream_handlers", false]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[86, "graphnet.models.detector.icecube.IceCube86.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[86, "graphnet.models.detector.icecube.IceCubeKaggle.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[86, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column", false]], "string_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[87, "graphnet.models.detector.liquido.LiquidO_v1.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[88, "graphnet.models.detector.prometheus.ARCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[88, "graphnet.models.detector.prometheus.BaikalGVD8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[88, "graphnet.models.detector.prometheus.IceCube86Prometheus.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeDeepCore8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeGen2.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeUpgrade7.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[88, "graphnet.models.detector.prometheus.IceDemo81.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[88, "graphnet.models.detector.prometheus.ORCA150.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[88, "graphnet.models.detector.prometheus.ORCA150SuperDense.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[88, "graphnet.models.detector.prometheus.PONETriangle.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[88, "graphnet.models.detector.prometheus.TRIDENT1211.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[88, "graphnet.models.detector.prometheus.WaterDemo81.string_id_column", false]], "string_index_name (graphnet.models.detector.detector.detector property)": [[85, "graphnet.models.detector.detector.Detector.string_index_name", false]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection", false]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[59, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver", false]], "sum_pool() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.sum_pool", false]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.sum_pool_and_distribute", false]], "sum_pool_x() (in module graphnet.models.components.pool)": [[83, "graphnet.models.components.pool.sum_pool_x", false]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[133, "graphnet.utilities.config.training_config.TrainingConfig.target", false]], "target_labels (graphnet.models.easy_model.easysyntax property)": [[89, "graphnet.models.easy_model.EasySyntax.target_labels", false]], "task (class in graphnet.models.task.task)": [[115, "graphnet.models.task.task.Task", false]], "teardown() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.teardown", false]], "test_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.test_dataloader", false]], "testdataset (class in graphnet.datasets.test_dataset)": [[66, "graphnet.datasets.test_dataset.TestDataset", false]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[114, "graphnet.models.task.reconstruction.TimeReconstruction", false]], "track (class in graphnet.training.labels)": [[121, "graphnet.training.labels.Track", false]], "train() (graphnet.models.easy_model.easysyntax method)": [[89, "graphnet.models.easy_model.EasySyntax.train", false]], "train_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.train_dataloader", false]], "train_eval() (graphnet.models.task.task.task method)": [[115, "graphnet.models.task.task.Task.train_eval", false]], "training_step() (graphnet.models.easy_model.easysyntax method)": [[89, "graphnet.models.easy_model.EasySyntax.training_step", false]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[110, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step", false]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[133, "graphnet.utilities.config.training_config.TrainingConfig", false]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[33, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts", false]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[132, "graphnet.utilities.config.parsing.traverse_and_apply", false]], "trident1211 (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.TRIDENT1211", false]], "tridentsmall (class in graphnet.datasets.prometheus_datasets)": [[65, "graphnet.datasets.prometheus_datasets.TRIDENTSmall", false]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH", false]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.truth", false]], "truth_table (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.truth_table", false]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[11, "graphnet.data.dataset.dataset.Dataset.truth_table", false]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[130, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table", false]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[79, "graphnet.models.coarsening.unbatch_edge_index", false]], "uniform (class in graphnet.training.weight_fitting)": [[124, "graphnet.training.weight_fitting.Uniform", false]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE", false]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE", false]], "val_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.val_dataloader", false]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files", false]], "validate_tasks() (graphnet.models.easy_model.easysyntax method)": [[89, "graphnet.models.easy_model.EasySyntax.validate_tasks", false]], "validate_tasks() (graphnet.models.standard_model.standardmodel method)": [[111, "graphnet.models.standard_model.StandardModel.validate_tasks", false]], "validation_step() (graphnet.models.easy_model.easysyntax method)": [[89, "graphnet.models.easy_model.EasySyntax.validation_step", false]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[110, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step", false]], "verbose_print (graphnet.models.model.model attribute)": [[107, "graphnet.models.model.Model.verbose_print", false]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[114, "graphnet.models.task.reconstruction.VertexReconstruction", false]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[122, "graphnet.training.loss_functions.VonMisesFisher2DLoss", false]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[122, "graphnet.training.loss_functions.VonMisesFisher3DLoss", false]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[122, "graphnet.training.loss_functions.VonMisesFisherLoss", false]], "warning() (graphnet.utilities.logging.logger method)": [[138, "graphnet.utilities.logging.Logger.warning", false]], "warning_once() (graphnet.utilities.logging.logger method)": [[138, "graphnet.utilities.logging.Logger.warning_once", false]], "waterdemo81 (class in graphnet.models.detector.prometheus)": [[88, "graphnet.models.detector.prometheus.WaterDemo81", false]], "weightfitter (class in graphnet.training.weight_fitting)": [[124, "graphnet.training.weight_fitting.WeightFitter", false]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[126, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments", false]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[86, "graphnet.models.detector.icecube.IceCube86.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubekaggle attribute)": [[86, "graphnet.models.detector.icecube.IceCubeKaggle.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[86, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz", false]], "xyz (graphnet.models.detector.liquido.liquido_v1 attribute)": [[87, "graphnet.models.detector.liquido.LiquidO_v1.xyz", false]], "xyz (graphnet.models.detector.prometheus.arca115 attribute)": [[88, "graphnet.models.detector.prometheus.ARCA115.xyz", false]], "xyz (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[88, "graphnet.models.detector.prometheus.BaikalGVD8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[88, "graphnet.models.detector.prometheus.IceCube86Prometheus.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeDeepCore8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeGen2.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[88, "graphnet.models.detector.prometheus.IceCubeUpgrade7.xyz", false]], "xyz (graphnet.models.detector.prometheus.icedemo81 attribute)": [[88, "graphnet.models.detector.prometheus.IceDemo81.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[88, "graphnet.models.detector.prometheus.ORCA150.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150superdense attribute)": [[88, "graphnet.models.detector.prometheus.ORCA150SuperDense.xyz", false]], "xyz (graphnet.models.detector.prometheus.ponetriangle attribute)": [[88, "graphnet.models.detector.prometheus.PONETriangle.xyz", false]], "xyz (graphnet.models.detector.prometheus.trident1211 attribute)": [[88, "graphnet.models.detector.prometheus.TRIDENT1211.xyz", false]], "xyz (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[88, "graphnet.models.detector.prometheus.WaterDemo81.xyz", false]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[114, "graphnet.models.task.reconstruction.ZenithReconstruction", false]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[114, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa", false]]}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [64, 0, 0, "-", "datasets"], [67, 0, 0, "-", "deployment"], [76, 0, 0, "-", "exceptions"], [78, 0, 0, "-", "models"], [119, 0, 0, "-", "training"], [125, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "curated_datamodule"], [6, 0, 0, "-", "dataclasses"], [7, 0, 0, "-", "dataconverter"], [8, 0, 0, "-", "dataloader"], [9, 0, 0, "-", "datamodule"], [10, 0, 0, "-", "dataset"], [16, 0, 0, "-", "extractors"], [43, 0, 0, "-", "parquet"], [45, 0, 0, "-", "pre_configured"], [47, 0, 0, "-", "readers"], [53, 0, 0, "-", "sqlite"], [55, 0, 0, "-", "utilities"], [60, 0, 0, "-", "writers"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.curated_datamodule": [[5, 1, 1, "", "CuratedDataset"], [5, 1, 1, "", "ERDAHostedDataset"]], "graphnet.data.curated_datamodule.CuratedDataset": [[5, 3, 1, "", "available_backends"], [5, 3, 1, "", "citation"], [5, 3, 1, "", "comments"], [5, 3, 1, "", "creator"], [5, 3, 1, "", "dataset_dir"], [5, 4, 1, "", "description"], [5, 3, 1, "", "event_truth"], [5, 3, 1, "", "events"], [5, 3, 1, "", "experiment"], [5, 3, 1, "", "features"], [5, 4, 1, "", "prepare_data"], [5, 3, 1, "", "pulse_truth"], [5, 3, 1, "", "pulsemaps"], [5, 3, 1, "", "truth_table"]], "graphnet.data.curated_datamodule.ERDAHostedDataset": [[5, 4, 1, "", "prepare_data"]], "graphnet.data.dataclasses": [[6, 1, 1, "", "I3FileSet"], [6, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_files"], [6, 2, 1, "", "modules"], [6, 2, 1, "", "output_folder"]], "graphnet.data.dataconverter": [[7, 1, 1, "", "DataConverter"], [7, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[7, 4, 1, "", "get_map_function"], [7, 4, 1, "", "merge_files"]], "graphnet.data.dataloader": [[8, 1, 1, "", "DataLoader"], [8, 5, 1, "", "collate_fn"], [8, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[8, 4, 1, "", "from_dataset_config"]], "graphnet.data.datamodule": [[9, 1, 1, "", "GraphNeTDataModule"]], "graphnet.data.datamodule.GraphNeTDataModule": [[9, 4, 1, "", "prepare_data"], [9, 4, 1, "", "setup"], [9, 4, 1, "", "teardown"], [9, 3, 1, "", "test_dataloader"], [9, 3, 1, "", "train_dataloader"], [9, 3, 1, "", "val_dataloader"]], "graphnet.data.dataset": [[11, 0, 0, "-", "dataset"], [12, 0, 0, "-", "parquet"], [14, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[11, 1, 1, "", "Dataset"], [11, 1, 1, "", "EnsembleDataset"], [11, 5, 1, "", "load_module"], [11, 5, 1, "", "parse_graph_definition"], [11, 5, 1, "", "parse_labels"]], "graphnet.data.dataset.dataset.Dataset": [[11, 4, 1, "", "add_label"], [11, 4, 1, "", "concatenate"], [11, 4, 1, "", "from_config"], [11, 3, 1, "", "path"], [11, 4, 1, "", "query_table"], [11, 3, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[13, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[13, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[13, 4, 1, "", "query_table"]], "graphnet.data.dataset.sqlite": [[15, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[15, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[15, 4, 1, "", "query_table"]], "graphnet.data.extractors": [[17, 0, 0, "-", "combine_extractors"], [18, 0, 0, "-", "extractor"], [19, 0, 0, "-", "icecube"], [37, 0, 0, "-", "internal"], [39, 0, 0, "-", "liquido"], [41, 0, 0, "-", "prometheus"]], "graphnet.data.extractors.combine_extractors": [[17, 1, 1, "", "CombinedExtractor"]], "graphnet.data.extractors.extractor": [[18, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[18, 3, 1, "", "name"]], "graphnet.data.extractors.icecube": [[20, 0, 0, "-", "i3extractor"], [21, 0, 0, "-", "i3featureextractor"], [22, 0, 0, "-", "i3genericextractor"], [23, 0, 0, "-", "i3hybridrecoextractor"], [24, 0, 0, "-", "i3ntmuonlabelsextractor"], [25, 0, 0, "-", "i3particleextractor"], [26, 0, 0, "-", "i3pisaextractor"], [27, 0, 0, "-", "i3quesoextractor"], [28, 0, 0, "-", "i3retroextractor"], [29, 0, 0, "-", "i3splinempeextractor"], [30, 0, 0, "-", "i3truthextractor"], [31, 0, 0, "-", "i3tumextractor"], [32, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[20, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[20, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[21, 1, 1, "", "I3FeatureExtractor"], [21, 1, 1, "", "I3FeatureExtractorIceCube86"], [21, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [21, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [21, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[22, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[23, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[24, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[25, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[26, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[27, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[28, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[29, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[30, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[31, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[33, 0, 0, "-", "collections"], [34, 0, 0, "-", "frames"], [35, 0, 0, "-", "i3_filters"], [36, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[33, 5, 1, "", "flatten_nested_dictionary"], [33, 5, 1, "", "serialise"], [33, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[34, 5, 1, "", "frame_is_montecarlo"], [34, 5, 1, "", "frame_is_noise"], [34, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[35, 1, 1, "", "I3Filter"], [35, 1, 1, "", "I3FilterMask"], [35, 1, 1, "", "NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[36, 5, 1, "", "break_cyclic_recursion"], [36, 5, 1, "", "cast_object_to_pure_python"], [36, 5, 1, "", "cast_pulse_series_to_pure_python"], [36, 5, 1, "", "get_member_variables"], [36, 5, 1, "", "is_boost_class"], [36, 5, 1, "", "is_boost_enum"], [36, 5, 1, "", "is_icecube_class"], [36, 5, 1, "", "is_method"], [36, 5, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[38, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[38, 1, 1, "", "ParquetExtractor"]], "graphnet.data.extractors.liquido": [[40, 0, 0, "-", "h5_extractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[40, 1, 1, "", "H5Extractor"], [40, 1, 1, "", "H5HitExtractor"], [40, 1, 1, "", "H5TruthExtractor"]], "graphnet.data.extractors.prometheus": [[42, 0, 0, "-", "prometheus_extractor"]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[42, 1, 1, "", "PrometheusExtractor"], [42, 1, 1, "", "PrometheusFeatureExtractor"], [42, 1, 1, "", "PrometheusTruthExtractor"]], "graphnet.data.parquet": [[44, 0, 0, "-", "deprecated_methods"]], "graphnet.data.parquet.deprecated_methods": [[44, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.pre_configured": [[46, 0, 0, "-", "dataconverters"]], "graphnet.data.pre_configured.dataconverters": [[46, 1, 1, "", "I3ToParquetConverter"], [46, 1, 1, "", "I3ToSQLiteConverter"], [46, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.readers": [[48, 0, 0, "-", "graphnet_file_reader"], [49, 0, 0, "-", "i3reader"], [50, 0, 0, "-", "internal_parquet_reader"], [51, 0, 0, "-", "liquido_reader"], [52, 0, 0, "-", "prometheus_reader"]], "graphnet.data.readers.graphnet_file_reader": [[48, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[48, 3, 1, "", "accepted_extractors"], [48, 3, 1, "", "accepted_file_extensions"], [48, 3, 1, "", "extracor_names"], [48, 4, 1, "", "find_files"], [48, 4, 1, "", "set_extractors"], [48, 4, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[49, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[49, 4, 1, "", "find_files"]], "graphnet.data.readers.internal_parquet_reader": [[50, 1, 1, "", "ParquetReader"]], "graphnet.data.readers.internal_parquet_reader.ParquetReader": [[50, 4, 1, "", "find_files"]], "graphnet.data.readers.liquido_reader": [[51, 1, 1, "", "LiquidOReader"]], "graphnet.data.readers.liquido_reader.LiquidOReader": [[51, 4, 1, "", "find_files"]], "graphnet.data.readers.prometheus_reader": [[52, 1, 1, "", "PrometheusReader"]], "graphnet.data.readers.prometheus_reader.PrometheusReader": [[52, 4, 1, "", "find_files"]], "graphnet.data.sqlite": [[54, 0, 0, "-", "deprecated_methods"]], "graphnet.data.sqlite.deprecated_methods": [[54, 1, 1, "", "SQLiteDataConverter"]], "graphnet.data.utilities": [[56, 0, 0, "-", "parquet_to_sqlite"], [57, 0, 0, "-", "random"], [58, 0, 0, "-", "sqlite_utilities"], [59, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.random": [[57, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[58, 5, 1, "", "attach_index"], [58, 5, 1, "", "create_table"], [58, 5, 1, "", "create_table_and_save_to_sql"], [58, 5, 1, "", "database_exists"], [58, 5, 1, "", "database_table_exists"], [58, 5, 1, "", "get_primary_keys"], [58, 5, 1, "", "query_database"], [58, 5, 1, "", "run_sql_code"], [58, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[59, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[59, 4, 1, "", "resolve"]], "graphnet.data.writers": [[61, 0, 0, "-", "graphnet_writer"], [62, 0, 0, "-", "parquet_writer"], [63, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[61, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[61, 3, 1, "", "expects_merged_dataframes"], [61, 3, 1, "", "file_extension"], [61, 4, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[62, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[62, 4, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[63, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[63, 4, 1, "", "merge_files"]], "graphnet.datasets": [[65, 0, 0, "-", "prometheus_datasets"], [66, 0, 0, "-", "test_dataset"]], "graphnet.datasets.prometheus_datasets": [[65, 1, 1, "", "BaikalGVDSmall"], [65, 1, 1, "", "PONESmall"], [65, 1, 1, "", "PublicPrometheusDataset"], [65, 1, 1, "", "TRIDENTSmall"]], "graphnet.datasets.test_dataset": [[66, 1, 1, "", "TestDataset"]], "graphnet.deployment": [[68, 0, 0, "-", "deployer"], [69, 0, 0, "-", "deployment_module"]], "graphnet.deployment.deployer": [[68, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[68, 4, 1, "", "run"]], "graphnet.deployment.deployment_module": [[69, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.icecube": [[73, 0, 0, "-", "cleaning_module"], [75, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[73, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.inference_module": [[75, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[77, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[77, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[79, 0, 0, "-", "coarsening"], [80, 0, 0, "-", "components"], [84, 0, 0, "-", "detector"], [89, 0, 0, "-", "easy_model"], [90, 0, 0, "-", "gnn"], [98, 0, 0, "-", "graphs"], [107, 0, 0, "-", "model"], [108, 0, 0, "-", "rnn"], [110, 0, 0, "-", "standard_averaged_model"], [111, 0, 0, "-", "standard_model"], [112, 0, 0, "-", "task"], [116, 0, 0, "-", "transformer"], [118, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[79, 1, 1, "", "AttributeCoarsening"], [79, 1, 1, "", "Coarsening"], [79, 1, 1, "", "CustomDOMCoarsening"], [79, 1, 1, "", "DOMAndTimeWindowCoarsening"], [79, 1, 1, "", "DOMCoarsening"], [79, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[79, 4, 1, "", "forward"], [79, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[81, 0, 0, "-", "embedding"], [82, 0, 0, "-", "layers"], [83, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[81, 1, 1, "", "FourierEncoder"], [81, 1, 1, "", "SinusoidalPosEmb"], [81, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[81, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[81, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[81, 4, 1, "", "forward"]], "graphnet.models.components.layers": [[82, 1, 1, "", "Attention_rel"], [82, 1, 1, "", "Block"], [82, 1, 1, "", "Block_rel"], [82, 1, 1, "", "DropPath"], [82, 1, 1, "", "DynEdgeConv"], [82, 1, 1, "", "DynTrans"], [82, 1, 1, "", "EdgeConvTito"], [82, 1, 1, "", "Mlp"]], "graphnet.models.components.layers.Attention_rel": [[82, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[82, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[82, 4, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[82, 4, 1, "", "extra_repr"], [82, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[82, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[82, 4, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[82, 4, 1, "", "forward"], [82, 4, 1, "", "message"], [82, 4, 1, "", "reset_parameters"]], "graphnet.models.components.layers.Mlp": [[82, 4, 1, "", "forward"]], "graphnet.models.components.pool": [[83, 5, 1, "", "group_by"], [83, 5, 1, "", "group_pulses_to_dom"], [83, 5, 1, "", "group_pulses_to_pmt"], [83, 5, 1, "", "min_pool"], [83, 5, 1, "", "min_pool_x"], [83, 5, 1, "", "std_pool"], [83, 5, 1, "", "std_pool_x"], [83, 5, 1, "", "sum_pool"], [83, 5, 1, "", "sum_pool_and_distribute"], [83, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[85, 0, 0, "-", "detector"], [86, 0, 0, "-", "icecube"], [87, 0, 0, "-", "liquido"], [88, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[85, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[85, 4, 1, "", "feature_map"], [85, 4, 1, "", "forward"], [85, 3, 1, "", "geometry_table"], [85, 3, 1, "", "sensor_index_name"], [85, 3, 1, "", "sensor_position_names"], [85, 3, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[86, 1, 1, "", "IceCube86"], [86, 1, 1, "", "IceCubeDeepCore"], [86, 1, 1, "", "IceCubeKaggle"], [86, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[86, 4, 1, "", "feature_map"], [86, 2, 1, "", "geometry_table_path"], [86, 2, 1, "", "sensor_id_column"], [86, 2, 1, "", "string_id_column"], [86, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[86, 4, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[86, 4, 1, "", "feature_map"], [86, 2, 1, "", "geometry_table_path"], [86, 2, 1, "", "sensor_id_column"], [86, 2, 1, "", "string_id_column"], [86, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[86, 4, 1, "", "feature_map"], [86, 2, 1, "", "geometry_table_path"], [86, 2, 1, "", "sensor_id_column"], [86, 2, 1, "", "string_id_column"], [86, 2, 1, "", "xyz"]], "graphnet.models.detector.liquido": [[87, 1, 1, "", "LiquidO_v1"]], "graphnet.models.detector.liquido.LiquidO_v1": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[88, 1, 1, "", "ARCA115"], [88, 1, 1, "", "BaikalGVD8"], [88, 1, 1, "", "IceCube86Prometheus"], [88, 1, 1, "", "IceCubeDeepCore8"], [88, 1, 1, "", "IceCubeGen2"], [88, 1, 1, "", "IceCubeUpgrade7"], [88, 1, 1, "", "IceDemo81"], [88, 1, 1, "", "ORCA150"], [88, 1, 1, "", "ORCA150SuperDense"], [88, 1, 1, "", "PONETriangle"], [88, 1, 1, "", "Prometheus"], [88, 1, 1, "", "TRIDENT1211"], [88, 1, 1, "", "WaterDemo81"]], "graphnet.models.detector.prometheus.ARCA115": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.BaikalGVD8": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCube86Prometheus": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeDeepCore8": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeGen2": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeUpgrade7": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceDemo81": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150SuperDense": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.PONETriangle": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.TRIDENT1211": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.WaterDemo81": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.easy_model": [[89, 1, 1, "", "EasySyntax"]], "graphnet.models.easy_model.EasySyntax": [[89, 4, 1, "", "compute_loss"], [89, 4, 1, "", "configure_optimizers"], [89, 4, 1, "", "fit"], [89, 4, 1, "", "forward"], [89, 4, 1, "", "inference"], [89, 4, 1, "", "predict"], [89, 4, 1, "", "predict_as_dataframe"], [89, 3, 1, "", "prediction_labels"], [89, 4, 1, "", "shared_step"], [89, 3, 1, "", "target_labels"], [89, 4, 1, "", "train"], [89, 4, 1, "", "training_step"], [89, 4, 1, "", "validate_tasks"], [89, 4, 1, "", "validation_step"]], "graphnet.models.gnn": [[91, 0, 0, "-", "RNN_tito"], [92, 0, 0, "-", "convnet"], [93, 0, 0, "-", "dynedge"], [94, 0, 0, "-", "dynedge_jinst"], [95, 0, 0, "-", "dynedge_kaggle_tito"], [96, 0, 0, "-", "gnn"], [97, 0, 0, "-", "icemix"]], "graphnet.models.gnn.RNN_tito": [[91, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[91, 4, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[92, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[92, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[93, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[93, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[94, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[94, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[95, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[95, 4, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[96, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[96, 4, 1, "", "forward"], [96, 3, 1, "", "nb_inputs"], [96, 3, 1, "", "nb_outputs"]], "graphnet.models.gnn.icemix": [[97, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[97, 4, 1, "", "forward"], [97, 4, 1, "", "no_weight_decay"]], "graphnet.models.graphs": [[99, 0, 0, "-", "edges"], [102, 0, 0, "-", "graph_definition"], [103, 0, 0, "-", "graphs"], [104, 0, 0, "-", "nodes"], [106, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[100, 0, 0, "-", "edges"], [101, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[100, 1, 1, "", "EdgeDefinition"], [100, 1, 1, "", "EuclideanEdges"], [100, 1, 1, "", "KNNEdges"], [100, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[100, 4, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[101, 1, 1, "", "MinkowskiKNNEdges"], [101, 5, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[102, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[102, 4, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[103, 1, 1, "", "EdgelessGraph"], [103, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[105, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[105, 1, 1, "", "IceMixNodes"], [105, 1, 1, "", "NodeAsDOMTimeSeries"], [105, 1, 1, "", "NodeDefinition"], [105, 1, 1, "", "NodesAsPulses"], [105, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[105, 4, 1, "", "forward"], [105, 3, 1, "", "nb_outputs"], [105, 4, 1, "", "set_number_of_inputs"], [105, 4, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[106, 5, 1, "", "cluster_summarize_with_percentiles"], [106, 5, 1, "", "gather_cluster_sequence"], [106, 5, 1, "", "ice_transparency"], [106, 5, 1, "", "identify_indices"], [106, 5, 1, "", "lex_sort"]], "graphnet.models.model": [[107, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[107, 4, 1, "", "extra_repr"], [107, 4, 1, "", "extra_repr_recursive"], [107, 4, 1, "", "from_config"], [107, 4, 1, "", "load"], [107, 4, 1, "", "load_state_dict"], [107, 4, 1, "", "save"], [107, 4, 1, "", "save_state_dict"], [107, 4, 1, "", "set_verbose_print_recursively"], [107, 2, 1, "", "verbose_print"]], "graphnet.models.rnn": [[109, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[109, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[109, 4, 1, "", "clean_up_data_object"], [109, 4, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[110, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[110, 4, 1, "", "load_state_dict"], [110, 4, 1, "", "on_train_end"], [110, 4, 1, "", "optimizer_step"], [110, 4, 1, "", "training_step"], [110, 4, 1, "", "validation_step"]], "graphnet.models.standard_model": [[111, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[111, 4, 1, "", "compute_loss"], [111, 4, 1, "", "forward"], [111, 4, 1, "", "shared_step"], [111, 4, 1, "", "validate_tasks"]], "graphnet.models.task": [[113, 0, 0, "-", "classification"], [114, 0, 0, "-", "reconstruction"], [115, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[113, 1, 1, "", "BinaryClassificationTask"], [113, 1, 1, "", "BinaryClassificationTaskLogits"], [113, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[113, 2, 1, "", "default_prediction_labels"], [113, 2, 1, "", "default_target_labels"], [113, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[113, 2, 1, "", "default_prediction_labels"], [113, 2, 1, "", "default_target_labels"], [113, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[114, 1, 1, "", "AzimuthReconstruction"], [114, 1, 1, "", "AzimuthReconstructionWithKappa"], [114, 1, 1, "", "DirectionReconstructionWithKappa"], [114, 1, 1, "", "EnergyReconstruction"], [114, 1, 1, "", "EnergyReconstructionWithPower"], [114, 1, 1, "", "EnergyReconstructionWithUncertainty"], [114, 1, 1, "", "EnergyTCReconstruction"], [114, 1, 1, "", "InelasticityReconstruction"], [114, 1, 1, "", "PositionReconstruction"], [114, 1, 1, "", "TimeReconstruction"], [114, 1, 1, "", "VertexReconstruction"], [114, 1, 1, "", "ZenithReconstruction"], [114, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[114, 2, 1, "", "default_prediction_labels"], [114, 2, 1, "", "default_target_labels"], [114, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[114, 2, 1, "", "default_prediction_labels"], [114, 2, 1, "", "default_target_labels"], [114, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[114, 2, 1, "", "default_prediction_labels"], [114, 2, 1, "", "default_target_labels"], [114, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[114, 2, 1, "", "default_prediction_labels"], [114, 2, 1, "", "default_target_labels"], [114, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[114, 2, 1, "", "default_prediction_labels"], [114, 2, 1, "", "default_target_labels"], [114, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[114, 2, 1, "", "default_prediction_labels"], [114, 2, 1, "", "default_target_labels"], [114, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[114, 2, 1, "", "default_prediction_labels"], [114, 2, 1, "", "default_target_labels"], [114, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[114, 2, 1, "", "default_prediction_labels"], [114, 2, 1, "", "default_target_labels"], [114, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[114, 2, 1, "", "default_prediction_labels"], [114, 2, 1, "", "default_target_labels"], [114, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[114, 2, 1, "", "default_prediction_labels"], [114, 2, 1, "", "default_target_labels"], [114, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[114, 2, 1, "", "default_prediction_labels"], [114, 2, 1, "", "default_target_labels"], [114, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[114, 2, 1, "", "default_prediction_labels"], [114, 2, 1, "", "default_target_labels"], [114, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[114, 2, 1, "", "default_prediction_labels"], [114, 2, 1, "", "default_target_labels"], [114, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[115, 1, 1, "", "IdentityTask"], [115, 1, 1, "", "LearnedTask"], [115, 1, 1, "", "StandardFlowTask"], [115, 1, 1, "", "StandardLearnedTask"], [115, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[115, 3, 1, "", "default_prediction_labels"], [115, 3, 1, "", "default_target_labels"], [115, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[115, 4, 1, "", "compute_loss"], [115, 4, 1, "", "forward"], [115, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[115, 4, 1, "", "compute_loss"], [115, 4, 1, "", "forward"], [115, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[115, 4, 1, "", "compute_loss"], [115, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[115, 3, 1, "", "default_prediction_labels"], [115, 3, 1, "", "default_target_labels"], [115, 4, 1, "", "inference"], [115, 3, 1, "", "nb_inputs"], [115, 4, 1, "", "train_eval"]], "graphnet.models.transformer": [[117, 0, 0, "-", "iseecube"]], "graphnet.models.transformer.iseecube": [[117, 1, 1, "", "ISeeCube"]], "graphnet.models.transformer.iseecube.ISeeCube": [[117, 4, 1, "", "forward"]], "graphnet.models.utils": [[118, 5, 1, "", "array_to_sequence"], [118, 5, 1, "", "calculate_distance_matrix"], [118, 5, 1, "", "calculate_xyzt_homophily"], [118, 5, 1, "", "knn_graph_batch"]], "graphnet.training": [[120, 0, 0, "-", "callbacks"], [121, 0, 0, "-", "labels"], [122, 0, 0, "-", "loss_functions"], [123, 0, 0, "-", "utils"], [124, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[120, 1, 1, "", "GraphnetEarlyStopping"], [120, 1, 1, "", "PiecewiseLinearLR"], [120, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[120, 4, 1, "", "on_fit_end"], [120, 4, 1, "", "on_train_epoch_end"], [120, 4, 1, "", "on_validation_end"], [120, 4, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[120, 4, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[120, 4, 1, "", "get_metrics"], [120, 4, 1, "", "init_predict_tqdm"], [120, 4, 1, "", "init_test_tqdm"], [120, 4, 1, "", "init_train_tqdm"], [120, 4, 1, "", "init_validation_tqdm"], [120, 4, 1, "", "on_train_epoch_end"], [120, 4, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[121, 1, 1, "", "Direction"], [121, 1, 1, "", "Label"], [121, 1, 1, "", "Track"]], "graphnet.training.labels.Label": [[121, 3, 1, "", "key"]], "graphnet.training.loss_functions": [[122, 1, 1, "", "BinaryCrossEntropyLoss"], [122, 1, 1, "", "CrossEntropyLoss"], [122, 1, 1, "", "EnsembleLoss"], [122, 1, 1, "", "EuclideanDistanceLoss"], [122, 1, 1, "", "LogCMK"], [122, 1, 1, "", "LogCoshLoss"], [122, 1, 1, "", "LossFunction"], [122, 1, 1, "", "MSELoss"], [122, 1, 1, "", "RMSELoss"], [122, 1, 1, "", "RMSEVonMisesFisher3DLoss"], [122, 1, 1, "", "VonMisesFisher2DLoss"], [122, 1, 1, "", "VonMisesFisher3DLoss"], [122, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[122, 4, 1, "", "backward"], [122, 4, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[122, 4, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[122, 4, 1, "", "log_cmk"], [122, 4, 1, "", "log_cmk_approx"], [122, 4, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[123, 5, 1, "", "collate_fn"], [123, 1, 1, "", "collator_sequence_buckleting"], [123, 5, 1, "", "get_predictions"], [123, 5, 1, "", "make_dataloader"], [123, 5, 1, "", "make_train_validation_dataloader"], [123, 5, 1, "", "save_results"], [123, 5, 1, "", "save_selection"]], "graphnet.training.weight_fitting": [[124, 1, 1, "", "BjoernLow"], [124, 1, 1, "", "Uniform"], [124, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[124, 4, 1, "", "fit"]], "graphnet.utilities": [[126, 0, 0, "-", "argparse"], [127, 0, 0, "-", "config"], [134, 0, 0, "-", "decorators"], [135, 0, 0, "-", "deprecation_tools"], [136, 0, 0, "-", "filesys"], [137, 0, 0, "-", "imports"], [138, 0, 0, "-", "logging"], [139, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[126, 1, 1, "", "ArgumentParser"], [126, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[126, 2, 1, "", "standard_arguments"], [126, 4, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[126, 4, 1, "", "contains"], [126, 4, 1, "", "pop_default"]], "graphnet.utilities.config": [[128, 0, 0, "-", "base_config"], [129, 0, 0, "-", "configurable"], [130, 0, 0, "-", "dataset_config"], [131, 0, 0, "-", "model_config"], [132, 0, 0, "-", "parsing"], [133, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[128, 1, 1, "", "BaseConfig"], [128, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[128, 4, 1, "", "as_dict"], [128, 4, 1, "", "dump"], [128, 4, 1, "", "load"], [128, 2, 1, "", "model_computed_fields"], [128, 2, 1, "", "model_config"], [128, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[129, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[129, 3, 1, "", "config"], [129, 4, 1, "", "from_config"], [129, 4, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[130, 1, 1, "", "DatasetConfig"], [130, 1, 1, "", "DatasetConfigSaverABCMeta"], [130, 1, 1, "", "DatasetConfigSaverMeta"], [130, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[130, 4, 1, "", "as_dict"], [130, 2, 1, "", "features"], [130, 2, 1, "", "graph_definition"], [130, 2, 1, "", "index_column"], [130, 2, 1, "", "labels"], [130, 2, 1, "", "loss_weight_column"], [130, 2, 1, "", "loss_weight_default_value"], [130, 2, 1, "", "loss_weight_table"], [130, 2, 1, "", "model_computed_fields"], [130, 2, 1, "", "model_config"], [130, 2, 1, "", "model_fields"], [130, 2, 1, "", "node_truth"], [130, 2, 1, "", "node_truth_table"], [130, 2, 1, "", "path"], [130, 2, 1, "", "pulsemaps"], [130, 2, 1, "", "seed"], [130, 2, 1, "", "selection"], [130, 2, 1, "", "string_selection"], [130, 2, 1, "", "truth"], [130, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[131, 1, 1, "", "ModelConfig"], [131, 1, 1, "", "ModelConfigSaverABC"], [131, 1, 1, "", "ModelConfigSaverMeta"], [131, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[131, 2, 1, "", "arguments"], [131, 4, 1, "", "as_dict"], [131, 2, 1, "", "class_name"], [131, 2, 1, "", "model_computed_fields"], [131, 2, 1, "", "model_config"], [131, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[132, 5, 1, "", "get_all_grapnet_classes"], [132, 5, 1, "", "get_graphnet_classes"], [132, 5, 1, "", "is_graphnet_class"], [132, 5, 1, "", "is_graphnet_module"], [132, 5, 1, "", "list_all_submodules"], [132, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[133, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[133, 2, 1, "", "dataloader"], [133, 2, 1, "", "early_stopping_patience"], [133, 2, 1, "", "fit"], [133, 2, 1, "", "model_computed_fields"], [133, 2, 1, "", "model_config"], [133, 2, 1, "", "model_fields"], [133, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[135, 5, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[136, 5, 1, "", "find_i3_files"], [136, 5, 1, "", "has_extension"], [136, 5, 1, "", "is_gcd_file"], [136, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[137, 5, 1, "", "has_icecube_package"], [137, 5, 1, "", "has_torch_package"], [137, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[138, 1, 1, "", "Logger"], [138, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[138, 4, 1, "", "critical"], [138, 4, 1, "", "debug"], [138, 4, 1, "", "error"], [138, 3, 1, "", "file_handlers"], [138, 3, 1, "", "handlers"], [138, 4, 1, "", "info"], [138, 4, 1, "", "setLevel"], [138, 3, 1, "", "stream_handlers"], [138, 4, 1, "", "warning"], [138, 4, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[138, 4, 1, "", "filter"], [138, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[139, 5, 1, "", "eps_like"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:exception"}, "terms": {"": [0, 7, 8, 9, 11, 13, 15, 33, 44, 46, 48, 51, 52, 54, 61, 63, 68, 81, 85, 89, 92, 93, 102, 115, 118, 120, 124, 126, 130, 131, 138, 139, 142, 143, 144, 145, 147, 148, 149], "0": [9, 11, 13, 15, 44, 46, 49, 54, 59, 73, 79, 82, 83, 91, 92, 93, 95, 100, 101, 103, 106, 109, 118, 121, 122, 123, 130, 143, 144, 146, 147, 149], "000": 143, "001": [144, 149], "01": [144, 149], "0221": 144, "02_data": 144, "03042": 94, "03762": 81, "04616": 122, "04_ensemble_dataset": 144, "05": 122, "06": 141, "06166": 100, "0e04": 147, "0e4": 147, "1": [0, 7, 9, 11, 13, 18, 33, 44, 46, 54, 59, 62, 65, 68, 79, 82, 83, 91, 93, 95, 97, 100, 101, 103, 106, 109, 113, 114, 115, 118, 120, 121, 122, 123, 124, 130, 142, 143, 144, 145, 146, 148, 149], "10": [9, 65, 86, 87, 88, 105, 106, 126, 143, 144, 147, 149], "100": 143, "1000": [143, 144], "10000": [11, 13, 15, 59, 81], "1088": 144, "11": [144, 146], "12": [59, 97, 117, 130, 143, 144], "120": 144, "128": [81, 92, 93, 95, 126, 143, 144, 149], "13": 59, "14": [59, 130, 143, 144], "1536": 117, "15674": 81, "16": [59, 81, 91, 117, 130, 143, 144, 149], "17": 144, "1706": 81, "1748": 144, "1809": 100, "1812": 122, "192": 97, "196": 117, "1e6": 115, "2": [9, 33, 44, 54, 82, 83, 91, 93, 95, 100, 103, 106, 109, 114, 118, 122, 130, 143, 144, 146, 149], "20": [11, 13, 15, 59, 138, 144, 146, 147, 149], "200": [143, 147], "200000": 62, "2018": 141, "2019": 122, "2020": [0, 145, 148], "21": [141, 143, 144], "2209": 94, "2310": 81, "256": [93, 95, 117], "26": 143, "2d": 122, "2nd": [81, 97], "3": [83, 91, 92, 95, 101, 106, 109, 114, 117, 118, 122, 141, 144, 146, 147], "30": 147, "300": [143, 147], "32": [81, 97, 117], "336": [93, 95], "384": [81, 97, 117], "39": [0, 145, 148], "3d": [114, 122], "4": [82, 94, 97, 114, 144, 147, 149], "40": 147, "400": 63, "42": 9, "5": [11, 13, 15, 59, 91, 109, 122, 126, 142, 143, 144, 146, 147, 149], "50": [105, 106, 126, 147], "500": [106, 147], "50000": [59, 130, 143, 144], "5001": 143, "59": 146, "6": [81, 83, 97, 117], "64": 91, "7": [73, 83], "700": 122, "768": 105, "8": [82, 83, 91, 93, 95, 103, 109, 122, 123, 141, 143, 144, 146, 149], "80": [144, 149], "86": [21, 86], "890778": [0, 145, 148], "9": 9, "90": [105, 106], "A": [5, 7, 9, 11, 35, 48, 49, 50, 51, 52, 58, 63, 65, 66, 68, 69, 73, 83, 89, 102, 103, 106, 107, 111, 113, 115, 118, 122, 124, 128, 130, 131, 133, 142, 143, 144, 147, 149], "AND": 122, "AS": 122, "As": [93, 149], "BE": 122, "BUT": 122, "But": 149, "By": [0, 44, 46, 49, 54, 115, 143, 144, 145, 148, 149], "FOR": 122, "For": [36, 105, 120, 143, 144, 149], "IN": 122, "If": [5, 11, 13, 20, 22, 35, 63, 65, 66, 81, 82, 93, 97, 102, 105, 106, 107, 115, 120, 122, 124, 141, 142, 144, 149], "In": [44, 46, 48, 49, 54, 61, 130, 131, 142, 144, 146], "It": [1, 5, 33, 58, 73, 81, 106, 113, 115, 141, 143, 144, 149], "NO": 122, "NOT": [58, 122, 144], "No": [0, 144, 145, 148], "OF": 122, "ONE": 65, "OR": 122, "On": 5, "One": 144, "Or": 143, "Such": 58, "THE": 122, "TO": 122, "That": [11, 13, 15, 93, 114, 121, 144, 149], "The": [0, 7, 9, 11, 13, 15, 17, 33, 36, 44, 46, 54, 58, 61, 62, 63, 68, 69, 73, 75, 79, 81, 82, 83, 91, 93, 95, 97, 100, 102, 106, 109, 113, 114, 115, 117, 118, 120, 121, 122, 135, 142, 143, 145, 147, 148], "Then": [5, 141], "There": [144, 149], "These": [0, 48, 61, 63, 102, 141, 143, 144, 145, 147, 148, 149], "To": [143, 144, 146, 147, 149], "WITH": 122, "Will": [5, 65, 66, 68, 73, 75, 100, 142], "With": [144, 147, 149], "_": 144, "__": [33, 36, 144], "_____________________": 122, "__call__": [18, 20, 48, 69, 142, 143, 144, 147], "__fields__": [128, 130, 131, 133], "__init__": [130, 131, 142, 143, 144, 149], "_accepted_extractor": [142, 147], "_accepted_file_extens": [142, 147], "_and_": 93, "_column_nam": 142, "_construct_edg": 100, "_definition_": 144, "_extractor": [142, 147], "_extractor_nam": [142, 147], "_file_extens": 142, "_file_hash": 5, "_fit_weight": 124, "_forward": 149, "_indic": [11, 13], "_layer": 149, "_lrschedul": 120, "_may_": [11, 13], "_merge_datafram": 142, "_pred": 115, "_save_fil": 142, "_sensor_tim": 147, "_sensor_xyz": 147, "_tabl": 142, "_task": [89, 111], "_verify_column": 142, "_x_": 144, "a__b": 33, "ab": [59, 122, 130, 143, 144], "abc": [7, 11, 18, 48, 61, 68, 107, 121, 124, 129, 130, 131], "abcmeta": [130, 131], "abil": 143, "abl": [33, 105, 142, 144, 146, 147, 149], "about": [107, 128, 130, 131, 133, 143, 144, 147], "abov": [122, 124, 143, 144, 147, 149], "absopt": 105, "absorpt": 106, "abstract": [1, 5, 11, 61, 85, 96, 102, 115, 129, 144], "abstractmethod": 143, "acceler": 1, "accept": [48, 141, 149], "accepted_extractor": [48, 142], "accepted_file_extens": [48, 142], "access": [121, 143], "accompani": [44, 46, 49, 54, 144], "accord": [79, 83, 100, 102, 103, 106, 122], "achiev": 146, "achitectur": 149, "across": [1, 2, 11, 13, 15, 36, 55, 68, 83, 89, 111, 122, 125, 126, 127, 138, 147], "act": [115, 122, 144, 149], "action": 122, "activ": [82, 89, 91, 93, 105, 109, 115, 141], "activation_lay": 93, "actual": [144, 149], "ad": [7, 11, 13, 15, 21, 44, 46, 54, 81, 93, 97, 102, 105, 106], "adam": [144, 149], "adapt": [144, 149], "add": [11, 82, 93, 126, 135, 141, 144, 147], "add_count": [105, 106], "add_global_variables_after_pool": [93, 144, 149], "add_ice_properti": 105, "add_inactive_sensor": 102, "add_label": [11, 143, 144], "add_norm_lay": 93, "add_to_databas": 124, "addit": [48, 61, 79, 82, 89, 122, 124, 142, 144, 149], "additional_attribut": [89, 123, 144, 149], "address": 149, "adher": [141, 149], "adjac": 85, "adjust": 149, "advanc": [1, 83], "after": [9, 82, 91, 93, 95, 120, 126, 130, 143, 144, 149], "again": [144, 149], "against": 5, "aggr": 82, "aggreg": [82, 83], "agnost": [0, 145, 148, 149], "agreement": [0, 141, 145, 148], "ai": 144, "aim": [0, 1, 141, 144, 145, 148], "algorithm": 25, "all": [1, 5, 11, 13, 15, 17, 18, 20, 22, 35, 58, 63, 65, 66, 73, 81, 82, 83, 85, 93, 96, 101, 102, 107, 122, 124, 128, 129, 130, 131, 132, 133, 138, 141, 142, 143, 144, 147, 149], "allow": [0, 5, 38, 67, 78, 83, 120, 128, 133, 143, 144, 145, 148, 149], "along": [106, 144, 149], "alongsid": [144, 149], "alreadi": 58, "also": [7, 11, 13, 15, 59, 91, 130, 142, 143, 144, 147, 149], "alter": 102, "altern": [93, 122, 141], "alwai": 123, "amount": 91, "an": [0, 18, 36, 44, 46, 49, 54, 59, 102, 103, 109, 110, 122, 136, 138, 141, 142, 144, 145, 146, 147, 148, 149], "anaconda": 146, "analys": [67, 144], "analysi": 68, "angl": [114, 121, 144, 149], "ani": [6, 7, 8, 9, 11, 13, 15, 33, 34, 35, 36, 48, 50, 51, 52, 61, 63, 73, 79, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 113, 114, 115, 117, 118, 120, 122, 124, 126, 128, 129, 130, 131, 132, 133, 138, 143, 144, 149], "annot": [130, 131, 133], "anoth": [130, 131, 143, 144], "anyth": 141, "api": [1, 142, 144], "appear": [68, 143, 144], "append": 102, "appli": [7, 11, 13, 15, 44, 46, 47, 48, 54, 68, 82, 83, 89, 91, 92, 93, 94, 95, 96, 97, 106, 109, 111, 113, 115, 117, 122, 132, 142, 143, 144], "applic": [33, 143, 144, 149], "appropri": [58, 115, 144], "approx": 122, "approxim": 63, "ar": [0, 1, 4, 5, 11, 13, 15, 20, 22, 35, 36, 48, 59, 61, 62, 63, 68, 73, 82, 83, 91, 93, 95, 98, 99, 100, 102, 103, 104, 105, 106, 109, 113, 122, 124, 130, 131, 141, 142, 143, 144, 145, 147, 148, 149], "arbitrari": [0, 145, 148], "arca": 88, "arca115": [84, 88], "architectur": [1, 92, 93, 94, 95, 97, 109, 117, 144, 149], "archiv": 123, "area": 1, "arg": [11, 13, 15, 17, 35, 79, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 107, 109, 110, 111, 113, 114, 115, 117, 122, 126, 128, 138, 142, 147], "argpars": 125, "argument": [5, 9, 62, 65, 66, 97, 120, 124, 126, 128, 130, 131, 133, 143, 144, 147, 149], "argumentpars": [125, 126], "aris": 122, "arrai": [18, 30, 33, 105, 106, 118, 142, 143, 144, 147], "array_to_sequ": [78, 118], "arriv": 143, "art": [0, 145, 148], "articl": 144, "artifact": [144, 149], "arxiv": [81, 100, 122], "as_dict": [128, 130, 131, 144, 149], "assert": [142, 143], "assertionerror": 142, "assign": [7, 11, 13, 15, 79, 83, 103, 141, 142], "associ": [73, 75, 102, 106, 114, 115, 122, 142, 143, 144, 147, 149], "assort": 139, "assum": [5, 73, 81, 85, 102, 106, 115, 118], "atmospher": 143, "attach": 58, "attach_index": [55, 58], "attempt": [20, 144], "attent": [81, 82, 97, 117], "attention_rel": [80, 82], "attn_drop": 82, "attn_head_dim": 82, "attn_mask": 82, "attribut": [5, 11, 13, 15, 79, 115, 143, 144, 149], "attributecoarsen": [78, 79], "author": [92, 94, 122], "auto": 115, "autom": 141, "automat": [22, 62, 81, 102, 122, 141, 142, 144, 147], "automatic_log_bin": 124, "auxiliari": [4, 81, 144, 149], "avail": [5, 7, 22, 65, 66, 113, 114, 115, 137, 142, 143, 144, 146, 147, 149], "available_backend": 5, "available_t": 142, "averag": [83, 110, 122], "avg": 79, "avg_pool": 79, "avg_pool_x": 79, "avoid": [13, 138, 141], "awai": [1, 144], "azimiuth": 121, "azimuth": [4, 114, 121], "azimuth_kappa": 114, "azimuth_kei": 121, "azimuth_pr": 114, "azimuthreconstruct": [112, 114], "azimuthreconstructionwithkappa": [112, 114], "b": [33, 79, 83, 118, 144, 147, 149], "backbon": 144, "backend": [5, 12, 14, 60, 62, 65, 66, 147], "backward": [106, 122], "baikal": 65, "baikalgvd8": [84, 88], "baikalgvdsmal": [64, 65], "bar": 120, "base": [0, 4, 5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 59, 61, 62, 63, 65, 66, 68, 69, 73, 75, 77, 79, 81, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 107, 109, 110, 111, 113, 114, 115, 117, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 133, 137, 138, 142, 143, 144, 145, 148, 149], "base_config": 127, "baseclass": 68, "baseconfig": [127, 128, 129, 130, 131, 133], "basemodel": [128, 130, 131], "basi": 149, "basic": [1, 144], "batch": [0, 8, 13, 62, 79, 82, 83, 89, 109, 111, 118, 123, 126, 143, 145, 148], "batch_idx": [89, 110, 111, 118], "batch_siz": [8, 9, 118, 123, 143, 144, 149], "batch_split": 123, "becaus": [57, 144, 149], "been": [5, 73, 122, 141, 149], "befor": [11, 13, 93, 101, 109, 115, 120], "behavior": 142, "behaviour": 120, "behind": [144, 149], "being": [20, 73, 81, 113, 115, 143, 144, 149], "beitv2": 82, "belong": 118, "below": [5, 59, 105, 124, 141, 142, 144, 145, 147, 148, 149], "benchmark": 5, "besid": 143, "bessel": 122, "best": [0, 120, 141, 145, 148], "better": 141, "between": [38, 65, 81, 89, 98, 99, 100, 101, 104, 111, 115, 118, 120, 122, 124, 130, 131, 144, 149], "bia": [82, 117], "bias": [144, 149], "big": [144, 149], "biject": 142, "bin": 124, "binari": [111, 113, 122, 149], "binaryclassificationtask": [112, 113, 144, 149], "binaryclassificationtasklogit": [112, 113], "binarycrossentropyloss": [119, 122], "bjoernlow": [119, 124], "black": 141, "blob": [102, 122, 144], "block": [0, 1, 80, 82, 144, 145, 148], "block_rel": [80, 82], "boilerpl": 149, "bool": [8, 34, 35, 36, 58, 59, 61, 73, 81, 82, 89, 91, 93, 95, 97, 102, 105, 106, 107, 111, 117, 120, 122, 123, 124, 126, 132, 135, 136, 137, 138], "boost": 36, "border": 30, "both": [0, 22, 111, 115, 144, 145, 147, 148, 149], "boundari": 30, "box": [142, 144, 149], "branch": 141, "break_cyclic_recurs": [32, 36], "broken": [44, 46, 49, 54], "bucket": [117, 123], "bug": [141, 144], "build": [0, 1, 78, 85, 100, 101, 105, 106, 107, 128, 130, 131, 144, 145, 148, 149], "built": [0, 78, 102, 143, 144, 145, 147, 148, 149], "c": [20, 33, 83, 101, 122, 144], "c_": 122, "cach": 13, "cache_s": 13, "calcul": [73, 81, 89, 100, 103, 105, 111, 118, 121, 122, 143, 144, 149], "calculate_distance_matrix": [78, 118], "calculate_xyzt_homophili": [78, 118], "calibr": [34, 36], "call": [7, 22, 36, 81, 83, 115, 120, 124, 138, 142, 144, 147, 149], "callabl": [8, 11, 36, 82, 83, 85, 86, 87, 88, 102, 110, 115, 123, 124, 128, 130, 131, 132, 137, 147], "callback": [89, 119, 144, 149], "can": [0, 1, 5, 9, 11, 13, 15, 18, 22, 25, 73, 81, 83, 102, 124, 126, 128, 130, 131, 141, 142, 143, 144, 145, 147, 148, 149], "cannot": [36, 109, 124, 128, 133], "cap": 124, "capabl": [0, 111, 145, 148], "captur": [144, 149], "care": 143, "carlo": 34, "cascad": 114, "case": [11, 13, 15, 22, 44, 46, 49, 54, 73, 83, 106, 115, 142, 143, 144, 146, 149], "cast": [22, 36], "cast_object_to_pure_python": [32, 36], "cast_pulse_series_to_pure_python": [32, 36], "caus": 144, "caveat": [144, 149], "cc": 121, "cd": 146, "center": 100, "centr": 100, "central": [144, 146], "certain": 144, "cfg": 11, "cframe": 20, "chain": [0, 1, 67, 78, 89, 111, 122, 145, 146, 148], "chang": [122, 141, 144, 149], "charg": [4, 81, 91, 105, 106, 109, 122, 143, 144, 149], "charge_column": 105, "check": [8, 34, 35, 36, 48, 58, 105, 126, 136, 137, 141, 147], "checkpoint": 144, "checkpointing_bas": 144, "chenli2049": 117, "cherenkov": [105, 106, 144, 147, 149], "choic": [143, 144, 149], "choos": [144, 149], "chosen": [100, 106, 138, 143], "chunk": 142, "citat": 5, "cite": 5, "ckpt": [144, 149], "ckpt_path": 89, "claim": 122, "clash": 138, "class": [4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 59, 61, 62, 63, 65, 66, 68, 69, 73, 75, 79, 81, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 107, 109, 110, 111, 113, 114, 115, 117, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 138, 141, 142, 143], "class_nam": [11, 35, 48, 50, 51, 52, 61, 131, 138, 143, 144, 149], "classif": [1, 111, 112, 115, 122, 144, 149], "classifi": [113, 143, 144, 149], "classmethod": [8, 11, 107, 122, 128, 129, 144, 149], "classvar": [128, 130, 131, 133], "clean": [73, 141, 146], "clean_up_data_object": 109, "cleaning_modul": 72, "cleanup": 9, "clear": [138, 143], "cli": 126, "clone": 146, "close": 9, "closest": 120, "cloud": [144, 149], "cls_tocken": 97, "cluster": [79, 82, 83, 91, 93, 95, 105, 106, 109], "cluster_column": 106, "cluster_index": 83, "cluster_indic": 106, "cluster_on": [105, 106], "cluster_summarize_with_percentil": [98, 106], "cnn": [144, 149], "coarsen": [78, 83], "code": [0, 30, 44, 54, 58, 102, 130, 131, 142, 143, 144, 145, 147, 148, 149], "coincid": 105, "collabor": [1, 144, 149], "collate_fn": [3, 8, 119, 123], "collator_sequence_bucklet": [119, 123], "collect": [11, 19, 32, 122, 139, 144, 149], "column": [7, 11, 13, 15, 18, 40, 42, 44, 46, 54, 58, 62, 63, 69, 75, 77, 81, 85, 89, 91, 100, 102, 103, 105, 106, 109, 113, 114, 115, 118, 122, 124, 142, 143, 144, 147, 149], "column_nam": [40, 142], "column_offset": 106, "columnmissingexcept": [11, 13, 76, 77], "com": [97, 102, 117, 122, 144, 146], "combin": [17, 33, 46, 91, 111, 122, 130, 149], "combine_extractor": 16, "combinedextractor": [16, 17], "come": [5, 89, 115, 142, 143, 144, 149], "command": 126, "comment": 5, "commit": 141, "common": [0, 1, 122, 130, 131, 134, 137, 143, 144, 145, 148], "compar": [144, 149], "comparison": [25, 122], "compat": [48, 59, 89, 111, 115, 142, 143, 144, 149], "competit": [81, 82, 86, 95, 97], "complet": [0, 78, 144, 145, 146, 148, 149], "complex": [0, 78, 144, 145, 148], "compon": [0, 1, 78, 89, 107, 111, 144, 145, 148, 149], "compos": [144, 149], "composit": 138, "comprehens": 144, "compress": [5, 143], "compris": [0, 145, 148], "comput": [69, 82, 89, 101, 111, 115, 118, 122, 128, 130, 131, 133, 143, 144], "compute_loss": [89, 111, 115], "compute_minkowski_distance_mat": [99, 101], "computedfieldinfo": [128, 130, 131, 133], "con": [144, 149], "concatdataset": 11, "concaten": [11, 33, 93], "concept": 141, "conceptu": [142, 144], "concret": 144, "condit": 122, "confid": 144, "config": [8, 59, 120, 122, 125, 126, 143, 144, 149], "config_dir": [144, 149], "configdict": [128, 130, 131, 133], "configur": [0, 1, 9, 11, 45, 46, 69, 78, 89, 107, 127, 128, 130, 131, 133, 138, 142, 144, 145, 148, 149], "configure_optim": 89, "conflict": 144, "conform": [128, 130, 131, 133], "conjunct": [18, 115], "conn": 144, "connect": [0, 9, 100, 101, 102, 105, 122, 143, 144, 145, 148], "consequ": 107, "consid": [73, 91, 143, 144, 147], "consist": [81, 126, 138, 141, 144, 149], "consortium": [0, 145, 148], "constant": [1, 3, 140, 143, 144, 149], "constitut": [62, 143], "constraint": [89, 144], "construct": [5, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 38, 40, 42, 48, 50, 51, 52, 59, 61, 62, 63, 65, 66, 69, 79, 80, 81, 82, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 117, 120, 121, 122, 123, 124, 126, 129, 130, 131, 138, 142, 143, 144, 149], "constructor": [142, 143, 144], "consult": 149, "consum": 144, "consumpt": 143, "contain": [0, 5, 6, 7, 11, 13, 15, 16, 17, 20, 33, 34, 37, 38, 39, 42, 44, 46, 48, 49, 50, 54, 58, 61, 62, 63, 64, 65, 68, 69, 73, 75, 77, 89, 93, 98, 99, 101, 102, 103, 104, 106, 107, 111, 115, 118, 122, 124, 126, 142, 143, 144, 145, 147, 148, 149], "containeris": 1, "content": [142, 149], "context": 66, "continu": [0, 122, 144, 145, 148], "contract": 122, "contribut": [0, 122, 144, 145, 148], "contributor": 141, "conveni": [1, 141, 144, 149], "convent": [44, 46, 49, 54], "convers": [7, 37, 38, 42, 44, 54, 105, 143, 144, 147], "convert": [0, 1, 3, 5, 7, 13, 20, 33, 35, 44, 45, 46, 54, 56, 62, 64, 118, 142, 143, 144, 145, 146, 147, 148], "converteddataset": 5, "convnet": [90, 144], "convolut": [82, 92, 93, 94, 95], "coo": 143, "coordin": [30, 85, 101, 105, 106, 118, 144], "copi": [122, 143], "copyright": 122, "core": 96, "correct": 122, "correpond": 57, "correspond": [11, 13, 15, 33, 36, 57, 93, 102, 106, 124, 128, 130, 131, 133, 136, 143, 144, 147, 149], "cosh": 122, "could": [141, 144, 149], "counterpart": 143, "cover": 59, "cpu": [7, 44, 46, 54, 69], "creat": [5, 9, 58, 102, 103, 105, 128, 129, 133, 141, 143, 149], "create_t": [55, 58], "create_table_and_save_to_sql": [55, 58], "creator": 5, "critic": [138, 144, 147], "cross": 122, "crossentropyloss": [119, 122], "csv": [123, 130, 143, 144, 147, 149], "ctx": 122, "cuda": 146, "curat": 5, "curated_datamodul": 3, "curateddataset": [3, 5, 65, 66], "curi": [0, 145, 148], "current": [59, 109, 120, 141, 144], "curv": 124, "custom": [11, 48, 76, 102, 120, 149], "custom_label_funct": 102, "customdomcoarsen": [78, 79], "customis": 120, "cut": 123, "d": [33, 101, 102, 105, 118, 141, 147], "damag": 122, "data": [0, 1, 65, 66, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 115, 117, 118, 121, 123, 126, 128, 130, 133, 137, 140, 143, 144, 145, 148, 149], "data_path": 102, "databas": [5, 15, 58, 63, 124, 143, 144], "database_exist": [55, 58], "database_indic": 123, "database_nam": 63, "database_path": [58, 124], "database_table_exist": [55, 58], "dataclass": [3, 34], "dataconfig": [130, 143], "dataconvert": [3, 45, 61, 62, 63, 144, 147], "dataformat": [60, 63], "datafram": [58, 59, 61, 85, 89, 123, 124, 142, 144, 147, 149], "dataload": [3, 5, 9, 13, 65, 66, 89, 102, 123, 133, 143, 144, 149], "datamodul": [3, 5], "dataset": [1, 3, 5, 8, 9, 24, 59, 62, 77, 91, 102, 109, 126, 130, 140, 147, 149], "dataset_1": [143, 144], "dataset_2": [143, 144], "dataset_3": [143, 144], "dataset_arg": 9, "dataset_config": [127, 144, 149], "dataset_config_path": [144, 149], "dataset_dir": 5, "dataset_refer": 9, "datasetconfig": [8, 11, 59, 127, 130, 143, 149], "datasetconfigsav": 130, "datasetconfigsaverabcmeta": [127, 130], "datasetconfigsavermeta": [127, 130], "db": [63, 123, 124, 143, 144], "db_count_norm": 124, "ddp": [144, 149], "de": 33, "deactiv": [89, 115], "deal": 122, "debug": [138, 144], "decai": 97, "decor": [125, 137], "dedic": 141, "deem": 36, "deep": [0, 5, 61, 63, 82, 95, 97, 142, 144, 145, 146, 147, 148, 149], "deepcopi": 135, "deepcor": [4, 21, 86], "deepic": [90, 97], "def": [142, 143, 144, 147, 149], "default": [5, 7, 9, 11, 13, 15, 20, 22, 30, 33, 42, 44, 46, 49, 54, 58, 62, 63, 65, 66, 68, 69, 73, 75, 81, 82, 83, 91, 92, 93, 94, 95, 97, 100, 101, 102, 103, 105, 106, 107, 109, 115, 117, 118, 120, 121, 122, 124, 126, 128, 130, 136, 143, 144], "default_prediction_label": [113, 114, 115, 149], "default_target_label": [113, 114, 115, 149], "default_typ": 58, "defin": [5, 11, 13, 15, 59, 65, 66, 69, 73, 75, 83, 98, 99, 100, 102, 104, 106, 123, 128, 130, 131, 133, 143, 144, 147, 149], "definit": [100, 102, 103, 105, 107, 115, 141, 144, 149], "deleg": 138, "deliv": 89, "demo_ic": 88, "demo_wat": 88, "denot": [18, 120, 121, 142, 147], "dens": 83, "depend": [0, 81, 142, 143, 144, 145, 148, 149], "deploi": [0, 1, 67, 69, 144, 145, 146, 148], "deploy": [0, 1, 102, 140, 144, 145, 147, 148, 149], "deployment_modul": 67, "deploymentmodul": [67, 68, 69, 75], "deprec": [43, 44, 53, 54, 135], "deprecated_method": [43, 53, 70], "deprecation_tool": 125, "depth": [82, 97, 106, 117], "depth_rel": 97, "describ": [5, 141, 144], "descript": [5, 107, 126], "design": [1, 144, 147], "desir": [124, 136], "detail": [1, 5, 91, 107, 120, 143, 144, 146, 147, 149], "detector": [0, 1, 30, 78, 102, 103, 105, 143, 144, 145, 148, 149], "detector_respons": 144, "determin": [68, 91], "develop": [0, 1, 141, 143, 144, 145, 146, 147, 148, 149], "deviat": [102, 103, 106], "devic": 69, "df": [58, 142], "dfg": [0, 145, 148], "dict": [5, 8, 9, 11, 15, 22, 33, 36, 58, 69, 85, 86, 87, 88, 89, 97, 102, 103, 105, 107, 110, 120, 123, 126, 128, 130, 131, 132, 133, 135, 142, 143, 144, 147], "dictionari": [11, 15, 18, 33, 34, 36, 48, 58, 102, 103, 107, 128, 130, 131, 133, 142, 147], "differ": [0, 11, 13, 15, 18, 20, 38, 39, 40, 42, 48, 49, 50, 103, 123, 141, 142, 143, 144, 145, 147, 148, 149], "difficult": 143, "diffier": [144, 149], "digit": 81, "dim": [81, 82], "dimenion": [93, 95], "dimens": [81, 82, 86, 87, 88, 91, 92, 93, 95, 97, 106, 109, 115, 117, 118, 122, 147, 149], "dimension": [81, 82, 143, 149], "dir": 136, "dir_with_fil": [142, 147], "dir_x_pr": 114, "dir_y_pr": 114, "dir_z_pr": 114, "direct": [95, 97, 106, 113, 114, 115, 119, 121, 143, 147], "direction_kappa": 114, "directionreconstructionwithkappa": [112, 114, 144, 149], "directli": [0, 93, 142, 144, 145, 147, 148, 149], "directori": [5, 7, 44, 46, 48, 49, 50, 51, 52, 54, 61, 62, 65, 66, 120, 136, 142, 144, 149], "dirti": 144, "discard_empty_ev": 73, "disconnect": 143, "discuss": 141, "disk": [142, 143, 144], "distanc": [100, 101, 103, 118], "distribut": [83, 93, 114, 115, 122, 124, 146, 149], "distribution_strategi": 89, "ditto": 122, "diverg": 122, "divid": 68, "dk": 5, "dl": [144, 149], "dnn": [24, 31], "do": [0, 69, 73, 122, 130, 131, 141, 143, 144, 145, 148, 149], "do_shuffl": [3, 8], "doc": 144, "docformatt": 141, "docker": 1, "docstr": 141, "document": [122, 147, 149], "doe": [36, 113, 115, 131, 142, 143, 144, 149], "doesn": 58, "dom": [8, 11, 13, 15, 79, 83, 91, 105, 106, 109, 123, 144, 149], "dom_i": [4, 86, 105], "dom_numb": 4, "dom_tim": [4, 105], "dom_typ": 4, "dom_x": [4, 86, 105], "dom_z": [4, 86, 105], "domain": [0, 1, 3, 67, 144, 145, 148], "domandtimewindowcoarsen": [78, 79], "domcoarsen": [78, 79], "don": [120, 142], "done": [22, 83, 138, 141, 142, 144, 147], "dot": 82, "download": [5, 65, 66, 146], "download_dir": [5, 65, 66], "downsid": 143, "drawn": [98, 99, 103, 104, 144, 149], "drhb": 97, "drop": [82, 92], "drop_path": 82, "drop_prob": 82, "dropout": [82, 91, 109], "dropout_prob": 82, "dropout_ratio": 92, "droppath": [80, 82], "dtype": [11, 13, 15, 102, 103, 139, 143, 144, 149], "due": [143, 144, 149], "dummy_pid": [143, 144], "dump": [128, 130, 131, 142, 143, 144], "duplciat": 120, "duplic": 105, "dure": [82, 97, 102, 115, 120, 147], "dynam": [22, 82, 93, 94, 95, 144, 149], "dynedg": [73, 75, 90, 94, 95, 97, 144, 149], "dynedge_arg": 97, "dynedge_jinst": 90, "dynedge_kaggle_tito": 90, "dynedge_layer_s": [93, 144, 149], "dynedgeconv": [80, 82, 93], "dynedgejinst": [90, 94], "dynedgetito": [90, 91, 95], "dyntran": [80, 82, 91, 95], "dyntrans1": 82, "dyntrans_layer_s": [91, 95], "e": [1, 5, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 36, 38, 42, 58, 59, 63, 69, 73, 75, 79, 81, 82, 83, 85, 86, 87, 88, 92, 96, 100, 102, 103, 105, 106, 107, 110, 111, 113, 114, 115, 118, 120, 121, 122, 124, 128, 138, 141, 142, 143, 144, 146, 149], "each": [5, 22, 33, 36, 57, 58, 62, 63, 68, 69, 79, 81, 82, 83, 86, 87, 88, 91, 93, 95, 100, 102, 103, 105, 106, 109, 113, 115, 118, 120, 122, 123, 136, 142, 143, 144, 147, 149], "earli": [120, 126], "early_stopping_pati": [89, 133], "earlystop": 120, "easi": [0, 142, 143, 144, 145, 148, 149], "easili": [1, 144, 149], "easy_model": 78, "easysyntax": [78, 89, 111], "ed": 122, "edg": [82, 83, 93, 94, 95, 98, 102, 103, 104, 105, 118, 143, 144, 149], "edge_attr": [143, 144], "edge_definit": 102, "edge_index": [79, 82, 118, 143, 144], "edgeconv": 82, "edgeconvtito": [80, 82], "edgedefinit": [98, 99, 100, 101, 102, 103, 104, 144, 149], "edgelessgraph": [98, 103], "effect": [120, 141, 144, 149], "effort": [141, 143, 147], "either": [0, 5, 9, 11, 15, 20, 65, 66, 122, 142, 144, 145, 148], "elast": 4, "element": [11, 13, 18, 33, 36, 89, 111, 118, 123, 132, 142, 144, 147], "elementwis": 122, "elimin": 73, "els": [73, 121, 142, 147], "ema": 110, "embed": [80, 91, 97, 109, 113, 115, 117], "embedding_dim": [91, 109], "empti": 73, "en": 144, "enabl": [0, 3, 89, 145, 148], "encod": [81, 121], "encount": 144, "encourag": [141, 144], "end": [0, 1, 120, 144, 145, 148], "energi": [4, 114, 115, 124, 143, 144, 147], "energy_cascad": [4, 114], "energy_cascade_pr": 114, "energy_pr": 114, "energy_reco": 75, "energy_sigma": 114, "energy_track": [4, 114], "energy_track_pr": 114, "energyreconstruct": [112, 114, 144, 149], "energyreconstructionwithpow": [112, 114], "energyreconstructionwithuncertainti": [112, 114, 144], "energytcreconstruct": [112, 114], "engin": [0, 145, 148], "enough": 107, "ensemble_dataset": [143, 144], "ensembledataset": [10, 11, 130, 143, 144], "ensembleloss": [119, 122], "ensur": [36, 57, 122, 138, 141, 149], "entir": [11, 13, 107, 142, 144, 149], "entiti": [144, 149], "entri": [73, 75, 93, 118, 126, 147], "entropi": 122, "enum": 36, "env": 146, "environ": [49, 146], "ep": [139, 144, 149], "epoch": [110, 120, 126], "eps_lik": [125, 139], "equival": [36, 144, 149], "erda": [5, 65], "erdahost": 66, "erdahosteddataset": [3, 5, 65, 66], "error": [122, 138, 141, 142, 144], "especi": 73, "establish": 149, "etc": [0, 122, 138, 143, 144, 145, 147, 148], "euclidean": [100, 141], "euclideandistanceloss": [119, 122], "euclideanedg": [99, 100], "european": [0, 145, 148], "eval": [107, 146], "evalu": [5, 115], "even": 57, "event": [0, 1, 5, 7, 9, 11, 13, 15, 17, 27, 42, 44, 46, 54, 58, 59, 62, 63, 65, 66, 73, 81, 83, 91, 102, 105, 106, 111, 115, 117, 118, 121, 122, 123, 124, 130, 142, 144, 145, 147, 148, 149], "event_no": [7, 11, 13, 15, 44, 46, 54, 58, 59, 62, 63, 124, 130, 143, 144, 149], "event_truth": 5, "events_per_batch": 62, "everi": [142, 144, 147], "everyth": [144, 149], "everytim": 141, "exact": [94, 122, 149], "exactli": [122, 138, 143], "exampl": [7, 33, 59, 79, 83, 106, 118, 122, 130, 131, 142, 143, 146], "example_energy_reconstruction_model": [126, 144, 149], "exce": 124, "exceed": 63, "except": [1, 140, 142], "exclud": 22, "exclude_kei": 22, "excluding_valu": 118, "execut": 58, "exist": [0, 11, 13, 15, 58, 78, 121, 130, 143, 144, 145, 148, 149], "exist_ok": [144, 149], "expand": [0, 144, 145, 148], "expans": 97, "expect": [58, 59, 61, 73, 75, 102, 105, 143, 144, 149], "expects_merged_datafram": 61, "experi": [0, 1, 5, 6, 7, 47, 48, 69, 119, 142, 144, 145, 148], "experiment": 149, "expert": 1, "explain": 144, "explicitli": [123, 128, 133], "exponenti": 122, "export": [142, 143, 144, 147, 149], "expos": 1, "express": [107, 122], "extend": [0, 1, 142, 143, 145, 148], "extens": [1, 5, 48, 61, 136], "extern": [143, 144], "extra": [82, 149], "extra_repr": [82, 107], "extra_repr_recurs": 107, "extracor_nam": 48, "extract": [7, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 38, 40, 41, 42, 57, 73, 75, 115, 142, 144, 147], "extractor": [3, 7, 44, 46, 47, 48, 54, 73, 75], "extractor_nam": [17, 18, 20, 22, 25, 38, 40, 42, 142, 147], "f": [83, 142, 144, 149], "f1": 83, "f2": 83, "f_absorpt": 106, "f_scatter": 106, "factor": [82, 106, 120, 122, 144, 149], "fail": 17, "fals": [35, 73, 81, 82, 93, 97, 102, 107, 117, 120, 122, 124, 130, 144, 149], "fanci": 144, "fashion": 1, "fast": [0, 143, 144, 145, 148], "faster": [0, 142, 143, 145, 148], "favorit": 146, "favourit": 144, "fbeezabg5a": 5, "fc": 83, "featur": [1, 3, 4, 5, 11, 13, 15, 21, 63, 65, 66, 73, 75, 81, 82, 83, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 109, 113, 117, 118, 123, 130, 141, 143, 144, 147, 149], "feature_idx": 106, "feature_map": [85, 86, 87, 88, 147], "feature_nam": 106, "features_subset": [82, 91, 93, 95, 109, 144, 149], "feedforward": 82, "feel": 144, "fetch": 126, "few": [0, 78, 141, 142, 143, 144, 145, 148, 149], "fiber_id": 87, "field": [121, 128, 130, 131, 133, 135, 142, 143, 144, 147], "fieldinfo": [128, 130, 131, 133], "figur": 0, "file": [0, 1, 3, 5, 7, 11, 13, 15, 18, 20, 33, 35, 38, 39, 40, 41, 42, 44, 46, 48, 49, 50, 51, 52, 54, 56, 57, 61, 62, 63, 68, 69, 73, 75, 102, 107, 120, 122, 123, 126, 127, 128, 129, 130, 131, 136, 138, 142, 143, 144, 145, 146, 147, 148, 149], "file_extens": 61, "file_handl": 138, "file_path": [123, 142, 147], "file_read": [7, 142, 147], "filehandl": 138, "filenam": 136, "fileread": [18, 48], "files_list": 57, "filesi": 125, "fill": 5, "filter": [35, 44, 46, 49, 54, 138, 147], "filter_ani": 35, "filter_nam": 35, "filtermask": 35, "final": [0, 7, 83, 120, 130, 143, 144, 145, 148], "find": [20, 101, 136, 143, 144, 147, 149], "find_fil": [48, 49, 50, 51, 52, 142], "find_i3_fil": [125, 136], "first": [81, 91, 101, 109, 120, 123, 141, 144, 147], "fisher": 122, "fit": [9, 89, 122, 124, 133, 144, 149], "fit_weight": 124, "five": 143, "fix": [59, 144], "flag": [21, 73], "flake8": 141, "flatten": 33, "flatten_nested_dictionari": [32, 33], "flexibil": 149, "flexibl": 59, "float": [11, 13, 15, 73, 82, 89, 91, 92, 100, 101, 102, 103, 105, 106, 109, 120, 122, 123, 124, 130, 143], "float32": [11, 13, 15, 102, 103], "float64": 122, "flow": [115, 149], "flowchart": [0, 145, 148], "fly": [143, 144], "fn": [11, 36, 128, 132], "fn_kwarg": 132, "folder": [44, 46, 49, 50, 51, 52, 54, 68, 142], "folk": 144, "follow": [89, 93, 111, 122, 124, 141, 142, 143, 144], "fork": 141, "form": [0, 18, 78, 113, 128, 133, 142, 143, 145, 148, 149], "format": [0, 1, 3, 5, 7, 11, 33, 37, 38, 48, 50, 61, 62, 63, 81, 107, 109, 130, 141, 142, 143, 144, 145, 146, 147, 148, 149], "forward": [79, 81, 82, 85, 89, 91, 92, 93, 94, 95, 96, 97, 100, 102, 105, 109, 111, 115, 117, 122, 149], "found": [36, 44, 46, 49, 54, 62, 106, 122, 143, 144], "four": 81, "fourier": 81, "fourierencod": [80, 81, 97, 117], "fraction": [92, 109, 123], "frame": [20, 22, 32, 35, 36, 75], "frame_is_montecarlo": [32, 34], "frame_is_nois": [32, 34], "framework": [0, 144, 145, 148], "free": [0, 122, 144, 145, 148], "freeli": 144, "frequenc": 81, "friendli": [0, 61, 63, 142, 144, 145, 146, 148], "from": [0, 1, 5, 7, 8, 9, 11, 13, 15, 18, 19, 20, 22, 24, 25, 27, 33, 34, 35, 36, 38, 40, 41, 42, 48, 49, 51, 52, 56, 61, 63, 65, 66, 81, 83, 95, 97, 100, 102, 105, 106, 107, 110, 113, 114, 115, 118, 120, 121, 122, 128, 129, 130, 131, 133, 138, 141, 142, 143, 144, 145, 147, 148, 149], "from_config": [11, 107, 129, 130, 131, 143, 144, 149], "from_dataset_config": [8, 144, 149], "full": [62, 144, 149], "fulli": [142, 144, 149], "func": 144, "function": [0, 7, 8, 11, 20, 36, 38, 42, 57, 58, 73, 75, 79, 82, 83, 86, 87, 88, 93, 102, 106, 107, 115, 118, 122, 123, 125, 130, 131, 132, 135, 136, 137, 139, 143, 145, 147, 148, 149], "fund": [0, 145, 148], "furnish": 122, "further": 73, "furthermor": 109, "g": [1, 5, 11, 13, 15, 17, 18, 20, 30, 33, 36, 58, 59, 63, 73, 75, 83, 102, 105, 106, 115, 118, 122, 124, 138, 141, 143, 144, 146, 149], "galatict": 23, "gamma_1": 82, "gamma_2": 82, "gather": 106, "gather_cluster_sequ": [98, 106], "gcd": [20, 34, 44, 46, 49, 54, 57, 73, 75, 136], "gcd_dict": [34, 36], "gcd_file": [6, 20, 73, 75], "gcd_list": [57, 136], "gcd_rescu": [44, 46, 49, 54, 136], "gcd_shuffl": 57, "gelu": 82, "gener": [0, 5, 9, 11, 13, 15, 22, 35, 48, 61, 65, 68, 73, 75, 81, 98, 99, 102, 103, 104, 113, 122, 124, 143, 144, 145, 147, 148, 149], "geometr": 144, "geometri": [65, 85, 102, 149], "geometry_t": [85, 86, 87, 88, 147], "geometry_table_path": [86, 87, 88, 147], "germani": [0, 145, 148], "get": [18, 34, 58, 85, 120, 123, 144, 149], "get_all_argument_valu": [127, 128], "get_all_grapnet_class": [127, 132], "get_graphnet_class": [127, 132], "get_lr": 120, "get_map_funct": 7, "get_member_vari": [32, 36], "get_metr": 120, "get_om_keys_and_pulseseri": [32, 34], "get_predict": [119, 123], "get_primary_kei": [55, 58], "getting_start": 102, "gev": 65, "gframe": 20, "git": 146, "github": [97, 102, 117, 122, 144, 146], "given": [5, 11, 15, 20, 63, 65, 66, 81, 83, 100, 115, 122, 124, 126, 143, 147], "glob": 142, "global": [2, 4, 91, 93, 95, 107, 144], "global_index": 7, "global_pooling_schem": [91, 93, 95, 144, 149], "gnn": [1, 78, 102, 109, 117, 144, 149], "go": [141, 144], "googl": 141, "got": 142, "gpu": [89, 126, 144, 146, 149], "grab": 115, "grad_output": 122, "gradient_clip_v": 89, "grant": [0, 122, 145, 148], "graph": [0, 1, 8, 11, 13, 15, 78, 82, 83, 85, 109, 115, 118, 121, 123, 141, 143, 144, 145, 148, 149], "graph_definit": [5, 11, 13, 15, 65, 66, 98, 123, 130, 143, 144, 149], "graph_definiton": 143, "graphdefinit": [5, 11, 13, 15, 65, 66, 98, 99, 102, 103, 104, 123, 141, 143, 144], "graphnet": [0, 1, 140, 141, 142, 143, 145, 146, 147, 148, 149], "graphnet_file_read": [47, 142, 147], "graphnet_model": 120, "graphnet_writ": 60, "graphnetdatamodul": [3, 5, 9], "graphnetearlystop": [119, 120], "graphnetfileread": [7, 47, 48, 49, 50, 51, 52, 142], "graphnetfilesavemethod": [61, 63], "graphnetwrit": [7, 60, 61, 62, 63, 142], "grapnet": [132, 144], "greatli": [144, 149], "group": [0, 83, 144, 145, 148], "group_bi": [80, 83], "group_pulses_to_dom": [80, 83], "group_pulses_to_pmt": [80, 83], "groupbi": 83, "guarante": [144, 149], "guid": 141, "guidelin": 141, "gvd": [65, 88], "gz": 5, "h5": [40, 51, 142], "h5_extractor": 39, "h5extractor": [7, 39, 40, 48, 142], "h5hitextractor": [39, 40, 142], "h5py": 142, "h5truthextractor": [39, 40, 142], "ha": [0, 5, 36, 58, 73, 92, 106, 122, 136, 142, 143, 144, 145, 146, 147, 148, 149], "had": 147, "hadron": 114, "hand": [22, 143, 144], "handi": 57, "handl": [22, 122, 126, 135, 138, 142, 143, 144], "handler": 138, "happen": [124, 143, 147], "hard": [30, 105], "has_extens": [125, 136], "has_icecube_packag": [125, 137], "has_torch_packag": [125, 137], "have": [1, 5, 13, 22, 44, 46, 49, 54, 58, 59, 63, 83, 97, 102, 106, 115, 141, 143, 144, 147, 149], "head": [82, 91, 95, 97, 115, 117, 149], "head_dim": 82, "head_siz": 97, "heavi": 142, "help": [73, 75, 126, 141, 143, 144, 147, 149], "here": [102, 141, 143, 144, 146, 147, 149], "herebi": 122, "hidden": [81, 82, 91, 93, 94, 109], "hidden_dim": [97, 117], "hidden_featur": 82, "hidden_s": [109, 113, 114, 115, 144, 149], "high": [0, 144, 145, 148], "higher": 143, "highest_protocol": 142, "hint": 141, "hit": [8, 123, 143, 144, 147], "hitdata": 40, "hlc": 105, "hlc_name": 105, "hold": [102, 142, 147, 149], "holder": 122, "home": [86, 87, 88, 126, 142, 147], "homophili": 118, "hook": 141, "horizon": [0, 145, 148], "host": [5, 65, 147], "how": [5, 98, 99, 104, 142, 144, 149], "howev": [44, 46, 49, 54, 143, 144], "html": 144, "http": [5, 97, 100, 102, 117, 122, 141, 144, 146], "human": 144, "hybrid": 23, "hyperparamet": [131, 144, 149], "i": [0, 1, 5, 9, 11, 13, 15, 17, 18, 20, 22, 33, 34, 35, 36, 38, 40, 42, 44, 46, 49, 54, 57, 58, 59, 62, 63, 68, 73, 75, 79, 81, 82, 83, 92, 93, 97, 100, 102, 103, 105, 106, 109, 111, 114, 115, 118, 120, 121, 122, 123, 124, 126, 128, 131, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149], "i3": [1, 20, 34, 35, 36, 44, 46, 49, 54, 57, 68, 73, 75, 136, 144, 146], "i3_fil": [6, 20], "i3_filt": [32, 44, 46, 49, 54], "i3_list": [57, 136], "i3_shuffl": 57, "i3calibr": 34, "i3deploy": [6, 72], "i3extractor": [7, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 44, 46, 48, 54], "i3featureextractor": [4, 19, 73, 75], "i3featureextractoricecube86": [19, 21], "i3featureextractoricecubedeepcor": [19, 21], "i3featureextractoricecubeupgrad": [19, 21], "i3fileset": [3, 6, 48, 49], "i3filt": [32, 35, 44, 46, 49, 54], "i3filtermask": [32, 35], "i3fram": [19, 22, 34, 36, 73, 75], "i3galacticplanehybridrecoextractor": [19, 23], "i3genericextractor": 19, "i3hybridrecoextractor": 19, "i3inferencemodul": [72, 73, 75], "i3mctre": 30, "i3modul": [1, 67, 69], "i3ntmuonlabelextractor": [19, 24], "i3ntmuonlabelsextractor": 19, "i3particl": 25, "i3particleextractor": 19, "i3pisaextractor": 19, "i3pulsecleanermodul": [72, 73], "i3pulsenoisetruthflagicecubeupgrad": [19, 21], "i3quesoextractor": 19, "i3read": [44, 46, 47, 54], "i3retroextractor": 19, "i3splinempeextractor": 19, "i3splinempeicextractor": [19, 29], "i3toparquetconvert": [44, 45, 46], "i3tosqliteconvert": [45, 46, 54], "i3truthextractor": [4, 19], "i3tumextractor": 19, "ic": [95, 97, 105], "ice_arg": 105, "ice_transpar": [98, 106], "icecub": [1, 16, 44, 46, 49, 54, 67, 82, 84, 95, 97, 105, 106, 137, 144, 149], "icecube86": [4, 84, 86, 88], "icecube86prometheu": [84, 88], "icecube_deepcor": 88, "icecube_gen2": 88, "icecube_upgrad": [86, 88], "icecubedeepcor": [84, 86], "icecubedeepcore8": [84, 88], "icecubegen2": [84, 88], "icecubekaggl": [84, 86], "icecubeupgrad": [84, 86], "icecubeupgrade7": [84, 88], "icedemo81": [84, 88], "icemix": 90, "icemixnod": [104, 105], "icetrai": [34, 36, 44, 46, 49, 54, 69, 137, 146], "icetray_verbos": [44, 46, 49, 54], "id": [5, 7, 9, 13, 44, 46, 54, 63, 85, 102, 123, 142, 143, 144, 147], "id_column": 105, "ideal": 149, "ident": [83, 115], "identifi": [7, 11, 13, 15, 30, 105, 106, 118, 130, 131, 147], "identify_indic": [98, 106], "identitytask": [112, 113, 115], "ie": 91, "ignor": [11, 13, 15, 36, 62], "illustr": [0, 141, 142, 145, 148], "imag": [0, 1, 141, 144, 145, 148, 149], "impact": 97, "implement": [1, 5, 18, 20, 48, 61, 69, 82, 91, 92, 93, 94, 95, 97, 100, 109, 117, 122, 141, 142, 144, 149], "impli": 122, "import": [0, 5, 58, 78, 125, 142, 143, 144, 145, 147, 148, 149], "impos": [11, 13, 89], "improv": [0, 1, 126, 144, 145, 148, 149], "in_featur": 82, "inaccur": 106, "inact": 102, "includ": [1, 5, 13, 65, 66, 82, 89, 105, 122, 128, 141, 143, 144, 147, 149], "include_dynedg": 97, "incompat": 144, "incorpor": 81, "increas": [0, 120, 145, 148], "indent": 107, "independ": [68, 142], "index": [1, 7, 11, 13, 15, 36, 58, 62, 83, 85, 91, 101, 106, 109, 120, 143, 144, 149], "index_column": [7, 11, 13, 15, 44, 46, 54, 58, 59, 62, 63, 123, 124, 130, 143, 144], "indic": [59, 77, 83, 91, 101, 106, 109, 120, 122, 126, 141, 144, 149], "indicesfor": 34, "indici": [11, 13, 15, 34, 59, 122], "individu": [0, 11, 13, 15, 83, 93, 118, 143, 145, 148, 149], "industri": [0, 3, 145, 148], "inelast": [4, 114], "inelasticity_pr": 114, "inelasticityreconstruct": [112, 114], "inf": 118, "infer": [0, 1, 63, 67, 69, 73, 75, 89, 115, 144, 145, 148], "inference_modul": 72, "info": [138, 144], "inform": [5, 11, 13, 15, 17, 18, 20, 22, 30, 38, 40, 42, 65, 66, 102, 105, 106, 107, 142, 143, 144, 147, 149], "ingest": [0, 1, 3, 84, 145, 148], "inherit": [5, 18, 20, 36, 48, 61, 85, 105, 122, 138, 142, 143, 144, 149], "init_fn": [130, 131], "init_global_index": [3, 7], "init_predict_tqdm": 120, "init_test_tqdm": 120, "init_train_tqdm": 120, "init_validation_tqdm": 120, "init_valu": 82, "initi": [7, 35, 49, 63, 68, 82, 91, 97, 101], "initial_st": 42, "initialis": [131, 144, 149], "injection_azimuth": [4, 143, 144], "injection_bjorkeni": [4, 143, 144], "injection_bjorkenx": [4, 143, 144], "injection_column_depth": [4, 143, 144], "injection_energi": [4, 143, 144], "injection_interaction_typ": [4, 143, 144], "injection_position_i": [4, 143, 144], "injection_position_x": [4, 143, 144], "injection_position_z": [4, 143, 144], "injection_typ": [4, 143, 144], "injection_zenith": [4, 143, 144, 149], "innov": [0, 145, 148], "input": [5, 7, 11, 13, 15, 44, 46, 48, 49, 54, 61, 65, 66, 68, 73, 75, 81, 82, 86, 91, 92, 93, 94, 95, 96, 97, 102, 103, 105, 109, 113, 115, 117, 118, 128, 133, 135, 142, 143, 144, 147, 149], "input_dim": [82, 149], "input_dir": [142, 147], "input_featur": [85, 102], "input_feature_nam": [85, 102, 103, 105], "input_fil": [48, 68], "ins": 85, "insid": 143, "inspect": [144, 149], "instal": [141, 144], "instanc": [11, 18, 20, 30, 36, 38, 40, 42, 44, 46, 49, 54, 102, 107, 121, 123, 129, 131, 142, 143, 144, 149], "instanti": [7, 9, 131, 142, 143, 147], "instead": [20, 44, 46, 49, 54, 122, 144, 149], "int": [5, 7, 8, 9, 11, 13, 15, 24, 27, 35, 44, 46, 48, 49, 50, 51, 52, 54, 59, 61, 62, 63, 68, 81, 82, 83, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 113, 114, 115, 117, 118, 120, 122, 123, 124, 126, 130, 133, 138, 142, 149], "integ": [58, 91, 93, 94, 122, 143, 144], "integer_primary_kei": 58, "integr": 149, "intend": [91, 109, 144], "interact": [114, 121, 143, 144], "interaction_kei": 121, "interaction_tim": [4, 114], "interaction_time_pr": 114, "interaction_typ": [4, 121], "interchang": [144, 149], "interfac": [0, 130, 131, 144, 145, 146, 147, 148], "interim": [7, 60, 61, 62, 63, 142], "intermedi": [0, 1, 3, 7, 11, 92, 144, 145, 148], "intern": [16, 46, 50], "internal_parquet_read": 47, "interpol": [106, 120], "interpret": 113, "interv": [81, 144, 149], "intract": 143, "introduc": 144, "intuit": [138, 149], "invers": 115, "invert": 115, "involv": 59, "io": [141, 144], "iop": 144, "iopscienc": 144, "is_boost_class": [32, 36], "is_boost_enum": [32, 36], "is_gcd_fil": [125, 136], "is_graphnet_class": [127, 132], "is_graphnet_modul": [127, 132], "is_i3_fil": [125, 136], "is_icecube_class": [32, 36], "is_method": [32, 36], "is_typ": [32, 36], "iseecub": 116, "isinst": 142, "isn": 36, "isol": 103, "issu": [144, 149], "iter": 11, "its": [36, 109, 143, 144, 149], "itself": [36, 115, 142, 144, 149], "iv": 122, "jacobian": 115, "job": 147, "join": [142, 144], "json": [33, 130, 143, 144], "just": [5, 83, 142, 143, 144, 149], "k": [82, 91, 93, 95, 100, 103, 109, 118, 122], "kaggl": [4, 81, 82, 86, 95, 97], "kappa": [114, 122], "kappa_switch": 122, "karg": [107, 110], "keep": [18, 20, 38, 40, 42, 105, 142], "kei": [11, 22, 33, 34, 36, 58, 63, 82, 83, 105, 121, 130, 131, 142, 143, 144, 147], "kept": 35, "key_padding_mask": 82, "keyword": [120, 128, 133], "kind": [122, 147], "km3net": [144, 149], "knn_graph_batch": [78, 118], "knnedg": [99, 100], "knngraph": [98, 103, 143, 144, 149], "know": 147, "known": 83, "kv": 82, "kwarg": [7, 8, 11, 13, 15, 35, 48, 50, 51, 52, 61, 79, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 107, 109, 110, 111, 113, 114, 115, 117, 120, 122, 124, 128, 130, 131, 138], "l": [106, 118], "label": [11, 15, 24, 27, 89, 92, 102, 111, 115, 119, 123, 130], "lai": 144, "lambda": [107, 144, 149], "land": 144, "larg": [0, 91, 122, 143, 145, 148], "larger": 142, "largest": 106, "last": [93, 109, 113, 114, 115, 120, 123, 149], "last_epoch": 120, "lastli": 147, "latent": [81, 91, 93, 95, 97, 109, 113, 114, 115, 117, 149], "latest": 144, "layer": [0, 80, 83, 91, 92, 93, 94, 95, 97, 109, 113, 114, 115, 145, 148], "layer_s": 82, "layer_size_scal": 94, "layernorm": 82, "ldot": [79, 83], "lead": [143, 144], "learn": [0, 1, 5, 61, 63, 73, 75, 111, 113, 115, 120, 142, 144, 145, 146, 147, 148, 149], "learnabl": [82, 90, 91, 92, 93, 94, 95, 96, 97, 109, 115, 117, 149], "learnedtask": [112, 115], "least": [13, 141, 143, 144], "len": [11, 13, 106, 142, 143], "length": [11, 13, 36, 105, 106, 118, 120], "less": [8, 123, 144, 149], "let": [144, 147, 149], "level": [0, 5, 11, 13, 15, 17, 30, 35, 42, 44, 46, 48, 49, 50, 51, 52, 54, 58, 61, 62, 65, 66, 79, 83, 97, 111, 138, 143, 144, 145, 147, 148], "leverag": 1, "lex_sort": [98, 106], "liabil": 122, "liabl": 122, "lib": [86, 87, 88, 126], "licens": 122, "lift": 142, "light": 101, "lightn": [9, 120, 144, 149], "lightningdatamodul": 9, "lightningmodul": [81, 82, 107, 120, 138, 144, 149], "like": [18, 36, 83, 101, 115, 118, 122, 139, 141, 143, 144, 146, 149], "limit": [105, 122], "line": [120, 126, 142, 143, 147], "linear": [93, 149], "linearli": 120, "liquid": 87, "liquido": [4, 16, 51, 84, 142], "liquido_read": 47, "liquido_v1": [84, 87], "liquidoread": [47, 51, 142], "list": [5, 6, 7, 8, 9, 11, 13, 15, 17, 22, 30, 33, 35, 36, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 73, 75, 79, 82, 83, 85, 89, 91, 93, 95, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 115, 118, 120, 122, 123, 124, 130, 132, 133, 136, 138, 142, 143, 147], "list_all_submodul": [127, 132], "ljvmiranda921": 141, "load": [0, 8, 11, 57, 69, 107, 110, 128, 130, 143, 144, 145, 147, 148], "load_from_checkpoint": [144, 149], "load_modul": [10, 11, 107], "load_state_dict": [107, 110, 144, 149], "loaded_model": [144, 149], "local": [79, 86, 87, 88, 105, 126, 144, 146, 149], "lock": 13, "log": [0, 114, 119, 120, 122, 125, 143, 144, 145, 148, 149], "log10": [115, 124, 144, 149], "log_cmk": 122, "log_cmk_approx": 122, "log_cmk_exact": 122, "log_every_n_step": [89, 144, 149], "log_fold": [35, 48, 50, 51, 52, 61, 138], "log_model": [144, 149], "logcmk": [119, 122], "logcoshloss": [119, 122, 144, 149], "logger": [7, 9, 11, 18, 35, 48, 50, 51, 52, 59, 61, 68, 69, 89, 100, 107, 121, 124, 125, 138, 144, 149], "loggeradapt": 138, "logic": 143, "logit": [113, 122, 149], "logrecord": 138, "long": 143, "longev": [0, 145, 148], "longtensor": [79, 83, 118], "look": [22, 143, 144], "lookup": 132, "loop": [144, 149], "loss": [11, 13, 15, 89, 102, 111, 115, 120, 122, 126, 144, 149], "loss_factor": 122, "loss_funct": [115, 119, 144, 149], "loss_weight": [102, 115, 144, 149], "loss_weight_column": [11, 13, 15, 102, 123, 130], "loss_weight_default_valu": [11, 13, 15, 102, 130], "loss_weight_t": [11, 13, 15, 123, 130], "lossfunct": [115, 119, 122, 144], "lot": 141, "lower": [0, 144, 145, 148], "lr": [144, 149], "m": [101, 106, 122], "machin": 1, "made": [144, 149], "magnitud": [0, 145, 148], "mai": [48, 59, 69, 105, 143, 144, 146, 149], "main": [1, 90, 102, 141, 144], "mainli": 36, "major": [111, 115], "make": [0, 7, 105, 124, 130, 131, 141, 142, 143, 144, 145, 147, 148, 149], "make_dataload": [119, 123], "make_train_validation_dataload": [119, 123], "makedir": [144, 149], "manag": [0, 119, 142, 144, 145, 148], "mandatori": 81, "mangl": 36, "mani": [63, 142, 144, 149], "manipul": [33, 98, 99, 104], "map": [7, 11, 13, 15, 21, 22, 58, 86, 87, 88, 102, 103, 115, 128, 130, 131, 133, 144, 147, 149], "mari": [0, 145, 148], "martin": 92, "mask": [102, 118], "masked_entri": 118, "master": 122, "match": [48, 124, 136, 139, 142], "math": [82, 125], "mathbb": 83, "mathbf": [79, 83], "matic": 115, "matric": 82, "matrix": [83, 100, 101, 118, 122, 143], "max": [79, 82, 93, 95, 122, 124, 126, 144, 149], "max_activ": 105, "max_epoch": [89, 144, 149], "max_pool": [79, 83], "max_pool_x": [79, 83], "max_puls": 105, "max_rel_po": 117, "max_table_s": 63, "max_weight": 124, "maximum": [63, 83, 105, 106, 115, 117, 126], "mc": [22, 58], "mc_truth": [18, 42, 143, 144], "mctree": [30, 34], "md": [102, 144], "mean": [0, 11, 13, 15, 78, 93, 95, 106, 122, 131, 142, 143, 144, 145, 148, 149], "meaning": 81, "meant": [142, 144, 149], "measur": [105, 106, 118, 144, 147], "mechan": 82, "meet": 115, "member": [20, 22, 36, 48, 105, 130, 131, 138, 142, 147], "memori": [13, 143], "mention": 144, "merchant": 122, "merg": [7, 61, 62, 63, 122, 142, 143, 147], "merge_fil": [7, 61, 62, 63, 142, 147], "merged_database_nam": 63, "messag": [82, 120, 138, 144], "messagepass": 82, "metaclass": [130, 131], "metadata": [128, 130, 131, 133], "metaproject": 146, "meter": 144, "meth": 144, "method": [5, 7, 9, 11, 13, 15, 18, 20, 32, 33, 34, 36, 43, 44, 48, 53, 54, 61, 62, 63, 65, 66, 69, 82, 83, 85, 106, 114, 122, 124, 142, 144, 149], "metric": [91, 93, 95, 101, 109, 120, 144, 149], "might": [143, 144, 149], "mileston": [120, 144, 149], "million": [63, 65], "min": [79, 83, 93, 95, 124, 144, 149], "min_pool": [79, 80, 83], "min_pool_x": [79, 80, 83], "mind": 144, "minh": 92, "mini": 123, "minim": [89, 143, 144, 147, 149], "minimum": [105, 115], "minkowski": 99, "minkowskiknnedg": [99, 101], "minu": 122, "mise": 122, "miss": 77, "mit": 122, "mix": 17, "ml": [0, 1, 145, 148], "mlp": [80, 81, 82, 93, 97, 117, 149], "mlp_dim": [81, 117], "mlp_ratio": [82, 97], "mode": [89, 115], "model": [0, 1, 5, 67, 69, 73, 75, 119, 120, 122, 123, 126, 128, 130, 131, 133, 140, 142, 143, 145, 146, 147, 148], "model_computed_field": [128, 130, 131, 133], "model_config": [69, 73, 75, 127, 128, 130, 133, 144, 149], "model_config_path": [144, 149], "model_field": [128, 130, 131, 133], "model_nam": [73, 75], "modelconfig": [69, 73, 75, 107, 127, 130, 131], "modelconfigsav": 131, "modelconfigsaverabc": [127, 131], "modelconfigsavermeta": [127, 131], "modif": [144, 149], "modifi": [122, 144, 149], "modul": [0, 1, 3, 10, 12, 14, 16, 19, 32, 37, 39, 41, 43, 45, 47, 53, 55, 60, 64, 67, 70, 72, 76, 78, 80, 84, 90, 98, 99, 104, 108, 112, 116, 119, 125, 127, 140, 142, 144, 145, 148, 149], "modular": [0, 78, 142, 144, 145, 148, 149], "moduletyp": 132, "mont": 34, "more": [1, 11, 13, 57, 58, 91, 107, 130, 131, 138, 143, 144, 149], "most": [0, 1, 59, 101, 115, 142, 145, 147, 148, 149], "mryab": 122, "mseloss": [119, 122], "msg": 138, "mulitpli": 122, "multi": [82, 93, 111], "multiclassclassificationtask": [112, 113, 144], "multiheadattent": 82, "multiindex": 147, "multipl": [11, 13, 15, 17, 81, 106, 120, 122, 130, 138, 149], "multipli": [82, 120], "multiprocess": [7, 44, 46, 54, 142], "multiprocessing_context": 13, "muon": [24, 143, 149], "must": [13, 17, 48, 49, 58, 61, 79, 120, 122, 124, 141, 142, 143, 144, 147], "my": [143, 144, 147], "my_custom_label": [143, 144], "my_databas": 63, "my_fil": [142, 147], "my_geometry_t": 147, "my_outdir": [142, 147], "my_tabl": 147, "mycustomlabel": [143, 144], "mydetector": 147, "myexperi": 147, "myextractor": 147, "mygraphnetmodel": 149, "mymodel": 149, "mypi": 141, "mypicklewrit": 142, "myread": 147, "n": [18, 79, 83, 101, 118, 122, 143, 144, 147], "n_1": 83, "n_b": 83, "n_cluster": 106, "n_event": [142, 147], "n_featur": [81, 97, 117], "n_freq": 81, "n_head": [82, 91, 95], "n_pmt": 106, "n_puls": [105, 147], "n_rel": 97, "n_worker": 68, "name": [4, 5, 7, 8, 11, 13, 15, 17, 18, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 33, 35, 36, 38, 40, 42, 44, 46, 48, 50, 51, 52, 54, 58, 61, 62, 63, 69, 73, 75, 85, 102, 103, 105, 109, 115, 121, 124, 126, 128, 130, 131, 132, 133, 138, 141, 142, 143, 144, 147, 149], "namespac": [4, 107, 130, 131], "nan": 106, "narg": 126, "nb_dom": 118, "nb_file": 7, "nb_input": [91, 92, 93, 94, 95, 96, 109, 113, 114, 115, 144, 149], "nb_intermedi": 92, "nb_nearest_neighbour": [100, 101, 103, 143, 144, 149], "nb_neighbor": 82, "nb_neighbour": [91, 93, 95, 109, 144, 149], "nb_output": [92, 94, 96, 105, 113, 114, 115, 144, 149], "nb_repeats_allow": 138, "ndarrai": [11, 13, 30, 102, 106, 124, 142], "nearest": [91, 93, 95, 100, 101, 103, 109, 118, 144, 149], "nearli": 149, "necessari": [0, 9, 33, 141, 145, 148], "need": [0, 5, 9, 33, 63, 78, 81, 107, 109, 122, 135, 142, 143, 144, 145, 146, 147, 148, 149], "negat": 83, "neighbour": [82, 91, 93, 95, 100, 101, 103, 109, 118, 144, 149], "nest": 33, "nester": 33, "network": [1, 82, 92, 108, 149], "neural": [1, 108, 149], "neutrino": [0, 1, 20, 42, 49, 82, 95, 97, 106, 117, 143, 144, 145, 147, 148, 149], "new": [0, 1, 17, 82, 105, 128, 133, 141, 142, 144, 145, 148, 149], "new_features_nam": 105, "new_phras": 135, "nfdi": [0, 145, 148], "nn": [0, 78, 82, 100, 103, 145, 148, 149], "no_weight_decai": 97, "node": [11, 13, 15, 79, 83, 91, 92, 93, 95, 98, 99, 100, 102, 103, 109, 118, 143, 144, 149], "node_definit": [102, 103, 143, 144, 149], "node_feature_nam": [105, 143, 144, 149], "node_level": 123, "node_rnn": [91, 108], "node_truth": [11, 13, 15, 123, 130], "node_truth_t": [11, 13, 15, 123, 130, 144], "nodeasdomtimeseri": [104, 105], "nodedefinit": [102, 103, 104, 105, 144, 149], "nodesaspuls": [102, 104, 105, 143, 144, 149], "nodetimernn": 109, "nois": [21, 34, 73, 144], "non": [9, 33, 36, 58, 91, 122, 144], "none": [5, 7, 8, 9, 11, 13, 15, 20, 22, 30, 34, 35, 36, 44, 46, 48, 49, 50, 51, 52, 54, 58, 59, 61, 62, 63, 65, 66, 68, 69, 75, 82, 83, 89, 91, 93, 95, 97, 101, 102, 103, 105, 106, 107, 109, 110, 111, 115, 120, 122, 123, 124, 126, 128, 129, 130, 132, 136, 138, 142, 143, 144, 147, 149], "nonetyp": 130, "noninfring": 122, "norm_lay": 82, "normal": [82, 93, 106, 115, 147], "normalizingflow": 115, "northeren": 24, "note": [11, 13, 15, 49, 62, 63, 106, 131, 144], "notebook": 141, "notic": [63, 118, 122], "notimplementederror": 142, "now": [144, 147, 149], "np": [124, 142], "null": [35, 58, 143, 144, 149], "nullspliti3filt": [32, 35, 44, 46, 49, 54], "num": 126, "num_class": 122, "num_edg": 143, "num_edge_featur": 143, "num_featur": 143, "num_head": [82, 117], "num_lay": [109, 117], "num_nod": 143, "num_puls": 105, "num_register_token": 117, "num_row": [102, 143], "num_work": [7, 8, 9, 46, 62, 123, 142, 143, 144, 147, 149], "number": [0, 5, 7, 11, 13, 15, 18, 44, 46, 54, 59, 62, 63, 68, 81, 82, 83, 91, 92, 93, 94, 95, 96, 97, 100, 101, 103, 105, 106, 109, 113, 114, 115, 117, 118, 120, 123, 124, 126, 142, 143, 144, 145, 147, 148], "numer": [115, 147], "numpi": 106, "numu": 121, "numucc": 121, "o": [0, 87, 115, 142, 144, 145, 146, 148, 149], "obj": [33, 36, 132], "object": [4, 6, 11, 13, 15, 22, 33, 36, 79, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 107, 109, 110, 111, 113, 114, 115, 117, 120, 122, 123, 126, 128, 130, 131, 133, 138, 143, 144, 149], "observ": 147, "observatori": [20, 49], "obtain": [83, 122], "occur": [8, 123], "oerso": 94, "offer": 143, "offset": [105, 106], "ofintern": 37, "often": 143, "old_phras": 135, "om": [34, 36], "omit": 149, "on_fit_end": 120, "on_train_end": 110, "on_train_epoch_end": 120, "on_train_epoch_start": 120, "on_validation_end": 120, "onc": [138, 144, 146], "one": [11, 13, 20, 58, 73, 83, 130, 131, 136, 141, 142, 143, 144, 147, 149], "ones": 110, "onli": [0, 1, 11, 13, 15, 63, 78, 83, 91, 115, 124, 128, 131, 133, 137, 142, 143, 144, 145, 147, 148, 149], "open": [0, 48, 141, 142, 143, 144, 145, 146, 147, 148], "opensciencegrid": 146, "oper": [79, 82, 90, 93], "oppos": 143, "optic": [36, 106], "optim": [89, 110, 120, 144, 149], "optimis": [0, 1, 144, 145, 148, 149], "optimizer_class": [144, 149], "optimizer_closur": 110, "optimizer_kwarg": [144, 149], "optimizer_step": 110, "option": [5, 7, 9, 11, 13, 15, 20, 30, 63, 65, 66, 69, 75, 81, 82, 83, 91, 93, 95, 97, 101, 102, 103, 105, 106, 107, 109, 115, 120, 122, 124, 125, 126, 128, 130, 136, 142, 143, 144, 147, 149], "orca": 88, "orca150": [84, 88, 149], "orca150superdens": [84, 88], "orca_150": 88, "order": [0, 33, 48, 68, 79, 105, 118, 122, 144, 145, 148], "ordinari": 149, "ordinarili": 147, "org": [100, 122, 144, 146], "orient": [0, 78, 145, 148], "origin": [97, 143, 149], "ot": 122, "other": [25, 58, 100, 122, 141, 143, 144, 149], "otherwis": [36, 122], "our": [144, 147], "out": [5, 11, 13, 93, 112, 122, 138, 141, 142, 143, 144, 147, 149], "out_featur": 82, "outdir": [7, 44, 46, 54, 142, 144, 147, 149], "outer": 33, "outlin": [147, 149], "output": [18, 63, 68, 69, 81, 82, 89, 91, 92, 93, 94, 96, 105, 106, 109, 113, 114, 115, 124, 130, 131, 142, 147, 149], "output_dim": [81, 149], "output_dir": [61, 62, 63, 142], "output_fil": 7, "output_file_path": 142, "output_fold": [6, 68], "outsid": [66, 141], "over": [101, 105, 142, 143], "overal": 122, "overhead": 147, "overrid": [9, 120], "overridden": 105, "overview": [0, 145, 148], "overwrit": [69, 120], "overwritten": [48, 126, 128], "own": [141, 144], "ownership": 141, "p": [34, 65, 122, 142], "p11003": 144, "packag": [0, 1, 57, 132, 136, 137, 140, 141, 144, 145, 148, 149], "pad": [102, 106, 118], "padding_valu": [24, 27, 118], "pair": [20, 44, 46, 49, 54, 81], "pairwis": [101, 118], "pairwise_shuffl": [55, 57], "panda": [59, 124, 142, 144, 147, 149], "paper": 122, "paradigm": [144, 149], "parallel": [7, 44, 46, 54, 142, 147], "param": [38, 40, 42], "paramet": [5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 73, 75, 79, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 113, 114, 115, 117, 118, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139], "parent": [33, 144], "parent_kei": 33, "parquet": [3, 5, 10, 38, 41, 42, 46, 50, 52, 54, 56, 62, 65, 66, 86, 87, 88, 142, 143, 144, 147], "parquet_dataset": 12, "parquet_extractor": 37, "parquet_to_sqlit": 55, "parquet_writ": 60, "parquetdataconvert": [43, 44], "parquetdataset": [9, 12, 13, 142, 144], "parquetextractor": [7, 37, 38, 40, 46, 48], "parquetread": [47, 50], "parquettosqliteconvert": [45, 46], "parquetwrit": [13, 38, 46, 60, 62, 142, 143, 147], "pars": [22, 126, 127, 128, 133, 142], "parse_graph_definit": [10, 11], "parse_label": [10, 11], "part": [142, 144, 146, 147], "particl": [30, 58, 121, 143, 144, 147], "particular": [122, 141], "particularli": [143, 144, 149], "partit": 63, "partli": [0, 145, 148], "pass": [11, 15, 81, 82, 89, 91, 92, 93, 94, 95, 96, 97, 102, 109, 111, 115, 117, 120, 122, 124, 141, 142, 143, 144, 147, 149], "path": [5, 11, 13, 15, 20, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 63, 68, 73, 75, 82, 102, 107, 110, 120, 123, 126, 128, 129, 130, 136, 142, 143, 144, 147, 149], "path_to_arrai": 147, "path_to_geometry_t": 147, "patienc": 126, "pd": [142, 144, 147], "pdf": 100, "pdg": 121, "penal": 122, "peopl": [144, 149], "pep257": 141, "pep8": 141, "per": [11, 13, 15, 22, 58, 82, 83, 91, 109, 115, 122, 124, 143, 144], "percentil": [105, 106], "percentileclust": [104, 105], "perceptron": [82, 93], "perform": [0, 9, 79, 81, 82, 83, 89, 90, 91, 93, 95, 105, 109, 110, 111, 113, 115, 123, 144, 145, 148, 149], "permiss": 122, "permit": 122, "persistent_work": [8, 123], "person": [5, 122], "perturb": [102, 103], "perturbation_dict": [102, 103], "pframe": [44, 46, 49, 54], "philosophi": [144, 149], "photon": [42, 143, 144], "phrase": 135, "phyic": 1, "physic": [0, 1, 20, 34, 36, 67, 73, 75, 78, 112, 115, 143, 144, 145, 148, 149], "physicist": [0, 1, 144, 145, 148], "physicst": 1, "pick": 143, "pickl": [142, 144, 147, 149], "pid": [4, 59, 121, 130, 143], "pid_kei": 121, "piecewiselinearlr": [119, 120, 144, 149], "pip": [141, 146], "pisa": 26, "place": [81, 97, 135, 141], "plai": 1, "plane": [23, 122], "pleas": [142, 143, 144, 147], "plot": 143, "plug": 1, "pmt": [83, 106, 143, 144], "pmt_area": 4, "pmt_dir_i": 4, "pmt_dir_x": 4, "pmt_dir_z": 4, "pmt_number": 4, "point": [5, 29, 121, 122, 123, 144, 147, 149], "pole": [95, 97], "pone": 88, "pone_triangl": 88, "ponesmal": [64, 65], "ponetriangl": [84, 88], "pool": [7, 79, 80, 91, 93, 95], "pop_default": 126, "popular": 149, "port": 144, "portabl": [0, 144, 145, 148, 149], "portion": 122, "pos_x": 144, "posit": [73, 81, 82, 83, 97, 106, 114, 117, 128, 133, 143, 147], "position_i": 4, "position_x": 4, "position_x_pr": 114, "position_y_pr": 114, "position_z": 4, "position_z_pr": 114, "positionreconstruct": [112, 114], "possibl": [0, 33, 63, 141, 145, 147, 148], "post": [91, 93, 95], "post_processing_layer_s": [91, 93, 95, 144, 149], "pow": [144, 149], "power": [142, 144, 149], "pr": 109, "practic": [0, 141, 145, 148], "pre": [0, 5, 45, 46, 64, 85, 102, 121, 141, 143, 144, 145, 148, 149], "pre_configur": 3, "precis": 122, "precommit": 141, "preconfigur": 46, "pred": [89, 111, 115], "predict": [0, 9, 25, 29, 31, 73, 75, 89, 92, 97, 111, 113, 115, 122, 123, 144, 145, 148, 149], "predict_as_datafram": [89, 144, 149], "prediction_column": [69, 75, 89, 123], "prediction_kei": 122, "prediction_label": [89, 115, 144, 149], "prefer": 101, "prefetch_factor": 8, "prepar": [0, 5, 9, 122, 143, 145, 148], "prepare_data": [5, 9], "preprocess": 144, "present": [11, 13, 20, 35, 118, 126, 136, 137, 143, 149], "previou": [120, 144, 149], "primari": [58, 63, 143, 144], "primary_hadron_1_direction_phi": [4, 143, 144], "primary_hadron_1_direction_theta": [4, 143, 144], "primary_hadron_1_energi": [4, 143, 144], "primary_hadron_1_position_i": [4, 143, 144], "primary_hadron_1_position_x": [4, 143, 144], "primary_hadron_1_position_z": [4, 143, 144], "primary_hadron_1_typ": [4, 143, 144], "primary_key_rescu": 63, "primary_lepton_1_direction_phi": [4, 143, 144], "primary_lepton_1_direction_theta": [4, 143, 144], "primary_lepton_1_energi": [4, 143, 144], "primary_lepton_1_position_i": [4, 143, 144], "primary_lepton_1_position_x": [4, 143, 144], "primary_lepton_1_position_z": [4, 143, 144], "primary_lepton_1_typ": [4, 143, 144], "principl": [1, 144], "print": [5, 107, 120, 138], "prior": 143, "prioriti": 141, "privat": 124, "pro": [144, 149], "probabl": [82, 122, 149], "problem": [0, 100, 141, 143, 144, 145, 148, 149], "procedur": 9, "proceedur": 63, "process": [1, 7, 44, 46, 54, 73, 81, 85, 91, 93, 95, 141, 142, 144, 149], "process_posit": 120, "produc": [5, 48, 81, 111, 121, 124, 143, 144], "product": [8, 82, 123], "programm": [0, 145, 148], "progress": 120, "progressbar": [119, 120, 144, 149], "proj_drop": 82, "project": [0, 52, 82, 141, 144, 145, 148, 149], "prometheu": [4, 16, 52, 65, 84, 143, 144, 149], "prometheus_dataset": 64, "prometheus_extractor": 41, "prometheus_read": 47, "prometheusextractor": [7, 41, 42, 48], "prometheusfeatureextractor": [41, 42], "prometheusread": [47, 52], "prometheustruthextractor": [41, 42], "prompt": 144, "prone": 144, "proof": [144, 149], "properti": [5, 9, 11, 18, 25, 36, 48, 61, 83, 85, 89, 96, 105, 106, 115, 121, 129, 138, 142], "protocol": 142, "prototyp": 87, "proven": [18, 20, 38, 40, 42, 142], "provid": [0, 1, 7, 11, 13, 15, 73, 78, 97, 102, 107, 122, 141, 142, 143, 144, 145, 148, 149], "pth": [144, 149], "public": [65, 85, 124], "publicprometheusdataset": [64, 65], "publish": [122, 144, 149], "puls": [5, 11, 13, 15, 17, 21, 22, 34, 36, 42, 58, 73, 79, 83, 97, 102, 105, 106, 111, 117, 118, 143, 144, 147, 149], "pulse_truth": 5, "pulsemap": [5, 11, 13, 15, 21, 65, 66, 73, 75, 123, 130, 143, 144], "pulsemap_extractor": [73, 75], "pulseseri": 34, "pulsmap": [73, 75], "punch4nfdi": [0, 145, 148], "pure": [7, 18, 19, 22, 36], "purpos": [0, 78, 122, 145, 147, 148], "put": [63, 144, 149], "py": [122, 144], "py3": 146, "pydant": [128, 130, 131, 133], "pydantic_cor": [128, 133], "pydocstyl": 141, "pyg": [143, 144, 149], "pylint": 141, "python": [0, 1, 7, 18, 19, 22, 33, 36, 141, 144, 145, 146, 148, 149], "python3": [86, 87, 88, 126], "pytorch": [15, 120, 144, 146, 149], "pytorch_lightn": [89, 120, 138, 144, 149], "pytorchlightn": 144, "q": 82, "qk_scale": 82, "qkv_bia": 82, "qualiti": [0, 144, 145, 148], "quantiti": [26, 115, 118, 144], "queri": [11, 13, 15, 58, 59, 63, 82, 143, 144], "query_databas": [55, 58], "query_t": [11, 13, 15, 143], "queso": 27, "question": 144, "quick": 144, "r": [83, 100, 142, 144, 146, 147], "radial": 100, "radialedg": [99, 100], "radiat": [105, 106, 144, 149], "radiu": [100, 144], "rais": [11, 13, 20, 22, 107, 128, 133, 142], "random": [11, 13, 15, 55, 59, 62, 105, 130, 143, 144], "randomli": [59, 102, 103, 131, 144, 149], "rang": [115, 145, 147, 148, 149], "rare": 142, "rasmu": [0, 94, 145, 148], "rate": 120, "rather": [115, 138, 144, 149], "ratio": [9, 82, 97], "raw": [0, 105, 106, 143, 144, 145, 147, 148, 149], "rde": 4, "re": [129, 143, 144, 147, 149], "reach": [143, 147], "read": [0, 3, 7, 11, 13, 15, 33, 47, 49, 50, 51, 52, 85, 93, 112, 142, 143, 144, 145, 147, 148], "read_csv": 147, "read_sql": 144, "readabl": 144, "reader": [3, 46, 147], "readi": [64, 147, 149], "readm": 144, "readout": [91, 93, 95], "readout_layer_s": [91, 93, 95, 144, 149], "readthedoc": 144, "receiv": [0, 145, 148, 149], "reciev": [61, 142, 147, 149], "recommend": [144, 146, 147, 149], "reconstruct": [0, 1, 21, 23, 24, 28, 29, 31, 67, 95, 97, 109, 112, 115, 143, 144, 145, 148], "record": 138, "recov": 115, "recreat": [143, 144, 149], "recurr": 108, "recurs": [22, 36, 44, 46, 48, 49, 54, 107, 132, 136], "reduc": [144, 149], "reduce_opt": 79, "refer": [9, 88, 130, 143, 144, 147, 149], "refresh_r": 120, "regardless": [143, 144, 149], "regist": 117, "regress": 111, "regular": [36, 82, 144, 149], "rel": [82, 97, 117], "rel_pos_bia": 82, "rel_pos_bucket": 117, "relat": [57, 136, 147], "relev": [1, 36, 57, 136, 141], "reli": 49, "reload": 149, "remain": 143, "remov": [8, 44, 54, 102, 123, 126, 147], "renam": 135, "rename_state_dict_entri": [125, 135], "repeat": 138, "repeatfilt": [125, 138], "replac": [128, 130, 131, 133, 135], "repo": 141, "repositori": 141, "repres": [83, 91, 102, 103, 105, 106, 118, 128, 130, 131, 142, 143, 144, 147, 149], "represent": [5, 11, 13, 15, 36, 65, 66, 81, 82, 83, 103, 107, 109, 143, 144, 147, 149], "reproduc": [130, 131, 149], "repurpos": 149, "requir": [0, 20, 26, 38, 42, 58, 105, 113, 122, 130, 131, 133, 141, 142, 143, 144, 145, 146, 147, 148, 149], "requires_icecub": [125, 137], "research": [0, 144, 145, 148], "reset": 82, "reset_paramet": 82, "resolv": [11, 13, 15, 59], "respect": [123, 144, 147], "respons": [143, 144], "restrict": [115, 122, 149], "result": [58, 62, 83, 103, 106, 120, 122, 123, 132, 144, 147, 149], "retriev": [85, 142, 143], "retro": 28, "return": [5, 7, 8, 9, 11, 13, 15, 17, 18, 20, 33, 34, 36, 48, 49, 50, 51, 52, 57, 58, 59, 61, 62, 63, 68, 79, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 113, 114, 115, 117, 118, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 142, 143, 144, 147, 149], "return_discard": 36, "return_el": 122, "reusabl": [0, 145, 148], "reuseabl": [144, 149], "review": 141, "rhel_7_x86_64": 146, "right": [122, 144], "rmse": 122, "rmseloss": [119, 122], "rmsevonmisesfisher3dloss": [119, 122], "rng": 57, "rnn": [78, 91], "rnn_dropout": 91, "rnn_dynedg": 91, "rnn_hidden_s": 91, "rnn_layer": 91, "rnn_tito": 90, "role": 149, "root": 122, "roughli": 143, "row": [58, 63, 106, 118, 143, 144, 147, 149], "run": [1, 49, 68, 142, 144, 146, 147, 149], "run_sql_cod": [55, 58], "runner": [86, 87, 88, 126], "runtim": [121, 146], "runtimeerror": 20, "ryabinin": 122, "sai": [144, 149], "same": [17, 36, 58, 79, 83, 106, 113, 118, 120, 132, 138, 143, 144, 149], "sampl": [59, 82, 102, 103, 105, 115, 144, 149], "satisfi": [0, 142, 145, 148], "save": [7, 18, 20, 33, 38, 40, 42, 44, 46, 54, 58, 60, 61, 63, 107, 120, 122, 123, 124, 128, 129, 130, 131, 142, 144, 147], "save_config": [129, 144, 149], "save_dataset_config": [127, 130], "save_dir": [120, 144, 149], "save_fil": [61, 142], "save_method": [7, 142, 147], "save_model_config": [127, 131], "save_result": [119, 123], "save_select": [119, 123], "save_state_dict": [107, 144, 149], "save_to_sql": [55, 58], "scalabl": 143, "scalar": [11, 13, 18, 118, 122], "scale": [81, 82, 94, 97, 101, 102, 105, 106, 115, 117, 122, 143, 149], "scaled_emb": [97, 117], "scatter": [105, 106], "scheduler_class": [144, 149], "scheduler_config": [144, 149], "scheduler_kwarg": [144, 149], "schema": 144, "scheme": [91, 93, 95, 142], "scientif": [0, 1, 145, 148], "scope": 141, "script": [144, 149], "search": [44, 46, 48, 49, 50, 51, 52, 54, 136, 142], "sec": 122, "second": 101, "section": 144, "see": [81, 91, 100, 102, 120, 141, 143, 144, 146], "seed": [9, 11, 13, 15, 59, 102, 103, 123, 130, 143, 144], "seen": 81, "select": [5, 8, 9, 11, 13, 15, 27, 59, 123, 124, 130, 141, 144, 147], "selection_nam": 8, "self": [11, 13, 89, 102, 111, 128, 133, 142, 143, 144, 147, 149], "sell": 122, "send": 115, "sensor": [85, 102, 143, 144, 147, 149], "sensor_i": 147, "sensor_id": [86, 88, 147], "sensor_id_column": [86, 87, 88, 147], "sensor_index_nam": 85, "sensor_mask": 102, "sensor_pos_i": [4, 88, 143, 144, 149], "sensor_pos_x": [4, 88, 143, 144, 149], "sensor_pos_z": [4, 88, 143, 144, 149], "sensor_position_nam": 85, "sensor_string_id": 88, "sensor_tim": 147, "sensor_x": [143, 147], "sensor_z": 147, "separ": [33, 101, 120, 144, 146], "seper": [109, 143], "seq_length": [81, 97, 117, 118], "sequenc": [68, 81, 82, 106, 118, 123, 144, 149], "sequenti": [11, 13], "sequential_index": [11, 13, 15], "seri": [11, 13, 15, 21, 22, 34, 36, 58, 73, 91, 105, 109, 143, 144, 149], "serial": [142, 143], "serialis": [32, 33, 144, 149], "serv": 143, "session": [130, 131, 143, 144, 149], "set": [3, 6, 9, 13, 20, 22, 44, 46, 48, 49, 54, 61, 81, 82, 97, 105, 106, 107, 115, 121, 123, 141, 142, 144, 147, 149], "set_extractor": 48, "set_gcd": 20, "set_index": 147, "set_number_of_input": 105, "set_output_feature_nam": 105, "set_verbose_print_recurs": 107, "setlevel": 138, "setup": [9, 120, 146], "setuptool": 146, "sever": [144, 149], "sh": 146, "shall": 122, "shape": [18, 101, 102, 105, 118, 122, 142, 143], "share": [89, 111, 144, 149], "share_redirect": 5, "shared_step": [89, 111], "sharelink": 5, "shell": 146, "should": [8, 11, 13, 15, 18, 20, 33, 59, 66, 69, 82, 83, 91, 97, 102, 103, 109, 118, 122, 123, 128, 130, 131, 133, 141, 142, 143, 144, 146, 147, 149], "show": [59, 120, 144], "shown": 144, "shuffl": [8, 9, 57, 62, 123, 143], "shutdown": 9, "sid": 5, "sigmoid": 149, "sign": 122, "signal": [73, 149], "signatur": [22, 36], "signific": 143, "significantli": 143, "signup": 144, "similar": [22, 36, 105, 144, 149], "similarli": [36, 142, 143, 144, 149], "simpl": [0, 78, 89, 144, 145, 148, 149], "simplecoarsen": 79, "simplest": [144, 149], "simpli": [144, 149], "simul": [34, 42, 52, 65, 73, 144, 147], "sinc": [73, 122, 144], "singl": [5, 11, 17, 61, 63, 83, 93, 106, 121, 124, 130, 131, 142, 143, 144, 147, 149], "sinusoid": [81, 97, 117], "sinusoidalposemb": [80, 81], "sipm_i": [4, 87], "sipm_id": 87, "sipm_x": [4, 87], "sipm_z": [4, 87], "situat": 141, "size": [63, 81, 82, 83, 91, 93, 94, 95, 97, 118, 126, 143], "skip": [35, 93, 144], "skip_readout": 93, "sklearn": [144, 149], "sk\u0142odowska": [0, 145, 148], "slack": 144, "slice": [82, 93], "slower": 63, "small": [122, 143, 144, 149], "smaller": [61, 142], "smooth": 141, "snippet": [144, 149], "so": [122, 143, 144, 146, 147, 149], "soft": 81, "softmax": 122, "softwar": [0, 49, 122, 145, 148], "solut": [81, 82, 95, 97, 141], "solv": [1, 141, 149], "some": [11, 13, 15, 44, 46, 49, 54, 102, 106, 143, 144], "someth": [144, 149], "somewhat": 144, "sort": [102, 106], "sort_bi": 102, "sota": 5, "sourc": [0, 4, 5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 73, 75, 77, 79, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 113, 114, 115, 117, 118, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 141, 143, 144, 145, 148], "south": [95, 97], "space": [81, 100, 101, 115, 124], "space_coord": 101, "spacetim": 81, "spacetimeencod": [80, 81], "sparsetensor": 82, "spatial": 106, "spawn": 13, "special": [22, 73, 109, 118], "specialis": [144, 149], "specif": [0, 1, 3, 5, 6, 7, 11, 13, 15, 16, 18, 21, 36, 47, 48, 49, 58, 63, 67, 69, 77, 79, 83, 84, 85, 86, 87, 88, 90, 91, 96, 100, 102, 105, 108, 112, 113, 114, 115, 116, 122, 141, 142, 143, 144, 145, 147, 148, 149], "specifi": [11, 13, 15, 59, 79, 106, 115, 120, 143, 144, 147, 149], "speed": [73, 101, 143], "sphere": 100, "spite": 122, "splinemp": 29, "split": [0, 9, 35, 63, 79, 145, 148], "split_se": 9, "splitinicepuls": 58, "sql": 124, "sqlite": [1, 3, 5, 9, 10, 46, 56, 58, 63, 65, 66, 143, 144], "sqlite3": 144, "sqlite_dataset": 14, "sqlite_util": 55, "sqlite_writ": 60, "sqlitedataconvert": [53, 54], "sqlitedatas": 143, "sqlitedataset": [9, 14, 15, 142], "sqlitewrit": [60, 63, 142, 143], "squar": 122, "src": 144, "stabl": [114, 115], "stage": [9, 120], "standalon": 109, "standard": [0, 3, 4, 35, 59, 69, 86, 87, 88, 91, 102, 103, 105, 110, 111, 115, 126, 141, 144, 145, 147, 148, 149], "standard_argu": 126, "standard_averaged_model": 78, "standard_model": [78, 144], "standardaveragedmodel": [78, 110], "standardaveragemodel": 110, "standardflowtask": [112, 115], "standardis": 84, "standardlearnedtask": [112, 113, 114, 115, 149], "standardmodel": [78, 89, 110, 111], "start": [30, 141, 144, 147, 149], "state": [0, 69, 91, 109, 135, 145, 148], "state_dict": [69, 73, 75, 107, 110, 135, 144], "static": [122, 141], "std": 83, "std_pool": [80, 83], "std_pool_x": [80, 83], "stdout": 120, "step": [89, 110, 111, 118, 120, 144, 147, 149], "still": 130, "stochast": 82, "stop": [30, 120, 126], "stopped_muon": 4, "store": [11, 13, 15, 58, 61, 62, 63, 121, 142, 143, 144, 147, 149], "str": [5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 73, 75, 82, 83, 85, 86, 87, 88, 89, 91, 93, 95, 97, 102, 103, 105, 106, 107, 110, 115, 120, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 135, 136, 138, 142, 147], "straightforward": 143, "strategi": [144, 149], "stream_handl": 138, "streamhandl": 138, "streamlin": 1, "string": [4, 5, 11, 13, 15, 33, 59, 83, 85, 86, 102, 107, 128, 144, 147, 149], "string_id": 147, "string_id_column": [86, 87, 88, 147], "string_index_nam": 85, "string_mask": 102, "string_select": [11, 13, 15, 123, 130], "string_selection_resolv": 55, "stringselectionresolv": [55, 59], "strongli": [144, 149], "structur": [89, 132, 142, 143, 144, 149], "style": 141, "sub": 144, "subclass": [0, 5, 78, 89, 142, 143, 144, 145, 148, 149], "subfold": [44, 46, 49, 54], "subject": [97, 122], "sublicens": 122, "submodul": [132, 140], "subpackag": 140, "subsampl": [62, 143], "subsequ": 144, "subset": [11, 13, 15, 82, 91, 93, 95, 109, 144], "substanti": 122, "suggest": [89, 122, 144], "suit": [0, 115, 144, 145, 148], "suitabl": [1, 147], "sum": [79, 83, 89, 93, 95, 111, 124, 144, 149], "sum_pool": [79, 80, 83], "sum_pool_and_distribut": [80, 83], "sum_pool_x": [79, 80, 83], "summar": [73, 75, 105, 106], "summari": [105, 106], "summaris": [144, 149], "summariz": 149, "summarization_indic": 106, "super": [142, 143, 144, 149], "supervis": [111, 115, 149], "support": [0, 7, 36, 141, 142, 143, 144, 145, 148], "suppos": [5, 106, 143, 147], "sure": [141, 142], "swa": 110, "swapabl": 144, "switch": [122, 144, 149], "synchron": 7, "syntax": [59, 89, 122, 143, 144], "system": [136, 144, 149], "t": [4, 36, 58, 120, 122, 142, 143, 144, 147, 149], "t_co": 8, "tabl": [5, 11, 13, 15, 17, 18, 20, 38, 40, 42, 48, 58, 62, 63, 85, 102, 124, 142, 143, 144], "table_nam": [42, 58], "table_without_index": 147, "tackl": 149, "tag": [123, 141], "take": [36, 83, 106, 109, 141, 143], "talk": 144, "tar": 5, "target": [89, 113, 115, 122, 133, 144, 149], "target_label": [89, 115, 144, 149], "target_pr": [113, 149], "task": [0, 1, 9, 78, 89, 111, 122, 141, 144, 145, 148], "team": [102, 141, 143, 144, 146, 147, 149], "teardown": 9, "technic": [0, 145, 147, 148], "techniqu": [0, 145, 148, 149], "telescop": [0, 1, 144, 145, 147, 148, 149], "tend": 63, "tensor": [11, 13, 15, 69, 79, 81, 82, 83, 85, 89, 91, 92, 93, 94, 95, 96, 97, 101, 105, 109, 110, 111, 115, 117, 118, 122, 135, 139, 143, 144, 147, 149], "term": [82, 122, 149], "termin": 144, "test": [5, 9, 59, 65, 66, 115, 123, 130, 137, 141, 143, 144, 149], "test_dataload": 9, "test_dataloader_kwarg": [5, 9, 65, 66], "test_dataset": 64, "test_funct": 137, "test_select": [9, 130, 143, 144], "test_siz": 123, "testdataset": [64, 66], "tev": 65, "than": [0, 8, 115, 123, 138, 143, 144, 145, 148, 149], "thei": [68, 142, 143, 144, 149], "them": [0, 1, 33, 69, 78, 93, 115, 143, 144, 145, 147, 148, 149], "themselv": [1, 130, 131, 144, 149], "therebi": [1, 130, 131, 144, 149], "therefor": [33, 49, 142, 143, 144, 147, 149], "thi": [0, 3, 5, 7, 9, 11, 13, 15, 17, 18, 20, 22, 36, 38, 40, 42, 44, 46, 48, 49, 54, 57, 58, 62, 63, 66, 73, 78, 81, 83, 89, 91, 93, 97, 101, 102, 103, 105, 106, 109, 111, 113, 114, 115, 118, 120, 122, 123, 124, 128, 130, 131, 133, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149], "thing": 144, "those": [20, 143, 144], "thread": 13, "three": [106, 122, 149], "threshold": [0, 73, 145, 148], "through": [0, 113, 114, 115, 122, 142, 144, 145, 148, 149], "throw": 142, "thu": [131, 149], "ti": 143, "time": [0, 4, 58, 79, 81, 83, 91, 101, 105, 106, 109, 114, 118, 124, 138, 143, 144, 145, 147, 148], "time_column": 105, "time_coord": 101, "time_lik": 101, "time_like_weight": 101, "time_series_column": [91, 109], "time_window": 79, "timereconstruct": [112, 114], "tini": 144, "tito": [82, 91, 95], "to_config": 149, "to_csv": [144, 149], "to_parquet": 147, "todo": 144, "togeth": [0, 78, 100, 122, 145, 148], "token": 117, "too": [144, 149], "tool": [0, 1, 145, 148], "top": 149, "torch": [0, 11, 13, 15, 78, 82, 102, 103, 107, 137, 143, 144, 145, 146, 147, 148, 149], "torch_cpu": 146, "torch_geometr": [83, 118, 143, 144, 149], "torch_lightn": 149, "tort": 122, "total": [118, 123, 124, 143, 144, 147], "total_energi": [4, 143, 144, 149], "tqdmprogressbar": 120, "track": [0, 18, 20, 24, 38, 40, 42, 65, 114, 119, 121, 141, 142, 144, 145, 148], "tradit": [0, 145, 148], "train": [0, 1, 5, 7, 9, 10, 59, 64, 65, 66, 67, 73, 82, 89, 97, 102, 110, 111, 118, 126, 130, 131, 133, 140, 142, 143, 144, 145, 147, 148], "train_batch": [89, 110], "train_dataload": [9, 89, 144, 149], "train_dataloader_kwarg": [5, 9, 65, 66], "train_ev": 115, "train_select": [130, 143, 144], "train_val_split": 9, "trainabl": 131, "trainer": [89, 120, 123, 144, 149], "trainer_kwarg": 89, "training_config": [127, 144, 149], "training_example_data_sqlit": [126, 143, 144, 149], "training_step": [89, 110], "trainingconfig": [127, 133, 144, 149], "transform": [1, 78, 82, 83, 95, 97, 109, 115, 124, 144, 149], "transform_infer": [115, 144, 149], "transform_prediction_and_target": [115, 144, 149], "transform_support": [115, 144, 149], "transform_target": [115, 144, 149], "transit": 135, "transpar": [130, 131, 141, 144, 149], "transpos": 33, "transpose_list_of_dict": [32, 33], "traverse_and_appli": [127, 132], "treat": [91, 109], "tree": [22, 144], "tri": [22, 36], "triangl": 88, "trident": [65, 88], "trident1211": [84, 88], "tridentsmal": [64, 65], "trigger": [22, 143, 144, 149], "trivial": [36, 115], "true": [35, 58, 73, 91, 93, 95, 97, 102, 105, 107, 120, 122, 124, 130, 131, 133, 136, 142, 143, 144, 149], "trust": [107, 144, 149], "truth": [3, 4, 5, 11, 13, 15, 21, 30, 42, 58, 62, 65, 66, 102, 115, 123, 124, 130, 143, 147, 149], "truth_dict": 102, "truth_label": 143, "truth_tabl": [5, 11, 13, 15, 62, 123, 124, 130, 143, 144], "truthdata": 40, "try": [36, 142], "tum": [24, 31], "tupl": [7, 11, 13, 15, 34, 36, 58, 82, 91, 93, 95, 106, 115, 118, 123, 126, 135], "turn": [106, 141], "tutorial_output": [144, 149], "two": [8, 93, 120, 122, 123, 142, 143, 144, 147], "txt": 146, "type": [0, 5, 7, 8, 9, 11, 13, 15, 20, 32, 33, 34, 40, 42, 48, 49, 50, 51, 52, 57, 58, 59, 61, 62, 63, 68, 79, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 113, 114, 115, 117, 118, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148], "typic": [0, 33, 109, 143, 145, 147, 148], "u": [143, 147], "ultra": 143, "unaccur": 122, "unambigu": [130, 131], "unbatch_edge_index": [78, 79], "uncertainti": [114, 144, 149], "uncompress": 143, "under": [0, 144, 145, 147, 148, 149], "unfamiliar": 149, "uniform": [119, 124], "uniformweightfitt": 124, "union": [0, 7, 8, 9, 11, 13, 15, 22, 33, 36, 44, 46, 48, 49, 50, 51, 52, 54, 68, 69, 73, 75, 79, 82, 83, 89, 91, 93, 102, 103, 111, 115, 130, 133, 136, 142, 145, 147, 148], "uniqu": [11, 13, 15, 58, 105, 118, 130, 144, 147, 149], "unit": [0, 7, 66, 101, 137, 141, 145, 148], "univers": [95, 97], "unlik": 143, "unscal": 149, "untransform": 113, "up": [0, 73, 141, 145, 148], "updat": [109, 110, 118, 120, 144, 146, 149], "upgrad": [4, 21, 86, 144, 146], "upon": 149, "us": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 25, 30, 32, 33, 38, 40, 42, 44, 46, 48, 49, 53, 54, 55, 58, 59, 61, 62, 63, 65, 66, 67, 69, 73, 75, 78, 81, 82, 83, 85, 89, 91, 93, 94, 95, 97, 100, 102, 103, 105, 106, 107, 109, 112, 113, 114, 115, 117, 118, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 137, 138, 141, 142, 145, 146, 147, 148], "usabl": [0, 145, 148], "usag": 126, "use_cach": 59, "use_global_featur": [91, 95], "use_post_processing_lay": [91, 95], "user": [0, 5, 78, 89, 120, 143, 144, 145, 146, 148, 149], "usual": 143, "util": [1, 3, 19, 78, 98, 119, 140, 143, 144, 146, 149], "v": 82, "v1": [128, 130, 131, 133, 146], "v4": 146, "val_batch": [89, 110], "val_dataload": [9, 89], "valid": [5, 9, 36, 59, 65, 66, 89, 110, 111, 115, 120, 122, 126, 128, 133, 143, 144, 149], "validate_fil": 48, "validate_task": [89, 111], "validation_dataloader_kwarg": [5, 9, 65, 66], "validation_step": [89, 110], "validationerror": [128, 133], "valu": [11, 13, 15, 30, 33, 58, 82, 83, 101, 102, 103, 118, 121, 122, 126, 128, 149], "valueerror": [22, 107], "var": 114, "var1": 18, "var_n": 18, "variabl": [18, 20, 22, 36, 48, 93, 105, 106, 118, 124, 138, 142, 147, 149], "varieti": 144, "variou": [1, 60, 144], "vast": [111, 115], "vector": [79, 82, 83, 122, 142, 149], "verbos": [44, 46, 49, 54, 89, 111, 120], "verbose_print": 107, "veri": [59, 143, 144, 149], "verifi": [89, 111], "versa": 120, "version": [83, 106, 115, 120, 141, 144, 149], "vertex": [114, 144], "vertex_i": 4, "vertex_x": 4, "vertex_z": 4, "vertexreconstruct": [112, 114], "viabl": 147, "vice": 120, "virtual": 146, "visit": 147, "vmf": 114, "vmf_loss": 122, "vmfs_factor": 122, "volum": 30, "von": 122, "vonmisesfisher2dloss": [119, 122, 144, 149], "vonmisesfisher3dloss": [119, 122], "vonmisesfisherloss": [119, 122], "w": [144, 149], "wa": [0, 7, 143, 144, 145, 147, 148, 149], "wai": [36, 59, 111, 141, 144, 147, 149], "wandb": [144, 149], "wandb_dir": [144, 149], "wandb_logg": [144, 149], "wandblogg": [144, 149], "want": [143, 144, 146, 147, 149], "warn": [138, 144], "warning_onc": [138, 144], "warranti": 122, "waterdemo81": [84, 88], "wb": 142, "we": [33, 36, 59, 106, 141, 144, 146, 147, 149], "weight": [11, 13, 15, 73, 75, 82, 97, 102, 115, 122, 124, 131, 144, 149], "weight_fit": 119, "weight_nam": 124, "weightfitt": [119, 124], "well": [141, 144, 149], "what": [1, 81, 102, 141, 144, 149], "whatev": 144, "wheel": 146, "when": [0, 11, 13, 15, 33, 35, 58, 73, 82, 91, 93, 95, 109, 121, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149], "whenev": 146, "where": [18, 44, 46, 49, 54, 102, 103, 105, 106, 109, 118, 121, 142, 143, 144, 147, 149], "wherea": [124, 143], "whether": [8, 34, 36, 58, 81, 82, 91, 93, 95, 97, 107, 117, 122, 132, 136, 137, 144], "which": [0, 5, 11, 13, 15, 18, 20, 21, 30, 34, 38, 40, 42, 59, 61, 63, 68, 79, 83, 93, 102, 103, 106, 107, 113, 118, 122, 123, 126, 142, 143, 144, 145, 148, 149], "while": [0, 22, 89, 120, 141, 143, 145, 148], "who": [5, 135, 144, 149], "whom": 122, "whose": 73, "wide": 149, "willing": [143, 147], "window": [79, 143, 144], "wise": 83, "wish": [0, 68, 141, 145, 148], "with_standard_argu": 126, "within": [30, 79, 82, 83, 93, 100, 144, 149], "without": [1, 100, 103, 105, 122, 143, 146], "work": [0, 4, 34, 91, 141, 142, 143, 144, 145, 148, 149], "worker": [6, 7, 44, 54, 57, 62, 68, 126, 138], "workflow": [0, 145, 148], "would": [141, 143, 144, 147, 149], "wrap": [120, 130, 131], "write": [62, 73, 75, 142, 144, 149], "writer": [3, 46, 147], "written": [46, 68, 142], "wrt": 115, "www": 144, "x": [4, 30, 81, 82, 83, 86, 101, 105, 106, 109, 115, 118, 122, 124, 143, 144, 147, 149], "x8": 143, "x_i": 82, "x_j": 82, "x_low": 124, "xyz": [85, 86, 87, 88, 105, 106, 143, 147], "xyz_coord": 118, "xyzt": 118, "y": [4, 30, 81, 86, 101, 118], "yaml": [128, 129, 144], "yield": [0, 93, 122, 145, 148], "yml": [59, 126, 130, 131, 143, 144, 149], "you": [63, 68, 81, 130, 131, 141, 143, 144, 146, 147, 149], "your": [103, 141, 142, 143, 144, 146], "yourself": 141, "z": [4, 30, 81, 86, 101, 105, 106, 118], "z_name": 105, "z_offset": [105, 106], "z_scale": [105, 106], "zenith": [4, 114, 121, 144, 149], "zenith_kappa": 114, "zenith_kei": 121, "zenith_pr": 114, "zenithreconstruct": [112, 114], "zenithreconstructionwithkappa": [112, 114, 144, 149], "\u00f8rs\u00f8e": [0, 145, 148]}, "titles": ["Usage", "Subpackages", "graphnet.constants module", "graphnet.data package", "graphnet.data.constants module", "graphnet.data.curated_datamodule module", "graphnet.data.dataclasses module", "graphnet.data.dataconverter module", "graphnet.data.dataloader module", "graphnet.data.datamodule module", "graphnet.data.dataset package", "graphnet.data.dataset.dataset module", "graphnet.data.dataset.parquet package", "graphnet.data.dataset.parquet.parquet_dataset module", "graphnet.data.dataset.sqlite package", "graphnet.data.dataset.sqlite.sqlite_dataset module", "graphnet.data.extractors package", "graphnet.data.extractors.combine_extractors module", "graphnet.data.extractors.extractor module", "graphnet.data.extractors.icecube package", "graphnet.data.extractors.icecube.i3extractor module", "graphnet.data.extractors.icecube.i3featureextractor module", "graphnet.data.extractors.icecube.i3genericextractor module", "graphnet.data.extractors.icecube.i3hybridrecoextractor module", "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor module", "graphnet.data.extractors.icecube.i3particleextractor module", "graphnet.data.extractors.icecube.i3pisaextractor module", "graphnet.data.extractors.icecube.i3quesoextractor module", "graphnet.data.extractors.icecube.i3retroextractor module", "graphnet.data.extractors.icecube.i3splinempeextractor module", "graphnet.data.extractors.icecube.i3truthextractor module", "graphnet.data.extractors.icecube.i3tumextractor module", "graphnet.data.extractors.icecube.utilities package", "graphnet.data.extractors.icecube.utilities.collections module", "graphnet.data.extractors.icecube.utilities.frames module", "graphnet.data.extractors.icecube.utilities.i3_filters module", "graphnet.data.extractors.icecube.utilities.types module", "graphnet.data.extractors.internal package", "graphnet.data.extractors.internal.parquet_extractor module", "graphnet.data.extractors.liquido package", "graphnet.data.extractors.liquido.h5_extractor module", "graphnet.data.extractors.prometheus package", "graphnet.data.extractors.prometheus.prometheus_extractor module", "graphnet.data.parquet package", "graphnet.data.parquet.deprecated_methods module", "graphnet.data.pre_configured package", "graphnet.data.pre_configured.dataconverters module", "graphnet.data.readers package", "graphnet.data.readers.graphnet_file_reader module", "graphnet.data.readers.i3reader module", "graphnet.data.readers.internal_parquet_reader module", "graphnet.data.readers.liquido_reader module", "graphnet.data.readers.prometheus_reader module", "graphnet.data.sqlite package", "graphnet.data.sqlite.deprecated_methods module", "graphnet.data.utilities package", "graphnet.data.utilities.parquet_to_sqlite module", "graphnet.data.utilities.random module", "graphnet.data.utilities.sqlite_utilities module", "graphnet.data.utilities.string_selection_resolver module", "graphnet.data.writers package", "graphnet.data.writers.graphnet_writer module", "graphnet.data.writers.parquet_writer module", "graphnet.data.writers.sqlite_writer module", "graphnet.datasets package", "graphnet.datasets.prometheus_datasets module", "graphnet.datasets.test_dataset module", "graphnet.deployment package", "graphnet.deployment.deployer module", "graphnet.deployment.deployment_module module", "graphnet.deployment.i3modules package", "graphnet.deployment.i3modules.deprecated_methods module", "graphnet.deployment.icecube package", "graphnet.deployment.icecube.cleaning_module module", "graphnet.deployment.icecube.i3deployer module", "graphnet.deployment.icecube.inference_module module", "graphnet.exceptions package", "graphnet.exceptions.exceptions module", "graphnet.models package", "graphnet.models.coarsening module", "graphnet.models.components package", "graphnet.models.components.embedding module", "graphnet.models.components.layers module", "graphnet.models.components.pool module", "graphnet.models.detector package", "graphnet.models.detector.detector module", "graphnet.models.detector.icecube module", "graphnet.models.detector.liquido module", "graphnet.models.detector.prometheus module", "graphnet.models.easy_model module", "graphnet.models.gnn package", "graphnet.models.gnn.RNN_tito module", "graphnet.models.gnn.convnet module", "graphnet.models.gnn.dynedge module", "graphnet.models.gnn.dynedge_jinst module", "graphnet.models.gnn.dynedge_kaggle_tito module", "graphnet.models.gnn.gnn module", "graphnet.models.gnn.icemix module", "graphnet.models.graphs package", "graphnet.models.graphs.edges package", "graphnet.models.graphs.edges.edges module", "graphnet.models.graphs.edges.minkowski module", "graphnet.models.graphs.graph_definition module", "graphnet.models.graphs.graphs module", "graphnet.models.graphs.nodes package", "graphnet.models.graphs.nodes.nodes module", "graphnet.models.graphs.utils module", "graphnet.models.model module", "graphnet.models.rnn package", "graphnet.models.rnn.node_rnn module", "graphnet.models.standard_averaged_model module", "graphnet.models.standard_model module", "graphnet.models.task package", "graphnet.models.task.classification module", "graphnet.models.task.reconstruction module", "graphnet.models.task.task module", "graphnet.models.transformer package", "graphnet.models.transformer.iseecube module", "graphnet.models.utils module", "graphnet.training package", "graphnet.training.callbacks module", "graphnet.training.labels module", "graphnet.training.loss_functions module", "graphnet.training.utils module", "graphnet.training.weight_fitting module", "graphnet.utilities package", "graphnet.utilities.argparse module", "graphnet.utilities.config package", "graphnet.utilities.config.base_config module", "graphnet.utilities.config.configurable module", "graphnet.utilities.config.dataset_config module", "graphnet.utilities.config.model_config module", "graphnet.utilities.config.parsing module", "graphnet.utilities.config.training_config module", "graphnet.utilities.decorators module", "graphnet.utilities.deprecation_tools module", "graphnet.utilities.filesys module", "graphnet.utilities.imports module", "graphnet.utilities.logging module", "graphnet.utilities.maths module", "src", "Contributing To GraphNeT", "Data Conversion in GraphNeT", "Datasets In GraphNeT", "GraphNeT tutorial", "GraphNeT", "Installation", "Integrating New Experiments into GraphNeT", "GraphNeT", "Models In GraphNeT", "&lt;no title&gt;"], "titleterms": {"1": 147, "2": 147, "In": [143, 149], "The": [144, 149], "To": 141, "acknowledg": 0, "ad": [143, 144, 147, 149], "advanc": 144, "appendix": 144, "appli": 147, "argpars": 126, "backbon": 149, "base_config": 128, "befor": 147, "callback": 120, "checkpoint": 149, "choos": 143, "class": [144, 147, 149], "classif": 113, "cleaning_modul": 73, "coarsen": 79, "code": 141, "collect": 33, "combin": [143, 144], "combine_extractor": 17, "compon": [80, 81, 82, 83], "config": [127, 128, 129, 130, 131, 132, 133], "configur": 129, "constant": [2, 4], "content": 144, "contribut": 141, "convent": 141, "convers": 142, "convnet": 92, "creat": 144, "curated_datamodul": 5, "custom": [143, 144], "cvmf": 146, "data": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 142, 147], "dataclass": 6, "dataconfig": 144, "dataconvert": [7, 46, 142], "dataload": 8, "datamodul": 9, "dataset": [10, 11, 12, 13, 14, 15, 64, 65, 66, 143, 144], "dataset_config": 130, "datasetconfig": 144, "decor": 134, "deploy": [67, 68, 69, 70, 71, 72, 73, 74, 75], "deployment_modul": 69, "deprecated_method": [44, 54, 71], "deprecation_tool": 135, "detector": [84, 85, 86, 87, 88, 147], "dynedg": 93, "dynedge_jinst": 94, "dynedge_kaggle_tito": 95, "easy_model": 89, "edg": [99, 100, 101], "embed": 81, "energi": 149, "event": 143, "exampl": [144, 147, 149], "except": [76, 77], "experi": [147, 149], "extractor": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 142, 147], "filesi": 136, "frame": 34, "function": 144, "geometri": 147, "github": 141, "gnn": [90, 91, 92, 93, 94, 95, 96, 97], "graph": [98, 99, 100, 101, 102, 103, 104, 105, 106], "graph_definit": 102, "graphdefinit": 149, "graphnet": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144], "graphnet_file_read": 48, "graphnet_writ": 61, "graphnetfileread": 147, "graphnetgraphnet": [141, 142, 143, 145, 147, 148, 149], "h5_extractor": 40, "i3_filt": 35, "i3deploy": 74, "i3extractor": 20, "i3featureextractor": 21, "i3genericextractor": 22, "i3hybridrecoextractor": 23, "i3modul": [70, 71], "i3ntmuonlabelsextractor": 24, "i3particleextractor": 25, "i3pisaextractor": 26, "i3quesoextractor": 27, "i3read": 49, "i3retroextractor": 28, "i3splinempeextractor": 29, "i3truthextractor": 30, "i3tumextractor": 31, "icecub": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 72, 73, 74, 75, 86, 146], "icemix": 97, "implement": [143, 147], "import": 137, "index": 147, "inference_modul": 75, "instal": 146, "instanti": 149, "integr": 147, "intern": [37, 38], "internal_parquet_read": 50, "introduct": 144, "iseecub": 117, "issu": 141, "label": [121, 143, 144], "layer": 82, "liquido": [39, 40, 87], "liquido_read": 51, "load": 149, "log": 138, "loss_funct": 122, "math": 139, "minkowski": 101, "model": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 144, 149], "model_config": 131, "modelconfig": [144, 149], "modul": [2, 4, 5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 71, 73, 74, 75, 77, 79, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 113, 114, 115, 117, 118, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "multi": 147, "multipl": [143, 144], "new": [143, 147], "node": [104, 105], "node_rnn": 109, "overview": 144, "own": [147, 149], "packag": [3, 10, 12, 14, 16, 19, 32, 37, 39, 41, 43, 45, 47, 53, 55, 60, 64, 67, 70, 72, 76, 78, 80, 84, 90, 98, 99, 104, 108, 112, 116, 119, 125, 127], "parquet": [12, 13, 43, 44], "parquet_dataset": 13, "parquet_extractor": 38, "parquet_to_sqlit": 56, "parquet_writ": 62, "parquetdataset": 143, "pars": 132, "pool": 83, "pre_configur": [45, 46], "prometheu": [41, 42, 88], "prometheus_dataset": 65, "prometheus_extractor": 42, "prometheus_read": 52, "pull": 141, "qualiti": 141, "quick": 146, "random": 57, "reader": [47, 48, 49, 50, 51, 52, 142], "reconstruct": [114, 149], "reproduc": 144, "request": 141, "rnn": [108, 109], "rnn_tito": 91, "save": 149, "select": 143, "sqlite": [14, 15, 53, 54], "sqlite_dataset": 15, "sqlite_util": 58, "sqlite_writ": 63, "sqlitedataset": [143, 144], "src": 140, "standard_averaged_model": 110, "standard_model": 111, "standardmodel": [144, 149], "start": 146, "state_dict": 149, "string_selection_resolv": 59, "submodul": [1, 3, 10, 12, 14, 16, 19, 32, 37, 39, 41, 43, 45, 47, 53, 55, 60, 64, 67, 70, 72, 76, 78, 80, 84, 90, 98, 99, 104, 108, 112, 116, 119, 125, 127], "subpackag": [1, 3, 10, 16, 19, 67, 78, 98, 125], "subset": 143, "support": 147, "syntax": 149, "tabl": 147, "task": [112, 113, 114, 115, 149], "test_dataset": 66, "track": 149, "train": [119, 120, 121, 122, 123, 124, 149], "training_config": 133, "transform": [116, 117], "truth": 144, "tutori": 144, "type": 36, "us": [143, 144, 149], "usag": 0, "util": [32, 33, 34, 35, 36, 55, 56, 57, 58, 59, 106, 118, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "v": 143, "weight_fit": 124, "write": 147, "writer": [60, 61, 62, 63, 142], "your": [147, 149]}})