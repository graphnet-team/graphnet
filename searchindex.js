Search.setIndex({"alltitles": {"1) Adding Support for Your Data": [[145, "adding-support-for-your-data"]], "2) Implementing a Detector Class": [[145, "implementing-a-detector-class"]], "API": [[1, "module-graphnet"]], "Acknowledgements": [[0, "acknowledgements"]], "Adding Your Own Model": [[146, "adding-your-own-model"]], "Adding custom Labels": [[141, "adding-custom-labels"]], "Adding custom truth labels": [[142, "adding-custom-truth-labels"]], "Advanced Functionality in SQLiteDataset": [[142, "advanced-functionality-in-sqlitedataset"]], "Appendix": [[142, "appendix"]], "Choosing a subset of events using selection": [[141, "choosing-a-subset-of-events-using-selection"]], "Code quality": [[139, "code-quality"]], "Combining Multiple Datasets": [[141, "combining-multiple-datasets"], [142, "combining-multiple-datasets"]], "Contents": [[142, "contents"]], "Contributing To GraphNeTgraphnet": [[139, "contributing-to-graphnetgraphnet-header"]], "Conventions": [[139, "conventions"]], "Creating reproducible Datasets using DatasetConfig": [[142, "creating-reproducible-datasets-using-datasetconfig"]], "Creating reproducible Models using ModelConfig": [[142, "creating-reproducible-models-using-modelconfig"]], "Data Conversion in GraphNeTgraphnet": [[140, "data-conversion-in-graphnetgraphnet-header"]], "DataConverter": [[140, "dataconverter"]], "Dataset": [[141, "dataset"]], "Datasets In GraphNeTgraphnet": [[141, "datasets-in-graphnetgraphnet-header"]], "Example DataConfig": [[142, "example-dataconfig"]], "Example ModelConfig": [[142, "example-modelconfig"]], "Example of geometry table before applying multi-index": [[145, "id1"]], "Example: Energy Reconstruction using ModelConfig": [[146, "example-energy-reconstruction-using-modelconfig"]], "Experiment Tracking": [[146, "experiment-tracking"]], "Extractors": [[140, "extractors"]], "GitHub issues": [[139, "github-issues"]], "GraphDefinition, backbone & Task": [[146, "graphdefinition-backbone-task"]], "GraphNeT tutorial": [[142, "graphnet-tutorial"]], "Implementing a new Dataset": [[141, "implementing-a-new-dataset"]], "Installation": [[144, "installation"]], "Installation in CVMFS (IceCube)": [[144, "installation-in-cvmfs-icecube"]], "Instantiating a StandardModel": [[146, "instantiating-a-standardmodel"]], "Integrating New Experiments into GraphNeTgraphnet": [[145, "integrating-new-experiments-into-graphnetgraphnet-header"]], "Introduction": [[142, "introduction"]], "Model.save": [[146, "model-save"]], "ModelConfig and state_dict": [[146, "modelconfig-and-state-dict"]], "Models In GraphNeTgraphnet": [[146, "models-in-graphnetgraphnet-header"]], "Overview of GraphNeT": [[142, "overview-of-graphnet"]], "Pull requests": [[139, "pull-requests"]], "Quick Start": [[144, "quick-start"]], "RNN_tito": [[89, "module-graphnet.models.gnn.RNN_tito"]], "Readers": [[140, "readers"]], "SQLiteDataset & ParquetDataset": [[141, "sqlitedataset-parquetdataset"]], "SQLiteDataset vs. ParquetDataset": [[141, "sqlitedataset-vs-parquetdataset"]], "Saving, loading, and checkpointing Models": [[146, "saving-loading-and-checkpointing-models"]], "The Model class": [[142, "the-model-class"], [146, "the-model-class"]], "The StandardModel class": [[142, "the-standardmodel-class"], [146, "the-standardmodel-class"]], "Training Syntax for StandardModel": [[146, "training-syntax-for-standardmodel"]], "Usage": [[0, "usage"]], "Using checkpoints": [[146, "using-checkpoints"]], "Writers": [[140, "writers"]], "Writing your own Extractor and GraphNeTFileReader": [[145, "writing-your-own-extractor-and-graphnetfilereader"]], "argparse": [[124, "module-graphnet.utilities.argparse"]], "base_config": [[126, "module-graphnet.utilities.config.base_config"]], "callbacks": [[118, "module-graphnet.training.callbacks"]], "classification": [[111, "module-graphnet.models.task.classification"]], "cleaning_module": [[72, "module-graphnet.deployment.icecube.cleaning_module"]], "coarsening": [[78, "module-graphnet.models.coarsening"]], "collections": [[33, "module-graphnet.data.extractors.icecube.utilities.collections"]], "combine_extractors": [[17, "module-graphnet.data.extractors.combine_extractors"]], "components": [[79, "module-graphnet.models.components"]], "config": [[125, "module-graphnet.utilities.config"]], "configurable": [[127, "module-graphnet.utilities.config.configurable"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "convnet": [[90, "module-graphnet.models.gnn.convnet"]], "curated_datamodule": [[5, "module-graphnet.data.curated_datamodule"]], "data": [[3, "module-graphnet.data"]], "dataclasses": [[6, "module-graphnet.data.dataclasses"]], "dataconverter": [[7, "module-graphnet.data.dataconverter"]], "dataconverters": [[46, "module-graphnet.data.pre_configured.dataconverters"]], "dataloader": [[8, "module-graphnet.data.dataloader"]], "datamodule": [[9, "module-graphnet.data.datamodule"]], "dataset": [[10, "module-graphnet.data.dataset"], [11, "module-graphnet.data.dataset.dataset"]], "dataset_config": [[128, "module-graphnet.utilities.config.dataset_config"]], "datasets": [[64, "module-graphnet.datasets"]], "decorators": [[132, "module-graphnet.utilities.decorators"]], "deployer": [[67, "module-graphnet.deployment.deployer"]], "deployment": [[66, "module-graphnet.deployment"]], "deployment_module": [[68, "module-graphnet.deployment.deployment_module"]], "deprecated_methods": [[44, "module-graphnet.data.parquet.deprecated_methods"], [54, "module-graphnet.data.sqlite.deprecated_methods"], [70, "deprecated-methods"]], "deprecation_tools": [[133, "module-graphnet.utilities.deprecation_tools"]], "detector": [[83, "module-graphnet.models.detector"], [84, "module-graphnet.models.detector.detector"]], "dynedge": [[91, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[92, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedge_kaggle_tito": [[93, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "edges": [[97, "module-graphnet.models.graphs.edges"], [98, "module-graphnet.models.graphs.edges.edges"]], "embedding": [[80, "module-graphnet.models.components.embedding"]], "exceptions": [[75, "module-graphnet.exceptions"], [76, "module-graphnet.exceptions.exceptions"]], "extractor": [[18, "module-graphnet.data.extractors.extractor"]], "extractors": [[16, "module-graphnet.data.extractors"]], "filesys": [[134, "module-graphnet.utilities.filesys"]], "frames": [[34, "module-graphnet.data.extractors.icecube.utilities.frames"]], "gnn": [[88, "module-graphnet.models.gnn"], [94, "module-graphnet.models.gnn.gnn"]], "graph_definition": [[100, "module-graphnet.models.graphs.graph_definition"]], "graphnet_file_reader": [[48, "module-graphnet.data.readers.graphnet_file_reader"]], "graphnet_writer": [[61, "module-graphnet.data.writers.graphnet_writer"]], "graphs": [[96, "module-graphnet.models.graphs"], [101, "module-graphnet.models.graphs.graphs"]], "h5_extractor": [[40, "module-graphnet.data.extractors.liquido.h5_extractor"]], "i3_filters": [[35, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "i3deployer": [[73, "i3deployer"]], "i3extractor": [[20, "module-graphnet.data.extractors.icecube.i3extractor"]], "i3featureextractor": [[21, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor": [[22, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3hybridrecoextractor": [[23, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3modules": [[69, "i3modules"]], "i3ntmuonlabelsextractor": [[24, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor": [[25, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor": [[26, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor": [[27, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3reader": [[49, "module-graphnet.data.readers.i3reader"]], "i3retroextractor": [[28, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeextractor": [[29, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor": [[30, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor": [[31, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "icecube": [[19, "module-graphnet.data.extractors.icecube"], [71, "icecube"], [85, "module-graphnet.models.detector.icecube"]], "icemix": [[95, "module-graphnet.models.gnn.icemix"]], "imports": [[135, "module-graphnet.utilities.imports"]], "inference_module": [[74, "module-graphnet.deployment.icecube.inference_module"]], "internal": [[37, "module-graphnet.data.extractors.internal"]], "internal_parquet_reader": [[50, "module-graphnet.data.readers.internal_parquet_reader"]], "iseecube": [[115, "module-graphnet.models.transformer.iseecube"]], "labels": [[119, "module-graphnet.training.labels"]], "layers": [[81, "module-graphnet.models.components.layers"]], "liquido": [[39, "module-graphnet.data.extractors.liquido"], [86, "module-graphnet.models.detector.liquido"]], "liquido_reader": [[51, "module-graphnet.data.readers.liquido_reader"]], "logging": [[136, "module-graphnet.utilities.logging"]], "loss_functions": [[120, "module-graphnet.training.loss_functions"]], "maths": [[137, "module-graphnet.utilities.maths"]], "minkowski": [[99, "module-graphnet.models.graphs.edges.minkowski"]], "model": [[105, "module-graphnet.models.model"]], "model_config": [[129, "module-graphnet.utilities.config.model_config"]], "models": [[77, "module-graphnet.models"]], "node_rnn": [[107, "module-graphnet.models.rnn.node_rnn"]], "nodes": [[102, "module-graphnet.models.graphs.nodes"], [103, "module-graphnet.models.graphs.nodes.nodes"]], "parquet": [[12, "module-graphnet.data.dataset.parquet"], [43, "module-graphnet.data.parquet"]], "parquet_dataset": [[13, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "parquet_extractor": [[38, "module-graphnet.data.extractors.internal.parquet_extractor"]], "parquet_to_sqlite": [[56, "module-graphnet.data.utilities.parquet_to_sqlite"]], "parquet_writer": [[62, "module-graphnet.data.writers.parquet_writer"]], "parsing": [[130, "module-graphnet.utilities.config.parsing"]], "pool": [[82, "module-graphnet.models.components.pool"]], "pre_configured": [[45, "module-graphnet.data.pre_configured"]], "prometheus": [[41, "module-graphnet.data.extractors.prometheus"], [87, "module-graphnet.models.detector.prometheus"]], "prometheus_extractor": [[42, "module-graphnet.data.extractors.prometheus.prometheus_extractor"]], "prometheus_reader": [[52, "module-graphnet.data.readers.prometheus_reader"]], "random": [[57, "module-graphnet.data.utilities.random"]], "readers": [[47, "module-graphnet.data.readers"]], "reconstruction": [[112, "module-graphnet.models.task.reconstruction"]], "rnn": [[106, "module-graphnet.models.rnn"]], "sqlite": [[14, "module-graphnet.data.dataset.sqlite"], [53, "module-graphnet.data.sqlite"]], "sqlite_dataset": [[15, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "sqlite_utilities": [[58, "module-graphnet.data.utilities.sqlite_utilities"]], "sqlite_writer": [[63, "module-graphnet.data.writers.sqlite_writer"]], "src": [[138, "src"]], "standard_averaged_model": [[108, "module-graphnet.models.standard_averaged_model"]], "standard_model": [[109, "module-graphnet.models.standard_model"]], "string_selection_resolver": [[59, "module-graphnet.data.utilities.string_selection_resolver"]], "task": [[110, "module-graphnet.models.task"], [113, "module-graphnet.models.task.task"]], "test_dataset": [[65, "module-graphnet.datasets.test_dataset"]], "training": [[117, "module-graphnet.training"]], "training_config": [[131, "module-graphnet.utilities.config.training_config"]], "transformer": [[114, "module-graphnet.models.transformer"]], "types": [[36, "module-graphnet.data.extractors.icecube.utilities.types"]], "utilities": [[32, "module-graphnet.data.extractors.icecube.utilities"], [55, "module-graphnet.data.utilities"], [123, "module-graphnet.utilities"]], "utils": [[104, "module-graphnet.models.graphs.utils"], [116, "module-graphnet.models.utils"], [121, "module-graphnet.training.utils"]], "weight_fitting": [[122, "module-graphnet.training.weight_fitting"]], "writers": [[60, "module-graphnet.data.writers"]]}, "docnames": ["about/about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.curated_datamodule", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.combine_extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.extractors.liquido", "api/graphnet.data.extractors.liquido.h5_extractor", "api/graphnet.data.extractors.prometheus", "api/graphnet.data.extractors.prometheus.prometheus_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.readers.liquido_reader", "api/graphnet.data.readers.prometheus_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.datasets", "api/graphnet.datasets.test_dataset", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.liquido", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.icemix", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.transformer", "api/graphnet.models.transformer.iseecube", "api/graphnet.models.utils", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute/contribute", "data_conversion/data_conversion", "datasets/datasets", "getting_started/getting_started", "index", "installation/install", "integration/integration", "models/models", "substitutions"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["about/about.rst", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.curated_datamodule.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.combine_extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.extractors.liquido.rst", "api/graphnet.data.extractors.liquido.h5_extractor.rst", "api/graphnet.data.extractors.prometheus.rst", "api/graphnet.data.extractors.prometheus.prometheus_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.readers.liquido_reader.rst", "api/graphnet.data.readers.prometheus_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.datasets.rst", "api/graphnet.datasets.test_dataset.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.liquido.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.transformer.rst", "api/graphnet.models.transformer.iseecube.rst", "api/graphnet.models.utils.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute/contribute.rst", "data_conversion/data_conversion.rst", "datasets/datasets.rst", "getting_started/getting_started.md", "index.rst", "installation/install.rst", "integration/integration.rst", "models/models.rst", "substitutions.rst"], "indexentries": {"accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors", false]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions", false]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[11, "graphnet.data.dataset.dataset.Dataset.add_label", false]], "arca115 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.ARCA115", false]], "argumentparser (class in graphnet.utilities.argparse)": [[124, "graphnet.utilities.argparse.ArgumentParser", false]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[129, "graphnet.utilities.config.model_config.ModelConfig.arguments", false]], "array_to_sequence() (in module graphnet.models.utils)": [[116, "graphnet.models.utils.array_to_sequence", false]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[126, "graphnet.utilities.config.base_config.BaseConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[129, "graphnet.utilities.config.model_config.ModelConfig.as_dict", false]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.attach_index", false]], "attention_rel (class in graphnet.models.components.layers)": [[81, "graphnet.models.components.layers.Attention_rel", false]], "attributecoarsening (class in graphnet.models.coarsening)": [[78, "graphnet.models.coarsening.AttributeCoarsening", false]], "available_backends (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.available_backends", false]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.AzimuthReconstruction", false]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa", false]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[120, "graphnet.training.loss_functions.LogCMK.backward", false]], "baikalgvd8 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.BaikalGVD8", false]], "baseconfig (class in graphnet.utilities.config.base_config)": [[126, "graphnet.utilities.config.base_config.BaseConfig", false]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[111, "graphnet.models.task.classification.BinaryClassificationTask", false]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[111, "graphnet.models.task.classification.BinaryClassificationTaskLogits", false]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[120, "graphnet.training.loss_functions.BinaryCrossEntropyLoss", false]], "bjoernlow (class in graphnet.training.weight_fitting)": [[122, "graphnet.training.weight_fitting.BjoernLow", false]], "block (class in graphnet.models.components.layers)": [[81, "graphnet.models.components.layers.Block", false]], "block_rel (class in graphnet.models.components.layers)": [[81, "graphnet.models.components.layers.Block_rel", false]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion", false]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[116, "graphnet.models.utils.calculate_distance_matrix", false]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[116, "graphnet.models.utils.calculate_xyzt_homophily", false]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python", false]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python", false]], "citation (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.citation", false]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[129, "graphnet.utilities.config.model_config.ModelConfig.class_name", false]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[107, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object", false]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[104, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles", false]], "coarsening (class in graphnet.models.coarsening)": [[78, "graphnet.models.coarsening.Coarsening", false]], "collate_fn() (in module graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.collate_fn", false]], "collate_fn() (in module graphnet.training.utils)": [[121, "graphnet.training.utils.collate_fn", false]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[121, "graphnet.training.utils.collator_sequence_buckleting", false]], "columnmissingexception": [[76, "graphnet.exceptions.exceptions.ColumnMissingException", false]], "combinedextractor (class in graphnet.data.extractors.combine_extractors)": [[17, "graphnet.data.extractors.combine_extractors.CombinedExtractor", false]], "comments (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.comments", false]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.compute_loss", false]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[113, "graphnet.models.task.task.LearnedTask.compute_loss", false]], "compute_loss() (graphnet.models.task.task.standardflowtask method)": [[113, "graphnet.models.task.task.StandardFlowTask.compute_loss", false]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[113, "graphnet.models.task.task.StandardLearnedTask.compute_loss", false]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[99, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat", false]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[11, "graphnet.data.dataset.dataset.Dataset.concatenate", false]], "config (graphnet.utilities.config.configurable.configurable property)": [[127, "graphnet.utilities.config.configurable.Configurable.config", false]], "configurable (class in graphnet.utilities.config.configurable)": [[127, "graphnet.utilities.config.configurable.Configurable", false]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.configure_optimizers", false]], "contains() (graphnet.utilities.argparse.options method)": [[124, "graphnet.utilities.argparse.Options.contains", false]], "convnet (class in graphnet.models.gnn.convnet)": [[90, "graphnet.models.gnn.convnet.ConvNet", false]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.create_table", false]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql", false]], "creator (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.creator", false]], "critical() (graphnet.utilities.logging.logger method)": [[136, "graphnet.utilities.logging.Logger.critical", false]], "crossentropyloss (class in graphnet.training.loss_functions)": [[120, "graphnet.training.loss_functions.CrossEntropyLoss", false]], "curateddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.CuratedDataset", false]], "customdomcoarsening (class in graphnet.models.coarsening)": [[78, "graphnet.models.coarsening.CustomDOMCoarsening", false]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.database_exists", false]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.database_table_exists", false]], "dataconverter (class in graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.DataConverter", false]], "dataloader (class in graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.DataLoader", false]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[131, "graphnet.utilities.config.training_config.TrainingConfig.dataloader", false]], "dataset (class in graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.Dataset", false]], "dataset_dir (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.dataset_dir", false]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig", false]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta", false]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta", false]], "debug() (graphnet.utilities.logging.logger method)": [[136, "graphnet.utilities.logging.Logger.debug", false]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE", false]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE", false]], "deepice (class in graphnet.models.gnn.icemix)": [[95, "graphnet.models.gnn.icemix.DeepIce", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[111, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[111, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[112, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[112, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[112, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[112, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[112, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[112, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[113, "graphnet.models.task.task.IdentityTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.task property)": [[113, "graphnet.models.task.task.Task.default_prediction_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[111, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[111, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[112, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[112, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[112, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[112, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[112, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[112, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[113, "graphnet.models.task.task.IdentityTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.task property)": [[113, "graphnet.models.task.task.Task.default_target_labels", false]], "deployer (class in graphnet.deployment.deployer)": [[67, "graphnet.deployment.deployer.Deployer", false]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[68, "graphnet.deployment.deployment_module.DeploymentModule", false]], "description() (graphnet.data.curated_datamodule.curateddataset method)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.description", false]], "detector (class in graphnet.models.detector.detector)": [[84, "graphnet.models.detector.detector.Detector", false]], "direction (class in graphnet.training.labels)": [[119, "graphnet.training.labels.Direction", false]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa", false]], "do_shuffle() (in module graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.do_shuffle", false]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[78, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening", false]], "domcoarsening (class in graphnet.models.coarsening)": [[78, "graphnet.models.coarsening.DOMCoarsening", false]], "droppath (class in graphnet.models.components.layers)": [[81, "graphnet.models.components.layers.DropPath", false]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[126, "graphnet.utilities.config.base_config.BaseConfig.dump", false]], "dynedge (class in graphnet.models.gnn.dynedge)": [[91, "graphnet.models.gnn.dynedge.DynEdge", false]], "dynedgeconv (class in graphnet.models.components.layers)": [[81, "graphnet.models.components.layers.DynEdgeConv", false]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[92, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST", false]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[93, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO", false]], "dyntrans (class in graphnet.models.components.layers)": [[81, "graphnet.models.components.layers.DynTrans", false]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[131, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience", false]], "edgeconvtito (class in graphnet.models.components.layers)": [[81, "graphnet.models.components.layers.EdgeConvTito", false]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[98, "graphnet.models.graphs.edges.edges.EdgeDefinition", false]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.EnergyReconstruction", false]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower", false]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty", false]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.EnergyTCReconstruction", false]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.EnsembleDataset", false]], "eps_like() (in module graphnet.utilities.maths)": [[137, "graphnet.utilities.maths.eps_like", false]], "erdahosteddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.ERDAHostedDataset", false]], "error() (graphnet.utilities.logging.logger method)": [[136, "graphnet.utilities.logging.Logger.error", false]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[120, "graphnet.training.loss_functions.EuclideanDistanceLoss", false]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[98, "graphnet.models.graphs.edges.edges.EuclideanEdges", false]], "event_truth (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.event_truth", false]], "events (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.events", false]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[61, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes", false]], "experiment (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.experiment", false]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[81, "graphnet.models.components.layers.DropPath.extra_repr", false]], "extra_repr() (graphnet.models.model.model method)": [[105, "graphnet.models.model.Model.extra_repr", false]], "extra_repr_recursive() (graphnet.models.model.model method)": [[105, "graphnet.models.model.Model.extra_repr_recursive", false]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names", false]], "extractor (class in graphnet.data.extractors.extractor)": [[18, "graphnet.data.extractors.extractor.Extractor", false]], "feature_map() (graphnet.models.detector.detector.detector method)": [[84, "graphnet.models.detector.detector.Detector.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[85, "graphnet.models.detector.icecube.IceCube86.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[85, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[85, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[85, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map", false]], "feature_map() (graphnet.models.detector.liquido.liquido_v1 method)": [[86, "graphnet.models.detector.liquido.LiquidO_v1.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.arca115 method)": [[87, "graphnet.models.detector.prometheus.ARCA115.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.baikalgvd8 method)": [[87, "graphnet.models.detector.prometheus.BaikalGVD8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecube86 method)": [[87, "graphnet.models.detector.prometheus.IceCube86.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubedeepcore8 method)": [[87, "graphnet.models.detector.prometheus.IceCubeDeepCore8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubegen2 method)": [[87, "graphnet.models.detector.prometheus.IceCubeGen2.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubeupgrade7 method)": [[87, "graphnet.models.detector.prometheus.IceCubeUpgrade7.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icedemo81 method)": [[87, "graphnet.models.detector.prometheus.IceDemo81.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[87, "graphnet.models.detector.prometheus.ORCA150.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150superdense method)": [[87, "graphnet.models.detector.prometheus.ORCA150SuperDense.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.trident1211 method)": [[87, "graphnet.models.detector.prometheus.TRIDENT1211.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.waterdemo81 method)": [[87, "graphnet.models.detector.prometheus.WaterDemo81.feature_map", false]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES", false]], "features (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.features", false]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.features", false]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[61, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension", false]], "file_handlers (graphnet.utilities.logging.logger property)": [[136, "graphnet.utilities.logging.Logger.file_handlers", false]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[136, "graphnet.utilities.logging.RepeatFilter.filter", false]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files", false]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[49, "graphnet.data.readers.i3reader.I3Reader.find_files", false]], "find_files() (graphnet.data.readers.internal_parquet_reader.parquetreader method)": [[50, "graphnet.data.readers.internal_parquet_reader.ParquetReader.find_files", false]], "find_files() (graphnet.data.readers.liquido_reader.liquidoreader method)": [[51, "graphnet.data.readers.liquido_reader.LiquidOReader.find_files", false]], "find_files() (graphnet.data.readers.prometheus_reader.prometheusreader method)": [[52, "graphnet.data.readers.prometheus_reader.PrometheusReader.find_files", false]], "find_i3_files() (in module graphnet.utilities.filesys)": [[134, "graphnet.utilities.filesys.find_i3_files", false]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[131, "graphnet.utilities.config.training_config.TrainingConfig.fit", false]], "fit() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.fit", false]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[122, "graphnet.training.weight_fitting.WeightFitter.fit", false]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[33, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary", false]], "forward() (graphnet.models.coarsening.coarsening method)": [[78, "graphnet.models.coarsening.Coarsening.forward", false]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[80, "graphnet.models.components.embedding.FourierEncoder.forward", false]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[80, "graphnet.models.components.embedding.SinusoidalPosEmb.forward", false]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[80, "graphnet.models.components.embedding.SpacetimeEncoder.forward", false]], "forward() (graphnet.models.components.layers.attention_rel method)": [[81, "graphnet.models.components.layers.Attention_rel.forward", false]], "forward() (graphnet.models.components.layers.block method)": [[81, "graphnet.models.components.layers.Block.forward", false]], "forward() (graphnet.models.components.layers.block_rel method)": [[81, "graphnet.models.components.layers.Block_rel.forward", false]], "forward() (graphnet.models.components.layers.droppath method)": [[81, "graphnet.models.components.layers.DropPath.forward", false]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[81, "graphnet.models.components.layers.DynEdgeConv.forward", false]], "forward() (graphnet.models.components.layers.dyntrans method)": [[81, "graphnet.models.components.layers.DynTrans.forward", false]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[81, "graphnet.models.components.layers.EdgeConvTito.forward", false]], "forward() (graphnet.models.components.layers.mlp method)": [[81, "graphnet.models.components.layers.Mlp.forward", false]], "forward() (graphnet.models.detector.detector.detector method)": [[84, "graphnet.models.detector.detector.Detector.forward", false]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[90, "graphnet.models.gnn.convnet.ConvNet.forward", false]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[91, "graphnet.models.gnn.dynedge.DynEdge.forward", false]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[92, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward", false]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[93, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward", false]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[94, "graphnet.models.gnn.gnn.GNN.forward", false]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[95, "graphnet.models.gnn.icemix.DeepIce.forward", false]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[89, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward", false]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[98, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward", false]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[100, "graphnet.models.graphs.graph_definition.GraphDefinition.forward", false]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[103, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward", false]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[107, "graphnet.models.rnn.node_rnn.Node_RNN.forward", false]], "forward() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.forward", false]], "forward() (graphnet.models.task.task.learnedtask method)": [[113, "graphnet.models.task.task.LearnedTask.forward", false]], "forward() (graphnet.models.task.task.standardflowtask method)": [[113, "graphnet.models.task.task.StandardFlowTask.forward", false]], "forward() (graphnet.models.transformer.iseecube.iseecube method)": [[115, "graphnet.models.transformer.iseecube.ISeeCube.forward", false]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[120, "graphnet.training.loss_functions.LogCMK.forward", false]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[120, "graphnet.training.loss_functions.LossFunction.forward", false]], "fourierencoder (class in graphnet.models.components.embedding)": [[80, "graphnet.models.components.embedding.FourierEncoder", false]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[34, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo", false]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[34, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise", false]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[11, "graphnet.data.dataset.dataset.Dataset.from_config", false]], "from_config() (graphnet.models.model.model class method)": [[105, "graphnet.models.model.Model.from_config", false]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[127, "graphnet.utilities.config.configurable.Configurable.from_config", false]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[8, "graphnet.data.dataloader.DataLoader.from_dataset_config", false]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[104, "graphnet.models.graphs.utils.gather_cluster_sequence", false]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.gcd_file", false]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.gcd_file", false]], "geometry_table (graphnet.models.detector.detector.detector property)": [[84, "graphnet.models.detector.detector.Detector.geometry_table", false]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[85, "graphnet.models.detector.icecube.IceCube86.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[85, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.liquido.liquido_v1 attribute)": [[86, "graphnet.models.detector.liquido.LiquidO_v1.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.arca115 attribute)": [[87, "graphnet.models.detector.prometheus.ARCA115.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[87, "graphnet.models.detector.prometheus.BaikalGVD8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecube86 attribute)": [[87, "graphnet.models.detector.prometheus.IceCube86.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeDeepCore8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeGen2.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeUpgrade7.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icedemo81 attribute)": [[87, "graphnet.models.detector.prometheus.IceDemo81.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[87, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150superdense attribute)": [[87, "graphnet.models.detector.prometheus.ORCA150SuperDense.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.trident1211 attribute)": [[87, "graphnet.models.detector.prometheus.TRIDENT1211.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[87, "graphnet.models.detector.prometheus.WaterDemo81.geometry_table_path", false]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[126, "graphnet.utilities.config.base_config.get_all_argument_values", false]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[130, "graphnet.utilities.config.parsing.get_all_grapnet_classes", false]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[130, "graphnet.utilities.config.parsing.get_graphnet_classes", false]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[118, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr", false]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.get_map_function", false]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.get_member_variables", false]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[118, "graphnet.training.callbacks.ProgressBar.get_metrics", false]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[34, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries", false]], "get_predictions() (in module graphnet.training.utils)": [[121, "graphnet.training.utils.get_predictions", false]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.get_primary_keys", false]], "gnn (class in graphnet.models.gnn.gnn)": [[94, "graphnet.models.gnn.gnn.GNN", false]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition", false]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[100, "graphnet.models.graphs.graph_definition.GraphDefinition", false]], "graphnet": [[1, "module-graphnet", false]], "graphnet.constants": [[2, "module-graphnet.constants", false]], "graphnet.data": [[3, "module-graphnet.data", false]], "graphnet.data.constants": [[4, "module-graphnet.data.constants", false]], "graphnet.data.curated_datamodule": [[5, "module-graphnet.data.curated_datamodule", false]], "graphnet.data.dataclasses": [[6, "module-graphnet.data.dataclasses", false]], "graphnet.data.dataconverter": [[7, "module-graphnet.data.dataconverter", false]], "graphnet.data.dataloader": [[8, "module-graphnet.data.dataloader", false]], "graphnet.data.datamodule": [[9, "module-graphnet.data.datamodule", false]], "graphnet.data.dataset": [[10, "module-graphnet.data.dataset", false]], "graphnet.data.dataset.dataset": [[11, "module-graphnet.data.dataset.dataset", false]], "graphnet.data.dataset.parquet": [[12, "module-graphnet.data.dataset.parquet", false]], "graphnet.data.dataset.parquet.parquet_dataset": [[13, "module-graphnet.data.dataset.parquet.parquet_dataset", false]], "graphnet.data.dataset.sqlite": [[14, "module-graphnet.data.dataset.sqlite", false]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[15, "module-graphnet.data.dataset.sqlite.sqlite_dataset", false]], "graphnet.data.extractors": [[16, "module-graphnet.data.extractors", false]], "graphnet.data.extractors.combine_extractors": [[17, "module-graphnet.data.extractors.combine_extractors", false]], "graphnet.data.extractors.extractor": [[18, "module-graphnet.data.extractors.extractor", false]], "graphnet.data.extractors.icecube": [[19, "module-graphnet.data.extractors.icecube", false]], "graphnet.data.extractors.icecube.i3extractor": [[20, "module-graphnet.data.extractors.icecube.i3extractor", false]], "graphnet.data.extractors.icecube.i3featureextractor": [[21, "module-graphnet.data.extractors.icecube.i3featureextractor", false]], "graphnet.data.extractors.icecube.i3genericextractor": [[22, "module-graphnet.data.extractors.icecube.i3genericextractor", false]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[23, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[24, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false]], "graphnet.data.extractors.icecube.i3particleextractor": [[25, "module-graphnet.data.extractors.icecube.i3particleextractor", false]], "graphnet.data.extractors.icecube.i3pisaextractor": [[26, "module-graphnet.data.extractors.icecube.i3pisaextractor", false]], "graphnet.data.extractors.icecube.i3quesoextractor": [[27, "module-graphnet.data.extractors.icecube.i3quesoextractor", false]], "graphnet.data.extractors.icecube.i3retroextractor": [[28, "module-graphnet.data.extractors.icecube.i3retroextractor", false]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[29, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false]], "graphnet.data.extractors.icecube.i3truthextractor": [[30, "module-graphnet.data.extractors.icecube.i3truthextractor", false]], "graphnet.data.extractors.icecube.i3tumextractor": [[31, "module-graphnet.data.extractors.icecube.i3tumextractor", false]], "graphnet.data.extractors.icecube.utilities": [[32, "module-graphnet.data.extractors.icecube.utilities", false]], "graphnet.data.extractors.icecube.utilities.collections": [[33, "module-graphnet.data.extractors.icecube.utilities.collections", false]], "graphnet.data.extractors.icecube.utilities.frames": [[34, "module-graphnet.data.extractors.icecube.utilities.frames", false]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[35, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false]], "graphnet.data.extractors.icecube.utilities.types": [[36, "module-graphnet.data.extractors.icecube.utilities.types", false]], "graphnet.data.extractors.internal": [[37, "module-graphnet.data.extractors.internal", false]], "graphnet.data.extractors.internal.parquet_extractor": [[38, "module-graphnet.data.extractors.internal.parquet_extractor", false]], "graphnet.data.extractors.liquido": [[39, "module-graphnet.data.extractors.liquido", false]], "graphnet.data.extractors.liquido.h5_extractor": [[40, "module-graphnet.data.extractors.liquido.h5_extractor", false]], "graphnet.data.extractors.prometheus": [[41, "module-graphnet.data.extractors.prometheus", false]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[42, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false]], "graphnet.data.parquet": [[43, "module-graphnet.data.parquet", false]], "graphnet.data.parquet.deprecated_methods": [[44, "module-graphnet.data.parquet.deprecated_methods", false]], "graphnet.data.pre_configured": [[45, "module-graphnet.data.pre_configured", false]], "graphnet.data.pre_configured.dataconverters": [[46, "module-graphnet.data.pre_configured.dataconverters", false]], "graphnet.data.readers": [[47, "module-graphnet.data.readers", false]], "graphnet.data.readers.graphnet_file_reader": [[48, "module-graphnet.data.readers.graphnet_file_reader", false]], "graphnet.data.readers.i3reader": [[49, "module-graphnet.data.readers.i3reader", false]], "graphnet.data.readers.internal_parquet_reader": [[50, "module-graphnet.data.readers.internal_parquet_reader", false]], "graphnet.data.readers.liquido_reader": [[51, "module-graphnet.data.readers.liquido_reader", false]], "graphnet.data.readers.prometheus_reader": [[52, "module-graphnet.data.readers.prometheus_reader", false]], "graphnet.data.sqlite": [[53, "module-graphnet.data.sqlite", false]], "graphnet.data.sqlite.deprecated_methods": [[54, "module-graphnet.data.sqlite.deprecated_methods", false]], "graphnet.data.utilities": [[55, "module-graphnet.data.utilities", false]], "graphnet.data.utilities.parquet_to_sqlite": [[56, "module-graphnet.data.utilities.parquet_to_sqlite", false]], "graphnet.data.utilities.random": [[57, "module-graphnet.data.utilities.random", false]], "graphnet.data.utilities.sqlite_utilities": [[58, "module-graphnet.data.utilities.sqlite_utilities", false]], "graphnet.data.utilities.string_selection_resolver": [[59, "module-graphnet.data.utilities.string_selection_resolver", false]], "graphnet.data.writers": [[60, "module-graphnet.data.writers", false]], "graphnet.data.writers.graphnet_writer": [[61, "module-graphnet.data.writers.graphnet_writer", false]], "graphnet.data.writers.parquet_writer": [[62, "module-graphnet.data.writers.parquet_writer", false]], "graphnet.data.writers.sqlite_writer": [[63, "module-graphnet.data.writers.sqlite_writer", false]], "graphnet.datasets": [[64, "module-graphnet.datasets", false]], "graphnet.datasets.test_dataset": [[65, "module-graphnet.datasets.test_dataset", false]], "graphnet.deployment": [[66, "module-graphnet.deployment", false]], "graphnet.deployment.deployer": [[67, "module-graphnet.deployment.deployer", false]], "graphnet.deployment.deployment_module": [[68, "module-graphnet.deployment.deployment_module", false]], "graphnet.deployment.icecube.cleaning_module": [[72, "module-graphnet.deployment.icecube.cleaning_module", false]], "graphnet.deployment.icecube.inference_module": [[74, "module-graphnet.deployment.icecube.inference_module", false]], "graphnet.exceptions": [[75, "module-graphnet.exceptions", false]], "graphnet.exceptions.exceptions": [[76, "module-graphnet.exceptions.exceptions", false]], "graphnet.models": [[77, "module-graphnet.models", false]], "graphnet.models.coarsening": [[78, "module-graphnet.models.coarsening", false]], "graphnet.models.components": [[79, "module-graphnet.models.components", false]], "graphnet.models.components.embedding": [[80, "module-graphnet.models.components.embedding", false]], "graphnet.models.components.layers": [[81, "module-graphnet.models.components.layers", false]], "graphnet.models.components.pool": [[82, "module-graphnet.models.components.pool", false]], "graphnet.models.detector": [[83, "module-graphnet.models.detector", false]], "graphnet.models.detector.detector": [[84, "module-graphnet.models.detector.detector", false]], "graphnet.models.detector.icecube": [[85, "module-graphnet.models.detector.icecube", false]], "graphnet.models.detector.liquido": [[86, "module-graphnet.models.detector.liquido", false]], "graphnet.models.detector.prometheus": [[87, "module-graphnet.models.detector.prometheus", false]], "graphnet.models.gnn": [[88, "module-graphnet.models.gnn", false]], "graphnet.models.gnn.convnet": [[90, "module-graphnet.models.gnn.convnet", false]], "graphnet.models.gnn.dynedge": [[91, "module-graphnet.models.gnn.dynedge", false]], "graphnet.models.gnn.dynedge_jinst": [[92, "module-graphnet.models.gnn.dynedge_jinst", false]], "graphnet.models.gnn.dynedge_kaggle_tito": [[93, "module-graphnet.models.gnn.dynedge_kaggle_tito", false]], "graphnet.models.gnn.gnn": [[94, "module-graphnet.models.gnn.gnn", false]], "graphnet.models.gnn.icemix": [[95, "module-graphnet.models.gnn.icemix", false]], "graphnet.models.gnn.rnn_tito": [[89, "module-graphnet.models.gnn.RNN_tito", false]], "graphnet.models.graphs": [[96, "module-graphnet.models.graphs", false]], "graphnet.models.graphs.edges": [[97, "module-graphnet.models.graphs.edges", false]], "graphnet.models.graphs.edges.edges": [[98, "module-graphnet.models.graphs.edges.edges", false]], "graphnet.models.graphs.edges.minkowski": [[99, "module-graphnet.models.graphs.edges.minkowski", false]], "graphnet.models.graphs.graph_definition": [[100, "module-graphnet.models.graphs.graph_definition", false]], "graphnet.models.graphs.graphs": [[101, "module-graphnet.models.graphs.graphs", false]], "graphnet.models.graphs.nodes": [[102, "module-graphnet.models.graphs.nodes", false]], "graphnet.models.graphs.nodes.nodes": [[103, "module-graphnet.models.graphs.nodes.nodes", false]], "graphnet.models.graphs.utils": [[104, "module-graphnet.models.graphs.utils", false]], "graphnet.models.model": [[105, "module-graphnet.models.model", false]], "graphnet.models.rnn": [[106, "module-graphnet.models.rnn", false]], "graphnet.models.rnn.node_rnn": [[107, "module-graphnet.models.rnn.node_rnn", false]], "graphnet.models.standard_averaged_model": [[108, "module-graphnet.models.standard_averaged_model", false]], "graphnet.models.standard_model": [[109, "module-graphnet.models.standard_model", false]], "graphnet.models.task": [[110, "module-graphnet.models.task", false]], "graphnet.models.task.classification": [[111, "module-graphnet.models.task.classification", false]], "graphnet.models.task.reconstruction": [[112, "module-graphnet.models.task.reconstruction", false]], "graphnet.models.task.task": [[113, "module-graphnet.models.task.task", false]], "graphnet.models.transformer": [[114, "module-graphnet.models.transformer", false]], "graphnet.models.transformer.iseecube": [[115, "module-graphnet.models.transformer.iseecube", false]], "graphnet.models.utils": [[116, "module-graphnet.models.utils", false]], "graphnet.training": [[117, "module-graphnet.training", false]], "graphnet.training.callbacks": [[118, "module-graphnet.training.callbacks", false]], "graphnet.training.labels": [[119, "module-graphnet.training.labels", false]], "graphnet.training.loss_functions": [[120, "module-graphnet.training.loss_functions", false]], "graphnet.training.utils": [[121, "module-graphnet.training.utils", false]], "graphnet.training.weight_fitting": [[122, "module-graphnet.training.weight_fitting", false]], "graphnet.utilities": [[123, "module-graphnet.utilities", false]], "graphnet.utilities.argparse": [[124, "module-graphnet.utilities.argparse", false]], "graphnet.utilities.config": [[125, "module-graphnet.utilities.config", false]], "graphnet.utilities.config.base_config": [[126, "module-graphnet.utilities.config.base_config", false]], "graphnet.utilities.config.configurable": [[127, "module-graphnet.utilities.config.configurable", false]], "graphnet.utilities.config.dataset_config": [[128, "module-graphnet.utilities.config.dataset_config", false]], "graphnet.utilities.config.model_config": [[129, "module-graphnet.utilities.config.model_config", false]], "graphnet.utilities.config.parsing": [[130, "module-graphnet.utilities.config.parsing", false]], "graphnet.utilities.config.training_config": [[131, "module-graphnet.utilities.config.training_config", false]], "graphnet.utilities.decorators": [[132, "module-graphnet.utilities.decorators", false]], "graphnet.utilities.deprecation_tools": [[133, "module-graphnet.utilities.deprecation_tools", false]], "graphnet.utilities.filesys": [[134, "module-graphnet.utilities.filesys", false]], "graphnet.utilities.imports": [[135, "module-graphnet.utilities.imports", false]], "graphnet.utilities.logging": [[136, "module-graphnet.utilities.logging", false]], "graphnet.utilities.maths": [[137, "module-graphnet.utilities.maths", false]], "graphnetdatamodule (class in graphnet.data.datamodule)": [[9, "graphnet.data.datamodule.GraphNeTDataModule", false]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[118, "graphnet.training.callbacks.GraphnetEarlyStopping", false]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader", false]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[61, "graphnet.data.writers.graphnet_writer.GraphNeTWriter", false]], "group_by() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.group_by", false]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.group_pulses_to_dom", false]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.group_pulses_to_pmt", false]], "h5extractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[40, "graphnet.data.extractors.liquido.h5_extractor.H5Extractor", false]], "h5hitextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[40, "graphnet.data.extractors.liquido.h5_extractor.H5HitExtractor", false]], "h5truthextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[40, "graphnet.data.extractors.liquido.h5_extractor.H5TruthExtractor", false]], "handlers (graphnet.utilities.logging.logger property)": [[136, "graphnet.utilities.logging.Logger.handlers", false]], "has_extension() (in module graphnet.utilities.filesys)": [[134, "graphnet.utilities.filesys.has_extension", false]], "has_icecube_package() (in module graphnet.utilities.imports)": [[135, "graphnet.utilities.imports.has_icecube_package", false]], "has_torch_package() (in module graphnet.utilities.imports)": [[135, "graphnet.utilities.imports.has_torch_package", false]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.i3_file", false]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.i3_files", false]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[20, "graphnet.data.extractors.icecube.i3extractor.I3Extractor", false]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor", false]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86", false]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore", false]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade", false]], "i3fileset (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.I3FileSet", false]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[35, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter", false]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[35, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask", false]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[23, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor", false]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[22, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor", false]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[74, "graphnet.deployment.icecube.inference_module.I3InferenceModule", false]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[24, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor", false]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[25, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor", false]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[26, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor", false]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[72, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule", false]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade", false]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[27, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor", false]], "i3reader (class in graphnet.data.readers.i3reader)": [[49, "graphnet.data.readers.i3reader.I3Reader", false]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[28, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor", false]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[29, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor", false]], "i3toparquetconverter (class in graphnet.data.pre_configured.dataconverters)": [[46, "graphnet.data.pre_configured.dataconverters.I3ToParquetConverter", false]], "i3tosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[46, "graphnet.data.pre_configured.dataconverters.I3ToSQLiteConverter", false]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[30, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor", false]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[31, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor", false]], "ice_transparency() (in module graphnet.models.graphs.utils)": [[104, "graphnet.models.graphs.utils.ice_transparency", false]], "icecube86 (class in graphnet.models.detector.icecube)": [[85, "graphnet.models.detector.icecube.IceCube86", false]], "icecube86 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.IceCube86", false]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86", false]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86", false]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[85, "graphnet.models.detector.icecube.IceCubeDeepCore", false]], "icecubedeepcore8 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.IceCubeDeepCore8", false]], "icecubegen2 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.IceCubeGen2", false]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[85, "graphnet.models.detector.icecube.IceCubeKaggle", false]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[85, "graphnet.models.detector.icecube.IceCubeUpgrade", false]], "icecubeupgrade7 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.IceCubeUpgrade7", false]], "icedemo81 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.IceDemo81", false]], "icemixnodes (class in graphnet.models.graphs.nodes.nodes)": [[103, "graphnet.models.graphs.nodes.nodes.IceMixNodes", false]], "identify_indices() (in module graphnet.models.graphs.utils)": [[104, "graphnet.models.graphs.utils.identify_indices", false]], "identitytask (class in graphnet.models.task.task)": [[113, "graphnet.models.task.task.IdentityTask", false]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column", false]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.InelasticityReconstruction", false]], "inference() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.inference", false]], "inference() (graphnet.models.task.task.task method)": [[113, "graphnet.models.task.task.Task.inference", false]], "info() (graphnet.utilities.logging.logger method)": [[136, "graphnet.utilities.logging.Logger.info", false]], "init_global_index() (in module graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.init_global_index", false]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[118, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm", false]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[118, "graphnet.training.callbacks.ProgressBar.init_test_tqdm", false]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[118, "graphnet.training.callbacks.ProgressBar.init_train_tqdm", false]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[118, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm", false]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_boost_class", false]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum", false]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[134, "graphnet.utilities.filesys.is_gcd_file", false]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[130, "graphnet.utilities.config.parsing.is_graphnet_class", false]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[130, "graphnet.utilities.config.parsing.is_graphnet_module", false]], "is_i3_file() (in module graphnet.utilities.filesys)": [[134, "graphnet.utilities.filesys.is_i3_file", false]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class", false]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_method", false]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_type", false]], "iseecube (class in graphnet.models.transformer.iseecube)": [[115, "graphnet.models.transformer.iseecube.ISeeCube", false]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE", false]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE", false]], "key (graphnet.training.labels.label property)": [[119, "graphnet.training.labels.Label.key", false]], "knn_graph_batch() (in module graphnet.models.utils)": [[116, "graphnet.models.utils.knn_graph_batch", false]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[98, "graphnet.models.graphs.edges.edges.KNNEdges", false]], "knngraph (class in graphnet.models.graphs.graphs)": [[101, "graphnet.models.graphs.graphs.KNNGraph", false]], "label (class in graphnet.training.labels)": [[119, "graphnet.training.labels.Label", false]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.labels", false]], "learnedtask (class in graphnet.models.task.task)": [[113, "graphnet.models.task.task.LearnedTask", false]], "lex_sort() (in module graphnet.models.graphs.utils)": [[104, "graphnet.models.graphs.utils.lex_sort", false]], "liquido (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.LIQUIDO", false]], "liquido (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.LIQUIDO", false]], "liquido_v1 (class in graphnet.models.detector.liquido)": [[86, "graphnet.models.detector.liquido.LiquidO_v1", false]], "liquidoreader (class in graphnet.data.readers.liquido_reader)": [[51, "graphnet.data.readers.liquido_reader.LiquidOReader", false]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[130, "graphnet.utilities.config.parsing.list_all_submodules", false]], "load() (graphnet.models.model.model class method)": [[105, "graphnet.models.model.Model.load", false]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[126, "graphnet.utilities.config.base_config.BaseConfig.load", false]], "load_module() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.load_module", false]], "load_state_dict() (graphnet.models.model.model method)": [[105, "graphnet.models.model.Model.load_state_dict", false]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[108, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict", false]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[120, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk", false]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[120, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx", false]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[120, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact", false]], "logcmk (class in graphnet.training.loss_functions)": [[120, "graphnet.training.loss_functions.LogCMK", false]], "logcoshloss (class in graphnet.training.loss_functions)": [[120, "graphnet.training.loss_functions.LogCoshLoss", false]], "logger (class in graphnet.utilities.logging)": [[136, "graphnet.utilities.logging.Logger", false]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column", false]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value", false]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table", false]], "lossfunction (class in graphnet.training.loss_functions)": [[120, "graphnet.training.loss_functions.LossFunction", false]], "make_dataloader() (in module graphnet.training.utils)": [[121, "graphnet.training.utils.make_dataloader", false]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[121, "graphnet.training.utils.make_train_validation_dataloader", false]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.merge_files", false]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[61, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files", false]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[62, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files", false]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[63, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files", false]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[81, "graphnet.models.components.layers.EdgeConvTito.message", false]], "min_pool() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.min_pool", false]], "min_pool_x() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.min_pool_x", false]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[99, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges", false]], "mlp (class in graphnet.models.components.layers)": [[81, "graphnet.models.components.layers.Mlp", false]], "model (class in graphnet.models.model)": [[105, "graphnet.models.model.Model", false]], "model_computed_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[126, "graphnet.utilities.config.base_config.BaseConfig.model_computed_fields", false]], "model_computed_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.model_computed_fields", false]], "model_computed_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[129, "graphnet.utilities.config.model_config.ModelConfig.model_computed_fields", false]], "model_computed_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[131, "graphnet.utilities.config.training_config.TrainingConfig.model_computed_fields", false]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[126, "graphnet.utilities.config.base_config.BaseConfig.model_config", false]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config", false]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[129, "graphnet.utilities.config.model_config.ModelConfig.model_config", false]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[131, "graphnet.utilities.config.training_config.TrainingConfig.model_config", false]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[126, "graphnet.utilities.config.base_config.BaseConfig.model_fields", false]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields", false]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[129, "graphnet.utilities.config.model_config.ModelConfig.model_fields", false]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[131, "graphnet.utilities.config.training_config.TrainingConfig.model_fields", false]], "modelconfig (class in graphnet.utilities.config.model_config)": [[129, "graphnet.utilities.config.model_config.ModelConfig", false]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[129, "graphnet.utilities.config.model_config.ModelConfigSaverABC", false]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[129, "graphnet.utilities.config.model_config.ModelConfigSaverMeta", false]], "module": [[1, "module-graphnet", false], [2, "module-graphnet.constants", false], [3, "module-graphnet.data", false], [4, "module-graphnet.data.constants", false], [5, "module-graphnet.data.curated_datamodule", false], [6, "module-graphnet.data.dataclasses", false], [7, "module-graphnet.data.dataconverter", false], [8, "module-graphnet.data.dataloader", false], [9, "module-graphnet.data.datamodule", false], [10, "module-graphnet.data.dataset", false], [11, "module-graphnet.data.dataset.dataset", false], [12, "module-graphnet.data.dataset.parquet", false], [13, "module-graphnet.data.dataset.parquet.parquet_dataset", false], [14, "module-graphnet.data.dataset.sqlite", false], [15, "module-graphnet.data.dataset.sqlite.sqlite_dataset", false], [16, "module-graphnet.data.extractors", false], [17, "module-graphnet.data.extractors.combine_extractors", false], [18, "module-graphnet.data.extractors.extractor", false], [19, "module-graphnet.data.extractors.icecube", false], [20, "module-graphnet.data.extractors.icecube.i3extractor", false], [21, "module-graphnet.data.extractors.icecube.i3featureextractor", false], [22, "module-graphnet.data.extractors.icecube.i3genericextractor", false], [23, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false], [24, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false], [25, "module-graphnet.data.extractors.icecube.i3particleextractor", false], [26, "module-graphnet.data.extractors.icecube.i3pisaextractor", false], [27, "module-graphnet.data.extractors.icecube.i3quesoextractor", false], [28, "module-graphnet.data.extractors.icecube.i3retroextractor", false], [29, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false], [30, "module-graphnet.data.extractors.icecube.i3truthextractor", false], [31, "module-graphnet.data.extractors.icecube.i3tumextractor", false], [32, "module-graphnet.data.extractors.icecube.utilities", false], [33, "module-graphnet.data.extractors.icecube.utilities.collections", false], [34, "module-graphnet.data.extractors.icecube.utilities.frames", false], [35, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false], [36, "module-graphnet.data.extractors.icecube.utilities.types", false], [37, "module-graphnet.data.extractors.internal", false], [38, "module-graphnet.data.extractors.internal.parquet_extractor", false], [39, "module-graphnet.data.extractors.liquido", false], [40, "module-graphnet.data.extractors.liquido.h5_extractor", false], [41, "module-graphnet.data.extractors.prometheus", false], [42, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false], [43, "module-graphnet.data.parquet", false], [44, "module-graphnet.data.parquet.deprecated_methods", false], [45, "module-graphnet.data.pre_configured", false], [46, "module-graphnet.data.pre_configured.dataconverters", false], [47, "module-graphnet.data.readers", false], [48, "module-graphnet.data.readers.graphnet_file_reader", false], [49, "module-graphnet.data.readers.i3reader", false], [50, "module-graphnet.data.readers.internal_parquet_reader", false], [51, "module-graphnet.data.readers.liquido_reader", false], [52, "module-graphnet.data.readers.prometheus_reader", false], [53, "module-graphnet.data.sqlite", false], [54, "module-graphnet.data.sqlite.deprecated_methods", false], [55, "module-graphnet.data.utilities", false], [56, "module-graphnet.data.utilities.parquet_to_sqlite", false], [57, "module-graphnet.data.utilities.random", false], [58, "module-graphnet.data.utilities.sqlite_utilities", false], [59, "module-graphnet.data.utilities.string_selection_resolver", false], [60, "module-graphnet.data.writers", false], [61, "module-graphnet.data.writers.graphnet_writer", false], [62, "module-graphnet.data.writers.parquet_writer", false], [63, "module-graphnet.data.writers.sqlite_writer", false], [64, "module-graphnet.datasets", false], [65, "module-graphnet.datasets.test_dataset", false], [66, "module-graphnet.deployment", false], [67, "module-graphnet.deployment.deployer", false], [68, "module-graphnet.deployment.deployment_module", false], [72, "module-graphnet.deployment.icecube.cleaning_module", false], [74, "module-graphnet.deployment.icecube.inference_module", false], [75, "module-graphnet.exceptions", false], [76, "module-graphnet.exceptions.exceptions", false], [77, "module-graphnet.models", false], [78, "module-graphnet.models.coarsening", false], [79, "module-graphnet.models.components", false], [80, "module-graphnet.models.components.embedding", false], [81, "module-graphnet.models.components.layers", false], [82, "module-graphnet.models.components.pool", false], [83, "module-graphnet.models.detector", false], [84, "module-graphnet.models.detector.detector", false], [85, "module-graphnet.models.detector.icecube", false], [86, "module-graphnet.models.detector.liquido", false], [87, "module-graphnet.models.detector.prometheus", false], [88, "module-graphnet.models.gnn", false], [89, "module-graphnet.models.gnn.RNN_tito", false], [90, "module-graphnet.models.gnn.convnet", false], [91, "module-graphnet.models.gnn.dynedge", false], [92, "module-graphnet.models.gnn.dynedge_jinst", false], [93, "module-graphnet.models.gnn.dynedge_kaggle_tito", false], [94, "module-graphnet.models.gnn.gnn", false], [95, "module-graphnet.models.gnn.icemix", false], [96, "module-graphnet.models.graphs", false], [97, "module-graphnet.models.graphs.edges", false], [98, "module-graphnet.models.graphs.edges.edges", false], [99, "module-graphnet.models.graphs.edges.minkowski", false], [100, "module-graphnet.models.graphs.graph_definition", false], [101, "module-graphnet.models.graphs.graphs", false], [102, "module-graphnet.models.graphs.nodes", false], [103, "module-graphnet.models.graphs.nodes.nodes", false], [104, "module-graphnet.models.graphs.utils", false], [105, "module-graphnet.models.model", false], [106, "module-graphnet.models.rnn", false], [107, "module-graphnet.models.rnn.node_rnn", false], [108, "module-graphnet.models.standard_averaged_model", false], [109, "module-graphnet.models.standard_model", false], [110, "module-graphnet.models.task", false], [111, "module-graphnet.models.task.classification", false], [112, "module-graphnet.models.task.reconstruction", false], [113, "module-graphnet.models.task.task", false], [114, "module-graphnet.models.transformer", false], [115, "module-graphnet.models.transformer.iseecube", false], [116, "module-graphnet.models.utils", false], [117, "module-graphnet.training", false], [118, "module-graphnet.training.callbacks", false], [119, "module-graphnet.training.labels", false], [120, "module-graphnet.training.loss_functions", false], [121, "module-graphnet.training.utils", false], [122, "module-graphnet.training.weight_fitting", false], [123, "module-graphnet.utilities", false], [124, "module-graphnet.utilities.argparse", false], [125, "module-graphnet.utilities.config", false], [126, "module-graphnet.utilities.config.base_config", false], [127, "module-graphnet.utilities.config.configurable", false], [128, "module-graphnet.utilities.config.dataset_config", false], [129, "module-graphnet.utilities.config.model_config", false], [130, "module-graphnet.utilities.config.parsing", false], [131, "module-graphnet.utilities.config.training_config", false], [132, "module-graphnet.utilities.decorators", false], [133, "module-graphnet.utilities.deprecation_tools", false], [134, "module-graphnet.utilities.filesys", false], [135, "module-graphnet.utilities.imports", false], [136, "module-graphnet.utilities.logging", false], [137, "module-graphnet.utilities.maths", false]], "modules (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.modules", false]], "mseloss (class in graphnet.training.loss_functions)": [[120, "graphnet.training.loss_functions.MSELoss", false]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[111, "graphnet.models.task.classification.MulticlassClassificationTask", false]], "name (graphnet.data.extractors.extractor.extractor property)": [[18, "graphnet.data.extractors.extractor.Extractor.name", false]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[94, "graphnet.models.gnn.gnn.GNN.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[111, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[111, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[112, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[112, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[112, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[112, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[112, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[112, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[112, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[113, "graphnet.models.task.task.IdentityTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[113, "graphnet.models.task.task.LearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[113, "graphnet.models.task.task.StandardLearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.task property)": [[113, "graphnet.models.task.task.Task.nb_inputs", false]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[113, "graphnet.models.task.task.StandardFlowTask.nb_inputs", false]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[94, "graphnet.models.gnn.gnn.GNN.nb_outputs", false]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[103, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs", false]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[136, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed", false]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[95, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay", false]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[107, "graphnet.models.rnn.node_rnn.Node_RNN", false]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth", false]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table", false]], "nodeasdomtimeseries (class in graphnet.models.graphs.nodes.nodes)": [[103, "graphnet.models.graphs.nodes.nodes.NodeAsDOMTimeSeries", false]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[103, "graphnet.models.graphs.nodes.nodes.NodeDefinition", false]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[103, "graphnet.models.graphs.nodes.nodes.NodesAsPulses", false]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[35, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter", false]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[118, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end", false]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[108, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[118, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[118, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end", false]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[118, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start", false]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[118, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end", false]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[108, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step", false]], "options (class in graphnet.utilities.argparse)": [[124, "graphnet.utilities.argparse.Options", false]], "orca150 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.ORCA150", false]], "orca150superdense (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.ORCA150SuperDense", false]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.output_folder", false]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[57, "graphnet.data.utilities.random.pairwise_shuffle", false]], "parquetdataconverter (class in graphnet.data.parquet.deprecated_methods)": [[44, "graphnet.data.parquet.deprecated_methods.ParquetDataConverter", false]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset", false]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[38, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor", false]], "parquetreader (class in graphnet.data.readers.internal_parquet_reader)": [[50, "graphnet.data.readers.internal_parquet_reader.ParquetReader", false]], "parquettosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[46, "graphnet.data.pre_configured.dataconverters.ParquetToSQLiteConverter", false]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[62, "graphnet.data.writers.parquet_writer.ParquetWriter", false]], "parse_graph_definition() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.parse_graph_definition", false]], "parse_labels() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.parse_labels", false]], "path (graphnet.data.dataset.dataset.dataset property)": [[11, "graphnet.data.dataset.dataset.Dataset.path", false]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.path", false]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[103, "graphnet.models.graphs.nodes.nodes.PercentileClusters", false]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[118, "graphnet.training.callbacks.PiecewiseLinearLR", false]], "pop_default() (graphnet.utilities.argparse.options method)": [[124, "graphnet.utilities.argparse.Options.pop_default", false]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.PositionReconstruction", false]], "predict() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.predict", false]], "predict_as_dataframe() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.predict_as_dataframe", false]], "prediction_labels (graphnet.models.standard_model.standardmodel property)": [[109, "graphnet.models.standard_model.StandardModel.prediction_labels", false]], "prepare_data() (graphnet.data.curated_datamodule.curateddataset method)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.prepare_data", false]], "prepare_data() (graphnet.data.curated_datamodule.erdahosteddataset method)": [[5, "graphnet.data.curated_datamodule.ERDAHostedDataset.prepare_data", false]], "prepare_data() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.prepare_data", false]], "progressbar (class in graphnet.training.callbacks)": [[118, "graphnet.training.callbacks.ProgressBar", false]], "prometheus (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.Prometheus", false]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS", false]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS", false]], "prometheusextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[42, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusExtractor", false]], "prometheusfeatureextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[42, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusFeatureExtractor", false]], "prometheusreader (class in graphnet.data.readers.prometheus_reader)": [[52, "graphnet.data.readers.prometheus_reader.PrometheusReader", false]], "prometheustruthextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[42, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusTruthExtractor", false]], "pulse_truth (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.pulse_truth", false]], "pulsemaps (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.pulsemaps", false]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps", false]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.query_database", false]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[11, "graphnet.data.dataset.dataset.Dataset.query_table", false]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table", false]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[15, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table", false]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[98, "graphnet.models.graphs.edges.edges.RadialEdges", false]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[78, "graphnet.models.coarsening.Coarsening.reduce_options", false]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[133, "graphnet.utilities.deprecation_tools.rename_state_dict_entries", false]], "repeatfilter (class in graphnet.utilities.logging)": [[136, "graphnet.utilities.logging.RepeatFilter", false]], "requires_icecube() (in module graphnet.utilities.imports)": [[135, "graphnet.utilities.imports.requires_icecube", false]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[81, "graphnet.models.components.layers.EdgeConvTito.reset_parameters", false]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[59, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve", false]], "rmseloss (class in graphnet.training.loss_functions)": [[120, "graphnet.training.loss_functions.RMSELoss", false]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[89, "graphnet.models.gnn.RNN_tito.RNN_TITO", false]], "run() (graphnet.deployment.deployer.deployer method)": [[67, "graphnet.deployment.deployer.Deployer.run", false]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.run_sql_code", false]], "save() (graphnet.models.model.model method)": [[105, "graphnet.models.model.Model.save", false]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[127, "graphnet.utilities.config.configurable.Configurable.save_config", false]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[128, "graphnet.utilities.config.dataset_config.save_dataset_config", false]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[129, "graphnet.utilities.config.model_config.save_model_config", false]], "save_results() (in module graphnet.training.utils)": [[121, "graphnet.training.utils.save_results", false]], "save_selection() (in module graphnet.training.utils)": [[121, "graphnet.training.utils.save_selection", false]], "save_state_dict() (graphnet.models.model.model method)": [[105, "graphnet.models.model.Model.save_state_dict", false]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[58, "graphnet.data.utilities.sqlite_utilities.save_to_sql", false]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.seed", false]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.selection", false]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[85, "graphnet.models.detector.icecube.IceCube86.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[85, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[86, "graphnet.models.detector.liquido.LiquidO_v1.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[87, "graphnet.models.detector.prometheus.ARCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[87, "graphnet.models.detector.prometheus.BaikalGVD8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecube86 attribute)": [[87, "graphnet.models.detector.prometheus.IceCube86.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeDeepCore8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeGen2.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeUpgrade7.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[87, "graphnet.models.detector.prometheus.IceDemo81.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[87, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[87, "graphnet.models.detector.prometheus.ORCA150SuperDense.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[87, "graphnet.models.detector.prometheus.TRIDENT1211.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[87, "graphnet.models.detector.prometheus.WaterDemo81.sensor_id_column", false]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[84, "graphnet.models.detector.detector.Detector.sensor_index_name", false]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[84, "graphnet.models.detector.detector.Detector.sensor_position_names", false]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[33, "graphnet.data.extractors.icecube.utilities.collections.serialise", false]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors", false]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[20, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd", false]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[103, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs", false]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[103, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names", false]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[105, "graphnet.models.model.Model.set_verbose_print_recursively", false]], "setlevel() (graphnet.utilities.logging.logger method)": [[136, "graphnet.utilities.logging.Logger.setLevel", false]], "settings (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.Settings", false]], "setup() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.setup", false]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[118, "graphnet.training.callbacks.GraphnetEarlyStopping.setup", false]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.shared_step", false]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[80, "graphnet.models.components.embedding.SinusoidalPosEmb", false]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[80, "graphnet.models.components.embedding.SpacetimeEncoder", false]], "sqlitedataconverter (class in graphnet.data.sqlite.deprecated_methods)": [[54, "graphnet.data.sqlite.deprecated_methods.SQLiteDataConverter", false]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[15, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset", false]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[63, "graphnet.data.writers.sqlite_writer.SQLiteWriter", false]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[124, "graphnet.utilities.argparse.ArgumentParser.standard_arguments", false]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[108, "graphnet.models.standard_averaged_model.StandardAveragedModel", false]], "standardflowtask (class in graphnet.models.task.task)": [[113, "graphnet.models.task.task.StandardFlowTask", false]], "standardlearnedtask (class in graphnet.models.task.task)": [[113, "graphnet.models.task.task.StandardLearnedTask", false]], "standardmodel (class in graphnet.models.standard_model)": [[109, "graphnet.models.standard_model.StandardModel", false]], "std_pool() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.std_pool", false]], "std_pool_x() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.std_pool_x", false]], "stream_handlers (graphnet.utilities.logging.logger property)": [[136, "graphnet.utilities.logging.Logger.stream_handlers", false]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[85, "graphnet.models.detector.icecube.IceCube86.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[85, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column", false]], "string_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[86, "graphnet.models.detector.liquido.LiquidO_v1.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[87, "graphnet.models.detector.prometheus.ARCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[87, "graphnet.models.detector.prometheus.BaikalGVD8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecube86 attribute)": [[87, "graphnet.models.detector.prometheus.IceCube86.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeDeepCore8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeGen2.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeUpgrade7.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[87, "graphnet.models.detector.prometheus.IceDemo81.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[87, "graphnet.models.detector.prometheus.ORCA150.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[87, "graphnet.models.detector.prometheus.ORCA150SuperDense.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[87, "graphnet.models.detector.prometheus.TRIDENT1211.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[87, "graphnet.models.detector.prometheus.WaterDemo81.string_id_column", false]], "string_index_name (graphnet.models.detector.detector.detector property)": [[84, "graphnet.models.detector.detector.Detector.string_index_name", false]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection", false]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[59, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver", false]], "sum_pool() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.sum_pool", false]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.sum_pool_and_distribute", false]], "sum_pool_x() (in module graphnet.models.components.pool)": [[82, "graphnet.models.components.pool.sum_pool_x", false]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[131, "graphnet.utilities.config.training_config.TrainingConfig.target", false]], "target_labels (graphnet.models.standard_model.standardmodel property)": [[109, "graphnet.models.standard_model.StandardModel.target_labels", false]], "task (class in graphnet.models.task.task)": [[113, "graphnet.models.task.task.Task", false]], "teardown() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.teardown", false]], "test_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.test_dataloader", false]], "testdataset (class in graphnet.datasets.test_dataset)": [[65, "graphnet.datasets.test_dataset.TestDataset", false]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.TimeReconstruction", false]], "train() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.train", false]], "train_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.train_dataloader", false]], "train_eval() (graphnet.models.task.task.task method)": [[113, "graphnet.models.task.task.Task.train_eval", false]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[108, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step", false]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.training_step", false]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[131, "graphnet.utilities.config.training_config.TrainingConfig", false]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[33, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts", false]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[130, "graphnet.utilities.config.parsing.traverse_and_apply", false]], "trident1211 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.TRIDENT1211", false]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH", false]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.truth", false]], "truth_table (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.truth_table", false]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[11, "graphnet.data.dataset.dataset.Dataset.truth_table", false]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[128, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table", false]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[78, "graphnet.models.coarsening.unbatch_edge_index", false]], "uniform (class in graphnet.training.weight_fitting)": [[122, "graphnet.training.weight_fitting.Uniform", false]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE", false]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE", false]], "val_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.val_dataloader", false]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[48, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files", false]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[108, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step", false]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[109, "graphnet.models.standard_model.StandardModel.validation_step", false]], "verbose_print (graphnet.models.model.model attribute)": [[105, "graphnet.models.model.Model.verbose_print", false]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.VertexReconstruction", false]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[120, "graphnet.training.loss_functions.VonMisesFisher2DLoss", false]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[120, "graphnet.training.loss_functions.VonMisesFisher3DLoss", false]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[120, "graphnet.training.loss_functions.VonMisesFisherLoss", false]], "warning() (graphnet.utilities.logging.logger method)": [[136, "graphnet.utilities.logging.Logger.warning", false]], "warning_once() (graphnet.utilities.logging.logger method)": [[136, "graphnet.utilities.logging.Logger.warning_once", false]], "waterdemo81 (class in graphnet.models.detector.prometheus)": [[87, "graphnet.models.detector.prometheus.WaterDemo81", false]], "weightfitter (class in graphnet.training.weight_fitting)": [[122, "graphnet.training.weight_fitting.WeightFitter", false]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[124, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments", false]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[85, "graphnet.models.detector.icecube.IceCube86.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[85, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz", false]], "xyz (graphnet.models.detector.liquido.liquido_v1 attribute)": [[86, "graphnet.models.detector.liquido.LiquidO_v1.xyz", false]], "xyz (graphnet.models.detector.prometheus.arca115 attribute)": [[87, "graphnet.models.detector.prometheus.ARCA115.xyz", false]], "xyz (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[87, "graphnet.models.detector.prometheus.BaikalGVD8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecube86 attribute)": [[87, "graphnet.models.detector.prometheus.IceCube86.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeDeepCore8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeGen2.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[87, "graphnet.models.detector.prometheus.IceCubeUpgrade7.xyz", false]], "xyz (graphnet.models.detector.prometheus.icedemo81 attribute)": [[87, "graphnet.models.detector.prometheus.IceDemo81.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[87, "graphnet.models.detector.prometheus.ORCA150.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150superdense attribute)": [[87, "graphnet.models.detector.prometheus.ORCA150SuperDense.xyz", false]], "xyz (graphnet.models.detector.prometheus.trident1211 attribute)": [[87, "graphnet.models.detector.prometheus.TRIDENT1211.xyz", false]], "xyz (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[87, "graphnet.models.detector.prometheus.WaterDemo81.xyz", false]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.ZenithReconstruction", false]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[112, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa", false]]}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [64, 0, 0, "-", "datasets"], [66, 0, 0, "-", "deployment"], [75, 0, 0, "-", "exceptions"], [77, 0, 0, "-", "models"], [117, 0, 0, "-", "training"], [123, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "curated_datamodule"], [6, 0, 0, "-", "dataclasses"], [7, 0, 0, "-", "dataconverter"], [8, 0, 0, "-", "dataloader"], [9, 0, 0, "-", "datamodule"], [10, 0, 0, "-", "dataset"], [16, 0, 0, "-", "extractors"], [43, 0, 0, "-", "parquet"], [45, 0, 0, "-", "pre_configured"], [47, 0, 0, "-", "readers"], [53, 0, 0, "-", "sqlite"], [55, 0, 0, "-", "utilities"], [60, 0, 0, "-", "writers"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.curated_datamodule": [[5, 1, 1, "", "CuratedDataset"], [5, 1, 1, "", "ERDAHostedDataset"]], "graphnet.data.curated_datamodule.CuratedDataset": [[5, 3, 1, "", "available_backends"], [5, 3, 1, "", "citation"], [5, 3, 1, "", "comments"], [5, 3, 1, "", "creator"], [5, 3, 1, "", "dataset_dir"], [5, 4, 1, "", "description"], [5, 3, 1, "", "event_truth"], [5, 3, 1, "", "events"], [5, 3, 1, "", "experiment"], [5, 3, 1, "", "features"], [5, 4, 1, "", "prepare_data"], [5, 3, 1, "", "pulse_truth"], [5, 3, 1, "", "pulsemaps"], [5, 3, 1, "", "truth_table"]], "graphnet.data.curated_datamodule.ERDAHostedDataset": [[5, 4, 1, "", "prepare_data"]], "graphnet.data.dataclasses": [[6, 1, 1, "", "I3FileSet"], [6, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_files"], [6, 2, 1, "", "modules"], [6, 2, 1, "", "output_folder"]], "graphnet.data.dataconverter": [[7, 1, 1, "", "DataConverter"], [7, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[7, 4, 1, "", "get_map_function"], [7, 4, 1, "", "merge_files"]], "graphnet.data.dataloader": [[8, 1, 1, "", "DataLoader"], [8, 5, 1, "", "collate_fn"], [8, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[8, 4, 1, "", "from_dataset_config"]], "graphnet.data.datamodule": [[9, 1, 1, "", "GraphNeTDataModule"]], "graphnet.data.datamodule.GraphNeTDataModule": [[9, 4, 1, "", "prepare_data"], [9, 4, 1, "", "setup"], [9, 4, 1, "", "teardown"], [9, 3, 1, "", "test_dataloader"], [9, 3, 1, "", "train_dataloader"], [9, 3, 1, "", "val_dataloader"]], "graphnet.data.dataset": [[11, 0, 0, "-", "dataset"], [12, 0, 0, "-", "parquet"], [14, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[11, 1, 1, "", "Dataset"], [11, 1, 1, "", "EnsembleDataset"], [11, 5, 1, "", "load_module"], [11, 5, 1, "", "parse_graph_definition"], [11, 5, 1, "", "parse_labels"]], "graphnet.data.dataset.dataset.Dataset": [[11, 4, 1, "", "add_label"], [11, 4, 1, "", "concatenate"], [11, 4, 1, "", "from_config"], [11, 3, 1, "", "path"], [11, 4, 1, "", "query_table"], [11, 3, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[13, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[13, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[13, 4, 1, "", "query_table"]], "graphnet.data.dataset.sqlite": [[15, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[15, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[15, 4, 1, "", "query_table"]], "graphnet.data.extractors": [[17, 0, 0, "-", "combine_extractors"], [18, 0, 0, "-", "extractor"], [19, 0, 0, "-", "icecube"], [37, 0, 0, "-", "internal"], [39, 0, 0, "-", "liquido"], [41, 0, 0, "-", "prometheus"]], "graphnet.data.extractors.combine_extractors": [[17, 1, 1, "", "CombinedExtractor"]], "graphnet.data.extractors.extractor": [[18, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[18, 3, 1, "", "name"]], "graphnet.data.extractors.icecube": [[20, 0, 0, "-", "i3extractor"], [21, 0, 0, "-", "i3featureextractor"], [22, 0, 0, "-", "i3genericextractor"], [23, 0, 0, "-", "i3hybridrecoextractor"], [24, 0, 0, "-", "i3ntmuonlabelsextractor"], [25, 0, 0, "-", "i3particleextractor"], [26, 0, 0, "-", "i3pisaextractor"], [27, 0, 0, "-", "i3quesoextractor"], [28, 0, 0, "-", "i3retroextractor"], [29, 0, 0, "-", "i3splinempeextractor"], [30, 0, 0, "-", "i3truthextractor"], [31, 0, 0, "-", "i3tumextractor"], [32, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[20, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[20, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[21, 1, 1, "", "I3FeatureExtractor"], [21, 1, 1, "", "I3FeatureExtractorIceCube86"], [21, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [21, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [21, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[22, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[23, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[24, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[25, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[26, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[27, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[28, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[29, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[30, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[31, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[33, 0, 0, "-", "collections"], [34, 0, 0, "-", "frames"], [35, 0, 0, "-", "i3_filters"], [36, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[33, 5, 1, "", "flatten_nested_dictionary"], [33, 5, 1, "", "serialise"], [33, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[34, 5, 1, "", "frame_is_montecarlo"], [34, 5, 1, "", "frame_is_noise"], [34, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[35, 1, 1, "", "I3Filter"], [35, 1, 1, "", "I3FilterMask"], [35, 1, 1, "", "NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[36, 5, 1, "", "break_cyclic_recursion"], [36, 5, 1, "", "cast_object_to_pure_python"], [36, 5, 1, "", "cast_pulse_series_to_pure_python"], [36, 5, 1, "", "get_member_variables"], [36, 5, 1, "", "is_boost_class"], [36, 5, 1, "", "is_boost_enum"], [36, 5, 1, "", "is_icecube_class"], [36, 5, 1, "", "is_method"], [36, 5, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[38, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[38, 1, 1, "", "ParquetExtractor"]], "graphnet.data.extractors.liquido": [[40, 0, 0, "-", "h5_extractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[40, 1, 1, "", "H5Extractor"], [40, 1, 1, "", "H5HitExtractor"], [40, 1, 1, "", "H5TruthExtractor"]], "graphnet.data.extractors.prometheus": [[42, 0, 0, "-", "prometheus_extractor"]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[42, 1, 1, "", "PrometheusExtractor"], [42, 1, 1, "", "PrometheusFeatureExtractor"], [42, 1, 1, "", "PrometheusTruthExtractor"]], "graphnet.data.parquet": [[44, 0, 0, "-", "deprecated_methods"]], "graphnet.data.parquet.deprecated_methods": [[44, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.pre_configured": [[46, 0, 0, "-", "dataconverters"]], "graphnet.data.pre_configured.dataconverters": [[46, 1, 1, "", "I3ToParquetConverter"], [46, 1, 1, "", "I3ToSQLiteConverter"], [46, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.readers": [[48, 0, 0, "-", "graphnet_file_reader"], [49, 0, 0, "-", "i3reader"], [50, 0, 0, "-", "internal_parquet_reader"], [51, 0, 0, "-", "liquido_reader"], [52, 0, 0, "-", "prometheus_reader"]], "graphnet.data.readers.graphnet_file_reader": [[48, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[48, 3, 1, "", "accepted_extractors"], [48, 3, 1, "", "accepted_file_extensions"], [48, 3, 1, "", "extracor_names"], [48, 4, 1, "", "find_files"], [48, 4, 1, "", "set_extractors"], [48, 4, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[49, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[49, 4, 1, "", "find_files"]], "graphnet.data.readers.internal_parquet_reader": [[50, 1, 1, "", "ParquetReader"]], "graphnet.data.readers.internal_parquet_reader.ParquetReader": [[50, 4, 1, "", "find_files"]], "graphnet.data.readers.liquido_reader": [[51, 1, 1, "", "LiquidOReader"]], "graphnet.data.readers.liquido_reader.LiquidOReader": [[51, 4, 1, "", "find_files"]], "graphnet.data.readers.prometheus_reader": [[52, 1, 1, "", "PrometheusReader"]], "graphnet.data.readers.prometheus_reader.PrometheusReader": [[52, 4, 1, "", "find_files"]], "graphnet.data.sqlite": [[54, 0, 0, "-", "deprecated_methods"]], "graphnet.data.sqlite.deprecated_methods": [[54, 1, 1, "", "SQLiteDataConverter"]], "graphnet.data.utilities": [[56, 0, 0, "-", "parquet_to_sqlite"], [57, 0, 0, "-", "random"], [58, 0, 0, "-", "sqlite_utilities"], [59, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.random": [[57, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[58, 5, 1, "", "attach_index"], [58, 5, 1, "", "create_table"], [58, 5, 1, "", "create_table_and_save_to_sql"], [58, 5, 1, "", "database_exists"], [58, 5, 1, "", "database_table_exists"], [58, 5, 1, "", "get_primary_keys"], [58, 5, 1, "", "query_database"], [58, 5, 1, "", "run_sql_code"], [58, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[59, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[59, 4, 1, "", "resolve"]], "graphnet.data.writers": [[61, 0, 0, "-", "graphnet_writer"], [62, 0, 0, "-", "parquet_writer"], [63, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[61, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[61, 3, 1, "", "expects_merged_dataframes"], [61, 3, 1, "", "file_extension"], [61, 4, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[62, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[62, 4, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[63, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[63, 4, 1, "", "merge_files"]], "graphnet.datasets": [[65, 0, 0, "-", "test_dataset"]], "graphnet.datasets.test_dataset": [[65, 1, 1, "", "TestDataset"]], "graphnet.deployment": [[67, 0, 0, "-", "deployer"], [68, 0, 0, "-", "deployment_module"]], "graphnet.deployment.deployer": [[67, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[67, 4, 1, "", "run"]], "graphnet.deployment.deployment_module": [[68, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.icecube": [[72, 0, 0, "-", "cleaning_module"], [74, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[72, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.inference_module": [[74, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[76, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[76, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[78, 0, 0, "-", "coarsening"], [79, 0, 0, "-", "components"], [83, 0, 0, "-", "detector"], [88, 0, 0, "-", "gnn"], [96, 0, 0, "-", "graphs"], [105, 0, 0, "-", "model"], [106, 0, 0, "-", "rnn"], [108, 0, 0, "-", "standard_averaged_model"], [109, 0, 0, "-", "standard_model"], [110, 0, 0, "-", "task"], [114, 0, 0, "-", "transformer"], [116, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[78, 1, 1, "", "AttributeCoarsening"], [78, 1, 1, "", "Coarsening"], [78, 1, 1, "", "CustomDOMCoarsening"], [78, 1, 1, "", "DOMAndTimeWindowCoarsening"], [78, 1, 1, "", "DOMCoarsening"], [78, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[78, 4, 1, "", "forward"], [78, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[80, 0, 0, "-", "embedding"], [81, 0, 0, "-", "layers"], [82, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[80, 1, 1, "", "FourierEncoder"], [80, 1, 1, "", "SinusoidalPosEmb"], [80, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[80, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[80, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[80, 4, 1, "", "forward"]], "graphnet.models.components.layers": [[81, 1, 1, "", "Attention_rel"], [81, 1, 1, "", "Block"], [81, 1, 1, "", "Block_rel"], [81, 1, 1, "", "DropPath"], [81, 1, 1, "", "DynEdgeConv"], [81, 1, 1, "", "DynTrans"], [81, 1, 1, "", "EdgeConvTito"], [81, 1, 1, "", "Mlp"]], "graphnet.models.components.layers.Attention_rel": [[81, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[81, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[81, 4, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[81, 4, 1, "", "extra_repr"], [81, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[81, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[81, 4, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[81, 4, 1, "", "forward"], [81, 4, 1, "", "message"], [81, 4, 1, "", "reset_parameters"]], "graphnet.models.components.layers.Mlp": [[81, 4, 1, "", "forward"]], "graphnet.models.components.pool": [[82, 5, 1, "", "group_by"], [82, 5, 1, "", "group_pulses_to_dom"], [82, 5, 1, "", "group_pulses_to_pmt"], [82, 5, 1, "", "min_pool"], [82, 5, 1, "", "min_pool_x"], [82, 5, 1, "", "std_pool"], [82, 5, 1, "", "std_pool_x"], [82, 5, 1, "", "sum_pool"], [82, 5, 1, "", "sum_pool_and_distribute"], [82, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[84, 0, 0, "-", "detector"], [85, 0, 0, "-", "icecube"], [86, 0, 0, "-", "liquido"], [87, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[84, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[84, 4, 1, "", "feature_map"], [84, 4, 1, "", "forward"], [84, 3, 1, "", "geometry_table"], [84, 3, 1, "", "sensor_index_name"], [84, 3, 1, "", "sensor_position_names"], [84, 3, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[85, 1, 1, "", "IceCube86"], [85, 1, 1, "", "IceCubeDeepCore"], [85, 1, 1, "", "IceCubeKaggle"], [85, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[85, 4, 1, "", "feature_map"], [85, 2, 1, "", "geometry_table_path"], [85, 2, 1, "", "sensor_id_column"], [85, 2, 1, "", "string_id_column"], [85, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[85, 4, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[85, 4, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[85, 4, 1, "", "feature_map"], [85, 2, 1, "", "geometry_table_path"], [85, 2, 1, "", "sensor_id_column"], [85, 2, 1, "", "string_id_column"], [85, 2, 1, "", "xyz"]], "graphnet.models.detector.liquido": [[86, 1, 1, "", "LiquidO_v1"]], "graphnet.models.detector.liquido.LiquidO_v1": [[86, 4, 1, "", "feature_map"], [86, 2, 1, "", "geometry_table_path"], [86, 2, 1, "", "sensor_id_column"], [86, 2, 1, "", "string_id_column"], [86, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[87, 1, 1, "", "ARCA115"], [87, 1, 1, "", "BaikalGVD8"], [87, 1, 1, "", "IceCube86"], [87, 1, 1, "", "IceCubeDeepCore8"], [87, 1, 1, "", "IceCubeGen2"], [87, 1, 1, "", "IceCubeUpgrade7"], [87, 1, 1, "", "IceDemo81"], [87, 1, 1, "", "ORCA150"], [87, 1, 1, "", "ORCA150SuperDense"], [87, 1, 1, "", "Prometheus"], [87, 1, 1, "", "TRIDENT1211"], [87, 1, 1, "", "WaterDemo81"]], "graphnet.models.detector.prometheus.ARCA115": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.BaikalGVD8": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCube86": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeDeepCore8": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeGen2": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeUpgrade7": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceDemo81": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150SuperDense": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.TRIDENT1211": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.WaterDemo81": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.gnn": [[89, 0, 0, "-", "RNN_tito"], [90, 0, 0, "-", "convnet"], [91, 0, 0, "-", "dynedge"], [92, 0, 0, "-", "dynedge_jinst"], [93, 0, 0, "-", "dynedge_kaggle_tito"], [94, 0, 0, "-", "gnn"], [95, 0, 0, "-", "icemix"]], "graphnet.models.gnn.RNN_tito": [[89, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[89, 4, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[90, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[90, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[91, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[91, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[92, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[92, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[93, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[93, 4, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[94, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[94, 4, 1, "", "forward"], [94, 3, 1, "", "nb_inputs"], [94, 3, 1, "", "nb_outputs"]], "graphnet.models.gnn.icemix": [[95, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[95, 4, 1, "", "forward"], [95, 4, 1, "", "no_weight_decay"]], "graphnet.models.graphs": [[97, 0, 0, "-", "edges"], [100, 0, 0, "-", "graph_definition"], [101, 0, 0, "-", "graphs"], [102, 0, 0, "-", "nodes"], [104, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[98, 0, 0, "-", "edges"], [99, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[98, 1, 1, "", "EdgeDefinition"], [98, 1, 1, "", "EuclideanEdges"], [98, 1, 1, "", "KNNEdges"], [98, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[98, 4, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[99, 1, 1, "", "MinkowskiKNNEdges"], [99, 5, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[100, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[100, 4, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[101, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[103, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[103, 1, 1, "", "IceMixNodes"], [103, 1, 1, "", "NodeAsDOMTimeSeries"], [103, 1, 1, "", "NodeDefinition"], [103, 1, 1, "", "NodesAsPulses"], [103, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[103, 4, 1, "", "forward"], [103, 3, 1, "", "nb_outputs"], [103, 4, 1, "", "set_number_of_inputs"], [103, 4, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[104, 5, 1, "", "cluster_summarize_with_percentiles"], [104, 5, 1, "", "gather_cluster_sequence"], [104, 5, 1, "", "ice_transparency"], [104, 5, 1, "", "identify_indices"], [104, 5, 1, "", "lex_sort"]], "graphnet.models.model": [[105, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[105, 4, 1, "", "extra_repr"], [105, 4, 1, "", "extra_repr_recursive"], [105, 4, 1, "", "from_config"], [105, 4, 1, "", "load"], [105, 4, 1, "", "load_state_dict"], [105, 4, 1, "", "save"], [105, 4, 1, "", "save_state_dict"], [105, 4, 1, "", "set_verbose_print_recursively"], [105, 2, 1, "", "verbose_print"]], "graphnet.models.rnn": [[107, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[107, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[107, 4, 1, "", "clean_up_data_object"], [107, 4, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[108, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[108, 4, 1, "", "load_state_dict"], [108, 4, 1, "", "on_train_end"], [108, 4, 1, "", "optimizer_step"], [108, 4, 1, "", "training_step"], [108, 4, 1, "", "validation_step"]], "graphnet.models.standard_model": [[109, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[109, 4, 1, "", "compute_loss"], [109, 4, 1, "", "configure_optimizers"], [109, 4, 1, "", "fit"], [109, 4, 1, "", "forward"], [109, 4, 1, "", "inference"], [109, 4, 1, "", "predict"], [109, 4, 1, "", "predict_as_dataframe"], [109, 3, 1, "", "prediction_labels"], [109, 4, 1, "", "shared_step"], [109, 3, 1, "", "target_labels"], [109, 4, 1, "", "train"], [109, 4, 1, "", "training_step"], [109, 4, 1, "", "validation_step"]], "graphnet.models.task": [[111, 0, 0, "-", "classification"], [112, 0, 0, "-", "reconstruction"], [113, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[111, 1, 1, "", "BinaryClassificationTask"], [111, 1, 1, "", "BinaryClassificationTaskLogits"], [111, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[111, 2, 1, "", "default_prediction_labels"], [111, 2, 1, "", "default_target_labels"], [111, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[111, 2, 1, "", "default_prediction_labels"], [111, 2, 1, "", "default_target_labels"], [111, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[112, 1, 1, "", "AzimuthReconstruction"], [112, 1, 1, "", "AzimuthReconstructionWithKappa"], [112, 1, 1, "", "DirectionReconstructionWithKappa"], [112, 1, 1, "", "EnergyReconstruction"], [112, 1, 1, "", "EnergyReconstructionWithPower"], [112, 1, 1, "", "EnergyReconstructionWithUncertainty"], [112, 1, 1, "", "EnergyTCReconstruction"], [112, 1, 1, "", "InelasticityReconstruction"], [112, 1, 1, "", "PositionReconstruction"], [112, 1, 1, "", "TimeReconstruction"], [112, 1, 1, "", "VertexReconstruction"], [112, 1, 1, "", "ZenithReconstruction"], [112, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[112, 2, 1, "", "default_prediction_labels"], [112, 2, 1, "", "default_target_labels"], [112, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[113, 1, 1, "", "IdentityTask"], [113, 1, 1, "", "LearnedTask"], [113, 1, 1, "", "StandardFlowTask"], [113, 1, 1, "", "StandardLearnedTask"], [113, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[113, 3, 1, "", "default_prediction_labels"], [113, 3, 1, "", "default_target_labels"], [113, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[113, 4, 1, "", "compute_loss"], [113, 4, 1, "", "forward"], [113, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[113, 4, 1, "", "compute_loss"], [113, 4, 1, "", "forward"], [113, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[113, 4, 1, "", "compute_loss"], [113, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[113, 3, 1, "", "default_prediction_labels"], [113, 3, 1, "", "default_target_labels"], [113, 4, 1, "", "inference"], [113, 3, 1, "", "nb_inputs"], [113, 4, 1, "", "train_eval"]], "graphnet.models.transformer": [[115, 0, 0, "-", "iseecube"]], "graphnet.models.transformer.iseecube": [[115, 1, 1, "", "ISeeCube"]], "graphnet.models.transformer.iseecube.ISeeCube": [[115, 4, 1, "", "forward"]], "graphnet.models.utils": [[116, 5, 1, "", "array_to_sequence"], [116, 5, 1, "", "calculate_distance_matrix"], [116, 5, 1, "", "calculate_xyzt_homophily"], [116, 5, 1, "", "knn_graph_batch"]], "graphnet.training": [[118, 0, 0, "-", "callbacks"], [119, 0, 0, "-", "labels"], [120, 0, 0, "-", "loss_functions"], [121, 0, 0, "-", "utils"], [122, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[118, 1, 1, "", "GraphnetEarlyStopping"], [118, 1, 1, "", "PiecewiseLinearLR"], [118, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[118, 4, 1, "", "on_fit_end"], [118, 4, 1, "", "on_train_epoch_end"], [118, 4, 1, "", "on_validation_end"], [118, 4, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[118, 4, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[118, 4, 1, "", "get_metrics"], [118, 4, 1, "", "init_predict_tqdm"], [118, 4, 1, "", "init_test_tqdm"], [118, 4, 1, "", "init_train_tqdm"], [118, 4, 1, "", "init_validation_tqdm"], [118, 4, 1, "", "on_train_epoch_end"], [118, 4, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[119, 1, 1, "", "Direction"], [119, 1, 1, "", "Label"]], "graphnet.training.labels.Label": [[119, 3, 1, "", "key"]], "graphnet.training.loss_functions": [[120, 1, 1, "", "BinaryCrossEntropyLoss"], [120, 1, 1, "", "CrossEntropyLoss"], [120, 1, 1, "", "EuclideanDistanceLoss"], [120, 1, 1, "", "LogCMK"], [120, 1, 1, "", "LogCoshLoss"], [120, 1, 1, "", "LossFunction"], [120, 1, 1, "", "MSELoss"], [120, 1, 1, "", "RMSELoss"], [120, 1, 1, "", "VonMisesFisher2DLoss"], [120, 1, 1, "", "VonMisesFisher3DLoss"], [120, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[120, 4, 1, "", "backward"], [120, 4, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[120, 4, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[120, 4, 1, "", "log_cmk"], [120, 4, 1, "", "log_cmk_approx"], [120, 4, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[121, 5, 1, "", "collate_fn"], [121, 1, 1, "", "collator_sequence_buckleting"], [121, 5, 1, "", "get_predictions"], [121, 5, 1, "", "make_dataloader"], [121, 5, 1, "", "make_train_validation_dataloader"], [121, 5, 1, "", "save_results"], [121, 5, 1, "", "save_selection"]], "graphnet.training.weight_fitting": [[122, 1, 1, "", "BjoernLow"], [122, 1, 1, "", "Uniform"], [122, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[122, 4, 1, "", "fit"]], "graphnet.utilities": [[124, 0, 0, "-", "argparse"], [125, 0, 0, "-", "config"], [132, 0, 0, "-", "decorators"], [133, 0, 0, "-", "deprecation_tools"], [134, 0, 0, "-", "filesys"], [135, 0, 0, "-", "imports"], [136, 0, 0, "-", "logging"], [137, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[124, 1, 1, "", "ArgumentParser"], [124, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[124, 2, 1, "", "standard_arguments"], [124, 4, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[124, 4, 1, "", "contains"], [124, 4, 1, "", "pop_default"]], "graphnet.utilities.config": [[126, 0, 0, "-", "base_config"], [127, 0, 0, "-", "configurable"], [128, 0, 0, "-", "dataset_config"], [129, 0, 0, "-", "model_config"], [130, 0, 0, "-", "parsing"], [131, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[126, 1, 1, "", "BaseConfig"], [126, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[126, 4, 1, "", "as_dict"], [126, 4, 1, "", "dump"], [126, 4, 1, "", "load"], [126, 2, 1, "", "model_computed_fields"], [126, 2, 1, "", "model_config"], [126, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[127, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[127, 3, 1, "", "config"], [127, 4, 1, "", "from_config"], [127, 4, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[128, 1, 1, "", "DatasetConfig"], [128, 1, 1, "", "DatasetConfigSaverABCMeta"], [128, 1, 1, "", "DatasetConfigSaverMeta"], [128, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[128, 4, 1, "", "as_dict"], [128, 2, 1, "", "features"], [128, 2, 1, "", "graph_definition"], [128, 2, 1, "", "index_column"], [128, 2, 1, "", "labels"], [128, 2, 1, "", "loss_weight_column"], [128, 2, 1, "", "loss_weight_default_value"], [128, 2, 1, "", "loss_weight_table"], [128, 2, 1, "", "model_computed_fields"], [128, 2, 1, "", "model_config"], [128, 2, 1, "", "model_fields"], [128, 2, 1, "", "node_truth"], [128, 2, 1, "", "node_truth_table"], [128, 2, 1, "", "path"], [128, 2, 1, "", "pulsemaps"], [128, 2, 1, "", "seed"], [128, 2, 1, "", "selection"], [128, 2, 1, "", "string_selection"], [128, 2, 1, "", "truth"], [128, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[129, 1, 1, "", "ModelConfig"], [129, 1, 1, "", "ModelConfigSaverABC"], [129, 1, 1, "", "ModelConfigSaverMeta"], [129, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[129, 2, 1, "", "arguments"], [129, 4, 1, "", "as_dict"], [129, 2, 1, "", "class_name"], [129, 2, 1, "", "model_computed_fields"], [129, 2, 1, "", "model_config"], [129, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[130, 5, 1, "", "get_all_grapnet_classes"], [130, 5, 1, "", "get_graphnet_classes"], [130, 5, 1, "", "is_graphnet_class"], [130, 5, 1, "", "is_graphnet_module"], [130, 5, 1, "", "list_all_submodules"], [130, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[131, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[131, 2, 1, "", "dataloader"], [131, 2, 1, "", "early_stopping_patience"], [131, 2, 1, "", "fit"], [131, 2, 1, "", "model_computed_fields"], [131, 2, 1, "", "model_config"], [131, 2, 1, "", "model_fields"], [131, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[133, 5, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[134, 5, 1, "", "find_i3_files"], [134, 5, 1, "", "has_extension"], [134, 5, 1, "", "is_gcd_file"], [134, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[135, 5, 1, "", "has_icecube_package"], [135, 5, 1, "", "has_torch_package"], [135, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[136, 1, 1, "", "Logger"], [136, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[136, 4, 1, "", "critical"], [136, 4, 1, "", "debug"], [136, 4, 1, "", "error"], [136, 3, 1, "", "file_handlers"], [136, 3, 1, "", "handlers"], [136, 4, 1, "", "info"], [136, 4, 1, "", "setLevel"], [136, 3, 1, "", "stream_handlers"], [136, 4, 1, "", "warning"], [136, 4, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[136, 4, 1, "", "filter"], [136, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[137, 5, 1, "", "eps_like"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:exception"}, "terms": {"": [0, 7, 8, 9, 11, 13, 15, 33, 44, 46, 48, 51, 52, 54, 61, 63, 67, 80, 84, 90, 91, 100, 109, 113, 116, 118, 122, 124, 128, 129, 136, 137, 140, 141, 142, 143, 145, 146], "0": [9, 11, 13, 15, 44, 46, 49, 54, 59, 72, 78, 81, 82, 89, 90, 91, 93, 98, 99, 101, 104, 107, 116, 120, 121, 128, 141, 142, 144, 145, 146], "000": 141, "001": [142, 146], "01": [142, 146], "0221": 142, "02_data": 142, "03042": 92, "03762": 80, "04616": 120, "04_ensemble_dataset": 142, "06": 139, "06166": 98, "0e04": 145, "0e4": 145, "1": [0, 7, 9, 11, 13, 18, 33, 44, 46, 54, 59, 62, 67, 78, 81, 82, 89, 91, 93, 95, 98, 99, 101, 104, 107, 111, 112, 113, 116, 118, 120, 121, 122, 128, 140, 141, 142, 143, 144, 146], "10": [9, 85, 86, 87, 103, 104, 124, 141, 142, 145, 146], "100": 141, "1000": [141, 142], "10000": [11, 13, 15, 59, 80], "1088": 142, "11": [142, 144], "12": [59, 95, 115, 128, 141, 142], "120": 142, "128": [80, 90, 91, 93, 124, 141, 142, 146], "13": 59, "14": [59, 128, 141, 142], "1536": 115, "15674": 80, "16": [59, 80, 89, 115, 128, 141, 142, 146], "17": 142, "1706": 80, "1748": 142, "1809": 98, "1812": 120, "192": 95, "196": 115, "1e6": 113, "2": [9, 33, 44, 54, 81, 82, 89, 91, 93, 98, 101, 104, 107, 112, 116, 120, 128, 141, 142, 144, 146], "20": [11, 13, 15, 59, 136, 142, 144, 145, 146], "200": [141, 145], "200000": 62, "2018": 139, "2019": 120, "2020": [0, 143], "21": [139, 141, 142], "2209": 92, "2310": 80, "256": [91, 93, 115], "26": 141, "2d": 120, "2nd": [80, 95], "3": [82, 89, 90, 93, 99, 104, 107, 112, 115, 116, 120, 139, 142, 144, 145], "30": 145, "300": [141, 145], "32": [80, 95, 115], "336": [91, 93], "384": [80, 95, 115], "39": [0, 143], "3d": [112, 120], "4": [81, 92, 95, 112, 142, 145, 146], "40": 145, "400": 63, "42": 9, "5": [11, 13, 15, 59, 89, 107, 124, 140, 141, 142, 144, 145, 146], "50": [103, 104, 124, 145], "500": [104, 145], "50000": [59, 128, 141, 142], "5001": 141, "59": 144, "6": [80, 82, 95, 115], "64": 89, "7": [72, 82], "700": 120, "768": 103, "8": [81, 82, 89, 91, 93, 101, 107, 120, 121, 139, 141, 142, 144, 146], "80": [142, 146], "86": [21, 85], "890778": [0, 143], "9": 9, "90": [103, 104], "A": [5, 7, 9, 11, 35, 48, 49, 50, 51, 52, 58, 63, 65, 67, 68, 72, 82, 100, 101, 104, 105, 111, 113, 116, 120, 122, 126, 128, 129, 131, 140, 141, 142, 145, 146], "AND": 120, "AS": 120, "As": [91, 146], "BE": 120, "BUT": 120, "But": 146, "By": [0, 44, 46, 49, 54, 113, 141, 142, 143, 146], "FOR": 120, "For": [36, 103, 118, 141, 142, 146], "IN": 120, "If": [5, 11, 13, 20, 22, 35, 63, 65, 80, 81, 91, 95, 100, 103, 104, 105, 113, 118, 122, 139, 140, 142, 146], "In": [44, 46, 48, 49, 54, 61, 128, 129, 140, 142, 144], "It": [1, 5, 33, 58, 72, 80, 104, 111, 113, 139, 141, 142, 146], "NO": 120, "NOT": [58, 120, 142], "No": [0, 142, 143], "OF": 120, "OR": 120, "On": 5, "One": 142, "Or": 141, "Such": 58, "THE": 120, "TO": 120, "That": [11, 13, 15, 91, 112, 119, 142, 146], "The": [0, 7, 9, 11, 13, 15, 17, 33, 36, 44, 46, 54, 58, 61, 62, 63, 67, 68, 72, 74, 78, 80, 81, 82, 89, 91, 93, 95, 98, 100, 104, 107, 111, 112, 113, 115, 116, 118, 119, 120, 133, 140, 141, 143, 145], "Then": [5, 139], "There": [142, 146], "These": [0, 48, 61, 63, 100, 139, 141, 142, 143, 145, 146], "To": [141, 142, 144, 145, 146], "WITH": 120, "Will": [5, 65, 67, 72, 74, 98, 140], "With": [142, 145, 146], "_": 142, "__": [33, 36, 142], "_____________________": 120, "__call__": [18, 20, 48, 68, 140, 141, 142, 145], "__fields__": [126, 128, 129, 131], "__init__": [128, 129, 140, 141, 142, 146], "_accepted_extractor": [140, 145], "_accepted_file_extens": [140, 145], "_and_": 91, "_column_nam": 140, "_construct_edg": 98, "_definition_": 142, "_extractor": [140, 145], "_extractor_nam": [140, 145], "_file_extens": 140, "_file_hash": 5, "_fit_weight": 122, "_forward": 146, "_indic": [11, 13], "_layer": 146, "_lrschedul": 118, "_may_": [11, 13], "_merge_datafram": 140, "_pred": 113, "_save_fil": 140, "_sensor_tim": 145, "_sensor_xyz": 145, "_tabl": 140, "_verify_column": 140, "_x_": 142, "a__b": 33, "ab": [59, 120, 128, 141, 142], "abc": [7, 11, 18, 48, 61, 67, 105, 119, 122, 127, 128, 129], "abcmeta": [128, 129], "abil": 141, "abl": [33, 103, 140, 142, 144, 145, 146], "about": [105, 126, 128, 129, 131, 141, 142, 145], "abov": [120, 122, 141, 142, 145, 146], "absopt": 103, "absorpt": 104, "abstract": [1, 5, 11, 61, 84, 94, 100, 113, 127, 142], "abstractmethod": 141, "acceler": 1, "accept": [48, 139, 146], "accepted_extractor": [48, 140], "accepted_file_extens": [48, 140], "access": [119, 141], "accompani": [44, 46, 49, 54, 142], "accord": [78, 82, 98, 100, 101, 104], "achiev": 144, "achitectur": 146, "across": [1, 2, 11, 13, 15, 36, 55, 67, 82, 109, 120, 123, 124, 125, 136, 145], "act": [113, 120, 142, 146], "action": 120, "activ": [81, 89, 91, 103, 107, 109, 113, 139], "activation_lay": 91, "actual": [142, 146], "ad": [7, 11, 13, 15, 21, 44, 46, 54, 80, 91, 95, 100, 103, 104], "adam": [142, 146], "adapt": [142, 146], "add": [11, 81, 91, 124, 133, 139, 142, 145], "add_count": [103, 104], "add_global_variables_after_pool": [91, 142, 146], "add_ice_properti": 103, "add_inactive_sensor": 100, "add_label": [11, 141, 142], "add_norm_lay": 91, "add_to_databas": 122, "addit": [48, 61, 78, 81, 109, 120, 122, 140, 142, 146], "additional_attribut": [109, 121, 142, 146], "address": 146, "adher": [139, 146], "adjac": 84, "adjust": 146, "advanc": [1, 82], "after": [9, 81, 89, 91, 93, 118, 124, 128, 141, 142, 146], "again": [142, 146], "against": 5, "aggr": 81, "aggreg": [81, 82], "agnost": [0, 143, 146], "agreement": [0, 139, 143], "ai": 142, "aim": [0, 1, 139, 142, 143], "algorithm": 25, "all": [1, 5, 11, 13, 15, 17, 18, 20, 22, 35, 58, 63, 65, 72, 80, 81, 82, 84, 91, 94, 99, 100, 105, 120, 126, 127, 128, 129, 130, 131, 136, 139, 140, 141, 142, 145, 146], "allow": [0, 5, 38, 66, 77, 82, 118, 126, 131, 141, 142, 143, 146], "along": [104, 142, 146], "alongsid": [142, 146], "alreadi": 58, "also": [7, 11, 13, 15, 59, 89, 128, 140, 141, 142, 145, 146], "alter": 100, "altern": [91, 120, 139], "alwai": 121, "amount": 89, "an": [0, 18, 36, 44, 46, 49, 54, 59, 100, 107, 108, 120, 134, 136, 139, 140, 142, 143, 144, 145, 146], "anaconda": 144, "analys": [66, 142], "analysi": 67, "angl": [112, 119, 142, 146], "ani": [6, 7, 8, 9, 11, 13, 15, 33, 34, 35, 36, 48, 50, 51, 52, 61, 63, 72, 78, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 118, 120, 122, 124, 126, 127, 128, 129, 130, 131, 136, 141, 142, 146], "annot": [128, 129, 131], "anoth": [128, 129, 141, 142], "anyth": 139, "api": [138, 140, 142], "appear": [67, 141, 142], "append": 100, "appli": [7, 11, 13, 15, 44, 46, 47, 48, 54, 67, 81, 82, 89, 90, 91, 92, 93, 94, 95, 104, 107, 109, 111, 113, 115, 130, 140, 141, 142], "applic": [33, 141, 142, 146], "appropri": [58, 113, 142], "approx": 120, "approxim": 63, "ar": [0, 1, 4, 5, 11, 13, 15, 20, 22, 35, 36, 48, 59, 61, 62, 63, 67, 72, 81, 82, 89, 91, 93, 96, 97, 98, 100, 101, 102, 103, 104, 107, 111, 120, 122, 128, 129, 139, 140, 141, 142, 143, 145, 146], "arbitrari": [0, 143], "arca": 87, "arca115": [83, 87], "architectur": [1, 90, 91, 92, 93, 95, 107, 115, 142, 146], "archiv": 121, "area": 1, "arg": [11, 13, 15, 17, 35, 78, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 105, 107, 108, 109, 111, 112, 113, 115, 120, 124, 126, 136, 140, 145], "argpars": [1, 123], "argument": [5, 9, 62, 65, 95, 100, 118, 122, 124, 126, 128, 129, 131, 141, 142, 145, 146], "argumentpars": [123, 124], "aris": 120, "arrai": [18, 30, 33, 103, 104, 116, 140, 141, 142, 145], "array_to_sequ": [77, 116], "arriv": 141, "art": [0, 143], "articl": 142, "artifact": [142, 146], "arxiv": [80, 98, 120], "as_dict": [126, 128, 129, 142, 146], "assert": [140, 141], "assertionerror": 140, "assign": [7, 11, 13, 15, 78, 82, 139, 140], "associ": [72, 74, 100, 104, 112, 113, 120, 140, 141, 142, 145, 146], "assort": 137, "assum": [5, 72, 80, 84, 100, 104, 113, 116], "atmospher": 141, "attach": 58, "attach_index": [55, 58], "attempt": [20, 142], "attent": [80, 81, 95, 115], "attention_rel": [79, 81], "attn_drop": 81, "attn_head_dim": 81, "attn_mask": 81, "attribut": [5, 11, 13, 15, 78, 113, 141, 142, 146], "attributecoarsen": [77, 78], "author": [90, 92, 120], "auto": 113, "autom": 139, "automat": [22, 62, 80, 100, 120, 139, 140, 142, 145], "auxiliari": [4, 80, 142, 146], "avail": [5, 7, 22, 65, 111, 112, 113, 135, 140, 141, 142, 144, 145, 146], "available_backend": 5, "available_t": 140, "averag": [82, 108, 120], "avg": 78, "avg_pool": 78, "avg_pool_x": 78, "avoid": [13, 136, 139], "awai": [1, 142], "azimiuth": 119, "azimuth": [4, 112, 119], "azimuth_kappa": 112, "azimuth_kei": 119, "azimuth_pr": 112, "azimuthreconstruct": [110, 112], "azimuthreconstructionwithkappa": [110, 112], "b": [33, 78, 82, 116, 142, 145, 146], "backbon": [109, 142], "backend": [5, 12, 14, 60, 62, 65, 145], "backward": [104, 120], "baikalgvd8": [83, 87], "bar": 118, "base": [0, 4, 5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 59, 61, 62, 63, 65, 67, 68, 72, 74, 76, 78, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 105, 107, 108, 109, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 131, 135, 136, 140, 141, 142, 143, 146], "base_config": [123, 125], "baseclass": 67, "baseconfig": [125, 126, 127, 128, 129, 131], "basemodel": [126, 128, 129], "basi": 146, "basic": [1, 142], "batch": [0, 8, 13, 62, 78, 81, 82, 107, 109, 116, 121, 124, 141, 143], "batch_idx": [108, 109, 116], "batch_siz": [8, 9, 116, 121, 141, 142, 146], "batch_split": 121, "becaus": [57, 142, 146], "been": [5, 72, 120, 139, 146], "befor": [11, 13, 91, 99, 107, 113, 118], "behavior": 140, "behaviour": 118, "behind": [142, 146], "being": [20, 72, 80, 111, 113, 141, 142, 146], "beitv2": 81, "belong": 116, "below": [5, 59, 103, 122, 139, 140, 142, 145, 146], "benchmark": 5, "besid": 141, "bessel": 120, "best": [0, 118, 139, 143], "better": 139, "between": [38, 80, 96, 97, 98, 99, 102, 109, 113, 116, 118, 120, 128, 129, 142, 146], "bia": [81, 115], "bias": [142, 146], "big": [142, 146], "biject": 140, "bin": 122, "binari": [111, 120, 146], "binaryclassificationtask": [110, 111, 142, 146], "binaryclassificationtasklogit": [110, 111], "binarycrossentropyloss": [117, 120], "bjoernlow": [117, 122], "black": 139, "blob": [100, 120, 142], "block": [0, 1, 79, 81, 142, 143], "block_rel": [79, 81], "boilerpl": 146, "bool": [8, 34, 35, 36, 58, 59, 61, 72, 80, 81, 89, 91, 93, 95, 100, 103, 104, 105, 109, 115, 118, 120, 121, 122, 124, 130, 133, 134, 135, 136], "boost": 36, "border": 30, "both": [0, 22, 113, 142, 143, 145, 146], "boundari": 30, "box": [140, 142, 146], "branch": 139, "break_cyclic_recurs": [32, 36], "broken": [44, 46, 49, 54], "bucket": [115, 121], "bug": [139, 142], "build": [0, 1, 77, 84, 98, 99, 103, 104, 105, 126, 128, 129, 142, 143, 146], "built": [0, 77, 100, 141, 142, 143, 145, 146], "c": [20, 33, 82, 99, 120, 142], "c_": 120, "cach": 13, "cache_s": 13, "calcul": [72, 80, 98, 101, 103, 109, 116, 119, 120, 141, 142, 146], "calculate_distance_matrix": [77, 116], "calculate_xyzt_homophili": [77, 116], "calibr": [34, 36], "call": [7, 22, 36, 80, 82, 113, 118, 122, 136, 140, 142, 145, 146], "callabl": [8, 11, 36, 81, 82, 84, 85, 86, 87, 100, 108, 113, 121, 122, 126, 128, 129, 130, 135, 145], "callback": [1, 109, 117, 142, 146], "can": [0, 1, 5, 9, 11, 13, 15, 18, 22, 25, 72, 80, 82, 100, 122, 124, 126, 128, 129, 139, 140, 141, 142, 143, 145, 146], "cannot": [36, 107, 126, 131], "capabl": [0, 143], "captur": [142, 146], "care": 141, "carlo": 34, "cascad": 112, "case": [11, 13, 15, 22, 44, 46, 49, 54, 72, 82, 104, 113, 140, 141, 142, 144, 146], "cast": [22, 36], "cast_object_to_pure_python": [32, 36], "cast_pulse_series_to_pure_python": [32, 36], "caus": 142, "caveat": [142, 146], "cd": 144, "center": 98, "centr": 98, "central": [142, 144], "certain": 142, "cfg": 11, "cframe": 20, "chain": [0, 1, 66, 77, 109, 143, 144], "chang": [120, 139, 142, 146], "charg": [4, 80, 89, 103, 104, 107, 120, 141, 142, 146], "charge_column": 103, "check": [8, 34, 35, 36, 48, 58, 103, 124, 134, 135, 139, 145], "checkpoint": 142, "checkpointing_bas": 142, "chenli2049": 115, "cherenkov": [103, 104, 142, 145, 146], "choic": [141, 142, 146], "choos": [142, 146], "chosen": [98, 104, 136, 141], "chunk": 140, "citat": 5, "cite": 5, "ckpt": [142, 146], "ckpt_path": 109, "claim": 120, "clash": 136, "class": [4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 59, 61, 62, 63, 65, 67, 68, 72, 74, 78, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 105, 107, 108, 109, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 136, 139, 140, 141], "class_nam": [11, 35, 48, 50, 51, 52, 61, 129, 136, 141, 142, 146], "classif": [1, 77, 110, 113, 120, 142, 146], "classifi": [111, 141, 142, 146], "classmethod": [8, 11, 105, 120, 126, 127, 142, 146], "classvar": [126, 128, 129, 131], "clean": [72, 139, 144], "clean_up_data_object": 107, "cleaning_modul": [66, 71], "cleanup": 9, "clear": [136, 141], "cli": 124, "clone": 144, "close": 9, "closest": 118, "cloud": [142, 146], "cls_tocken": 95, "cluster": [78, 81, 82, 89, 91, 93, 103, 104, 107], "cluster_column": 104, "cluster_index": 82, "cluster_indic": 104, "cluster_on": [103, 104], "cluster_summarize_with_percentil": [96, 104], "cnn": [142, 146], "coarsen": [1, 77, 82], "code": [0, 30, 44, 54, 58, 100, 128, 129, 140, 141, 142, 143, 145, 146], "coincid": 103, "collabor": [1, 142, 146], "collate_fn": [3, 8, 117, 121], "collator_sequence_bucklet": [117, 121], "collect": [11, 19, 32, 120, 137, 142, 146], "column": [7, 11, 13, 15, 18, 40, 42, 44, 46, 54, 58, 62, 63, 68, 74, 76, 80, 84, 89, 98, 100, 101, 103, 104, 107, 109, 111, 112, 113, 116, 122, 140, 141, 142, 145, 146], "column_nam": [40, 140], "column_offset": 104, "columnmissingexcept": [11, 13, 75, 76], "com": [95, 100, 115, 120, 142, 144], "combin": [17, 33, 46, 89, 128, 146], "combine_extractor": [3, 16], "combinedextractor": [16, 17], "come": [5, 113, 140, 141, 142, 146], "command": 124, "comment": 5, "commit": 139, "common": [0, 1, 120, 128, 129, 132, 135, 141, 142, 143], "compar": [142, 146], "comparison": [25, 120], "compat": [48, 59, 113, 140, 141, 142, 146], "competit": [80, 81, 85, 93, 95], "complet": [0, 77, 109, 142, 143, 144, 146], "complex": [0, 77, 142, 143], "compon": [0, 1, 77, 80, 81, 82, 105, 109, 142, 143, 146], "compos": [142, 146], "composit": 136, "comprehens": 142, "compress": [5, 141], "compris": [0, 143], "comput": [68, 81, 99, 109, 113, 116, 120, 126, 128, 129, 131, 141, 142], "compute_loss": [109, 113], "compute_minkowski_distance_mat": [97, 99], "computedfieldinfo": [126, 128, 129, 131], "con": [142, 146], "concatdataset": 11, "concaten": [11, 33, 91], "concept": 139, "conceptu": [140, 142], "concret": 142, "condit": 120, "confid": 142, "config": [1, 8, 59, 118, 120, 123, 124, 126, 127, 128, 129, 130, 131, 141, 142, 146], "config_dir": [142, 146], "configdict": [126, 128, 129, 131], "configur": [0, 1, 9, 11, 45, 46, 68, 77, 105, 109, 123, 125, 126, 128, 129, 131, 136, 140, 142, 143, 146], "configure_optim": 109, "conflict": 142, "conform": [126, 128, 129, 131], "conjunct": [18, 113], "conn": 142, "connect": [0, 9, 98, 99, 100, 103, 120, 141, 142, 143], "consequ": 105, "consid": [72, 89, 141, 142, 145], "consist": [80, 124, 136, 139, 142, 146], "consortium": [0, 143], "constant": [1, 3, 138, 141, 142, 146], "constitut": [62, 141], "constraint": 142, "construct": [5, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 38, 40, 42, 48, 50, 51, 52, 59, 61, 62, 63, 65, 68, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 127, 128, 129, 136, 140, 141, 142, 146], "constructor": [140, 141, 142], "consult": 146, "consum": 142, "consumpt": 141, "contain": [0, 5, 6, 7, 11, 13, 15, 16, 17, 20, 33, 34, 37, 38, 39, 42, 44, 46, 48, 49, 50, 54, 58, 61, 62, 63, 64, 67, 68, 72, 74, 76, 91, 96, 97, 99, 100, 101, 102, 104, 105, 113, 116, 120, 122, 124, 140, 141, 142, 143, 145, 146], "containeris": 1, "content": [140, 146], "context": 65, "continu": [0, 120, 142, 143], "contract": 120, "contribut": [0, 142, 143], "contributor": 139, "conveni": [1, 139, 142, 146], "convent": [44, 46, 49, 54], "convers": [7, 37, 38, 42, 44, 54, 103, 141, 142, 145], "convert": [0, 1, 3, 5, 7, 13, 20, 33, 35, 44, 45, 46, 54, 56, 62, 64, 116, 140, 141, 142, 143, 144, 145], "converteddataset": 5, "convnet": [77, 88, 142], "convolut": [81, 90, 91, 92, 93], "coo": 141, "coordin": [30, 84, 99, 103, 104, 116, 142], "copi": [120, 141], "copyright": 120, "core": 94, "correct": 120, "correpond": 57, "correspond": [11, 13, 15, 33, 36, 57, 91, 100, 104, 122, 126, 128, 129, 131, 134, 141, 142, 145, 146], "cosh": 120, "could": [139, 142, 146], "counterpart": 141, "cover": 59, "cpu": [7, 44, 46, 54, 68], "creat": [5, 9, 58, 100, 103, 126, 127, 131, 139, 141, 146], "create_t": [55, 58], "create_table_and_save_to_sql": [55, 58], "creator": 5, "critic": [136, 142, 145], "cross": 120, "crossentropyloss": [117, 120], "csv": [121, 128, 141, 142, 145, 146], "ctx": 120, "cuda": 144, "curat": 5, "curated_datamodul": [1, 3], "curateddataset": [3, 5, 65], "curi": [0, 143], "current": [59, 107, 118, 139, 142], "curv": 122, "custom": [11, 48, 75, 100, 118, 146], "custom_label_funct": 100, "customdomcoarsen": [77, 78], "customis": 118, "cut": 121, "d": [33, 99, 100, 103, 116, 139, 145], "damag": 120, "data": [0, 1, 4, 5, 6, 7, 8, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 103, 107, 108, 109, 113, 115, 116, 119, 121, 124, 126, 128, 131, 135, 138, 141, 142, 143, 146], "data_path": 100, "databas": [5, 15, 58, 63, 122, 141, 142], "database_exist": [55, 58], "database_indic": 121, "database_nam": 63, "database_path": [58, 122], "database_table_exist": [55, 58], "dataclass": [1, 3, 34], "dataconfig": [128, 141], "dataconvert": [1, 3, 45, 61, 62, 63, 142, 145], "dataformat": [60, 63], "datafram": [58, 59, 61, 84, 109, 121, 122, 140, 142, 145, 146], "dataload": [1, 3, 5, 9, 13, 65, 100, 109, 121, 131, 141, 142, 146], "datamodul": [1, 3, 5], "dataset": [1, 3, 5, 8, 9, 12, 13, 14, 15, 24, 59, 62, 65, 76, 89, 100, 107, 124, 128, 138, 145, 146], "dataset_1": [141, 142], "dataset_2": [141, 142], "dataset_3": [141, 142], "dataset_arg": 9, "dataset_config": [123, 125, 142, 146], "dataset_config_path": [142, 146], "dataset_dir": 5, "dataset_refer": 9, "datasetconfig": [8, 11, 59, 125, 128, 141, 146], "datasetconfigsav": 128, "datasetconfigsaverabcmeta": [125, 128], "datasetconfigsavermeta": [125, 128], "db": [63, 121, 122, 141, 142], "db_count_norm": 122, "ddp": [142, 146], "de": 33, "deactiv": [109, 113], "deal": 120, "debug": [136, 142], "decai": 95, "decor": [1, 123, 135], "dedic": 139, "deem": 36, "deep": [0, 5, 61, 63, 81, 93, 95, 140, 142, 143, 144, 145, 146], "deepcopi": 133, "deepcor": [4, 21, 85], "deepic": [88, 95], "def": [140, 141, 142, 145, 146], "default": [5, 7, 9, 11, 13, 15, 20, 22, 30, 33, 42, 44, 46, 49, 54, 58, 62, 63, 65, 67, 68, 72, 74, 80, 81, 82, 89, 90, 91, 92, 93, 95, 98, 99, 100, 101, 103, 104, 105, 107, 113, 115, 116, 118, 119, 120, 122, 124, 126, 128, 134, 141, 142], "default_prediction_label": [111, 112, 113, 146], "default_target_label": [111, 112, 113, 146], "default_typ": 58, "defin": [5, 11, 13, 15, 59, 65, 68, 72, 74, 82, 96, 97, 98, 100, 102, 104, 121, 126, 128, 129, 131, 141, 142, 145, 146], "definit": [98, 100, 101, 103, 105, 113, 139, 142, 146], "deleg": 136, "demo_ic": 87, "demo_wat": 87, "denot": [18, 118, 140, 145], "dens": 82, "depend": [0, 80, 140, 141, 142, 143, 146], "deploi": [0, 1, 66, 68, 142, 143, 144], "deploy": [0, 1, 68, 72, 74, 100, 138, 142, 143, 145, 146], "deployment_modul": [1, 66], "deploymentmodul": [66, 67, 68, 74], "deprec": [43, 44, 53, 54, 133], "deprecated_method": [3, 43, 53, 66, 69], "deprecation_tool": [1, 123], "depth": [81, 95, 104, 115], "depth_rel": 95, "describ": [5, 139, 142], "descript": [5, 105, 124], "design": [1, 142, 145], "desir": [122, 134], "detail": [1, 5, 89, 105, 118, 141, 142, 144, 145, 146], "detector": [0, 1, 30, 77, 85, 86, 87, 100, 101, 103, 109, 141, 142, 143, 146], "detector_respons": 142, "determin": [67, 89], "develop": [0, 1, 139, 141, 142, 143, 144, 145, 146], "deviat": [100, 101, 104], "devic": 68, "df": [58, 140], "dfg": [0, 143], "dict": [5, 8, 9, 11, 15, 22, 33, 36, 58, 68, 84, 85, 86, 87, 95, 100, 101, 103, 105, 108, 109, 118, 121, 124, 126, 128, 129, 130, 131, 133, 140, 141, 142, 145], "dictionari": [11, 15, 18, 33, 34, 36, 48, 58, 100, 101, 105, 126, 128, 129, 131, 140, 145], "differ": [0, 11, 13, 15, 18, 20, 38, 39, 40, 42, 48, 49, 50, 101, 109, 121, 139, 140, 141, 142, 143, 145, 146], "difficult": 141, "diffier": [142, 146], "digit": 80, "dim": [80, 81], "dimenion": [91, 93], "dimens": [80, 81, 85, 86, 87, 89, 90, 91, 93, 95, 104, 107, 113, 115, 116, 120, 145, 146], "dimension": [80, 81, 141, 146], "dir": 134, "dir_with_fil": [140, 145], "dir_x_pr": 112, "dir_y_pr": 112, "dir_z_pr": 112, "direct": [93, 95, 104, 111, 112, 113, 117, 119, 141, 145], "direction_kappa": 112, "directionreconstructionwithkappa": [110, 112, 142, 146], "directli": [0, 91, 140, 142, 143, 145, 146], "directori": [5, 7, 44, 46, 48, 49, 50, 51, 52, 54, 61, 62, 65, 118, 134, 140, 142, 146], "dirti": 142, "discard_empty_ev": 72, "disconnect": 141, "discuss": 139, "disk": [140, 141, 142], "distanc": [98, 99, 101, 116], "distribut": [82, 91, 112, 113, 120, 122, 144, 146], "distribution_strategi": 109, "ditto": 120, "diverg": 120, "divid": 67, "dk": 5, "dl": [142, 146], "dnn": [24, 31], "do": [0, 68, 72, 120, 128, 129, 139, 141, 142, 143, 146], "do_shuffl": [3, 8], "doc": 142, "docformatt": 139, "docker": 1, "docstr": 139, "document": [120, 145, 146], "doe": [36, 111, 113, 129, 140, 141, 142, 146], "doesn": 58, "dom": [8, 11, 13, 15, 78, 82, 89, 103, 104, 107, 121, 142, 146], "dom_i": [4, 85, 103], "dom_numb": 4, "dom_tim": [4, 103], "dom_typ": 4, "dom_x": [4, 85, 103], "dom_z": [4, 85, 103], "domain": [0, 1, 3, 66, 142, 143], "domandtimewindowcoarsen": [77, 78], "domcoarsen": [77, 78], "don": [118, 140], "done": [22, 82, 136, 139, 140, 142, 145], "dot": 81, "download": [5, 65, 144], "download_dir": [5, 65], "downsid": 141, "drawn": [96, 97, 101, 102, 142, 146], "drhb": 95, "drop": [81, 90], "drop_path": 81, "drop_prob": 81, "dropout": [81, 89, 107], "dropout_prob": 81, "dropout_ratio": 90, "droppath": [79, 81], "dtype": [11, 13, 15, 100, 101, 137, 141, 142, 146], "due": [141, 142, 146], "dummy_pid": [141, 142], "dump": [126, 128, 129, 140, 141, 142], "duplciat": 118, "duplic": 103, "dure": [81, 95, 100, 113, 118, 145], "dynam": [22, 81, 91, 92, 93, 142, 146], "dynedg": [72, 74, 77, 88, 92, 93, 95, 142, 146], "dynedge_arg": 95, "dynedge_jinst": [77, 88], "dynedge_kaggle_tito": [77, 88], "dynedge_layer_s": [91, 142, 146], "dynedgeconv": [79, 81, 91], "dynedgejinst": [88, 92], "dynedgetito": [88, 89, 93], "dyntran": [79, 81, 89, 93], "dyntrans1": 81, "dyntrans_layer_s": [89, 93], "e": [1, 5, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 36, 38, 42, 58, 59, 63, 68, 72, 74, 78, 80, 81, 82, 84, 85, 86, 87, 90, 94, 98, 100, 103, 104, 105, 108, 109, 111, 112, 113, 116, 118, 119, 120, 122, 126, 136, 139, 140, 141, 142, 144, 146], "each": [5, 22, 33, 36, 57, 58, 62, 63, 67, 68, 78, 80, 81, 82, 85, 86, 87, 89, 91, 93, 98, 100, 101, 103, 104, 107, 111, 113, 116, 118, 121, 134, 140, 141, 142, 145, 146], "earli": [118, 124], "early_stopping_pati": [109, 131], "earlystop": 118, "easi": [0, 140, 141, 142, 143, 146], "easili": [1, 142, 146], "ed": 120, "edg": [77, 81, 82, 91, 92, 93, 96, 99, 100, 101, 102, 103, 116, 141, 142, 146], "edge_attr": [141, 142], "edge_definit": 100, "edge_index": [78, 81, 116, 141, 142], "edgeconv": 81, "edgeconvtito": [79, 81], "edgedefinit": [96, 97, 98, 99, 100, 102, 142, 146], "effect": [118, 139, 142, 146], "effort": [139, 141, 145], "either": [0, 5, 9, 11, 15, 20, 65, 120, 140, 142, 143], "elast": 4, "element": [11, 13, 18, 33, 36, 109, 116, 121, 130, 140, 142, 145], "elementwis": 120, "elimin": 72, "els": [72, 140, 145], "ema": 108, "embed": [77, 79, 89, 95, 107, 111, 113, 115], "embedding_dim": [89, 107], "empti": 72, "en": 142, "enabl": [0, 3, 143], "encod": 80, "encount": 142, "encourag": [139, 142], "end": [0, 1, 118, 142, 143], "energi": [4, 112, 113, 122, 141, 142, 145], "energy_cascad": [4, 112], "energy_cascade_pr": 112, "energy_pr": 112, "energy_reco": 74, "energy_sigma": 112, "energy_track": [4, 112], "energy_track_pr": 112, "energyreconstruct": [110, 112, 142, 146], "energyreconstructionwithpow": [110, 112], "energyreconstructionwithuncertainti": [110, 112, 142], "energytcreconstruct": [110, 112], "engin": [0, 143], "enough": 105, "ensemble_dataset": [141, 142], "ensembledataset": [10, 11, 128, 141, 142], "ensur": [36, 57, 120, 136, 139, 146], "entir": [11, 13, 105, 140, 142, 146], "entiti": [142, 146], "entri": [72, 74, 91, 116, 124, 145], "entropi": 120, "enum": 36, "env": 144, "environ": [49, 144], "ep": [137, 142, 146], "epoch": [108, 118, 124], "eps_lik": [123, 137], "equival": [36, 142, 146], "erda": 5, "erdahost": 65, "erdahosteddataset": [3, 5, 65], "error": [120, 136, 139, 140, 142], "especi": 72, "establish": 146, "etc": [0, 120, 136, 141, 142, 143, 145], "euclidean": [98, 139], "euclideandistanceloss": [117, 120], "euclideanedg": [97, 98], "european": [0, 143], "eval": [105, 144], "evalu": [5, 113], "even": 57, "event": [0, 1, 5, 7, 9, 11, 13, 15, 17, 27, 42, 44, 46, 54, 58, 59, 62, 63, 65, 72, 80, 82, 89, 100, 103, 104, 113, 115, 116, 120, 121, 122, 128, 140, 142, 143, 145, 146], "event_no": [7, 11, 13, 15, 44, 46, 54, 58, 59, 62, 63, 122, 128, 141, 142, 146], "event_truth": 5, "events_per_batch": 62, "everi": [140, 142, 145], "everyth": [142, 146], "everytim": 139, "exact": [92, 120, 146], "exactli": [120, 136, 141], "exampl": [7, 33, 59, 78, 82, 104, 116, 120, 128, 129, 140, 141, 144], "example_energy_reconstruction_model": [124, 142, 146], "exceed": 63, "except": [1, 138, 140], "exclud": 22, "exclude_kei": 22, "excluding_valu": 116, "execut": 58, "exist": [0, 11, 13, 15, 58, 77, 119, 128, 141, 142, 143, 146], "exist_ok": [142, 146], "expand": [0, 142, 143], "expans": 95, "expect": [58, 59, 61, 72, 74, 100, 103, 141, 142, 146], "expects_merged_datafram": 61, "experi": [0, 1, 5, 6, 7, 47, 48, 68, 117, 140, 142, 143], "experiment": 146, "expert": 1, "explain": 142, "explicitli": [121, 126, 131], "exponenti": 120, "export": [140, 141, 142, 145, 146], "expos": 1, "express": [105, 120], "extend": [0, 1, 140, 141, 143], "extens": [1, 5, 48, 61, 134], "extern": [141, 142], "extra": [81, 146], "extra_repr": [81, 105], "extra_repr_recurs": 105, "extracor_nam": 48, "extract": [7, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 38, 40, 41, 42, 57, 72, 74, 113, 140, 142, 145], "extractor": [1, 3, 7, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 54, 72, 74], "extractor_nam": [17, 18, 20, 22, 25, 38, 40, 42, 140, 145], "f": [82, 140, 142, 146], "f1": 82, "f2": 82, "f_absorpt": 104, "f_scatter": 104, "factor": [81, 104, 118, 142, 146], "fail": 17, "fals": [35, 72, 80, 81, 91, 95, 100, 105, 115, 118, 120, 122, 128, 142, 146], "fanci": 142, "fashion": 1, "fast": [0, 141, 142, 143], "faster": [0, 140, 141, 143], "favorit": 144, "favourit": 142, "fbeezabg5a": 5, "fc": 82, "featur": [1, 3, 4, 5, 11, 13, 15, 21, 63, 65, 72, 74, 80, 81, 82, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 107, 111, 115, 116, 121, 128, 139, 141, 142, 145, 146], "feature_idx": 104, "feature_map": [84, 85, 86, 87, 145], "feature_nam": 104, "features_subset": [81, 89, 91, 93, 107, 142, 146], "feedforward": 81, "feel": 142, "fetch": 124, "few": [0, 77, 139, 140, 141, 142, 143, 146], "fiber_id": 86, "field": [119, 126, 128, 129, 131, 133, 140, 141, 142, 145], "fieldinfo": [126, 128, 129, 131], "fig": [0, 143], "figur": [0, 143], "file": [0, 1, 3, 5, 7, 11, 13, 15, 18, 20, 33, 35, 38, 39, 40, 41, 42, 44, 46, 48, 49, 50, 51, 52, 54, 56, 57, 61, 62, 63, 67, 68, 72, 74, 100, 105, 118, 120, 121, 124, 125, 126, 127, 128, 129, 134, 136, 140, 141, 142, 143, 144, 145, 146], "file_extens": 61, "file_handl": 136, "file_path": [121, 140, 145], "file_read": [7, 140, 145], "filehandl": 136, "filenam": 134, "fileread": [18, 48], "files_list": 57, "filesi": [1, 123], "fill": 5, "filter": [35, 44, 46, 49, 54, 136, 145], "filter_ani": 35, "filter_nam": 35, "filtermask": 35, "final": [0, 7, 82, 118, 128, 141, 142, 143], "find": [20, 99, 134, 141, 142, 145, 146], "find_fil": [48, 49, 50, 51, 52, 140], "find_i3_fil": [123, 134], "first": [80, 89, 99, 107, 118, 121, 139, 142, 145], "fisher": 120, "fit": [9, 109, 120, 122, 131, 142, 146], "fit_weight": 122, "five": 141, "fix": [59, 142], "flag": [21, 72], "flake8": 139, "flatten": 33, "flatten_nested_dictionari": [32, 33], "flexibil": 146, "flexibl": 59, "float": [11, 13, 15, 72, 81, 89, 90, 98, 99, 100, 101, 103, 104, 107, 109, 118, 120, 121, 128, 141], "float32": [11, 13, 15, 100, 101], "float64": 120, "flow": [113, 146], "flowchart": [0, 143], "fly": [141, 142], "fn": [11, 36, 126, 130], "fn_kwarg": 130, "folder": [44, 46, 49, 50, 51, 52, 54, 67, 140], "folk": 142, "follow": [91, 109, 120, 122, 139, 140, 141, 142], "fork": 139, "form": [0, 18, 77, 111, 126, 131, 140, 141, 143, 146], "format": [0, 1, 3, 5, 7, 11, 33, 37, 38, 48, 50, 61, 62, 63, 80, 105, 107, 128, 139, 140, 141, 142, 143, 144, 145, 146], "forward": [78, 80, 81, 84, 89, 90, 91, 92, 93, 94, 95, 98, 100, 103, 107, 109, 113, 115, 120, 146], "found": [36, 44, 46, 49, 54, 62, 104, 120, 141, 142], "four": 80, "fourier": 80, "fourierencod": [79, 80, 95, 115], "fraction": [90, 107, 121], "frame": [19, 20, 22, 32, 35, 36, 74], "frame_is_montecarlo": [32, 34], "frame_is_nois": [32, 34], "framework": [0, 142, 143], "free": [0, 120, 142, 143], "freeli": 142, "frequenc": 80, "friendli": [0, 61, 63, 140, 142, 143, 144], "from": [0, 1, 5, 7, 8, 9, 11, 13, 15, 18, 19, 20, 22, 24, 25, 27, 33, 34, 35, 36, 38, 40, 41, 42, 48, 49, 51, 52, 56, 61, 63, 65, 80, 82, 93, 95, 98, 100, 103, 104, 105, 108, 111, 112, 113, 116, 118, 119, 120, 126, 127, 128, 129, 131, 136, 139, 140, 141, 142, 143, 145, 146], "from_config": [11, 105, 127, 128, 129, 141, 142, 146], "from_dataset_config": [8, 142, 146], "full": [62, 142, 146], "fulli": [140, 142, 146], "func": 142, "function": [0, 7, 8, 11, 20, 36, 38, 42, 57, 58, 72, 74, 78, 81, 82, 85, 86, 87, 91, 100, 104, 105, 113, 116, 120, 121, 123, 128, 129, 130, 133, 134, 135, 137, 141, 143, 145, 146], "fund": [0, 143], "furnish": 120, "further": 72, "furthermor": 107, "g": [1, 5, 11, 13, 15, 17, 18, 20, 30, 33, 36, 58, 59, 63, 72, 74, 82, 100, 103, 104, 113, 116, 122, 136, 139, 141, 142, 144, 146], "galatict": 23, "gamma_1": 81, "gamma_2": 81, "gather": 104, "gather_cluster_sequ": [96, 104], "gcd": [20, 34, 44, 46, 49, 54, 57, 72, 74, 134], "gcd_dict": [34, 36], "gcd_file": [6, 20, 72, 74], "gcd_list": [57, 134], "gcd_rescu": [44, 46, 49, 54, 134], "gcd_shuffl": 57, "gelu": 81, "gener": [0, 5, 9, 11, 13, 15, 22, 35, 48, 61, 67, 72, 74, 80, 96, 97, 100, 101, 102, 111, 120, 141, 142, 143, 145, 146], "geometr": 142, "geometri": [84, 100, 146], "geometry_t": [84, 85, 86, 87, 145], "geometry_table_path": [85, 86, 87, 145], "germani": [0, 143], "get": [18, 34, 58, 84, 118, 121, 142, 146], "get_all_argument_valu": [125, 126], "get_all_grapnet_class": [125, 130], "get_graphnet_class": [125, 130], "get_lr": 118, "get_map_funct": 7, "get_member_vari": [32, 36], "get_metr": 118, "get_om_keys_and_pulseseri": [32, 34], "get_predict": [117, 121], "get_primary_kei": [55, 58], "getting_start": 100, "gframe": 20, "git": 144, "github": [95, 100, 115, 120, 142, 144], "given": [5, 11, 15, 20, 63, 65, 80, 82, 98, 113, 122, 124, 141, 145], "glob": 140, "global": [2, 4, 89, 91, 93, 105, 142], "global_index": 7, "global_pooling_schem": [89, 91, 93, 142, 146], "gnn": [1, 77, 89, 90, 91, 92, 93, 95, 100, 107, 109, 115, 142, 146], "go": [139, 142], "googl": 139, "got": 140, "gpu": [109, 124, 142, 144, 146], "grab": 113, "grad_output": 120, "gradient_clip_v": 109, "grant": [0, 120, 143], "graph": [0, 1, 8, 11, 13, 15, 77, 81, 82, 84, 97, 98, 99, 100, 102, 103, 104, 107, 113, 116, 119, 121, 139, 141, 142, 143, 146], "graph_definit": [5, 11, 13, 15, 65, 77, 96, 121, 128, 141, 142, 146], "graph_definiton": 141, "graphdefinit": [5, 11, 13, 15, 65, 96, 97, 100, 101, 102, 121, 139, 141, 142], "graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 72, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146], "graphnet_file_read": [3, 47, 140, 145], "graphnet_model": 118, "graphnet_writ": [3, 60], "graphnetdatamodul": [3, 5, 9], "graphnetearlystop": [117, 118], "graphnetfileread": [7, 47, 48, 49, 50, 51, 52, 140], "graphnetfilesavemethod": [61, 63], "graphnetwrit": [7, 60, 61, 62, 63, 140], "grapnet": [130, 142], "greatli": [142, 146], "group": [0, 82, 142, 143], "group_bi": [79, 82], "group_pulses_to_dom": [79, 82], "group_pulses_to_pmt": [79, 82], "groupbi": 82, "guarante": [142, 146], "guid": 139, "guidelin": 139, "gvd": 87, "gz": 5, "h5": [40, 51, 140], "h5_extractor": [16, 39], "h5extractor": [7, 39, 40, 48, 140], "h5hitextractor": [39, 40, 140], "h5py": 140, "h5truthextractor": [39, 40, 140], "ha": [0, 5, 36, 58, 72, 90, 104, 120, 134, 140, 141, 142, 143, 144, 145, 146], "had": 145, "hadron": 112, "hand": [22, 141, 142], "handi": 57, "handl": [22, 120, 124, 133, 136, 140, 141, 142], "handler": 136, "happen": [122, 141, 145], "hard": [30, 103], "has_extens": [123, 134], "has_icecube_packag": [123, 135], "has_torch_packag": [123, 135], "have": [1, 5, 13, 22, 44, 46, 49, 54, 58, 59, 63, 82, 95, 100, 104, 113, 139, 141, 142, 145, 146], "head": [81, 89, 93, 95, 113, 115, 146], "head_dim": 81, "head_siz": 95, "heavi": 140, "help": [72, 74, 124, 139, 141, 142, 145, 146], "here": [100, 139, 141, 142, 144, 145, 146], "herebi": 120, "hidden": [80, 81, 89, 91, 92, 107], "hidden_dim": [95, 115], "hidden_featur": 81, "hidden_s": [107, 111, 112, 113, 142, 146], "high": [0, 142, 143], "higher": 141, "highest_protocol": 140, "hint": 139, "hit": [8, 121, 141, 142, 145], "hitdata": 40, "hlc": 103, "hlc_name": 103, "hold": [100, 140, 145, 146], "holder": 120, "home": [85, 86, 87, 124, 140, 145], "homophili": 116, "hook": 139, "horizon": [0, 143], "host": [5, 145], "how": [5, 96, 97, 102, 140, 142, 146], "howev": [44, 46, 49, 54, 141, 142], "html": 142, "http": [5, 95, 98, 100, 115, 120, 139, 142, 144], "human": 142, "hybrid": 23, "hyperparamet": [129, 142, 146], "i": [0, 1, 5, 9, 11, 13, 15, 17, 18, 20, 22, 33, 34, 35, 36, 38, 40, 42, 44, 46, 49, 54, 57, 58, 59, 62, 63, 67, 72, 74, 78, 80, 81, 82, 90, 91, 95, 98, 100, 103, 104, 107, 112, 113, 116, 118, 119, 120, 121, 122, 124, 126, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146], "i3": [1, 20, 34, 35, 36, 44, 46, 49, 54, 57, 67, 72, 74, 134, 142, 144], "i3_fil": [6, 20], "i3_filt": [19, 32, 44, 46, 49, 54], "i3_list": [57, 134], "i3_shuffl": 57, "i3calibr": 34, "i3deploy": [6, 66, 71], "i3extractor": [7, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 44, 46, 48, 54], "i3featureextractor": [4, 16, 19, 72, 74], "i3featureextractoricecube86": [19, 21], "i3featureextractoricecubedeepcor": [19, 21], "i3featureextractoricecubeupgrad": [19, 21], "i3fileset": [3, 6, 48, 49], "i3filt": [32, 35, 44, 46, 49, 54], "i3filtermask": [32, 35], "i3fram": [19, 22, 34, 36, 72, 74], "i3galacticplanehybridrecoextractor": [19, 23], "i3genericextractor": [16, 19], "i3hybridrecoextractor": [16, 19], "i3inferencemodul": [71, 72, 74], "i3mctre": 30, "i3modul": [1, 66, 68], "i3ntmuonlabelextractor": [19, 24], "i3ntmuonlabelsextractor": [16, 19], "i3particl": 25, "i3particleextractor": [16, 19], "i3pisaextractor": [16, 19], "i3pulsecleanermodul": [71, 72], "i3pulsenoisetruthflagicecubeupgrad": [19, 21], "i3quesoextractor": [16, 19], "i3read": [3, 44, 46, 47, 54], "i3retroextractor": [16, 19], "i3splinempeextractor": [16, 19], "i3splinempeicextractor": [19, 29], "i3toparquetconvert": [44, 45, 46], "i3tosqliteconvert": [45, 46, 54], "i3truthextractor": [4, 16, 19], "i3tumextractor": [16, 19], "ic": [93, 95, 103], "ice_arg": 103, "ice_transpar": [96, 104], "icecub": [1, 3, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 44, 46, 49, 54, 66, 72, 74, 77, 81, 83, 93, 95, 103, 104, 135, 142, 146], "icecube86": [4, 83, 85, 87], "icecube_deepcor": 87, "icecube_gen2": 87, "icecube_upgrad": [85, 87], "icecubedeepcor": [83, 85], "icecubedeepcore8": [83, 87], "icecubegen2": [83, 87], "icecubekaggl": [83, 85], "icecubeupgrad": [83, 85], "icecubeupgrade7": [83, 87], "icedemo81": [83, 87], "icemix": [77, 88], "icemixnod": [102, 103], "icetrai": [34, 36, 44, 46, 49, 54, 68, 135, 144], "icetray_verbos": [44, 46, 49, 54], "id": [5, 7, 9, 13, 44, 46, 54, 63, 84, 100, 121, 140, 141, 142, 145], "id_column": 103, "ideal": 146, "ident": [82, 113], "identifi": [7, 11, 13, 15, 30, 103, 104, 116, 128, 129, 145], "identify_indic": [96, 104], "identitytask": [110, 111, 113], "ie": 89, "ignor": [11, 13, 15, 36, 62], "illustr": [0, 139, 140, 143], "imag": [0, 1, 139, 142, 143, 146], "impact": 95, "implement": [1, 5, 18, 20, 48, 61, 68, 81, 89, 90, 91, 92, 93, 95, 98, 107, 115, 120, 139, 140, 142, 146], "impli": 120, "import": [0, 1, 5, 58, 77, 123, 140, 141, 142, 143, 145, 146], "impos": [11, 13], "improv": [0, 1, 124, 142, 143, 146], "in_featur": 81, "inaccur": 104, "inact": 100, "includ": [1, 5, 13, 65, 81, 103, 109, 120, 126, 139, 141, 142, 145, 146], "include_dynedg": 95, "incompat": 142, "incorpor": 80, "increas": [0, 118, 143], "indent": 105, "independ": [67, 140], "index": [1, 7, 11, 13, 15, 36, 58, 62, 82, 84, 89, 99, 104, 107, 118, 141, 142, 146], "index_column": [7, 11, 13, 15, 44, 46, 54, 58, 59, 62, 63, 121, 122, 128, 141, 142], "indic": [59, 76, 82, 89, 99, 104, 107, 118, 124, 139, 142, 146], "indicesfor": 34, "indici": [11, 13, 15, 34, 59, 120], "individu": [0, 11, 13, 15, 82, 91, 116, 141, 143, 146], "industri": [0, 3, 143], "inelast": [4, 112], "inelasticity_pr": 112, "inelasticityreconstruct": [110, 112], "inf": 116, "infer": [0, 1, 63, 66, 68, 72, 74, 109, 113, 142, 143], "inference_modul": [66, 71], "info": [136, 142], "inform": [5, 11, 13, 15, 17, 18, 20, 22, 30, 38, 40, 42, 65, 100, 103, 104, 105, 140, 141, 142, 145, 146], "ingest": [0, 1, 3, 83, 143], "inherit": [5, 18, 20, 36, 48, 61, 84, 103, 120, 136, 140, 141, 142, 146], "init_fn": [128, 129], "init_global_index": [3, 7], "init_predict_tqdm": 118, "init_test_tqdm": 118, "init_train_tqdm": 118, "init_validation_tqdm": 118, "init_valu": 81, "initi": [7, 35, 49, 63, 67, 81, 89, 95, 99], "initial_st": 42, "initialis": [129, 142, 146], "injection_azimuth": [4, 141, 142], "injection_bjorkeni": [4, 141, 142], "injection_bjorkenx": [4, 141, 142], "injection_column_depth": [4, 141, 142], "injection_energi": [4, 141, 142], "injection_interaction_typ": [4, 141, 142], "injection_position_i": [4, 141, 142], "injection_position_x": [4, 141, 142], "injection_position_z": [4, 141, 142], "injection_typ": [4, 141, 142], "injection_zenith": [4, 141, 142, 146], "innov": [0, 143], "input": [5, 7, 11, 13, 15, 44, 46, 48, 49, 54, 61, 65, 67, 72, 74, 80, 81, 85, 89, 90, 91, 92, 93, 94, 95, 100, 101, 103, 107, 111, 113, 115, 116, 126, 131, 133, 140, 141, 142, 145, 146], "input_dim": [81, 146], "input_dir": [140, 145], "input_featur": [84, 100], "input_feature_nam": [84, 100, 101, 103], "input_fil": [48, 67], "ins": 84, "insid": 141, "inspect": [142, 146], "instal": [139, 142], "instanc": [11, 18, 20, 30, 36, 38, 40, 42, 44, 46, 49, 54, 100, 105, 119, 121, 127, 129, 140, 141, 142, 146], "instanti": [7, 9, 129, 140, 141, 145], "instead": [20, 44, 46, 49, 54, 120, 142, 146], "int": [5, 7, 8, 9, 11, 13, 15, 24, 27, 35, 44, 46, 48, 49, 50, 51, 52, 54, 59, 61, 62, 63, 67, 80, 81, 82, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 118, 120, 121, 122, 124, 128, 131, 136, 140, 146], "integ": [58, 89, 91, 92, 120, 141, 142], "integer_primary_kei": 58, "integr": 146, "intend": [89, 107, 142], "interact": [112, 141, 142], "interaction_tim": [4, 112], "interaction_time_pr": 112, "interaction_typ": 4, "interchang": [142, 146], "interfac": [0, 128, 129, 142, 143, 144, 145], "interim": [7, 60, 61, 62, 63, 140], "intermedi": [0, 1, 3, 7, 11, 90, 142, 143], "intern": [3, 16, 38, 46, 50], "internal_parquet_read": [3, 47], "interpol": [104, 118], "interpret": 111, "interv": [80, 142, 146], "intract": 141, "introduc": 142, "intuit": [136, 146], "invers": 113, "invert": 113, "involv": 59, "io": [139, 142], "iop": 142, "iopscienc": 142, "is_boost_class": [32, 36], "is_boost_enum": [32, 36], "is_gcd_fil": [123, 134], "is_graphnet_class": [125, 130], "is_graphnet_modul": [125, 130], "is_i3_fil": [123, 134], "is_icecube_class": [32, 36], "is_method": [32, 36], "is_typ": [32, 36], "iseecub": [77, 114], "isinst": 140, "isn": 36, "issu": [142, 146], "iter": 11, "its": [36, 107, 141, 142, 146], "itself": [36, 113, 140, 142, 146], "iv": 120, "jacobian": 113, "job": 145, "join": [140, 142], "json": [33, 128, 141, 142], "just": [5, 82, 140, 141, 142, 146], "k": [81, 89, 91, 93, 98, 101, 107, 116, 120], "kaggl": [4, 80, 81, 85, 93, 95], "kappa": [112, 120], "kappa_switch": 120, "karg": [105, 108], "keep": [18, 20, 38, 40, 42, 103, 140], "kei": [11, 22, 33, 34, 36, 58, 63, 81, 82, 103, 119, 128, 129, 140, 141, 142, 145], "kept": 35, "key_padding_mask": 81, "keyword": [118, 126, 131], "kind": [120, 145], "km3net": [142, 146], "knn_graph_batch": [77, 116], "knnedg": [97, 98], "knngraph": [96, 101, 141, 142, 146], "know": 145, "known": 82, "kv": 81, "kwarg": [7, 8, 11, 13, 15, 35, 48, 50, 51, 52, 61, 78, 81, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 105, 107, 108, 109, 111, 112, 113, 115, 118, 120, 122, 126, 128, 129, 136], "l": [104, 116], "label": [1, 11, 15, 24, 27, 90, 100, 109, 113, 117, 121, 128], "lai": 142, "lambda": [105, 142, 146], "land": 142, "larg": [0, 89, 120, 141, 143], "larger": 140, "largest": 104, "last": [91, 107, 111, 112, 113, 118, 121, 146], "last_epoch": 118, "lastli": 145, "latent": [80, 89, 91, 93, 95, 107, 111, 112, 113, 115, 146], "latest": 142, "layer": [0, 77, 79, 82, 89, 90, 91, 92, 93, 95, 107, 111, 112, 113, 143], "layer_s": 81, "layer_size_scal": 92, "layernorm": 81, "ldot": [78, 82], "lead": [141, 142], "learn": [0, 1, 5, 61, 63, 72, 74, 111, 113, 118, 140, 142, 143, 144, 145, 146], "learnabl": [81, 88, 89, 90, 91, 92, 93, 94, 95, 107, 113, 115, 146], "learnedtask": [110, 113], "least": [13, 139, 141, 142], "len": [11, 13, 104, 140, 141], "length": [11, 13, 36, 103, 104, 116, 118], "less": [8, 121, 142, 146], "let": [142, 145, 146], "level": [0, 5, 11, 13, 15, 17, 30, 35, 42, 44, 46, 48, 49, 50, 51, 52, 54, 58, 61, 62, 65, 78, 82, 95, 136, 141, 142, 143, 145], "leverag": 1, "lex_sort": [96, 104], "liabil": 120, "liabl": 120, "lib": [85, 86, 87, 124], "licens": 120, "lift": 140, "light": 99, "lightn": [9, 118, 142, 146], "lightningdatamodul": 9, "lightningmodul": [80, 81, 105, 118, 136, 142, 146], "like": [18, 36, 82, 99, 113, 116, 120, 137, 139, 141, 142, 144, 146], "limit": [103, 120], "line": [118, 124, 140, 141, 145], "linear": [91, 146], "linearli": 118, "liquid": 86, "liquido": [3, 4, 16, 40, 51, 77, 83, 140], "liquido_read": [3, 47], "liquido_v1": [83, 86], "liquidoread": [47, 51, 140], "list": [5, 6, 7, 8, 9, 11, 13, 15, 17, 22, 30, 33, 35, 36, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 65, 67, 68, 72, 74, 78, 81, 82, 84, 89, 91, 93, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 113, 116, 118, 121, 122, 128, 130, 131, 134, 136, 140, 141, 145], "list_all_submodul": [125, 130], "ljvmiranda921": 139, "load": [0, 8, 11, 57, 68, 105, 108, 126, 128, 141, 142, 143, 145], "load_from_checkpoint": [142, 146], "load_modul": [10, 11, 105], "load_state_dict": [105, 108, 142, 146], "loaded_model": [142, 146], "local": [78, 85, 86, 87, 103, 124, 142, 144, 146], "lock": 13, "log": [0, 1, 112, 117, 118, 120, 123, 141, 142, 143, 146], "log10": [113, 122, 142, 146], "log_cmk": 120, "log_cmk_approx": 120, "log_cmk_exact": 120, "log_every_n_step": [109, 142, 146], "log_fold": [35, 48, 50, 51, 52, 61, 136], "log_model": [142, 146], "logcmk": [117, 120], "logcoshloss": [117, 120, 142, 146], "logger": [7, 9, 11, 18, 35, 48, 50, 51, 52, 59, 61, 67, 68, 98, 105, 109, 119, 122, 123, 136, 142, 146], "loggeradapt": 136, "logic": 141, "logit": [111, 120, 146], "logrecord": 136, "long": 141, "longev": [0, 143], "longtensor": [78, 82, 116], "look": [22, 141, 142], "lookup": 130, "loop": [142, 146], "loss": [11, 13, 15, 100, 109, 113, 118, 120, 124, 142, 146], "loss_funct": [1, 113, 117, 142, 146], "loss_weight": [100, 113, 142, 146], "loss_weight_column": [11, 13, 15, 100, 121, 128], "loss_weight_default_valu": [11, 13, 15, 100, 128], "loss_weight_t": [11, 13, 15, 121, 128], "lossfunct": [113, 117, 120, 142], "lot": 139, "lower": [0, 142, 143], "lr": [142, 146], "m": [99, 104, 120], "machin": 1, "made": [142, 146], "magnitud": [0, 143], "mai": [48, 59, 68, 103, 141, 142, 144, 146], "main": [1, 88, 100, 109, 139, 142], "mainli": 36, "major": 113, "make": [0, 7, 103, 122, 128, 129, 139, 140, 141, 142, 143, 145, 146], "make_dataload": [117, 121], "make_train_validation_dataload": [117, 121], "makedir": [142, 146], "manag": [0, 117, 140, 142, 143], "mandatori": 80, "mangl": 36, "mani": [63, 140, 142, 146], "manipul": [33, 96, 97, 102], "map": [7, 11, 13, 15, 21, 22, 58, 85, 86, 87, 100, 101, 113, 126, 128, 129, 131, 142, 145, 146], "mari": [0, 143], "martin": 90, "mask": [100, 116], "masked_entri": 116, "master": 120, "match": [48, 122, 134, 137, 140], "math": [1, 81, 123], "mathbb": 82, "mathbf": [78, 82], "matic": 113, "matric": 81, "matrix": [82, 98, 99, 116, 120, 141], "max": [78, 81, 91, 93, 120, 124, 142, 146], "max_activ": 103, "max_epoch": [109, 142, 146], "max_pool": [78, 82], "max_pool_x": [78, 82], "max_puls": 103, "max_rel_po": 115, "max_table_s": 63, "maximum": [63, 82, 103, 104, 113, 115, 124], "mc": [22, 58], "mc_truth": [18, 42, 141, 142], "mctree": [30, 34], "md": [100, 142], "mean": [0, 11, 13, 15, 77, 91, 93, 104, 120, 129, 140, 141, 142, 143, 146], "meaning": 80, "meant": [140, 142, 146], "measur": [103, 104, 116, 142, 145], "mechan": 81, "meet": 113, "member": [20, 22, 36, 48, 103, 128, 129, 136, 140, 145], "memori": [13, 141], "mention": 142, "merchant": 120, "merg": [7, 61, 62, 63, 120, 140, 141, 145], "merge_fil": [7, 61, 62, 63, 140, 145], "merged_database_nam": 63, "messag": [81, 118, 136, 142], "messagepass": 81, "metaclass": [128, 129], "metadata": [126, 128, 129, 131], "metaproject": 144, "meter": 142, "meth": 142, "method": [5, 7, 9, 11, 13, 15, 18, 20, 32, 33, 34, 36, 43, 44, 48, 53, 54, 61, 62, 63, 65, 68, 81, 82, 84, 104, 112, 120, 122, 140, 142, 146], "metric": [89, 91, 93, 99, 107, 118, 142, 146], "might": [141, 142, 146], "mileston": [118, 142, 146], "million": 63, "min": [78, 82, 91, 93, 142, 146], "min_pool": [78, 79, 82], "min_pool_x": [78, 79, 82], "mind": 142, "minh": 90, "mini": 121, "minim": [141, 142, 145, 146], "minimum": [103, 113], "minkowski": [96, 97], "minkowskiknnedg": [97, 99], "minu": 120, "mise": 120, "miss": 76, "mit": 120, "mix": 17, "ml": [0, 1, 143], "mlp": [79, 80, 81, 91, 95, 115, 146], "mlp_dim": [80, 115], "mlp_ratio": [81, 95], "mode": [109, 113], "model": [0, 1, 5, 66, 68, 72, 74, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 124, 126, 128, 129, 131, 138, 140, 141, 143, 144, 145], "model_computed_field": [126, 128, 129, 131], "model_config": [68, 72, 74, 123, 125, 126, 128, 131, 142, 146], "model_config_path": [142, 146], "model_field": [126, 128, 129, 131], "model_nam": [72, 74], "modelconfig": [68, 72, 74, 105, 125, 128, 129], "modelconfigsav": 129, "modelconfigsaverabc": [125, 129], "modelconfigsavermeta": [125, 129], "modif": [142, 146], "modifi": [120, 142, 146], "modul": [0, 3, 6, 7, 11, 16, 17, 36, 37, 39, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 63, 66, 67, 72, 76, 77, 80, 81, 83, 88, 96, 97, 99, 100, 101, 102, 105, 106, 110, 114, 117, 123, 125, 128, 129, 130, 131, 135, 140, 142, 143, 146], "modular": [0, 77, 140, 142, 143, 146], "moduletyp": 130, "mont": 34, "more": [1, 11, 13, 57, 58, 89, 105, 128, 129, 136, 141, 142, 146], "most": [0, 1, 59, 99, 113, 140, 143, 145, 146], "mryab": 120, "mseloss": [117, 120], "msg": 136, "multi": [81, 91], "multiclassclassificationtask": [110, 111, 142], "multiheadattent": 81, "multiindex": 145, "multipl": [11, 13, 15, 17, 80, 104, 118, 128, 136, 146], "multipli": [81, 118], "multiprocess": [7, 44, 46, 54, 140], "multiprocessing_context": 13, "muon": [24, 141, 146], "must": [13, 17, 48, 49, 58, 61, 78, 118, 122, 139, 140, 141, 142, 145], "my": [141, 142, 145], "my_custom_label": [141, 142], "my_databas": 63, "my_fil": [140, 145], "my_geometry_t": 145, "my_outdir": [140, 145], "my_tabl": 145, "mycustomlabel": [141, 142], "mydetector": 145, "myexperi": 145, "myextractor": 145, "mygraphnetmodel": 146, "mymodel": 146, "mypi": 139, "mypicklewrit": 140, "myread": 145, "n": [18, 78, 82, 99, 116, 120, 141, 142, 145], "n_1": 82, "n_b": 82, "n_cluster": 104, "n_event": [140, 145], "n_featur": [80, 95, 115], "n_freq": 80, "n_head": [81, 89, 93], "n_pmt": 104, "n_puls": [103, 145], "n_rel": 95, "n_worker": 67, "name": [4, 5, 7, 8, 11, 13, 15, 17, 18, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 33, 35, 36, 38, 40, 42, 44, 46, 48, 50, 51, 52, 54, 58, 61, 62, 63, 68, 72, 74, 84, 100, 101, 103, 107, 113, 119, 122, 124, 126, 128, 129, 130, 131, 136, 139, 140, 141, 142, 145, 146], "namespac": [4, 105, 128, 129], "nan": 104, "narg": 124, "nb_dom": 116, "nb_file": 7, "nb_input": [89, 90, 91, 92, 93, 94, 107, 111, 112, 113, 142, 146], "nb_intermedi": 90, "nb_nearest_neighbour": [98, 99, 101, 141, 142, 146], "nb_neighbor": 81, "nb_neighbour": [89, 91, 93, 107, 142, 146], "nb_output": [90, 92, 94, 103, 111, 112, 113, 142, 146], "nb_repeats_allow": 136, "ndarrai": [11, 13, 30, 100, 104, 122, 140], "nearest": [89, 91, 93, 98, 99, 101, 107, 116, 142, 146], "nearli": 146, "necessari": [0, 9, 33, 139, 143], "need": [0, 5, 9, 33, 63, 77, 80, 105, 107, 120, 133, 140, 141, 142, 143, 144, 145, 146], "negat": 82, "neighbour": [81, 89, 91, 93, 98, 99, 101, 107, 116, 142, 146], "nest": 33, "nester": 33, "network": [1, 81, 90, 106, 146], "neural": [1, 106, 146], "neutrino": [0, 1, 20, 42, 49, 81, 93, 95, 104, 115, 141, 142, 143, 145, 146], "new": [0, 1, 17, 81, 103, 126, 131, 139, 140, 142, 143, 146], "new_features_nam": 103, "new_phras": 133, "nfdi": [0, 143], "nn": [0, 77, 81, 98, 101, 143, 146], "no_weight_decai": 95, "node": [11, 13, 15, 77, 78, 82, 89, 90, 91, 93, 96, 97, 98, 100, 101, 107, 116, 141, 142, 146], "node_definit": [100, 101, 141, 142, 146], "node_feature_nam": [103, 141, 142, 146], "node_level": 121, "node_rnn": [77, 89, 106], "node_truth": [11, 13, 15, 121, 128], "node_truth_t": [11, 13, 15, 121, 128, 142], "nodeasdomtimeseri": [102, 103], "nodedefinit": [100, 101, 102, 103, 142, 146], "nodesaspuls": [100, 102, 103, 141, 142, 146], "nodetimernn": 107, "nois": [21, 34, 72, 142], "non": [9, 33, 36, 58, 89, 120, 142], "none": [5, 7, 8, 9, 11, 13, 15, 20, 22, 30, 34, 35, 36, 44, 46, 48, 49, 50, 51, 52, 54, 58, 59, 61, 62, 63, 65, 67, 68, 74, 81, 82, 89, 91, 93, 95, 99, 100, 101, 103, 104, 105, 107, 108, 109, 113, 118, 120, 121, 122, 124, 126, 127, 128, 130, 134, 136, 140, 141, 142, 145, 146], "nonetyp": 128, "noninfring": 120, "norm_lay": 81, "normal": [81, 91, 104, 113, 145], "normalizingflow": 113, "northeren": 24, "note": [11, 13, 15, 49, 62, 63, 104, 129, 142], "notebook": 139, "notic": [63, 116, 120], "notimplementederror": 140, "now": [142, 145, 146], "np": [122, 140], "null": [35, 58, 141, 142, 146], "nullspliti3filt": [32, 35, 44, 46, 49, 54], "num": 124, "num_class": 120, "num_edg": 141, "num_edge_featur": 141, "num_featur": 141, "num_head": [81, 115], "num_lay": [107, 115], "num_nod": 141, "num_puls": 103, "num_register_token": 115, "num_row": [100, 141], "num_work": [7, 8, 9, 46, 62, 121, 140, 141, 142, 145, 146], "number": [0, 5, 7, 11, 13, 15, 18, 44, 46, 54, 59, 62, 63, 67, 80, 81, 82, 89, 90, 91, 92, 93, 94, 95, 98, 99, 101, 103, 104, 107, 111, 112, 113, 115, 116, 118, 121, 122, 124, 140, 141, 142, 143, 145], "numer": [113, 145], "numpi": 104, "o": [0, 86, 113, 140, 142, 143, 144, 146], "obj": [33, 36, 130], "object": [4, 6, 11, 13, 15, 22, 33, 36, 78, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 105, 107, 108, 109, 111, 112, 113, 115, 118, 120, 121, 124, 126, 128, 129, 131, 136, 141, 142, 146], "observ": 145, "observatori": [20, 49], "obtain": [82, 120], "occur": [8, 121], "oerso": 92, "offer": 141, "offset": [103, 104], "ofintern": 37, "often": 141, "old_phras": 133, "om": [34, 36], "omit": 146, "on_fit_end": 118, "on_train_end": 108, "on_train_epoch_end": 118, "on_train_epoch_start": 118, "on_validation_end": 118, "onc": [136, 142, 144], "one": [11, 13, 20, 58, 72, 82, 128, 129, 134, 139, 140, 141, 142, 145, 146], "ones": 108, "onli": [0, 1, 11, 13, 15, 63, 77, 82, 89, 113, 122, 126, 129, 131, 135, 140, 141, 142, 143, 145, 146], "open": [0, 48, 139, 140, 141, 142, 143, 144, 145], "opensciencegrid": 144, "oper": [78, 81, 88, 91], "oppos": 141, "optic": [36, 104], "optim": [108, 109, 118, 142, 146], "optimis": [0, 1, 142, 143, 146], "optimizer_class": [142, 146], "optimizer_closur": 108, "optimizer_kwarg": [142, 146], "optimizer_step": 108, "option": [5, 7, 9, 11, 13, 15, 20, 30, 63, 65, 68, 74, 80, 81, 82, 89, 91, 93, 95, 99, 100, 101, 103, 104, 105, 107, 113, 118, 122, 123, 124, 126, 128, 134, 140, 141, 142, 145, 146], "orca": 87, "orca150": [83, 87, 146], "orca150superdens": [83, 87], "orca_150": 87, "order": [0, 33, 48, 67, 78, 103, 116, 142, 143], "ordinari": 146, "ordinarili": 145, "org": [98, 120, 142, 144], "orient": [0, 77, 143], "origin": [95, 141, 146], "other": [25, 58, 98, 120, 139, 141, 142, 146], "otherwis": [36, 120], "our": [142, 145], "out": [5, 11, 13, 91, 109, 110, 120, 136, 139, 140, 141, 142, 145, 146], "out_featur": 81, "outdir": [7, 44, 46, 54, 140, 142, 145, 146], "outer": 33, "outlin": [145, 146], "output": [18, 63, 67, 68, 80, 81, 89, 90, 91, 92, 94, 103, 104, 107, 109, 111, 112, 113, 122, 128, 129, 140, 145, 146], "output_dim": [80, 146], "output_dir": [61, 62, 63, 140], "output_fil": 7, "output_file_path": 140, "output_fold": [6, 67], "outsid": [65, 139], "over": [99, 103, 140, 141], "overhead": 145, "overrid": [9, 118], "overridden": 103, "overview": [0, 143], "overwrit": [68, 118], "overwritten": [48, 124, 126], "own": [139, 142], "ownership": 139, "p": [34, 120, 140], "p11003": 142, "packag": [0, 1, 57, 130, 134, 135, 139, 142, 143, 146], "pad": [100, 104, 116], "padding_valu": [24, 27, 116], "pair": [20, 44, 46, 49, 54, 80], "pairwis": [99, 116], "pairwise_shuffl": [55, 57], "panda": [59, 122, 140, 142, 145, 146], "paper": 120, "paradigm": [142, 146], "parallel": [7, 44, 46, 54, 140, 145], "param": [38, 40, 42], "paramet": [5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 65, 67, 68, 72, 74, 78, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137], "parent": [33, 142], "parent_kei": 33, "parquet": [1, 3, 5, 10, 13, 38, 41, 42, 44, 46, 50, 52, 54, 56, 62, 65, 85, 86, 87, 140, 141, 142, 145], "parquet_dataset": [10, 12], "parquet_extractor": [16, 37], "parquet_to_sqlit": [3, 55], "parquet_writ": [3, 60], "parquetdataconvert": [43, 44], "parquetdataset": [9, 12, 13, 140, 142], "parquetextractor": [7, 37, 38, 40, 46, 48], "parquetread": [47, 50], "parquettosqliteconvert": [45, 46], "parquetwrit": [13, 38, 46, 60, 62, 140, 141, 145], "pars": [22, 123, 124, 125, 126, 131, 140], "parse_graph_definit": [10, 11], "parse_label": [10, 11], "part": [140, 142, 144, 145], "particl": [30, 58, 119, 141, 142, 145], "particular": [120, 139], "particularli": [141, 142, 146], "partit": 63, "partli": [0, 143], "pass": [11, 15, 80, 81, 89, 90, 91, 92, 93, 94, 95, 100, 107, 109, 113, 115, 118, 120, 122, 139, 140, 141, 142, 145, 146], "path": [5, 11, 13, 15, 20, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 63, 67, 72, 74, 81, 100, 105, 108, 118, 121, 124, 126, 127, 128, 134, 140, 141, 142, 145, 146], "path_to_arrai": 145, "path_to_geometry_t": 145, "patienc": 124, "pd": [140, 142, 145], "pdf": 98, "peopl": [142, 146], "pep257": 139, "pep8": 139, "per": [11, 13, 15, 22, 58, 81, 82, 89, 107, 113, 120, 122, 141, 142], "percentil": [103, 104], "percentileclust": [102, 103], "perceptron": [81, 91], "perform": [0, 9, 78, 80, 81, 82, 88, 89, 91, 93, 103, 107, 108, 109, 111, 113, 121, 142, 143, 146], "permiss": 120, "permit": 120, "persistent_work": [8, 121], "person": [5, 120], "perturb": [100, 101], "perturbation_dict": [100, 101], "pframe": [44, 46, 49, 54], "philosophi": [142, 146], "photon": [42, 141, 142], "phrase": 133, "phyic": 1, "physic": [0, 1, 20, 34, 36, 66, 72, 74, 77, 110, 113, 141, 142, 143, 146], "physicist": [0, 1, 142, 143], "physicst": 1, "pick": 141, "pickl": [140, 142, 145, 146], "pid": [4, 59, 128, 141], "piecewiselinearlr": [117, 118, 142, 146], "pip": [139, 144], "pisa": 26, "place": [80, 95, 133, 139], "plai": 1, "plane": [23, 120], "pleas": [140, 141, 142, 145], "plot": 141, "plug": 1, "pmt": [82, 104, 141, 142], "pmt_area": 4, "pmt_dir_i": 4, "pmt_dir_x": 4, "pmt_dir_z": 4, "pmt_number": 4, "point": [5, 29, 119, 120, 121, 142, 145, 146], "pole": [93, 95], "pool": [7, 77, 78, 79, 89, 91, 93], "pop_default": 124, "popular": 146, "port": 142, "portabl": [0, 142, 143, 146], "portion": 120, "pos_x": 142, "posit": [72, 80, 81, 82, 95, 104, 112, 115, 126, 131, 141, 145], "position_i": 4, "position_x": 4, "position_x_pr": 112, "position_y_pr": 112, "position_z": 4, "position_z_pr": 112, "positionreconstruct": [110, 112], "possibl": [0, 33, 63, 139, 143, 145], "post": [89, 91, 93], "post_processing_layer_s": [89, 91, 93, 142, 146], "pow": [142, 146], "power": [140, 142, 146], "pr": 107, "practic": [0, 139, 143], "pre": [0, 5, 45, 46, 64, 84, 100, 119, 139, 141, 142, 143, 146], "pre_configur": [1, 3, 46], "precis": 120, "precommit": 139, "preconfigur": 46, "pred": [109, 113], "predict": [0, 9, 25, 29, 31, 72, 74, 90, 95, 109, 111, 113, 120, 121, 142, 143, 146], "predict_as_datafram": [109, 142, 146], "prediction_column": [68, 74, 109, 121], "prediction_label": [109, 113, 142, 146], "prefer": 99, "prefetch_factor": 8, "prepar": [0, 5, 9, 120, 141, 143], "prepare_data": [5, 9], "preprocess": 142, "present": [11, 13, 20, 35, 116, 124, 134, 135, 141, 146], "previou": [118, 142, 146], "primari": [58, 63, 141, 142], "primary_hadron_1_direction_phi": [4, 141, 142], "primary_hadron_1_direction_theta": [4, 141, 142], "primary_hadron_1_energi": [4, 141, 142], "primary_hadron_1_position_i": [4, 141, 142], "primary_hadron_1_position_x": [4, 141, 142], "primary_hadron_1_position_z": [4, 141, 142], "primary_hadron_1_typ": [4, 141, 142], "primary_key_rescu": 63, "primary_lepton_1_direction_phi": [4, 141, 142], "primary_lepton_1_direction_theta": [4, 141, 142], "primary_lepton_1_energi": [4, 141, 142], "primary_lepton_1_position_i": [4, 141, 142], "primary_lepton_1_position_x": [4, 141, 142], "primary_lepton_1_position_z": [4, 141, 142], "primary_lepton_1_typ": [4, 141, 142], "principl": [1, 142], "print": [5, 105, 118, 136], "prior": 141, "prioriti": 139, "privat": 122, "pro": [142, 146], "probabl": [81, 120, 146], "problem": [0, 98, 139, 141, 142, 143, 146], "procedur": 9, "proceedur": 63, "process": [1, 7, 44, 46, 54, 72, 80, 84, 89, 91, 93, 139, 140, 142, 146], "process_posit": 118, "produc": [5, 48, 80, 119, 122, 141, 142], "product": [8, 81, 121], "programm": [0, 143], "progress": 118, "progressbar": [117, 118, 142, 146], "proj_drop": 81, "project": [0, 52, 81, 139, 142, 143, 146], "prometheu": [3, 4, 16, 42, 52, 77, 83, 141, 142, 146], "prometheus_extractor": [16, 41], "prometheus_read": [3, 47], "prometheusextractor": [7, 41, 42, 48], "prometheusfeatureextractor": [41, 42], "prometheusread": [47, 52], "prometheustruthextractor": [41, 42], "prompt": 142, "prone": 142, "proof": [142, 146], "properti": [5, 9, 11, 18, 25, 36, 48, 61, 82, 84, 94, 103, 104, 109, 113, 119, 127, 136, 140], "protocol": 140, "prototyp": 86, "proven": [18, 20, 38, 40, 42, 140], "provid": [0, 1, 7, 11, 13, 15, 72, 77, 95, 100, 105, 120, 139, 140, 141, 142, 143, 146], "pth": [142, 146], "public": [84, 122], "publish": [120, 142, 146], "puls": [5, 11, 13, 15, 17, 21, 22, 34, 36, 42, 58, 72, 78, 82, 95, 100, 103, 104, 115, 116, 141, 142, 145, 146], "pulse_truth": 5, "pulsemap": [5, 11, 13, 15, 21, 65, 72, 74, 121, 128, 141, 142], "pulsemap_extractor": [72, 74], "pulseseri": 34, "pulsmap": [72, 74], "punch4nfdi": [0, 143], "pure": [7, 18, 19, 22, 36], "purpos": [0, 77, 120, 143, 145], "put": [63, 142, 146], "py": [120, 142], "py3": 144, "pydant": [126, 128, 129, 131], "pydantic_cor": [126, 131], "pydocstyl": 139, "pyg": [141, 142, 146], "pylint": 139, "python": [0, 1, 7, 18, 19, 22, 33, 36, 139, 142, 143, 144, 146], "python3": [85, 86, 87, 124], "pytorch": [15, 118, 142, 144, 146], "pytorch_lightn": [109, 118, 136, 142, 146], "pytorchlightn": 142, "q": 81, "qk_scale": 81, "qkv_bia": 81, "qualiti": [0, 142, 143], "quantiti": [26, 113, 116, 142], "queri": [11, 13, 15, 58, 59, 63, 81, 141, 142], "query_databas": [55, 58], "query_t": [11, 13, 15, 141], "queso": 27, "question": 142, "quick": 142, "r": [82, 98, 140, 142, 144, 145], "radial": 98, "radialedg": [97, 98], "radiat": [103, 104, 142, 146], "radiu": [98, 142], "rais": [11, 13, 20, 22, 105, 126, 131, 140], "random": [3, 11, 13, 15, 55, 59, 62, 103, 128, 141, 142], "randomli": [59, 100, 101, 129, 142, 146], "rang": [113, 143, 145, 146], "rare": 140, "rasmu": [0, 92, 143], "rate": 118, "rather": [113, 136, 142, 146], "ratio": [9, 81, 95], "raw": [0, 103, 104, 141, 142, 143, 145, 146], "rde": 4, "re": [127, 141, 142, 145, 146], "reach": [141, 145], "read": [0, 3, 7, 11, 13, 15, 33, 47, 49, 50, 51, 52, 84, 91, 109, 110, 140, 141, 142, 143, 145], "read_csv": 145, "read_sql": 142, "readabl": 142, "reader": [1, 3, 46, 48, 49, 50, 51, 52, 145], "readi": [64, 145, 146], "readm": 142, "readout": [89, 91, 93], "readout_layer_s": [89, 91, 93, 142, 146], "readthedoc": 142, "receiv": [0, 143, 146], "reciev": [61, 140, 145, 146], "recommend": [142, 144, 145, 146], "reconstruct": [0, 1, 21, 23, 24, 28, 29, 31, 66, 77, 93, 95, 107, 110, 113, 141, 142, 143], "record": 136, "recov": 113, "recreat": [141, 142, 146], "recurr": 106, "recurs": [22, 36, 44, 46, 48, 49, 54, 105, 130, 134], "reduc": [142, 146], "reduce_opt": 78, "refer": [9, 87, 128, 141, 142, 145, 146], "refresh_r": 118, "regardless": [141, 142, 146], "regist": 115, "regular": [36, 81, 142, 146], "rel": [81, 95, 115], "rel_pos_bia": 81, "rel_pos_bucket": 115, "relat": [57, 134, 145], "relev": [1, 36, 57, 134, 139], "reli": 49, "reload": 146, "remain": 141, "remov": [8, 44, 54, 100, 121, 124, 145], "renam": 133, "rename_state_dict_entri": [123, 133], "repeat": 136, "repeatfilt": [123, 136], "replac": [126, 128, 129, 131, 133], "repo": 139, "repositori": 139, "repres": [82, 89, 100, 101, 103, 104, 116, 126, 128, 129, 140, 141, 142, 145, 146], "represent": [5, 11, 13, 15, 36, 65, 80, 81, 82, 101, 105, 107, 141, 142, 145, 146], "reproduc": [128, 129, 146], "repurpos": 146, "requir": [0, 20, 26, 38, 42, 58, 103, 111, 120, 128, 129, 131, 139, 140, 141, 142, 143, 144, 145, 146], "requires_icecub": [123, 135], "research": [0, 142, 143], "reset": 81, "reset_paramet": 81, "resolv": [11, 13, 15, 59], "respect": [121, 142, 145], "respons": [141, 142], "restrict": [113, 120, 146], "result": [58, 62, 82, 104, 118, 120, 121, 130, 142, 145, 146], "retriev": [84, 140, 141], "retro": 28, "return": [5, 7, 8, 9, 11, 13, 15, 17, 18, 20, 33, 34, 36, 48, 49, 50, 51, 52, 57, 58, 59, 61, 62, 63, 67, 78, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 140, 141, 142, 145, 146], "return_discard": 36, "return_el": 120, "reusabl": [0, 143], "reuseabl": [142, 146], "review": 139, "rhel_7_x86_64": 144, "right": [120, 142], "rmseloss": [117, 120], "rng": 57, "rnn": [1, 77, 89, 107], "rnn_dropout": 89, "rnn_dynedg": 89, "rnn_hidden_s": 89, "rnn_layer": 89, "rnn_tito": [77, 88], "role": 146, "root": 120, "roughli": 141, "row": [58, 63, 104, 116, 141, 142, 145, 146], "run": [1, 49, 67, 140, 142, 144, 145, 146], "run_sql_cod": [55, 58], "runner": [85, 86, 87, 124], "runtim": [119, 144], "runtimeerror": 20, "ryabinin": 120, "sai": [142, 146], "same": [17, 36, 58, 78, 82, 104, 111, 116, 118, 130, 136, 141, 142, 146], "sampl": [59, 81, 100, 101, 103, 113, 142, 146], "satisfi": [0, 140, 143], "save": [7, 18, 20, 33, 38, 40, 42, 44, 46, 54, 58, 60, 61, 63, 105, 118, 120, 121, 122, 126, 127, 128, 129, 140, 142, 145], "save_config": [127, 142, 146], "save_dataset_config": [125, 128], "save_dir": [118, 142, 146], "save_fil": [61, 140], "save_method": [7, 140, 145], "save_model_config": [125, 129], "save_result": [117, 121], "save_select": [117, 121], "save_state_dict": [105, 142, 146], "save_to_sql": [55, 58], "scalabl": 141, "scalar": [11, 13, 18, 116, 120], "scale": [80, 81, 92, 95, 99, 100, 103, 104, 113, 115, 120, 141, 146], "scaled_emb": [95, 115], "scatter": [103, 104], "scheduler_class": [142, 146], "scheduler_config": [142, 146], "scheduler_kwarg": [142, 146], "schema": 142, "scheme": [89, 91, 93, 140], "scientif": [0, 1, 143], "scope": 139, "script": [142, 146], "search": [44, 46, 48, 49, 50, 51, 52, 54, 134, 140], "sec": 120, "second": 99, "section": 142, "see": [80, 89, 98, 100, 118, 139, 141, 142, 144], "seed": [9, 11, 13, 15, 59, 100, 101, 121, 128, 141, 142], "seen": 80, "select": [5, 8, 9, 11, 13, 15, 27, 59, 121, 122, 128, 139, 142, 145], "selection_nam": 8, "self": [11, 13, 100, 126, 131, 140, 141, 142, 145, 146], "sell": 120, "send": 113, "sensor": [84, 100, 141, 142, 145, 146], "sensor_i": 145, "sensor_id": [85, 87, 145], "sensor_id_column": [85, 86, 87, 145], "sensor_index_nam": 84, "sensor_mask": 100, "sensor_pos_i": [4, 87, 141, 142, 146], "sensor_pos_x": [4, 87, 141, 142, 146], "sensor_pos_z": [4, 87, 141, 142, 146], "sensor_position_nam": 84, "sensor_string_id": 87, "sensor_tim": 145, "sensor_x": [141, 145], "sensor_z": 145, "separ": [33, 99, 118, 142, 144], "seper": [107, 141], "seq_length": [80, 95, 115, 116], "sequenc": [67, 80, 81, 104, 116, 121, 142, 146], "sequenti": [11, 13], "sequential_index": [11, 13, 15], "seri": [11, 13, 15, 21, 22, 34, 36, 58, 72, 89, 103, 107, 141, 142, 146], "serial": [140, 141], "serialis": [32, 33, 142, 146], "serv": 141, "session": [128, 129, 141, 142, 146], "set": [3, 6, 9, 13, 20, 22, 44, 46, 48, 49, 54, 61, 80, 81, 95, 103, 104, 105, 113, 121, 139, 140, 142, 145, 146], "set_extractor": 48, "set_gcd": 20, "set_index": 145, "set_number_of_input": 103, "set_output_feature_nam": 103, "set_verbose_print_recurs": 105, "setlevel": 136, "setup": [9, 118, 144], "setuptool": 144, "sever": [142, 146], "sh": 144, "shall": 120, "shape": [18, 99, 100, 103, 116, 120, 140, 141], "share": [109, 142, 146], "share_redirect": 5, "shared_step": 109, "sharelink": 5, "shell": 144, "should": [8, 11, 13, 15, 18, 20, 33, 59, 65, 68, 81, 82, 89, 95, 100, 101, 107, 116, 120, 121, 126, 128, 129, 131, 139, 140, 141, 142, 144, 145, 146], "show": [59, 118, 142], "shown": 142, "shuffl": [8, 9, 57, 62, 121, 141], "shutdown": 9, "sid": 5, "sigmoid": 146, "sign": 120, "signal": [72, 146], "signatur": [22, 36], "signific": 141, "significantli": 141, "signup": 142, "similar": [22, 36, 103, 142, 146], "similarli": [36, 140, 141, 142, 146], "simpl": [0, 77, 142, 143, 146], "simplecoarsen": 78, "simplest": [142, 146], "simpli": [142, 146], "simul": [34, 42, 52, 72, 142, 145], "sinc": [72, 120, 142], "singl": [5, 11, 17, 61, 63, 82, 91, 104, 119, 128, 129, 140, 141, 142, 145, 146], "sinusoid": [80, 95, 115], "sinusoidalposemb": [79, 80], "sipm_i": [4, 86], "sipm_id": 86, "sipm_x": [4, 86], "sipm_z": [4, 86], "situat": 139, "size": [63, 80, 81, 82, 89, 91, 92, 93, 95, 116, 124, 141], "skip": [35, 91, 142], "skip_readout": 91, "sklearn": [142, 146], "sk\u0142odowska": [0, 143], "slack": 142, "slice": [81, 91], "slower": 63, "small": [120, 141, 142, 146], "smaller": [61, 140], "smooth": 139, "snippet": [142, 146], "so": [120, 141, 142, 144, 145, 146], "soft": 80, "softmax": 120, "softwar": [0, 49, 120, 143], "solut": [80, 81, 93, 95, 139], "solv": [1, 139, 146], "some": [11, 13, 15, 44, 46, 49, 54, 100, 104, 141, 142], "someth": [142, 146], "somewhat": 142, "sort": [100, 104], "sort_bi": 100, "sota": 5, "sourc": [0, 4, 5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 65, 67, 68, 72, 74, 76, 78, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 141, 142, 143], "south": [93, 95], "space": [80, 98, 99, 113, 122], "space_coord": 99, "spacetim": 80, "spacetimeencod": [79, 80], "sparsetensor": 81, "spatial": 104, "spawn": 13, "special": [22, 72, 107, 116], "specialis": [142, 146], "specif": [0, 1, 3, 5, 6, 7, 11, 13, 15, 16, 18, 21, 36, 47, 48, 49, 58, 63, 66, 68, 76, 78, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98, 100, 103, 106, 109, 110, 111, 112, 113, 114, 120, 139, 140, 141, 142, 143, 145, 146], "specifi": [11, 13, 15, 59, 78, 104, 113, 118, 141, 142, 145, 146], "speed": [72, 99, 141], "sphere": 98, "spite": 120, "splinemp": 29, "split": [0, 9, 35, 63, 78, 143], "split_se": 9, "splitinicepuls": 58, "sql": 122, "sqlite": [1, 3, 5, 9, 10, 15, 46, 54, 56, 58, 63, 65, 141, 142], "sqlite3": 142, "sqlite_dataset": [10, 14], "sqlite_util": [3, 55], "sqlite_writ": [3, 60], "sqlitedataconvert": [53, 54], "sqlitedatas": 141, "sqlitedataset": [9, 14, 15, 140], "sqlitewrit": [60, 63, 140, 141], "squar": 120, "src": 142, "stabl": [112, 113], "stage": [9, 118], "standalon": 107, "standard": [0, 3, 4, 35, 59, 68, 85, 86, 87, 89, 100, 101, 103, 108, 109, 113, 124, 139, 142, 143, 145, 146], "standard_argu": 124, "standard_averaged_model": [1, 77], "standard_model": [1, 77, 142], "standardaveragedmodel": [77, 108], "standardaveragemodel": 108, "standardflowtask": [110, 113], "standardis": 83, "standardlearnedtask": [110, 111, 112, 113, 146], "standardmodel": [77, 108, 109], "start": [30, 139, 142, 145, 146], "state": [0, 68, 89, 107, 133, 143], "state_dict": [68, 72, 74, 105, 108, 133, 142], "static": [120, 139], "std": 82, "std_pool": [79, 82], "std_pool_x": [79, 82], "stdout": 118, "step": [108, 109, 116, 118, 142, 145, 146], "still": 128, "stochast": 81, "stop": [30, 118, 124], "stopped_muon": 4, "store": [11, 13, 15, 58, 61, 62, 63, 119, 140, 141, 142, 145, 146], "str": [5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 65, 67, 68, 72, 74, 81, 82, 84, 85, 86, 87, 89, 91, 93, 95, 100, 101, 103, 104, 105, 108, 109, 113, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 133, 134, 136, 140, 145], "straightforward": 141, "strategi": [142, 146], "stream_handl": 136, "streamhandl": 136, "streamlin": 1, "string": [4, 5, 11, 13, 15, 33, 59, 82, 84, 85, 100, 105, 126, 142, 145, 146], "string_id": 145, "string_id_column": [85, 86, 87, 145], "string_index_nam": 84, "string_mask": 100, "string_select": [11, 13, 15, 121, 128], "string_selection_resolv": [3, 55], "stringselectionresolv": [55, 59], "strongli": [142, 146], "structur": [130, 140, 141, 142, 146], "style": 139, "sub": 142, "subclass": [0, 5, 77, 140, 141, 142, 143, 146], "subfold": [44, 46, 49, 54], "subject": [95, 120], "sublicens": 120, "submodul": [1, 3, 10, 12, 14, 16, 19, 32, 37, 39, 41, 43, 45, 47, 53, 55, 60, 64, 66, 69, 71, 75, 77, 79, 83, 88, 96, 97, 102, 106, 110, 114, 117, 123, 125, 130], "subpackag": [1, 3, 10, 16, 19, 66, 77, 96, 123], "subsampl": [62, 141], "subsequ": 142, "subset": [11, 13, 15, 81, 89, 91, 93, 107, 142], "substanti": 120, "suggest": [120, 142], "suit": [0, 113, 142, 143], "suitabl": [1, 145], "sum": [78, 82, 91, 93, 109, 122, 142, 146], "sum_pool": [78, 79, 82], "sum_pool_and_distribut": [79, 82], "sum_pool_x": [78, 79, 82], "summar": [72, 74, 103, 104], "summari": [103, 104], "summaris": [142, 146], "summariz": 146, "summarization_indic": 104, "super": [140, 141, 142, 146], "supervis": [113, 146], "support": [0, 7, 36, 139, 140, 141, 142, 143], "suppos": [5, 104, 141, 145], "sure": [139, 140], "swa": 108, "swapabl": 142, "switch": [120, 142, 146], "synchron": 7, "syntax": [59, 120, 141, 142], "system": [134, 142, 146], "t": [4, 36, 58, 118, 120, 140, 141, 142, 145, 146], "t_co": 8, "tabl": [5, 11, 13, 15, 17, 18, 20, 38, 40, 42, 48, 58, 62, 63, 84, 100, 122, 140, 141, 142], "table_nam": [42, 58], "table_without_index": 145, "tackl": 146, "tag": [121, 139], "take": [36, 82, 104, 107, 139, 141], "talk": 142, "tar": 5, "target": [109, 111, 113, 120, 131, 142, 146], "target_label": [109, 113, 142, 146], "target_pr": [111, 146], "task": [0, 1, 9, 77, 109, 111, 112, 120, 139, 142, 143], "team": [100, 139, 141, 142, 144, 145, 146], "teardown": 9, "technic": [0, 143, 145], "techniqu": [0, 143, 146], "telescop": [0, 1, 142, 143, 145, 146], "tend": 63, "tensor": [11, 13, 15, 68, 78, 80, 81, 82, 84, 89, 90, 91, 92, 93, 94, 95, 99, 103, 107, 108, 109, 113, 115, 116, 120, 133, 137, 141, 142, 145, 146], "term": [81, 120, 146], "termin": 142, "test": [5, 9, 59, 65, 113, 121, 128, 135, 139, 141, 142, 146], "test_dataload": 9, "test_dataloader_kwarg": [5, 9, 65], "test_dataset": [1, 64], "test_funct": 135, "test_select": [9, 128, 141, 142], "test_siz": 121, "testdataset": [64, 65], "than": [0, 8, 113, 121, 136, 141, 142, 143, 146], "thei": [67, 140, 141, 142, 146], "them": [0, 1, 33, 68, 77, 91, 113, 141, 142, 143, 145, 146], "themselv": [1, 128, 129, 142, 146], "therebi": [1, 128, 129, 142, 146], "therefor": [33, 49, 140, 141, 142, 145, 146], "thi": [0, 3, 5, 7, 9, 11, 13, 15, 17, 18, 20, 22, 36, 38, 40, 42, 44, 46, 48, 49, 54, 57, 58, 62, 63, 65, 72, 77, 80, 82, 89, 91, 95, 99, 100, 101, 103, 104, 107, 109, 111, 112, 113, 116, 118, 120, 121, 122, 126, 128, 129, 131, 136, 139, 140, 141, 142, 143, 144, 145, 146], "thing": 142, "those": [20, 141, 142], "thread": 13, "three": [104, 120, 146], "threshold": [0, 72, 143], "through": [0, 111, 112, 113, 120, 140, 142, 143, 146], "throw": 140, "thu": [129, 146], "ti": 141, "time": [0, 4, 58, 78, 80, 82, 89, 99, 103, 104, 107, 112, 116, 136, 141, 142, 143, 145], "time_column": 103, "time_coord": 99, "time_lik": 99, "time_like_weight": 99, "time_series_column": [89, 107], "time_window": 78, "timereconstruct": [110, 112], "tini": 142, "tito": [81, 89, 93], "to_config": 146, "to_csv": [142, 146], "to_parquet": 145, "todo": 142, "togeth": [0, 77, 98, 109, 143], "token": 115, "too": [142, 146], "tool": [0, 1, 143], "top": 146, "torch": [0, 11, 13, 15, 77, 81, 100, 101, 105, 135, 141, 142, 143, 144, 145, 146], "torch_cpu": 144, "torch_geometr": [82, 116, 141, 142, 146], "torch_lightn": 146, "tort": 120, "total": [116, 121, 122, 141, 142, 145], "total_energi": [4, 141, 142, 146], "tqdmprogressbar": 118, "track": [0, 18, 20, 24, 38, 40, 42, 112, 139, 140, 142, 143], "tradit": [0, 143], "train": [0, 1, 5, 7, 9, 10, 59, 64, 65, 66, 72, 81, 95, 100, 108, 109, 116, 118, 119, 120, 121, 122, 124, 128, 129, 131, 138, 140, 141, 142, 143, 145], "train_batch": [108, 109], "train_dataload": [9, 109, 142, 146], "train_dataloader_kwarg": [5, 9, 65], "train_ev": 113, "train_select": [128, 141, 142], "train_val_split": 9, "trainabl": 129, "trainer": [109, 118, 121, 142, 146], "trainer_kwarg": 109, "training_config": [123, 125, 142, 146], "training_example_data_sqlit": [124, 141, 142, 146], "training_step": [108, 109], "trainingconfig": [125, 131, 142, 146], "transform": [1, 77, 81, 82, 93, 95, 107, 113, 115, 122, 142, 146], "transform_infer": [113, 142, 146], "transform_prediction_and_target": [113, 142, 146], "transform_support": [113, 142, 146], "transform_target": [113, 142, 146], "transit": 133, "transpar": [128, 129, 139, 142, 146], "transpos": 33, "transpose_list_of_dict": [32, 33], "traverse_and_appli": [125, 130], "treat": [89, 107], "tree": [22, 142], "tri": [22, 36], "trident": 87, "trident1211": [83, 87], "trigger": [22, 141, 142, 146], "trivial": [36, 113], "true": [35, 58, 72, 89, 91, 93, 95, 100, 103, 105, 118, 120, 122, 128, 129, 131, 134, 140, 141, 142, 146], "trust": [105, 142, 146], "truth": [3, 4, 5, 11, 13, 15, 21, 30, 42, 58, 62, 65, 100, 113, 121, 122, 128, 141, 145, 146], "truth_dict": 100, "truth_label": 141, "truth_tabl": [5, 11, 13, 15, 62, 121, 122, 128, 141, 142], "truthdata": 40, "try": [36, 140], "tum": [24, 31], "tupl": [7, 11, 13, 15, 34, 36, 58, 81, 89, 91, 93, 104, 113, 116, 121, 124, 133], "turn": [104, 139], "tutorial_output": [142, 146], "two": [8, 91, 118, 120, 121, 140, 141, 142, 145], "txt": 144, "type": [0, 5, 7, 8, 9, 11, 13, 15, 19, 20, 32, 33, 34, 40, 42, 48, 49, 50, 51, 52, 57, 58, 59, 61, 62, 63, 67, 78, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 118, 120, 121, 122, 124, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145], "typic": [0, 33, 107, 141, 143, 145], "u": [141, 145], "ultra": 141, "unaccur": 120, "unambigu": [128, 129], "unbatch_edge_index": [77, 78], "uncertainti": [112, 142, 146], "uncompress": 141, "under": [0, 142, 143, 145, 146], "unfamiliar": 146, "uniform": [117, 122], "uniformweightfitt": 122, "union": [0, 7, 8, 9, 11, 13, 15, 22, 33, 36, 44, 46, 48, 49, 50, 51, 52, 54, 67, 68, 72, 74, 78, 81, 82, 89, 91, 100, 101, 109, 113, 128, 131, 134, 140, 143, 145], "uniqu": [11, 13, 15, 58, 103, 116, 128, 142, 145, 146], "unit": [0, 7, 65, 99, 135, 139, 143], "univers": [93, 95], "unlik": 141, "unscal": 146, "untransform": 111, "up": [0, 72, 139, 143], "updat": [107, 108, 116, 118, 142, 144, 146], "upgrad": [4, 21, 85, 142, 144], "upon": 146, "us": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 25, 30, 32, 33, 38, 40, 42, 44, 46, 48, 49, 53, 54, 55, 58, 59, 61, 62, 63, 65, 66, 68, 72, 74, 77, 80, 81, 82, 84, 89, 91, 92, 93, 95, 98, 100, 101, 103, 104, 105, 107, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 122, 123, 124, 125, 128, 129, 130, 135, 136, 139, 140, 143, 144, 145], "usabl": [0, 143], "usag": 124, "use_cach": 59, "use_global_featur": [89, 93], "use_post_processing_lay": [89, 93], "user": [0, 5, 77, 118, 141, 142, 143, 144, 146], "usual": 141, "util": [1, 3, 16, 19, 33, 34, 35, 36, 56, 57, 58, 59, 77, 96, 117, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 144, 146], "v": 81, "v1": [126, 128, 129, 131, 144], "v4": 144, "val_batch": [108, 109], "val_dataload": [9, 109], "valid": [5, 9, 36, 59, 65, 108, 109, 113, 118, 120, 124, 126, 131, 141, 142, 146], "validate_fil": 48, "validation_dataloader_kwarg": [5, 9, 65], "validation_step": [108, 109], "validationerror": [126, 131], "valu": [11, 13, 15, 30, 33, 58, 81, 82, 99, 100, 101, 116, 119, 120, 124, 126, 146], "valueerror": [22, 105], "var": 112, "var1": 18, "var_n": 18, "variabl": [18, 20, 22, 36, 48, 91, 103, 104, 116, 122, 136, 140, 145, 146], "varieti": 142, "variou": [1, 60, 142], "vast": 113, "vector": [78, 81, 82, 120, 140, 146], "verbos": [44, 46, 49, 54, 109, 118], "verbose_print": 105, "veri": [59, 141, 142, 146], "versa": 118, "version": [82, 104, 113, 118, 139, 142, 146], "vertex": [112, 142], "vertex_i": 4, "vertex_x": 4, "vertex_z": 4, "vertexreconstruct": [110, 112], "viabl": 145, "vice": 118, "virtual": 144, "visit": 145, "vmf": 112, "vmf_loss": 120, "volum": 30, "von": 120, "vonmisesfisher2dloss": [117, 120, 142, 146], "vonmisesfisher3dloss": [117, 120], "vonmisesfisherloss": [117, 120], "w": [142, 146], "wa": [0, 7, 141, 142, 143, 145, 146], "wai": [36, 59, 139, 142, 145, 146], "wandb": [142, 146], "wandb_dir": [142, 146], "wandb_logg": [142, 146], "wandblogg": [142, 146], "want": [141, 142, 144, 145, 146], "warn": [136, 142], "warning_onc": [136, 142], "warranti": 120, "waterdemo81": [83, 87], "wb": 140, "we": [33, 36, 59, 104, 139, 142, 144, 145, 146], "weight": [11, 13, 15, 72, 74, 81, 95, 100, 113, 120, 122, 129, 142, 146], "weight_fit": [1, 117], "weight_nam": 122, "weightfitt": [117, 122], "well": [139, 142, 146], "what": [1, 80, 100, 139, 142, 146], "whatev": 142, "wheel": 144, "when": [0, 11, 13, 15, 33, 35, 58, 72, 81, 89, 91, 93, 107, 119, 136, 139, 140, 141, 142, 143, 144, 145, 146], "whenev": 144, "where": [18, 44, 46, 49, 54, 100, 101, 103, 104, 107, 116, 119, 140, 141, 142, 145, 146], "wherea": [122, 141], "whether": [8, 34, 36, 58, 80, 81, 89, 91, 93, 95, 105, 115, 120, 130, 134, 135, 142], "which": [0, 5, 11, 13, 15, 18, 20, 21, 30, 34, 38, 40, 42, 59, 61, 63, 67, 78, 82, 91, 100, 101, 104, 105, 111, 116, 120, 121, 124, 140, 141, 142, 143, 146], "while": [0, 22, 118, 139, 141, 143], "who": [5, 133, 142, 146], "whom": 120, "whose": 72, "wide": 146, "willing": [141, 145], "window": [78, 141, 142], "wise": 82, "wish": [0, 67, 139, 143], "with_standard_argu": 124, "within": [30, 78, 81, 82, 91, 98, 142, 146], "without": [1, 98, 103, 120, 141, 144], "work": [0, 4, 34, 89, 139, 140, 141, 142, 143, 146], "worker": [6, 7, 44, 54, 57, 62, 67, 124, 136], "workflow": [0, 143], "would": [139, 141, 142, 145, 146], "wrap": [118, 128, 129], "write": [62, 72, 74, 140, 142, 146], "writer": [1, 3, 46, 61, 62, 63, 145], "written": [46, 67, 140], "wrt": 113, "www": 142, "x": [4, 30, 80, 81, 82, 99, 103, 104, 107, 113, 116, 120, 122, 141, 142, 145, 146], "x8": 141, "x_i": 81, "x_j": 81, "x_low": 122, "xyz": [84, 85, 86, 87, 103, 104, 141, 145], "xyz_coord": 116, "xyzt": 116, "y": [4, 30, 80, 99, 116], "yaml": [126, 127, 142], "yield": [0, 91, 120, 143], "yml": [59, 124, 128, 129, 141, 142, 146], "you": [63, 67, 80, 128, 129, 139, 141, 142, 144, 145, 146], "your": [101, 139, 140, 141, 142, 144], "yourself": 139, "z": [4, 30, 80, 99, 103, 104, 116], "z_name": 103, "z_offset": [103, 104], "z_scale": [103, 104], "zenith": [4, 112, 119, 142, 146], "zenith_kappa": 112, "zenith_kei": 119, "zenith_pr": 112, "zenithreconstruct": [110, 112], "zenithreconstructionwithkappa": [110, 112, 142, 146], "\u00f8rs\u00f8e": [0, 143]}, "titles": ["Usage", "API", "constants", "data", "constants", "curated_datamodule", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "sqlite", "sqlite_dataset", "extractors", "combine_extractors", "extractor", "icecube", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "internal", "parquet_extractor", "liquido", "h5_extractor", "prometheus", "prometheus_extractor", "parquet", "deprecated_methods", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "internal_parquet_reader", "liquido_reader", "prometheus_reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "datasets", "test_dataset", "deployment", "deployer", "deployment_module", "i3modules", "deprecated_methods", "icecube", "cleaning_module", "i3deployer", "inference_module", "exceptions", "exceptions", "models", "coarsening", "components", "embedding", "layers", "pool", "detector", "detector", "icecube", "liquido", "prometheus", "gnn", "RNN_tito", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "icemix", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "rnn", "node_rnn", "standard_averaged_model", "standard_model", "task", "classification", "reconstruction", "task", "transformer", "iseecube", "utils", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contributing To GraphNeT", "Data Conversion in GraphNeT", "Datasets In GraphNeT", "GraphNeT tutorial", "&lt;no title&gt;", "Installation", "Integrating New Experiments into GraphNeT", "Models In GraphNeT", "&lt;no title&gt;"], "titleterms": {"1": 145, "2": 145, "In": [141, 146], "The": [142, 146], "To": 139, "acknowledg": 0, "ad": [141, 142, 145, 146], "advanc": 142, "api": 1, "appendix": 142, "appli": 145, "argpars": 124, "backbon": 146, "base_config": 126, "befor": 145, "callback": 118, "checkpoint": 146, "choos": 141, "class": [142, 145, 146], "classif": 111, "cleaning_modul": 72, "coarsen": 78, "code": 139, "collect": 33, "combin": [141, 142], "combine_extractor": 17, "compon": 79, "config": 125, "configur": 127, "constant": [2, 4], "content": 142, "contribut": 139, "convent": 139, "convers": 140, "convnet": 90, "creat": 142, "curated_datamodul": 5, "custom": [141, 142], "cvmf": 144, "data": [3, 140, 145], "dataclass": 6, "dataconfig": 142, "dataconvert": [7, 46, 140], "dataload": 8, "datamodul": 9, "dataset": [10, 11, 64, 141, 142], "dataset_config": 128, "datasetconfig": 142, "decor": 132, "deploy": [66, 67], "deployment_modul": 68, "deprecated_method": [44, 54, 70], "deprecation_tool": 133, "detector": [83, 84, 145], "dynedg": 91, "dynedge_jinst": 92, "dynedge_kaggle_tito": 93, "edg": [97, 98], "embed": 80, "energi": 146, "event": 141, "exampl": [142, 145, 146], "except": [75, 76], "experi": [145, 146], "extractor": [16, 18, 140, 145], "filesi": 134, "frame": 34, "function": 142, "geometri": 145, "github": 139, "gnn": [88, 94], "graph": [96, 101], "graph_definit": 100, "graphdefinit": 146, "graphnet": 142, "graphnet_file_read": 48, "graphnet_writ": 61, "graphnetfileread": 145, "graphnetgraphnet": [139, 140, 141, 145, 146], "h5_extractor": 40, "i3_filt": 35, "i3deploy": 73, "i3extractor": 20, "i3featureextractor": 21, "i3genericextractor": 22, "i3hybridrecoextractor": 23, "i3modul": 69, "i3ntmuonlabelsextractor": 24, "i3particleextractor": 25, "i3pisaextractor": 26, "i3quesoextractor": 27, "i3read": 49, "i3retroextractor": 28, "i3splinempeextractor": 29, "i3truthextractor": 30, "i3tumextractor": 31, "icecub": [19, 71, 85, 144], "icemix": 95, "implement": [141, 145], "import": 135, "index": 145, "inference_modul": 74, "instal": 144, "instanti": 146, "integr": 145, "intern": 37, "internal_parquet_read": 50, "introduct": 142, "iseecub": 115, "issu": 139, "label": [119, 141, 142], "layer": 81, "liquido": [39, 86], "liquido_read": 51, "load": 146, "log": 136, "loss_funct": 120, "math": 137, "minkowski": 99, "model": [77, 105, 142, 146], "model_config": 129, "modelconfig": [142, 146], "multi": 145, "multipl": [141, 142], "new": [141, 145], "node": [102, 103], "node_rnn": 107, "overview": 142, "own": [145, 146], "parquet": [12, 43], "parquet_dataset": 13, "parquet_extractor": 38, "parquet_to_sqlit": 56, "parquet_writ": 62, "parquetdataset": 141, "pars": 130, "pool": 82, "pre_configur": 45, "prometheu": [41, 87], "prometheus_extractor": 42, "prometheus_read": 52, "pull": 139, "qualiti": 139, "quick": 144, "random": 57, "reader": [47, 140], "reconstruct": [112, 146], "reproduc": 142, "request": 139, "rnn": 106, "rnn_tito": 89, "save": 146, "select": 141, "sqlite": [14, 53], "sqlite_dataset": 15, "sqlite_util": 58, "sqlite_writ": 63, "sqlitedataset": [141, 142], "src": 138, "standard_averaged_model": 108, "standard_model": 109, "standardmodel": [142, 146], "start": 144, "state_dict": 146, "string_selection_resolv": 59, "subset": 141, "support": 145, "syntax": 146, "tabl": 145, "task": [110, 113, 146], "test_dataset": 65, "track": 146, "train": [117, 146], "training_config": 131, "transform": 114, "truth": 142, "tutori": 142, "type": 36, "us": [141, 142, 146], "usag": 0, "util": [32, 55, 104, 116, 121, 123], "v": 141, "weight_fit": 122, "write": 145, "writer": [60, 140], "your": [145, 146]}})