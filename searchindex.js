Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pipeline", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.icemix", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.pisa", "api/graphnet.pisa.fitting", "api/graphnet.pisa.plotting", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pipeline.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.pisa.rst", "api/graphnet.pisa.fitting.rst", "api/graphnet.pisa.plotting.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "sqlite", "sqlite_dataset", "extractors", "extractor", "icecube", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "internal", "parquet_extractor", "parquet", "deprecated_methods", "pipeline", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "internal_parquet_reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "deployment", "deployer", "deployment_module", "i3modules", "deprecated_methods", "icecube", "cleaning_module", "i3deployer", "inference_module", "exceptions", "exceptions", "models", "coarsening", "components", "embedding", "layers", "pool", "detector", "detector", "icecube", "prometheus", "gnn", "RNN_tito", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "icemix", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "rnn", "node_rnn", "standard_averaged_model", "standard_model", "task", "classification", "reconstruction", "task", "utils", "pisa", "fitting", "plotting", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 43, 44, 45, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132], "i": [0, 1, 8, 10, 12, 14, 16, 18, 20, 31, 32, 33, 34, 36, 38, 41, 44, 47, 50, 51, 52, 55, 56, 58, 63, 65, 69, 71, 72, 73, 80, 81, 85, 88, 90, 93, 94, 97, 102, 103, 104, 107, 109, 110, 111, 112, 113, 115, 117, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132], "an": [0, 16, 34, 38, 39, 41, 44, 47, 52, 90, 97, 98, 111, 125, 127, 130, 131, 132], "open": [0, 43, 130, 131], "sourc": [0, 4, 5, 6, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 43, 44, 45, 47, 50, 51, 52, 54, 55, 56, 58, 59, 63, 65, 67, 69, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131], "python": [0, 1, 6, 16, 17, 20, 31, 34, 130, 131, 132], "framework": [0, 131], "aim": [0, 1, 130, 131], "provid": [0, 1, 6, 10, 12, 14, 63, 68, 85, 90, 95, 111, 130, 131, 132], "high": [0, 131], "qualiti": [0, 131], "user": [0, 68, 109, 131, 132], "friendli": [0, 54, 56, 131], "end": [0, 1, 109, 131], "function": [0, 6, 7, 10, 18, 34, 36, 50, 51, 63, 65, 69, 72, 73, 76, 77, 81, 90, 94, 95, 103, 104, 106, 107, 111, 112, 114, 119, 120, 121, 124, 125, 126, 128, 131], "perform": [0, 8, 69, 71, 72, 73, 78, 79, 81, 83, 93, 97, 98, 99, 101, 103, 112, 131], "reconstruct": [0, 1, 19, 21, 22, 26, 27, 29, 39, 57, 68, 83, 85, 97, 100, 103, 131], "task": [0, 1, 8, 68, 99, 101, 102, 111, 130, 131], "neutrino": [0, 1, 18, 44, 72, 83, 85, 94, 106, 131], "telescop": [0, 1, 131], "us": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 16, 18, 23, 28, 30, 31, 36, 38, 39, 41, 43, 44, 46, 47, 48, 51, 52, 54, 55, 56, 57, 59, 63, 65, 68, 71, 72, 73, 75, 79, 81, 82, 83, 85, 88, 90, 91, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 109, 110, 111, 113, 114, 115, 116, 119, 120, 121, 126, 127, 130, 131, 132], "graph": [0, 1, 7, 10, 12, 14, 68, 72, 73, 75, 87, 88, 89, 90, 92, 93, 94, 97, 103, 104, 110, 112, 130, 131], "neural": [0, 1, 96, 131], "network": [0, 1, 72, 80, 96, 131], "gnn": [0, 1, 39, 68, 79, 80, 81, 82, 83, 85, 90, 97, 99, 131, 132], "make": [0, 6, 113, 119, 120, 130, 131, 132], "fast": [0, 131, 132], "easi": [0, 131], "train": [0, 1, 6, 8, 9, 52, 57, 63, 72, 85, 90, 98, 99, 104, 109, 110, 111, 112, 113, 115, 119, 120, 122, 129, 131, 132], "complex": [0, 68, 131], "model": [0, 1, 57, 59, 63, 65, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 115, 117, 119, 120, 122, 129, 131, 132], "can": [0, 1, 8, 10, 12, 14, 16, 20, 23, 63, 71, 73, 90, 106, 107, 113, 115, 117, 119, 120, 130, 131, 132], "event": [0, 1, 6, 8, 10, 12, 14, 25, 38, 41, 47, 51, 52, 55, 56, 63, 71, 73, 79, 90, 93, 94, 103, 104, 106, 111, 112, 113, 119, 131], "state": [0, 59, 79, 97, 124, 131], "art": [0, 131], "arbitrari": [0, 131], "detector": [0, 1, 28, 68, 76, 77, 90, 91, 93, 99, 131], "configur": [0, 1, 8, 10, 40, 41, 59, 68, 95, 99, 106, 114, 116, 117, 119, 120, 122, 127, 131], "infer": [0, 1, 39, 56, 57, 59, 63, 65, 99, 103, 131, 132], "time": [0, 4, 51, 69, 71, 73, 79, 89, 93, 94, 97, 102, 104, 127, 131, 132], "ar": [0, 1, 4, 10, 12, 14, 18, 20, 33, 34, 43, 52, 54, 55, 56, 58, 63, 72, 73, 79, 81, 83, 86, 87, 88, 90, 91, 92, 93, 94, 97, 101, 106, 111, 113, 119, 120, 130, 131, 132], "order": [0, 31, 43, 58, 69, 93, 104, 131], "magnitud": [0, 131], "faster": [0, 131], "than": [0, 7, 103, 112, 127, 131], "tradit": [0, 131], "techniqu": [0, 131], "common": [0, 1, 111, 119, 120, 123, 126, 131], "ml": [0, 1, 131], "develop": [0, 1, 130, 131, 132], "physicist": [0, 1, 131], "wish": [0, 58, 130, 131], "tool": [0, 1, 131], "research": [0, 131], "By": [0, 38, 41, 44, 47, 103, 131], "unit": [0, 6, 89, 126, 130, 131], "both": [0, 20, 103, 107, 131], "group": [0, 73, 131], "increas": [0, 109, 131], "longev": [0, 131], "usabl": [0, 131], "individu": [0, 10, 12, 14, 73, 81, 104, 131], "code": [0, 28, 38, 47, 51, 90, 119, 120, 131], "contribut": [0, 131, 132], "from": [0, 1, 6, 7, 8, 10, 12, 14, 16, 17, 18, 20, 22, 23, 25, 31, 32, 33, 34, 36, 39, 43, 44, 49, 54, 56, 71, 73, 83, 85, 88, 90, 93, 94, 95, 98, 101, 102, 103, 104, 107, 109, 110, 111, 117, 118, 119, 120, 122, 127, 130, 131, 132], "build": [0, 1, 68, 75, 88, 89, 93, 94, 95, 117, 119, 120, 131], "gener": [0, 8, 10, 12, 14, 20, 33, 43, 54, 58, 63, 65, 71, 86, 87, 90, 91, 92, 101, 111, 131], "reusabl": [0, 131], "softwar": [0, 44, 111, 131], "packag": [0, 1, 50, 121, 125, 126, 130, 131, 132], "base": [0, 4, 5, 6, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 36, 38, 39, 41, 43, 44, 45, 47, 52, 54, 55, 56, 58, 59, 63, 65, 67, 69, 71, 72, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 95, 97, 98, 99, 101, 102, 103, 106, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 122, 126, 127, 131], "engin": [0, 131], "best": [0, 109, 130, 131], "practic": [0, 130, 131], "lower": [0, 107, 131], "technic": [0, 131], "threshold": [0, 63, 131], "most": [0, 1, 52, 89, 103, 131, 132], "scientif": [0, 1, 131], "problem": [0, 88, 130, 131], "The": [0, 6, 8, 10, 12, 14, 31, 34, 38, 39, 41, 47, 51, 54, 55, 56, 58, 59, 63, 65, 69, 72, 73, 79, 81, 83, 85, 88, 90, 94, 97, 101, 102, 103, 104, 106, 107, 109, 110, 111, 124, 131], "improv": [0, 1, 115, 131], "classif": [0, 1, 68, 100, 103, 111, 131], "yield": [0, 81, 106, 111, 131], "veri": [0, 52, 131], "accur": [0, 131], "e": [0, 1, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 34, 36, 39, 51, 52, 56, 59, 63, 65, 69, 72, 73, 75, 76, 77, 80, 84, 88, 90, 93, 94, 95, 98, 99, 101, 102, 103, 104, 109, 110, 111, 113, 117, 127, 130, 131, 132], "g": [0, 1, 10, 12, 14, 16, 18, 28, 31, 34, 39, 51, 52, 56, 63, 65, 73, 90, 93, 94, 103, 104, 113, 127, 130, 131, 132], "low": [0, 131], "energi": [0, 4, 39, 102, 103, 113, 131], "observ": [0, 131], "icecub": [0, 1, 3, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 38, 41, 44, 47, 57, 63, 65, 68, 72, 74, 83, 85, 94, 126, 131, 132], "here": [0, 90, 130, 131, 132], "implement": [0, 1, 16, 18, 43, 54, 59, 72, 79, 80, 81, 82, 83, 85, 88, 97, 111, 130, 131], "wa": [0, 6, 131], "appli": [0, 6, 10, 12, 14, 38, 41, 42, 43, 47, 58, 72, 73, 79, 80, 81, 82, 83, 84, 85, 97, 99, 101, 103, 121, 131], "oscil": [0, 105, 131], "lead": [0, 131], "signific": [0, 131], "angular": [0, 131], "rang": [0, 103, 131], "relev": [0, 1, 34, 50, 125, 130, 131], "studi": [0, 131], "furthermor": [0, 97, 131], "shown": [0, 131], "could": [0, 130, 131], "muon": [0, 22, 131], "v": [0, 72, 131], "therebi": [0, 1, 119, 120, 131], "effici": [0, 131], "puriti": [0, 131], "sampl": [0, 52, 72, 90, 91, 93, 103, 131], "analysi": [0, 39, 58, 131, 132], "similarli": [0, 34, 131], "ha": [0, 34, 51, 63, 80, 94, 111, 125, 131, 132], "great": [0, 131], "point": [0, 27, 110, 111, 112, 131], "analys": [0, 57, 105, 131], "final": [0, 6, 71, 73, 109, 119, 131], "millisecond": [0, 131], "allow": [0, 36, 57, 68, 73, 109, 117, 122, 131, 132], "whole": [0, 131], "new": [0, 1, 72, 93, 117, 122, 130, 131], "type": [0, 6, 7, 8, 10, 12, 14, 17, 18, 30, 31, 32, 43, 44, 45, 50, 51, 52, 54, 55, 56, 58, 69, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 130, 131], "cosmic": [0, 131], "alert": [0, 131], "which": [0, 10, 12, 14, 16, 18, 19, 28, 32, 36, 39, 52, 54, 56, 58, 69, 73, 81, 90, 91, 94, 95, 101, 104, 106, 111, 112, 115, 131, 132], "were": [0, 131], "previous": [0, 131], "unfeas": [0, 131], "possibl": [0, 31, 56, 130, 131], "identifi": [0, 6, 10, 12, 14, 28, 93, 94, 104, 119, 120, 131], "10": [0, 8, 39, 76, 77, 93, 94, 115, 131], "tev": [0, 131], "monitor": [0, 131], "rate": [0, 109, 131], "direct": [0, 83, 85, 94, 101, 102, 103, 108, 110, 131], "real": [0, 131], "thi": [0, 3, 6, 8, 10, 12, 14, 16, 18, 20, 34, 36, 38, 41, 43, 44, 47, 50, 51, 55, 56, 63, 68, 71, 73, 79, 81, 85, 89, 90, 91, 93, 94, 97, 99, 101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 117, 119, 120, 122, 127, 130, 131, 132], "enabl": [0, 3, 131], "first": [0, 79, 89, 97, 109, 112, 130, 131], "ever": [0, 131], "despit": [0, 131], "larg": [0, 79, 111, 131], "background": [0, 131], "origin": [0, 85, 106, 131], "compris": [0, 131], "number": [0, 6, 10, 12, 14, 16, 38, 39, 41, 47, 52, 55, 56, 58, 71, 72, 73, 79, 80, 81, 82, 83, 84, 85, 88, 89, 91, 93, 94, 97, 101, 102, 103, 104, 109, 112, 113, 115, 131], "modul": [0, 3, 5, 6, 10, 15, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 53, 54, 56, 57, 58, 63, 67, 68, 71, 72, 74, 78, 86, 87, 89, 90, 91, 92, 95, 96, 100, 105, 108, 114, 116, 119, 120, 121, 122, 126, 131], "necessari": [0, 8, 31, 130, 131], "workflow": [0, 131], "ingest": [0, 1, 3, 74, 131], "raw": [0, 93, 94, 131], "data": [0, 1, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 90, 91, 93, 97, 98, 99, 103, 104, 110, 112, 115, 117, 119, 122, 126, 129, 131, 132], "domain": [0, 1, 3, 57, 131], "specif": [0, 1, 3, 5, 6, 10, 12, 14, 15, 16, 19, 34, 42, 43, 44, 51, 56, 57, 59, 67, 69, 73, 74, 75, 76, 77, 78, 79, 84, 88, 90, 93, 96, 99, 100, 101, 102, 103, 111, 130, 131, 132], "format": [0, 1, 3, 6, 10, 31, 35, 36, 43, 45, 54, 55, 56, 95, 97, 107, 119, 130, 131, 132], "deploi": [0, 1, 57, 59, 131], "chain": [0, 1, 57, 68, 99, 131, 132], "illustr": [0, 130, 131], "figur": [0, 107, 131], "level": [0, 10, 12, 14, 28, 33, 38, 41, 43, 44, 45, 47, 51, 54, 55, 69, 73, 85, 127, 131, 132], "overview": [0, 131], "typic": [0, 31, 97, 131], "convert": [0, 1, 3, 6, 12, 18, 31, 33, 38, 40, 41, 47, 49, 55, 104, 131, 132], "industri": [0, 3, 131], "standard": [0, 3, 4, 33, 52, 59, 76, 77, 79, 90, 91, 93, 98, 99, 103, 115, 130, 131], "intermedi": [0, 1, 3, 6, 10, 80, 131, 132], "file": [0, 1, 3, 6, 10, 12, 14, 16, 18, 31, 33, 36, 38, 41, 43, 44, 45, 47, 49, 50, 54, 55, 56, 58, 59, 63, 65, 90, 95, 106, 109, 111, 112, 115, 116, 117, 118, 119, 120, 125, 127, 131, 132], "read": [0, 3, 6, 10, 12, 14, 31, 42, 44, 45, 75, 81, 99, 100, 131, 132], "simpl": [0, 68, 131], "physic": [0, 1, 18, 32, 34, 57, 63, 65, 68, 100, 103, 131], "orient": [0, 68, 131], "compon": [0, 1, 68, 71, 72, 73, 95, 99, 131], "manag": [0, 108, 131], "experi": [0, 1, 5, 6, 42, 43, 59, 108, 131], "log": [0, 1, 102, 108, 109, 111, 114, 131, 132], "deploy": [0, 1, 59, 63, 65, 90, 129, 131], "modular": [0, 68, 131], "subclass": [0, 68, 131], "torch": [0, 10, 12, 14, 68, 72, 90, 91, 95, 126, 131, 132], "nn": [0, 68, 72, 88, 91, 131], "mean": [0, 10, 12, 14, 68, 81, 83, 94, 111, 120, 131], "onli": [0, 1, 10, 12, 14, 56, 68, 73, 79, 103, 106, 113, 117, 120, 122, 126, 131, 132], "need": [0, 8, 31, 56, 68, 71, 95, 97, 111, 124, 131, 132], "import": [0, 1, 51, 68, 114, 131], "few": [0, 68, 130, 131], "exist": [0, 10, 12, 14, 39, 51, 68, 110, 119, 131], "purpos": [0, 68, 111, 131], "built": [0, 68, 90, 131], "them": [0, 1, 31, 59, 68, 81, 103, 106, 131, 132], "togeth": [0, 68, 88, 99, 131], "form": [0, 16, 68, 101, 117, 122, 131], "complet": [0, 68, 99, 131], "extend": [0, 1, 131], "suit": [0, 103, 131], "through": [0, 101, 102, 103, 111, 131], "layer": [0, 68, 70, 73, 79, 80, 81, 82, 83, 85, 97, 101, 102, 103, 131], "connect": [0, 8, 88, 89, 90, 93, 111, 131], "etc": [0, 111, 127, 131], "optimis": [0, 1, 131], "differ": [0, 10, 12, 14, 16, 18, 36, 43, 44, 45, 91, 99, 112, 130, 131, 132], "track": [0, 16, 18, 22, 36, 102, 130, 131], "These": [0, 43, 54, 56, 90, 130, 131], "prepar": [0, 8, 111, 131], "satisfi": [0, 131], "o": [0, 103, 131], "load": [0, 7, 10, 50, 59, 95, 98, 117, 119, 131], "requir": [0, 18, 24, 36, 51, 93, 101, 111, 119, 120, 122, 131, 132], "when": [0, 10, 12, 14, 31, 33, 51, 63, 72, 79, 81, 83, 97, 110, 127, 130, 131, 132], "batch": [0, 7, 12, 39, 55, 69, 72, 73, 97, 99, 104, 112, 115, 131], "do": [0, 59, 63, 111, 119, 120, 130, 131, 132], "predict": [0, 8, 23, 27, 29, 39, 63, 65, 80, 85, 99, 101, 103, 111, 112, 131], "either": [0, 8, 10, 14, 18, 111, 131, 132], "contain": [0, 5, 6, 10, 12, 14, 15, 18, 31, 32, 35, 36, 38, 39, 41, 43, 44, 45, 47, 51, 54, 55, 56, 58, 59, 63, 65, 67, 81, 86, 87, 89, 90, 91, 92, 94, 95, 103, 104, 111, 113, 115, 131, 132], "imag": [0, 1, 130, 131, 132], "portabl": [0, 131], "depend": [0, 131, 132], "free": [0, 111, 131], "split": [0, 8, 33, 56, 69, 131], "up": [0, 63, 130, 131, 132], "interfac": [0, 105, 119, 120, 131, 132], "block": [0, 1, 70, 72, 131], "pre": [0, 40, 41, 75, 90, 110, 130, 131], "directli": [0, 81, 131], "while": [0, 20, 109, 131], "continu": [0, 111, 131], "expand": [0, 131], "": [0, 6, 7, 8, 10, 12, 14, 31, 38, 41, 43, 47, 54, 56, 58, 71, 75, 80, 81, 90, 99, 103, 104, 109, 113, 115, 119, 120, 127, 128, 131, 132], "capabl": [0, 131], "project": [0, 71, 72, 130, 131], "receiv": [0, 131], "fund": [0, 131], "european": [0, 131], "union": [0, 6, 7, 8, 10, 12, 14, 20, 31, 34, 38, 41, 43, 44, 45, 47, 58, 59, 63, 65, 69, 72, 73, 79, 81, 90, 91, 99, 103, 119, 122, 125, 131], "horizon": [0, 131], "2020": [0, 131], "innov": [0, 131], "programm": [0, 131], "under": [0, 131], "mari": [0, 131], "sk\u0142odowska": [0, 131], "curi": [0, 131], "grant": [0, 111, 131], "agreement": [0, 130, 131], "No": [0, 131], "890778": [0, 131], "work": [0, 4, 32, 79, 130, 131, 132], "rasmu": [0, 82, 131], "\u00f8rs\u00f8e": [0, 131], "partli": [0, 131], "punch4nfdi": [0, 131], "consortium": [0, 131], "support": [0, 6, 34, 130, 131, 132], "dfg": [0, 131], "nfdi": [0, 131], "39": [0, 131, 132], "1": [0, 6, 8, 10, 12, 16, 31, 38, 41, 47, 52, 55, 58, 69, 72, 73, 79, 81, 83, 85, 88, 89, 91, 94, 97, 101, 102, 103, 104, 109, 111, 112, 113, 119, 131, 132], "germani": [0, 131], "conveni": [1, 130, 132], "collabor": 1, "solv": [1, 130], "It": [1, 31, 51, 63, 71, 94, 101, 103, 130], "leverag": 1, "advanc": [1, 73], "machin": [1, 132], "learn": [1, 54, 56, 63, 65, 101, 103, 109, 132], "without": [1, 88, 93, 106, 111, 132], "have": [1, 20, 38, 41, 44, 47, 51, 52, 56, 73, 85, 90, 94, 103, 130, 132], "expert": 1, "themselv": [1, 119, 120], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 10, 12, 14, 16, 18, 20, 33, 51, 56, 63, 71, 72, 73, 75, 81, 84, 89, 90, 95, 111, 117, 118, 119, 120, 121, 122, 127, 130, 132], "streamlin": 1, "process": [1, 6, 38, 41, 47, 63, 71, 75, 79, 81, 83, 130, 132], "transform": [1, 72, 73, 83, 85, 97, 103, 113], "extens": [1, 43, 54, 125], "basic": 1, "across": [1, 2, 10, 12, 14, 34, 48, 58, 73, 99, 111, 114, 115, 116, 127], "variou": [1, 53], "easili": 1, "architectur": [1, 80, 81, 82, 83, 85, 97], "main": [1, 78, 90, 99, 130, 132], "featur": [1, 3, 4, 10, 12, 14, 19, 39, 56, 63, 65, 72, 73, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 97, 101, 104, 112, 119, 130], "i3": [1, 18, 32, 33, 34, 38, 41, 44, 47, 50, 58, 63, 65, 125, 132], "more": [1, 10, 12, 50, 51, 79, 95, 119, 120, 127], "index": [1, 6, 10, 12, 14, 34, 51, 55, 73, 75, 79, 89, 94, 97, 109], "sqlite": [1, 3, 8, 9, 14, 39, 41, 47, 49, 51, 56, 132], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 10, 54, 75, 84, 90, 103, 118], "awai": 1, "detail": [1, 79, 95, 109, 132], "expos": 1, "physicst": 1, "what": [1, 71, 90, 130], "i3modul": [1, 57, 59], "includ": [1, 12, 72, 93, 99, 106, 111, 117, 130], "docker": 1, "run": [1, 44, 58], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 9, 15, 17, 57, 68, 86, 114], "dataset": [1, 3, 7, 8, 11, 12, 13, 14, 22, 52, 55, 67, 79, 90, 97, 115, 119], "extractor": [1, 3, 6, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 43, 47, 63, 65], "parquet": [1, 3, 9, 12, 36, 38, 41, 45, 47, 49, 55, 76, 77, 132], "pre_configur": [1, 3, 41], "reader": [1, 3, 41, 43, 44, 45], "util": [1, 3, 15, 17, 31, 32, 33, 34, 49, 50, 51, 52, 68, 86, 108, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129], "writer": [1, 3, 41, 54, 55, 56], "constant": [1, 3, 129], "dataclass": [1, 3, 32], "dataconvert": [1, 3, 40, 54, 55, 56], "dataload": [1, 3, 8, 39, 90, 99, 112, 122], "datamodul": [1, 3], "pipelin": [1, 3], "deployment_modul": [1, 57], "except": [1, 129], "rnn": [1, 68, 79, 97], "coarsen": [1, 68, 73], "standard_averaged_model": [1, 68], "standard_model": [1, 68], "pisa": [1, 24, 39, 106, 107, 126, 129, 132], "fit": [1, 8, 99, 105, 107, 111, 113, 122], "plot": [1, 105], "callback": [1, 99, 108], "label": [1, 10, 14, 22, 25, 80, 90, 99, 103, 107, 108, 112, 119], "loss_funct": [1, 103, 108], "weight_fit": [1, 108], "config": [1, 7, 52, 106, 109, 111, 114, 115, 117, 118, 119, 120, 121, 122], "argpars": [1, 114], "decor": [1, 114, 126], "deprecation_tool": [1, 114], "filesi": [1, 114], "math": [1, 72, 114], "submodul": [1, 3, 9, 11, 13, 15, 17, 30, 35, 37, 40, 42, 46, 48, 53, 57, 60, 62, 66, 68, 70, 74, 78, 86, 87, 92, 96, 100, 105, 108, 114, 116, 121], "global": [2, 4, 79, 81, 83, 95], "intern": [3, 15, 36, 41, 45], "deprecated_method": [3, 37, 46, 57, 60], "graphnet_file_read": [3, 42], "i3read": [3, 38, 41, 42, 47], "internal_parquet_read": [3, 42], "parquet_to_sqlit": [3, 48], "random": [3, 10, 12, 14, 48, 52, 55, 93, 119], "sqlite_util": [3, 48], "string_selection_resolv": [3, 48], "graphnet_writ": [3, 53], "parquet_writ": [3, 53], "sqlite_writ": [3, 53], "truth": [3, 4, 10, 12, 14, 19, 28, 39, 51, 55, 90, 103, 112, 113, 119], "i3fileset": [3, 5, 43, 44], "set": [3, 5, 8, 18, 20, 38, 41, 43, 44, 47, 54, 72, 85, 93, 94, 95, 103, 112, 130], "init_global_index": [3, 6], "collate_fn": [3, 7, 108, 112], "do_shuffl": [3, 7], "graphnetdatamodul": [3, 8], "insqlitepipelin": [3, 39], "class": [4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 36, 38, 39, 41, 43, 44, 45, 47, 52, 54, 55, 56, 58, 59, 63, 65, 69, 71, 72, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 95, 97, 98, 99, 101, 102, 103, 106, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 127, 130], "object": [4, 5, 10, 12, 14, 20, 31, 34, 69, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 95, 97, 98, 99, 101, 102, 103, 106, 109, 111, 112, 115, 117, 119, 120, 122, 127], "namespac": [4, 95, 119, 120], "name": [4, 6, 7, 10, 12, 14, 16, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 38, 39, 41, 43, 45, 47, 51, 54, 55, 56, 59, 63, 65, 75, 90, 91, 93, 97, 103, 106, 110, 113, 115, 117, 119, 120, 121, 122, 127, 130, 132], "i3featureextractor": [4, 15, 17, 63, 65], "icecube86": [4, 74, 76], "dom_x": [4, 76, 93], "dom_i": [4, 76, 93], "dom_z": [4, 76, 93], "dom_tim": [4, 93], "charg": [4, 79, 93, 94, 97, 111], "rde": 4, "pmt_area": 4, "deepcor": [4, 19, 76], "upgrad": [4, 19, 76, 132], "string": [4, 10, 12, 14, 31, 52, 73, 75, 76, 90, 95, 117], "pmt_number": 4, "dom_numb": 4, "pmt_dir_x": 4, "pmt_dir_i": 4, "pmt_dir_z": 4, "dom_typ": 4, "prometheu": [4, 68, 74], "sensor_pos_x": [4, 77], "sensor_pos_i": [4, 77], "sensor_pos_z": [4, 77], "t": [4, 34, 51, 107, 109, 111, 132], "kaggl": [4, 71, 72, 76, 83, 85], "x": [4, 28, 71, 72, 73, 89, 93, 94, 97, 103, 104, 107, 111, 113], "y": [4, 28, 89, 104, 107, 132], "z": [4, 28, 89, 93, 94, 104, 132], "auxiliari": [4, 71], "i3truthextractor": [4, 15, 17], "energy_track": [4, 102], "energy_cascad": [4, 102], "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": [4, 102, 110], "zenith": [4, 102, 110], "pid": [4, 52, 119], "elast": 4, "interaction_typ": 4, "interaction_tim": [4, 102], "inelast": [4, 102], "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "i3_fil": [5, 18], "str": [5, 6, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 43, 44, 45, 47, 50, 51, 52, 54, 55, 56, 58, 59, 63, 65, 72, 73, 75, 76, 77, 79, 81, 83, 85, 90, 91, 93, 94, 95, 98, 99, 103, 106, 109, 110, 112, 113, 115, 117, 118, 119, 120, 121, 122, 124, 125, 127], "gcd_file": [5, 18, 63, 65], "paramet": [5, 6, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 43, 44, 45, 47, 50, 51, 52, 54, 55, 56, 58, 59, 63, 65, 69, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128], "output_fold": [5, 58], "worker": [5, 6, 38, 39, 47, 50, 55, 58, 115, 127], "i3deploy": [5, 57, 62], "list": [5, 6, 7, 8, 10, 12, 14, 20, 28, 31, 33, 34, 38, 39, 41, 43, 44, 45, 47, 50, 51, 52, 54, 55, 56, 58, 59, 63, 65, 69, 72, 73, 75, 79, 81, 83, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 103, 104, 107, 109, 112, 113, 119, 121, 122, 125, 127], "ani": [5, 6, 7, 8, 10, 12, 14, 31, 32, 33, 34, 43, 45, 54, 56, 63, 69, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 107, 109, 111, 113, 115, 117, 118, 119, 120, 121, 122, 127, 132], "output_fil": 6, "global_index": 6, "avail": [6, 20, 39, 101, 102, 103, 126], "pool": [6, 68, 69, 70, 79, 81, 83], "return": [6, 7, 8, 10, 12, 14, 16, 18, 31, 32, 34, 43, 44, 45, 50, 51, 52, 54, 55, 56, 58, 69, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128], "none": [6, 7, 8, 10, 12, 14, 18, 20, 28, 32, 33, 34, 38, 39, 41, 43, 44, 45, 47, 51, 52, 54, 55, 56, 58, 59, 65, 72, 73, 79, 81, 83, 85, 89, 90, 91, 93, 95, 97, 98, 99, 103, 106, 109, 111, 112, 113, 115, 117, 118, 119, 121, 125, 127], "synchron": 6, "file_read": 6, "save_method": 6, "outdir": [6, 38, 39, 41, 47, 106], "index_column": [6, 10, 12, 14, 38, 41, 47, 51, 52, 55, 106, 112, 113, 119], "num_work": [6, 7, 41, 55, 112], "abc": [6, 10, 16, 39, 43, 54, 58, 95, 110, 113, 118, 119, 120], "logger": [6, 8, 10, 16, 33, 39, 43, 45, 52, 54, 58, 59, 88, 95, 99, 110, 113, 114, 127, 132], "A": [6, 8, 10, 33, 39, 43, 44, 45, 51, 56, 58, 59, 63, 73, 90, 91, 94, 95, 101, 103, 104, 106, 111, 113, 117, 119, 120, 122, 132], "convers": [6, 35, 36, 38, 47, 132], "parallel": [6, 38, 41, 47], "extract": [6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 36, 50, 63, 65, 103], "also": [6, 10, 12, 14, 52, 79, 119], "assign": [6, 10, 12, 14, 69, 73, 130], "id": [6, 8, 12, 38, 41, 47, 75, 90, 112], "exampl": [6, 31, 52, 69, 73, 94, 104, 111, 119, 120, 132], "initi": [6, 33, 44, 56, 58, 72, 79, 85, 89], "graphnetfileread": [6, 42, 43, 44, 45], "method": [6, 8, 10, 12, 14, 16, 18, 30, 31, 32, 34, 37, 38, 43, 46, 47, 54, 55, 56, 59, 72, 73, 75, 94, 102, 111, 113], "graphnetwrit": [6, 53, 54, 55, 56], "save": [6, 16, 18, 31, 36, 38, 41, 47, 51, 53, 54, 56, 95, 106, 109, 111, 112, 113, 117, 118, 119, 120, 132], "interim": [6, 53, 54, 55, 56], "directori": [6, 38, 39, 41, 43, 44, 45, 47, 54, 55, 106, 109, 125], "i3extractor": [6, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 38, 41, 43, 47], "parquetextractor": [6, 35, 36, 41, 43], "input": [6, 10, 12, 14, 38, 39, 41, 43, 44, 47, 54, 58, 63, 65, 71, 72, 76, 79, 80, 81, 82, 83, 84, 90, 91, 93, 97, 101, 103, 104, 117, 122, 124], "default": [6, 8, 10, 12, 14, 18, 20, 28, 31, 38, 39, 41, 44, 47, 51, 55, 56, 58, 59, 63, 65, 71, 72, 73, 79, 80, 81, 82, 83, 85, 88, 89, 90, 91, 93, 95, 97, 103, 104, 106, 107, 109, 110, 111, 113, 115, 117, 119, 125], "event_no": [6, 10, 12, 14, 38, 41, 47, 51, 52, 55, 56, 113, 119], "column": [6, 10, 12, 14, 16, 38, 41, 47, 51, 55, 56, 59, 65, 67, 75, 79, 88, 90, 91, 93, 94, 97, 99, 101, 102, 103, 104, 106, 113], "ad": [6, 10, 12, 14, 19, 38, 41, 47, 71, 81, 85, 90, 93, 94, 106], "int": [6, 7, 8, 10, 12, 14, 22, 25, 33, 38, 39, 41, 43, 44, 45, 47, 52, 54, 55, 56, 58, 71, 72, 73, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 109, 111, 112, 113, 115, 119, 122, 127], "cpu": [6, 38, 41, 47, 59, 132], "multiprocess": [6, 38, 41, 47, 132], "get_map_funct": 6, "nb_file": 6, "map": [6, 10, 12, 14, 19, 20, 51, 76, 77, 90, 91, 103, 117, 119, 120, 122], "pure": [6, 16, 17, 20, 34], "tupl": [6, 10, 12, 14, 32, 34, 51, 72, 79, 81, 83, 94, 103, 104, 106, 107, 112, 115, 124], "option": [6, 8, 10, 12, 14, 18, 28, 39, 56, 59, 65, 72, 73, 79, 81, 83, 85, 89, 90, 91, 93, 95, 97, 103, 106, 107, 109, 113, 114, 115, 117, 119, 125, 132], "merge_fil": [6, 54, 55, 56], "kwarg": [6, 7, 10, 12, 14, 33, 43, 45, 54, 69, 72, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 95, 97, 98, 99, 101, 102, 103, 109, 111, 113, 117, 119, 120, 127], "merg": [6, 54, 55, 56, 111, 132], "call": [6, 20, 34, 71, 73, 103, 106, 109, 113, 127], "instanti": [6, 8, 120], "remov": [7, 38, 47, 90, 112, 115], "less": [7, 112], "two": [7, 81, 106, 109, 111, 112], "dom": [7, 10, 12, 14, 69, 73, 79, 93, 94, 97, 112], "hit": [7, 112], "should": [7, 10, 12, 14, 16, 18, 31, 52, 59, 72, 73, 79, 85, 90, 91, 97, 104, 111, 112, 117, 119, 120, 122, 130, 132], "occur": [7, 112], "product": [7, 72, 112], "selection_nam": 7, "check": [7, 32, 33, 34, 43, 51, 93, 115, 125, 126, 130, 132], "whether": [7, 32, 34, 51, 71, 72, 79, 81, 83, 85, 95, 111, 121, 125, 126], "shuffl": [7, 8, 50, 55, 112], "select": [7, 8, 10, 12, 14, 25, 52, 112, 113, 119, 130], "bool": [7, 32, 33, 34, 51, 52, 54, 63, 71, 72, 79, 81, 83, 85, 90, 93, 94, 95, 99, 106, 109, 111, 112, 113, 115, 121, 124, 125, 126, 127], "batch_siz": [7, 39, 104, 112], "persistent_work": [7, 112], "prefetch_factor": 7, "construct": [7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 36, 43, 45, 52, 54, 55, 56, 59, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 106, 109, 110, 111, 112, 113, 115, 118, 119, 120, 127], "t_co": 7, "callabl": [7, 10, 34, 72, 73, 75, 76, 77, 81, 90, 98, 103, 112, 113, 117, 119, 120, 121, 126], "classmethod": [7, 10, 95, 111, 117, 118], "from_dataset_config": 7, "datasetconfig": [7, 10, 52, 116, 119], "dict": [7, 8, 10, 14, 20, 31, 34, 39, 51, 59, 75, 76, 77, 85, 90, 91, 95, 98, 99, 106, 107, 109, 112, 115, 117, 119, 120, 121, 122, 124], "dataset_refer": 8, "dataset_arg": 8, "test_select": [8, 119], "train_dataloader_kwarg": 8, "validation_dataloader_kwarg": 8, "test_dataloader_kwarg": 8, "train_val_split": 8, "0": [8, 10, 12, 14, 38, 41, 44, 47, 52, 63, 69, 72, 73, 79, 80, 81, 83, 88, 89, 91, 94, 97, 104, 106, 107, 111, 112, 119], "9": 8, "split_se": 8, "lightningdatamodul": 8, "creat": [8, 39, 51, 90, 93, 117, 118, 122, 130, 132], "sqlitedataset": [8, 13, 14], "parquetdataset": [8, 11, 12], "non": [8, 31, 34, 51, 79, 111], "refer": [8, 77, 119], "argument": [8, 55, 85, 90, 109, 113, 115, 117, 119, 120, 122], "valid": [8, 34, 52, 98, 99, 103, 109, 111, 115, 117, 122], "test": [8, 52, 103, 112, 119, 126, 130], "ratio": [8, 72], "42": [8, 132], "seed": [8, 10, 12, 14, 52, 90, 91, 112, 119], "prepare_data": 8, "setup": [8, 109, 132], "stage": [8, 109], "lightn": [8, 109], "properti": [8, 10, 16, 23, 34, 43, 54, 73, 75, 84, 93, 94, 99, 103, 110, 118, 127], "train_dataload": [8, 99], "val_dataload": [8, 99], "test_dataload": 8, "teardown": 8, "cleanup": 8, "shutdown": 8, "procedur": 8, "close": 8, "after": [8, 72, 79, 81, 83, 109, 115, 119], "overrid": [8, 109], "parquet_dataset": [9, 11], "sqlite_dataset": [9, 13], "load_modul": [9, 10, 95], "parse_graph_definit": [9, 10], "parse_label": [9, 10], "ensembledataset": [9, 10, 119], "class_nam": [10, 33, 43, 45, 54, 120, 127], "cfg": 10, "graphdefinit": [10, 12, 14, 86, 87, 90, 91, 92, 112, 130], "arg": [10, 12, 14, 33, 69, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 95, 97, 98, 99, 101, 102, 103, 111, 115, 117, 127], "path": [10, 12, 14, 18, 38, 41, 43, 44, 45, 47, 50, 51, 56, 58, 63, 65, 72, 90, 95, 98, 106, 107, 109, 112, 115, 117, 118, 119, 125, 132], "pulsemap": [10, 12, 14, 19, 63, 65, 112, 119], "puls": [10, 12, 14, 19, 20, 32, 34, 51, 63, 69, 73, 85, 90, 93, 94, 104], "seri": [10, 12, 14, 19, 20, 32, 34, 51, 63, 79, 93, 97], "node": [10, 12, 14, 68, 69, 73, 79, 80, 81, 83, 86, 87, 88, 90, 91, 97, 104], "multipl": [10, 12, 14, 94, 109, 119, 127], "store": [10, 12, 14, 39, 51, 54, 55, 56, 106, 110], "attribut": [10, 12, 14, 69, 103], "node_truth": [10, 12, 14, 112, 119], "uniqu": [10, 12, 14, 51, 93, 104, 119], "indici": [10, 12, 14, 32, 52, 111], "tabl": [10, 12, 14, 16, 18, 36, 39, 43, 51, 55, 56, 75, 90, 106, 113], "truth_tabl": [10, 12, 14, 55, 106, 112, 113, 119], "inform": [10, 12, 14, 16, 18, 20, 28, 36, 90, 93, 94, 95, 107], "node_truth_t": [10, 12, 14, 112, 119], "string_select": [10, 12, 14, 112, 119], "subset": [10, 12, 14, 72, 79, 81, 83, 97], "given": [10, 14, 18, 56, 73, 88, 103, 113, 115], "queri": [10, 12, 14, 51, 52, 56, 72], "pass": [10, 14, 71, 72, 79, 80, 81, 82, 83, 84, 85, 90, 97, 99, 103, 109, 111, 113, 130], "dtype": [10, 12, 14, 90, 91, 128], "float32": [10, 12, 14, 90, 91], "tensor": [10, 12, 14, 59, 69, 71, 72, 73, 75, 79, 80, 81, 82, 83, 84, 85, 89, 93, 97, 98, 99, 103, 104, 111, 124, 128], "loss_weight_t": [10, 12, 14, 112, 119], "per": [10, 12, 14, 20, 51, 72, 73, 79, 97, 103, 111, 113], "loss": [10, 12, 14, 90, 99, 103, 109, 111, 115], "weight": [10, 12, 14, 63, 65, 72, 85, 90, 103, 106, 111, 113, 120, 132], "loss_weight_column": [10, 12, 14, 90, 112, 119], "correspond": [10, 12, 14, 31, 34, 50, 81, 90, 94, 113, 117, 119, 120, 122, 125, 132], "loss_weight_default_valu": [10, 12, 14, 90, 119], "float": [10, 12, 14, 63, 72, 79, 80, 88, 89, 90, 91, 97, 99, 106, 107, 109, 111, 112, 119], "note": [10, 12, 14, 44, 55, 56, 94, 107, 120], "valu": [10, 12, 14, 28, 31, 51, 72, 73, 89, 90, 91, 104, 107, 110, 111, 115, 117], "specifi": [10, 12, 14, 52, 69, 94, 103, 107, 109, 132], "case": [10, 12, 14, 20, 38, 41, 44, 47, 63, 73, 94, 103, 132], "That": [10, 12, 14, 81, 102, 110], "ignor": [10, 12, 14, 34, 55], "resolv": [10, 12, 14, 52], "10000": [10, 12, 14, 52, 71], "5": [10, 12, 14, 52, 79, 97, 115, 132], "20": [10, 12, 14, 52, 127], "graph_definit": [10, 12, 14, 68, 86, 112, 119], "defin": [10, 12, 14, 52, 59, 63, 65, 73, 86, 87, 88, 90, 92, 94, 112, 117, 119, 120, 122], "represent": [10, 12, 14, 34, 71, 72, 73, 91, 95, 97], "dictionari": [10, 14, 16, 31, 32, 34, 39, 43, 51, 90, 91, 95, 106, 107, 117, 119, 120, 122], "from_config": [10, 95, 118, 119, 120], "instanc": [10, 16, 18, 28, 34, 36, 38, 41, 44, 47, 90, 95, 106, 110, 112, 118, 120, 132], "concaten": [10, 31, 81], "one": [10, 12, 18, 51, 63, 73, 119, 120, 125, 130, 132], "query_t": [10, 12, 14], "sequential_index": [10, 12, 14], "some": [10, 12, 14, 38, 41, 44, 47, 90, 94], "out": [10, 12, 81, 99, 100, 111, 127, 130, 132], "sequenti": [10, 12], "len": [10, 12, 94], "self": [10, 12, 90, 106, 117, 122], "_may_": [10, 12], "_indic": [10, 12], "If": [10, 12, 18, 20, 33, 39, 56, 72, 81, 85, 90, 93, 94, 95, 103, 106, 109, 113, 130, 132], "entir": [10, 12, 95], "impos": [10, 12], "befor": [10, 12, 81, 89, 97, 103, 109], "ndarrai": [10, 12, 28, 90, 94, 113], "scalar": [10, 12, 16, 104, 111], "length": [10, 12, 34, 94, 104, 109], "rais": [10, 12, 18, 20, 95, 117, 122], "columnmissingexcept": [10, 12, 66, 67], "element": [10, 12, 16, 31, 34, 99, 104, 112, 121], "present": [10, 12, 18, 33, 104, 115, 125, 126], "add_label": 10, "fn": [10, 34, 117, 121], "kei": [10, 20, 31, 32, 34, 51, 56, 72, 73, 93, 110, 119, 120], "add": [10, 72, 81, 115, 124, 130, 132], "custom": [10, 43, 66, 90, 109], "concatdataset": 10, "singl": [10, 54, 56, 73, 81, 94, 110, 119, 120], "collect": [10, 17, 30, 111, 128], "iter": 10, "backend": [11, 13, 53, 55], "parquetwrit": [12, 36, 41, 53, 55], "cache_s": 12, "cach": 12, "memori": 12, "must": [12, 43, 44, 51, 54, 69, 109, 113, 130], "least": [12, 130, 132], "databas": [14, 39, 51, 56, 106, 113, 132], "pytorch": [14, 109, 132], "i3genericextractor": [15, 17], "i3hybridrecoextractor": [15, 17], "i3ntmuonlabelsextractor": [15, 17], "i3particleextractor": [15, 17], "i3pisaextractor": [15, 17], "i3quesoextractor": [15, 17], "i3retroextractor": [15, 17], "i3splinempeextractor": [15, 17], "i3tumextractor": [15, 17], "parquet_extractor": [15, 35], "extractor_nam": [16, 18, 20, 23, 36], "inherit": [16, 18, 34, 43, 54, 75, 93, 111, 127], "__call__": [16, 18, 43, 59], "output": [16, 56, 58, 59, 71, 72, 79, 80, 81, 82, 84, 93, 94, 97, 99, 101, 102, 103, 106, 113, 119, 120, 132], "var1": 16, "var_n": 16, "variabl": [16, 18, 20, 34, 43, 81, 93, 94, 104, 113, 127], "arrai": [16, 28, 31, 93, 94, 104], "like": [16, 34, 73, 89, 103, 104, 111, 128, 130], "shape": [16, 89, 90, 93, 104, 111], "n": [16, 69, 73, 89, 104, 111], "where": [16, 38, 41, 44, 47, 90, 91, 93, 94, 97, 104, 110], "denot": [16, 109], "conjunct": [16, 103], "fileread": [16, 43], "keep": [16, 18, 36, 93], "proven": [16, 18, 36], "mc_truth": 16, "get": [16, 32, 51, 75, 109, 112, 132], "i3fram": [17, 20, 32, 34, 63, 65], "frame": [17, 18, 20, 30, 33, 34, 65], "i3_filt": [17, 30, 38, 41, 44, 47], "i3featureextractoricecube86": [17, 19], "i3featureextractoricecubedeepcor": [17, 19], "i3featureextractoricecubeupgrad": [17, 19], "i3pulsenoisetruthflagicecubeupgrad": [17, 19], "i3galacticplanehybridrecoextractor": [17, 21], "i3ntmuonlabelextractor": [17, 22], "i3splinempeicextractor": [17, 27], "observatori": [18, 44], "set_gcd": 18, "gframe": 18, "cframe": 18, "gcd": [18, 32, 38, 41, 44, 47, 50, 63, 65, 125], "pair": [18, 38, 41, 44, 47, 71], "member": [18, 20, 34, 43, 93, 119, 120, 127], "being": [18, 63, 101, 103], "attempt": 18, "find": [18, 89, 125], "c": [18, 31, 73, 89, 111, 132], "instead": [18, 38, 41, 44, 47, 111], "those": 18, "runtimeerror": 18, "86": [19, 76], "nois": [19, 32, 63], "flag": [19, 63], "exclude_kei": 20, "dynam": [20, 72, 81, 82, 83], "pars": [20, 107, 114, 115, 116, 117, 122], "tri": [20, 34], "automat": [20, 55, 90, 111, 130], "cast": [20, 34], "done": [20, 73, 127, 130], "recurs": [20, 34, 38, 41, 43, 44, 47, 95, 121, 125], "each": [20, 31, 34, 50, 51, 55, 56, 58, 59, 69, 71, 72, 73, 76, 77, 79, 81, 83, 88, 90, 91, 93, 94, 97, 101, 103, 104, 106, 107, 109, 112, 125], "look": [20, 132], "signatur": [20, 34], "similar": [20, 34, 132], "handl": [20, 111, 115, 124, 127], "hand": 20, "special": [20, 63, 97, 104], "mc": [20, 51], "tree": 20, "trigger": 20, "exclud": [20, 132], "valueerror": [20, 95], "hybrid": 21, "galatict": 21, "plane": [21, 111], "tum": [22, 29], "dnn": [22, 29], "padding_valu": [22, 25, 104], "northeren": 22, "i3particl": 23, "other": [23, 51, 88, 111, 130], "algorithm": 23, "comparison": [23, 111], "quantiti": [24, 103, 104], "queso": 25, "retro": [26, 39], "splinemp": 27, "border": 28, "mctree": [28, 32], "boundari": 28, "volum": 28, "coordin": [28, 75, 89, 93, 94, 104], "particl": [28, 51, 110], "start": [28, 130, 132], "stop": [28, 109, 115], "within": [28, 69, 72, 73, 81, 88], "hard": [28, 93], "i3mctre": 28, "flatten_nested_dictionari": [30, 31], "serialis": [30, 31], "transpose_list_of_dict": [30, 31], "frame_is_montecarlo": [30, 32], "frame_is_nois": [30, 32], "get_om_keys_and_pulseseri": [30, 32], "i3filt": [30, 33, 38, 41, 44, 47], "nullspliti3filt": [30, 33, 38, 41, 44, 47], "i3filtermask": [30, 33], "is_boost_enum": [30, 34], "is_boost_class": [30, 34], "is_icecube_class": [30, 34], "is_typ": [30, 34], "is_method": [30, 34], "break_cyclic_recurs": [30, 34], "get_member_vari": [30, 34], "cast_object_to_pure_python": [30, 34], "cast_pulse_series_to_pure_python": [30, 34], "manipul": [31, 86, 87, 92], "obj": [31, 34, 121], "parent_kei": 31, "separ": [31, 89, 109, 132], "flatten": 31, "nest": 31, "d": [31, 89, 90, 93, 104, 130], "b": [31, 69, 73, 104], "2": [31, 38, 47, 72, 73, 79, 81, 83, 88, 91, 94, 97, 102, 104, 106, 107, 111, 119, 132], "a__b": 31, "applic": 31, "combin": [31, 41, 79, 119], "parent": 31, "__": [31, 34], "nester": 31, "json": [31, 119], "therefor": [31, 44], "we": [31, 34, 52, 94, 130, 132], "outer": 31, "abl": [31, 132], "de": 31, "transpos": 31, "mont": 32, "carlo": 32, "simul": [32, 63], "icetrai": [32, 34, 38, 41, 44, 47, 59, 126], "pulseseri": 32, "calibr": [32, 34], "gcd_dict": [32, 34], "p": [32, 111], "om": [32, 34], "i3calibr": 32, "indicesfor": 32, "filter": [33, 38, 41, 44, 47, 127], "log_fold": [33, 43, 45, 54, 127], "skip": [33, 81], "null": [33, 51], "filter_nam": 33, "filter_ani": 33, "filtermask": 33, "true": [33, 51, 63, 79, 81, 83, 85, 90, 93, 95, 106, 109, 111, 113, 119, 120, 122, 125], "kept": 33, "fals": [33, 63, 71, 72, 81, 85, 90, 95, 106, 109, 111, 113, 119], "boost": 34, "enum": 34, "ensur": [34, 50, 111, 127, 130, 132], "isn": 34, "same": [34, 51, 69, 73, 94, 101, 104, 109, 121, 127], "return_discard": 34, "mangl": 34, "take": [34, 73, 94, 97, 130], "mainli": 34, "cannot": [34, 97, 117, 122], "trivial": [34, 103], "For": [34, 93, 109], "doe": [34, 101, 103, 120], "try": 34, "equival": 34, "its": [34, 97], "regular": [34, 72], "otherwis": [34, 111], "itself": [34, 103], "deem": 34, "wai": [34, 52, 130, 132], "optic": [34, 94], "found": [34, 38, 41, 44, 47, 55, 94, 111], "ofintern": 35, "between": [36, 71, 86, 87, 88, 89, 92, 99, 103, 104, 109, 111, 119, 120], "param": 36, "deprec": [37, 38, 46, 47, 124], "parquetdataconvert": [37, 38], "gcd_rescu": [38, 41, 44, 47, 125], "i3toparquetconvert": [38, 40, 41], "subfold": [38, 41, 44, 47], "search": [38, 41, 43, 44, 45, 47, 125], "convent": [38, 41, 44, 47], "folder": [38, 41, 44, 45, 47, 58], "accompani": [38, 41, 44, 47], "howev": [38, 41, 44, 47], "broken": [38, 41, 44, 47], "In": [38, 41, 43, 44, 47, 54, 119, 120, 132], "icetray_verbos": [38, 41, 44, 47], "verbos": [38, 41, 44, 47, 99, 109], "pframe": [38, 41, 44, 47], "module_dict": 39, "devic": [39, 59], "retro_table_nam": 39, "n_worker": [39, 58, 106], "pipeline_nam": 39, "initialis": [39, 120], "gnn_module_for_energy_regress": 39, "modulelist": 39, "comput": [39, 59, 72, 89, 99, 103, 104, 111, 117, 119, 120, 122], "100": [39, 132], "size": [39, 56, 72, 73, 79, 81, 82, 83, 85, 104, 115], "alreadi": [39, 51, 132], "error": [39, 111, 127, 130], "prompt": 39, "avoid": [39, 127, 130], "overwrit": [39, 59, 109], "i3tosqliteconvert": [40, 41, 47], "parquettosqliteconvert": [40, 41], "preconfigur": 41, "written": [41, 58], "parquetread": [42, 45], "addit": [43, 54, 69, 72, 99, 111, 113], "accepted_file_extens": 43, "accepted_extractor": 43, "accept": [43, 130], "compat": [43, 52, 103], "extracor_nam": 43, "produc": [43, 71, 110, 113], "find_fil": [43, 44, 45], "mai": [43, 52, 59, 93, 132], "overwritten": [43, 115, 117], "match": [43, 113, 125, 128], "set_extractor": 43, "validate_fil": 43, "input_fil": [43, 58], "reli": 44, "environ": [44, 132], "sqlitedataconvert": [46, 47, 132], "pairwise_shuffl": [48, 50], "database_exist": [48, 51], "query_databas": [48, 51], "get_primary_kei": [48, 51], "database_table_exist": [48, 51], "run_sql_cod": [48, 51], "save_to_sql": [48, 51], "attach_index": [48, 51], "create_t": [48, 51], "create_table_and_save_to_sql": [48, 51], "stringselectionresolv": [48, 52], "rng": 50, "relat": [50, 125], "i3_list": [50, 125], "gcd_list": [50, 125], "correpond": 50, "handi": 50, "becaus": 50, "even": 50, "files_list": 50, "gcd_shuffl": 50, "i3_shuffl": 50, "database_path": [51, 106, 113], "execut": 51, "result": [51, 55, 73, 94, 109, 111, 112, 121, 132], "datafram": [51, 52, 54, 75, 99, 106, 112, 113], "primari": [51, 56], "splitinicepuls": 51, "table_nam": 51, "df": 51, "attach": 51, "default_typ": 51, "integer_primary_kei": 51, "NOT": [51, 111], "integ": [51, 79, 81, 82, 111], "Such": 51, "row": [51, 56, 94, 104], "appropri": [51, 103], "expect": [51, 52, 54, 63, 65, 90, 93], "doesn": 51, "indic": [52, 67, 73, 79, 89, 94, 97, 109, 115, 130], "use_cach": 52, "flexibl": 52, "below": [52, 93, 107, 113, 130, 132], "show": [52, 109], "involv": 52, "cover": 52, "current": [52, 97, 109, 130, 132], "yml": [52, 115, 119, 120], "50000": [52, 119], "ab": [52, 111, 119], "12": [52, 85, 119], "14": [52, 119], "16": [52, 71, 79, 119], "13": [52, 132], "panda": [52, 113], "syntax": [52, 111], "fix": 52, "randomli": [52, 90, 91, 120], "dataformat": [53, 56], "sqlitewrit": [53, 56], "graphnetfilesavemethod": [54, 56], "deep": [54, 56, 72, 83, 85], "save_fil": 54, "reciev": 54, "file_extens": 54, "output_dir": [54, 55, 56], "smaller": 54, "expects_merged_datafram": 54, "write": [55, 63, 65, 132], "events_per_batch": 55, "constitut": 55, "subsampl": 55, "full": 55, "200000": 55, "merged_database_nam": 56, "max_table_s": 56, "db": [56, 112, 113], "maximum": [56, 73, 93, 94, 103, 115], "proceedur": 56, "partit": 56, "approxim": 56, "you": [56, 58, 71, 119, 120, 130, 132], "mani": 56, "exceed": 56, "400": 56, "million": 56, "tend": 56, "notic": [56, 104, 111], "slower": 56, "put": 56, "primary_key_rescu": 56, "database_nam": 56, "my_databas": 56, "cleaning_modul": [57, 62], "inference_modul": [57, 62], "deploymentmodul": [57, 58, 59, 65], "baseclass": 58, "thei": 58, "appear": 58, "Will": [58, 63, 65, 88], "independ": 58, "sequenc": [58, 71, 72, 94, 104, 112], "determin": [58, 79], "divid": 58, "model_config": [59, 63, 65, 114, 116, 117, 119, 122], "state_dict": [59, 63, 65, 95, 98, 124], "prediction_column": [59, 65, 99, 112], "modelconfig": [59, 63, 65, 95, 116, 119, 120], "i3pulsecleanermodul": [62, 63], "i3inferencemodul": [62, 63, 65], "pulsemap_extractor": [63, 65], "model_nam": [63, 65, 106], "discard_empty_ev": 63, "clean": [63, 130, 132], "assum": [63, 75, 90, 94, 103, 104], "been": [63, 111, 130], "pulsmap": [63, 65], "summar": [63, 65, 93, 94], "help": [63, 65, 115, 130], "entri": [63, 65, 81, 104, 107, 115], "dynedg": [63, 65, 68, 78, 82, 83, 85], "associ": [63, 65, 90, 94, 102, 103, 111], "7": [63, 73, 106], "consid": [63, 79, 132], "posit": [63, 71, 72, 73, 85, 94, 102, 117, 122], "signal": 63, "els": 63, "elimin": 63, "whose": 63, "empti": 63, "speed": [63, 89], "especi": 63, "sinc": [63, 111], "further": 63, "calcul": [63, 71, 88, 91, 93, 99, 104, 110, 111], "energy_reco": 65, "miss": 67, "embed": [68, 70, 79, 85, 97, 101, 103], "rnn_tito": [68, 78], "convnet": [68, 78], "dynedge_jinst": [68, 78], "dynedge_kaggle_tito": [68, 78], "icemix": [68, 78], "edg": [68, 72, 73, 81, 82, 83, 86, 89, 90, 91, 92, 93, 104], "node_rnn": [68, 79, 96], "unbatch_edge_index": [68, 69], "attributecoarsen": [68, 69], "domcoarsen": [68, 69], "customdomcoarsen": [68, 69], "domandtimewindowcoarsen": [68, 69], "standardaveragedmodel": [68, 98], "standardmodel": [68, 98, 99], "calculate_xyzt_homophili": [68, 104], "calculate_distance_matrix": [68, 104], "knn_graph_batch": [68, 104], "array_to_sequ": [68, 104], "oper": [69, 72, 78, 81], "cluster": [69, 72, 73, 79, 81, 83, 93, 94, 97], "local": [69, 76, 77, 93, 115], "edge_index": [69, 72, 104], "accord": [69, 73, 88, 90, 91, 94], "vector": [69, 72, 73, 111], "longtensor": [69, 73, 104], "mathbf": [69, 73], "ldot": [69, 73], "reduce_opt": 69, "avg": 69, "avg_pool": 69, "avg_pool_x": 69, "max": [69, 72, 81, 83, 111, 115], "max_pool": [69, 73], "max_pool_x": [69, 73], "min": [69, 73, 81, 83], "min_pool": [69, 70, 73], "min_pool_x": [69, 70, 73], "sum": [69, 73, 81, 83, 99, 113], "sum_pool": [69, 70, 73], "sum_pool_x": [69, 70, 73], "forward": [69, 71, 72, 75, 79, 80, 81, 82, 83, 84, 85, 88, 90, 93, 97, 99, 103, 111], "simplecoarsen": 69, "window": 69, "time_window": 69, "sinusoidalposemb": [70, 71], "fourierencod": [70, 71], "spacetimeencod": [70, 71], "dynedgeconv": [70, 72, 81], "edgeconvtito": [70, 72], "dyntran": [70, 72, 79, 83], "droppath": [70, 72], "mlp": [70, 72, 81], "block_rel": [70, 72], "attention_rel": [70, 72], "sum_pool_and_distribut": [70, 73], "group_bi": [70, 73], "group_pulses_to_dom": [70, 73], "group_pulses_to_pmt": [70, 73], "std_pool_x": [70, 73], "std_pool": [70, 73], "dim": [71, 72], "n_freq": 71, "scale": [71, 72, 82, 85, 89, 90, 94, 103, 111], "lightningmodul": [71, 72, 95, 109, 127], "sinusoid": [71, 85], "competit": [71, 72, 76, 83, 85], "2nd": [71, 85], "place": [71, 85, 124, 130], "solut": [71, 72, 83, 85, 130], "see": [71, 79, 88, 90, 109, 130, 132], "arxiv": [71, 88, 111], "2310": 71, "15674": 71, "fourier": 71, "encod": 71, "attent": [71, 72, 85], "1706": 71, "03762": 71, "seen": 71, "soft": 71, "digit": 71, "dimens": [71, 72, 76, 77, 79, 80, 81, 83, 85, 94, 97, 103, 104, 111], "frequenc": 71, "seq_length": [71, 85, 104], "output_dim": 71, "incorpor": 71, "meaning": 71, "128": [71, 80, 81, 83, 85, 115], "dimension": [71, 72], "384": [71, 85], "spacetim": 71, "space": [71, 88, 89, 103, 113], "interv": 71, "32": [71, 85], "aggr": 72, "nb_neighbor": 72, "features_subset": [72, 79, 81, 83, 97], "edgeconv": 72, "convolut": [72, 80, 81, 82, 83], "aggreg": [72, 73], "8": [72, 73, 79, 81, 83, 91, 97, 111, 112, 130, 132], "neighbour": [72, 79, 81, 83, 88, 89, 91, 97, 104], "slice": [72, 81], "sparsetensor": 72, "messagepass": 72, "tito": [72, 79, 83], "reset_paramet": 72, "reset": 72, "learnabl": [72, 78, 79, 80, 81, 82, 83, 84, 85, 97, 103], "messag": [72, 109, 127], "x_i": 72, "x_j": 72, "layer_s": 72, "n_head": [72, 79, 83], "dyntrans1": 72, "head": [72, 79, 83, 85, 103], "multiheadattent": 72, "drop_prob": 72, "drop": [72, 80], "stochast": 72, "depth": [72, 85, 94], "probabl": [72, 111], "dure": [72, 85, 90, 103, 109], "extra_repr": [72, 95], "extra": [72, 132], "in_featur": 72, "hidden_featur": 72, "out_featur": 72, "activ": [72, 79, 81, 93, 97, 99, 103, 130, 132], "gelu": 72, "dropout_prob": 72, "multi": [72, 81], "perceptron": [72, 81], "hidden": [72, 79, 81, 82, 97], "dropout": [72, 79, 97], "input_dim": 72, "num_head": 72, "mlp_ratio": 72, "qkv_bia": 72, "qk_scale": 72, "attn_drop": 72, "drop_path": 72, "init_valu": 72, "norm_lay": 72, "normal": [72, 81, 94, 103], "layernorm": 72, "attn_head_dim": 72, "beitv2": 72, "4": [72, 82, 85, 102, 107], "feedforward": 72, "bia": 72, "term": [72, 111], "matric": 72, "factor": [72, 109], "dot": 72, "gamma_1": 72, "gamma_2": 72, "key_padding_mask": 72, "rel_pos_bia": 72, "kv": 72, "proj_drop": 72, "mechan": 72, "rel": [72, 85], "multipli": [72, 109], "head_dim": 72, "q": 72, "k": [72, 79, 81, 83, 88, 91, 97, 104, 111], "attn_mask": 72, "just": [73, 132], "negat": 73, "cluster_index": 73, "distribut": [73, 81, 102, 103, 111, 113], "ident": [73, 103], "pmt": [73, 94], "f1": 73, "f2": 73, "6": [73, 107], "groupbi": 73, "3": [73, 79, 80, 83, 89, 94, 97, 102, 104, 106, 107, 111, 130, 132], "matrix": [73, 88, 89, 104, 111], "mathbb": 73, "r": [73, 88, 132], "n_1": 73, "n_b": 73, "f": 73, "obtain": [73, 111], "wise": 73, "dens": 73, "fc": 73, "known": 73, "std": 73, "repres": [73, 79, 90, 91, 93, 94, 104, 117, 119, 120], "averag": [73, 98, 111], "torch_geometr": [73, 104], "version": [73, 94, 103, 109, 130, 132], "standardis": 74, "icecubekaggl": [74, 76], "icecubedeepcor": [74, 76], "icecubeupgrad": [74, 76], "orca150": [74, 77], "ins": 75, "feature_map": [75, 76, 77], "input_featur": [75, 90], "input_feature_nam": [75, 90, 91, 93], "adjac": 75, "geometry_t": [75, 76, 77], "public": [75, 113], "retriev": 75, "geometri": [75, 90], "string_index_nam": 75, "sensor_position_nam": 75, "xyz": [75, 76, 77, 93, 94], "sensor_index_nam": 75, "sensor": [75, 90], "geometry_table_path": [76, 77], "home": [76, 77, 115, 132], "runner": [76, 77, 115], "lib": [76, 77, 115, 132], "python3": [76, 77, 115], "string_id_column": [76, 77], "sensor_id_column": [76, 77], "sensor_id": [76, 77], "icecube_upgrad": 76, "prototyp": 77, "orca_150": 77, "sensor_string_id": 77, "dynedgejinst": [78, 82], "dynedgetito": [78, 79, 83], "deepic": [78, 85], "rnn_dynedg": 79, "intend": [79, 97, 132], "amount": 79, "nb_input": [79, 80, 81, 82, 83, 84, 97, 101, 102, 103], "time_series_column": [79, 97], "treat": [79, 97], "nb_neighbour": [79, 81, 83, 97], "rnn_layer": 79, "rnn_hidden_s": 79, "64": [79, 132], "rnn_dropout": 79, "latent": [79, 81, 83, 85, 97, 101, 102, 103], "metric": [79, 81, 83, 89, 97, 109], "nearest": [79, 81, 83, 88, 89, 91, 97, 104], "dyntrans_layer_s": [79, 83], "post_processing_layer_s": [79, 81, 83], "post": [79, 81, 83], "readout_layer_s": [79, 81, 83], "readout": [79, 81, 83], "global_pooling_schem": [79, 81, 83], "scheme": [79, 81, 83], "embedding_dim": [79, 97], "ie": 79, "use_global_featur": [79, 83], "use_post_processing_lay": [79, 83], "author": [80, 82, 111], "martin": 80, "minh": 80, "nb_output": [80, 82, 84, 93, 101, 102, 103], "nb_intermedi": 80, "dropout_ratio": 80, "fraction": [80, 97, 112], "dynedge_layer_s": 81, "dimenion": [81, 83], "256": [81, 83], "336": [81, 83], "follow": [81, 99, 111, 113, 130, 132], "_and_": 81, "As": 81, "last": [81, 97, 101, 102, 103, 109, 112], "add_global_variables_after_pool": 81, "altern": [81, 111, 130], "activation_lay": 81, "add_norm_lay": 81, "linear": 81, "skip_readout": 81, "exact": [82, 111], "2209": 82, "03042": 82, "oerso": 82, "layer_size_scal": 82, "ic": [83, 85, 93], "univers": [83, 85], "south": [83, 85], "pole": [83, 85], "core": 84, "drhb": 85, "http": [85, 88, 90, 111, 130], "github": [85, 90, 111, 132], "com": [85, 90, 111, 132], "hidden_dim": 85, "head_siz": 85, "depth_rel": 85, "n_rel": 85, "scaled_emb": 85, "include_dynedg": 85, "dynedge_arg": 85, "impact": 85, "no_weight_decai": 85, "cls_tocken": 85, "subject": [85, 111], "decai": 85, "edgedefinit": [86, 87, 88, 89, 90, 92], "how": [86, 87, 92], "drawn": [86, 87, 91, 92], "minkowski": [86, 87], "knngraph": [86, 91], "lex_sort": [86, 94], "gather_cluster_sequ": [86, 94], "identify_indic": [86, 94], "cluster_summarize_with_percentil": [86, 94], "ice_transpar": [86, 94], "knnedg": [87, 88], "radialedg": [87, 88], "euclideanedg": [87, 88], "compute_minkowski_distance_mat": [87, 89], "minkowskiknnedg": [87, 89], "_construct_edg": 88, "definit": [88, 90, 91, 93, 95, 103, 130], "nb_nearest_neighbour": [88, 89, 91], "distanc": [88, 89, 91, 104], "sphere": 88, "chosen": [88, 94, 127], "radiu": 88, "centr": 88, "radial": 88, "center": 88, "euclidean": [88, 130], "org": [88, 111, 132], "pdf": 88, "1809": 88, "06166": 88, "space_coord": 89, "time_coord": 89, "pairwis": [89, 104], "second": 89, "m": [89, 94, 111], "light": [89, 132], "time_like_weight": 89, "prefer": [89, 132], "over": [89, 93], "time_lik": 89, "hold": 90, "alter": 90, "node_definit": [90, 91], "edge_definit": 90, "nodedefinit": [90, 91, 92, 93], "nodesaspuls": [90, 92, 93], "perturbation_dict": [90, 91], "deviat": [90, 91, 94], "perturb": [90, 91], "add_inactive_sensor": 90, "inact": 90, "append": 90, "pad": [90, 94, 104], "sensor_mask": 90, "mask": [90, 104], "string_mask": 90, "sort_bi": 90, "sort": [90, 94], "truth_dict": 90, "custom_label_funct": 90, "loss_weight": [90, 103], "data_path": 90, "num_row": 90, "team": [90, 130], "blob": [90, 111], "getting_start": 90, "md": 90, "your": [91, 130, 132], "percentileclust": [92, 93], "nodeasdomtimeseri": [92, 93], "icemixnod": [92, 93], "num_puls": 93, "node_feature_nam": 93, "new_features_nam": 93, "overridden": 93, "set_number_of_input": 93, "set_output_feature_nam": 93, "measur": [93, 94, 104], "cherenkov": [93, 94], "radiat": [93, 94], "percentil": [93, 94], "summari": [93, 94], "cluster_on": [93, 94], "50": [93, 94, 115], "90": [93, 94, 107], "add_count": [93, 94], "duplic": 93, "id_column": 93, "time_column": 93, "charge_column": 93, "max_activ": 93, "n_puls": 93, "limit": [93, 111], "minimum": [93, 103], "hlc": 93, "max_puls": 93, "768": 93, "z_name": 93, "hlc_name": 93, "coincid": 93, "cluster_column": 94, "numpi": 94, "along": 94, "backward": [94, 111], "feature_idx": 94, "turn": [94, 130], "gather": 94, "nan": 94, "n_cluster": 94, "l": [94, 104], "largest": 94, "suppos": 94, "n_pmt": 94, "three": [94, 111], "spatial": 94, "column_offset": 94, "feature_nam": 94, "summarization_indic": 94, "cluster_indic": 94, "interpol": [94, 109], "500": 94, "inaccur": 94, "scatter": 94, "f_absorpt": 94, "absorpt": 94, "f_scatter": 94, "verbose_print": 95, "save_state_dict": 95, "load_state_dict": [95, 98], "karg": [95, 98], "trust": 95, "enough": 95, "eval": [95, 132], "lambda": 95, "express": [95, 111], "consequ": 95, "set_verbose_print_recurs": 95, "descript": [95, 115], "print": [95, 109, 127], "about": [95, 117, 119, 120, 122], "extra_repr_recurs": 95, "indent": 95, "recurr": 96, "nodetimernn": 97, "standalon": 97, "pr": 97, "seper": 97, "hidden_s": [97, 101, 102, 103], "num_lay": 97, "clean_up_data_object": 97, "updat": [97, 98, 104, 106, 109], "swa": 98, "ema": 98, "standardaveragemodel": 98, "training_step": [98, 99], "train_batch": [98, 99], "batch_idx": [98, 99, 104], "step": [98, 99, 104, 109], "validation_step": [98, 99], "val_batch": [98, 99], "optimizer_step": 98, "epoch": [98, 109, 115], "optim": [98, 99, 109], "optimizer_closur": 98, "on_train_end": 98, "ones": [98, 132], "backbon": 99, "max_epoch": 99, "early_stopping_pati": [99, 122], "gpu": [99, 115, 132], "ckpt_path": 99, "log_every_n_step": 99, "gradient_clip_v": 99, "distribution_strategi": 99, "trainer_kwarg": 99, "pytorch_lightn": [99, 109, 127], "trainer": [99, 109, 112], "target_label": [99, 103], "target": [99, 101, 103, 111, 122], "prediction_label": [99, 103], "configure_optim": 99, "shared_step": 99, "share": 99, "compute_loss": [99, 103], "pred": [99, 103], "mode": [99, 103], "deactiv": [99, 103], "predict_as_datafram": 99, "additional_attribut": [99, 112], "multiclassclassificationtask": [100, 101], "binaryclassificationtask": [100, 101], "binaryclassificationtasklogit": [100, 101], "azimuthreconstructionwithkappa": [100, 102], "azimuthreconstruct": [100, 102], "directionreconstructionwithkappa": [100, 102], "zenithreconstruct": [100, 102], "zenithreconstructionwithkappa": [100, 102], "energyreconstruct": [100, 102], "energyreconstructionwithpow": [100, 102], "energytcreconstruct": [100, 102], "energyreconstructionwithuncertainti": [100, 102], "vertexreconstruct": [100, 102], "positionreconstruct": [100, 102], "timereconstruct": [100, 102], "inelasticityreconstruct": [100, 102], "learnedtask": [100, 103], "standardlearnedtask": [100, 101, 102, 103], "identitytask": [100, 101, 103], "standardflowtask": [100, 103], "classifi": 101, "untransform": 101, "interpret": 101, "logit": [101, 111], "binari": [101, 111], "default_target_label": [101, 102, 103], "default_prediction_label": [101, 102, 103], "target_pr": 101, "angl": [102, 110], "kappa": [102, 111], "var": 102, "azimuth_pr": 102, "azimuth_kappa": 102, "3d": [102, 111], "vmf": 102, "dir_x_pr": 102, "dir_y_pr": 102, "dir_z_pr": 102, "direction_kappa": 102, "zenith_pr": 102, "zenith_kappa": 102, "stabl": [102, 103], "energy_pr": 102, "cascad": 102, "energy_track_pr": 102, "energy_cascade_pr": 102, "uncertainti": 102, "energy_sigma": 102, "vertex": 102, "position_x_pr": 102, "position_y_pr": 102, "position_z_pr": 102, "interaction_time_pr": 102, "interact": 102, "hadron": 102, "inelasticity_pr": 102, "lossfunct": [103, 108, 111], "auto": 103, "matic": 103, "_pred": 103, "transform_prediction_and_target": 103, "numer": 103, "transform_target": 103, "log10": [103, 113], "rather": [103, 127], "transform_infer": 103, "invers": 103, "recov": 103, "transform_support": 103, "restrict": [103, 111], "invert": 103, "1e6": 103, "train_ev": 103, "act": [103, 111], "wrt": 103, "meet": 103, "come": [103, 130], "vast": 103, "major": 103, "supervis": 103, "grab": 103, "send": 103, "evalu": 103, "normalizingflow": 103, "jacobian": 103, "flow": 103, "xyzt": 104, "homophili": 104, "xyz_coord": 104, "nb_dom": 104, "excluding_valu": 104, "total": [104, 112, 113], "belong": 104, "inf": 104, "masked_entri": 104, "config_updat": [105, 106], "weightfitt": [105, 106, 108, 113], "contourfitt": [105, 106], "read_entri": [105, 107], "plot_2d_contour": [105, 107], "plot_1d_contour": [105, 107], "contour": [106, 107], "config_path": 106, "new_config_path": 106, "dummy_sect": 106, "temp": 106, "dummi": 106, "section": 106, "header": 106, "configupdat": 106, "programat": 106, "statistical_fit": 106, "fit_weight": [106, 113], "config_outdir": 106, "weight_nam": [106, 113], "pisa_config_dict": 106, "add_to_databas": [106, 113], "flux": 106, "_database_path": 106, "statist": 106, "effect": [106, 109, 130], "account": 106, "certain": 106, "systemat": 106, "hypersurfac": 106, "chang": [106, 111, 130], "assumpt": 106, "regard": 106, "pipeline_path": 106, "post_fix": 106, "include_retro": 106, "fit_1d_contour": 106, "run_nam": 106, "config_dict": 106, "grid_siz": 106, "theta23_minmax": 106, "36": 106, "54": 106, "dm31_minmax": 106, "1d": [106, 107], "fit_2d_contour": 106, "2d": [106, 107, 111], "content": 107, "contour_data": 107, "xlim": 107, "ylim": 107, "0023799999999999997": 107, "0025499999999999997": 107, "chi2_critical_valu": 107, "width": 107, "height": 107, "path_to_pisa_fit_result": 107, "name_of_my_model_in_fit": 107, "One": 107, "field": [107, 110, 117, 119, 120, 122, 124], "legend": 107, "color": 107, "linestyl": 107, "style": [107, 130], "line": [107, 109, 115], "upper": 107, "bound": 107, "axi": 107, "605": 107, "critic": [107, 127], "chi2": 107, "cl": 107, "right": [107, 111], "176": 107, "inch": 107, "388": 107, "706": 107, "abov": [107, 111, 113, 132], "352": 107, "piecewiselinearlr": [108, 109], "progressbar": [108, 109], "graphnetearlystop": [108, 109], "mseloss": [108, 111], "rmseloss": [108, 111], "logcoshloss": [108, 111], "crossentropyloss": [108, 111], "binarycrossentropyloss": [108, 111], "logcmk": [108, 111], "vonmisesfisherloss": [108, 111], "vonmisesfisher2dloss": [108, 111], "euclideandistanceloss": [108, 111], "vonmisesfisher3dloss": [108, 111], "collator_sequence_bucklet": [108, 112], "make_dataload": [108, 112], "make_train_validation_dataload": [108, 112], "get_predict": [108, 112], "save_result": [108, 112], "save_select": [108, 112], "uniform": [108, 113], "bjoernlow": [108, 113], "mileston": 109, "last_epoch": 109, "_lrschedul": 109, "linearli": 109, "closest": 109, "vice": 109, "versa": 109, "wrap": [109, 119, 120], "stdout": 109, "get_lr": 109, "refresh_r": 109, "process_posit": 109, "tqdmprogressbar": 109, "progress": 109, "bar": 109, "customis": 109, "init_validation_tqdm": 109, "init_predict_tqdm": 109, "init_test_tqdm": 109, "init_train_tqdm": 109, "get_metr": 109, "on_train_epoch_start": 109, "previou": 109, "behaviour": 109, "on_train_epoch_end": 109, "don": [109, 132], "duplciat": 109, "save_dir": 109, "earlystop": 109, "earli": [109, 115], "keyword": [109, 117, 122], "graphnet_model": 109, "on_validation_end": 109, "on_fit_end": 109, "runtim": [110, 132], "azimuth_kei": 110, "zenith_kei": 110, "access": [110, 132], "azimiuth": 110, "return_el": 111, "elementwis": 111, "squar": 111, "root": [111, 132], "cosh": 111, "small": 111, "cross": 111, "entropi": 111, "num_class": 111, "softmax": 111, "ed": 111, "mit": 111, "licens": 111, "copyright": 111, "2019": 111, "ryabinin": 111, "permiss": 111, "herebi": 111, "person": 111, "copi": 111, "document": 111, "deal": 111, "modifi": 111, "publish": 111, "sublicens": 111, "sell": 111, "permit": 111, "whom": 111, "furnish": 111, "so": [111, 132], "condit": 111, "shall": 111, "substanti": 111, "portion": 111, "THE": 111, "AS": 111, "warranti": 111, "OF": 111, "kind": 111, "OR": 111, "impli": 111, "BUT": 111, "TO": 111, "merchant": 111, "FOR": 111, "particular": [111, 130], "AND": 111, "noninfring": 111, "IN": 111, "NO": 111, "holder": 111, "BE": 111, "liabl": 111, "claim": 111, "damag": 111, "liabil": 111, "action": 111, "contract": 111, "tort": 111, "aris": 111, "WITH": 111, "_____________________": 111, "mryab": 111, "vmf_loss": 111, "master": 111, "py": [111, 132], "bessel": 111, "exponenti": 111, "ditto": 111, "iv": 111, "1812": 111, "04616": 111, "spite": 111, "suggest": 111, "sec": 111, "paper": 111, "correct": 111, "static": [111, 130], "ctx": 111, "grad_output": 111, "von": 111, "mise": 111, "fisher": 111, "log_cmk_exact": 111, "c_": 111, "exactli": [111, 127], "log_cmk_approx": 111, "approx": 111, "minu": 111, "sign": 111, "log_cmk": 111, "kappa_switch": 111, "diverg": 111, "700": 111, "float64": 111, "precis": 111, "unaccur": 111, "switch": 111, "batch_split": 112, "bucket": 112, "cut": 112, "mini": 112, "explicitli": [112, 117, 122], "alwai": 112, "respect": 112, "database_indic": 112, "test_siz": 112, "node_level": 112, "tag": [112, 130, 132], "archiv": 112, "file_path": 112, "csv": [112, 119], "uniformweightfitt": 113, "bin": 113, "db_count_norm": 113, "privat": 113, "_fit_weight": 113, "sql": 113, "desir": [113, 125], "np": 113, "happen": 113, "x_low": 113, "wherea": 113, "curv": 113, "base_config": [114, 116], "dataset_config": [114, 116], "training_config": [114, 116], "argumentpars": [114, 115], "rename_state_dict_entri": [114, 124], "is_gcd_fil": [114, 125], "is_i3_fil": [114, 125], "has_extens": [114, 125], "find_i3_fil": [114, 125], "has_icecube_packag": [114, 126], "has_torch_packag": [114, 126], "has_pisa_packag": [114, 126], "requires_icecub": [114, 126], "repeatfilt": [114, 127], "eps_lik": [114, 128], "consist": [115, 127, 130], "cli": 115, "pop_default": 115, "usag": 115, "command": [115, 132], "standard_argu": 115, "training_example_data_sqlit": 115, "patienc": 115, "narg": 115, "example_energy_reconstruction_model": 115, "num": 115, "fetch": 115, "with_standard_argu": 115, "baseconfig": [116, 117, 118, 119, 120, 122], "get_all_argument_valu": [116, 117], "save_dataset_config": [116, 119], "datasetconfigsavermeta": [116, 119], "datasetconfigsaverabcmeta": [116, 119], "save_model_config": [116, 120], "modelconfigsavermeta": [116, 120], "modelconfigsaverabc": [116, 120], "traverse_and_appli": [116, 121], "list_all_submodul": [116, 121], "get_all_grapnet_class": [116, 121], "is_graphnet_modul": [116, 121], "is_graphnet_class": [116, 121], "get_graphnet_class": [116, 121], "trainingconfig": [116, 122], "basemodel": [117, 119, 120], "validationerror": [117, 122], "pydantic_cor": [117, 122], "dump": [117, 119, 120], "yaml": [117, 118], "as_dict": [117, 119, 120], "model_computed_field": [117, 119, 120, 122], "classvar": [117, 119, 120, 122], "computedfieldinfo": [117, 119, 120, 122], "configdict": [117, 119, 120, 122], "conform": [117, 119, 120, 122], "pydant": [117, 119, 120, 122], "model_field": [117, 119, 120, 122], "fieldinfo": [117, 119, 120, 122], "metadata": [117, 119, 120, 122], "replac": [117, 119, 120, 122, 124], "__fields__": [117, 119, 120, 122], "v1": [117, 119, 120, 122, 132], "re": [118, 132], "save_config": 118, "dataconfig": 119, "transpar": [119, 120, 130], "reproduc": [119, 120], "session": [119, 120], "anoth": [119, 120], "still": 119, "train_select": 119, "unambigu": [119, 120], "annot": [119, 120, 122], "nonetyp": 119, "init_fn": [119, 120], "__init__": [119, 120, 132], "metaclass": [119, 120], "abcmeta": [119, 120], "datasetconfigsav": 119, "trainabl": 120, "hyperparamet": 120, "thu": 120, "modelconfigsav": 120, "fn_kwarg": 121, "structur": 121, "moduletyp": 121, "grapnet": 121, "lookup": 121, "transit": 124, "old_phras": 124, "new_phras": 124, "deepcopi": 124, "who": 124, "renam": 124, "phrase": 124, "system": [125, 132], "filenam": 125, "dir": 125, "test_funct": 126, "repeat": 127, "nb_repeats_allow": 127, "record": 127, "logrecord": 127, "clear": 127, "intuit": 127, "composit": 127, "loggeradapt": 127, "clash": 127, "setlevel": 127, "deleg": 127, "msg": 127, "warn": 127, "info": [127, 132], "debug": 127, "warning_onc": 127, "onc": 127, "handler": 127, "file_handl": 127, "filehandl": 127, "stream_handl": 127, "streamhandl": 127, "assort": 128, "ep": 128, "api": 129, "To": [130, 132], "sure": [130, 132], "smooth": 130, "guidelin": 130, "guid": 130, "encourag": 130, "contributor": 130, "discuss": 130, "bug": 130, "anyth": 130, "describ": 130, "would": 130, "yourself": 130, "ownership": 130, "prioriti": 130, "situat": 130, "lot": 130, "effort": 130, "go": 130, "outsid": 130, "scope": 130, "better": 130, "fork": 130, "repo": 130, "dedic": 130, "branch": [130, 132], "repositori": 130, "own": [130, 132], "autom": 130, "review": 130, "pep8": 130, "docstr": 130, "googl": 130, "hint": 130, "adher": 130, "pep": 130, "pylint": 130, "flake8": 130, "black": 130, "well": 130, "recommend": [130, 132], "mypi": 130, "pydocstyl": 130, "docformatt": 130, "commit": 130, "hook": 130, "instal": 130, "pip": [130, 132], "Then": 130, "everytim": 130, "pep257": 130, "concept": 130, "ljvmiranda921": 130, "io": 130, "notebook": 130, "2018": 130, "06": 130, "21": 130, "precommit": 130, "virtual": 132, "anaconda": 132, "prove": 132, "instruct": 132, "want": 132, "part": 132, "achiev": 132, "bash": 132, "shell": 132, "cvmf": 132, "opensciencegrid": 132, "py3": 132, "v4": 132, "sh": 132, "rhel_7_x86_64": 132, "metaproject": 132, "env": 132, "alia": 132, "script": 132, "everi": 132, "With": 132, "now": 132, "geometr": 132, "won": 132, "later": 132, "torch_cpu": 132, "txt": 132, "torch_gpu": 132, "unix": 132, "git": 132, "clone": 132, "usernam": 132, "cd": 132, "conda": 132, "gcc_linux": 132, "gxx_linux": 132, "libgcc": 132, "cudatoolkit": 132, "11": 132, "forg": 132, "box": 132, "compil": 132, "gcc": 132, "date": 132, "possibli": 132, "cuda": 132, "toolkit": 132, "recent": 132, "omit": 132, "newer": 132, "export": 132, "ld_library_path": 132, "anaconda3": 132, "miniconda3": 132, "bashrc": 132, "librari": 132, "rm": 132, "asogaard": 132, "latest": 132, "dc423315742c": 132, "01_icetrai": 132, "01_convert_i3_fil": 132, "2023": 132, "01": 132, "24": 132, "41": 132, "27": 132, "graphnet_20230124": 132, "134127": 132, "46": 132, "convert_i3_fil": 132, "ic86": 132, "thread": 132, "00": 132, "79": 132, "26": 132, "413": 132, "88it": 132, "specialis": 132, "push": 132, "vx": 132}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [57, 0, 0, "-", "deployment"], [66, 0, 0, "-", "exceptions"], [68, 0, 0, "-", "models"], [105, 0, 0, "-", "pisa"], [108, 0, 0, "-", "training"], [114, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "dataclasses"], [6, 0, 0, "-", "dataconverter"], [7, 0, 0, "-", "dataloader"], [8, 0, 0, "-", "datamodule"], [9, 0, 0, "-", "dataset"], [15, 0, 0, "-", "extractors"], [37, 0, 0, "-", "parquet"], [39, 0, 0, "-", "pipeline"], [40, 0, 0, "-", "pre_configured"], [42, 0, 0, "-", "readers"], [46, 0, 0, "-", "sqlite"], [48, 0, 0, "-", "utilities"], [53, 0, 0, "-", "writers"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.dataclasses": [[5, 1, 1, "", "I3FileSet"], [5, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_files"], [5, 2, 1, "", "modules"], [5, 2, 1, "", "output_folder"]], "graphnet.data.dataconverter": [[6, 1, 1, "", "DataConverter"], [6, 4, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[6, 3, 1, "", "get_map_function"], [6, 3, 1, "", "merge_files"]], "graphnet.data.dataloader": [[7, 1, 1, "", "DataLoader"], [7, 4, 1, "", "collate_fn"], [7, 4, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[7, 3, 1, "", "from_dataset_config"]], "graphnet.data.datamodule": [[8, 1, 1, "", "GraphNeTDataModule"]], "graphnet.data.datamodule.GraphNeTDataModule": [[8, 3, 1, "", "prepare_data"], [8, 3, 1, "", "setup"], [8, 3, 1, "", "teardown"], [8, 5, 1, "", "test_dataloader"], [8, 5, 1, "", "train_dataloader"], [8, 5, 1, "", "val_dataloader"]], "graphnet.data.dataset": [[10, 0, 0, "-", "dataset"], [11, 0, 0, "-", "parquet"], [13, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[10, 1, 1, "", "Dataset"], [10, 1, 1, "", "EnsembleDataset"], [10, 4, 1, "", "load_module"], [10, 4, 1, "", "parse_graph_definition"], [10, 4, 1, "", "parse_labels"]], "graphnet.data.dataset.dataset.Dataset": [[10, 3, 1, "", "add_label"], [10, 3, 1, "", "concatenate"], [10, 3, 1, "", "from_config"], [10, 5, 1, "", "path"], [10, 3, 1, "", "query_table"], [10, 5, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[12, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[12, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[12, 3, 1, "", "query_table"]], "graphnet.data.dataset.sqlite": [[14, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[14, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[14, 3, 1, "", "query_table"]], "graphnet.data.extractors": [[16, 0, 0, "-", "extractor"], [17, 0, 0, "-", "icecube"], [35, 0, 0, "-", "internal"]], "graphnet.data.extractors.extractor": [[16, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[16, 5, 1, "", "name"]], "graphnet.data.extractors.icecube": [[18, 0, 0, "-", "i3extractor"], [19, 0, 0, "-", "i3featureextractor"], [20, 0, 0, "-", "i3genericextractor"], [21, 0, 0, "-", "i3hybridrecoextractor"], [22, 0, 0, "-", "i3ntmuonlabelsextractor"], [23, 0, 0, "-", "i3particleextractor"], [24, 0, 0, "-", "i3pisaextractor"], [25, 0, 0, "-", "i3quesoextractor"], [26, 0, 0, "-", "i3retroextractor"], [27, 0, 0, "-", "i3splinempeextractor"], [28, 0, 0, "-", "i3truthextractor"], [29, 0, 0, "-", "i3tumextractor"], [30, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[18, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[18, 3, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[19, 1, 1, "", "I3FeatureExtractor"], [19, 1, 1, "", "I3FeatureExtractorIceCube86"], [19, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [19, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [19, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[20, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[21, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[22, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[23, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[24, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[25, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[26, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[27, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[28, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[29, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[31, 0, 0, "-", "collections"], [32, 0, 0, "-", "frames"], [33, 0, 0, "-", "i3_filters"], [34, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[31, 4, 1, "", "flatten_nested_dictionary"], [31, 4, 1, "", "serialise"], [31, 4, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[32, 4, 1, "", "frame_is_montecarlo"], [32, 4, 1, "", "frame_is_noise"], [32, 4, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[33, 1, 1, "", "I3Filter"], [33, 1, 1, "", "I3FilterMask"], [33, 1, 1, "", "NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[34, 4, 1, "", "break_cyclic_recursion"], [34, 4, 1, "", "cast_object_to_pure_python"], [34, 4, 1, "", "cast_pulse_series_to_pure_python"], [34, 4, 1, "", "get_member_variables"], [34, 4, 1, "", "is_boost_class"], [34, 4, 1, "", "is_boost_enum"], [34, 4, 1, "", "is_icecube_class"], [34, 4, 1, "", "is_method"], [34, 4, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[36, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[36, 1, 1, "", "ParquetExtractor"]], "graphnet.data.parquet": [[38, 0, 0, "-", "deprecated_methods"]], "graphnet.data.parquet.deprecated_methods": [[38, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.pipeline": [[39, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.pre_configured": [[41, 0, 0, "-", "dataconverters"]], "graphnet.data.pre_configured.dataconverters": [[41, 1, 1, "", "I3ToParquetConverter"], [41, 1, 1, "", "I3ToSQLiteConverter"], [41, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.readers": [[43, 0, 0, "-", "graphnet_file_reader"], [44, 0, 0, "-", "i3reader"], [45, 0, 0, "-", "internal_parquet_reader"]], "graphnet.data.readers.graphnet_file_reader": [[43, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[43, 5, 1, "", "accepted_extractors"], [43, 5, 1, "", "accepted_file_extensions"], [43, 5, 1, "", "extracor_names"], [43, 3, 1, "", "find_files"], [43, 3, 1, "", "set_extractors"], [43, 3, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[44, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[44, 3, 1, "", "find_files"]], "graphnet.data.readers.internal_parquet_reader": [[45, 1, 1, "", "ParquetReader"]], "graphnet.data.readers.internal_parquet_reader.ParquetReader": [[45, 3, 1, "", "find_files"]], "graphnet.data.sqlite": [[47, 0, 0, "-", "deprecated_methods"]], "graphnet.data.sqlite.deprecated_methods": [[47, 1, 1, "", "SQLiteDataConverter"]], "graphnet.data.utilities": [[49, 0, 0, "-", "parquet_to_sqlite"], [50, 0, 0, "-", "random"], [51, 0, 0, "-", "sqlite_utilities"], [52, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.random": [[50, 4, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[51, 4, 1, "", "attach_index"], [51, 4, 1, "", "create_table"], [51, 4, 1, "", "create_table_and_save_to_sql"], [51, 4, 1, "", "database_exists"], [51, 4, 1, "", "database_table_exists"], [51, 4, 1, "", "get_primary_keys"], [51, 4, 1, "", "query_database"], [51, 4, 1, "", "run_sql_code"], [51, 4, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[52, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[52, 3, 1, "", "resolve"]], "graphnet.data.writers": [[54, 0, 0, "-", "graphnet_writer"], [55, 0, 0, "-", "parquet_writer"], [56, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[54, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[54, 5, 1, "", "expects_merged_dataframes"], [54, 5, 1, "", "file_extension"], [54, 3, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[55, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[55, 3, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[56, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[56, 3, 1, "", "merge_files"]], "graphnet.deployment": [[58, 0, 0, "-", "deployer"], [59, 0, 0, "-", "deployment_module"]], "graphnet.deployment.deployer": [[58, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[58, 3, 1, "", "run"]], "graphnet.deployment.deployment_module": [[59, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.icecube": [[63, 0, 0, "-", "cleaning_module"], [65, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[63, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.inference_module": [[65, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[67, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[67, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[69, 0, 0, "-", "coarsening"], [70, 0, 0, "-", "components"], [74, 0, 0, "-", "detector"], [78, 0, 0, "-", "gnn"], [86, 0, 0, "-", "graphs"], [95, 0, 0, "-", "model"], [96, 0, 0, "-", "rnn"], [98, 0, 0, "-", "standard_averaged_model"], [99, 0, 0, "-", "standard_model"], [100, 0, 0, "-", "task"], [104, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[69, 1, 1, "", "AttributeCoarsening"], [69, 1, 1, "", "Coarsening"], [69, 1, 1, "", "CustomDOMCoarsening"], [69, 1, 1, "", "DOMAndTimeWindowCoarsening"], [69, 1, 1, "", "DOMCoarsening"], [69, 4, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[69, 3, 1, "", "forward"], [69, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[71, 0, 0, "-", "embedding"], [72, 0, 0, "-", "layers"], [73, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[71, 1, 1, "", "FourierEncoder"], [71, 1, 1, "", "SinusoidalPosEmb"], [71, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[71, 3, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[71, 3, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[71, 3, 1, "", "forward"]], "graphnet.models.components.layers": [[72, 1, 1, "", "Attention_rel"], [72, 1, 1, "", "Block"], [72, 1, 1, "", "Block_rel"], [72, 1, 1, "", "DropPath"], [72, 1, 1, "", "DynEdgeConv"], [72, 1, 1, "", "DynTrans"], [72, 1, 1, "", "EdgeConvTito"], [72, 1, 1, "", "Mlp"]], "graphnet.models.components.layers.Attention_rel": [[72, 3, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[72, 3, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[72, 3, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[72, 3, 1, "", "extra_repr"], [72, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[72, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[72, 3, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[72, 3, 1, "", "forward"], [72, 3, 1, "", "message"], [72, 3, 1, "", "reset_parameters"]], "graphnet.models.components.layers.Mlp": [[72, 3, 1, "", "forward"]], "graphnet.models.components.pool": [[73, 4, 1, "", "group_by"], [73, 4, 1, "", "group_pulses_to_dom"], [73, 4, 1, "", "group_pulses_to_pmt"], [73, 4, 1, "", "min_pool"], [73, 4, 1, "", "min_pool_x"], [73, 4, 1, "", "std_pool"], [73, 4, 1, "", "std_pool_x"], [73, 4, 1, "", "sum_pool"], [73, 4, 1, "", "sum_pool_and_distribute"], [73, 4, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[75, 0, 0, "-", "detector"], [76, 0, 0, "-", "icecube"], [77, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[75, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[75, 3, 1, "", "feature_map"], [75, 3, 1, "", "forward"], [75, 5, 1, "", "geometry_table"], [75, 5, 1, "", "sensor_index_name"], [75, 5, 1, "", "sensor_position_names"], [75, 5, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[76, 1, 1, "", "IceCube86"], [76, 1, 1, "", "IceCubeDeepCore"], [76, 1, 1, "", "IceCubeKaggle"], [76, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[76, 3, 1, "", "feature_map"], [76, 2, 1, "", "geometry_table_path"], [76, 2, 1, "", "sensor_id_column"], [76, 2, 1, "", "string_id_column"], [76, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[76, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[76, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[76, 3, 1, "", "feature_map"], [76, 2, 1, "", "geometry_table_path"], [76, 2, 1, "", "sensor_id_column"], [76, 2, 1, "", "string_id_column"], [76, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[77, 1, 1, "", "ORCA150"], [77, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.ORCA150": [[77, 3, 1, "", "feature_map"], [77, 2, 1, "", "geometry_table_path"], [77, 2, 1, "", "sensor_id_column"], [77, 2, 1, "", "string_id_column"], [77, 2, 1, "", "xyz"]], "graphnet.models.gnn": [[79, 0, 0, "-", "RNN_tito"], [80, 0, 0, "-", "convnet"], [81, 0, 0, "-", "dynedge"], [82, 0, 0, "-", "dynedge_jinst"], [83, 0, 0, "-", "dynedge_kaggle_tito"], [84, 0, 0, "-", "gnn"], [85, 0, 0, "-", "icemix"]], "graphnet.models.gnn.RNN_tito": [[79, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[79, 3, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[80, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[80, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[81, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[81, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[82, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[82, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[83, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[83, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[84, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[84, 3, 1, "", "forward"], [84, 5, 1, "", "nb_inputs"], [84, 5, 1, "", "nb_outputs"]], "graphnet.models.gnn.icemix": [[85, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[85, 3, 1, "", "forward"], [85, 3, 1, "", "no_weight_decay"]], "graphnet.models.graphs": [[87, 0, 0, "-", "edges"], [90, 0, 0, "-", "graph_definition"], [91, 0, 0, "-", "graphs"], [92, 0, 0, "-", "nodes"], [94, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[88, 0, 0, "-", "edges"], [89, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[88, 1, 1, "", "EdgeDefinition"], [88, 1, 1, "", "EuclideanEdges"], [88, 1, 1, "", "KNNEdges"], [88, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[88, 3, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[89, 1, 1, "", "MinkowskiKNNEdges"], [89, 4, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[90, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[90, 3, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[91, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[93, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[93, 1, 1, "", "IceMixNodes"], [93, 1, 1, "", "NodeAsDOMTimeSeries"], [93, 1, 1, "", "NodeDefinition"], [93, 1, 1, "", "NodesAsPulses"], [93, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[93, 3, 1, "", "forward"], [93, 5, 1, "", "nb_outputs"], [93, 3, 1, "", "set_number_of_inputs"], [93, 3, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[94, 4, 1, "", "cluster_summarize_with_percentiles"], [94, 4, 1, "", "gather_cluster_sequence"], [94, 4, 1, "", "ice_transparency"], [94, 4, 1, "", "identify_indices"], [94, 4, 1, "", "lex_sort"]], "graphnet.models.model": [[95, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[95, 3, 1, "", "extra_repr"], [95, 3, 1, "", "extra_repr_recursive"], [95, 3, 1, "", "from_config"], [95, 3, 1, "", "load"], [95, 3, 1, "", "load_state_dict"], [95, 3, 1, "", "save"], [95, 3, 1, "", "save_state_dict"], [95, 3, 1, "", "set_verbose_print_recursively"], [95, 2, 1, "", "verbose_print"]], "graphnet.models.rnn": [[97, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[97, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[97, 3, 1, "", "clean_up_data_object"], [97, 3, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[98, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[98, 3, 1, "", "load_state_dict"], [98, 3, 1, "", "on_train_end"], [98, 3, 1, "", "optimizer_step"], [98, 3, 1, "", "training_step"], [98, 3, 1, "", "validation_step"]], "graphnet.models.standard_model": [[99, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[99, 3, 1, "", "compute_loss"], [99, 3, 1, "", "configure_optimizers"], [99, 3, 1, "", "fit"], [99, 3, 1, "", "forward"], [99, 3, 1, "", "inference"], [99, 3, 1, "", "predict"], [99, 3, 1, "", "predict_as_dataframe"], [99, 5, 1, "", "prediction_labels"], [99, 3, 1, "", "shared_step"], [99, 5, 1, "", "target_labels"], [99, 3, 1, "", "train"], [99, 3, 1, "", "training_step"], [99, 3, 1, "", "validation_step"]], "graphnet.models.task": [[101, 0, 0, "-", "classification"], [102, 0, 0, "-", "reconstruction"], [103, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[101, 1, 1, "", "BinaryClassificationTask"], [101, 1, 1, "", "BinaryClassificationTaskLogits"], [101, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[101, 2, 1, "", "default_prediction_labels"], [101, 2, 1, "", "default_target_labels"], [101, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[101, 2, 1, "", "default_prediction_labels"], [101, 2, 1, "", "default_target_labels"], [101, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[102, 1, 1, "", "AzimuthReconstruction"], [102, 1, 1, "", "AzimuthReconstructionWithKappa"], [102, 1, 1, "", "DirectionReconstructionWithKappa"], [102, 1, 1, "", "EnergyReconstruction"], [102, 1, 1, "", "EnergyReconstructionWithPower"], [102, 1, 1, "", "EnergyReconstructionWithUncertainty"], [102, 1, 1, "", "EnergyTCReconstruction"], [102, 1, 1, "", "InelasticityReconstruction"], [102, 1, 1, "", "PositionReconstruction"], [102, 1, 1, "", "TimeReconstruction"], [102, 1, 1, "", "VertexReconstruction"], [102, 1, 1, "", "ZenithReconstruction"], [102, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[102, 2, 1, "", "default_prediction_labels"], [102, 2, 1, "", "default_target_labels"], [102, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[102, 2, 1, "", "default_prediction_labels"], [102, 2, 1, "", "default_target_labels"], [102, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[102, 2, 1, "", "default_prediction_labels"], [102, 2, 1, "", "default_target_labels"], [102, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[102, 2, 1, "", "default_prediction_labels"], [102, 2, 1, "", "default_target_labels"], [102, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[102, 2, 1, "", "default_prediction_labels"], [102, 2, 1, "", "default_target_labels"], [102, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[102, 2, 1, "", "default_prediction_labels"], [102, 2, 1, "", "default_target_labels"], [102, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[102, 2, 1, "", "default_prediction_labels"], [102, 2, 1, "", "default_target_labels"], [102, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[102, 2, 1, "", "default_prediction_labels"], [102, 2, 1, "", "default_target_labels"], [102, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[102, 2, 1, "", "default_prediction_labels"], [102, 2, 1, "", "default_target_labels"], [102, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[102, 2, 1, "", "default_prediction_labels"], [102, 2, 1, "", "default_target_labels"], [102, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[102, 2, 1, "", "default_prediction_labels"], [102, 2, 1, "", "default_target_labels"], [102, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[102, 2, 1, "", "default_prediction_labels"], [102, 2, 1, "", "default_target_labels"], [102, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[102, 2, 1, "", "default_prediction_labels"], [102, 2, 1, "", "default_target_labels"], [102, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[103, 1, 1, "", "IdentityTask"], [103, 1, 1, "", "LearnedTask"], [103, 1, 1, "", "StandardFlowTask"], [103, 1, 1, "", "StandardLearnedTask"], [103, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[103, 5, 1, "", "default_prediction_labels"], [103, 5, 1, "", "default_target_labels"], [103, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[103, 3, 1, "", "compute_loss"], [103, 3, 1, "", "forward"], [103, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[103, 3, 1, "", "compute_loss"], [103, 3, 1, "", "forward"], [103, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[103, 3, 1, "", "compute_loss"], [103, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[103, 5, 1, "", "default_prediction_labels"], [103, 5, 1, "", "default_target_labels"], [103, 3, 1, "", "inference"], [103, 5, 1, "", "nb_inputs"], [103, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[104, 4, 1, "", "array_to_sequence"], [104, 4, 1, "", "calculate_distance_matrix"], [104, 4, 1, "", "calculate_xyzt_homophily"], [104, 4, 1, "", "knn_graph_batch"]], "graphnet.pisa": [[106, 0, 0, "-", "fitting"], [107, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[106, 1, 1, "", "ContourFitter"], [106, 1, 1, "", "WeightFitter"], [106, 4, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[106, 3, 1, "", "fit_1d_contour"], [106, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[106, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[107, 4, 1, "", "plot_1D_contour"], [107, 4, 1, "", "plot_2D_contour"], [107, 4, 1, "", "read_entry"]], "graphnet.training": [[109, 0, 0, "-", "callbacks"], [110, 0, 0, "-", "labels"], [111, 0, 0, "-", "loss_functions"], [112, 0, 0, "-", "utils"], [113, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[109, 1, 1, "", "GraphnetEarlyStopping"], [109, 1, 1, "", "PiecewiseLinearLR"], [109, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[109, 3, 1, "", "on_fit_end"], [109, 3, 1, "", "on_train_epoch_end"], [109, 3, 1, "", "on_validation_end"], [109, 3, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[109, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[109, 3, 1, "", "get_metrics"], [109, 3, 1, "", "init_predict_tqdm"], [109, 3, 1, "", "init_test_tqdm"], [109, 3, 1, "", "init_train_tqdm"], [109, 3, 1, "", "init_validation_tqdm"], [109, 3, 1, "", "on_train_epoch_end"], [109, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[110, 1, 1, "", "Direction"], [110, 1, 1, "", "Label"]], "graphnet.training.labels.Label": [[110, 5, 1, "", "key"]], "graphnet.training.loss_functions": [[111, 1, 1, "", "BinaryCrossEntropyLoss"], [111, 1, 1, "", "CrossEntropyLoss"], [111, 1, 1, "", "EuclideanDistanceLoss"], [111, 1, 1, "", "LogCMK"], [111, 1, 1, "", "LogCoshLoss"], [111, 1, 1, "", "LossFunction"], [111, 1, 1, "", "MSELoss"], [111, 1, 1, "", "RMSELoss"], [111, 1, 1, "", "VonMisesFisher2DLoss"], [111, 1, 1, "", "VonMisesFisher3DLoss"], [111, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[111, 3, 1, "", "backward"], [111, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[111, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[111, 3, 1, "", "log_cmk"], [111, 3, 1, "", "log_cmk_approx"], [111, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[112, 4, 1, "", "collate_fn"], [112, 1, 1, "", "collator_sequence_buckleting"], [112, 4, 1, "", "get_predictions"], [112, 4, 1, "", "make_dataloader"], [112, 4, 1, "", "make_train_validation_dataloader"], [112, 4, 1, "", "save_results"], [112, 4, 1, "", "save_selection"]], "graphnet.training.weight_fitting": [[113, 1, 1, "", "BjoernLow"], [113, 1, 1, "", "Uniform"], [113, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[113, 3, 1, "", "fit"]], "graphnet.utilities": [[115, 0, 0, "-", "argparse"], [116, 0, 0, "-", "config"], [123, 0, 0, "-", "decorators"], [124, 0, 0, "-", "deprecation_tools"], [125, 0, 0, "-", "filesys"], [126, 0, 0, "-", "imports"], [127, 0, 0, "-", "logging"], [128, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[115, 1, 1, "", "ArgumentParser"], [115, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[115, 2, 1, "", "standard_arguments"], [115, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[115, 3, 1, "", "contains"], [115, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[117, 0, 0, "-", "base_config"], [118, 0, 0, "-", "configurable"], [119, 0, 0, "-", "dataset_config"], [120, 0, 0, "-", "model_config"], [121, 0, 0, "-", "parsing"], [122, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[117, 1, 1, "", "BaseConfig"], [117, 4, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[117, 3, 1, "", "as_dict"], [117, 3, 1, "", "dump"], [117, 3, 1, "", "load"], [117, 2, 1, "", "model_computed_fields"], [117, 2, 1, "", "model_config"], [117, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[118, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[118, 5, 1, "", "config"], [118, 3, 1, "", "from_config"], [118, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[119, 1, 1, "", "DatasetConfig"], [119, 1, 1, "", "DatasetConfigSaverABCMeta"], [119, 1, 1, "", "DatasetConfigSaverMeta"], [119, 4, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[119, 3, 1, "", "as_dict"], [119, 2, 1, "", "features"], [119, 2, 1, "", "graph_definition"], [119, 2, 1, "", "index_column"], [119, 2, 1, "", "labels"], [119, 2, 1, "", "loss_weight_column"], [119, 2, 1, "", "loss_weight_default_value"], [119, 2, 1, "", "loss_weight_table"], [119, 2, 1, "", "model_computed_fields"], [119, 2, 1, "", "model_config"], [119, 2, 1, "", "model_fields"], [119, 2, 1, "", "node_truth"], [119, 2, 1, "", "node_truth_table"], [119, 2, 1, "", "path"], [119, 2, 1, "", "pulsemaps"], [119, 2, 1, "", "seed"], [119, 2, 1, "", "selection"], [119, 2, 1, "", "string_selection"], [119, 2, 1, "", "truth"], [119, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[120, 1, 1, "", "ModelConfig"], [120, 1, 1, "", "ModelConfigSaverABC"], [120, 1, 1, "", "ModelConfigSaverMeta"], [120, 4, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[120, 2, 1, "", "arguments"], [120, 3, 1, "", "as_dict"], [120, 2, 1, "", "class_name"], [120, 2, 1, "", "model_computed_fields"], [120, 2, 1, "", "model_config"], [120, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[121, 4, 1, "", "get_all_grapnet_classes"], [121, 4, 1, "", "get_graphnet_classes"], [121, 4, 1, "", "is_graphnet_class"], [121, 4, 1, "", "is_graphnet_module"], [121, 4, 1, "", "list_all_submodules"], [121, 4, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[122, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[122, 2, 1, "", "dataloader"], [122, 2, 1, "", "early_stopping_patience"], [122, 2, 1, "", "fit"], [122, 2, 1, "", "model_computed_fields"], [122, 2, 1, "", "model_config"], [122, 2, 1, "", "model_fields"], [122, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[124, 4, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[125, 4, 1, "", "find_i3_files"], [125, 4, 1, "", "has_extension"], [125, 4, 1, "", "is_gcd_file"], [125, 4, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[126, 4, 1, "", "has_icecube_package"], [126, 4, 1, "", "has_pisa_package"], [126, 4, 1, "", "has_torch_package"], [126, 4, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[127, 1, 1, "", "Logger"], [127, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[127, 3, 1, "", "critical"], [127, 3, 1, "", "debug"], [127, 3, 1, "", "error"], [127, 5, 1, "", "file_handlers"], [127, 5, 1, "", "handlers"], [127, 3, 1, "", "info"], [127, 3, 1, "", "setLevel"], [127, 5, 1, "", "stream_handlers"], [127, 3, 1, "", "warning"], [127, 3, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[127, 3, 1, "", "filter"], [127, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[128, 4, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 131], "impact": [0, 131], "usag": [0, 131], "acknowledg": [0, 131], "api": 1, "constant": [2, 4], "data": 3, "dataclass": 5, "dataconvert": [6, 41], "dataload": 7, "datamodul": 8, "dataset": [9, 10], "parquet": [11, 37], "parquet_dataset": 12, "sqlite": [13, 46], "sqlite_dataset": 14, "extractor": [15, 16], "icecub": [17, 62, 76], "i3extractor": 18, "i3featureextractor": 19, "i3genericextractor": 20, "i3hybridrecoextractor": 21, "i3ntmuonlabelsextractor": 22, "i3particleextractor": 23, "i3pisaextractor": 24, "i3quesoextractor": 25, "i3retroextractor": 26, "i3splinempeextractor": 27, "i3truthextractor": 28, "i3tumextractor": 29, "util": [30, 48, 94, 104, 112, 114], "collect": 31, "frame": 32, "i3_filt": 33, "type": 34, "intern": 35, "parquet_extractor": 36, "deprecated_method": [38, 47, 61], "pipelin": 39, "pre_configur": 40, "reader": 42, "graphnet_file_read": 43, "i3read": 44, "internal_parquet_read": 45, "parquet_to_sqlit": 49, "random": 50, "sqlite_util": 51, "string_selection_resolv": 52, "writer": 53, "graphnet_writ": 54, "parquet_writ": 55, "sqlite_writ": 56, "deploy": [57, 58], "deployment_modul": 59, "i3modul": 60, "cleaning_modul": 63, "i3deploy": 64, "inference_modul": 65, "except": [66, 67], "model": [68, 95], "coarsen": 69, "compon": 70, "embed": 71, "layer": 72, "pool": 73, "detector": [74, 75], "prometheu": 77, "gnn": [78, 84], "rnn_tito": 79, "convnet": 80, "dynedg": 81, "dynedge_jinst": 82, "dynedge_kaggle_tito": 83, "icemix": 85, "graph": [86, 91], "edg": [87, 88], "minkowski": 89, "graph_definit": 90, "node": [92, 93], "rnn": 96, "node_rnn": 97, "standard_averaged_model": 98, "standard_model": 99, "task": [100, 103], "classif": 101, "reconstruct": 102, "pisa": 105, "fit": 106, "plot": 107, "train": 108, "callback": 109, "label": 110, "loss_funct": 111, "weight_fit": 113, "argpars": 115, "config": 116, "base_config": 117, "configur": 118, "dataset_config": 119, "model_config": 120, "pars": 121, "training_config": 122, "decor": 123, "deprecation_tool": 124, "filesi": 125, "import": 126, "log": 127, "math": 128, "src": 129, "contribut": 130, "github": 130, "issu": 130, "pull": 130, "request": 130, "convent": 130, "code": 130, "qualiti": 130, "instal": 132, "icetrai": 132, "stand": 132, "alon": 132, "run": 132, "docker": 132}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"], [131, "about"]], "Impact": [[0, "impact"], [131, "impact"]], "Usage": [[0, "usage"], [131, "usage"]], "Acknowledgements": [[0, "acknowledgements"], [131, "acknowledgements"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "dataclasses": [[5, "module-graphnet.data.dataclasses"]], "dataconverter": [[6, "module-graphnet.data.dataconverter"]], "dataloader": [[7, "module-graphnet.data.dataloader"]], "datamodule": [[8, "module-graphnet.data.datamodule"]], "dataset": [[9, "module-graphnet.data.dataset"], [10, "module-graphnet.data.dataset.dataset"]], "parquet": [[11, "module-graphnet.data.dataset.parquet"], [37, "module-graphnet.data.parquet"]], "parquet_dataset": [[12, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "sqlite": [[13, "module-graphnet.data.dataset.sqlite"], [46, "module-graphnet.data.sqlite"]], "sqlite_dataset": [[14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "extractors": [[15, "module-graphnet.data.extractors"]], "extractor": [[16, "module-graphnet.data.extractors.extractor"]], "icecube": [[17, "module-graphnet.data.extractors.icecube"], [62, "icecube"], [76, "module-graphnet.models.detector.icecube"]], "i3extractor": [[18, "module-graphnet.data.extractors.icecube.i3extractor"]], "i3featureextractor": [[19, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor": [[20, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3hybridrecoextractor": [[21, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3ntmuonlabelsextractor": [[22, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor": [[23, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor": [[24, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor": [[25, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3retroextractor": [[26, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeextractor": [[27, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor": [[28, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor": [[29, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "utilities": [[30, "module-graphnet.data.extractors.icecube.utilities"], [48, "module-graphnet.data.utilities"], [114, "module-graphnet.utilities"]], "collections": [[31, "module-graphnet.data.extractors.icecube.utilities.collections"]], "frames": [[32, "module-graphnet.data.extractors.icecube.utilities.frames"]], "i3_filters": [[33, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "types": [[34, "module-graphnet.data.extractors.icecube.utilities.types"]], "internal": [[35, "module-graphnet.data.extractors.internal"]], "parquet_extractor": [[36, "module-graphnet.data.extractors.internal.parquet_extractor"]], "deprecated_methods": [[38, "module-graphnet.data.parquet.deprecated_methods"], [47, "module-graphnet.data.sqlite.deprecated_methods"], [61, "deprecated-methods"]], "pipeline": [[39, "module-graphnet.data.pipeline"]], "pre_configured": [[40, "module-graphnet.data.pre_configured"]], "dataconverters": [[41, "module-graphnet.data.pre_configured.dataconverters"]], "readers": [[42, "module-graphnet.data.readers"]], "graphnet_file_reader": [[43, "module-graphnet.data.readers.graphnet_file_reader"]], "i3reader": [[44, "module-graphnet.data.readers.i3reader"]], "internal_parquet_reader": [[45, "module-graphnet.data.readers.internal_parquet_reader"]], "parquet_to_sqlite": [[49, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[50, "module-graphnet.data.utilities.random"]], "sqlite_utilities": [[51, "module-graphnet.data.utilities.sqlite_utilities"]], "string_selection_resolver": [[52, "module-graphnet.data.utilities.string_selection_resolver"]], "writers": [[53, "module-graphnet.data.writers"]], "graphnet_writer": [[54, "module-graphnet.data.writers.graphnet_writer"]], "parquet_writer": [[55, "module-graphnet.data.writers.parquet_writer"]], "sqlite_writer": [[56, "module-graphnet.data.writers.sqlite_writer"]], "deployment": [[57, "module-graphnet.deployment"]], "deployer": [[58, "module-graphnet.deployment.deployer"]], "deployment_module": [[59, "module-graphnet.deployment.deployment_module"]], "i3modules": [[60, "i3modules"]], "cleaning_module": [[63, "module-graphnet.deployment.icecube.cleaning_module"]], "i3deployer": [[64, "i3deployer"]], "inference_module": [[65, "module-graphnet.deployment.icecube.inference_module"]], "exceptions": [[66, "module-graphnet.exceptions"], [67, "module-graphnet.exceptions.exceptions"]], "models": [[68, "module-graphnet.models"]], "coarsening": [[69, "module-graphnet.models.coarsening"]], "components": [[70, "module-graphnet.models.components"]], "embedding": [[71, "module-graphnet.models.components.embedding"]], "layers": [[72, "module-graphnet.models.components.layers"]], "pool": [[73, "module-graphnet.models.components.pool"]], "detector": [[74, "module-graphnet.models.detector"], [75, "module-graphnet.models.detector.detector"]], "prometheus": [[77, "module-graphnet.models.detector.prometheus"]], "gnn": [[78, "module-graphnet.models.gnn"], [84, "module-graphnet.models.gnn.gnn"]], "RNN_tito": [[79, "module-graphnet.models.gnn.RNN_tito"]], "convnet": [[80, "module-graphnet.models.gnn.convnet"]], "dynedge": [[81, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[82, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedge_kaggle_tito": [[83, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "icemix": [[85, "module-graphnet.models.gnn.icemix"]], "graphs": [[86, "module-graphnet.models.graphs"], [91, "module-graphnet.models.graphs.graphs"]], "edges": [[87, "module-graphnet.models.graphs.edges"], [88, "module-graphnet.models.graphs.edges.edges"]], "minkowski": [[89, "module-graphnet.models.graphs.edges.minkowski"]], "graph_definition": [[90, "module-graphnet.models.graphs.graph_definition"]], "nodes": [[92, "module-graphnet.models.graphs.nodes"], [93, "module-graphnet.models.graphs.nodes.nodes"]], "utils": [[94, "module-graphnet.models.graphs.utils"], [104, "module-graphnet.models.utils"], [112, "module-graphnet.training.utils"]], "model": [[95, "module-graphnet.models.model"]], "rnn": [[96, "module-graphnet.models.rnn"]], "node_rnn": [[97, "module-graphnet.models.rnn.node_rnn"]], "standard_averaged_model": [[98, "module-graphnet.models.standard_averaged_model"]], "standard_model": [[99, "module-graphnet.models.standard_model"]], "task": [[100, "module-graphnet.models.task"], [103, "module-graphnet.models.task.task"]], "classification": [[101, "module-graphnet.models.task.classification"]], "reconstruction": [[102, "module-graphnet.models.task.reconstruction"]], "pisa": [[105, "module-graphnet.pisa"]], "fitting": [[106, "module-graphnet.pisa.fitting"]], "plotting": [[107, "module-graphnet.pisa.plotting"]], "training": [[108, "module-graphnet.training"]], "callbacks": [[109, "module-graphnet.training.callbacks"]], "labels": [[110, "module-graphnet.training.labels"]], "loss_functions": [[111, "module-graphnet.training.loss_functions"]], "weight_fitting": [[113, "module-graphnet.training.weight_fitting"]], "argparse": [[115, "module-graphnet.utilities.argparse"]], "config": [[116, "module-graphnet.utilities.config"]], "base_config": [[117, "module-graphnet.utilities.config.base_config"]], "configurable": [[118, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[119, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[120, "module-graphnet.utilities.config.model_config"]], "parsing": [[121, "module-graphnet.utilities.config.parsing"]], "training_config": [[122, "module-graphnet.utilities.config.training_config"]], "decorators": [[123, "module-graphnet.utilities.decorators"]], "deprecation_tools": [[124, "module-graphnet.utilities.deprecation_tools"]], "filesys": [[125, "module-graphnet.utilities.filesys"]], "imports": [[126, "module-graphnet.utilities.imports"]], "logging": [[127, "module-graphnet.utilities.logging"]], "maths": [[128, "module-graphnet.utilities.maths"]], "src": [[129, "src"]], "Contribute": [[130, "contribute"]], "GitHub issues": [[130, "github-issues"]], "Pull requests": [[130, "pull-requests"]], "Conventions": [[130, "conventions"]], "Code quality": [[130, "code-quality"]], "Install": [[132, "install"]], "Installing with IceTray": [[132, "installing-with-icetray"]], "Installing stand-alone": [[132, "installing-stand-alone"]], "Running in Docker": [[132, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.dataclasses"], [6, "module-graphnet.data.dataconverter"], [7, "module-graphnet.data.dataloader"], [8, "module-graphnet.data.datamodule"], [9, "module-graphnet.data.dataset"], [10, "module-graphnet.data.dataset.dataset"], [11, "module-graphnet.data.dataset.parquet"], [12, "module-graphnet.data.dataset.parquet.parquet_dataset"], [13, "module-graphnet.data.dataset.sqlite"], [14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"], [15, "module-graphnet.data.extractors"], [16, "module-graphnet.data.extractors.extractor"], [17, "module-graphnet.data.extractors.icecube"], [18, "module-graphnet.data.extractors.icecube.i3extractor"], [19, "module-graphnet.data.extractors.icecube.i3featureextractor"], [20, "module-graphnet.data.extractors.icecube.i3genericextractor"], [21, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"], [22, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"], [23, "module-graphnet.data.extractors.icecube.i3particleextractor"], [24, "module-graphnet.data.extractors.icecube.i3pisaextractor"], [25, "module-graphnet.data.extractors.icecube.i3quesoextractor"], [26, "module-graphnet.data.extractors.icecube.i3retroextractor"], [27, "module-graphnet.data.extractors.icecube.i3splinempeextractor"], [28, "module-graphnet.data.extractors.icecube.i3truthextractor"], [29, "module-graphnet.data.extractors.icecube.i3tumextractor"], [30, "module-graphnet.data.extractors.icecube.utilities"], [31, "module-graphnet.data.extractors.icecube.utilities.collections"], [32, "module-graphnet.data.extractors.icecube.utilities.frames"], [33, "module-graphnet.data.extractors.icecube.utilities.i3_filters"], [34, "module-graphnet.data.extractors.icecube.utilities.types"], [35, "module-graphnet.data.extractors.internal"], [36, "module-graphnet.data.extractors.internal.parquet_extractor"], [37, "module-graphnet.data.parquet"], [38, "module-graphnet.data.parquet.deprecated_methods"], [39, "module-graphnet.data.pipeline"], [40, "module-graphnet.data.pre_configured"], [41, "module-graphnet.data.pre_configured.dataconverters"], [42, "module-graphnet.data.readers"], [43, "module-graphnet.data.readers.graphnet_file_reader"], [44, "module-graphnet.data.readers.i3reader"], [45, "module-graphnet.data.readers.internal_parquet_reader"], [46, "module-graphnet.data.sqlite"], [47, "module-graphnet.data.sqlite.deprecated_methods"], [48, "module-graphnet.data.utilities"], [49, "module-graphnet.data.utilities.parquet_to_sqlite"], [50, "module-graphnet.data.utilities.random"], [51, "module-graphnet.data.utilities.sqlite_utilities"], [52, "module-graphnet.data.utilities.string_selection_resolver"], [53, "module-graphnet.data.writers"], [54, "module-graphnet.data.writers.graphnet_writer"], [55, "module-graphnet.data.writers.parquet_writer"], [56, "module-graphnet.data.writers.sqlite_writer"], [57, "module-graphnet.deployment"], [58, "module-graphnet.deployment.deployer"], [59, "module-graphnet.deployment.deployment_module"], [63, "module-graphnet.deployment.icecube.cleaning_module"], [65, "module-graphnet.deployment.icecube.inference_module"], [66, "module-graphnet.exceptions"], [67, "module-graphnet.exceptions.exceptions"], [68, "module-graphnet.models"], [69, "module-graphnet.models.coarsening"], [70, "module-graphnet.models.components"], [71, "module-graphnet.models.components.embedding"], [72, "module-graphnet.models.components.layers"], [73, "module-graphnet.models.components.pool"], [74, "module-graphnet.models.detector"], [75, "module-graphnet.models.detector.detector"], [76, "module-graphnet.models.detector.icecube"], [77, "module-graphnet.models.detector.prometheus"], [78, "module-graphnet.models.gnn"], [79, "module-graphnet.models.gnn.RNN_tito"], [80, "module-graphnet.models.gnn.convnet"], [81, "module-graphnet.models.gnn.dynedge"], [82, "module-graphnet.models.gnn.dynedge_jinst"], [83, "module-graphnet.models.gnn.dynedge_kaggle_tito"], [84, "module-graphnet.models.gnn.gnn"], [85, "module-graphnet.models.gnn.icemix"], [86, "module-graphnet.models.graphs"], [87, "module-graphnet.models.graphs.edges"], [88, "module-graphnet.models.graphs.edges.edges"], [89, "module-graphnet.models.graphs.edges.minkowski"], [90, "module-graphnet.models.graphs.graph_definition"], [91, "module-graphnet.models.graphs.graphs"], [92, "module-graphnet.models.graphs.nodes"], [93, "module-graphnet.models.graphs.nodes.nodes"], [94, "module-graphnet.models.graphs.utils"], [95, "module-graphnet.models.model"], [96, "module-graphnet.models.rnn"], [97, "module-graphnet.models.rnn.node_rnn"], [98, "module-graphnet.models.standard_averaged_model"], [99, "module-graphnet.models.standard_model"], [100, "module-graphnet.models.task"], [101, "module-graphnet.models.task.classification"], [102, "module-graphnet.models.task.reconstruction"], [103, "module-graphnet.models.task.task"], [104, "module-graphnet.models.utils"], [105, "module-graphnet.pisa"], [106, "module-graphnet.pisa.fitting"], [107, "module-graphnet.pisa.plotting"], [108, "module-graphnet.training"], [109, "module-graphnet.training.callbacks"], [110, "module-graphnet.training.labels"], [111, "module-graphnet.training.loss_functions"], [112, "module-graphnet.training.utils"], [113, "module-graphnet.training.weight_fitting"], [114, "module-graphnet.utilities"], [115, "module-graphnet.utilities.argparse"], [116, "module-graphnet.utilities.config"], [117, "module-graphnet.utilities.config.base_config"], [118, "module-graphnet.utilities.config.configurable"], [119, "module-graphnet.utilities.config.dataset_config"], [120, "module-graphnet.utilities.config.model_config"], [121, "module-graphnet.utilities.config.parsing"], [122, "module-graphnet.utilities.config.training_config"], [123, "module-graphnet.utilities.decorators"], [124, "module-graphnet.utilities.deprecation_tools"], [125, "module-graphnet.utilities.filesys"], [126, "module-graphnet.utilities.imports"], [127, "module-graphnet.utilities.logging"], [128, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "i3fileset (class in graphnet.data.dataclasses)": [[5, "graphnet.data.dataclasses.I3FileSet"]], "settings (class in graphnet.data.dataclasses)": [[5, "graphnet.data.dataclasses.Settings"]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[5, "graphnet.data.dataclasses.I3FileSet.gcd_file"]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.gcd_file"]], "graphnet.data.dataclasses": [[5, "module-graphnet.data.dataclasses"]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[5, "graphnet.data.dataclasses.I3FileSet.i3_file"]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.i3_files"]], "modules (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.modules"]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.output_folder"]], "dataconverter (class in graphnet.data.dataconverter)": [[6, "graphnet.data.dataconverter.DataConverter"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[6, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[6, "module-graphnet.data.dataconverter"]], "init_global_index() (in module graphnet.data.dataconverter)": [[6, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[6, "graphnet.data.dataconverter.DataConverter.merge_files"]], "dataloader (class in graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.DataLoader"]], "collate_fn() (in module graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.collate_fn"]], "do_shuffle() (in module graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.do_shuffle"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[7, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "graphnet.data.dataloader": [[7, "module-graphnet.data.dataloader"]], "graphnetdatamodule (class in graphnet.data.datamodule)": [[8, "graphnet.data.datamodule.GraphNeTDataModule"]], "graphnet.data.datamodule": [[8, "module-graphnet.data.datamodule"]], "prepare_data() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.prepare_data"]], "setup() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.setup"]], "teardown() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.teardown"]], "test_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.test_dataloader"]], "train_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.train_dataloader"]], "val_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.val_dataloader"]], "graphnet.data.dataset": [[9, "module-graphnet.data.dataset"]], "dataset (class in graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.Dataset"]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.EnsembleDataset"]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[10, "graphnet.data.dataset.dataset.Dataset.add_label"]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[10, "graphnet.data.dataset.dataset.Dataset.concatenate"]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[10, "graphnet.data.dataset.dataset.Dataset.from_config"]], "graphnet.data.dataset.dataset": [[10, "module-graphnet.data.dataset.dataset"]], "load_module() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.load_module"]], "parse_graph_definition() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.parse_graph_definition"]], "parse_labels() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.parse_labels"]], "path (graphnet.data.dataset.dataset.dataset property)": [[10, "graphnet.data.dataset.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[10, "graphnet.data.dataset.dataset.Dataset.query_table"]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[10, "graphnet.data.dataset.dataset.Dataset.truth_table"]], "graphnet.data.dataset.parquet": [[11, "module-graphnet.data.dataset.parquet"]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[12, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[12, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[12, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table"]], "graphnet.data.dataset.sqlite": [[13, "module-graphnet.data.dataset.sqlite"]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[14, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[14, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "graphnet.data.extractors": [[15, "module-graphnet.data.extractors"]], "extractor (class in graphnet.data.extractors.extractor)": [[16, "graphnet.data.extractors.extractor.Extractor"]], "graphnet.data.extractors.extractor": [[16, "module-graphnet.data.extractors.extractor"]], "name (graphnet.data.extractors.extractor.extractor property)": [[16, "graphnet.data.extractors.extractor.Extractor.name"]], "graphnet.data.extractors.icecube": [[17, "module-graphnet.data.extractors.icecube"]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[18, "graphnet.data.extractors.icecube.i3extractor.I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor": [[18, "module-graphnet.data.extractors.icecube.i3extractor"]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[18, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd"]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3featureextractor": [[19, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[20, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3genericextractor": [[20, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[21, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[21, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[22, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[22, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[23, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[23, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[24, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[24, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[25, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[25, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[26, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[26, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[27, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[27, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[28, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[28, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[29, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[29, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "graphnet.data.extractors.icecube.utilities": [[30, "module-graphnet.data.extractors.icecube.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[31, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.icecube.utilities.collections": [[31, "module-graphnet.data.extractors.icecube.utilities.collections"]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[31, "graphnet.data.extractors.icecube.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[31, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[32, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[32, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[32, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.frames": [[32, "module-graphnet.data.extractors.icecube.utilities.frames"]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[33, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter"]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[33, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask"]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[33, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[33, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.get_member_variables"]], "graphnet.data.extractors.icecube.utilities.types": [[34, "module-graphnet.data.extractors.icecube.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_type"]], "graphnet.data.extractors.internal": [[35, "module-graphnet.data.extractors.internal"]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[36, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[36, "module-graphnet.data.extractors.internal.parquet_extractor"]], "graphnet.data.parquet": [[37, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.deprecated_methods)": [[38, "graphnet.data.parquet.deprecated_methods.ParquetDataConverter"]], "graphnet.data.parquet.deprecated_methods": [[38, "module-graphnet.data.parquet.deprecated_methods"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[39, "graphnet.data.pipeline.InSQLitePipeline"]], "graphnet.data.pipeline": [[39, "module-graphnet.data.pipeline"]], "graphnet.data.pre_configured": [[40, "module-graphnet.data.pre_configured"]], "i3toparquetconverter (class in graphnet.data.pre_configured.dataconverters)": [[41, "graphnet.data.pre_configured.dataconverters.I3ToParquetConverter"]], "i3tosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[41, "graphnet.data.pre_configured.dataconverters.I3ToSQLiteConverter"]], "parquettosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[41, "graphnet.data.pre_configured.dataconverters.ParquetToSQLiteConverter"]], "graphnet.data.pre_configured.dataconverters": [[41, "module-graphnet.data.pre_configured.dataconverters"]], "graphnet.data.readers": [[42, "module-graphnet.data.readers"]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[43, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader"]], "accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[43, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors"]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[43, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions"]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[43, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names"]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[43, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files"]], "graphnet.data.readers.graphnet_file_reader": [[43, "module-graphnet.data.readers.graphnet_file_reader"]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[43, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors"]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[43, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files"]], "i3reader (class in graphnet.data.readers.i3reader)": [[44, "graphnet.data.readers.i3reader.I3Reader"]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[44, "graphnet.data.readers.i3reader.I3Reader.find_files"]], "graphnet.data.readers.i3reader": [[44, "module-graphnet.data.readers.i3reader"]], "parquetreader (class in graphnet.data.readers.internal_parquet_reader)": [[45, "graphnet.data.readers.internal_parquet_reader.ParquetReader"]], "find_files() (graphnet.data.readers.internal_parquet_reader.parquetreader method)": [[45, "graphnet.data.readers.internal_parquet_reader.ParquetReader.find_files"]], "graphnet.data.readers.internal_parquet_reader": [[45, "module-graphnet.data.readers.internal_parquet_reader"]], "graphnet.data.sqlite": [[46, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.deprecated_methods)": [[47, "graphnet.data.sqlite.deprecated_methods.SQLiteDataConverter"]], "graphnet.data.sqlite.deprecated_methods": [[47, "module-graphnet.data.sqlite.deprecated_methods"]], "graphnet.data.utilities": [[48, "module-graphnet.data.utilities"]], "graphnet.data.utilities.parquet_to_sqlite": [[49, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random": [[50, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[50, "graphnet.data.utilities.random.pairwise_shuffle"]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[51, "graphnet.data.utilities.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[51, "graphnet.data.utilities.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[51, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[51, "graphnet.data.utilities.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[51, "graphnet.data.utilities.sqlite_utilities.database_table_exists"]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[51, "graphnet.data.utilities.sqlite_utilities.get_primary_keys"]], "graphnet.data.utilities.sqlite_utilities": [[51, "module-graphnet.data.utilities.sqlite_utilities"]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[51, "graphnet.data.utilities.sqlite_utilities.query_database"]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[51, "graphnet.data.utilities.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[51, "graphnet.data.utilities.sqlite_utilities.save_to_sql"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[52, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[52, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[52, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.data.writers": [[53, "module-graphnet.data.writers"]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[54, "graphnet.data.writers.graphnet_writer.GraphNeTWriter"]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[54, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes"]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[54, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension"]], "graphnet.data.writers.graphnet_writer": [[54, "module-graphnet.data.writers.graphnet_writer"]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[54, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files"]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[55, "graphnet.data.writers.parquet_writer.ParquetWriter"]], "graphnet.data.writers.parquet_writer": [[55, "module-graphnet.data.writers.parquet_writer"]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[55, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files"]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[56, "graphnet.data.writers.sqlite_writer.SQLiteWriter"]], "graphnet.data.writers.sqlite_writer": [[56, "module-graphnet.data.writers.sqlite_writer"]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[56, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files"]], "graphnet.deployment": [[57, "module-graphnet.deployment"]], "deployer (class in graphnet.deployment.deployer)": [[58, "graphnet.deployment.deployer.Deployer"]], "graphnet.deployment.deployer": [[58, "module-graphnet.deployment.deployer"]], "run() (graphnet.deployment.deployer.deployer method)": [[58, "graphnet.deployment.deployer.Deployer.run"]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[59, "graphnet.deployment.deployment_module.DeploymentModule"]], "graphnet.deployment.deployment_module": [[59, "module-graphnet.deployment.deployment_module"]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[63, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule"]], "graphnet.deployment.icecube.cleaning_module": [[63, "module-graphnet.deployment.icecube.cleaning_module"]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[65, "graphnet.deployment.icecube.inference_module.I3InferenceModule"]], "graphnet.deployment.icecube.inference_module": [[65, "module-graphnet.deployment.icecube.inference_module"]], "graphnet.exceptions": [[66, "module-graphnet.exceptions"]], "columnmissingexception": [[67, "graphnet.exceptions.exceptions.ColumnMissingException"]], "graphnet.exceptions.exceptions": [[67, "module-graphnet.exceptions.exceptions"]], "graphnet.models": [[68, "module-graphnet.models"]], "attributecoarsening (class in graphnet.models.coarsening)": [[69, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[69, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[69, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[69, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[69, "graphnet.models.coarsening.DOMCoarsening"]], "forward() (graphnet.models.coarsening.coarsening method)": [[69, "graphnet.models.coarsening.Coarsening.forward"]], "graphnet.models.coarsening": [[69, "module-graphnet.models.coarsening"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[69, "graphnet.models.coarsening.Coarsening.reduce_options"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[69, "graphnet.models.coarsening.unbatch_edge_index"]], "graphnet.models.components": [[70, "module-graphnet.models.components"]], "fourierencoder (class in graphnet.models.components.embedding)": [[71, "graphnet.models.components.embedding.FourierEncoder"]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[71, "graphnet.models.components.embedding.SinusoidalPosEmb"]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[71, "graphnet.models.components.embedding.SpacetimeEncoder"]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[71, "graphnet.models.components.embedding.FourierEncoder.forward"]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[71, "graphnet.models.components.embedding.SinusoidalPosEmb.forward"]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[71, "graphnet.models.components.embedding.SpacetimeEncoder.forward"]], "graphnet.models.components.embedding": [[71, "module-graphnet.models.components.embedding"]], "attention_rel (class in graphnet.models.components.layers)": [[72, "graphnet.models.components.layers.Attention_rel"]], "block (class in graphnet.models.components.layers)": [[72, "graphnet.models.components.layers.Block"]], "block_rel (class in graphnet.models.components.layers)": [[72, "graphnet.models.components.layers.Block_rel"]], "droppath (class in graphnet.models.components.layers)": [[72, "graphnet.models.components.layers.DropPath"]], "dynedgeconv (class in graphnet.models.components.layers)": [[72, "graphnet.models.components.layers.DynEdgeConv"]], "dyntrans (class in graphnet.models.components.layers)": [[72, "graphnet.models.components.layers.DynTrans"]], "edgeconvtito (class in graphnet.models.components.layers)": [[72, "graphnet.models.components.layers.EdgeConvTito"]], "mlp (class in graphnet.models.components.layers)": [[72, "graphnet.models.components.layers.Mlp"]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[72, "graphnet.models.components.layers.DropPath.extra_repr"]], "forward() (graphnet.models.components.layers.attention_rel method)": [[72, "graphnet.models.components.layers.Attention_rel.forward"]], "forward() (graphnet.models.components.layers.block method)": [[72, "graphnet.models.components.layers.Block.forward"]], "forward() (graphnet.models.components.layers.block_rel method)": [[72, "graphnet.models.components.layers.Block_rel.forward"]], "forward() (graphnet.models.components.layers.droppath method)": [[72, "graphnet.models.components.layers.DropPath.forward"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[72, "graphnet.models.components.layers.DynEdgeConv.forward"]], "forward() (graphnet.models.components.layers.dyntrans method)": [[72, "graphnet.models.components.layers.DynTrans.forward"]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[72, "graphnet.models.components.layers.EdgeConvTito.forward"]], "forward() (graphnet.models.components.layers.mlp method)": [[72, "graphnet.models.components.layers.Mlp.forward"]], "graphnet.models.components.layers": [[72, "module-graphnet.models.components.layers"]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[72, "graphnet.models.components.layers.EdgeConvTito.message"]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[72, "graphnet.models.components.layers.EdgeConvTito.reset_parameters"]], "graphnet.models.components.pool": [[73, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[73, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[73, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[73, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[73, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[73, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[73, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[73, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[73, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[73, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[73, "graphnet.models.components.pool.sum_pool_x"]], "graphnet.models.detector": [[74, "module-graphnet.models.detector"]], "detector (class in graphnet.models.detector.detector)": [[75, "graphnet.models.detector.detector.Detector"]], "feature_map() (graphnet.models.detector.detector.detector method)": [[75, "graphnet.models.detector.detector.Detector.feature_map"]], "forward() (graphnet.models.detector.detector.detector method)": [[75, "graphnet.models.detector.detector.Detector.forward"]], "geometry_table (graphnet.models.detector.detector.detector property)": [[75, "graphnet.models.detector.detector.Detector.geometry_table"]], "graphnet.models.detector.detector": [[75, "module-graphnet.models.detector.detector"]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[75, "graphnet.models.detector.detector.Detector.sensor_index_name"]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[75, "graphnet.models.detector.detector.Detector.sensor_position_names"]], "string_index_name (graphnet.models.detector.detector.detector property)": [[75, "graphnet.models.detector.detector.Detector.string_index_name"]], "icecube86 (class in graphnet.models.detector.icecube)": [[76, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[76, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[76, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[76, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[76, "graphnet.models.detector.icecube.IceCube86.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[76, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[76, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[76, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map"]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[76, "graphnet.models.detector.icecube.IceCube86.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[76, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path"]], "graphnet.models.detector.icecube": [[76, "module-graphnet.models.detector.icecube"]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[76, "graphnet.models.detector.icecube.IceCube86.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[76, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[76, "graphnet.models.detector.icecube.IceCube86.string_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[76, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column"]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[76, "graphnet.models.detector.icecube.IceCube86.xyz"]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[76, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz"]], "orca150 (class in graphnet.models.detector.prometheus)": [[77, "graphnet.models.detector.prometheus.ORCA150"]], "prometheus (class in graphnet.models.detector.prometheus)": [[77, "graphnet.models.detector.prometheus.Prometheus"]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[77, "graphnet.models.detector.prometheus.ORCA150.feature_map"]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[77, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path"]], "graphnet.models.detector.prometheus": [[77, "module-graphnet.models.detector.prometheus"]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[77, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column"]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[77, "graphnet.models.detector.prometheus.ORCA150.string_id_column"]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[77, "graphnet.models.detector.prometheus.ORCA150.xyz"]], "graphnet.models.gnn": [[78, "module-graphnet.models.gnn"]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[79, "graphnet.models.gnn.RNN_tito.RNN_TITO"]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[79, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward"]], "graphnet.models.gnn.rnn_tito": [[79, "module-graphnet.models.gnn.RNN_tito"]], "convnet (class in graphnet.models.gnn.convnet)": [[80, "graphnet.models.gnn.convnet.ConvNet"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[80, "graphnet.models.gnn.convnet.ConvNet.forward"]], "graphnet.models.gnn.convnet": [[80, "module-graphnet.models.gnn.convnet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[81, "graphnet.models.gnn.dynedge.DynEdge"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[81, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "graphnet.models.gnn.dynedge": [[81, "module-graphnet.models.gnn.dynedge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[82, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[82, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "graphnet.models.gnn.dynedge_jinst": [[82, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[83, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO"]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[83, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[83, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "gnn (class in graphnet.models.gnn.gnn)": [[84, "graphnet.models.gnn.gnn.GNN"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[84, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn.gnn": [[84, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[84, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[84, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "deepice (class in graphnet.models.gnn.icemix)": [[85, "graphnet.models.gnn.icemix.DeepIce"]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[85, "graphnet.models.gnn.icemix.DeepIce.forward"]], "graphnet.models.gnn.icemix": [[85, "module-graphnet.models.gnn.icemix"]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[85, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay"]], "graphnet.models.graphs": [[86, "module-graphnet.models.graphs"]], "graphnet.models.graphs.edges": [[87, "module-graphnet.models.graphs.edges"]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[88, "graphnet.models.graphs.edges.edges.EdgeDefinition"]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[88, "graphnet.models.graphs.edges.edges.EuclideanEdges"]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[88, "graphnet.models.graphs.edges.edges.KNNEdges"]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[88, "graphnet.models.graphs.edges.edges.RadialEdges"]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[88, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward"]], "graphnet.models.graphs.edges.edges": [[88, "module-graphnet.models.graphs.edges.edges"]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[89, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges"]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[89, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat"]], "graphnet.models.graphs.edges.minkowski": [[89, "module-graphnet.models.graphs.edges.minkowski"]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[90, "graphnet.models.graphs.graph_definition.GraphDefinition"]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[90, "graphnet.models.graphs.graph_definition.GraphDefinition.forward"]], "graphnet.models.graphs.graph_definition": [[90, "module-graphnet.models.graphs.graph_definition"]], "knngraph (class in graphnet.models.graphs.graphs)": [[91, "graphnet.models.graphs.graphs.KNNGraph"]], "graphnet.models.graphs.graphs": [[91, "module-graphnet.models.graphs.graphs"]], "graphnet.models.graphs.nodes": [[92, "module-graphnet.models.graphs.nodes"]], "icemixnodes (class in graphnet.models.graphs.nodes.nodes)": [[93, "graphnet.models.graphs.nodes.nodes.IceMixNodes"]], "nodeasdomtimeseries (class in graphnet.models.graphs.nodes.nodes)": [[93, "graphnet.models.graphs.nodes.nodes.NodeAsDOMTimeSeries"]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[93, "graphnet.models.graphs.nodes.nodes.NodeDefinition"]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[93, "graphnet.models.graphs.nodes.nodes.NodesAsPulses"]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[93, "graphnet.models.graphs.nodes.nodes.PercentileClusters"]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[93, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward"]], "graphnet.models.graphs.nodes.nodes": [[93, "module-graphnet.models.graphs.nodes.nodes"]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[93, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs"]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[93, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs"]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[93, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names"]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[94, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles"]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[94, "graphnet.models.graphs.utils.gather_cluster_sequence"]], "graphnet.models.graphs.utils": [[94, "module-graphnet.models.graphs.utils"]], "ice_transparency() (in module graphnet.models.graphs.utils)": [[94, "graphnet.models.graphs.utils.ice_transparency"]], "identify_indices() (in module graphnet.models.graphs.utils)": [[94, "graphnet.models.graphs.utils.identify_indices"]], "lex_sort() (in module graphnet.models.graphs.utils)": [[94, "graphnet.models.graphs.utils.lex_sort"]], "model (class in graphnet.models.model)": [[95, "graphnet.models.model.Model"]], "extra_repr() (graphnet.models.model.model method)": [[95, "graphnet.models.model.Model.extra_repr"]], "extra_repr_recursive() (graphnet.models.model.model method)": [[95, "graphnet.models.model.Model.extra_repr_recursive"]], "from_config() (graphnet.models.model.model class method)": [[95, "graphnet.models.model.Model.from_config"]], "graphnet.models.model": [[95, "module-graphnet.models.model"]], "load() (graphnet.models.model.model class method)": [[95, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[95, "graphnet.models.model.Model.load_state_dict"]], "save() (graphnet.models.model.model method)": [[95, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[95, "graphnet.models.model.Model.save_state_dict"]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[95, "graphnet.models.model.Model.set_verbose_print_recursively"]], "verbose_print (graphnet.models.model.model attribute)": [[95, "graphnet.models.model.Model.verbose_print"]], "graphnet.models.rnn": [[96, "module-graphnet.models.rnn"]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[97, "graphnet.models.rnn.node_rnn.Node_RNN"]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[97, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object"]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[97, "graphnet.models.rnn.node_rnn.Node_RNN.forward"]], "graphnet.models.rnn.node_rnn": [[97, "module-graphnet.models.rnn.node_rnn"]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[98, "graphnet.models.standard_averaged_model.StandardAveragedModel"]], "graphnet.models.standard_averaged_model": [[98, "module-graphnet.models.standard_averaged_model"]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[98, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict"]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[98, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end"]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[98, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step"]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[98, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step"]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[98, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step"]], "standardmodel (class in graphnet.models.standard_model)": [[99, "graphnet.models.standard_model.StandardModel"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[99, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[99, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "fit() (graphnet.models.standard_model.standardmodel method)": [[99, "graphnet.models.standard_model.StandardModel.fit"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[99, "graphnet.models.standard_model.StandardModel.forward"]], "graphnet.models.standard_model": [[99, "module-graphnet.models.standard_model"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[99, "graphnet.models.standard_model.StandardModel.inference"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[99, "graphnet.models.standard_model.StandardModel.predict"]], "predict_as_dataframe() (graphnet.models.standard_model.standardmodel method)": [[99, "graphnet.models.standard_model.StandardModel.predict_as_dataframe"]], "prediction_labels (graphnet.models.standard_model.standardmodel property)": [[99, "graphnet.models.standard_model.StandardModel.prediction_labels"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[99, "graphnet.models.standard_model.StandardModel.shared_step"]], "target_labels (graphnet.models.standard_model.standardmodel property)": [[99, "graphnet.models.standard_model.StandardModel.target_labels"]], "train() (graphnet.models.standard_model.standardmodel method)": [[99, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[99, "graphnet.models.standard_model.StandardModel.training_step"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[99, "graphnet.models.standard_model.StandardModel.validation_step"]], "graphnet.models.task": [[100, "module-graphnet.models.task"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[101, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[101, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[101, "graphnet.models.task.classification.MulticlassClassificationTask"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[101, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[101, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[101, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[101, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels"]], "graphnet.models.task.classification": [[101, "module-graphnet.models.task.classification"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[101, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[101, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[102, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[102, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[102, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[102, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[102, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[102, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[102, "graphnet.models.task.reconstruction.EnergyTCReconstruction"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[102, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[102, "graphnet.models.task.reconstruction.PositionReconstruction"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[102, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[102, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[102, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[102, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[102, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[102, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[102, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[102, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[102, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[102, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[102, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[102, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[102, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[102, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[102, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[102, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels"]], "graphnet.models.task.reconstruction": [[102, "module-graphnet.models.task.reconstruction"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[102, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[102, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[102, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[102, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[102, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[102, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[102, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "identitytask (class in graphnet.models.task.task)": [[103, "graphnet.models.task.task.IdentityTask"]], "learnedtask (class in graphnet.models.task.task)": [[103, "graphnet.models.task.task.LearnedTask"]], "standardflowtask (class in graphnet.models.task.task)": [[103, "graphnet.models.task.task.StandardFlowTask"]], "standardlearnedtask (class in graphnet.models.task.task)": [[103, "graphnet.models.task.task.StandardLearnedTask"]], "task (class in graphnet.models.task.task)": [[103, "graphnet.models.task.task.Task"]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[103, "graphnet.models.task.task.LearnedTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardflowtask method)": [[103, "graphnet.models.task.task.StandardFlowTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[103, "graphnet.models.task.task.StandardLearnedTask.compute_loss"]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[103, "graphnet.models.task.task.IdentityTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.task.task property)": [[103, "graphnet.models.task.task.Task.default_prediction_labels"]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[103, "graphnet.models.task.task.IdentityTask.default_target_labels"]], "default_target_labels (graphnet.models.task.task.task property)": [[103, "graphnet.models.task.task.Task.default_target_labels"]], "forward() (graphnet.models.task.task.learnedtask method)": [[103, "graphnet.models.task.task.LearnedTask.forward"]], "forward() (graphnet.models.task.task.standardflowtask method)": [[103, "graphnet.models.task.task.StandardFlowTask.forward"]], "graphnet.models.task.task": [[103, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[103, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[103, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[103, "graphnet.models.task.task.LearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[103, "graphnet.models.task.task.StandardLearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[103, "graphnet.models.task.task.Task.nb_inputs"]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[103, "graphnet.models.task.task.StandardFlowTask.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[103, "graphnet.models.task.task.Task.train_eval"]], "array_to_sequence() (in module graphnet.models.utils)": [[104, "graphnet.models.utils.array_to_sequence"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[104, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[104, "graphnet.models.utils.calculate_xyzt_homophily"]], "graphnet.models.utils": [[104, "module-graphnet.models.utils"]], "knn_graph_batch() (in module graphnet.models.utils)": [[104, "graphnet.models.utils.knn_graph_batch"]], "graphnet.pisa": [[105, "module-graphnet.pisa"]], "contourfitter (class in graphnet.pisa.fitting)": [[106, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[106, "graphnet.pisa.fitting.WeightFitter"]], "config_updater() (in module graphnet.pisa.fitting)": [[106, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[106, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[106, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[106, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa.fitting": [[106, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[107, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[107, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[107, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[107, "graphnet.pisa.plotting.read_entry"]], "graphnet.training": [[108, "module-graphnet.training"]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[109, "graphnet.training.callbacks.GraphnetEarlyStopping"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[109, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[109, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[109, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[109, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[109, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[109, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[109, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[109, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[109, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[109, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end"]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[109, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[109, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[109, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[109, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end"]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[109, "graphnet.training.callbacks.GraphnetEarlyStopping.setup"]], "direction (class in graphnet.training.labels)": [[110, "graphnet.training.labels.Direction"]], "label (class in graphnet.training.labels)": [[110, "graphnet.training.labels.Label"]], "graphnet.training.labels": [[110, "module-graphnet.training.labels"]], "key (graphnet.training.labels.label property)": [[110, "graphnet.training.labels.Label.key"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[111, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[111, "graphnet.training.loss_functions.CrossEntropyLoss"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[111, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.training.loss_functions)": [[111, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[111, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[111, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[111, "graphnet.training.loss_functions.MSELoss"]], "rmseloss (class in graphnet.training.loss_functions)": [[111, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[111, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[111, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[111, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[111, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[111, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[111, "graphnet.training.loss_functions.LossFunction.forward"]], "graphnet.training.loss_functions": [[111, "module-graphnet.training.loss_functions"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[111, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[111, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[111, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "collate_fn() (in module graphnet.training.utils)": [[112, "graphnet.training.utils.collate_fn"]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[112, "graphnet.training.utils.collator_sequence_buckleting"]], "get_predictions() (in module graphnet.training.utils)": [[112, "graphnet.training.utils.get_predictions"]], "graphnet.training.utils": [[112, "module-graphnet.training.utils"]], "make_dataloader() (in module graphnet.training.utils)": [[112, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[112, "graphnet.training.utils.make_train_validation_dataloader"]], "save_results() (in module graphnet.training.utils)": [[112, "graphnet.training.utils.save_results"]], "save_selection() (in module graphnet.training.utils)": [[112, "graphnet.training.utils.save_selection"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[113, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[113, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[113, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[113, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[113, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[114, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[115, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[115, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[115, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[115, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[115, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[115, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[115, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[116, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[117, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[117, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[117, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[117, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[117, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[117, "graphnet.utilities.config.base_config.BaseConfig.load"]], "model_computed_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[117, "graphnet.utilities.config.base_config.BaseConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[117, "graphnet.utilities.config.base_config.BaseConfig.model_config"]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[117, "graphnet.utilities.config.base_config.BaseConfig.model_fields"]], "configurable (class in graphnet.utilities.config.configurable)": [[118, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[118, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[118, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[118, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[118, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta"]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta"]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition"]], "graphnet.utilities.config.dataset_config": [[119, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.labels"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "model_computed_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config"]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[119, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[119, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[120, "graphnet.utilities.config.model_config.ModelConfig"]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[120, "graphnet.utilities.config.model_config.ModelConfigSaverABC"]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[120, "graphnet.utilities.config.model_config.ModelConfigSaverMeta"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[120, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[120, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[120, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[120, "module-graphnet.utilities.config.model_config"]], "model_computed_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[120, "graphnet.utilities.config.model_config.ModelConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[120, "graphnet.utilities.config.model_config.ModelConfig.model_config"]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[120, "graphnet.utilities.config.model_config.ModelConfig.model_fields"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[120, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[121, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[121, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[121, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[121, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[121, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[121, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[121, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[122, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[122, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[122, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[122, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[122, "module-graphnet.utilities.config.training_config"]], "model_computed_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[122, "graphnet.utilities.config.training_config.TrainingConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[122, "graphnet.utilities.config.training_config.TrainingConfig.model_config"]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[122, "graphnet.utilities.config.training_config.TrainingConfig.model_fields"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[122, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[123, "module-graphnet.utilities.decorators"]], "graphnet.utilities.deprecation_tools": [[124, "module-graphnet.utilities.deprecation_tools"]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[124, "graphnet.utilities.deprecation_tools.rename_state_dict_entries"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[125, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[125, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[125, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[125, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[125, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[126, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[126, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[126, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[126, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[126, "graphnet.utilities.imports.requires_icecube"]], "logger (class in graphnet.utilities.logging)": [[127, "graphnet.utilities.logging.Logger"]], "repeatfilter (class in graphnet.utilities.logging)": [[127, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.logger method)": [[127, "graphnet.utilities.logging.Logger.critical"]], "debug() (graphnet.utilities.logging.logger method)": [[127, "graphnet.utilities.logging.Logger.debug"]], "error() (graphnet.utilities.logging.logger method)": [[127, "graphnet.utilities.logging.Logger.error"]], "file_handlers (graphnet.utilities.logging.logger property)": [[127, "graphnet.utilities.logging.Logger.file_handlers"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[127, "graphnet.utilities.logging.RepeatFilter.filter"]], "graphnet.utilities.logging": [[127, "module-graphnet.utilities.logging"]], "handlers (graphnet.utilities.logging.logger property)": [[127, "graphnet.utilities.logging.Logger.handlers"]], "info() (graphnet.utilities.logging.logger method)": [[127, "graphnet.utilities.logging.Logger.info"]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[127, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed"]], "setlevel() (graphnet.utilities.logging.logger method)": [[127, "graphnet.utilities.logging.Logger.setLevel"]], "stream_handlers (graphnet.utilities.logging.logger property)": [[127, "graphnet.utilities.logging.Logger.stream_handlers"]], "warning() (graphnet.utilities.logging.logger method)": [[127, "graphnet.utilities.logging.Logger.warning"]], "warning_once() (graphnet.utilities.logging.logger method)": [[127, "graphnet.utilities.logging.Logger.warning_once"]], "eps_like() (in module graphnet.utilities.maths)": [[128, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[128, "module-graphnet.utilities.maths"]]}})