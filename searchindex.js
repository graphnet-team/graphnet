Search.setIndex({"alltitles": {"1) Adding Support for Your Data": [[159, "adding-support-for-your-data"]], "2) Implementing a Detector Class": [[159, "implementing-a-detector-class"]], "API": [[1, null]], "Acknowledgements": [[0, "acknowledgements"]], "Adding Your Own Model": [[161, "adding-your-own-model"]], "Adding custom Labels": [[155, "adding-custom-labels"]], "Adding custom truth labels": [[156, "adding-custom-truth-labels"]], "Advanced Functionality in SQLiteDataset": [[156, "advanced-functionality-in-sqlitedataset"]], "Appendix": [[156, "appendix"]], "Choosing a subset of events using selection": [[155, "choosing-a-subset-of-events-using-selection"]], "Code quality": [[153, "code-quality"]], "Combining Multiple Datasets": [[155, "combining-multiple-datasets"], [156, "combining-multiple-datasets"]], "Contents": [[156, "contents"]], "Contributing To GraphNeTgraphnet": [[153, null]], "Conventions": [[153, "conventions"]], "Creating reproducible Datasets using DatasetConfig": [[156, "creating-reproducible-datasets-using-datasetconfig"]], "Creating reproducible Models using ModelConfig": [[156, "creating-reproducible-models-using-modelconfig"]], "Data Conversion in GraphNeTgraphnet": [[154, null]], "DataConverter": [[154, "dataconverter"]], "Dataset": [[155, "dataset"]], "Datasets In GraphNeTgraphnet": [[155, null]], "Example DataConfig": [[156, "example-dataconfig"]], "Example ModelConfig": [[156, "example-modelconfig"]], "Example of geometry table before applying multi-index": [[159, "id1"]], "Example: Energy Reconstruction using ModelConfig": [[161, "example-energy-reconstruction-using-modelconfig"]], "Experiment Tracking": [[161, "experiment-tracking"]], "Extractors": [[154, "extractors"]], "GitHub issues": [[153, "github-issues"]], "GraphDefinition, backbone & Task": [[161, "graphdefinition-backbone-task"]], "GraphNeT tutorial": [[156, null]], "GraphNeTgraphnet": [[157, null], [160, null]], "Implementing a new Dataset": [[155, "implementing-a-new-dataset"]], "Installation": [[158, null]], "Installation in CVMFS (IceCube)": [[158, "installation-in-cvmfs-icecube"]], "Instantiating a StandardModel": [[161, "instantiating-a-standardmodel"]], "Integrating New Experiments into GraphNeTgraphnet": [[159, null]], "Introduction": [[156, "introduction"]], "Model.save": [[161, "model-save"]], "ModelConfig and state_dict": [[161, "modelconfig-and-state-dict"]], "Models In GraphNeTgraphnet": [[161, null]], "Overview of GraphNeT": [[156, "overview-of-graphnet"]], "Pull requests": [[153, "pull-requests"]], "Quick Start": [[158, "quick-start"]], "RNN_tito": [[105, null]], "Readers": [[154, "readers"]], "SQLiteDataset & ParquetDataset": [[155, "sqlitedataset-parquetdataset"]], "SQLiteDataset vs. ParquetDataset": [[155, "sqlitedataset-vs-parquetdataset"]], "Saving, loading, and checkpointing Models": [[161, "saving-loading-and-checkpointing-models"]], "The Model class": [[156, "the-model-class"], [161, "the-model-class"]], "The StandardModel class": [[156, "the-standardmodel-class"], [161, "the-standardmodel-class"]], "Training Syntax for StandardModel": [[161, "training-syntax-for-standardmodel"]], "Usage": [[0, null]], "Using checkpoints": [[161, "using-checkpoints"]], "Writers": [[154, "writers"]], "Writing your own Extractor and GraphNeTFileReader": [[159, "writing-your-own-extractor-and-graphnetfilereader"]], "argparse": [[138, null]], "base_config": [[140, null]], "callbacks": [[132, null]], "classification": [[125, null]], "cleaning_module": [[76, null]], "coarsening": [[82, null]], "collections": [[35, null]], "combine_extractors": [[18, null]], "components": [[83, null]], "config": [[139, null]], "configurable": [[141, null]], "constants": [[2, null], [4, null]], "convnet": [[106, null]], "curated_datamodule": [[5, null]], "data": [[3, null]], "data_representation": [[87, null], [88, null]], "dataclasses": [[6, null]], "dataconverter": [[7, null]], "dataconverters": [[48, null]], "dataloader": [[8, null]], "datamodule": [[9, null]], "dataset": [[10, null], [11, null]], "dataset_config": [[142, null]], "datasets": [[66, null]], "decorators": [[146, null]], "deployer": [[71, null]], "deployment": [[70, null]], "deployment_module": [[72, null]], "deprecated_methods": [[46, null], [56, null], [74, null]], "deprecation_tools": [[147, null]], "detector": [[98, null], [99, null]], "dynedge": [[107, null]], "dynedge_jinst": [[108, null]], "dynedge_kaggle_tito": [[109, null]], "easy_model": [[103, null]], "edges": [[90, null], [91, null], [115, null]], "embedding": [[84, null]], "exceptions": [[79, null], [80, null]], "extractor": [[19, null]], "extractors": [[17, null]], "filesys": [[148, null]], "frames": [[36, null]], "gnn": [[104, null], [110, null]], "graph_definition": [[93, null]], "graphnet_file_reader": [[50, null]], "graphnet_writer": [[63, null]], "graphs": [[89, null], [94, null], [114, null]], "grit": [[111, null]], "h5_extractor": [[42, null]], "i3_filters": [[37, null]], "i3deployer": [[77, null]], "i3extractor": [[21, null]], "i3featureextractor": [[22, null]], "i3filtermapextractor": [[23, null]], "i3genericextractor": [[24, null]], "i3hybridrecoextractor": [[25, null]], "i3modules": [[73, null]], "i3ntmuonlabelsextractor": [[26, null]], "i3particleextractor": [[27, null]], "i3pisaextractor": [[28, null]], "i3quesoextractor": [[29, null]], "i3reader": [[51, null]], "i3retroextractor": [[30, null]], "i3splinempeextractor": [[31, null]], "i3truthextractor": [[32, null]], "i3tumextractor": [[33, null]], "icecube": [[20, null], [75, null], [100, null]], "icemix": [[112, null]], "imports": [[149, null]], "inference_module": [[78, null]], "internal": [[39, null]], "internal_parquet_reader": [[52, null]], "iseecube": [[129, null]], "labels": [[133, null]], "layers": [[85, null]], "liquido": [[41, null], [101, null]], "liquido_reader": [[53, null]], "logging": [[150, null]], "loss_functions": [[134, null]], "maths": [[151, null]], "minkowski": [[92, null], [116, null]], "model": [[118, null]], "model_config": [[143, null]], "models": [[81, null]], "node_rnn": [[121, null]], "nodes": [[95, null], [96, null], [117, null]], "normalizing_flow": [[119, null]], "parquet": [[12, null], [45, null]], "parquet_dataset": [[13, null]], "parquet_extractor": [[40, null]], "parquet_to_sqlite": [[58, null]], "parquet_writer": [[64, null]], "parsing": [[144, null]], "particlenet": [[113, null]], "pool": [[86, null]], "pre_configured": [[47, null]], "prometheus": [[43, null], [102, null]], "prometheus_datasets": [[67, null]], "prometheus_extractor": [[44, null]], "prometheus_reader": [[54, null]], "random": [[59, null]], "readers": [[49, null]], "reconstruction": [[126, null]], "rnn": [[120, null]], "samplers": [[14, null]], "snowstorm_dataset": [[68, null]], "sqlite": [[15, null], [55, null]], "sqlite_dataset": [[16, null]], "sqlite_utilities": [[60, null]], "sqlite_writer": [[65, null]], "src": [[152, null]], "standard_averaged_model": [[122, null]], "standard_model": [[123, null]], "string_selection_resolver": [[61, null]], "task": [[124, null], [127, null]], "test_dataset": [[69, null]], "training": [[131, null]], "training_config": [[145, null]], "transformer": [[128, null]], "types": [[38, null]], "utilities": [[34, null], [57, null], [137, null]], "utils": [[97, null], [130, null], [135, null]], "weight_fitting": [[136, null]], "writers": [[62, null]]}, "docnames": ["about/about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.curated_datamodule", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.samplers", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.combine_extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3filtermapextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.extractors.liquido", "api/graphnet.data.extractors.liquido.h5_extractor", "api/graphnet.data.extractors.prometheus", "api/graphnet.data.extractors.prometheus.prometheus_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.readers.liquido_reader", "api/graphnet.data.readers.prometheus_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.datasets", "api/graphnet.datasets.prometheus_datasets", "api/graphnet.datasets.snowstorm_dataset", "api/graphnet.datasets.test_dataset", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.data_representation", "api/graphnet.models.data_representation.data_representation", "api/graphnet.models.data_representation.graphs", "api/graphnet.models.data_representation.graphs.edges", "api/graphnet.models.data_representation.graphs.edges.edges", "api/graphnet.models.data_representation.graphs.edges.minkowski", "api/graphnet.models.data_representation.graphs.graph_definition", "api/graphnet.models.data_representation.graphs.graphs", "api/graphnet.models.data_representation.graphs.nodes", "api/graphnet.models.data_representation.graphs.nodes.nodes", "api/graphnet.models.data_representation.graphs.utils", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.liquido", "api/graphnet.models.detector.prometheus", "api/graphnet.models.easy_model", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.grit", "api/graphnet.models.gnn.icemix", "api/graphnet.models.gnn.particlenet", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.nodes", "api/graphnet.models.model", "api/graphnet.models.normalizing_flow", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.transformer", "api/graphnet.models.transformer.iseecube", "api/graphnet.models.utils", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute/contribute", "data_conversion/data_conversion", "datasets/datasets", "getting_started/getting_started", "index", "installation/install", "integration/integration", "intro/intro", "models/models", "substitutions"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["about/about.rst", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.curated_datamodule.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.samplers.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.combine_extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3filtermapextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.extractors.liquido.rst", "api/graphnet.data.extractors.liquido.h5_extractor.rst", "api/graphnet.data.extractors.prometheus.rst", "api/graphnet.data.extractors.prometheus.prometheus_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.readers.liquido_reader.rst", "api/graphnet.data.readers.prometheus_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.datasets.rst", "api/graphnet.datasets.prometheus_datasets.rst", "api/graphnet.datasets.snowstorm_dataset.rst", "api/graphnet.datasets.test_dataset.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.data_representation.rst", "api/graphnet.models.data_representation.data_representation.rst", "api/graphnet.models.data_representation.graphs.rst", "api/graphnet.models.data_representation.graphs.edges.rst", "api/graphnet.models.data_representation.graphs.edges.edges.rst", "api/graphnet.models.data_representation.graphs.edges.minkowski.rst", "api/graphnet.models.data_representation.graphs.graph_definition.rst", "api/graphnet.models.data_representation.graphs.graphs.rst", "api/graphnet.models.data_representation.graphs.nodes.rst", "api/graphnet.models.data_representation.graphs.nodes.nodes.rst", "api/graphnet.models.data_representation.graphs.utils.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.liquido.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.easy_model.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.grit.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.gnn.particlenet.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.model.rst", "api/graphnet.models.normalizing_flow.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.transformer.rst", "api/graphnet.models.transformer.iseecube.rst", "api/graphnet.models.utils.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute/contribute.rst", "data_conversion/data_conversion.rst", "datasets/datasets.rst", "getting_started/getting_started.md", "index.rst", "installation/install.rst", "integration/integration.rst", "intro/intro.rst", "models/models.rst", "substitutions.rst"], "indexentries": {"accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[50, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors", false]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[50, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions", false]], "add_charge_threshold_summary() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[97, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_charge_threshold_summary", false]], "add_counts() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[97, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_counts", false]], "add_full_rrwp() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.add_full_rrwp", false]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[11, "graphnet.data.dataset.dataset.Dataset.add_label", false]], "add_mean() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[97, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_mean", false]], "add_percentile_summary() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[97, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_percentile_summary", false]], "add_std() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[97, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_std", false]], "add_sum_charge() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[97, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_sum_charge", false]], "arca115 (class in graphnet.models.detector.prometheus)": [[102, "graphnet.models.detector.prometheus.ARCA115", false]], "argumentparser (class in graphnet.utilities.argparse)": [[138, "graphnet.utilities.argparse.ArgumentParser", false]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[143, "graphnet.utilities.config.model_config.ModelConfig.arguments", false]], "array_to_sequence() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.array_to_sequence", false]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[140, "graphnet.utilities.config.base_config.BaseConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[143, "graphnet.utilities.config.model_config.ModelConfig.as_dict", false]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[60, "graphnet.data.utilities.sqlite_utilities.attach_index", false]], "attention_rel (class in graphnet.models.components.layers)": [[85, "graphnet.models.components.layers.Attention_rel", false]], "attributecoarsening (class in graphnet.models.coarsening)": [[82, "graphnet.models.coarsening.AttributeCoarsening", false]], "available_backends (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.available_backends", false]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstruction", false]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa", false]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[134, "graphnet.training.loss_functions.LogCMK.backward", false]], "baikalgvd8 (class in graphnet.models.detector.prometheus)": [[102, "graphnet.models.detector.prometheus.BaikalGVD8", false]], "baikalgvdsmall (class in graphnet.datasets.prometheus_datasets)": [[67, "graphnet.datasets.prometheus_datasets.BaikalGVDSmall", false]], "baseconfig (class in graphnet.utilities.config.base_config)": [[140, "graphnet.utilities.config.base_config.BaseConfig", false]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[125, "graphnet.models.task.classification.BinaryClassificationTask", false]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[125, "graphnet.models.task.classification.BinaryClassificationTaskLogits", false]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.BinaryCrossEntropyLoss", false]], "bjoernlow (class in graphnet.training.weight_fitting)": [[136, "graphnet.training.weight_fitting.BjoernLow", false]], "block (class in graphnet.models.components.layers)": [[85, "graphnet.models.components.layers.Block", false]], "block_rel (class in graphnet.models.components.layers)": [[85, "graphnet.models.components.layers.Block_rel", false]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[38, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion", false]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.calculate_distance_matrix", false]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.calculate_xyzt_homophily", false]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[38, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python", false]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[38, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python", false]], "chargefilter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[37, "graphnet.data.extractors.icecube.utilities.i3_filters.ChargeFilter", false]], "chunk_sizes (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset property)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.chunk_sizes", false]], "chunks (graphnet.data.dataset.samplers.randomchunksampler property)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler.chunks", false]], "citation (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.citation", false]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[143, "graphnet.utilities.config.model_config.ModelConfig.class_name", false]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[121, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object", false]], "cluster_and_pad (class in graphnet.models.data_representation.graphs.utils)": [[97, "graphnet.models.data_representation.graphs.utils.cluster_and_pad", false]], "cluster_summarize_with_percentiles() (in module graphnet.models.data_representation.graphs.utils)": [[97, "graphnet.models.data_representation.graphs.utils.cluster_summarize_with_percentiles", false]], "coarsening (class in graphnet.models.coarsening)": [[82, "graphnet.models.coarsening.Coarsening", false]], "collate_fn() (in module graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.collate_fn", false]], "collate_fn() (in module graphnet.training.utils)": [[135, "graphnet.training.utils.collate_fn", false]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[135, "graphnet.training.utils.collator_sequence_buckleting", false]], "columnmissingexception": [[80, "graphnet.exceptions.exceptions.ColumnMissingException", false]], "combinedextractor (class in graphnet.data.extractors.combine_extractors)": [[18, "graphnet.data.extractors.combine_extractors.CombinedExtractor", false]], "comments (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.comments", false]], "compute_loss() (graphnet.models.easy_model.easysyntax method)": [[103, "graphnet.models.easy_model.EasySyntax.compute_loss", false]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[123, "graphnet.models.standard_model.StandardModel.compute_loss", false]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[127, "graphnet.models.task.task.LearnedTask.compute_loss", false]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[127, "graphnet.models.task.task.StandardLearnedTask.compute_loss", false]], "compute_minkowski_distance_mat() (in module graphnet.models.data_representation.graphs.edges.minkowski)": [[92, "graphnet.models.data_representation.graphs.edges.minkowski.compute_minkowski_distance_mat", false]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[11, "graphnet.data.dataset.dataset.Dataset.concatenate", false]], "config (graphnet.utilities.config.configurable.configurable property)": [[141, "graphnet.utilities.config.configurable.Configurable.config", false]], "configurable (class in graphnet.utilities.config.configurable)": [[141, "graphnet.utilities.config.configurable.Configurable", false]], "configure_optimizers() (graphnet.models.easy_model.easysyntax method)": [[103, "graphnet.models.easy_model.EasySyntax.configure_optimizers", false]], "contains() (graphnet.utilities.argparse.options method)": [[138, "graphnet.utilities.argparse.Options.contains", false]], "convnet (class in graphnet.models.gnn.convnet)": [[106, "graphnet.models.gnn.convnet.ConvNet", false]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[60, "graphnet.data.utilities.sqlite_utilities.create_table", false]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[60, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql", false]], "creator (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.creator", false]], "critical() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.critical", false]], "crossentropyloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.CrossEntropyLoss", false]], "curateddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.CuratedDataset", false]], "customdomcoarsening (class in graphnet.models.coarsening)": [[82, "graphnet.models.coarsening.CustomDOMCoarsening", false]], "data_representation (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.data_representation", false]], "data_source (graphnet.data.dataset.samplers.randomchunksampler property)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler.data_source", false]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[60, "graphnet.data.utilities.sqlite_utilities.database_exists", false]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[60, "graphnet.data.utilities.sqlite_utilities.database_table_exists", false]], "dataconverter (class in graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.DataConverter", false]], "dataloader (class in graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.DataLoader", false]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[145, "graphnet.utilities.config.training_config.TrainingConfig.dataloader", false]], "datarepresentation (class in graphnet.models.data_representation.data_representation)": [[88, "graphnet.models.data_representation.data_representation.DataRepresentation", false]], "dataset (class in graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.Dataset", false]], "dataset_dir (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.dataset_dir", false]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig", false]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta", false]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta", false]], "debug() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.debug", false]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE", false]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE", false]], "deepice (class in graphnet.models.gnn.icemix)": [[112, "graphnet.models.gnn.icemix.DeepIce", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[125, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[125, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[126, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[127, "graphnet.models.task.task.IdentityTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.standardflowtask property)": [[127, "graphnet.models.task.task.StandardFlowTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.task property)": [[127, "graphnet.models.task.task.Task.default_prediction_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[125, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[125, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[126, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[127, "graphnet.models.task.task.IdentityTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.task property)": [[127, "graphnet.models.task.task.Task.default_target_labels", false]], "deployer (class in graphnet.deployment.deployer)": [[71, "graphnet.deployment.deployer.Deployer", false]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[72, "graphnet.deployment.deployment_module.DeploymentModule", false]], "description() (graphnet.data.curated_datamodule.curateddataset method)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.description", false]], "detector (class in graphnet.models.detector.detector)": [[99, "graphnet.models.detector.detector.Detector", false]], "direction (class in graphnet.training.labels)": [[133, "graphnet.training.labels.Direction", false]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa", false]], "do_shuffle() (in module graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.do_shuffle", false]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[82, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening", false]], "domcoarsening (class in graphnet.models.coarsening)": [[82, "graphnet.models.coarsening.DOMCoarsening", false]], "droppath (class in graphnet.models.components.layers)": [[85, "graphnet.models.components.layers.DropPath", false]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[140, "graphnet.utilities.config.base_config.BaseConfig.dump", false]], "dynedge (class in graphnet.models.gnn.dynedge)": [[107, "graphnet.models.gnn.dynedge.DynEdge", false]], "dynedgeconv (class in graphnet.models.components.layers)": [[85, "graphnet.models.components.layers.DynEdgeConv", false]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[108, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST", false]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[109, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO", false]], "dyntrans (class in graphnet.models.components.layers)": [[85, "graphnet.models.components.layers.DynTrans", false]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[145, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience", false]], "easysyntax (class in graphnet.models.easy_model)": [[103, "graphnet.models.easy_model.EasySyntax", false]], "edgeconvtito (class in graphnet.models.components.layers)": [[85, "graphnet.models.components.layers.EdgeConvTito", false]], "edgedefinition (class in graphnet.models.data_representation.graphs.edges.edges)": [[91, "graphnet.models.data_representation.graphs.edges.edges.EdgeDefinition", false]], "edgelessgraph (class in graphnet.models.data_representation.graphs.graphs)": [[94, "graphnet.models.data_representation.graphs.graphs.EdgelessGraph", false]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.EnergyReconstruction", false]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower", false]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty", false]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.EnergyTCReconstruction", false]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.EnsembleDataset", false]], "ensembleloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.EnsembleLoss", false]], "eps_like() (in module graphnet.utilities.maths)": [[151, "graphnet.utilities.maths.eps_like", false]], "erdahosteddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.ERDAHostedDataset", false]], "error() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.error", false]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.EuclideanDistanceLoss", false]], "euclideanedges (class in graphnet.models.data_representation.graphs.edges.edges)": [[91, "graphnet.models.data_representation.graphs.edges.edges.EuclideanEdges", false]], "event_truth (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.event_truth", false]], "events (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.events", false]], "exclude() (graphnet.data.extractors.extractor.extractor method)": [[19, "graphnet.data.extractors.extractor.Extractor.exclude", false]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[63, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes", false]], "experiment (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.experiment", false]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[85, "graphnet.models.components.layers.DropPath.extra_repr", false]], "extra_repr() (graphnet.models.model.model method)": [[118, "graphnet.models.model.Model.extra_repr", false]], "extra_repr_recursive() (graphnet.models.model.model method)": [[118, "graphnet.models.model.Model.extra_repr_recursive", false]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[50, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names", false]], "extractor (class in graphnet.data.extractors.extractor)": [[19, "graphnet.data.extractors.extractor.Extractor", false]], "feature_map() (graphnet.models.detector.detector.detector method)": [[99, "graphnet.models.detector.detector.Detector.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[100, "graphnet.models.detector.icecube.IceCube86.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[100, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[100, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[100, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map", false]], "feature_map() (graphnet.models.detector.liquido.liquido_v1 method)": [[101, "graphnet.models.detector.liquido.LiquidO_v1.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.arca115 method)": [[102, "graphnet.models.detector.prometheus.ARCA115.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.baikalgvd8 method)": [[102, "graphnet.models.detector.prometheus.BaikalGVD8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecube86prometheus method)": [[102, "graphnet.models.detector.prometheus.IceCube86Prometheus.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubedeepcore8 method)": [[102, "graphnet.models.detector.prometheus.IceCubeDeepCore8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubegen2 method)": [[102, "graphnet.models.detector.prometheus.IceCubeGen2.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubeupgrade7 method)": [[102, "graphnet.models.detector.prometheus.IceCubeUpgrade7.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icedemo81 method)": [[102, "graphnet.models.detector.prometheus.IceDemo81.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[102, "graphnet.models.detector.prometheus.ORCA150.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150superdense method)": [[102, "graphnet.models.detector.prometheus.ORCA150SuperDense.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.ponetriangle method)": [[102, "graphnet.models.detector.prometheus.PONETriangle.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.trident1211 method)": [[102, "graphnet.models.detector.prometheus.TRIDENT1211.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.waterdemo81 method)": [[102, "graphnet.models.detector.prometheus.WaterDemo81.feature_map", false]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES", false]], "features (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.features", false]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.features", false]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[63, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension", false]], "file_handlers (graphnet.utilities.logging.logger property)": [[150, "graphnet.utilities.logging.Logger.file_handlers", false]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[150, "graphnet.utilities.logging.RepeatFilter.filter", false]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[50, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files", false]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[51, "graphnet.data.readers.i3reader.I3Reader.find_files", false]], "find_files() (graphnet.data.readers.internal_parquet_reader.parquetreader method)": [[52, "graphnet.data.readers.internal_parquet_reader.ParquetReader.find_files", false]], "find_files() (graphnet.data.readers.liquido_reader.liquidoreader method)": [[53, "graphnet.data.readers.liquido_reader.LiquidOReader.find_files", false]], "find_files() (graphnet.data.readers.prometheus_reader.prometheusreader method)": [[54, "graphnet.data.readers.prometheus_reader.PrometheusReader.find_files", false]], "find_i3_files() (in module graphnet.utilities.filesys)": [[148, "graphnet.utilities.filesys.find_i3_files", false]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[145, "graphnet.utilities.config.training_config.TrainingConfig.fit", false]], "fit() (graphnet.models.easy_model.easysyntax method)": [[103, "graphnet.models.easy_model.EasySyntax.fit", false]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[136, "graphnet.training.weight_fitting.WeightFitter.fit", false]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[35, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary", false]], "forward() (graphnet.models.coarsening.coarsening method)": [[82, "graphnet.models.coarsening.Coarsening.forward", false]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[84, "graphnet.models.components.embedding.FourierEncoder.forward", false]], "forward() (graphnet.models.components.embedding.linearedgeencoder method)": [[84, "graphnet.models.components.embedding.LinearEdgeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.linearnodeencoder method)": [[84, "graphnet.models.components.embedding.LinearNodeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.rrwplinearedgeencoder method)": [[84, "graphnet.models.components.embedding.RRWPLinearEdgeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.rrwplinearnodeencoder method)": [[84, "graphnet.models.components.embedding.RRWPLinearNodeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.rwselinearnodeencoder method)": [[84, "graphnet.models.components.embedding.RWSELinearNodeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[84, "graphnet.models.components.embedding.SinusoidalPosEmb.forward", false]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[84, "graphnet.models.components.embedding.SpacetimeEncoder.forward", false]], "forward() (graphnet.models.components.layers.attention_rel method)": [[85, "graphnet.models.components.layers.Attention_rel.forward", false]], "forward() (graphnet.models.components.layers.block method)": [[85, "graphnet.models.components.layers.Block.forward", false]], "forward() (graphnet.models.components.layers.block_rel method)": [[85, "graphnet.models.components.layers.Block_rel.forward", false]], "forward() (graphnet.models.components.layers.droppath method)": [[85, "graphnet.models.components.layers.DropPath.forward", false]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[85, "graphnet.models.components.layers.DynEdgeConv.forward", false]], "forward() (graphnet.models.components.layers.dyntrans method)": [[85, "graphnet.models.components.layers.DynTrans.forward", false]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[85, "graphnet.models.components.layers.EdgeConvTito.forward", false]], "forward() (graphnet.models.components.layers.gritsparsemha method)": [[85, "graphnet.models.components.layers.GritSparseMHA.forward", false]], "forward() (graphnet.models.components.layers.grittransformerlayer method)": [[85, "graphnet.models.components.layers.GritTransformerLayer.forward", false]], "forward() (graphnet.models.components.layers.mlp method)": [[85, "graphnet.models.components.layers.Mlp.forward", false]], "forward() (graphnet.models.components.layers.sangraphhead method)": [[85, "graphnet.models.components.layers.SANGraphHead.forward", false]], "forward() (graphnet.models.data_representation.data_representation.datarepresentation method)": [[88, "graphnet.models.data_representation.data_representation.DataRepresentation.forward", false]], "forward() (graphnet.models.data_representation.graphs.edges.edges.edgedefinition method)": [[91, "graphnet.models.data_representation.graphs.edges.edges.EdgeDefinition.forward", false]], "forward() (graphnet.models.data_representation.graphs.graph_definition.graphdefinition method)": [[93, "graphnet.models.data_representation.graphs.graph_definition.GraphDefinition.forward", false]], "forward() (graphnet.models.data_representation.graphs.graphs.knngraphrrwp method)": [[94, "graphnet.models.data_representation.graphs.graphs.KNNGraphRRWP.forward", false]], "forward() (graphnet.models.data_representation.graphs.graphs.knngraphrwse method)": [[94, "graphnet.models.data_representation.graphs.graphs.KNNGraphRWSE.forward", false]], "forward() (graphnet.models.data_representation.graphs.nodes.nodes.nodedefinition method)": [[96, "graphnet.models.data_representation.graphs.nodes.nodes.NodeDefinition.forward", false]], "forward() (graphnet.models.detector.detector.detector method)": [[99, "graphnet.models.detector.detector.Detector.forward", false]], "forward() (graphnet.models.easy_model.easysyntax method)": [[103, "graphnet.models.easy_model.EasySyntax.forward", false]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[106, "graphnet.models.gnn.convnet.ConvNet.forward", false]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[107, "graphnet.models.gnn.dynedge.DynEdge.forward", false]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[108, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward", false]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[109, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward", false]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[110, "graphnet.models.gnn.gnn.GNN.forward", false]], "forward() (graphnet.models.gnn.grit.grit method)": [[111, "graphnet.models.gnn.grit.GRIT.forward", false]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[112, "graphnet.models.gnn.icemix.DeepIce.forward", false]], "forward() (graphnet.models.gnn.particlenet.particlenet method)": [[113, "graphnet.models.gnn.particlenet.ParticleNeT.forward", false]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[105, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward", false]], "forward() (graphnet.models.normalizing_flow.normalizingflow method)": [[119, "graphnet.models.normalizing_flow.NormalizingFlow.forward", false]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[121, "graphnet.models.rnn.node_rnn.Node_RNN.forward", false]], "forward() (graphnet.models.standard_model.standardmodel method)": [[123, "graphnet.models.standard_model.StandardModel.forward", false]], "forward() (graphnet.models.task.task.learnedtask method)": [[127, "graphnet.models.task.task.LearnedTask.forward", false]], "forward() (graphnet.models.task.task.standardflowtask method)": [[127, "graphnet.models.task.task.StandardFlowTask.forward", false]], "forward() (graphnet.models.transformer.iseecube.iseecube method)": [[129, "graphnet.models.transformer.iseecube.ISeeCube.forward", false]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[134, "graphnet.training.loss_functions.LogCMK.forward", false]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[134, "graphnet.training.loss_functions.LossFunction.forward", false]], "fourierencoder (class in graphnet.models.components.embedding)": [[84, "graphnet.models.components.embedding.FourierEncoder", false]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[36, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo", false]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[36, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise", false]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[11, "graphnet.data.dataset.dataset.Dataset.from_config", false]], "from_config() (graphnet.models.model.model class method)": [[118, "graphnet.models.model.Model.from_config", false]], "from_config() (graphnet.utilities.config.configurable.configurable method)": [[141, "graphnet.utilities.config.configurable.Configurable.from_config", false]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[8, "graphnet.data.dataloader.DataLoader.from_dataset_config", false]], "full_edge_index() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.full_edge_index", false]], "gather_cluster_sequence() (in module graphnet.models.data_representation.graphs.utils)": [[97, "graphnet.models.data_representation.graphs.utils.gather_cluster_sequence", false]], "gather_len_matched_buckets() (in module graphnet.data.dataset.samplers)": [[14, "graphnet.data.dataset.samplers.gather_len_matched_buckets", false]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.gcd_file", false]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.gcd_file", false]], "geometry_table (graphnet.models.detector.detector.detector property)": [[99, "graphnet.models.detector.detector.Detector.geometry_table", false]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[100, "graphnet.models.detector.icecube.IceCube86.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubekaggle attribute)": [[100, "graphnet.models.detector.icecube.IceCubeKaggle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[100, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.liquido.liquido_v1 attribute)": [[101, "graphnet.models.detector.liquido.LiquidO_v1.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.arca115 attribute)": [[102, "graphnet.models.detector.prometheus.ARCA115.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[102, "graphnet.models.detector.prometheus.BaikalGVD8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[102, "graphnet.models.detector.prometheus.IceCube86Prometheus.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[102, "graphnet.models.detector.prometheus.IceCubeDeepCore8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[102, "graphnet.models.detector.prometheus.IceCubeGen2.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[102, "graphnet.models.detector.prometheus.IceCubeUpgrade7.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icedemo81 attribute)": [[102, "graphnet.models.detector.prometheus.IceDemo81.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[102, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150superdense attribute)": [[102, "graphnet.models.detector.prometheus.ORCA150SuperDense.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.ponetriangle attribute)": [[102, "graphnet.models.detector.prometheus.PONETriangle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.trident1211 attribute)": [[102, "graphnet.models.detector.prometheus.TRIDENT1211.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[102, "graphnet.models.detector.prometheus.WaterDemo81.geometry_table_path", false]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[140, "graphnet.utilities.config.base_config.get_all_argument_values", false]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[144, "graphnet.utilities.config.parsing.get_all_grapnet_classes", false]], "get_fields() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.get_fields", false]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[144, "graphnet.utilities.config.parsing.get_graphnet_classes", false]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[132, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr", false]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.get_map_function", false]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[38, "graphnet.data.extractors.icecube.utilities.types.get_member_variables", false]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.get_metrics", false]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[36, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries", false]], "get_predictions() (in module graphnet.training.utils)": [[135, "graphnet.training.utils.get_predictions", false]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[60, "graphnet.data.utilities.sqlite_utilities.get_primary_keys", false]], "get_rw_landing_probs() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.get_rw_landing_probs", false]], "gnn (class in graphnet.models.gnn.gnn)": [[110, "graphnet.models.gnn.gnn.GNN", false]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition", false]], "graphdefinition (class in graphnet.models.data_representation.graphs.graph_definition)": [[93, "graphnet.models.data_representation.graphs.graph_definition.GraphDefinition", false]], "graphnet": [[1, "module-graphnet", false]], "graphnet.constants": [[2, "module-graphnet.constants", false]], "graphnet.data": [[3, "module-graphnet.data", false]], "graphnet.data.constants": [[4, "module-graphnet.data.constants", false]], "graphnet.data.curated_datamodule": [[5, "module-graphnet.data.curated_datamodule", false]], "graphnet.data.dataclasses": [[6, "module-graphnet.data.dataclasses", false]], "graphnet.data.dataconverter": [[7, "module-graphnet.data.dataconverter", false]], "graphnet.data.dataloader": [[8, "module-graphnet.data.dataloader", false]], "graphnet.data.datamodule": [[9, "module-graphnet.data.datamodule", false]], "graphnet.data.dataset": [[10, "module-graphnet.data.dataset", false]], "graphnet.data.dataset.dataset": [[11, "module-graphnet.data.dataset.dataset", false]], "graphnet.data.dataset.parquet": [[12, "module-graphnet.data.dataset.parquet", false]], "graphnet.data.dataset.parquet.parquet_dataset": [[13, "module-graphnet.data.dataset.parquet.parquet_dataset", false]], "graphnet.data.dataset.samplers": [[14, "module-graphnet.data.dataset.samplers", false]], "graphnet.data.dataset.sqlite": [[15, "module-graphnet.data.dataset.sqlite", false]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[16, "module-graphnet.data.dataset.sqlite.sqlite_dataset", false]], "graphnet.data.extractors": [[17, "module-graphnet.data.extractors", false]], "graphnet.data.extractors.combine_extractors": [[18, "module-graphnet.data.extractors.combine_extractors", false]], "graphnet.data.extractors.extractor": [[19, "module-graphnet.data.extractors.extractor", false]], "graphnet.data.extractors.icecube": [[20, "module-graphnet.data.extractors.icecube", false]], "graphnet.data.extractors.icecube.i3extractor": [[21, "module-graphnet.data.extractors.icecube.i3extractor", false]], "graphnet.data.extractors.icecube.i3featureextractor": [[22, "module-graphnet.data.extractors.icecube.i3featureextractor", false]], "graphnet.data.extractors.icecube.i3filtermapextractor": [[23, "module-graphnet.data.extractors.icecube.i3filtermapextractor", false]], "graphnet.data.extractors.icecube.i3genericextractor": [[24, "module-graphnet.data.extractors.icecube.i3genericextractor", false]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[25, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[26, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false]], "graphnet.data.extractors.icecube.i3particleextractor": [[27, "module-graphnet.data.extractors.icecube.i3particleextractor", false]], "graphnet.data.extractors.icecube.i3pisaextractor": [[28, "module-graphnet.data.extractors.icecube.i3pisaextractor", false]], "graphnet.data.extractors.icecube.i3quesoextractor": [[29, "module-graphnet.data.extractors.icecube.i3quesoextractor", false]], "graphnet.data.extractors.icecube.i3retroextractor": [[30, "module-graphnet.data.extractors.icecube.i3retroextractor", false]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[31, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false]], "graphnet.data.extractors.icecube.i3truthextractor": [[32, "module-graphnet.data.extractors.icecube.i3truthextractor", false]], "graphnet.data.extractors.icecube.i3tumextractor": [[33, "module-graphnet.data.extractors.icecube.i3tumextractor", false]], "graphnet.data.extractors.icecube.utilities": [[34, "module-graphnet.data.extractors.icecube.utilities", false]], "graphnet.data.extractors.icecube.utilities.collections": [[35, "module-graphnet.data.extractors.icecube.utilities.collections", false]], "graphnet.data.extractors.icecube.utilities.frames": [[36, "module-graphnet.data.extractors.icecube.utilities.frames", false]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[37, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false]], "graphnet.data.extractors.icecube.utilities.types": [[38, "module-graphnet.data.extractors.icecube.utilities.types", false]], "graphnet.data.extractors.internal": [[39, "module-graphnet.data.extractors.internal", false]], "graphnet.data.extractors.internal.parquet_extractor": [[40, "module-graphnet.data.extractors.internal.parquet_extractor", false]], "graphnet.data.extractors.liquido": [[41, "module-graphnet.data.extractors.liquido", false]], "graphnet.data.extractors.liquido.h5_extractor": [[42, "module-graphnet.data.extractors.liquido.h5_extractor", false]], "graphnet.data.extractors.prometheus": [[43, "module-graphnet.data.extractors.prometheus", false]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[44, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false]], "graphnet.data.parquet": [[45, "module-graphnet.data.parquet", false]], "graphnet.data.parquet.deprecated_methods": [[46, "module-graphnet.data.parquet.deprecated_methods", false]], "graphnet.data.pre_configured": [[47, "module-graphnet.data.pre_configured", false]], "graphnet.data.pre_configured.dataconverters": [[48, "module-graphnet.data.pre_configured.dataconverters", false]], "graphnet.data.readers": [[49, "module-graphnet.data.readers", false]], "graphnet.data.readers.graphnet_file_reader": [[50, "module-graphnet.data.readers.graphnet_file_reader", false]], "graphnet.data.readers.i3reader": [[51, "module-graphnet.data.readers.i3reader", false]], "graphnet.data.readers.internal_parquet_reader": [[52, "module-graphnet.data.readers.internal_parquet_reader", false]], "graphnet.data.readers.liquido_reader": [[53, "module-graphnet.data.readers.liquido_reader", false]], "graphnet.data.readers.prometheus_reader": [[54, "module-graphnet.data.readers.prometheus_reader", false]], "graphnet.data.sqlite": [[55, "module-graphnet.data.sqlite", false]], "graphnet.data.sqlite.deprecated_methods": [[56, "module-graphnet.data.sqlite.deprecated_methods", false]], "graphnet.data.utilities": [[57, "module-graphnet.data.utilities", false]], "graphnet.data.utilities.parquet_to_sqlite": [[58, "module-graphnet.data.utilities.parquet_to_sqlite", false]], "graphnet.data.utilities.random": [[59, "module-graphnet.data.utilities.random", false]], "graphnet.data.utilities.sqlite_utilities": [[60, "module-graphnet.data.utilities.sqlite_utilities", false]], "graphnet.data.utilities.string_selection_resolver": [[61, "module-graphnet.data.utilities.string_selection_resolver", false]], "graphnet.data.writers": [[62, "module-graphnet.data.writers", false]], "graphnet.data.writers.graphnet_writer": [[63, "module-graphnet.data.writers.graphnet_writer", false]], "graphnet.data.writers.parquet_writer": [[64, "module-graphnet.data.writers.parquet_writer", false]], "graphnet.data.writers.sqlite_writer": [[65, "module-graphnet.data.writers.sqlite_writer", false]], "graphnet.datasets": [[66, "module-graphnet.datasets", false]], "graphnet.datasets.prometheus_datasets": [[67, "module-graphnet.datasets.prometheus_datasets", false]], "graphnet.datasets.snowstorm_dataset": [[68, "module-graphnet.datasets.snowstorm_dataset", false]], "graphnet.datasets.test_dataset": [[69, "module-graphnet.datasets.test_dataset", false]], "graphnet.deployment": [[70, "module-graphnet.deployment", false]], "graphnet.deployment.deployer": [[71, "module-graphnet.deployment.deployer", false]], "graphnet.deployment.deployment_module": [[72, "module-graphnet.deployment.deployment_module", false]], "graphnet.deployment.i3modules": [[73, "module-graphnet.deployment.i3modules", false]], "graphnet.deployment.i3modules.deprecated_methods": [[74, "module-graphnet.deployment.i3modules.deprecated_methods", false]], "graphnet.deployment.icecube": [[75, "module-graphnet.deployment.icecube", false]], "graphnet.deployment.icecube.cleaning_module": [[76, "module-graphnet.deployment.icecube.cleaning_module", false]], "graphnet.deployment.icecube.i3deployer": [[77, "module-graphnet.deployment.icecube.i3deployer", false]], "graphnet.deployment.icecube.inference_module": [[78, "module-graphnet.deployment.icecube.inference_module", false]], "graphnet.exceptions": [[79, "module-graphnet.exceptions", false]], "graphnet.exceptions.exceptions": [[80, "module-graphnet.exceptions.exceptions", false]], "graphnet.models": [[81, "module-graphnet.models", false]], "graphnet.models.coarsening": [[82, "module-graphnet.models.coarsening", false]], "graphnet.models.components": [[83, "module-graphnet.models.components", false]], "graphnet.models.components.embedding": [[84, "module-graphnet.models.components.embedding", false]], "graphnet.models.components.layers": [[85, "module-graphnet.models.components.layers", false]], "graphnet.models.components.pool": [[86, "module-graphnet.models.components.pool", false]], "graphnet.models.data_representation": [[87, "module-graphnet.models.data_representation", false]], "graphnet.models.data_representation.data_representation": [[88, "module-graphnet.models.data_representation.data_representation", false]], "graphnet.models.data_representation.graphs": [[89, "module-graphnet.models.data_representation.graphs", false]], "graphnet.models.data_representation.graphs.edges": [[90, "module-graphnet.models.data_representation.graphs.edges", false]], "graphnet.models.data_representation.graphs.edges.edges": [[91, "module-graphnet.models.data_representation.graphs.edges.edges", false]], "graphnet.models.data_representation.graphs.edges.minkowski": [[92, "module-graphnet.models.data_representation.graphs.edges.minkowski", false]], "graphnet.models.data_representation.graphs.graph_definition": [[93, "module-graphnet.models.data_representation.graphs.graph_definition", false]], "graphnet.models.data_representation.graphs.graphs": [[94, "module-graphnet.models.data_representation.graphs.graphs", false]], "graphnet.models.data_representation.graphs.nodes": [[95, "module-graphnet.models.data_representation.graphs.nodes", false]], "graphnet.models.data_representation.graphs.nodes.nodes": [[96, "module-graphnet.models.data_representation.graphs.nodes.nodes", false]], "graphnet.models.data_representation.graphs.utils": [[97, "module-graphnet.models.data_representation.graphs.utils", false]], "graphnet.models.detector": [[98, "module-graphnet.models.detector", false]], "graphnet.models.detector.detector": [[99, "module-graphnet.models.detector.detector", false]], "graphnet.models.detector.icecube": [[100, "module-graphnet.models.detector.icecube", false]], "graphnet.models.detector.liquido": [[101, "module-graphnet.models.detector.liquido", false]], "graphnet.models.detector.prometheus": [[102, "module-graphnet.models.detector.prometheus", false]], "graphnet.models.easy_model": [[103, "module-graphnet.models.easy_model", false]], "graphnet.models.gnn": [[104, "module-graphnet.models.gnn", false]], "graphnet.models.gnn.convnet": [[106, "module-graphnet.models.gnn.convnet", false]], "graphnet.models.gnn.dynedge": [[107, "module-graphnet.models.gnn.dynedge", false]], "graphnet.models.gnn.dynedge_jinst": [[108, "module-graphnet.models.gnn.dynedge_jinst", false]], "graphnet.models.gnn.dynedge_kaggle_tito": [[109, "module-graphnet.models.gnn.dynedge_kaggle_tito", false]], "graphnet.models.gnn.gnn": [[110, "module-graphnet.models.gnn.gnn", false]], "graphnet.models.gnn.grit": [[111, "module-graphnet.models.gnn.grit", false]], "graphnet.models.gnn.icemix": [[112, "module-graphnet.models.gnn.icemix", false]], "graphnet.models.gnn.particlenet": [[113, "module-graphnet.models.gnn.particlenet", false]], "graphnet.models.gnn.rnn_tito": [[105, "module-graphnet.models.gnn.RNN_tito", false]], "graphnet.models.graphs": [[114, "module-graphnet.models.graphs", false]], "graphnet.models.graphs.edges": [[115, "module-graphnet.models.graphs.edges", false]], "graphnet.models.graphs.edges.minkowski": [[116, "module-graphnet.models.graphs.edges.minkowski", false]], "graphnet.models.graphs.nodes": [[117, "module-graphnet.models.graphs.nodes", false]], "graphnet.models.model": [[118, "module-graphnet.models.model", false]], "graphnet.models.normalizing_flow": [[119, "module-graphnet.models.normalizing_flow", false]], "graphnet.models.rnn": [[120, "module-graphnet.models.rnn", false]], "graphnet.models.rnn.node_rnn": [[121, "module-graphnet.models.rnn.node_rnn", false]], "graphnet.models.standard_averaged_model": [[122, "module-graphnet.models.standard_averaged_model", false]], "graphnet.models.standard_model": [[123, "module-graphnet.models.standard_model", false]], "graphnet.models.task": [[124, "module-graphnet.models.task", false]], "graphnet.models.task.classification": [[125, "module-graphnet.models.task.classification", false]], "graphnet.models.task.reconstruction": [[126, "module-graphnet.models.task.reconstruction", false]], "graphnet.models.task.task": [[127, "module-graphnet.models.task.task", false]], "graphnet.models.transformer": [[128, "module-graphnet.models.transformer", false]], "graphnet.models.transformer.iseecube": [[129, "module-graphnet.models.transformer.iseecube", false]], "graphnet.models.utils": [[130, "module-graphnet.models.utils", false]], "graphnet.training": [[131, "module-graphnet.training", false]], "graphnet.training.callbacks": [[132, "module-graphnet.training.callbacks", false]], "graphnet.training.labels": [[133, "module-graphnet.training.labels", false]], "graphnet.training.loss_functions": [[134, "module-graphnet.training.loss_functions", false]], "graphnet.training.utils": [[135, "module-graphnet.training.utils", false]], "graphnet.training.weight_fitting": [[136, "module-graphnet.training.weight_fitting", false]], "graphnet.utilities": [[137, "module-graphnet.utilities", false]], "graphnet.utilities.argparse": [[138, "module-graphnet.utilities.argparse", false]], "graphnet.utilities.config": [[139, "module-graphnet.utilities.config", false]], "graphnet.utilities.config.base_config": [[140, "module-graphnet.utilities.config.base_config", false]], "graphnet.utilities.config.configurable": [[141, "module-graphnet.utilities.config.configurable", false]], "graphnet.utilities.config.dataset_config": [[142, "module-graphnet.utilities.config.dataset_config", false]], "graphnet.utilities.config.model_config": [[143, "module-graphnet.utilities.config.model_config", false]], "graphnet.utilities.config.parsing": [[144, "module-graphnet.utilities.config.parsing", false]], "graphnet.utilities.config.training_config": [[145, "module-graphnet.utilities.config.training_config", false]], "graphnet.utilities.decorators": [[146, "module-graphnet.utilities.decorators", false]], "graphnet.utilities.deprecation_tools": [[147, "module-graphnet.utilities.deprecation_tools", false]], "graphnet.utilities.filesys": [[148, "module-graphnet.utilities.filesys", false]], "graphnet.utilities.imports": [[149, "module-graphnet.utilities.imports", false]], "graphnet.utilities.logging": [[150, "module-graphnet.utilities.logging", false]], "graphnet.utilities.maths": [[151, "module-graphnet.utilities.maths", false]], "graphnetdatamodule (class in graphnet.data.datamodule)": [[9, "graphnet.data.datamodule.GraphNeTDataModule", false]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[132, "graphnet.training.callbacks.GraphnetEarlyStopping", false]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[50, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader", false]], "graphneti3deployer (class in graphnet.deployment.i3modules.deprecated_methods)": [[74, "graphnet.deployment.i3modules.deprecated_methods.GraphNeTI3Deployer", false]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[63, "graphnet.data.writers.graphnet_writer.GraphNeTWriter", false]], "grit (class in graphnet.models.gnn.grit)": [[111, "graphnet.models.gnn.grit.GRIT", false]], "gritsparsemha (class in graphnet.models.components.layers)": [[85, "graphnet.models.components.layers.GritSparseMHA", false]], "grittransformerlayer (class in graphnet.models.components.layers)": [[85, "graphnet.models.components.layers.GritTransformerLayer", false]], "group_by() (in module graphnet.models.components.pool)": [[86, "graphnet.models.components.pool.group_by", false]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[86, "graphnet.models.components.pool.group_pulses_to_dom", false]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[86, "graphnet.models.components.pool.group_pulses_to_pmt", false]], "h5extractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[42, "graphnet.data.extractors.liquido.h5_extractor.H5Extractor", false]], "h5hitextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[42, "graphnet.data.extractors.liquido.h5_extractor.H5HitExtractor", false]], "h5truthextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[42, "graphnet.data.extractors.liquido.h5_extractor.H5TruthExtractor", false]], "handlers (graphnet.utilities.logging.logger property)": [[150, "graphnet.utilities.logging.Logger.handlers", false]], "has_extension() (in module graphnet.utilities.filesys)": [[148, "graphnet.utilities.filesys.has_extension", false]], "has_icecube_package() (in module graphnet.utilities.imports)": [[149, "graphnet.utilities.imports.has_icecube_package", false]], "has_jammy_flows_package() (in module graphnet.utilities.imports)": [[149, "graphnet.utilities.imports.has_jammy_flows_package", false]], "has_torch_package() (in module graphnet.utilities.imports)": [[149, "graphnet.utilities.imports.has_torch_package", false]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.i3_file", false]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.i3_files", false]], "i3deployer (class in graphnet.deployment.icecube.i3deployer)": [[77, "graphnet.deployment.icecube.i3deployer.I3Deployer", false]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[21, "graphnet.data.extractors.icecube.i3extractor.I3Extractor", false]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor", false]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86", false]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore", false]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade", false]], "i3fileset (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.I3FileSet", false]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[37, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter", false]], "i3filtermapextractor (class in graphnet.data.extractors.icecube.i3filtermapextractor)": [[23, "graphnet.data.extractors.icecube.i3filtermapextractor.I3FilterMapExtractor", false]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[37, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask", false]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[25, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor", false]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[24, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor", false]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[78, "graphnet.deployment.icecube.inference_module.I3InferenceModule", false]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[26, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor", false]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[27, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor", false]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[28, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor", false]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[76, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule", false]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade", false]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[29, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor", false]], "i3reader (class in graphnet.data.readers.i3reader)": [[51, "graphnet.data.readers.i3reader.I3Reader", false]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[30, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor", false]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[31, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor", false]], "i3toparquetconverter (class in graphnet.data.pre_configured.dataconverters)": [[48, "graphnet.data.pre_configured.dataconverters.I3ToParquetConverter", false]], "i3tosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[48, "graphnet.data.pre_configured.dataconverters.I3ToSQLiteConverter", false]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[32, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor", false]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[33, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor", false]], "ice_transparency() (in module graphnet.models.data_representation.graphs.utils)": [[97, "graphnet.models.data_representation.graphs.utils.ice_transparency", false]], "icecube86 (class in graphnet.models.detector.icecube)": [[100, "graphnet.models.detector.icecube.IceCube86", false]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86", false]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86", false]], "icecube86prometheus (class in graphnet.models.detector.prometheus)": [[102, "graphnet.models.detector.prometheus.IceCube86Prometheus", false]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[100, "graphnet.models.detector.icecube.IceCubeDeepCore", false]], "icecubedeepcore8 (class in graphnet.models.detector.prometheus)": [[102, "graphnet.models.detector.prometheus.IceCubeDeepCore8", false]], "icecubegen2 (class in graphnet.models.detector.prometheus)": [[102, "graphnet.models.detector.prometheus.IceCubeGen2", false]], "icecubehosteddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.IceCubeHostedDataset", false]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[100, "graphnet.models.detector.icecube.IceCubeKaggle", false]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[100, "graphnet.models.detector.icecube.IceCubeUpgrade", false]], "icecubeupgrade7 (class in graphnet.models.detector.prometheus)": [[102, "graphnet.models.detector.prometheus.IceCubeUpgrade7", false]], "icedemo81 (class in graphnet.models.detector.prometheus)": [[102, "graphnet.models.detector.prometheus.IceDemo81", false]], "icemixnodes (class in graphnet.models.data_representation.graphs.nodes.nodes)": [[96, "graphnet.models.data_representation.graphs.nodes.nodes.IceMixNodes", false]], "identify_indices() (in module graphnet.models.data_representation.graphs.utils)": [[97, "graphnet.models.data_representation.graphs.utils.identify_indices", false]], "identitytask (class in graphnet.models.task.task)": [[127, "graphnet.models.task.task.IdentityTask", false]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column", false]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.InelasticityReconstruction", false]], "inference() (graphnet.models.easy_model.easysyntax method)": [[103, "graphnet.models.easy_model.EasySyntax.inference", false]], "inference() (graphnet.models.task.task.task method)": [[127, "graphnet.models.task.task.Task.inference", false]], "info() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.info", false]], "init_global_index() (in module graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.init_global_index", false]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm", false]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.init_test_tqdm", false]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.init_train_tqdm", false]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm", false]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[38, "graphnet.data.extractors.icecube.utilities.types.is_boost_class", false]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[38, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum", false]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[148, "graphnet.utilities.filesys.is_gcd_file", false]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[144, "graphnet.utilities.config.parsing.is_graphnet_class", false]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[144, "graphnet.utilities.config.parsing.is_graphnet_module", false]], "is_i3_file() (in module graphnet.utilities.filesys)": [[148, "graphnet.utilities.filesys.is_i3_file", false]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[38, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class", false]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[38, "graphnet.data.extractors.icecube.utilities.types.is_method", false]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[38, "graphnet.data.extractors.icecube.utilities.types.is_type", false]], "iseecube (class in graphnet.models.transformer.iseecube)": [[129, "graphnet.models.transformer.iseecube.ISeeCube", false]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE", false]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE", false]], "key (graphnet.training.labels.label property)": [[133, "graphnet.training.labels.Label.key", false]], "knn_graph_batch() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.knn_graph_batch", false]], "knndistanceedges (class in graphnet.models.data_representation.graphs.edges.edges)": [[91, "graphnet.models.data_representation.graphs.edges.edges.KNNDistanceEdges", false]], "knnedges (class in graphnet.models.data_representation.graphs.edges.edges)": [[91, "graphnet.models.data_representation.graphs.edges.edges.KNNEdges", false]], "knngraph (class in graphnet.models.data_representation.graphs.graphs)": [[94, "graphnet.models.data_representation.graphs.graphs.KNNGraph", false]], "knngraphrrwp (class in graphnet.models.data_representation.graphs.graphs)": [[94, "graphnet.models.data_representation.graphs.graphs.KNNGraphRRWP", false]], "knngraphrwse (class in graphnet.models.data_representation.graphs.graphs)": [[94, "graphnet.models.data_representation.graphs.graphs.KNNGraphRWSE", false]], "label (class in graphnet.training.labels)": [[133, "graphnet.training.labels.Label", false]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.labels", false]], "learnedtask (class in graphnet.models.task.task)": [[127, "graphnet.models.task.task.LearnedTask", false]], "lenmatchbatchsampler (class in graphnet.data.dataset.samplers)": [[14, "graphnet.data.dataset.samplers.LenMatchBatchSampler", false]], "lex_sort() (in module graphnet.models.data_representation.graphs.utils)": [[97, "graphnet.models.data_representation.graphs.utils.lex_sort", false]], "linearedgeencoder (class in graphnet.models.components.embedding)": [[84, "graphnet.models.components.embedding.LinearEdgeEncoder", false]], "linearnodeencoder (class in graphnet.models.components.embedding)": [[84, "graphnet.models.components.embedding.LinearNodeEncoder", false]], "liquido (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.LIQUIDO", false]], "liquido (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.LIQUIDO", false]], "liquido_v1 (class in graphnet.models.detector.liquido)": [[101, "graphnet.models.detector.liquido.LiquidO_v1", false]], "liquidoreader (class in graphnet.data.readers.liquido_reader)": [[53, "graphnet.data.readers.liquido_reader.LiquidOReader", false]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[144, "graphnet.utilities.config.parsing.list_all_submodules", false]], "load() (graphnet.models.model.model class method)": [[118, "graphnet.models.model.Model.load", false]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[140, "graphnet.utilities.config.base_config.BaseConfig.load", false]], "load_module() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.load_module", false]], "load_state_dict() (graphnet.models.model.model method)": [[118, "graphnet.models.model.Model.load_state_dict", false]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[122, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict", false]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[134, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk", false]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[134, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx", false]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[134, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact", false]], "logcmk (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.LogCMK", false]], "logcoshloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.LogCoshLoss", false]], "logger (class in graphnet.utilities.logging)": [[150, "graphnet.utilities.logging.Logger", false]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column", false]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value", false]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table", false]], "lossfunction (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.LossFunction", false]], "maeloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.MAELoss", false]], "make_dataloader() (in module graphnet.training.utils)": [[135, "graphnet.training.utils.make_dataloader", false]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[135, "graphnet.training.utils.make_train_validation_dataloader", false]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.merge_files", false]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[63, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files", false]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[64, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files", false]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[65, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files", false]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[85, "graphnet.models.components.layers.EdgeConvTito.message", false]], "min_pool() (in module graphnet.models.components.pool)": [[86, "graphnet.models.components.pool.min_pool", false]], "min_pool_x() (in module graphnet.models.components.pool)": [[86, "graphnet.models.components.pool.min_pool_x", false]], "minkowskiknnedges (class in graphnet.models.data_representation.graphs.edges.minkowski)": [[92, "graphnet.models.data_representation.graphs.edges.minkowski.MinkowskiKNNEdges", false]], "mlp (class in graphnet.models.components.layers)": [[85, "graphnet.models.components.layers.Mlp", false]], "model (class in graphnet.models.model)": [[118, "graphnet.models.model.Model", false]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[140, "graphnet.utilities.config.base_config.BaseConfig.model_config", false]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config", false]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[143, "graphnet.utilities.config.model_config.ModelConfig.model_config", false]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[145, "graphnet.utilities.config.training_config.TrainingConfig.model_config", false]], "modelconfig (class in graphnet.utilities.config.model_config)": [[143, "graphnet.utilities.config.model_config.ModelConfig", false]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[143, "graphnet.utilities.config.model_config.ModelConfigSaverABC", false]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[143, "graphnet.utilities.config.model_config.ModelConfigSaverMeta", false]], "module": [[1, "module-graphnet", false], [2, "module-graphnet.constants", false], [3, "module-graphnet.data", false], [4, "module-graphnet.data.constants", false], [5, "module-graphnet.data.curated_datamodule", false], [6, "module-graphnet.data.dataclasses", false], [7, "module-graphnet.data.dataconverter", false], [8, "module-graphnet.data.dataloader", false], [9, "module-graphnet.data.datamodule", false], [10, "module-graphnet.data.dataset", false], [11, "module-graphnet.data.dataset.dataset", false], [12, "module-graphnet.data.dataset.parquet", false], [13, "module-graphnet.data.dataset.parquet.parquet_dataset", false], [14, "module-graphnet.data.dataset.samplers", false], [15, "module-graphnet.data.dataset.sqlite", false], [16, "module-graphnet.data.dataset.sqlite.sqlite_dataset", false], [17, "module-graphnet.data.extractors", false], [18, "module-graphnet.data.extractors.combine_extractors", false], [19, "module-graphnet.data.extractors.extractor", false], [20, "module-graphnet.data.extractors.icecube", false], [21, "module-graphnet.data.extractors.icecube.i3extractor", false], [22, "module-graphnet.data.extractors.icecube.i3featureextractor", false], [23, "module-graphnet.data.extractors.icecube.i3filtermapextractor", false], [24, "module-graphnet.data.extractors.icecube.i3genericextractor", false], [25, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false], [26, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false], [27, "module-graphnet.data.extractors.icecube.i3particleextractor", false], [28, "module-graphnet.data.extractors.icecube.i3pisaextractor", false], [29, "module-graphnet.data.extractors.icecube.i3quesoextractor", false], [30, "module-graphnet.data.extractors.icecube.i3retroextractor", false], [31, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false], [32, "module-graphnet.data.extractors.icecube.i3truthextractor", false], [33, "module-graphnet.data.extractors.icecube.i3tumextractor", false], [34, "module-graphnet.data.extractors.icecube.utilities", false], [35, "module-graphnet.data.extractors.icecube.utilities.collections", false], [36, "module-graphnet.data.extractors.icecube.utilities.frames", false], [37, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false], [38, "module-graphnet.data.extractors.icecube.utilities.types", false], [39, "module-graphnet.data.extractors.internal", false], [40, "module-graphnet.data.extractors.internal.parquet_extractor", false], [41, "module-graphnet.data.extractors.liquido", false], [42, "module-graphnet.data.extractors.liquido.h5_extractor", false], [43, "module-graphnet.data.extractors.prometheus", false], [44, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false], [45, "module-graphnet.data.parquet", false], [46, "module-graphnet.data.parquet.deprecated_methods", false], [47, "module-graphnet.data.pre_configured", false], [48, "module-graphnet.data.pre_configured.dataconverters", false], [49, "module-graphnet.data.readers", false], [50, "module-graphnet.data.readers.graphnet_file_reader", false], [51, "module-graphnet.data.readers.i3reader", false], [52, "module-graphnet.data.readers.internal_parquet_reader", false], [53, "module-graphnet.data.readers.liquido_reader", false], [54, "module-graphnet.data.readers.prometheus_reader", false], [55, "module-graphnet.data.sqlite", false], [56, "module-graphnet.data.sqlite.deprecated_methods", false], [57, "module-graphnet.data.utilities", false], [58, "module-graphnet.data.utilities.parquet_to_sqlite", false], [59, "module-graphnet.data.utilities.random", false], [60, "module-graphnet.data.utilities.sqlite_utilities", false], [61, "module-graphnet.data.utilities.string_selection_resolver", false], [62, "module-graphnet.data.writers", false], [63, "module-graphnet.data.writers.graphnet_writer", false], [64, "module-graphnet.data.writers.parquet_writer", false], [65, "module-graphnet.data.writers.sqlite_writer", false], [66, "module-graphnet.datasets", false], [67, "module-graphnet.datasets.prometheus_datasets", false], [68, "module-graphnet.datasets.snowstorm_dataset", false], [69, "module-graphnet.datasets.test_dataset", false], [70, "module-graphnet.deployment", false], [71, "module-graphnet.deployment.deployer", false], [72, "module-graphnet.deployment.deployment_module", false], [73, "module-graphnet.deployment.i3modules", false], [74, "module-graphnet.deployment.i3modules.deprecated_methods", false], [75, "module-graphnet.deployment.icecube", false], [76, "module-graphnet.deployment.icecube.cleaning_module", false], [77, "module-graphnet.deployment.icecube.i3deployer", false], [78, "module-graphnet.deployment.icecube.inference_module", false], [79, "module-graphnet.exceptions", false], [80, "module-graphnet.exceptions.exceptions", false], [81, "module-graphnet.models", false], [82, "module-graphnet.models.coarsening", false], [83, "module-graphnet.models.components", false], [84, "module-graphnet.models.components.embedding", false], [85, "module-graphnet.models.components.layers", false], [86, "module-graphnet.models.components.pool", false], [87, "module-graphnet.models.data_representation", false], [88, "module-graphnet.models.data_representation.data_representation", false], [89, "module-graphnet.models.data_representation.graphs", false], [90, "module-graphnet.models.data_representation.graphs.edges", false], [91, "module-graphnet.models.data_representation.graphs.edges.edges", false], [92, "module-graphnet.models.data_representation.graphs.edges.minkowski", false], [93, "module-graphnet.models.data_representation.graphs.graph_definition", false], [94, "module-graphnet.models.data_representation.graphs.graphs", false], [95, "module-graphnet.models.data_representation.graphs.nodes", false], [96, "module-graphnet.models.data_representation.graphs.nodes.nodes", false], [97, "module-graphnet.models.data_representation.graphs.utils", false], [98, "module-graphnet.models.detector", false], [99, "module-graphnet.models.detector.detector", false], [100, "module-graphnet.models.detector.icecube", false], [101, "module-graphnet.models.detector.liquido", false], [102, "module-graphnet.models.detector.prometheus", false], [103, "module-graphnet.models.easy_model", false], [104, "module-graphnet.models.gnn", false], [105, "module-graphnet.models.gnn.RNN_tito", false], [106, "module-graphnet.models.gnn.convnet", false], [107, "module-graphnet.models.gnn.dynedge", false], [108, "module-graphnet.models.gnn.dynedge_jinst", false], [109, "module-graphnet.models.gnn.dynedge_kaggle_tito", false], [110, "module-graphnet.models.gnn.gnn", false], [111, "module-graphnet.models.gnn.grit", false], [112, "module-graphnet.models.gnn.icemix", false], [113, "module-graphnet.models.gnn.particlenet", false], [114, "module-graphnet.models.graphs", false], [115, "module-graphnet.models.graphs.edges", false], [116, "module-graphnet.models.graphs.edges.minkowski", false], [117, "module-graphnet.models.graphs.nodes", false], [118, "module-graphnet.models.model", false], [119, "module-graphnet.models.normalizing_flow", false], [120, "module-graphnet.models.rnn", false], [121, "module-graphnet.models.rnn.node_rnn", false], [122, "module-graphnet.models.standard_averaged_model", false], [123, "module-graphnet.models.standard_model", false], [124, "module-graphnet.models.task", false], [125, "module-graphnet.models.task.classification", false], [126, "module-graphnet.models.task.reconstruction", false], [127, "module-graphnet.models.task.task", false], [128, "module-graphnet.models.transformer", false], [129, "module-graphnet.models.transformer.iseecube", false], [130, "module-graphnet.models.utils", false], [131, "module-graphnet.training", false], [132, "module-graphnet.training.callbacks", false], [133, "module-graphnet.training.labels", false], [134, "module-graphnet.training.loss_functions", false], [135, "module-graphnet.training.utils", false], [136, "module-graphnet.training.weight_fitting", false], [137, "module-graphnet.utilities", false], [138, "module-graphnet.utilities.argparse", false], [139, "module-graphnet.utilities.config", false], [140, "module-graphnet.utilities.config.base_config", false], [141, "module-graphnet.utilities.config.configurable", false], [142, "module-graphnet.utilities.config.dataset_config", false], [143, "module-graphnet.utilities.config.model_config", false], [144, "module-graphnet.utilities.config.parsing", false], [145, "module-graphnet.utilities.config.training_config", false], [146, "module-graphnet.utilities.decorators", false], [147, "module-graphnet.utilities.deprecation_tools", false], [148, "module-graphnet.utilities.filesys", false], [149, "module-graphnet.utilities.imports", false], [150, "module-graphnet.utilities.logging", false], [151, "module-graphnet.utilities.maths", false]], "modules (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.modules", false]], "mseloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.MSELoss", false]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[125, "graphnet.models.task.classification.MulticlassClassificationTask", false]], "name (graphnet.data.extractors.extractor.extractor property)": [[19, "graphnet.data.extractors.extractor.Extractor.name", false]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[110, "graphnet.models.gnn.gnn.GNN.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[125, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[125, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[126, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[127, "graphnet.models.task.task.IdentityTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[127, "graphnet.models.task.task.LearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[127, "graphnet.models.task.task.StandardLearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.task property)": [[127, "graphnet.models.task.task.Task.nb_inputs", false]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[127, "graphnet.models.task.task.StandardFlowTask.nb_inputs", false]], "nb_outputs (graphnet.models.data_representation.data_representation.datarepresentation property)": [[88, "graphnet.models.data_representation.data_representation.DataRepresentation.nb_outputs", false]], "nb_outputs (graphnet.models.data_representation.graphs.nodes.nodes.nodedefinition property)": [[96, "graphnet.models.data_representation.graphs.nodes.nodes.NodeDefinition.nb_outputs", false]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[110, "graphnet.models.gnn.gnn.GNN.nb_outputs", false]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[150, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed", false]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[112, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay", false]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[121, "graphnet.models.rnn.node_rnn.Node_RNN", false]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth", false]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table", false]], "nodeasdomtimeseries (class in graphnet.models.data_representation.graphs.nodes.nodes)": [[96, "graphnet.models.data_representation.graphs.nodes.nodes.NodeAsDOMTimeSeries", false]], "nodedefinition (class in graphnet.models.data_representation.graphs.nodes.nodes)": [[96, "graphnet.models.data_representation.graphs.nodes.nodes.NodeDefinition", false]], "nodesaspulses (class in graphnet.models.data_representation.graphs.nodes.nodes)": [[96, "graphnet.models.data_representation.graphs.nodes.nodes.NodesAsPulses", false]], "normalizingflow (class in graphnet.models.normalizing_flow)": [[119, "graphnet.models.normalizing_flow.NormalizingFlow", false]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[37, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter", false]], "num_samples (graphnet.data.dataset.samplers.randomchunksampler property)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler.num_samples", false]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[132, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end", false]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[122, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[132, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end", false]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start", false]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[132, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end", false]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[122, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step", false]], "options (class in graphnet.utilities.argparse)": [[138, "graphnet.utilities.argparse.Options", false]], "orca150 (class in graphnet.models.detector.prometheus)": [[102, "graphnet.models.detector.prometheus.ORCA150", false]], "orca150superdense (class in graphnet.models.detector.prometheus)": [[102, "graphnet.models.detector.prometheus.ORCA150SuperDense", false]], "output_feature_names (graphnet.models.data_representation.data_representation.datarepresentation property)": [[88, "graphnet.models.data_representation.data_representation.DataRepresentation.output_feature_names", false]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.output_folder", false]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[59, "graphnet.data.utilities.random.pairwise_shuffle", false]], "parquetdataconverter (class in graphnet.data.parquet.deprecated_methods)": [[46, "graphnet.data.parquet.deprecated_methods.ParquetDataConverter", false]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset", false]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[40, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor", false]], "parquetreader (class in graphnet.data.readers.internal_parquet_reader)": [[52, "graphnet.data.readers.internal_parquet_reader.ParquetReader", false]], "parquettosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[48, "graphnet.data.pre_configured.dataconverters.ParquetToSQLiteConverter", false]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[64, "graphnet.data.writers.parquet_writer.ParquetWriter", false]], "parse_data_representation() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.parse_data_representation", false]], "parse_labels() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.parse_labels", false]], "particlenet (class in graphnet.models.gnn.particlenet)": [[113, "graphnet.models.gnn.particlenet.ParticleNeT", false]], "path (graphnet.data.dataset.dataset.dataset property)": [[11, "graphnet.data.dataset.dataset.Dataset.path", false]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.path", false]], "percentileclusters (class in graphnet.models.data_representation.graphs.nodes.nodes)": [[96, "graphnet.models.data_representation.graphs.nodes.nodes.PercentileClusters", false]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[132, "graphnet.training.callbacks.PiecewiseLinearLR", false]], "ponesmall (class in graphnet.datasets.prometheus_datasets)": [[67, "graphnet.datasets.prometheus_datasets.PONESmall", false]], "ponetriangle (class in graphnet.models.detector.prometheus)": [[102, "graphnet.models.detector.prometheus.PONETriangle", false]], "pop_default() (graphnet.utilities.argparse.options method)": [[138, "graphnet.utilities.argparse.Options.pop_default", false]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.PositionReconstruction", false]], "predict() (graphnet.models.easy_model.easysyntax method)": [[103, "graphnet.models.easy_model.EasySyntax.predict", false]], "predict_as_dataframe() (graphnet.models.easy_model.easysyntax method)": [[103, "graphnet.models.easy_model.EasySyntax.predict_as_dataframe", false]], "prediction_labels (graphnet.models.easy_model.easysyntax property)": [[103, "graphnet.models.easy_model.EasySyntax.prediction_labels", false]], "prepare_data() (graphnet.data.curated_datamodule.curateddataset method)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.prepare_data", false]], "prepare_data() (graphnet.data.curated_datamodule.erdahosteddataset method)": [[5, "graphnet.data.curated_datamodule.ERDAHostedDataset.prepare_data", false]], "prepare_data() (graphnet.data.curated_datamodule.icecubehosteddataset method)": [[5, "graphnet.data.curated_datamodule.IceCubeHostedDataset.prepare_data", false]], "prepare_data() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.prepare_data", false]], "progressbar (class in graphnet.training.callbacks)": [[132, "graphnet.training.callbacks.ProgressBar", false]], "prometheus (class in graphnet.models.detector.prometheus)": [[102, "graphnet.models.detector.prometheus.Prometheus", false]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS", false]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS", false]], "prometheusextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[44, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusExtractor", false]], "prometheusfeatureextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[44, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusFeatureExtractor", false]], "prometheusreader (class in graphnet.data.readers.prometheus_reader)": [[54, "graphnet.data.readers.prometheus_reader.PrometheusReader", false]], "prometheustruthextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[44, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusTruthExtractor", false]], "publicprometheusdataset (class in graphnet.datasets.prometheus_datasets)": [[67, "graphnet.datasets.prometheus_datasets.PublicPrometheusDataset", false]], "pulse_truth (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.pulse_truth", false]], "pulsemaps (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.pulsemaps", false]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps", false]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[60, "graphnet.data.utilities.sqlite_utilities.query_database", false]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[11, "graphnet.data.dataset.dataset.Dataset.query_table", false]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table", false]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[16, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table", false]], "radialedges (class in graphnet.models.data_representation.graphs.edges.edges)": [[91, "graphnet.models.data_representation.graphs.edges.edges.RadialEdges", false]], "randomchunksampler (class in graphnet.data.dataset.samplers)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler", false]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[82, "graphnet.models.coarsening.Coarsening.reduce_options", false]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[147, "graphnet.utilities.deprecation_tools.rename_state_dict_entries", false]], "repeatfilter (class in graphnet.utilities.logging)": [[150, "graphnet.utilities.logging.RepeatFilter", false]], "requires_icecube() (in module graphnet.utilities.imports)": [[149, "graphnet.utilities.imports.requires_icecube", false]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[85, "graphnet.models.components.layers.EdgeConvTito.reset_parameters", false]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[61, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve", false]], "rmseloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.RMSELoss", false]], "rmsevonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.RMSEVonMisesFisher3DLoss", false]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[105, "graphnet.models.gnn.RNN_tito.RNN_TITO", false]], "rrwplinearedgeencoder (class in graphnet.models.components.embedding)": [[84, "graphnet.models.components.embedding.RRWPLinearEdgeEncoder", false]], "rrwplinearnodeencoder (class in graphnet.models.components.embedding)": [[84, "graphnet.models.components.embedding.RRWPLinearNodeEncoder", false]], "run() (graphnet.deployment.deployer.deployer method)": [[71, "graphnet.deployment.deployer.Deployer.run", false]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[60, "graphnet.data.utilities.sqlite_utilities.run_sql_code", false]], "rwselinearnodeencoder (class in graphnet.models.components.embedding)": [[84, "graphnet.models.components.embedding.RWSELinearNodeEncoder", false]], "sangraphhead (class in graphnet.models.components.layers)": [[85, "graphnet.models.components.layers.SANGraphHead", false]], "save() (graphnet.models.model.model method)": [[118, "graphnet.models.model.Model.save", false]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[141, "graphnet.utilities.config.configurable.Configurable.save_config", false]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[142, "graphnet.utilities.config.dataset_config.save_dataset_config", false]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[143, "graphnet.utilities.config.model_config.save_model_config", false]], "save_results() (in module graphnet.training.utils)": [[135, "graphnet.training.utils.save_results", false]], "save_selection() (in module graphnet.training.utils)": [[135, "graphnet.training.utils.save_selection", false]], "save_state_dict() (graphnet.models.model.model method)": [[118, "graphnet.models.model.Model.save_state_dict", false]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[60, "graphnet.data.utilities.sqlite_utilities.save_to_sql", false]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.seed", false]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.selection", false]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[100, "graphnet.models.detector.icecube.IceCube86.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[100, "graphnet.models.detector.icecube.IceCubeKaggle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[100, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[101, "graphnet.models.detector.liquido.LiquidO_v1.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[102, "graphnet.models.detector.prometheus.ARCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[102, "graphnet.models.detector.prometheus.BaikalGVD8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[102, "graphnet.models.detector.prometheus.IceCube86Prometheus.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[102, "graphnet.models.detector.prometheus.IceCubeDeepCore8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[102, "graphnet.models.detector.prometheus.IceCubeGen2.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[102, "graphnet.models.detector.prometheus.IceCubeUpgrade7.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[102, "graphnet.models.detector.prometheus.IceDemo81.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[102, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[102, "graphnet.models.detector.prometheus.ORCA150SuperDense.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[102, "graphnet.models.detector.prometheus.PONETriangle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[102, "graphnet.models.detector.prometheus.TRIDENT1211.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[102, "graphnet.models.detector.prometheus.WaterDemo81.sensor_id_column", false]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[99, "graphnet.models.detector.detector.Detector.sensor_index_name", false]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[99, "graphnet.models.detector.detector.Detector.sensor_position_names", false]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[35, "graphnet.data.extractors.icecube.utilities.collections.serialise", false]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[50, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors", false]], "set_gcd() (graphnet.data.extractors.combine_extractors.combinedextractor method)": [[18, "graphnet.data.extractors.combine_extractors.CombinedExtractor.set_gcd", false]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[21, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd", false]], "set_gcd() (graphnet.data.extractors.icecube.i3truthextractor.i3truthextractor method)": [[32, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor.set_gcd", false]], "set_number_of_inputs() (graphnet.models.data_representation.graphs.nodes.nodes.nodedefinition method)": [[96, "graphnet.models.data_representation.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs", false]], "set_output_feature_names() (graphnet.models.data_representation.graphs.nodes.nodes.nodedefinition method)": [[96, "graphnet.models.data_representation.graphs.nodes.nodes.NodeDefinition.set_output_feature_names", false]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[118, "graphnet.models.model.Model.set_verbose_print_recursively", false]], "setlevel() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.setLevel", false]], "settings (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.Settings", false]], "setup() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.setup", false]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[132, "graphnet.training.callbacks.GraphnetEarlyStopping.setup", false]], "shared_step() (graphnet.models.easy_model.easysyntax method)": [[103, "graphnet.models.easy_model.EasySyntax.shared_step", false]], "shared_step() (graphnet.models.normalizing_flow.normalizingflow method)": [[119, "graphnet.models.normalizing_flow.NormalizingFlow.shared_step", false]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[123, "graphnet.models.standard_model.StandardModel.shared_step", false]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[84, "graphnet.models.components.embedding.SinusoidalPosEmb", false]], "snowstorm (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.SNOWSTORM", false]], "snowstorm (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.SNOWSTORM", false]], "snowstormdataset (class in graphnet.datasets.snowstorm_dataset)": [[68, "graphnet.datasets.snowstorm_dataset.SnowStormDataset", false]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[84, "graphnet.models.components.embedding.SpacetimeEncoder", false]], "sqlitedataconverter (class in graphnet.data.sqlite.deprecated_methods)": [[56, "graphnet.data.sqlite.deprecated_methods.SQLiteDataConverter", false]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[16, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset", false]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[65, "graphnet.data.writers.sqlite_writer.SQLiteWriter", false]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[138, "graphnet.utilities.argparse.ArgumentParser.standard_arguments", false]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[122, "graphnet.models.standard_averaged_model.StandardAveragedModel", false]], "standardflowtask (class in graphnet.models.task.task)": [[127, "graphnet.models.task.task.StandardFlowTask", false]], "standardlearnedtask (class in graphnet.models.task.task)": [[127, "graphnet.models.task.task.StandardLearnedTask", false]], "standardmodel (class in graphnet.models.standard_model)": [[123, "graphnet.models.standard_model.StandardModel", false]], "std_pool() (in module graphnet.models.components.pool)": [[86, "graphnet.models.components.pool.std_pool", false]], "std_pool_x() (in module graphnet.models.components.pool)": [[86, "graphnet.models.components.pool.std_pool_x", false]], "stream_handlers (graphnet.utilities.logging.logger property)": [[150, "graphnet.utilities.logging.Logger.stream_handlers", false]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[100, "graphnet.models.detector.icecube.IceCube86.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[100, "graphnet.models.detector.icecube.IceCubeKaggle.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[100, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column", false]], "string_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[101, "graphnet.models.detector.liquido.LiquidO_v1.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[102, "graphnet.models.detector.prometheus.ARCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[102, "graphnet.models.detector.prometheus.BaikalGVD8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[102, "graphnet.models.detector.prometheus.IceCube86Prometheus.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[102, "graphnet.models.detector.prometheus.IceCubeDeepCore8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[102, "graphnet.models.detector.prometheus.IceCubeGen2.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[102, "graphnet.models.detector.prometheus.IceCubeUpgrade7.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[102, "graphnet.models.detector.prometheus.IceDemo81.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[102, "graphnet.models.detector.prometheus.ORCA150.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[102, "graphnet.models.detector.prometheus.ORCA150SuperDense.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[102, "graphnet.models.detector.prometheus.PONETriangle.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[102, "graphnet.models.detector.prometheus.TRIDENT1211.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[102, "graphnet.models.detector.prometheus.WaterDemo81.string_id_column", false]], "string_index_name (graphnet.models.detector.detector.detector property)": [[99, "graphnet.models.detector.detector.Detector.string_index_name", false]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection", false]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[61, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver", false]], "subeventstreami3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[37, "graphnet.data.extractors.icecube.utilities.i3_filters.SubEventStreamI3Filter", false]], "sum_pool() (in module graphnet.models.components.pool)": [[86, "graphnet.models.components.pool.sum_pool", false]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[86, "graphnet.models.components.pool.sum_pool_and_distribute", false]], "sum_pool_x() (in module graphnet.models.components.pool)": [[86, "graphnet.models.components.pool.sum_pool_x", false]], "tablefilter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[37, "graphnet.data.extractors.icecube.utilities.i3_filters.TableFilter", false]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[145, "graphnet.utilities.config.training_config.TrainingConfig.target", false]], "target_labels (graphnet.models.easy_model.easysyntax property)": [[103, "graphnet.models.easy_model.EasySyntax.target_labels", false]], "task (class in graphnet.models.task.task)": [[127, "graphnet.models.task.task.Task", false]], "teardown() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.teardown", false]], "test_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.test_dataloader", false]], "testdataset (class in graphnet.datasets.test_dataset)": [[69, "graphnet.datasets.test_dataset.TestDataset", false]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.TimeReconstruction", false]], "track (class in graphnet.training.labels)": [[133, "graphnet.training.labels.Track", false]], "train() (graphnet.models.easy_model.easysyntax method)": [[103, "graphnet.models.easy_model.EasySyntax.train", false]], "train_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.train_dataloader", false]], "train_eval() (graphnet.models.task.task.task method)": [[127, "graphnet.models.task.task.Task.train_eval", false]], "training_step() (graphnet.models.easy_model.easysyntax method)": [[103, "graphnet.models.easy_model.EasySyntax.training_step", false]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[122, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step", false]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[145, "graphnet.utilities.config.training_config.TrainingConfig", false]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[35, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts", false]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[144, "graphnet.utilities.config.parsing.traverse_and_apply", false]], "trident1211 (class in graphnet.models.detector.prometheus)": [[102, "graphnet.models.detector.prometheus.TRIDENT1211", false]], "tridentsmall (class in graphnet.datasets.prometheus_datasets)": [[67, "graphnet.datasets.prometheus_datasets.TRIDENTSmall", false]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH", false]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.truth", false]], "truth_table (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.truth_table", false]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[11, "graphnet.data.dataset.dataset.Dataset.truth_table", false]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table", false]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[82, "graphnet.models.coarsening.unbatch_edge_index", false]], "uniform (class in graphnet.training.weight_fitting)": [[136, "graphnet.training.weight_fitting.Uniform", false]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE", false]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE", false]], "val_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.val_dataloader", false]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[50, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files", false]], "validate_tasks() (graphnet.models.easy_model.easysyntax method)": [[103, "graphnet.models.easy_model.EasySyntax.validate_tasks", false]], "validate_tasks() (graphnet.models.normalizing_flow.normalizingflow method)": [[119, "graphnet.models.normalizing_flow.NormalizingFlow.validate_tasks", false]], "validate_tasks() (graphnet.models.standard_model.standardmodel method)": [[123, "graphnet.models.standard_model.StandardModel.validate_tasks", false]], "validation_step() (graphnet.models.easy_model.easysyntax method)": [[103, "graphnet.models.easy_model.EasySyntax.validation_step", false]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[122, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step", false]], "verbose_print (graphnet.models.model.model attribute)": [[118, "graphnet.models.model.Model.verbose_print", false]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.VertexReconstruction", false]], "visibleinelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction", false]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.VonMisesFisher2DLoss", false]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.VonMisesFisher3DLoss", false]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.VonMisesFisherLoss", false]], "warning() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.warning", false]], "warning_once() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.warning_once", false]], "waterdemo81 (class in graphnet.models.detector.prometheus)": [[102, "graphnet.models.detector.prometheus.WaterDemo81", false]], "weightfitter (class in graphnet.training.weight_fitting)": [[136, "graphnet.training.weight_fitting.WeightFitter", false]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[138, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments", false]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[100, "graphnet.models.detector.icecube.IceCube86.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubekaggle attribute)": [[100, "graphnet.models.detector.icecube.IceCubeKaggle.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[100, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz", false]], "xyz (graphnet.models.detector.liquido.liquido_v1 attribute)": [[101, "graphnet.models.detector.liquido.LiquidO_v1.xyz", false]], "xyz (graphnet.models.detector.prometheus.arca115 attribute)": [[102, "graphnet.models.detector.prometheus.ARCA115.xyz", false]], "xyz (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[102, "graphnet.models.detector.prometheus.BaikalGVD8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[102, "graphnet.models.detector.prometheus.IceCube86Prometheus.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[102, "graphnet.models.detector.prometheus.IceCubeDeepCore8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[102, "graphnet.models.detector.prometheus.IceCubeGen2.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[102, "graphnet.models.detector.prometheus.IceCubeUpgrade7.xyz", false]], "xyz (graphnet.models.detector.prometheus.icedemo81 attribute)": [[102, "graphnet.models.detector.prometheus.IceDemo81.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[102, "graphnet.models.detector.prometheus.ORCA150.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150superdense attribute)": [[102, "graphnet.models.detector.prometheus.ORCA150SuperDense.xyz", false]], "xyz (graphnet.models.detector.prometheus.ponetriangle attribute)": [[102, "graphnet.models.detector.prometheus.PONETriangle.xyz", false]], "xyz (graphnet.models.detector.prometheus.trident1211 attribute)": [[102, "graphnet.models.detector.prometheus.TRIDENT1211.xyz", false]], "xyz (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[102, "graphnet.models.detector.prometheus.WaterDemo81.xyz", false]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.ZenithReconstruction", false]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa", false]]}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [66, 0, 0, "-", "datasets"], [70, 0, 0, "-", "deployment"], [79, 0, 0, "-", "exceptions"], [81, 0, 0, "-", "models"], [131, 0, 0, "-", "training"], [137, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "curated_datamodule"], [6, 0, 0, "-", "dataclasses"], [7, 0, 0, "-", "dataconverter"], [8, 0, 0, "-", "dataloader"], [9, 0, 0, "-", "datamodule"], [10, 0, 0, "-", "dataset"], [17, 0, 0, "-", "extractors"], [45, 0, 0, "-", "parquet"], [47, 0, 0, "-", "pre_configured"], [49, 0, 0, "-", "readers"], [55, 0, 0, "-", "sqlite"], [57, 0, 0, "-", "utilities"], [62, 0, 0, "-", "writers"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "SNOWSTORM"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "SNOWSTORM"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.curated_datamodule": [[5, 1, 1, "", "CuratedDataset"], [5, 1, 1, "", "ERDAHostedDataset"], [5, 1, 1, "", "IceCubeHostedDataset"]], "graphnet.data.curated_datamodule.CuratedDataset": [[5, 3, 1, "", "available_backends"], [5, 3, 1, "", "citation"], [5, 3, 1, "", "comments"], [5, 3, 1, "", "creator"], [5, 3, 1, "", "dataset_dir"], [5, 4, 1, "", "description"], [5, 3, 1, "", "event_truth"], [5, 3, 1, "", "events"], [5, 3, 1, "", "experiment"], [5, 3, 1, "", "features"], [5, 4, 1, "", "prepare_data"], [5, 3, 1, "", "pulse_truth"], [5, 3, 1, "", "pulsemaps"], [5, 3, 1, "", "truth_table"]], "graphnet.data.curated_datamodule.ERDAHostedDataset": [[5, 4, 1, "", "prepare_data"]], "graphnet.data.curated_datamodule.IceCubeHostedDataset": [[5, 4, 1, "", "prepare_data"]], "graphnet.data.dataclasses": [[6, 1, 1, "", "I3FileSet"], [6, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_files"], [6, 2, 1, "", "modules"], [6, 2, 1, "", "output_folder"]], "graphnet.data.dataconverter": [[7, 1, 1, "", "DataConverter"], [7, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[7, 4, 1, "", "get_map_function"], [7, 4, 1, "", "merge_files"]], "graphnet.data.dataloader": [[8, 1, 1, "", "DataLoader"], [8, 5, 1, "", "collate_fn"], [8, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[8, 4, 1, "", "from_dataset_config"]], "graphnet.data.datamodule": [[9, 1, 1, "", "GraphNeTDataModule"]], "graphnet.data.datamodule.GraphNeTDataModule": [[9, 4, 1, "", "prepare_data"], [9, 4, 1, "", "setup"], [9, 4, 1, "", "teardown"], [9, 3, 1, "", "test_dataloader"], [9, 3, 1, "", "train_dataloader"], [9, 3, 1, "", "val_dataloader"]], "graphnet.data.dataset": [[11, 0, 0, "-", "dataset"], [12, 0, 0, "-", "parquet"], [14, 0, 0, "-", "samplers"], [15, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[11, 1, 1, "", "Dataset"], [11, 1, 1, "", "EnsembleDataset"], [11, 5, 1, "", "load_module"], [11, 5, 1, "", "parse_data_representation"], [11, 5, 1, "", "parse_labels"]], "graphnet.data.dataset.dataset.Dataset": [[11, 4, 1, "", "add_label"], [11, 4, 1, "", "concatenate"], [11, 4, 1, "", "from_config"], [11, 3, 1, "", "path"], [11, 4, 1, "", "query_table"], [11, 3, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[13, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[13, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[13, 3, 1, "", "chunk_sizes"], [13, 4, 1, "", "query_table"]], "graphnet.data.dataset.samplers": [[14, 1, 1, "", "LenMatchBatchSampler"], [14, 1, 1, "", "RandomChunkSampler"], [14, 5, 1, "", "gather_len_matched_buckets"]], "graphnet.data.dataset.samplers.RandomChunkSampler": [[14, 3, 1, "", "chunks"], [14, 3, 1, "", "data_source"], [14, 3, 1, "", "num_samples"]], "graphnet.data.dataset.sqlite": [[16, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[16, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[16, 4, 1, "", "query_table"]], "graphnet.data.extractors": [[18, 0, 0, "-", "combine_extractors"], [19, 0, 0, "-", "extractor"], [20, 0, 0, "-", "icecube"], [39, 0, 0, "-", "internal"], [41, 0, 0, "-", "liquido"], [43, 0, 0, "-", "prometheus"]], "graphnet.data.extractors.combine_extractors": [[18, 1, 1, "", "CombinedExtractor"]], "graphnet.data.extractors.combine_extractors.CombinedExtractor": [[18, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.extractor": [[19, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[19, 4, 1, "", "exclude"], [19, 3, 1, "", "name"]], "graphnet.data.extractors.icecube": [[21, 0, 0, "-", "i3extractor"], [22, 0, 0, "-", "i3featureextractor"], [23, 0, 0, "-", "i3filtermapextractor"], [24, 0, 0, "-", "i3genericextractor"], [25, 0, 0, "-", "i3hybridrecoextractor"], [26, 0, 0, "-", "i3ntmuonlabelsextractor"], [27, 0, 0, "-", "i3particleextractor"], [28, 0, 0, "-", "i3pisaextractor"], [29, 0, 0, "-", "i3quesoextractor"], [30, 0, 0, "-", "i3retroextractor"], [31, 0, 0, "-", "i3splinempeextractor"], [32, 0, 0, "-", "i3truthextractor"], [33, 0, 0, "-", "i3tumextractor"], [34, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[21, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[21, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[22, 1, 1, "", "I3FeatureExtractor"], [22, 1, 1, "", "I3FeatureExtractorIceCube86"], [22, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [22, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [22, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3filtermapextractor": [[23, 1, 1, "", "I3FilterMapExtractor"]], "graphnet.data.extractors.icecube.i3genericextractor": [[24, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[25, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[26, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[27, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[28, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[29, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[30, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[31, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[32, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor": [[32, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3tumextractor": [[33, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[35, 0, 0, "-", "collections"], [36, 0, 0, "-", "frames"], [37, 0, 0, "-", "i3_filters"], [38, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[35, 5, 1, "", "flatten_nested_dictionary"], [35, 5, 1, "", "serialise"], [35, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[36, 5, 1, "", "frame_is_montecarlo"], [36, 5, 1, "", "frame_is_noise"], [36, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[37, 1, 1, "", "ChargeFilter"], [37, 1, 1, "", "I3Filter"], [37, 1, 1, "", "I3FilterMask"], [37, 1, 1, "", "NullSplitI3Filter"], [37, 1, 1, "", "SubEventStreamI3Filter"], [37, 1, 1, "", "TableFilter"]], "graphnet.data.extractors.icecube.utilities.types": [[38, 5, 1, "", "break_cyclic_recursion"], [38, 5, 1, "", "cast_object_to_pure_python"], [38, 5, 1, "", "cast_pulse_series_to_pure_python"], [38, 5, 1, "", "get_member_variables"], [38, 5, 1, "", "is_boost_class"], [38, 5, 1, "", "is_boost_enum"], [38, 5, 1, "", "is_icecube_class"], [38, 5, 1, "", "is_method"], [38, 5, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[40, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[40, 1, 1, "", "ParquetExtractor"]], "graphnet.data.extractors.liquido": [[42, 0, 0, "-", "h5_extractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[42, 1, 1, "", "H5Extractor"], [42, 1, 1, "", "H5HitExtractor"], [42, 1, 1, "", "H5TruthExtractor"]], "graphnet.data.extractors.prometheus": [[44, 0, 0, "-", "prometheus_extractor"]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[44, 1, 1, "", "PrometheusExtractor"], [44, 1, 1, "", "PrometheusFeatureExtractor"], [44, 1, 1, "", "PrometheusTruthExtractor"]], "graphnet.data.parquet": [[46, 0, 0, "-", "deprecated_methods"]], "graphnet.data.parquet.deprecated_methods": [[46, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.pre_configured": [[48, 0, 0, "-", "dataconverters"]], "graphnet.data.pre_configured.dataconverters": [[48, 1, 1, "", "I3ToParquetConverter"], [48, 1, 1, "", "I3ToSQLiteConverter"], [48, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.readers": [[50, 0, 0, "-", "graphnet_file_reader"], [51, 0, 0, "-", "i3reader"], [52, 0, 0, "-", "internal_parquet_reader"], [53, 0, 0, "-", "liquido_reader"], [54, 0, 0, "-", "prometheus_reader"]], "graphnet.data.readers.graphnet_file_reader": [[50, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[50, 3, 1, "", "accepted_extractors"], [50, 3, 1, "", "accepted_file_extensions"], [50, 3, 1, "", "extracor_names"], [50, 4, 1, "", "find_files"], [50, 4, 1, "", "set_extractors"], [50, 4, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[51, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[51, 4, 1, "", "find_files"]], "graphnet.data.readers.internal_parquet_reader": [[52, 1, 1, "", "ParquetReader"]], "graphnet.data.readers.internal_parquet_reader.ParquetReader": [[52, 4, 1, "", "find_files"]], "graphnet.data.readers.liquido_reader": [[53, 1, 1, "", "LiquidOReader"]], "graphnet.data.readers.liquido_reader.LiquidOReader": [[53, 4, 1, "", "find_files"]], "graphnet.data.readers.prometheus_reader": [[54, 1, 1, "", "PrometheusReader"]], "graphnet.data.readers.prometheus_reader.PrometheusReader": [[54, 4, 1, "", "find_files"]], "graphnet.data.sqlite": [[56, 0, 0, "-", "deprecated_methods"]], "graphnet.data.sqlite.deprecated_methods": [[56, 1, 1, "", "SQLiteDataConverter"]], "graphnet.data.utilities": [[58, 0, 0, "-", "parquet_to_sqlite"], [59, 0, 0, "-", "random"], [60, 0, 0, "-", "sqlite_utilities"], [61, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.random": [[59, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[60, 5, 1, "", "attach_index"], [60, 5, 1, "", "create_table"], [60, 5, 1, "", "create_table_and_save_to_sql"], [60, 5, 1, "", "database_exists"], [60, 5, 1, "", "database_table_exists"], [60, 5, 1, "", "get_primary_keys"], [60, 5, 1, "", "query_database"], [60, 5, 1, "", "run_sql_code"], [60, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[61, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[61, 4, 1, "", "resolve"]], "graphnet.data.writers": [[63, 0, 0, "-", "graphnet_writer"], [64, 0, 0, "-", "parquet_writer"], [65, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[63, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[63, 3, 1, "", "expects_merged_dataframes"], [63, 3, 1, "", "file_extension"], [63, 4, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[64, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[64, 4, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[65, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[65, 4, 1, "", "merge_files"]], "graphnet.datasets": [[67, 0, 0, "-", "prometheus_datasets"], [68, 0, 0, "-", "snowstorm_dataset"], [69, 0, 0, "-", "test_dataset"]], "graphnet.datasets.prometheus_datasets": [[67, 1, 1, "", "BaikalGVDSmall"], [67, 1, 1, "", "PONESmall"], [67, 1, 1, "", "PublicPrometheusDataset"], [67, 1, 1, "", "TRIDENTSmall"]], "graphnet.datasets.snowstorm_dataset": [[68, 1, 1, "", "SnowStormDataset"]], "graphnet.datasets.test_dataset": [[69, 1, 1, "", "TestDataset"]], "graphnet.deployment": [[71, 0, 0, "-", "deployer"], [72, 0, 0, "-", "deployment_module"], [73, 0, 0, "-", "i3modules"], [75, 0, 0, "-", "icecube"]], "graphnet.deployment.deployer": [[71, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[71, 4, 1, "", "run"]], "graphnet.deployment.deployment_module": [[72, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.i3modules": [[74, 0, 0, "-", "deprecated_methods"]], "graphnet.deployment.i3modules.deprecated_methods": [[74, 1, 1, "", "GraphNeTI3Deployer"]], "graphnet.deployment.icecube": [[76, 0, 0, "-", "cleaning_module"], [77, 0, 0, "-", "i3deployer"], [78, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[76, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.i3deployer": [[77, 1, 1, "", "I3Deployer"]], "graphnet.deployment.icecube.inference_module": [[78, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[80, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[80, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[82, 0, 0, "-", "coarsening"], [83, 0, 0, "-", "components"], [87, 0, 0, "-", "data_representation"], [98, 0, 0, "-", "detector"], [103, 0, 0, "-", "easy_model"], [104, 0, 0, "-", "gnn"], [114, 0, 0, "-", "graphs"], [118, 0, 0, "-", "model"], [119, 0, 0, "-", "normalizing_flow"], [120, 0, 0, "-", "rnn"], [122, 0, 0, "-", "standard_averaged_model"], [123, 0, 0, "-", "standard_model"], [124, 0, 0, "-", "task"], [128, 0, 0, "-", "transformer"], [130, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[82, 1, 1, "", "AttributeCoarsening"], [82, 1, 1, "", "Coarsening"], [82, 1, 1, "", "CustomDOMCoarsening"], [82, 1, 1, "", "DOMAndTimeWindowCoarsening"], [82, 1, 1, "", "DOMCoarsening"], [82, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[82, 4, 1, "", "forward"], [82, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[84, 0, 0, "-", "embedding"], [85, 0, 0, "-", "layers"], [86, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[84, 1, 1, "", "FourierEncoder"], [84, 1, 1, "", "LinearEdgeEncoder"], [84, 1, 1, "", "LinearNodeEncoder"], [84, 1, 1, "", "RRWPLinearEdgeEncoder"], [84, 1, 1, "", "RRWPLinearNodeEncoder"], [84, 1, 1, "", "RWSELinearNodeEncoder"], [84, 1, 1, "", "SinusoidalPosEmb"], [84, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[84, 4, 1, "", "forward"]], "graphnet.models.components.embedding.LinearEdgeEncoder": [[84, 4, 1, "", "forward"]], "graphnet.models.components.embedding.LinearNodeEncoder": [[84, 4, 1, "", "forward"]], "graphnet.models.components.embedding.RRWPLinearEdgeEncoder": [[84, 4, 1, "", "forward"]], "graphnet.models.components.embedding.RRWPLinearNodeEncoder": [[84, 4, 1, "", "forward"]], "graphnet.models.components.embedding.RWSELinearNodeEncoder": [[84, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[84, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[84, 4, 1, "", "forward"]], "graphnet.models.components.layers": [[85, 1, 1, "", "Attention_rel"], [85, 1, 1, "", "Block"], [85, 1, 1, "", "Block_rel"], [85, 1, 1, "", "DropPath"], [85, 1, 1, "", "DynEdgeConv"], [85, 1, 1, "", "DynTrans"], [85, 1, 1, "", "EdgeConvTito"], [85, 1, 1, "", "GritSparseMHA"], [85, 1, 1, "", "GritTransformerLayer"], [85, 1, 1, "", "Mlp"], [85, 1, 1, "", "SANGraphHead"]], "graphnet.models.components.layers.Attention_rel": [[85, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[85, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[85, 4, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[85, 4, 1, "", "extra_repr"], [85, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[85, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[85, 4, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[85, 4, 1, "", "forward"], [85, 4, 1, "", "message"], [85, 4, 1, "", "reset_parameters"]], "graphnet.models.components.layers.GritSparseMHA": [[85, 4, 1, "", "forward"]], "graphnet.models.components.layers.GritTransformerLayer": [[85, 4, 1, "", "forward"]], "graphnet.models.components.layers.Mlp": [[85, 4, 1, "", "forward"]], "graphnet.models.components.layers.SANGraphHead": [[85, 4, 1, "", "forward"]], "graphnet.models.components.pool": [[86, 5, 1, "", "group_by"], [86, 5, 1, "", "group_pulses_to_dom"], [86, 5, 1, "", "group_pulses_to_pmt"], [86, 5, 1, "", "min_pool"], [86, 5, 1, "", "min_pool_x"], [86, 5, 1, "", "std_pool"], [86, 5, 1, "", "std_pool_x"], [86, 5, 1, "", "sum_pool"], [86, 5, 1, "", "sum_pool_and_distribute"], [86, 5, 1, "", "sum_pool_x"]], "graphnet.models.data_representation": [[88, 0, 0, "-", "data_representation"], [89, 0, 0, "-", "graphs"]], "graphnet.models.data_representation.data_representation": [[88, 1, 1, "", "DataRepresentation"]], "graphnet.models.data_representation.data_representation.DataRepresentation": [[88, 4, 1, "", "forward"], [88, 3, 1, "", "nb_outputs"], [88, 3, 1, "", "output_feature_names"]], "graphnet.models.data_representation.graphs": [[90, 0, 0, "-", "edges"], [93, 0, 0, "-", "graph_definition"], [94, 0, 0, "-", "graphs"], [95, 0, 0, "-", "nodes"], [97, 0, 0, "-", "utils"]], "graphnet.models.data_representation.graphs.edges": [[91, 0, 0, "-", "edges"], [92, 0, 0, "-", "minkowski"]], "graphnet.models.data_representation.graphs.edges.edges": [[91, 1, 1, "", "EdgeDefinition"], [91, 1, 1, "", "EuclideanEdges"], [91, 1, 1, "", "KNNDistanceEdges"], [91, 1, 1, "", "KNNEdges"], [91, 1, 1, "", "RadialEdges"]], "graphnet.models.data_representation.graphs.edges.edges.EdgeDefinition": [[91, 4, 1, "", "forward"]], "graphnet.models.data_representation.graphs.edges.minkowski": [[92, 1, 1, "", "MinkowskiKNNEdges"], [92, 5, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.data_representation.graphs.graph_definition": [[93, 1, 1, "", "GraphDefinition"]], "graphnet.models.data_representation.graphs.graph_definition.GraphDefinition": [[93, 4, 1, "", "forward"]], "graphnet.models.data_representation.graphs.graphs": [[94, 1, 1, "", "EdgelessGraph"], [94, 1, 1, "", "KNNGraph"], [94, 1, 1, "", "KNNGraphRRWP"], [94, 1, 1, "", "KNNGraphRWSE"]], "graphnet.models.data_representation.graphs.graphs.KNNGraphRRWP": [[94, 4, 1, "", "forward"]], "graphnet.models.data_representation.graphs.graphs.KNNGraphRWSE": [[94, 4, 1, "", "forward"]], "graphnet.models.data_representation.graphs.nodes": [[96, 0, 0, "-", "nodes"]], "graphnet.models.data_representation.graphs.nodes.nodes": [[96, 1, 1, "", "IceMixNodes"], [96, 1, 1, "", "NodeAsDOMTimeSeries"], [96, 1, 1, "", "NodeDefinition"], [96, 1, 1, "", "NodesAsPulses"], [96, 1, 1, "", "PercentileClusters"]], "graphnet.models.data_representation.graphs.nodes.nodes.NodeDefinition": [[96, 4, 1, "", "forward"], [96, 3, 1, "", "nb_outputs"], [96, 4, 1, "", "set_number_of_inputs"], [96, 4, 1, "", "set_output_feature_names"]], "graphnet.models.data_representation.graphs.utils": [[97, 1, 1, "", "cluster_and_pad"], [97, 5, 1, "", "cluster_summarize_with_percentiles"], [97, 5, 1, "", "gather_cluster_sequence"], [97, 5, 1, "", "ice_transparency"], [97, 5, 1, "", "identify_indices"], [97, 5, 1, "", "lex_sort"]], "graphnet.models.data_representation.graphs.utils.cluster_and_pad": [[97, 4, 1, "", "add_charge_threshold_summary"], [97, 4, 1, "", "add_counts"], [97, 4, 1, "", "add_mean"], [97, 4, 1, "", "add_percentile_summary"], [97, 4, 1, "", "add_std"], [97, 4, 1, "", "add_sum_charge"]], "graphnet.models.detector": [[99, 0, 0, "-", "detector"], [100, 0, 0, "-", "icecube"], [101, 0, 0, "-", "liquido"], [102, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[99, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[99, 4, 1, "", "feature_map"], [99, 4, 1, "", "forward"], [99, 3, 1, "", "geometry_table"], [99, 3, 1, "", "sensor_index_name"], [99, 3, 1, "", "sensor_position_names"], [99, 3, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[100, 1, 1, "", "IceCube86"], [100, 1, 1, "", "IceCubeDeepCore"], [100, 1, 1, "", "IceCubeKaggle"], [100, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[100, 4, 1, "", "feature_map"], [100, 2, 1, "", "geometry_table_path"], [100, 2, 1, "", "sensor_id_column"], [100, 2, 1, "", "string_id_column"], [100, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[100, 4, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[100, 4, 1, "", "feature_map"], [100, 2, 1, "", "geometry_table_path"], [100, 2, 1, "", "sensor_id_column"], [100, 2, 1, "", "string_id_column"], [100, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[100, 4, 1, "", "feature_map"], [100, 2, 1, "", "geometry_table_path"], [100, 2, 1, "", "sensor_id_column"], [100, 2, 1, "", "string_id_column"], [100, 2, 1, "", "xyz"]], "graphnet.models.detector.liquido": [[101, 1, 1, "", "LiquidO_v1"]], "graphnet.models.detector.liquido.LiquidO_v1": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[102, 1, 1, "", "ARCA115"], [102, 1, 1, "", "BaikalGVD8"], [102, 1, 1, "", "IceCube86Prometheus"], [102, 1, 1, "", "IceCubeDeepCore8"], [102, 1, 1, "", "IceCubeGen2"], [102, 1, 1, "", "IceCubeUpgrade7"], [102, 1, 1, "", "IceDemo81"], [102, 1, 1, "", "ORCA150"], [102, 1, 1, "", "ORCA150SuperDense"], [102, 1, 1, "", "PONETriangle"], [102, 1, 1, "", "Prometheus"], [102, 1, 1, "", "TRIDENT1211"], [102, 1, 1, "", "WaterDemo81"]], "graphnet.models.detector.prometheus.ARCA115": [[102, 4, 1, "", "feature_map"], [102, 2, 1, "", "geometry_table_path"], [102, 2, 1, "", "sensor_id_column"], [102, 2, 1, "", "string_id_column"], [102, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.BaikalGVD8": [[102, 4, 1, "", "feature_map"], [102, 2, 1, "", "geometry_table_path"], [102, 2, 1, "", "sensor_id_column"], [102, 2, 1, "", "string_id_column"], [102, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCube86Prometheus": [[102, 4, 1, "", "feature_map"], [102, 2, 1, "", "geometry_table_path"], [102, 2, 1, "", "sensor_id_column"], [102, 2, 1, "", "string_id_column"], [102, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeDeepCore8": [[102, 4, 1, "", "feature_map"], [102, 2, 1, "", "geometry_table_path"], [102, 2, 1, "", "sensor_id_column"], [102, 2, 1, "", "string_id_column"], [102, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeGen2": [[102, 4, 1, "", "feature_map"], [102, 2, 1, "", "geometry_table_path"], [102, 2, 1, "", "sensor_id_column"], [102, 2, 1, "", "string_id_column"], [102, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeUpgrade7": [[102, 4, 1, "", "feature_map"], [102, 2, 1, "", "geometry_table_path"], [102, 2, 1, "", "sensor_id_column"], [102, 2, 1, "", "string_id_column"], [102, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceDemo81": [[102, 4, 1, "", "feature_map"], [102, 2, 1, "", "geometry_table_path"], [102, 2, 1, "", "sensor_id_column"], [102, 2, 1, "", "string_id_column"], [102, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150": [[102, 4, 1, "", "feature_map"], [102, 2, 1, "", "geometry_table_path"], [102, 2, 1, "", "sensor_id_column"], [102, 2, 1, "", "string_id_column"], [102, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150SuperDense": [[102, 4, 1, "", "feature_map"], [102, 2, 1, "", "geometry_table_path"], [102, 2, 1, "", "sensor_id_column"], [102, 2, 1, "", "string_id_column"], [102, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.PONETriangle": [[102, 4, 1, "", "feature_map"], [102, 2, 1, "", "geometry_table_path"], [102, 2, 1, "", "sensor_id_column"], [102, 2, 1, "", "string_id_column"], [102, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.TRIDENT1211": [[102, 4, 1, "", "feature_map"], [102, 2, 1, "", "geometry_table_path"], [102, 2, 1, "", "sensor_id_column"], [102, 2, 1, "", "string_id_column"], [102, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.WaterDemo81": [[102, 4, 1, "", "feature_map"], [102, 2, 1, "", "geometry_table_path"], [102, 2, 1, "", "sensor_id_column"], [102, 2, 1, "", "string_id_column"], [102, 2, 1, "", "xyz"]], "graphnet.models.easy_model": [[103, 1, 1, "", "EasySyntax"]], "graphnet.models.easy_model.EasySyntax": [[103, 4, 1, "", "compute_loss"], [103, 4, 1, "", "configure_optimizers"], [103, 4, 1, "", "fit"], [103, 4, 1, "", "forward"], [103, 4, 1, "", "inference"], [103, 4, 1, "", "predict"], [103, 4, 1, "", "predict_as_dataframe"], [103, 3, 1, "", "prediction_labels"], [103, 4, 1, "", "shared_step"], [103, 3, 1, "", "target_labels"], [103, 4, 1, "", "train"], [103, 4, 1, "", "training_step"], [103, 4, 1, "", "validate_tasks"], [103, 4, 1, "", "validation_step"]], "graphnet.models.gnn": [[105, 0, 0, "-", "RNN_tito"], [106, 0, 0, "-", "convnet"], [107, 0, 0, "-", "dynedge"], [108, 0, 0, "-", "dynedge_jinst"], [109, 0, 0, "-", "dynedge_kaggle_tito"], [110, 0, 0, "-", "gnn"], [111, 0, 0, "-", "grit"], [112, 0, 0, "-", "icemix"], [113, 0, 0, "-", "particlenet"]], "graphnet.models.gnn.RNN_tito": [[105, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[105, 4, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[106, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[106, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[107, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[107, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[108, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[108, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[109, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[109, 4, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[110, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[110, 4, 1, "", "forward"], [110, 3, 1, "", "nb_inputs"], [110, 3, 1, "", "nb_outputs"]], "graphnet.models.gnn.grit": [[111, 1, 1, "", "GRIT"]], "graphnet.models.gnn.grit.GRIT": [[111, 4, 1, "", "forward"]], "graphnet.models.gnn.icemix": [[112, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[112, 4, 1, "", "forward"], [112, 4, 1, "", "no_weight_decay"]], "graphnet.models.gnn.particlenet": [[113, 1, 1, "", "ParticleNeT"]], "graphnet.models.gnn.particlenet.ParticleNeT": [[113, 4, 1, "", "forward"]], "graphnet.models.graphs": [[115, 0, 0, "-", "edges"], [117, 0, 0, "-", "nodes"]], "graphnet.models.graphs.edges": [[116, 0, 0, "-", "minkowski"]], "graphnet.models.model": [[118, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[118, 4, 1, "", "extra_repr"], [118, 4, 1, "", "extra_repr_recursive"], [118, 4, 1, "", "from_config"], [118, 4, 1, "", "load"], [118, 4, 1, "", "load_state_dict"], [118, 4, 1, "", "save"], [118, 4, 1, "", "save_state_dict"], [118, 4, 1, "", "set_verbose_print_recursively"], [118, 2, 1, "", "verbose_print"]], "graphnet.models.normalizing_flow": [[119, 1, 1, "", "NormalizingFlow"]], "graphnet.models.normalizing_flow.NormalizingFlow": [[119, 4, 1, "", "forward"], [119, 4, 1, "", "shared_step"], [119, 4, 1, "", "validate_tasks"]], "graphnet.models.rnn": [[121, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[121, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[121, 4, 1, "", "clean_up_data_object"], [121, 4, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[122, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[122, 4, 1, "", "load_state_dict"], [122, 4, 1, "", "on_train_end"], [122, 4, 1, "", "optimizer_step"], [122, 4, 1, "", "training_step"], [122, 4, 1, "", "validation_step"]], "graphnet.models.standard_model": [[123, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[123, 4, 1, "", "compute_loss"], [123, 4, 1, "", "forward"], [123, 4, 1, "", "shared_step"], [123, 4, 1, "", "validate_tasks"]], "graphnet.models.task": [[125, 0, 0, "-", "classification"], [126, 0, 0, "-", "reconstruction"], [127, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[125, 1, 1, "", "BinaryClassificationTask"], [125, 1, 1, "", "BinaryClassificationTaskLogits"], [125, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[126, 1, 1, "", "AzimuthReconstruction"], [126, 1, 1, "", "AzimuthReconstructionWithKappa"], [126, 1, 1, "", "DirectionReconstructionWithKappa"], [126, 1, 1, "", "EnergyReconstruction"], [126, 1, 1, "", "EnergyReconstructionWithPower"], [126, 1, 1, "", "EnergyReconstructionWithUncertainty"], [126, 1, 1, "", "EnergyTCReconstruction"], [126, 1, 1, "", "InelasticityReconstruction"], [126, 1, 1, "", "PositionReconstruction"], [126, 1, 1, "", "TimeReconstruction"], [126, 1, 1, "", "VertexReconstruction"], [126, 1, 1, "", "VisibleInelasticityReconstruction"], [126, 1, 1, "", "ZenithReconstruction"], [126, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[127, 1, 1, "", "IdentityTask"], [127, 1, 1, "", "LearnedTask"], [127, 1, 1, "", "StandardFlowTask"], [127, 1, 1, "", "StandardLearnedTask"], [127, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[127, 3, 1, "", "default_prediction_labels"], [127, 3, 1, "", "default_target_labels"], [127, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[127, 4, 1, "", "compute_loss"], [127, 4, 1, "", "forward"], [127, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[127, 3, 1, "", "default_prediction_labels"], [127, 4, 1, "", "forward"], [127, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[127, 4, 1, "", "compute_loss"], [127, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[127, 3, 1, "", "default_prediction_labels"], [127, 3, 1, "", "default_target_labels"], [127, 4, 1, "", "inference"], [127, 3, 1, "", "nb_inputs"], [127, 4, 1, "", "train_eval"]], "graphnet.models.transformer": [[129, 0, 0, "-", "iseecube"]], "graphnet.models.transformer.iseecube": [[129, 1, 1, "", "ISeeCube"]], "graphnet.models.transformer.iseecube.ISeeCube": [[129, 4, 1, "", "forward"]], "graphnet.models.utils": [[130, 5, 1, "", "add_full_rrwp"], [130, 5, 1, "", "array_to_sequence"], [130, 5, 1, "", "calculate_distance_matrix"], [130, 5, 1, "", "calculate_xyzt_homophily"], [130, 5, 1, "", "full_edge_index"], [130, 5, 1, "", "get_fields"], [130, 5, 1, "", "get_rw_landing_probs"], [130, 5, 1, "", "knn_graph_batch"]], "graphnet.training": [[132, 0, 0, "-", "callbacks"], [133, 0, 0, "-", "labels"], [134, 0, 0, "-", "loss_functions"], [135, 0, 0, "-", "utils"], [136, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[132, 1, 1, "", "GraphnetEarlyStopping"], [132, 1, 1, "", "PiecewiseLinearLR"], [132, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[132, 4, 1, "", "on_fit_end"], [132, 4, 1, "", "on_train_epoch_end"], [132, 4, 1, "", "on_validation_end"], [132, 4, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[132, 4, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[132, 4, 1, "", "get_metrics"], [132, 4, 1, "", "init_predict_tqdm"], [132, 4, 1, "", "init_test_tqdm"], [132, 4, 1, "", "init_train_tqdm"], [132, 4, 1, "", "init_validation_tqdm"], [132, 4, 1, "", "on_train_epoch_end"], [132, 4, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[133, 1, 1, "", "Direction"], [133, 1, 1, "", "Label"], [133, 1, 1, "", "Track"]], "graphnet.training.labels.Label": [[133, 3, 1, "", "key"]], "graphnet.training.loss_functions": [[134, 1, 1, "", "BinaryCrossEntropyLoss"], [134, 1, 1, "", "CrossEntropyLoss"], [134, 1, 1, "", "EnsembleLoss"], [134, 1, 1, "", "EuclideanDistanceLoss"], [134, 1, 1, "", "LogCMK"], [134, 1, 1, "", "LogCoshLoss"], [134, 1, 1, "", "LossFunction"], [134, 1, 1, "", "MAELoss"], [134, 1, 1, "", "MSELoss"], [134, 1, 1, "", "RMSELoss"], [134, 1, 1, "", "RMSEVonMisesFisher3DLoss"], [134, 1, 1, "", "VonMisesFisher2DLoss"], [134, 1, 1, "", "VonMisesFisher3DLoss"], [134, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[134, 4, 1, "", "backward"], [134, 4, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[134, 4, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[134, 4, 1, "", "log_cmk"], [134, 4, 1, "", "log_cmk_approx"], [134, 4, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[135, 5, 1, "", "collate_fn"], [135, 1, 1, "", "collator_sequence_buckleting"], [135, 5, 1, "", "get_predictions"], [135, 5, 1, "", "make_dataloader"], [135, 5, 1, "", "make_train_validation_dataloader"], [135, 5, 1, "", "save_results"], [135, 5, 1, "", "save_selection"]], "graphnet.training.weight_fitting": [[136, 1, 1, "", "BjoernLow"], [136, 1, 1, "", "Uniform"], [136, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[136, 4, 1, "", "fit"]], "graphnet.utilities": [[138, 0, 0, "-", "argparse"], [139, 0, 0, "-", "config"], [146, 0, 0, "-", "decorators"], [147, 0, 0, "-", "deprecation_tools"], [148, 0, 0, "-", "filesys"], [149, 0, 0, "-", "imports"], [150, 0, 0, "-", "logging"], [151, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[138, 1, 1, "", "ArgumentParser"], [138, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[138, 2, 1, "", "standard_arguments"], [138, 4, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[138, 4, 1, "", "contains"], [138, 4, 1, "", "pop_default"]], "graphnet.utilities.config": [[140, 0, 0, "-", "base_config"], [141, 0, 0, "-", "configurable"], [142, 0, 0, "-", "dataset_config"], [143, 0, 0, "-", "model_config"], [144, 0, 0, "-", "parsing"], [145, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[140, 1, 1, "", "BaseConfig"], [140, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[140, 4, 1, "", "as_dict"], [140, 4, 1, "", "dump"], [140, 4, 1, "", "load"], [140, 2, 1, "", "model_config"]], "graphnet.utilities.config.configurable": [[141, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[141, 3, 1, "", "config"], [141, 4, 1, "", "from_config"], [141, 4, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[142, 1, 1, "", "DatasetConfig"], [142, 1, 1, "", "DatasetConfigSaverABCMeta"], [142, 1, 1, "", "DatasetConfigSaverMeta"], [142, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[142, 4, 1, "", "as_dict"], [142, 2, 1, "", "data_representation"], [142, 2, 1, "", "features"], [142, 2, 1, "", "graph_definition"], [142, 2, 1, "", "index_column"], [142, 2, 1, "", "labels"], [142, 2, 1, "", "loss_weight_column"], [142, 2, 1, "", "loss_weight_default_value"], [142, 2, 1, "", "loss_weight_table"], [142, 2, 1, "", "model_config"], [142, 2, 1, "", "node_truth"], [142, 2, 1, "", "node_truth_table"], [142, 2, 1, "", "path"], [142, 2, 1, "", "pulsemaps"], [142, 2, 1, "", "seed"], [142, 2, 1, "", "selection"], [142, 2, 1, "", "string_selection"], [142, 2, 1, "", "truth"], [142, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[143, 1, 1, "", "ModelConfig"], [143, 1, 1, "", "ModelConfigSaverABC"], [143, 1, 1, "", "ModelConfigSaverMeta"], [143, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[143, 2, 1, "", "arguments"], [143, 4, 1, "", "as_dict"], [143, 2, 1, "", "class_name"], [143, 2, 1, "", "model_config"]], "graphnet.utilities.config.parsing": [[144, 5, 1, "", "get_all_grapnet_classes"], [144, 5, 1, "", "get_graphnet_classes"], [144, 5, 1, "", "is_graphnet_class"], [144, 5, 1, "", "is_graphnet_module"], [144, 5, 1, "", "list_all_submodules"], [144, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[145, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[145, 2, 1, "", "dataloader"], [145, 2, 1, "", "early_stopping_patience"], [145, 2, 1, "", "fit"], [145, 2, 1, "", "model_config"], [145, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[147, 5, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[148, 5, 1, "", "find_i3_files"], [148, 5, 1, "", "has_extension"], [148, 5, 1, "", "is_gcd_file"], [148, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[149, 5, 1, "", "has_icecube_package"], [149, 5, 1, "", "has_jammy_flows_package"], [149, 5, 1, "", "has_torch_package"], [149, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[150, 1, 1, "", "Logger"], [150, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[150, 4, 1, "", "critical"], [150, 4, 1, "", "debug"], [150, 4, 1, "", "error"], [150, 3, 1, "", "file_handlers"], [150, 3, 1, "", "handlers"], [150, 4, 1, "", "info"], [150, 4, 1, "", "setLevel"], [150, 3, 1, "", "stream_handlers"], [150, 4, 1, "", "warning"], [150, 4, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[150, 4, 1, "", "filter"], [150, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[151, 5, 1, "", "eps_like"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:exception"}, "terms": {"": [0, 7, 8, 9, 11, 13, 16, 35, 46, 48, 50, 53, 54, 56, 63, 65, 71, 84, 88, 93, 99, 103, 106, 107, 113, 119, 127, 130, 132, 136, 138, 142, 143, 150, 151, 154, 155, 156, 157, 159, 160, 161], "0": [9, 11, 13, 16, 32, 46, 48, 51, 56, 61, 76, 82, 84, 85, 86, 91, 92, 94, 97, 105, 106, 107, 109, 111, 113, 121, 127, 130, 133, 134, 135, 142, 155, 156, 158, 159, 161], "000": 155, "001": [156, 161], "01": [156, 161], "0221": 156, "02_data": 156, "03042": 108, "03762": 84, "04616": 134, "04_ensemble_dataset": 156, "05": 134, "06": 153, "06166": 91, "08570": 113, "0e04": 159, "0e4": 159, "1": [0, 7, 9, 11, 13, 14, 19, 35, 46, 48, 56, 61, 64, 67, 71, 74, 77, 82, 85, 86, 91, 92, 94, 97, 105, 107, 109, 111, 112, 113, 121, 125, 126, 127, 130, 132, 133, 134, 135, 136, 142, 154, 155, 156, 157, 158, 160, 161], "10": [9, 67, 96, 97, 100, 101, 102, 111, 138, 155, 156, 159, 161], "100": 155, "1000": [127, 155, 156], "10000": [11, 13, 16, 61, 84], "1088": 156, "10th": 97, "11": [156, 158], "12": [61, 112, 129, 142, 155, 156], "120": 156, "128": [84, 106, 107, 109, 113, 138, 155, 156, 161], "13": 61, "14": [61, 142, 155, 156], "1536": 129, "15674": 84, "16": [14, 61, 84, 105, 113, 129, 142, 155, 156, 161], "17": [14, 156], "1706": 84, "1748": 156, "17589": 111, "1809": 91, "1812": 134, "1902": 113, "192": 112, "196": 129, "1e6": 127, "2": [9, 11, 16, 35, 46, 56, 85, 86, 91, 94, 97, 105, 107, 109, 111, 113, 121, 126, 130, 134, 142, 155, 156, 158, 161], "20": [11, 13, 16, 61, 150, 156, 158, 159, 161], "200": [155, 159], "200000": 64, "2018": 153, "2019": 134, "2020": [0, 157, 160], "2023": 14, "21": [111, 153, 155, 156], "2209": 108, "2305": 111, "2310": 84, "256": [107, 109, 113, 129], "26": 155, "2d": [130, 134], "2nd": [14, 84, 112], "3": [86, 92, 97, 105, 106, 109, 121, 126, 129, 130, 134, 153, 156, 158, 159], "30": 159, "300": [155, 159], "32": [14, 84, 112, 129], "336": [107, 109], "384": [84, 112, 129], "39": [0, 157, 160], "3d": [126, 134], "4": [14, 85, 97, 108, 112, 126, 156, 159, 161], "40": 159, "400": 65, "42": 9, "5": [11, 13, 16, 61, 85, 97, 105, 111, 121, 134, 138, 154, 155, 156, 158, 159, 161], "50": [96, 97, 138, 159], "500": [97, 159], "50000": [61, 142, 155, 156], "5001": 155, "50th": 97, "59": 158, "6": [84, 86, 112, 129], "64": [105, 113], "647": [11, 16], "7": [76, 86], "700": 134, "768": 96, "8": [85, 86, 94, 105, 107, 109, 111, 121, 130, 134, 135, 153, 155, 156, 158, 161], "80": [156, 161], "86": [22, 100], "890778": [0, 157, 160], "9": 9, "90": [96, 97], "90th": 97, "A": [5, 7, 9, 11, 14, 37, 50, 51, 52, 53, 54, 60, 65, 67, 69, 71, 72, 76, 77, 86, 88, 93, 94, 97, 99, 100, 101, 102, 103, 118, 119, 123, 125, 127, 130, 134, 136, 154, 155, 156, 159, 161], "AND": [14, 134], "AS": [14, 134], "AT": [11, 16], "As": [107, 113, 161], "BE": [14, 134], "BUT": [14, 134], "But": 161, "By": [0, 46, 48, 51, 56, 127, 155, 156, 157, 160, 161], "FOR": [14, 134], "For": [14, 38, 96, 132, 155, 156, 161], "IN": [14, 134], "If": [5, 11, 13, 14, 21, 24, 32, 37, 65, 67, 68, 69, 84, 85, 88, 93, 96, 97, 107, 112, 113, 118, 127, 132, 134, 136, 153, 154, 156, 161], "In": [46, 48, 50, 51, 56, 63, 130, 142, 143, 154, 156, 158], "It": [1, 5, 35, 60, 76, 84, 97, 125, 127, 153, 155, 156, 161], "NO": [14, 134], "NOT": [14, 60, 134, 156], "No": [0, 156, 157, 160], "OF": [14, 134], "ONE": 67, "OR": [14, 134], "On": 5, "One": 156, "Or": [148, 155], "Such": 60, "THE": [14, 134], "TO": [14, 134], "That": [11, 13, 16, 107, 113, 126, 133, 156, 161], "The": [0, 7, 9, 11, 13, 14, 16, 18, 35, 37, 38, 46, 48, 56, 60, 63, 64, 65, 71, 72, 74, 76, 77, 78, 82, 84, 85, 86, 88, 91, 93, 94, 97, 105, 107, 109, 112, 113, 119, 121, 125, 126, 127, 129, 130, 132, 133, 134, 147, 154, 155, 157, 159, 160], "Then": [5, 153], "There": [156, 161], "These": [0, 50, 63, 65, 93, 153, 155, 156, 157, 159, 160, 161], "To": [155, 156, 158, 159, 161], "WITH": [14, 134], "Will": [5, 67, 68, 69, 71, 74, 76, 77, 78, 91, 154], "With": [156, 159, 161], "_": 156, "__": [35, 38, 156], "_____________________": [14, 134], "__call__": [19, 21, 50, 72, 154, 155, 156, 159], "__init__": [142, 143, 154, 155, 156, 161], "_accepted_extractor": [154, 159], "_accepted_file_extens": [154, 159], "_and_": [107, 113], "_charge_sum": 97, "_charge_weight": 97, "_cluster_nam": 97, "_column_nam": 154, "_construct_edg": 91, "_count": 97, "_definition_": 156, "_extractor": [154, 159], "_extractor_nam": [154, 159], "_file_extens": 154, "_file_hash": 5, "_fit_weight": 136, "_forward": 161, "_get_dir_nam": 5, "_indic": [11, 13], "_layer": 161, "_lrschedul": 132, "_may_": [11, 13], "_merge_datafram": 154, "_padded_x": 97, "_pred": 127, "_save_fil": 154, "_sensor_tim": 159, "_sensor_xyz": 159, "_tabl": 154, "_task": [103, 119, 123], "_verify_column": 154, "_x_": 156, "_zipped_fil": 5, "a__b": 35, "ab": [61, 111, 113, 134, 142, 155, 156], "abc": [7, 11, 19, 50, 63, 71, 118, 133, 136, 141, 142, 143], "abcmeta": [142, 143], "abil": 155, "abl": [35, 96, 119, 154, 156, 158, 159, 161], "about": [118, 155, 156, 159], "abov": [14, 134, 136, 155, 156, 159, 161], "abs_p": 94, "absolut": [85, 94, 111, 130, 134], "absopt": 96, "absorpt": 97, "abstract": [1, 5, 11, 63, 88, 93, 99, 110, 127, 141, 156], "abstractmethod": 155, "acceler": 1, "accept": [50, 153, 161], "accepted_extractor": [50, 154], "accepted_file_extens": [50, 154], "access": [94, 133, 155], "accompani": [46, 48, 51, 56, 156], "accord": [82, 86, 88, 91, 93, 94, 97, 134], "achiev": 158, "achitectur": 161, "across": [1, 2, 11, 13, 16, 38, 57, 71, 74, 77, 86, 103, 123, 130, 134, 137, 138, 139, 150, 159], "act": [127, 134, 156, 161], "action": [14, 134], "activ": [85, 96, 103, 105, 107, 111, 113, 121, 127, 153], "activation_lay": [107, 113], "actual": [156, 161], "ad": [7, 11, 13, 16, 22, 46, 48, 56, 84, 93, 96, 97, 107, 112], "adam": [119, 156, 161], "adapt": [111, 156, 161], "add": [11, 84, 85, 94, 97, 107, 111, 113, 130, 138, 147, 153, 156, 159], "add_batchnorm_lay": 113, "add_charge_threshold_summari": 97, "add_count": [96, 97], "add_full_rrwp": [81, 130], "add_global_variables_after_pool": [107, 156, 161], "add_ice_properti": 96, "add_ident": 130, "add_inactive_sensor": [88, 93], "add_label": [11, 155, 156], "add_mean": 97, "add_node_attr_as_self_loop": [84, 111], "add_norm_lay": 107, "add_percentile_summari": 97, "add_static_featur": 93, "add_std": 97, "add_sum_charg": 97, "add_to_databas": 136, "addit": [7, 50, 63, 82, 85, 94, 97, 103, 134, 136, 154, 156, 161], "additional_attribut": [103, 135, 156, 161], "address": 161, "adher": [153, 161], "adjac": [99, 130], "adjust": 161, "advanc": [1, 86], "after": [9, 65, 85, 105, 107, 109, 111, 113, 132, 138, 142, 155, 156, 161], "again": [156, 161], "against": 5, "aggr": 85, "aggreg": [85, 86, 97], "agnost": [0, 157, 160, 161], "agreement": [0, 153, 157, 160], "ai": 156, "aim": [0, 1, 153, 156, 157, 160], "algorithm": 27, "all": [1, 5, 11, 13, 14, 16, 18, 19, 21, 24, 37, 60, 65, 67, 68, 69, 76, 84, 85, 86, 88, 92, 93, 97, 99, 107, 110, 113, 118, 127, 134, 136, 140, 141, 142, 143, 144, 145, 150, 153, 154, 155, 156, 159, 161], "allow": [0, 5, 40, 70, 73, 81, 86, 132, 140, 145, 155, 156, 157, 160, 161], "almost": 130, "along": [97, 156, 161], "alongsid": [156, 161], "alreadi": 60, "also": [7, 11, 13, 16, 37, 61, 105, 142, 154, 155, 156, 159, 161], "alter": [93, 97], "altern": [107, 134, 153], "alwai": 135, "amount": 105, "an": [0, 14, 19, 38, 46, 48, 51, 56, 61, 73, 77, 88, 93, 94, 111, 121, 122, 134, 148, 150, 153, 154, 156, 157, 158, 159, 160, 161], "anaconda": 158, "analys": [70, 156], "analysi": [71, 77], "angl": [126, 133, 156, 161], "ani": [6, 7, 8, 9, 11, 13, 14, 16, 35, 36, 37, 38, 50, 52, 53, 54, 63, 65, 76, 82, 85, 86, 88, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 134, 136, 138, 140, 141, 142, 143, 144, 145, 150, 155, 156, 161], "anoth": [14, 142, 143, 155, 156], "anyth": 153, "api": [152, 154, 156], "appear": [71, 74, 77, 155, 156], "append": [88, 93], "appli": [7, 11, 13, 16, 46, 48, 49, 50, 56, 71, 74, 77, 84, 85, 86, 97, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 119, 121, 123, 125, 127, 129, 134, 144, 154, 155, 156], "applic": [35, 155, 156, 161], "apply_norm": 84, "appropri": [60, 127, 156], "approx": 134, "approxim": 65, "ar": [0, 1, 4, 5, 11, 13, 14, 16, 21, 24, 32, 37, 38, 50, 61, 63, 64, 65, 71, 76, 77, 85, 86, 89, 90, 91, 93, 94, 95, 96, 97, 105, 107, 109, 113, 121, 125, 130, 134, 136, 142, 143, 153, 154, 155, 156, 157, 159, 160, 161], "arbitrari": [0, 157, 160], "arca": 102, "arca115": [98, 102], "architectur": [1, 106, 107, 108, 109, 113, 119, 121, 129, 156, 161], "archiv": 135, "area": 1, "arg": [11, 13, 16, 18, 37, 82, 88, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 121, 122, 123, 125, 126, 127, 129, 134, 138, 140, 150, 154, 159], "argpars": [1, 137], "argument": [5, 7, 9, 14, 64, 67, 68, 69, 112, 119, 132, 136, 138, 140, 142, 143, 145, 155, 156, 159, 161], "argumentpars": [137, 138], "aris": [14, 134], "arrai": [19, 32, 35, 96, 97, 130, 154, 155, 156, 159], "array_to_sequ": [81, 130], "arriv": 155, "art": [0, 157, 160], "articl": 156, "artifact": [156, 161], "arxiv": [84, 91, 111, 113, 134], "as_dict": [140, 142, 143, 156, 161], "assert": [154, 155], "assertionerror": 154, "assign": [7, 11, 13, 16, 82, 86, 91, 94, 130, 153, 154], "associ": [14, 76, 78, 88, 93, 97, 126, 134, 154, 155, 156, 159, 161], "assort": 151, "assum": [5, 76, 84, 88, 93, 97, 99, 127, 130], "atmospher": 155, "attach": 60, "attach_index": [57, 60], "attempt": [21, 32, 156], "attent": [84, 85, 111, 112, 129], "attention_rel": [83, 85], "attn_activ": [85, 111], "attn_bia": 85, "attn_clamp": [85, 111], "attn_drop": 85, "attn_dropout": [85, 111], "attn_edge_enh": 85, "attn_head_dim": 85, "attn_mask": 85, "attr": [84, 111], "attr_name_ab": 130, "attr_name_rel": 130, "attribut": [5, 11, 13, 16, 82, 84, 91, 93, 127, 155, 156, 161], "attributecoarsen": [81, 82], "author": [14, 106, 108, 111, 134], "auto": 127, "autom": 153, "automat": [24, 64, 84, 88, 93, 97, 134, 153, 154, 156, 159], "automatic_log_bin": 136, "auxiliari": [4, 84, 156, 161], "avail": [5, 7, 24, 67, 68, 69, 125, 126, 127, 149, 154, 155, 156, 158, 159, 161], "available_backend": 5, "available_t": 154, "averag": [86, 122, 134], "avg": 82, "avg_pool": 82, "avg_pool_x": 82, "avoid": [13, 150, 153], "awai": [1, 156], "awtd": 4, "azimiuth": 133, "azimuth": [4, 126, 133], "azimuth_kappa": 126, "azimuth_kei": 133, "azimuth_pr": 126, "azimuthreconstruct": [124, 126], "azimuthreconstructionwithkappa": [124, 126], "b": [35, 82, 86, 130, 156, 159, 161], "backbon": [119, 156], "backend": [5, 12, 15, 62, 64, 67, 69, 159], "backward": [97, 134], "baikal": 67, "baikalgvd8": [98, 102], "baikalgvdsmal": [66, 67], "bar": 132, "base": [0, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 42, 44, 46, 48, 50, 51, 52, 53, 54, 56, 61, 63, 64, 65, 67, 68, 69, 71, 72, 74, 76, 77, 78, 80, 82, 84, 85, 88, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 121, 122, 123, 125, 126, 127, 129, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 145, 149, 150, 154, 155, 156, 157, 160, 161], "base_config": [137, 139], "baseclass": [71, 77], "baseconfig": [139, 140, 141, 142, 143, 145], "basemodel": [140, 142, 143], "basi": 161, "basic": [1, 87, 156], "batch": [0, 8, 13, 14, 64, 82, 85, 86, 103, 113, 119, 121, 123, 130, 135, 138, 155, 157, 160], "batch_idx": [103, 119, 122, 123, 130], "batch_norm_momentum": 85, "batch_norm_runn": 85, "batch_siz": [8, 9, 14, 130, 135, 155, 156, 161], "batch_split": 135, "batchnorm": [84, 85, 111], "batchnorm1d": [84, 85, 111], "batchsampl": 14, "becaus": [59, 156, 161], "been": [5, 74, 76, 134, 153, 161], "befor": [11, 13, 92, 107, 121, 127, 132], "behavior": 154, "behaviour": 132, "behind": [156, 161], "being": [21, 32, 76, 84, 125, 127, 155, 156, 161], "beitv2": 85, "belong": 130, "below": [5, 61, 96, 136, 153, 154, 156, 157, 159, 160, 161], "benchmark": [5, 130], "besid": 155, "bessel": 134, "best": [0, 132, 153, 157, 160], "better": 153, "between": [40, 67, 84, 87, 89, 90, 91, 92, 95, 103, 119, 123, 127, 130, 132, 134, 136, 142, 143, 156, 161], "bia": [84, 85, 129], "bias": [111, 156, 161], "big": [156, 161], "biject": 154, "bin": [14, 136], "binari": [123, 125, 134, 161], "binaryclassificationtask": [124, 125, 156, 161], "binaryclassificationtasklogit": [124, 125], "binarycrossentropyloss": [131, 134], "bjoernlow": [131, 136], "black": 153, "blob": [14, 84, 85, 111, 130, 134, 156], "block": [0, 1, 83, 85, 113, 156, 157, 160], "block_rel": [83, 85], "boilerpl": 161, "bool": [8, 14, 36, 37, 38, 60, 61, 63, 65, 76, 84, 85, 88, 93, 94, 96, 97, 103, 105, 107, 109, 111, 112, 113, 118, 123, 129, 130, 132, 134, 135, 136, 138, 144, 147, 148, 149, 150], "boolean": 23, "boost": 38, "border": 32, "both": [0, 24, 119, 123, 127, 156, 157, 159, 160, 161], "bottleneck": 14, "boundari": 32, "box": [154, 156, 161], "branch": 153, "break_cyclic_recurs": [34, 38], "broken": [46, 48, 51, 56], "bucket": [14, 129, 135], "bucket_width": 14, "bug": [153, 156], "build": [0, 1, 81, 91, 92, 96, 97, 99, 118, 119, 140, 142, 143, 156, 157, 160, 161], "built": [0, 81, 88, 93, 119, 155, 156, 157, 159, 160, 161], "c": [14, 21, 32, 35, 86, 92, 134, 156], "c_": 134, "cach": 13, "cache_s": 13, "calcul": [76, 84, 85, 91, 94, 96, 97, 103, 111, 119, 123, 130, 133, 134, 155, 156, 161], "calculate_distance_matrix": [81, 130], "calculate_xyzt_homophili": [81, 130], "calibr": [36, 38], "call": [7, 14, 24, 38, 84, 86, 127, 132, 136, 150, 154, 156, 159, 161], "callabl": [8, 11, 19, 38, 85, 86, 88, 93, 99, 100, 101, 102, 122, 127, 135, 136, 140, 142, 143, 144, 149, 159], "callback": [1, 103, 131, 156, 161], "can": [0, 1, 5, 9, 11, 13, 14, 16, 19, 24, 27, 68, 76, 84, 86, 93, 94, 119, 136, 138, 140, 142, 143, 153, 154, 155, 156, 157, 159, 160, 161], "cannot": [38, 121, 136, 140, 145], "cap": 136, "capabl": [0, 123, 157, 160], "captur": [156, 161], "care": 155, "carlo": 36, "cascad": 126, "cascadefilter_13": 4, "case": [11, 13, 16, 24, 46, 48, 51, 56, 76, 86, 97, 127, 154, 155, 156, 158, 161], "cast": [24, 38], "cast_object_to_pure_python": [34, 38], "cast_pulse_series_to_pure_python": [34, 38], "caus": 156, "caveat": [156, 161], "cc": 133, "cd": 158, "center": 91, "centr": 91, "central": [156, 158], "certain": 156, "cfg": 11, "cframe": [21, 32], "chain": [0, 1, 70, 73, 81, 103, 119, 123, 134, 157, 158, 160], "chang": [134, 153, 156, 161], "charg": [4, 14, 37, 84, 96, 97, 105, 121, 134, 155, 156, 161], "charge_column": 96, "charge_index": 97, "chargefilt": [34, 37], "check": [8, 36, 37, 38, 50, 60, 96, 138, 148, 149, 153, 159], "checkpoint": 156, "checkpointing_bas": 156, "chenli2049": 129, "cherenkov": [96, 97, 156, 159, 161], "choic": [155, 156, 161], "choos": [156, 161], "chosen": [91, 97, 150, 155], "chunk": [13, 14, 154], "chunk_siz": 13, "chunks_per_seg": 14, "citat": 5, "cite": 5, "ckpt": [156, 161], "ckpt_path": 103, "claim": [14, 134], "clamp": [85, 111], "clash": 150, "class": [4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 40, 42, 44, 46, 48, 50, 51, 52, 53, 54, 56, 61, 63, 64, 65, 67, 68, 69, 71, 72, 74, 76, 77, 78, 82, 84, 85, 88, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 121, 122, 123, 125, 126, 127, 129, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 150, 153, 154, 155], "class_nam": [11, 37, 50, 52, 53, 54, 63, 143, 150, 155, 156, 161], "classif": [1, 81, 123, 124, 127, 134, 156, 161], "classifi": [125, 155, 156, 161], "classmethod": [8, 11, 118, 134, 140, 156, 161], "classvar": [140, 142, 143, 145], "clean": [76, 153, 158], "clean_up_data_object": 121, "cleaning_modul": [70, 75], "cleanup": 9, "clear": [150, 155], "cli": 138, "clone": 158, "close": 9, "closest": 132, "cloud": [156, 161], "cls_tocken": 112, "cluster": [5, 82, 85, 86, 96, 97, 105, 107, 109, 113, 121], "cluster_and_pad": [89, 97], "cluster_class": 97, "cluster_column": 97, "cluster_index": 86, "cluster_indic": 97, "cluster_on": [96, 97], "cluster_summarize_with_percentil": [89, 97], "clustered_x": 97, "cnn": [156, 161], "coarsen": [1, 81, 86], "code": [0, 32, 46, 56, 60, 84, 85, 88, 93, 111, 130, 142, 143, 154, 155, 156, 157, 159, 160, 161], "coincid": 96, "col": 94, "collabor": [1, 68, 156, 161], "collate_fn": [3, 8, 131, 135], "collator_sequence_bucklet": [131, 135], "collect": [11, 20, 34, 73, 134, 151, 156, 161], "column": [7, 11, 13, 16, 19, 42, 44, 46, 48, 56, 60, 64, 65, 72, 78, 80, 84, 88, 91, 93, 94, 96, 97, 99, 103, 105, 121, 125, 126, 127, 130, 134, 136, 154, 155, 156, 159, 161], "column_nam": [42, 154], "column_offset": 97, "columnmissingexcept": [11, 13, 79, 80], "com": [11, 14, 16, 84, 85, 111, 112, 119, 129, 130, 134, 156, 158], "combin": [18, 35, 48, 105, 123, 134, 142, 161], "combine_extractor": [3, 17], "combinedextractor": [17, 18], "come": [5, 103, 127, 154, 155, 156, 161], "command": 138, "comment": 5, "commit": 153, "common": [0, 1, 134, 142, 143, 146, 149, 155, 156, 157, 160], "compar": [156, 161], "comparison": [27, 134], "compat": [50, 61, 103, 119, 123, 127, 154, 155, 156, 161], "competit": [84, 85, 100, 109, 112], "complementari": 130, "complet": [0, 14, 81, 156, 157, 158, 160, 161], "complex": [0, 81, 156, 157, 160], "compon": [0, 1, 81, 84, 85, 86, 103, 118, 119, 123, 156, 157, 160, 161], "compos": [156, 161], "composit": 150, "comprehens": 156, "compress": [5, 155], "compris": [0, 157, 160], "comput": [72, 85, 92, 97, 103, 123, 127, 130, 134, 155, 156], "compute_loss": [103, 123, 127], "compute_minkowski_distance_mat": [90, 92], "con": [156, 161], "concatdataset": 11, "concaten": [11, 35, 107], "concept": 153, "conceptu": [154, 156], "concret": 156, "condit": [14, 23, 119, 127, 134], "condition_on": 119, "confid": 156, "config": [1, 8, 61, 132, 134, 137, 138, 140, 141, 142, 143, 144, 145, 155, 156, 161], "config_dir": [156, 161], "configdict": [140, 142, 143, 145], "configur": [0, 1, 9, 11, 47, 48, 72, 73, 81, 103, 118, 137, 139, 140, 142, 143, 145, 150, 154, 156, 157, 160, 161], "configure_optim": 103, "conflict": 156, "conform": [140, 142, 143, 145], "conjunct": [19, 127], "conn": 156, "connect": [0, 9, 14, 84, 85, 91, 92, 93, 96, 111, 134, 155, 156, 157, 160], "consequ": 118, "consid": [76, 105, 155, 156, 159], "consist": [84, 138, 150, 153, 156, 161], "consortium": [0, 157, 160], "constant": [1, 3, 127, 130, 152, 155, 156, 161], "constitut": [64, 155], "constraint": [103, 156], "construct": [5, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 42, 44, 50, 52, 53, 54, 61, 63, 64, 65, 67, 68, 69, 72, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 118, 121, 122, 123, 125, 126, 127, 129, 132, 133, 134, 135, 136, 138, 141, 142, 143, 150, 154, 155, 156, 161], "constructor": [154, 155, 156], "consult": 161, "consum": 156, "consumpt": 155, "conta": 14, "contain": [0, 5, 6, 7, 11, 13, 14, 16, 17, 18, 21, 35, 36, 39, 40, 41, 44, 46, 48, 50, 51, 52, 56, 60, 63, 64, 65, 66, 67, 71, 72, 73, 74, 76, 77, 78, 80, 88, 89, 90, 92, 93, 94, 95, 97, 103, 107, 113, 118, 119, 123, 127, 130, 134, 136, 138, 154, 155, 156, 157, 159, 160, 161], "containeris": 1, "content": [154, 161], "context": 69, "continu": [0, 134, 156, 157, 160], "contract": [14, 134], "contribut": [0, 134, 156, 157, 160], "contributor": 153, "conveni": [1, 153, 156, 161], "convent": [46, 48, 51, 56], "convers": [7, 39, 40, 44, 46, 56, 96, 155, 156, 159], "convert": [0, 1, 3, 5, 7, 13, 21, 32, 35, 37, 46, 47, 48, 56, 58, 64, 66, 130, 154, 155, 156, 157, 158, 159, 160], "converteddataset": 5, "convex": 32, "convnet": [81, 104, 156], "convolut": [85, 106, 107, 108, 109, 113], "coo": 155, "coordin": [32, 92, 96, 97, 99, 130, 156], "copi": [14, 134, 155], "copyright": [14, 134], "core": 110, "correct": [130, 134], "correpond": 59, "correspond": [11, 13, 16, 35, 38, 59, 88, 93, 94, 97, 107, 113, 136, 148, 155, 156, 159, 161], "cosh": 134, "could": [153, 156, 161], "count": 97, "counterpart": 155, "cover": 61, "cpu": [7, 14, 46, 48, 56, 72], "creat": [5, 9, 14, 60, 88, 93, 94, 96, 97, 140, 141, 145, 153, 155, 161], "create_t": [57, 60], "create_table_and_save_to_sql": [57, 60], "creator": 5, "critic": [150, 156, 159], "cross": 134, "crossentropyloss": [131, 134], "csv": [135, 142, 155, 156, 159, 161], "ctx": 134, "cuda": 158, "cumul": 97, "curat": 5, "curated_datamodul": [1, 3], "curateddataset": [3, 5, 67, 69], "curi": [0, 157, 160], "current": [61, 121, 132, 153, 156], "curv": 136, "custom": [11, 50, 79, 88, 93, 132, 161], "custom_label_funct": [88, 93], "customdomcoarsen": [81, 82], "customis": 132, "cut": 135, "d": [35, 88, 92, 93, 96, 130, 153, 159], "damag": [14, 134], "data": [0, 1, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 82, 84, 85, 86, 87, 88, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 119, 121, 122, 123, 127, 129, 130, 133, 135, 138, 140, 142, 145, 149, 152, 155, 156, 157, 160, 161], "data_path": [88, 93], "data_rep_cfg": 11, "data_represent": [1, 5, 11, 13, 16, 67, 69, 81, 91, 92, 93, 94, 96, 97, 114, 115, 116, 117, 142], "data_sourc": 14, "databas": [5, 16, 60, 65, 136, 155, 156], "database_exist": [57, 60], "database_indic": 135, "database_nam": 65, "database_path": [60, 136], "database_table_exist": [57, 60], "dataclass": [1, 3, 36], "dataconfig": [142, 155], "dataconvert": [1, 3, 47, 63, 64, 65, 156, 159], "dataformat": [62, 65], "datafram": [60, 61, 63, 99, 103, 135, 136, 154, 156, 159, 161], "dataload": [1, 3, 5, 9, 13, 67, 68, 69, 93, 103, 135, 145, 155, 156, 161], "datamodul": [1, 3, 5], "datarepresent": [5, 11, 13, 16, 67, 69, 87, 88, 93, 119], "dataset": [1, 3, 5, 8, 9, 12, 13, 14, 15, 16, 26, 61, 64, 67, 68, 69, 80, 88, 93, 105, 121, 138, 142, 152, 159, 161], "dataset_1": [155, 156], "dataset_2": [155, 156], "dataset_3": [155, 156], "dataset_arg": 9, "dataset_config": [137, 139, 156, 161], "dataset_config_path": [156, 161], "dataset_dir": 5, "dataset_refer": 9, "datasetconfig": [8, 11, 61, 139, 142, 155, 161], "datasetconfigsav": 142, "datasetconfigsaverabcmeta": [139, 142], "datasetconfigsavermeta": [139, 142], "db": [65, 135, 136, 155, 156], "db_count_norm": 136, "dbang_decay_length": 4, "ddp": [156, 161], "de": 35, "deactiv": [103, 127], "deal": [14, 134], "debug": [150, 156], "decai": 112, "decor": [1, 137, 149], "dedic": 153, "deem": 38, "deep": [0, 5, 63, 65, 85, 109, 112, 154, 156, 157, 158, 159, 160, 161], "deepcopi": 147, "deepcor": [4, 22, 100], "deepcorefilter_13": 4, "deepic": [104, 112], "def": [154, 155, 156, 159, 161], "default": [5, 7, 9, 11, 13, 14, 16, 19, 21, 22, 24, 32, 35, 37, 44, 46, 48, 51, 56, 60, 64, 65, 67, 68, 69, 71, 72, 74, 76, 77, 78, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 112, 113, 118, 119, 121, 127, 129, 130, 132, 133, 134, 136, 138, 140, 148, 155, 156], "default_prediction_label": [125, 126, 127, 161], "default_target_label": [125, 126, 127, 161], "default_typ": 60, "defin": [5, 11, 13, 16, 32, 61, 67, 68, 69, 72, 76, 78, 86, 87, 88, 89, 90, 91, 93, 95, 97, 119, 135, 142, 155, 156, 159, 161], "definit": [91, 93, 94, 96, 118, 127, 153, 156, 161], "deg": 94, "deg_scal": 85, "degre": [85, 94], "deleg": 150, "deliv": 103, "demo_ic": 102, "demo_wat": 102, "denot": [19, 132, 133, 154, 159], "dens": 86, "depend": [0, 84, 154, 155, 156, 157, 160, 161], "deploi": [0, 1, 70, 72, 156, 157, 158, 160], "deploy": [0, 1, 72, 74, 75, 76, 77, 78, 93, 152, 156, 157, 159, 160, 161], "deployment_modul": [1, 70], "deploymentmodul": [70, 71, 72, 74, 77, 78], "deprec": [5, 11, 13, 16, 45, 46, 55, 56, 67, 69, 74, 114, 115, 116, 117, 147], "deprecated_method": [3, 45, 55, 70, 73], "deprecation_tool": [1, 137], "depth": [85, 97, 112, 129], "depth_rel": 112, "describ": [5, 153, 156], "descript": [5, 118, 138], "design": [1, 156, 159], "desir": [136, 148], "detail": [1, 5, 105, 118, 119, 127, 132, 155, 156, 158, 159, 161], "detector": [0, 1, 32, 73, 81, 88, 93, 94, 96, 100, 101, 102, 155, 156, 157, 160, 161], "detector_respons": 156, "determin": [71, 74, 77, 105], "develop": [0, 1, 153, 155, 156, 157, 158, 159, 160, 161], "deviat": [88, 93, 94, 97], "devic": 72, "df": [60, 154], "dfg": [0, 157, 160], "diagon": 130, "dict": [5, 8, 9, 11, 13, 16, 24, 35, 38, 60, 72, 88, 93, 94, 96, 99, 100, 101, 102, 103, 112, 118, 119, 122, 132, 135, 138, 140, 142, 143, 144, 145, 147, 154, 155, 156, 159], "dictionari": [11, 13, 16, 19, 35, 36, 38, 50, 60, 88, 93, 94, 118, 140, 142, 143, 145, 154, 159], "did": 14, "differ": [0, 11, 13, 16, 19, 21, 40, 41, 42, 44, 50, 51, 52, 73, 87, 94, 135, 153, 154, 155, 156, 157, 159, 160, 161], "difficult": 155, "diffier": [156, 161], "digit": 84, "dim": [84, 85], "dim_emb": 84, "dim_in": [84, 85], "dim_out": 85, "dimenion": [107, 109, 113], "dimens": [84, 85, 97, 100, 101, 102, 105, 106, 107, 109, 111, 112, 113, 121, 127, 129, 130, 134, 159, 161], "dimension": [84, 85, 130, 155, 161], "dir": 148, "dir_with_fil": [154, 159], "dir_x_pr": 126, "dir_y_pr": 126, "dir_z_pr": 126, "direct": [97, 109, 125, 126, 127, 131, 133, 155, 159], "direction_kappa": 126, "directionreconstructionwithkappa": [124, 126, 156, 161], "directli": [0, 107, 113, 154, 156, 157, 159, 160, 161], "directori": [5, 7, 46, 48, 50, 51, 52, 53, 54, 56, 63, 64, 67, 68, 69, 132, 148, 154, 156, 161], "dirti": 156, "discard_empty_ev": 76, "disco": 130, "disconnect": 155, "discuss": 153, "disk": [154, 155, 156], "distanc": [32, 91, 92, 94, 130], "distance_as_edge_featur": 94, "distribut": [14, 86, 107, 119, 126, 130, 134, 136, 158, 161], "distribution_strategi": 103, "ditto": 134, "diverg": 134, "divid": [71, 74, 77, 97, 127], "dk": 5, "dl": [156, 161], "dnn": [26, 33], "do": [0, 5, 14, 72, 76, 134, 142, 143, 153, 155, 156, 157, 160, 161], "do_shuffl": [3, 8], "doc": 156, "docformatt": 153, "docker": 1, "docstr": 153, "document": [14, 119, 134, 159, 161], "doe": [38, 125, 127, 143, 154, 155, 156, 161], "doesn": 60, "dom": [8, 11, 13, 16, 82, 86, 96, 97, 105, 121, 135, 156, 161], "dom_i": [4, 96, 100], "dom_numb": 4, "dom_tim": [4, 96], "dom_typ": 4, "dom_x": [4, 96, 100], "dom_z": [4, 96, 100], "domain": [0, 1, 3, 70, 156, 157, 160], "domandtimewindowcoarsen": [81, 82], "domcoarsen": [81, 82], "don": [132, 154], "done": [24, 86, 150, 153, 154, 156, 159], "dot": 85, "download": [5, 67, 68, 69, 158], "download_dir": [5, 67, 68, 69], "downsid": 155, "draw": 14, "drawn": [89, 90, 94, 95, 156, 161], "drhb": [14, 112], "drop": [14, 85, 106], "drop_last": 14, "drop_path": 85, "drop_prob": 85, "dropout": [85, 105, 111, 113, 121], "dropout_prob": 85, "dropout_ratio": 106, "dropout_readout": 113, "droppath": [83, 85], "droput": 85, "dtype": [11, 13, 16, 88, 93, 94, 151, 155, 156, 161], "due": [155, 156, 161], "dummy_pid": [155, 156], "dump": [140, 142, 143, 154, 155, 156], "duplciat": 132, "duplic": 96, "dure": [85, 93, 112, 127, 132, 159], "dynam": [24, 85, 107, 108, 109, 113, 156, 161], "dynedg": [76, 78, 81, 104, 108, 109, 112, 113, 156, 161], "dynedge_arg": 112, "dynedge_jinst": [81, 104], "dynedge_kaggle_tito": [81, 104], "dynedge_layer_s": [107, 113, 156, 161], "dynedgeconv": [83, 85, 107, 113], "dynedgejinst": [104, 108], "dynedgetito": [104, 105, 109], "dyntran": [83, 85, 105, 109], "dyntrans1": 85, "dyntrans_layer_s": [105, 109], "e": [1, 5, 8, 9, 11, 13, 16, 18, 19, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 38, 40, 44, 60, 61, 65, 72, 76, 78, 82, 84, 85, 86, 88, 91, 93, 94, 96, 97, 99, 100, 101, 102, 106, 110, 111, 118, 119, 122, 123, 125, 126, 127, 130, 132, 133, 134, 136, 140, 150, 153, 154, 155, 156, 158, 161], "each": [5, 14, 24, 35, 38, 59, 60, 64, 65, 71, 72, 74, 77, 82, 84, 85, 86, 88, 91, 93, 94, 96, 97, 100, 101, 102, 105, 107, 109, 113, 121, 125, 127, 130, 132, 134, 135, 148, 154, 155, 156, 159, 161], "earli": [132, 138], "early_stopping_pati": [103, 145], "earlystop": 132, "easi": [0, 154, 155, 156, 157, 160, 161], "easili": [1, 156, 161], "easy_model": [1, 81], "easysyntax": [81, 103, 119, 123], "ed": 134, "edg": [81, 84, 85, 86, 87, 89, 92, 93, 94, 95, 96, 107, 108, 109, 111, 113, 114, 116, 130, 155, 156, 161], "edge_attr": [155, 156], "edge_definit": [93, 94], "edge_enh": [85, 111], "edge_index": [82, 85, 130, 155, 156], "edge_weight": 130, "edgeconv": 85, "edgeconvtito": [83, 85], "edgedefinit": [89, 90, 91, 92, 93, 94, 95, 156, 161], "edgelessgraph": [89, 94], "edu": 68, "effect": [132, 153, 156, 161], "effici": 14, "effort": [153, 155, 159], "either": [0, 5, 9, 11, 16, 21, 32, 67, 69, 85, 111, 134, 154, 156, 157, 160], "elast": 4, "element": [11, 13, 19, 35, 38, 103, 119, 123, 130, 135, 144, 154, 156, 159], "elementwis": 134, "elimin": 76, "els": [76, 133, 154, 159], "ema": 122, "emb_dim": 84, "embed": [81, 83, 105, 112, 121, 125, 127, 129], "embedding_dim": [105, 121], "empti": 76, "en": 156, "enabl": [0, 3, 96, 103, 157, 160], "enable_edge_transform": [85, 111], "encod": [84, 94, 111, 130, 133], "encount": 156, "encourag": [153, 156], "end": [0, 1, 5, 14, 97, 132, 156, 157, 160], "energi": [4, 126, 127, 136, 155, 156, 159], "energy_cascad": [4, 126], "energy_cascade_pr": 126, "energy_pr": 126, "energy_reco": 78, "energy_sigma": 126, "energy_track": [4, 126], "energy_track_pr": 126, "energyreconstruct": [124, 126, 156, 161], "energyreconstructionwithpow": [124, 126], "energyreconstructionwithuncertainti": [124, 126, 156], "energytcreconstruct": [124, 126], "engin": [0, 157, 160], "enough": 118, "ensemble_dataset": [155, 156], "ensembledataset": [10, 11, 142, 155, 156], "ensembleloss": [131, 134], "ensur": [38, 59, 134, 150, 153, 161], "entir": [11, 13, 118, 154, 156, 161], "entiti": [156, 161], "entri": [76, 78, 107, 113, 130, 138, 159], "entropi": 134, "enum": 38, "env": 158, "environ": [51, 158], "ep": [151, 156, 161], "epoch": [122, 132, 138], "eps_lik": [137, 151], "equival": [38, 156, 161], "erda": [5, 67], "erdahost": 69, "erdahosteddataset": [3, 5, 67, 69], "error": [134, 150, 153, 154, 156], "especi": 76, "establish": 161, "estim": 130, "etc": [0, 14, 134, 150, 155, 156, 157, 159, 160], "eth": 130, "euclidean": [91, 130, 153], "euclideandistanceloss": [131, 134], "euclideanedg": [90, 91], "european": [0, 157, 160], "eval": [118, 158], "evalu": [5, 119, 127], "even": 59, "event": [0, 1, 5, 7, 9, 11, 13, 14, 16, 18, 29, 32, 44, 46, 48, 56, 60, 61, 64, 65, 67, 68, 69, 76, 84, 86, 88, 93, 96, 97, 105, 123, 127, 129, 130, 133, 134, 135, 136, 142, 154, 156, 157, 159, 160, 161], "event_no": [7, 11, 13, 16, 46, 48, 56, 60, 61, 64, 65, 136, 142, 155, 156, 161], "event_tim": 4, "event_truth": 5, "eventid": 4, "events_per_batch": 64, "everi": [113, 119, 154, 156, 159], "everyth": [156, 161], "everytim": 153, "exact": [108, 134, 161], "exactli": [130, 134, 150, 155], "exampl": [7, 14, 35, 61, 82, 86, 97, 119, 130, 134, 142, 143, 154, 155, 158], "example_energy_reconstruction_model": [138, 156, 161], "exce": 136, "exceed": 65, "except": [1, 152, 154], "exclud": [19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "exclude_kei": 24, "excluding_valu": 130, "execut": 60, "exist": [0, 11, 13, 16, 60, 81, 119, 133, 142, 155, 156, 157, 160, 161], "exist_ok": [156, 161], "expand": [0, 156, 157, 160], "expans": 112, "expect": [60, 61, 63, 76, 78, 88, 93, 96, 155, 156, 161], "expects_merged_datafram": 63, "experi": [0, 1, 5, 6, 7, 49, 50, 72, 131, 154, 156, 157, 160], "experiment": 161, "expert": 1, "explain": 156, "explicitli": [135, 140, 145], "exponenti": 134, "export": [154, 155, 156, 159, 161], "expos": 1, "express": [14, 118, 134], "extend": [0, 1, 32, 154, 155, 157, 160], "extend_boundari": 32, "extens": [1, 5, 50, 63, 148], "extern": [155, 156], "extra": [85, 94, 161], "extra_repr": [85, 118], "extra_repr_recurs": 118, "extracor_nam": 50, "extract": [7, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 40, 42, 43, 44, 59, 76, 78, 127, 130, 154, 156, 159], "extractor": [1, 3, 7, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 56, 76, 78], "extractor_nam": [18, 19, 21, 23, 24, 27, 40, 42, 44, 154, 159], "f": [86, 154, 156, 161], "f1": 86, "f2": 86, "f_absorpt": 97, "f_scatter": 97, "factor": [85, 97, 130, 132, 134, 156, 161], "fail": 18, "fals": [14, 37, 65, 76, 84, 85, 88, 93, 94, 96, 107, 111, 112, 113, 118, 129, 130, 132, 134, 136, 156, 161], "fanci": 156, "fashion": 1, "fast": [0, 155, 156, 157, 160], "faster": [0, 154, 155, 157, 160], "favorit": 158, "favourit": 156, "fbeezabg5a": 5, "fc": [85, 86], "featur": [1, 3, 4, 5, 11, 13, 16, 21, 22, 65, 67, 68, 69, 76, 78, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 112, 113, 121, 125, 129, 130, 135, 142, 153, 155, 156, 159, 161], "feature_idx": 97, "feature_map": [99, 100, 101, 102, 159], "feature_nam": 97, "features_subset": [85, 105, 107, 109, 113, 121, 156, 161], "feedforward": 85, "feel": 156, "fetch": 138, "few": [0, 81, 153, 154, 155, 156, 157, 160, 161], "fiber_id": 101, "field": [94, 119, 130, 133, 140, 145, 147, 154, 155, 156, 159], "figur": 0, "file": [0, 1, 3, 5, 7, 11, 13, 14, 16, 18, 19, 21, 32, 35, 37, 40, 41, 42, 43, 44, 46, 48, 50, 51, 52, 53, 54, 56, 58, 59, 63, 64, 65, 71, 72, 74, 76, 77, 78, 88, 93, 118, 132, 134, 135, 138, 139, 140, 141, 142, 143, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161], "file_extens": 63, "file_handl": 150, "file_loc": 68, "file_path": [135, 154, 159], "file_read": [7, 154, 159], "filehandl": 150, "filenam": 148, "fileread": [19, 50], "files_list": 59, "filesi": [1, 137], "fill": [5, 14, 84], "fill_valu": [84, 111], "filter": [37, 46, 48, 51, 56, 150, 159], "filter_ani": 37, "filter_nam": 37, "filtermask": 37, "final": [0, 7, 86, 132, 142, 155, 156, 157, 160], "find": [21, 32, 92, 148, 155, 156, 159, 161], "find_fil": [50, 51, 52, 53, 54, 154], "find_i3_fil": [137, 148], "first": [84, 92, 96, 105, 121, 132, 135, 153, 156, 159], "fisher": 134, "fit": [9, 14, 103, 134, 136, 145, 156, 161], "fit_weight": 136, "five": [94, 155], "fix": [61, 156], "flag": [22, 76], "flake8": 153, "flatten": 35, "flatten_nested_dictionari": [34, 35], "flexibil": 161, "flexibl": 61, "float": [11, 13, 16, 32, 37, 76, 84, 85, 88, 91, 92, 93, 94, 96, 97, 103, 105, 106, 111, 113, 121, 127, 132, 134, 135, 136, 142, 155], "float32": [11, 13, 16, 88, 93, 94], "float64": 134, "flow": [119, 127, 161], "flow_lay": [119, 127], "flowchart": [0, 157, 160], "fly": [155, 156], "fn": [11, 38, 140, 144], "fn_kwarg": 144, "folder": [46, 48, 51, 52, 53, 54, 56, 71, 154], "folk": 156, "follow": [14, 103, 107, 113, 119, 123, 134, 136, 153, 154, 155, 156], "fork": 153, "form": [0, 19, 81, 111, 125, 140, 145, 154, 155, 157, 160, 161], "format": [0, 1, 3, 5, 7, 11, 35, 39, 40, 50, 52, 63, 64, 65, 84, 118, 121, 142, 153, 154, 155, 156, 157, 158, 159, 160, 161], "forward": [82, 84, 85, 88, 91, 93, 94, 96, 99, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 119, 121, 123, 127, 129, 134, 161], "found": [38, 46, 48, 51, 56, 64, 68, 97, 134, 155, 156], "four": 84, "fourier": 84, "fourierencod": [83, 84, 112, 129], "fraction": [106, 121, 135], "frame": [20, 21, 23, 24, 32, 34, 37, 38, 78], "frame_is_montecarlo": [34, 36], "frame_is_nois": [34, 36], "framework": [0, 156, 157, 160], "free": [0, 14, 134, 156, 157, 160], "freeli": 156, "frequenc": 84, "friendli": [0, 63, 65, 154, 156, 157, 158, 160], "from": [0, 1, 5, 7, 8, 9, 11, 13, 14, 16, 19, 20, 21, 22, 23, 24, 26, 27, 29, 32, 35, 36, 37, 38, 40, 42, 43, 44, 50, 51, 53, 54, 58, 63, 65, 67, 68, 69, 84, 86, 88, 91, 93, 94, 96, 97, 99, 100, 101, 102, 109, 112, 118, 119, 122, 125, 126, 127, 130, 132, 133, 134, 140, 141, 143, 145, 150, 153, 154, 155, 156, 157, 159, 160, 161], "from_config": [11, 118, 141, 142, 143, 155, 156, 161], "from_dataset_config": [8, 156, 161], "full": [64, 130, 156, 161], "full_edge_index": [81, 130], "fulli": [84, 111, 154, 156, 161], "func": [19, 156], "function": [0, 7, 8, 11, 14, 21, 38, 40, 44, 59, 60, 76, 78, 82, 85, 86, 88, 93, 97, 99, 100, 101, 102, 107, 111, 113, 118, 119, 127, 130, 134, 135, 137, 142, 143, 144, 147, 148, 149, 151, 155, 157, 159, 160, 161], "fund": [0, 157, 160], "furnish": [14, 134], "further": [76, 97], "furthermor": 121, "g": [1, 5, 11, 13, 16, 18, 19, 21, 32, 35, 38, 60, 61, 65, 76, 78, 85, 86, 88, 93, 96, 97, 111, 127, 130, 134, 136, 150, 153, 155, 156, 158, 161], "galatict": 25, "gamma_1": 85, "gamma_2": 85, "gather": [14, 97], "gather_cluster_sequ": [89, 97], "gather_len_matched_bucket": [10, 14], "gaussian": 130, "gcd": [18, 21, 32, 36, 46, 48, 51, 56, 59, 74, 76, 77, 78, 148], "gcd_dict": [36, 38], "gcd_file": [6, 18, 21, 32, 74, 76, 77, 78], "gcd_list": [59, 148], "gcd_rescu": [46, 48, 51, 56, 148], "gcd_shuffl": 59, "gelu": 85, "gener": [0, 5, 9, 11, 13, 14, 16, 24, 37, 50, 63, 65, 67, 71, 76, 77, 78, 84, 88, 89, 90, 93, 94, 95, 97, 125, 134, 136, 155, 156, 157, 159, 160, 161], "geometr": 156, "geometri": [67, 88, 93, 99, 161], "geometry_t": [99, 100, 101, 102, 159], "geometry_table_path": [100, 101, 102, 159], "germani": [0, 157, 160], "get": [19, 36, 60, 97, 99, 132, 135, 156, 161], "get_all_argument_valu": [139, 140], "get_all_grapnet_class": [139, 144], "get_field": [81, 130], "get_graphnet_class": [139, 144], "get_lr": 132, "get_map_funct": 7, "get_member_vari": [34, 38], "get_metr": 132, "get_om_keys_and_pulseseri": [34, 36], "get_predict": [131, 135], "get_primary_kei": [57, 60], "get_rw_landing_prob": [81, 130], "gev": 67, "gframe": [21, 32], "gggt": [119, 127], "git": 158, "github": [11, 14, 16, 84, 85, 111, 112, 119, 127, 129, 130, 134, 156, 158], "given": [5, 11, 14, 16, 21, 32, 65, 67, 68, 69, 84, 86, 91, 127, 130, 134, 136, 138, 155, 159], "glob": 154, "global": [2, 4, 105, 107, 109, 113, 118, 156], "global_index": 7, "global_pooling_schem": [105, 107, 109, 113, 156, 161], "gnlabelcascadeenergydeposit": 4, "gnlabelcascadeenergydepositedprimari": 4, "gnlabelenergydepositedprimari": 4, "gnlabelenergydepositedtot": 4, "gnlabelenergyprimari": 4, "gnlabelhighestedaughterdist": 4, "gnlabelhighestedaughterefract": 4, "gnlabelhighesteiniceparticledist": 4, "gnlabelhighesteiniceparticleefract": 4, "gnlabelhighesteiniceparticleeonentr": 4, "gnlabelhighesteiniceparticleischild": 4, "gnlabeltrackenergydeposit": 4, "gnlabeltrackenergydepositedprimari": 4, "gnlabeltrackenergyonentr": 4, "gnlabeltrackenergyonentranceprimari": 4, "gnn": [1, 73, 81, 105, 106, 107, 108, 109, 111, 112, 113, 119, 121, 129, 156, 161], "go": [14, 153, 156], "googl": 153, "got": 154, "gpu": [103, 138, 156, 158, 161], "grab": 127, "grad_output": 134, "gradient_clip_v": 103, "grant": [0, 14, 134, 157, 160], "graph": [0, 1, 5, 8, 11, 13, 16, 67, 69, 81, 84, 85, 86, 87, 90, 91, 92, 93, 95, 96, 97, 99, 111, 115, 116, 117, 121, 130, 133, 135, 153, 155, 156, 157, 160, 161], "graph_definit": [5, 11, 13, 16, 67, 68, 69, 87, 89, 119, 135, 142, 155, 156, 161], "graph_definiton": 155, "graphdefinit": [5, 11, 13, 16, 67, 68, 69, 87, 88, 89, 90, 93, 94, 95, 119, 135, 153, 155, 156], "graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 44, 46, 48, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161], "graphnet_file_read": [3, 49, 154, 159], "graphnet_model": 132, "graphnet_modul": 74, "graphnet_writ": [3, 62], "graphnetdatamodul": [3, 5, 9], "graphnetearlystop": [131, 132], "graphnetfileread": [7, 49, 50, 51, 52, 53, 54, 154], "graphnetfilesavemethod": [63, 65], "graphneti3deploy": [73, 74], "graphnetwrit": [7, 62, 63, 64, 65, 154], "grapnet": [144, 156], "greatli": [156, 161], "grit": [81, 84, 85, 104, 130], "grit_lay": 85, "grit_model": 111, "gritsparsemha": [83, 85], "grittransformerlay": [83, 85], "group": [0, 14, 86, 156, 157, 160], "group_bi": [83, 86], "group_pulses_to_dom": [83, 86], "group_pulses_to_pmt": [83, 86], "groupbi": 86, "guarante": [156, 161], "guid": 153, "guidelin": 153, "gvd": [67, 102], "gz": 5, "h5": [42, 53, 154], "h5_extractor": [17, 41], "h5extractor": [7, 41, 42, 50, 154], "h5hitextractor": [41, 42, 154], "h5py": 154, "h5truthextractor": [41, 42, 154], "ha": [0, 5, 38, 60, 74, 76, 97, 106, 134, 148, 154, 155, 156, 157, 158, 159, 160, 161], "had": 159, "hadron": 126, "hand": [24, 155, 156], "handi": 59, "handl": [24, 134, 138, 147, 150, 154, 155, 156], "handler": 150, "happen": [97, 136, 155, 159], "hard": [32, 96], "has_extens": [137, 148], "has_icecube_packag": [137, 149], "has_jammy_flows_packag": [137, 149], "has_torch_packag": [137, 149], "have": [1, 5, 13, 24, 46, 48, 51, 56, 60, 61, 65, 86, 88, 93, 97, 112, 127, 153, 155, 156, 159, 161], "head": [85, 105, 109, 111, 112, 127, 129, 161], "head_dim": 85, "head_siz": 112, "heavi": 154, "height": 130, "help": [76, 78, 138, 153, 155, 156, 159, 161], "here": [88, 93, 153, 155, 156, 158, 159, 161], "herebi": [14, 134], "hidden": [84, 85, 105, 107, 108, 111, 113, 121], "hidden_dim": [111, 112, 129], "hidden_featur": 85, "hidden_s": [121, 125, 126, 127, 156, 161], "high": [0, 156, 157, 160], "higher": 155, "highest_protocol": 154, "hint": 153, "hit": [8, 135, 155, 156, 159], "hitdata": 42, "hlc": [4, 96], "hlc_name": 96, "hold": [88, 93, 97, 154, 159, 161], "holder": [14, 134], "home": [100, 101, 102, 138, 154, 159], "homogenized_qtot": [4, 37], "homophili": 130, "hook": 153, "horizon": [0, 157, 160], "host": [5, 67, 68, 159], "how": [5, 14, 89, 90, 95, 154, 156, 161], "howev": [46, 48, 51, 56, 155, 156], "html": [119, 127, 156], "http": [5, 11, 14, 16, 68, 84, 85, 91, 111, 112, 113, 119, 127, 129, 130, 134, 153, 156, 158], "hull": 32, "human": 156, "hybrid": 25, "hyperparamet": [143, 156, 161], "i": [0, 1, 5, 9, 11, 13, 14, 16, 18, 19, 21, 24, 32, 35, 36, 37, 38, 40, 42, 44, 46, 48, 51, 56, 59, 60, 61, 64, 65, 68, 71, 74, 76, 77, 78, 82, 84, 85, 86, 88, 91, 93, 94, 96, 97, 106, 107, 111, 112, 113, 119, 121, 123, 126, 127, 130, 132, 133, 134, 135, 136, 138, 140, 143, 144, 145, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161], "i3": [1, 21, 32, 36, 37, 38, 46, 48, 51, 56, 59, 71, 76, 78, 148, 156, 158], "i3_fil": [6, 18, 21, 32], "i3_filt": [20, 34, 46, 48, 51, 56], "i3_list": [59, 148], "i3_shuffl": 59, "i3calibr": 36, "i3deploy": [6, 70, 74, 75], "i3extractor": [7, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 46, 48, 50, 56], "i3featureextractor": [4, 17, 20, 76, 78], "i3featureextractoricecube86": [20, 22], "i3featureextractoricecubedeepcor": [20, 22], "i3featureextractoricecubeupgrad": [20, 22], "i3fileset": [3, 6, 50, 51], "i3filt": [34, 37, 46, 48, 51, 56], "i3filtermap": 23, "i3filtermapextractor": [17, 20], "i3filtermask": [23, 34, 37], "i3fram": [20, 24, 36, 38, 76, 78], "i3galacticplanehybridrecoextractor": [20, 25], "i3genericextractor": [17, 20], "i3hybridrecoextractor": [17, 20], "i3inferencemodul": [74, 75, 76, 77, 78], "i3mctre": 32, "i3modul": [1, 70, 72, 74], "i3ntmuonlabelextractor": [20, 26], "i3ntmuonlabelsextractor": [17, 20], "i3particl": 27, "i3particleextractor": [17, 20], "i3pisaextractor": [17, 20], "i3pulsecleanermodul": [75, 76], "i3pulsenoisetruthflagicecubeupgrad": [20, 22], "i3quesoextractor": [17, 20], "i3read": [3, 46, 48, 49, 56], "i3retroextractor": [17, 20], "i3splinempeextractor": [17, 20], "i3splinempeicextractor": [20, 31], "i3toparquetconvert": [46, 47, 48], "i3tosqliteconvert": [47, 48, 56], "i3truthextractor": [4, 17, 20], "i3tumextractor": [17, 20], "ic": [96, 109, 112], "ice_arg": 96, "ice_transpar": [89, 97], "icecub": [1, 3, 5, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 46, 48, 51, 56, 68, 70, 73, 76, 77, 78, 81, 85, 96, 97, 98, 109, 112, 149, 156, 161], "icecube86": [4, 98, 100, 102], "icecube86prometheu": [98, 102], "icecube_deepcor": 102, "icecube_gen2": 102, "icecube_upgrad": [100, 102], "icecubedeepcor": [98, 100], "icecubedeepcore8": [98, 102], "icecubegen2": [98, 102], "icecubehosteddataset": [3, 5, 68], "icecubekaggl": [98, 100], "icecubeupgrad": [98, 100], "icecubeupgrade7": [98, 102], "icedemo81": [98, 102], "icemix": [81, 104], "icemixnod": [95, 96], "icetrai": [36, 38, 46, 48, 51, 56, 72, 73, 149, 158], "icetray_verbos": [46, 48, 51, 56], "id": [5, 7, 9, 13, 46, 48, 56, 65, 88, 93, 99, 135, 154, 155, 156, 159], "id_column": 96, "ideal": 161, "ident": [86, 94, 99, 100, 101, 102, 127, 130], "identifi": [7, 11, 13, 16, 32, 96, 97, 130, 142, 143, 159], "identify_indic": [89, 97], "identitytask": [124, 125, 127], "ie": 105, "ignor": [11, 13, 16, 38, 64, 130], "illustr": [0, 153, 154, 157, 160], "imag": [0, 1, 153, 156, 157, 160, 161], "impact": 112, "implement": [1, 5, 14, 19, 21, 50, 63, 72, 77, 85, 91, 105, 106, 107, 108, 109, 111, 112, 113, 121, 129, 130, 134, 153, 154, 156, 161], "impli": [14, 134], "import": [0, 1, 5, 60, 81, 114, 115, 116, 117, 137, 154, 155, 156, 157, 159, 160, 161], "impos": [11, 13, 103], "improv": [0, 1, 138, 156, 157, 160, 161], "in_dim": 85, "in_featur": 85, "inaccur": 97, "inact": [88, 93], "includ": [1, 5, 13, 14, 67, 68, 69, 85, 96, 103, 134, 140, 153, 155, 156, 159, 161], "include_dynedg": 112, "incom": 94, "incompat": 156, "incomplet": 14, "incorpor": 84, "increas": [0, 132, 157, 160], "indent": 118, "independ": [71, 74, 77, 154], "index": [1, 7, 11, 13, 16, 38, 60, 64, 65, 68, 86, 92, 97, 99, 105, 121, 130, 132, 155, 156, 161], "index_column": [7, 11, 13, 16, 46, 48, 56, 60, 61, 64, 65, 135, 136, 142, 155, 156], "indic": [14, 61, 80, 86, 92, 94, 97, 105, 121, 127, 130, 132, 134, 138, 153, 156, 161], "indicesfor": 36, "indici": [11, 13, 16, 36, 61], "individu": [0, 11, 13, 16, 86, 107, 130, 155, 157, 160, 161], "induct": 111, "industri": [0, 3, 157, 160], "inelast": [4, 126], "inelasticity_pr": 126, "inelasticityreconstruct": [124, 126], "inf": 130, "infer": [0, 1, 65, 70, 72, 73, 76, 78, 103, 127, 156, 157, 160], "inference_modul": [70, 75], "info": [150, 156], "inform": [5, 11, 13, 16, 18, 19, 21, 24, 32, 40, 42, 44, 67, 68, 69, 88, 93, 96, 97, 118, 154, 155, 156, 159, 161], "ingest": [0, 1, 3, 98, 157, 160], "inherit": [5, 19, 21, 38, 50, 63, 96, 99, 134, 150, 154, 155, 156, 161], "init_fn": [142, 143], "init_global_index": [3, 7], "init_predict_tqdm": 132, "init_test_tqdm": 132, "init_train_tqdm": 132, "init_validation_tqdm": 132, "init_valu": 85, "initi": [7, 37, 51, 65, 71, 74, 77, 85, 88, 92, 97, 105, 112], "initial_st": 44, "initialis": [143, 156, 161], "injection_azimuth": [4, 155, 156], "injection_bjorkeni": [4, 155, 156], "injection_bjorkenx": [4, 155, 156], "injection_column_depth": [4, 155, 156], "injection_energi": [4, 155, 156], "injection_interaction_typ": [4, 155, 156], "injection_position_i": [4, 155, 156], "injection_position_x": [4, 155, 156], "injection_position_z": [4, 155, 156], "injection_typ": [4, 155, 156], "injection_zenith": [4, 155, 156, 161], "innov": [0, 157, 160], "inptut": 97, "input": [5, 7, 11, 13, 16, 46, 48, 50, 51, 56, 63, 67, 68, 69, 71, 74, 76, 77, 78, 84, 85, 88, 93, 94, 96, 97, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 119, 121, 125, 127, 129, 130, 140, 145, 147, 148, 154, 155, 156, 159, 161], "input_dim": [85, 161], "input_dir": [154, 159], "input_featur": [88, 93, 94, 99], "input_feature_nam": [88, 93, 94, 96, 99], "input_fil": [50, 71], "input_nam": 97, "ins": 99, "insert": 97, "insid": 155, "inspect": [156, 161], "inspir": [113, 130], "instal": [153, 156], "instanc": [11, 19, 21, 32, 38, 40, 42, 44, 46, 48, 51, 56, 88, 93, 118, 133, 135, 141, 143, 154, 155, 156, 161], "instanti": [7, 9, 143, 154, 155, 159], "instead": [5, 11, 13, 16, 21, 32, 46, 48, 51, 56, 67, 69, 74, 119, 134, 156, 161], "int": [5, 7, 8, 9, 11, 13, 14, 16, 26, 29, 37, 46, 48, 50, 51, 52, 53, 54, 56, 61, 63, 64, 65, 68, 71, 74, 77, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 134, 135, 136, 138, 142, 145, 150, 154, 161], "integ": [60, 105, 107, 108, 113, 134, 155, 156], "integer_primary_kei": 60, "integr": 161, "intend": [105, 121, 156], "interact": [126, 133, 155, 156], "interaction_kei": 133, "interaction_tim": [4, 126], "interaction_time_pr": 126, "interaction_typ": [4, 133], "interchang": [156, 161], "interfac": [0, 142, 143, 156, 157, 158, 159, 160], "interim": [7, 62, 63, 64, 65, 154], "intermedi": [0, 1, 3, 7, 11, 106, 156, 157, 160], "intern": [3, 17, 40, 48, 52], "internal_parquet_read": [3, 49], "interpol": [97, 132], "interpret": 125, "interv": [84, 156, 161], "intract": 155, "introduc": 156, "introduct": [119, 127], "intuit": [150, 161], "invers": 127, "invert": 127, "involv": 61, "io": [119, 127, 153, 156], "iop": 156, "iopscienc": 156, "is_bad_dom": 4, "is_boost_class": [34, 38], "is_boost_enum": [34, 38], "is_bright_dom": 4, "is_errata_dom": 4, "is_gcd_fil": [137, 148], "is_graphnet_class": [139, 144], "is_graphnet_modul": [139, 144], "is_i3_fil": [137, 148], "is_icecube_class": [34, 38], "is_method": [34, 38], "is_saturated_dom": 4, "is_typ": [34, 38], "iseecub": [81, 128], "isinst": 154, "isn": 38, "isol": 94, "issu": [11, 16, 156, 161], "iter": 11, "its": [38, 121, 155, 156, 161], "itself": [38, 127, 154, 156, 161], "iv": 134, "jammy_flow": [119, 127, 149], "job": 159, "join": [154, 156], "json": [35, 142, 155, 156], "just": [5, 86, 154, 155, 156, 161], "k": [85, 91, 94, 105, 107, 109, 113, 121, 130, 134], "kaggl": [4, 84, 85, 100, 109, 112], "kappa": [126, 134], "kappa_switch": 134, "karg": [118, 122], "keep": [19, 21, 37, 40, 42, 44, 96, 154], "kei": [11, 19, 22, 23, 24, 32, 35, 36, 38, 60, 65, 85, 86, 96, 133, 142, 143, 154, 155, 156, 159], "kept": 37, "key_padding_mask": 85, "keyword": [7, 132, 140, 145], "kind": [14, 134, 159], "km3net": [156, 161], "knn": 94, "knn_graph_batch": [81, 130], "knndistanceedg": [90, 91], "knnedg": [90, 91], "knngraph": [89, 94, 155, 156, 161], "knngraphrrwp": [89, 94], "knngraphrws": [89, 94], "know": 159, "known": 86, "kstep": [111, 130], "kv": 85, "kwarg": [7, 8, 11, 13, 16, 37, 50, 52, 53, 54, 63, 82, 85, 88, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 121, 122, 123, 125, 126, 127, 129, 132, 134, 136, 140, 142, 143, 150], "l": [85, 97, 130], "l3_oscnext_bool": 4, "l4_oscnext_bool": 4, "l5_oscnext_bool": 4, "l6_oscnext_bool": 4, "l7_oscnext_bool": 4, "label": [1, 11, 13, 16, 26, 29, 88, 93, 103, 106, 123, 127, 131, 135, 142], "lai": 156, "lambda": [118, 156, 161], "land": [130, 156], "larg": [0, 105, 134, 155, 157, 160], "larger": 154, "largest": 97, "last": [14, 107, 113, 121, 125, 126, 127, 132, 135, 161], "last_epoch": 132, "lastli": 159, "latent": [84, 105, 107, 109, 112, 113, 119, 121, 125, 126, 127, 129, 161], "latest": 156, "launch": [11, 16], "layer": [0, 81, 83, 84, 86, 105, 106, 107, 108, 109, 111, 112, 113, 119, 121, 125, 126, 127, 157, 160], "layer_s": 85, "layer_size_scal": 108, "layernorm": [85, 111], "ldot": [82, 86], "lead": [155, 156], "learn": [0, 1, 5, 63, 65, 76, 78, 119, 123, 125, 127, 132, 154, 156, 157, 158, 159, 160, 161], "learnabl": [85, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 121, 127, 129, 161], "learnedtask": [124, 127], "least": [13, 153, 155, 156], "leav": 132, "len": [11, 13, 97, 130, 154, 155], "length": [11, 13, 14, 38, 96, 97, 130, 132], "lenmatchbatchsampl": [10, 14], "less": [8, 135, 156, 161], "let": [156, 159, 161], "level": [0, 5, 11, 13, 16, 18, 32, 37, 44, 46, 48, 50, 51, 52, 53, 54, 56, 60, 63, 64, 67, 68, 69, 82, 86, 112, 123, 150, 155, 156, 157, 159, 160], "leverag": 1, "lex_sort": [89, 97], "liabil": [14, 134], "liabl": [14, 134], "liamma": [84, 85, 111, 130], "lib": [100, 101, 102, 138], "licens": [14, 134], "lift": 154, "light": 92, "lightn": [9, 132, 156, 161], "lightningdatamodul": 9, "lightningmodul": [84, 85, 118, 132, 150, 156, 161], "liheng": 111, "like": [14, 19, 38, 86, 92, 119, 127, 130, 134, 151, 153, 155, 156, 158, 161], "limit": [14, 37, 96, 134], "line": [132, 138, 154, 155, 159], "linear": [84, 85, 97, 107, 113, 161], "linearedgeencod": [83, 84], "linearli": 132, "linearnodeencod": [83, 84], "liquid": 101, "liquido": [3, 4, 17, 42, 53, 81, 98, 154], "liquido_read": [3, 49], "liquido_v1": [98, 101], "liquidoread": [49, 53, 154], "list": [5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 42, 44, 46, 48, 50, 51, 52, 53, 54, 56, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71, 72, 74, 76, 77, 78, 82, 85, 86, 88, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 107, 109, 113, 118, 119, 121, 122, 123, 127, 130, 132, 134, 135, 136, 142, 144, 145, 148, 150, 154, 155, 159], "list_all_submodul": [139, 144], "ljvmiranda921": 153, "load": [0, 8, 11, 59, 72, 118, 122, 140, 142, 155, 156, 157, 159, 160], "load_from_checkpoint": [156, 161], "load_modul": [10, 11, 118], "load_state_dict": [118, 122, 156, 161], "loaded_model": [156, 161], "local": [82, 96, 100, 101, 102, 138, 156, 158, 161], "locat": 97, "lock": 13, "log": [0, 1, 126, 131, 132, 134, 137, 155, 156, 157, 160, 161], "log10": [127, 136, 156, 161], "log_cmk": 134, "log_cmk_approx": 134, "log_cmk_exact": 134, "log_every_n_step": [103, 156, 161], "log_fold": [37, 50, 52, 53, 54, 63, 150], "log_model": [156, 161], "logcmk": [131, 134], "logcoshloss": [131, 134, 156, 161], "logger": [7, 9, 11, 14, 19, 37, 50, 52, 53, 54, 61, 63, 71, 72, 91, 103, 118, 133, 136, 137, 150, 156, 161], "loggeradapt": 150, "logic": 155, "logit": [125, 134, 161], "logrecord": 150, "long": 155, "longer": 96, "longev": [0, 157, 160], "longtensor": [82, 86, 130], "look": [24, 155, 156], "lookup": 144, "loop": [84, 130, 156, 161], "loss": [11, 13, 16, 88, 93, 103, 119, 123, 127, 132, 134, 138, 156, 161], "loss_factor": 134, "loss_funct": [1, 127, 131, 156, 161], "loss_weight": [88, 93, 127, 156, 161], "loss_weight_column": [11, 13, 16, 88, 93, 135, 142], "loss_weight_default_valu": [11, 13, 16, 88, 93, 142], "loss_weight_t": [11, 13, 16, 135, 142], "lossfunct": [127, 131, 134, 156], "lot": 153, "lower": [0, 37, 156, 157, 160], "lr": [156, 161], "m": [92, 97, 134], "ma": 111, "machin": 1, "made": [156, 161], "maeloss": [131, 134], "magnitud": [0, 157, 160], "mai": [50, 61, 72, 96, 127, 155, 156, 158, 161], "main": [1, 14, 84, 85, 104, 111, 130, 153, 156], "mainli": 38, "major": [123, 127], "make": [0, 7, 96, 136, 142, 143, 153, 154, 155, 156, 157, 159, 160, 161], "make_dataload": [131, 135], "make_train_validation_dataload": [131, 135], "makedir": [156, 161], "manag": [0, 131, 154, 156, 157, 160], "mandatori": 84, "mangl": 38, "mani": [65, 154, 156, 161], "manipul": [35, 89, 90, 95], "map": [7, 11, 13, 16, 22, 24, 60, 88, 93, 94, 100, 101, 102, 127, 156, 159, 161], "mari": [0, 157, 160], "martin": 106, "mask": [14, 88, 93, 130], "masked_entri": 130, "master": 134, "match": [14, 50, 88, 93, 136, 148, 151, 154], "math": [1, 85, 137], "mathbb": 86, "mathbf": [82, 86], "matic": 127, "matric": [85, 130], "matrix": [85, 86, 91, 92, 97, 111, 130, 134, 155], "max": [82, 85, 107, 109, 113, 134, 136, 138, 156, 161], "max_activ": 96, "max_epoch": [103, 156, 161], "max_length": 96, "max_pool": [82, 86], "max_pool_x": [82, 86], "max_puls": 96, "max_rel_po": 129, "max_table_s": [48, 65], "max_weight": 136, "maximum": [48, 65, 86, 96, 97, 127, 129, 138], "mc": [24, 60], "mc_truth": [19, 44, 155, 156], "mclabelbgmuonmcp": 4, "mclabelbgmuonmcpecharg": 4, "mclabelclassif": 4, "mclabelcoincidentmuon": 4, "mctree": [32, 36], "md": 156, "mean": [0, 11, 13, 16, 81, 85, 97, 107, 109, 111, 113, 130, 134, 143, 154, 155, 156, 157, 160, 161], "meaning": 84, "meant": [154, 156, 161], "measur": [96, 97, 130, 156, 159], "mechan": 85, "meet": 127, "member": [21, 24, 32, 38, 50, 96, 142, 143, 150, 154, 159], "memori": [13, 155], "mention": 156, "merchant": [14, 134], "merg": [7, 14, 63, 64, 65, 134, 154, 155, 159], "merge_fil": [7, 63, 64, 65, 154, 159], "merged_database_nam": 65, "messag": [85, 111, 132, 150, 156], "messagepass": 85, "metaclass": [142, 143], "metaproject": 158, "meter": 156, "meth": 156, "method": [5, 7, 9, 11, 13, 14, 16, 19, 21, 32, 34, 35, 36, 38, 45, 46, 50, 55, 56, 63, 64, 65, 67, 68, 69, 72, 74, 85, 86, 97, 99, 111, 112, 126, 134, 136, 154, 156, 161], "metric": [92, 105, 107, 109, 113, 121, 132, 156, 161], "mha": [85, 111], "might": [155, 156, 161], "mileston": [132, 156, 161], "million": [65, 67], "min": [82, 86, 107, 109, 113, 136, 156, 161], "min_charg": 37, "min_pool": [82, 83, 86], "min_pool_x": [82, 83, 86], "mind": 156, "minh": 106, "mini": 135, "minim": [103, 119, 155, 156, 159, 161], "minimum": [37, 96, 127], "minkowski": [89, 90, 114, 115], "minkowskiknnedg": [90, 92], "minu": 134, "mise": 134, "miss": 80, "mit": [14, 134], "mix": 18, "ml": [0, 1, 157, 160], "mlp": [83, 84, 85, 107, 112, 113, 129, 161], "mlp_dim": [84, 129], "mlp_ratio": [85, 112], "mode": [103, 127], "model": [0, 1, 5, 70, 72, 73, 76, 78, 82, 83, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 138, 140, 142, 143, 145, 152, 154, 155, 157, 158, 159, 160], "model_config": [72, 76, 78, 137, 139, 140, 142, 145, 156, 161], "model_config_path": [156, 161], "model_nam": [76, 78], "modelconfig": [72, 76, 78, 118, 139, 142, 143], "modelconfigsav": 143, "modelconfigsaverabc": [139, 143], "modelconfigsavermeta": [139, 143], "modif": [156, 161], "modifi": [14, 134, 156, 161], "modul": [0, 3, 6, 7, 11, 17, 18, 38, 39, 41, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 62, 63, 65, 68, 70, 71, 73, 74, 75, 76, 77, 80, 81, 84, 85, 87, 89, 90, 92, 93, 94, 95, 98, 104, 111, 118, 120, 124, 128, 131, 137, 139, 142, 143, 144, 145, 149, 154, 156, 157, 160, 161], "modular": [0, 81, 154, 156, 157, 160, 161], "moduletyp": 144, "momentum": 85, "mont": 36, "more": [1, 11, 13, 14, 59, 60, 68, 105, 118, 142, 143, 150, 155, 156, 161], "most": [0, 1, 61, 92, 127, 154, 157, 159, 160, 161], "move": [114, 115, 116, 117], "mryab": 134, "mseloss": [131, 134], "msg": 150, "mulitpli": 134, "multi": [85, 107, 113, 123], "multiclassclassificationtask": [124, 125, 156], "multiheadattent": [14, 85], "multiindex": 159, "multipl": [11, 13, 16, 18, 84, 97, 132, 134, 142, 150, 161], "multipli": [85, 132], "multiprocess": [7, 14, 46, 48, 56, 154], "multiprocessing_context": [13, 14], "muon": [26, 155, 161], "muonfilter_13": 4, "must": [13, 18, 50, 51, 60, 63, 82, 85, 132, 134, 136, 153, 154, 155, 156, 159], "my": [155, 156, 159], "my_custom_label": [155, 156], "my_databas": 65, "my_fil": [154, 159], "my_geometry_t": 159, "my_outdir": [154, 159], "my_tabl": 159, "mycustomlabel": [155, 156], "mydetector": 159, "myexperi": 159, "myextractor": 159, "mygraphnetmodel": 161, "mymodel": 161, "mypi": 153, "mypicklewrit": 154, "myread": 159, "n": [14, 19, 82, 86, 92, 130, 134, 155, 156, 159], "n_1": 86, "n_b": 86, "n_cluster": 97, "n_event": [154, 159], "n_featur": [84, 112, 129], "n_freq": 84, "n_head": [85, 105, 109, 111], "n_layer": 111, "n_pmt": 97, "n_puls": [96, 159], "n_rel": 112, "n_worker": [71, 74, 77], "name": [4, 5, 7, 8, 11, 13, 16, 18, 19, 21, 22, 25, 26, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 42, 44, 46, 48, 50, 52, 53, 54, 56, 60, 63, 64, 65, 72, 76, 78, 84, 88, 93, 94, 96, 97, 99, 100, 101, 102, 119, 121, 127, 130, 133, 136, 138, 140, 142, 143, 144, 145, 150, 153, 154, 155, 156, 159, 161], "namespac": [4, 118, 142, 143], "nan": 97, "narg": 138, "nb_dom": 130, "nb_file": 7, "nb_input": [105, 106, 107, 108, 109, 110, 111, 113, 121, 125, 126, 127, 156, 161], "nb_intermedi": 106, "nb_nearest_neighbour": [91, 92, 94, 155, 156, 161], "nb_neighbor": 85, "nb_neighbour": [105, 107, 109, 113, 121, 156, 161], "nb_output": [88, 96, 106, 108, 110, 111, 125, 126, 127, 156, 161], "nb_repeats_allow": 150, "ndarrai": [11, 13, 32, 88, 93, 94, 97, 136, 154], "nearest": [91, 92, 94, 105, 107, 109, 113, 121, 130, 156, 161], "nearli": 161, "necessari": [0, 9, 35, 153, 157, 160], "need": [0, 5, 9, 35, 65, 81, 84, 118, 121, 134, 147, 154, 155, 156, 157, 158, 159, 160, 161], "negat": 86, "neighbour": [85, 91, 92, 94, 105, 107, 109, 113, 121, 130, 156, 161], "nest": 35, "nester": 35, "network": [1, 85, 106, 111, 120, 161], "neural": [1, 120, 161], "neutrino": [0, 1, 21, 44, 51, 85, 97, 109, 112, 129, 155, 156, 157, 159, 160, 161], "new": [0, 1, 18, 85, 140, 145, 153, 154, 156, 157, 160, 161], "new_phras": 147, "nfdi": [0, 157, 160], "nn": [0, 81, 84, 85, 91, 94, 111, 157, 160, 161], "no_weight_decai": 112, "node": [11, 13, 16, 81, 82, 84, 85, 86, 87, 89, 90, 91, 93, 94, 105, 106, 107, 109, 111, 113, 114, 121, 130, 155, 156, 161], "node_definit": [93, 94, 155, 156, 161], "node_feature_nam": [96, 155, 156, 161], "node_level": 135, "node_rnn": [81, 105, 120], "node_truth": [11, 13, 16, 135, 142], "node_truth_t": [11, 13, 16, 135, 142, 156], "nodeasdomtimeseri": [95, 96], "nodedefinit": [93, 94, 95, 96, 156, 161], "nodesaspuls": [93, 95, 96, 155, 156, 161], "nodetimernn": 121, "nois": [22, 36, 76, 156], "non": [9, 35, 38, 60, 94, 105, 127, 134, 156], "none": [5, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 46, 48, 50, 51, 52, 53, 54, 56, 60, 61, 63, 64, 65, 67, 68, 69, 71, 72, 78, 85, 86, 88, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 107, 109, 112, 113, 118, 119, 121, 122, 123, 127, 130, 132, 134, 135, 136, 138, 140, 141, 142, 144, 148, 150, 154, 155, 156, 159, 161], "noninfring": [14, 134], "nope": 111, "norm": [85, 111], "norm_edg": [85, 111], "norm_lay": [84, 85], "normal": [84, 85, 97, 107, 111, 113, 119, 127, 159], "normalizing_flow": [1, 81], "normalizingflow": [81, 119, 127], "northeren": 26, "note": [5, 11, 13, 16, 51, 64, 65, 67, 69, 97, 143, 156], "notebook": 153, "notic": [14, 65, 130, 134], "notimplementederror": 154, "now": [156, 159, 161], "np": [136, 154], "null": [37, 60, 155, 156, 161], "nullspliti3filt": [34, 37, 46, 48, 51, 56], "num": [94, 138], "num_class": 134, "num_edg": 155, "num_edge_featur": 155, "num_featur": 155, "num_head": [85, 129], "num_lay": [121, 129], "num_nod": [130, 155], "num_puls": 96, "num_register_token": 129, "num_row": [88, 93, 155], "num_sampl": 14, "num_work": [7, 8, 9, 14, 48, 64, 135, 154, 155, 156, 159, 161], "number": [0, 5, 7, 11, 13, 14, 16, 19, 46, 48, 56, 61, 64, 65, 71, 74, 77, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 121, 125, 126, 127, 129, 130, 132, 135, 136, 138, 154, 155, 156, 157, 159, 160], "numer": [127, 159], "numpi": 97, "numu": 133, "numucc": 133, "o": [0, 101, 127, 154, 156, 157, 158, 160, 161], "obj": [35, 38, 144], "object": [4, 6, 11, 13, 14, 16, 24, 35, 38, 82, 86, 88, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 134, 135, 138, 150, 155, 156, 161], "observ": 159, "observatori": [21, 51], "obtain": [14, 86, 94, 134], "occur": [8, 135], "oerso": 108, "offer": 155, "offset": [96, 97], "ofintern": 39, "often": 155, "old": 84, "old_phras": 147, "om": [36, 38], "omit": 161, "on_fit_end": 132, "on_train_end": 122, "on_train_epoch_end": 132, "on_train_epoch_start": 132, "on_validation_end": 132, "onc": [150, 156, 158], "one": [11, 13, 21, 32, 60, 76, 86, 142, 143, 148, 153, 154, 155, 156, 159, 161], "ones": [97, 122], "onli": [0, 1, 11, 13, 16, 37, 65, 81, 86, 96, 97, 105, 127, 136, 140, 143, 145, 149, 154, 155, 156, 157, 159, 160, 161], "onlinel2filter_17": 4, "open": [0, 50, 153, 154, 155, 156, 157, 158, 159, 160], "opensciencegrid": 158, "oper": [14, 82, 85, 104, 107], "oppos": 155, "optic": [38, 97], "optim": [103, 119, 122, 132, 156, 161], "optimis": [0, 1, 156, 157, 160, 161], "optimizer_class": [119, 156, 161], "optimizer_closur": 122, "optimizer_kwarg": [119, 156, 161], "optimizer_step": 122, "optimzi": 119, "option": [5, 7, 9, 11, 13, 14, 16, 21, 32, 48, 60, 65, 67, 68, 69, 72, 78, 84, 85, 86, 88, 92, 93, 94, 96, 97, 99, 100, 101, 102, 105, 107, 109, 112, 113, 118, 119, 121, 127, 130, 132, 134, 136, 137, 138, 140, 142, 148, 154, 155, 156, 159, 161], "orca": 102, "orca150": [98, 102, 161], "orca150superdens": [98, 102], "orca_150": 102, "order": [0, 35, 50, 71, 74, 77, 82, 96, 130, 134, 156, 157, 160], "ordinari": 161, "ordinarili": 159, "org": [91, 111, 113, 134, 156, 158], "orient": [0, 81, 157, 160], "origin": [14, 65, 84, 85, 93, 111, 112, 130, 155, 161], "ot": 134, "other": [14, 27, 60, 91, 134, 153, 155, 156, 161], "otherwis": [14, 38, 134], "our": [156, 159], "out": [5, 11, 13, 14, 107, 124, 134, 150, 153, 154, 155, 156, 159, 161], "out_dim": [84, 85], "out_featur": 85, "outdir": [7, 46, 48, 56, 154, 156, 159, 161], "outer": 35, "outlin": [159, 161], "output": [19, 65, 71, 72, 84, 85, 88, 93, 96, 97, 103, 105, 106, 107, 108, 110, 111, 113, 121, 125, 126, 127, 136, 142, 143, 154, 159, 161], "output_dim": [84, 161], "output_dir": [7, 63, 64, 65, 154], "output_feature_nam": 88, "output_fil": 7, "output_file_path": 154, "output_fold": [6, 71], "outsid": [69, 153], "over": [92, 96, 154, 155], "overal": 134, "overhead": 159, "overlap": 65, "overrid": [9, 132], "overridden": 96, "overview": [0, 157, 160], "overwrit": [72, 84, 132], "overwrite_old_attr": 84, "overwritten": [50, 138, 140], "own": [153, 156], "ownership": 153, "p": [36, 67, 134, 154], "p11003": 156, "packag": [0, 1, 59, 127, 144, 148, 149, 153, 156, 157, 160, 161], "pad": [84, 88, 93, 97, 111, 130], "pad_to_full_graph": [84, 111], "padding_valu": [26, 29, 130], "pair": [21, 32, 46, 48, 51, 56, 84, 85, 111], "pairwis": [92, 130], "pairwise_shuffl": [57, 59], "panda": [61, 136, 154, 156, 159, 161], "paper": [111, 134], "paradigm": [156, 161], "parallel": [7, 46, 48, 56, 154, 159], "param": [14, 40, 42, 44, 130], "paramet": [5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 42, 44, 46, 48, 50, 51, 52, 53, 54, 56, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71, 72, 74, 76, 77, 78, 82, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151], "parent": [35, 156], "parent_kei": 35, "parquet": [1, 3, 5, 10, 13, 40, 43, 44, 46, 48, 52, 54, 56, 58, 64, 67, 69, 100, 101, 102, 154, 155, 156, 159], "parquet_dataset": [10, 12, 155], "parquet_extractor": [17, 39], "parquet_to_sqlit": [3, 57], "parquet_writ": [3, 62], "parquetdataconvert": [45, 46], "parquetdataset": [9, 12, 13, 154, 156], "parquetextractor": [7, 39, 40, 42, 48, 50], "parquetread": [49, 52], "parquettosqliteconvert": [47, 48], "parquetwrit": [13, 40, 48, 62, 64, 154, 155, 159], "pars": [24, 137, 138, 139, 140, 145, 154], "parse_data_represent": [10, 11], "parse_label": [10, 11], "part": [73, 154, 156, 158, 159], "particl": [32, 60, 133, 155, 156, 159], "particlenet": [81, 104], "particular": [14, 134, 153], "particularli": [155, 156, 161], "partit": 65, "partli": [0, 157, 160], "pass": [7, 11, 16, 84, 85, 93, 94, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 119, 121, 123, 127, 129, 132, 134, 136, 153, 154, 155, 156, 159, 161], "password": 68, "path": [5, 11, 13, 16, 21, 32, 46, 48, 50, 51, 52, 53, 54, 56, 59, 60, 65, 71, 74, 76, 77, 78, 85, 88, 93, 118, 122, 130, 132, 135, 138, 140, 141, 142, 148, 154, 155, 156, 159, 161], "path_to_arrai": 159, "path_to_geometry_t": 159, "patienc": 138, "pd": [154, 156, 159], "pdf": [91, 119], "pdg": 133, "pe": 130, "pe_nam": 84, "penal": 134, "peopl": [156, 161], "pep257": 153, "pep8": 153, "per": [11, 13, 16, 24, 60, 85, 86, 105, 121, 127, 134, 136, 155, 156], "percentil": [96, 97], "percentileclust": [95, 96], "perceptron": [85, 107, 113], "perform": [0, 9, 82, 84, 85, 86, 96, 103, 104, 105, 107, 109, 113, 119, 121, 122, 123, 125, 127, 135, 156, 157, 160, 161], "permiss": [14, 134], "permit": [14, 134], "persistent_work": [8, 135], "person": [5, 14, 134], "perturb": [88, 93, 94], "perturbation_dict": [88, 93, 94], "pframe": [46, 48, 51, 56], "philip": 111, "philosophi": [156, 161], "photon": [44, 155, 156], "php": 68, "phrase": 147, "phyic": 1, "physic": [0, 1, 21, 36, 38, 70, 76, 78, 81, 124, 127, 155, 156, 157, 160, 161], "physicist": [0, 1, 156, 157, 160], "physicst": 1, "pick": 155, "pickl": [154, 156, 159, 161], "pid": [4, 61, 133, 142, 155], "pid_kei": 133, "piecewiselinearlr": [131, 132, 156, 161], "pip": [153, 158], "pisa": 28, "place": [14, 84, 112, 147, 153], "plai": 1, "plane": [25, 134], "pleas": [74, 154, 155, 156, 159], "plot": 155, "plug": 1, "pmt": [86, 97, 155, 156], "pmt_area": 4, "pmt_dir_i": 4, "pmt_dir_x": 4, "pmt_dir_z": 4, "pmt_number": 4, "point": [5, 31, 119, 133, 134, 135, 156, 159, 161], "pole": 109, "pone": 102, "pone_triangl": 102, "ponesmal": [66, 67], "ponetriangl": [98, 102], "pool": [7, 81, 82, 83, 85, 105, 107, 109, 111, 113], "pop_default": 138, "popular": 161, "port": 156, "portabl": [0, 156, 157, 160, 161], "portion": [14, 134], "pos_x": 156, "posit": [76, 84, 85, 86, 94, 97, 111, 112, 126, 129, 130, 140, 145, 155, 159], "position_encod": 111, "position_i": 4, "position_x": 4, "position_x_pr": 126, "position_y_pr": 126, "position_z": 4, "position_z_pr": 126, "positionreconstruct": [124, 126], "possibl": [0, 35, 65, 153, 157, 159, 160], "post": [105, 107, 109, 113], "post_processing_layer_s": [105, 107, 109, 156, 161], "posterior": 119, "pow": [156, 161], "power": [154, 156, 161], "pr": 121, "practic": [0, 153, 157, 160], "pre": [0, 5, 47, 48, 66, 88, 93, 99, 133, 153, 155, 156, 157, 160, 161], "pre_configur": [1, 3, 48], "precis": 134, "precommit": 153, "preconfigur": 48, "pred": [103, 123, 127], "pred_head_activ": 111, "pred_head_lay": 111, "pred_head_pool": 111, "predict": [0, 9, 27, 31, 33, 76, 78, 85, 103, 106, 111, 112, 119, 123, 125, 127, 134, 135, 156, 157, 160, 161], "predict_as_datafram": [103, 156, 161], "prediction_column": [72, 78, 103, 135], "prediction_kei": 134, "prediction_label": [103, 127, 156, 161], "prefer": 92, "prefetch_factor": 8, "prepar": [0, 5, 9, 134, 155, 157, 160], "prepare_data": [5, 9], "preprocess": 156, "present": [11, 13, 21, 32, 37, 130, 138, 148, 149, 155, 161], "previou": [132, 156, 161], "primari": [60, 65, 155, 156], "primary_hadron_1_direction_phi": [4, 155, 156], "primary_hadron_1_direction_theta": [4, 155, 156], "primary_hadron_1_energi": [4, 155, 156], "primary_hadron_1_position_i": [4, 155, 156], "primary_hadron_1_position_x": [4, 155, 156], "primary_hadron_1_position_z": [4, 155, 156], "primary_hadron_1_typ": [4, 155, 156], "primary_key_rescu": 65, "primary_lepton_1_direction_phi": [4, 155, 156], "primary_lepton_1_direction_theta": [4, 155, 156], "primary_lepton_1_energi": [4, 155, 156], "primary_lepton_1_position_i": [4, 155, 156], "primary_lepton_1_position_x": [4, 155, 156], "primary_lepton_1_position_z": [4, 155, 156], "primary_lepton_1_typ": [4, 155, 156], "principl": [1, 156], "print": [5, 118, 132, 150], "prior": 155, "prioriti": 153, "privat": 136, "pro": [156, 161], "prob": 130, "probabl": [84, 85, 94, 111, 130, 134, 161], "problem": [0, 91, 153, 155, 156, 157, 160, 161], "procedur": 9, "proceedur": 65, "process": [1, 7, 14, 46, 48, 56, 65, 76, 84, 99, 105, 107, 109, 113, 153, 154, 156, 161], "process_posit": 132, "produc": [5, 50, 84, 119, 123, 133, 136, 155, 156], "product": [8, 85, 135], "programm": [0, 157, 160], "progress": 132, "progressbar": [131, 132, 156, 161], "proj_drop": 85, "project": [0, 54, 85, 153, 156, 157, 160, 161], "prometheu": [3, 4, 17, 44, 54, 67, 81, 98, 155, 156, 161], "prometheus_dataset": [1, 66], "prometheus_extractor": [17, 43], "prometheus_read": [3, 49], "prometheusextractor": [7, 43, 44, 50], "prometheusfeatureextractor": [43, 44], "prometheusread": [49, 54], "prometheustruthextractor": [43, 44], "prompt": 156, "prone": 156, "proof": [156, 161], "properti": [5, 9, 11, 13, 14, 19, 23, 27, 38, 50, 63, 86, 88, 96, 97, 99, 103, 110, 127, 133, 141, 150, 154], "propos": 85, "protocol": 154, "prototyp": 101, "proven": [19, 21, 40, 42, 44, 154], "provid": [0, 1, 7, 11, 13, 14, 16, 76, 81, 88, 93, 112, 118, 119, 134, 153, 154, 155, 156, 157, 160, 161], "pth": [156, 161], "public": [67, 99, 136], "publicprometheusdataset": [66, 67], "publish": [14, 134, 156, 161], "puls": [5, 11, 13, 16, 18, 22, 24, 36, 38, 44, 60, 76, 82, 86, 88, 93, 96, 97, 112, 123, 129, 130, 155, 156, 159, 161], "pulse_truth": 5, "pulsemap": [5, 11, 13, 16, 22, 67, 68, 69, 76, 78, 135, 142, 155, 156], "pulsemap_extractor": [76, 78], "pulseseri": 36, "pulsmap": [76, 78], "punch4nfdi": [0, 157, 160], "pure": [7, 19, 20, 24, 38], "purpos": [0, 14, 81, 134, 157, 159, 160], "put": [65, 156, 161], "py": [14, 84, 85, 111, 130, 134, 156], "py3": 158, "pydant": [140, 142, 143, 145], "pydantic_cor": [140, 145], "pydocstyl": 153, "pyg": [130, 155, 156, 161], "pylint": 153, "python": [0, 1, 7, 19, 20, 24, 35, 38, 153, 156, 157, 158, 160, 161], "python3": [100, 101, 102, 138], "pytorch": [16, 132, 156, 158, 161], "pytorch_lightn": [103, 132, 150, 156, 161], "pytorchlightn": 156, "q": 85, "qk_scale": 85, "qkv_bia": 85, "qualiti": [0, 156, 157, 160], "quantiti": [28, 127, 130, 156], "queri": [11, 13, 16, 60, 61, 65, 85, 155, 156], "query_databas": [57, 60], "query_t": [11, 13, 16, 155], "queso": 29, "question": 156, "quick": [97, 156], "r": [86, 91, 154, 156, 158, 159], "radial": 91, "radialedg": [90, 91], "radiat": [96, 97, 156, 161], "radiu": [91, 156], "rais": [11, 13, 21, 24, 32, 118, 119, 140, 145, 154], "random": [3, 11, 13, 16, 57, 61, 64, 84, 94, 96, 111, 130, 142, 155, 156], "randomchunksampl": [10, 14], "randomli": [14, 61, 88, 93, 94, 143, 156, 161], "rang": [14, 127, 157, 159, 160, 161], "rare": 154, "rasmu": [0, 108, 157, 160], "rate": [119, 132], "rather": [127, 150, 156, 161], "ratio": [9, 85, 112], "raw": [0, 96, 97, 155, 156, 157, 159, 160, 161], "rde": 4, "re": [141, 155, 156, 159, 161], "reach": [155, 159], "read": [0, 3, 7, 11, 13, 16, 35, 49, 51, 52, 53, 54, 99, 107, 124, 154, 155, 156, 157, 159, 160], "read_csv": 159, "read_sql": 156, "readabl": 156, "reader": [1, 3, 48, 50, 51, 52, 53, 54, 159], "readi": [66, 159, 161], "readm": 156, "readout": [105, 107, 109, 113], "readout_layer_s": [105, 107, 109, 113, 156, 161], "readthedoc": 156, "receiv": [0, 157, 160, 161], "reciev": [63, 154, 159, 161], "recommend": [156, 158, 159, 161], "reconstruct": [0, 1, 22, 25, 26, 30, 31, 33, 70, 73, 81, 109, 121, 124, 127, 155, 156, 157, 160], "record": [37, 150], "recov": 127, "recreat": [155, 156, 161], "recurr": 120, "recurs": [24, 38, 46, 48, 50, 51, 56, 118, 144, 148], "reduc": [156, 161], "reduce_opt": 82, "refer": [9, 102, 119, 142, 155, 156, 159, 161], "refresh_r": 132, "regardless": [155, 156, 161], "regist": 129, "regress": 123, "regular": [38, 85, 156, 161], "rel": [84, 85, 94, 112, 129, 130], "rel_pos_bia": 85, "rel_pos_bucket": 129, "relat": [59, 148, 159], "relev": [1, 38, 59, 148, 153], "reli": [51, 119], "reload": 161, "relu": [85, 111, 113], "remain": 155, "remaining_batch": 14, "remov": [8, 11, 16, 46, 56, 65, 88, 93, 135, 138, 159], "remove_origin": 65, "renam": [74, 147], "rename_state_dict_entri": [137, 147], "repeat": [88, 93, 150], "repeat_label": [88, 93], "repeatfilt": [137, 150], "replac": [99, 100, 101, 102, 147], "replace_with_ident": [99, 100, 101, 102], "repo": 153, "repositori": 153, "repres": [86, 87, 88, 93, 94, 96, 97, 105, 130, 140, 142, 143, 154, 155, 156, 159, 161], "represent": [5, 11, 13, 16, 38, 67, 68, 69, 84, 85, 86, 88, 94, 118, 119, 121, 130, 155, 156, 159, 161], "reproduc": [142, 143, 161], "repurpos": 161, "requir": [0, 21, 28, 37, 40, 44, 60, 68, 96, 125, 127, 134, 153, 154, 155, 156, 157, 158, 159, 160, 161], "requires_icecub": [137, 149], "research": [0, 156, 157, 160], "reset": [65, 85], "reset_integer_primary_kei": 65, "reset_paramet": 85, "residu": 85, "resolv": [11, 13, 16, 61], "respect": [135, 156, 159], "respons": [155, 156], "restrict": [14, 127, 134, 161], "result": [5, 14, 60, 64, 86, 94, 97, 132, 134, 135, 144, 156, 159, 161], "retriev": [99, 154, 155], "retro": 30, "return": [5, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 32, 35, 36, 38, 50, 51, 52, 53, 54, 59, 60, 61, 63, 64, 65, 71, 82, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 154, 155, 156, 159, 161], "return_discard": 38, "return_el": 134, "reusabl": [0, 157, 160], "reuseabl": [156, 161], "review": 153, "rezero": 85, "rhel_7_x86_64": 158, "right": [14, 134, 156], "rmse": 134, "rmseloss": [131, 134], "rmsevonmisesfisher3dloss": [131, 134], "rng": 59, "rnn": [1, 81, 105, 121], "rnn_dropout": 105, "rnn_dynedg": 105, "rnn_hidden_s": 105, "rnn_layer": 105, "rnn_tito": [81, 104], "role": 161, "root": 134, "roughli": 155, "row": [60, 65, 88, 93, 94, 97, 130, 155, 156, 159, 161], "rrwp": [84, 94, 130], "rrwp_encod": [84, 130], "rrwp_index": 94, "rrwp_val": 94, "rrwplinearedgeencod": [83, 84], "rrwplinearnodeencod": [83, 84], "run": [1, 14, 51, 71, 73, 74, 77, 85, 154, 156, 158, 159, 161], "run_id": 68, "run_sql_cod": [57, 60], "runid": [4, 68], "runner": [100, 101, 102, 138], "runtim": [133, 158], "runtimeerror": [21, 32], "rw": 130, "rwse": 94, "rwselinearedgeencod": 84, "rwselinearnodeencod": [83, 84], "ryabinin": 134, "sai": [156, 161], "same": [18, 38, 60, 65, 82, 86, 97, 125, 130, 132, 144, 150, 155, 156, 161], "sampl": [14, 61, 85, 88, 93, 94, 96, 156, 161], "sample_puls": 96, "sampler": [3, 10], "san": 85, "san_graph": 85, "sangraphhead": [83, 85], "satisfi": [0, 154, 157, 160], "save": [7, 19, 21, 35, 40, 42, 44, 46, 48, 56, 60, 62, 63, 65, 118, 132, 134, 135, 136, 140, 141, 142, 143, 154, 156, 159], "save_config": [141, 156, 161], "save_dataset_config": [139, 142], "save_dir": [132, 156, 161], "save_fil": [63, 154], "save_method": [7, 154, 159], "save_model_config": [139, 143], "save_result": [131, 135], "save_select": [131, 135], "save_state_dict": [118, 156, 161], "save_to_sql": [57, 60], "scalabl": 155, "scalar": [11, 13, 19, 130, 134], "scale": [84, 85, 88, 92, 93, 96, 97, 108, 112, 127, 129, 134, 155, 161], "scaled_emb": [112, 129], "scatter": [96, 97], "schedul": 119, "scheduler_class": [119, 156, 161], "scheduler_config": [119, 156, 161], "scheduler_kwarg": [119, 156, 161], "schema": 156, "scheme": [105, 107, 109, 113, 154], "scientif": [0, 1, 157, 160], "scope": 153, "score": [85, 111], "script": [156, 161], "search": [46, 48, 50, 51, 52, 53, 54, 56, 148, 154], "sec": 134, "second": 92, "section": 156, "see": [11, 16, 84, 91, 93, 105, 119, 127, 132, 153, 155, 156, 158], "seed": [9, 11, 13, 16, 61, 88, 93, 94, 135, 142, 155, 156], "seen": 84, "select": [5, 8, 9, 11, 13, 14, 16, 29, 37, 61, 96, 135, 136, 142, 153, 156, 159], "selection_nam": 8, "self": [11, 13, 84, 93, 103, 111, 119, 123, 130, 140, 145, 154, 155, 156, 159, 161], "sell": [14, 134], "send": 127, "sensor": [88, 93, 97, 99, 155, 156, 159, 161], "sensor_i": 159, "sensor_id": [100, 102, 159], "sensor_id_column": [100, 101, 102, 159], "sensor_index_nam": 99, "sensor_mask": [88, 93], "sensor_pos_i": [4, 102, 155, 156, 161], "sensor_pos_x": [4, 102, 155, 156, 161], "sensor_pos_z": [4, 102, 155, 156, 161], "sensor_position_nam": 99, "sensor_string_id": 102, "sensor_tim": 159, "sensor_x": [155, 159], "sensor_z": 159, "separ": [35, 92, 132, 156, 158], "seper": [121, 155], "seq_length": [84, 112, 129, 130], "sequenc": [14, 71, 74, 77, 84, 85, 97, 130, 135, 156, 161], "sequenti": [11, 13], "sequential_index": [11, 13, 16], "seri": [11, 13, 16, 22, 24, 36, 38, 60, 76, 96, 105, 121, 155, 156, 161], "serial": [154, 155], "serialis": [34, 35, 156, 161], "serv": 155, "server": 68, "session": [142, 143, 155, 156, 161], "set": [3, 6, 9, 13, 18, 21, 24, 32, 46, 48, 50, 51, 56, 63, 84, 85, 96, 97, 112, 118, 127, 133, 135, 153, 154, 156, 159, 161], "set_extractor": 50, "set_gcd": [18, 21, 32], "set_index": 159, "set_number_of_input": 96, "set_output_feature_nam": 96, "set_verbose_print_recurs": 118, "setlevel": 150, "setup": [9, 132, 158], "setuptool": 158, "sever": [156, 161], "sh": 158, "shall": [14, 134], "shape": [19, 88, 92, 93, 96, 130, 134, 154, 155], "share": [103, 119, 123, 156, 161], "share_redirect": 5, "shared_step": [103, 119, 123], "sharelink": 5, "shell": 158, "shortest": 130, "should": [5, 8, 11, 13, 16, 19, 21, 35, 61, 69, 72, 85, 86, 88, 93, 94, 99, 100, 101, 102, 105, 112, 121, 130, 134, 135, 140, 142, 143, 145, 153, 154, 155, 156, 158, 159, 161], "show": [61, 132, 156], "shown": 156, "shuffl": [8, 9, 59, 64, 135, 155], "shutdown": 9, "sid": 5, "sigmoid": 161, "sign": 134, "signal": [76, 161], "signatur": [24, 38], "signific": 155, "significantli": 155, "signup": 156, "similar": [14, 24, 38, 96, 156, 161], "similarli": [38, 154, 155, 156, 161], "simpl": [0, 81, 103, 156, 157, 160, 161], "simplecoarsen": 82, "simplest": [156, 161], "simpli": [156, 161], "simul": [36, 44, 54, 67, 68, 76, 156, 159], "sinc": [14, 76, 134, 156], "singl": [5, 11, 18, 63, 65, 86, 97, 107, 113, 133, 136, 142, 143, 154, 155, 156, 159, 161], "single_event_as_arrai": 97, "sinusoid": [84, 112, 129], "sinusoidalposemb": [83, 84], "sipm_i": [4, 101], "sipm_id": 101, "sipm_x": [4, 101], "sipm_z": [4, 101], "situat": 153, "size": [13, 14, 48, 65, 84, 85, 86, 105, 107, 108, 109, 111, 112, 113, 130, 138, 155], "skip": [37, 107, 113, 156], "skip_readout": [107, 113], "sklearn": [156, 161], "sk\u0142odowska": [0, 157, 160], "slack": 156, "slice": [85, 107, 113], "slower": 65, "small": [134, 155, 156, 161], "smaller": [63, 154], "smooth": 153, "snippet": [156, 161], "snowstorm": [4, 68], "snowstorm_dataset": [1, 66], "snowstorm_mc": 68, "snowstormdataset": [66, 68], "so": [14, 134, 155, 156, 158, 159, 161], "soft": 84, "softmax": 134, "softwar": [0, 14, 51, 134, 157, 160], "solut": [84, 85, 109, 112, 153], "solv": [1, 153, 161], "some": [11, 13, 14, 16, 46, 48, 51, 56, 88, 93, 97, 155, 156], "someth": [156, 161], "somewhat": 156, "sort": [93, 97], "sort_bi": 93, "sota": 5, "sourc": [0, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 42, 44, 46, 48, 50, 51, 52, 53, 54, 56, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71, 72, 74, 76, 77, 78, 80, 82, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 155, 156, 157, 160], "south": 109, "space": [84, 91, 92, 127, 130, 136], "space_coord": 92, "space_dim": 130, "spacetim": 84, "spacetimeencod": [83, 84], "spars": 130, "sparsetensor": 85, "spatial": 97, "spawn": [13, 14], "spd": 130, "special": [24, 76, 121, 130], "specialis": [156, 161], "specif": [0, 1, 3, 5, 6, 7, 11, 13, 16, 17, 19, 22, 38, 49, 50, 51, 60, 65, 70, 72, 75, 77, 80, 82, 86, 88, 91, 93, 96, 98, 99, 100, 101, 102, 104, 105, 110, 120, 124, 125, 126, 127, 128, 130, 134, 153, 154, 155, 156, 157, 159, 160, 161], "specifi": [11, 13, 14, 16, 19, 61, 82, 97, 119, 127, 132, 155, 156, 159, 161], "speed": [76, 92, 155], "sphere": 91, "spite": 134, "splinemp": 31, "split": [0, 9, 37, 65, 82, 157, 160], "split_se": 9, "splitinicepuls": 60, "sql": 136, "sqlite": [1, 3, 5, 9, 10, 16, 48, 56, 58, 60, 65, 67, 69, 155, 156], "sqlite3": 156, "sqlite_dataset": [10, 15, 155], "sqlite_util": [3, 57], "sqlite_writ": [3, 62], "sqlitedataconvert": [55, 56], "sqlitedatas": 155, "sqlitedataset": [9, 15, 16, 154], "sqlitewrit": [62, 65, 154, 155], "squar": 134, "src": [14, 156], "stabl": [126, 127], "stage": [9, 132], "stai": 130, "standalon": 121, "standard": [0, 3, 4, 37, 61, 72, 88, 93, 94, 96, 97, 100, 101, 102, 105, 119, 122, 123, 127, 138, 153, 156, 157, 159, 160, 161], "standard_argu": 138, "standard_averaged_model": [1, 81], "standard_model": [1, 81, 156], "standardaveragedmodel": [81, 122], "standardaveragemodel": 122, "standardflowtask": [124, 127], "standardis": 98, "standardlearnedtask": [124, 125, 126, 127, 161], "standardmodel": [81, 103, 122, 123], "start": [14, 32, 85, 153, 156, 159, 161], "stat": 85, "state": [0, 72, 105, 121, 147, 157, 160], "state_dict": [72, 76, 78, 118, 122, 147, 156], "static": [93, 134, 153], "statist": 97, "std": 86, "std_pool": [83, 86], "std_pool_x": [83, 86], "stdout": 132, "step": [94, 103, 111, 119, 122, 123, 130, 132, 156, 159, 161], "still": 142, "stochast": 85, "stop": [32, 132, 138], "stopped_muon": 4, "store": [5, 11, 13, 16, 60, 63, 64, 65, 133, 154, 155, 156, 159, 161], "str": [5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 42, 44, 46, 48, 50, 51, 52, 53, 54, 56, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71, 72, 74, 76, 77, 78, 84, 85, 86, 88, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 107, 109, 111, 112, 113, 118, 119, 122, 127, 130, 132, 133, 135, 136, 138, 140, 141, 142, 143, 144, 145, 147, 148, 150, 154, 159], "straightforward": 155, "strategi": [156, 161], "stream": 37, "stream_handl": 150, "streamhandl": 150, "streamlin": 1, "string": [4, 5, 11, 13, 16, 35, 61, 86, 88, 93, 99, 100, 118, 119, 127, 140, 156, 159, 161], "string_id": 159, "string_id_column": [100, 101, 102, 159], "string_index_nam": 99, "string_mask": [88, 93], "string_select": [11, 13, 16, 135, 142], "string_selection_resolv": [3, 57], "stringselectionresolv": [57, 61], "strongli": [156, 161], "structur": [84, 87, 94, 103, 144, 154, 155, 156, 161], "style": 153, "sub": 156, "subclass": [0, 5, 81, 103, 154, 155, 156, 157, 160, 161], "subev": 37, "subeventid": 4, "subeventstreami3filt": [34, 37], "subfold": [46, 48, 51, 56], "subject": [14, 112, 134], "sublicens": [14, 134], "submit": 112, "submodul": [1, 3, 10, 12, 15, 17, 20, 34, 39, 41, 43, 45, 47, 49, 55, 57, 62, 66, 70, 73, 75, 79, 81, 83, 87, 89, 90, 95, 98, 104, 120, 124, 128, 131, 137, 139, 144], "subpackag": [1, 3, 10, 17, 20, 70, 81, 87, 89, 114, 115, 137], "subrunid": 4, "subsampl": [64, 155], "subsequ": 156, "subset": [11, 13, 16, 85, 105, 107, 109, 113, 121, 156], "substanti": [14, 134], "suggest": [103, 134, 156], "suit": [0, 119, 127, 156, 157, 160], "suitabl": [1, 159], "sum": [82, 86, 97, 103, 107, 109, 113, 123, 136, 156, 161], "sum_pool": [82, 83, 86], "sum_pool_and_distribut": [83, 86], "sum_pool_x": [82, 83, 86], "summar": [76, 78, 96, 97], "summari": [96, 97], "summaris": [156, 161], "summariz": 161, "summarization_indic": 97, "super": [154, 155, 156, 161], "supervis": [123, 127, 161], "support": [0, 7, 38, 127, 153, 154, 155, 156, 157, 160], "suppos": [5, 97, 155, 159], "sure": [153, 154], "swa": 122, "swapabl": 156, "switch": [134, 156, 161], "synchron": 7, "syntax": [61, 103, 134, 155, 156], "system": [148, 156, 161], "t": [4, 38, 60, 132, 134, 154, 155, 156, 159, 161], "t_co": 8, "tabl": [5, 11, 13, 16, 18, 19, 21, 37, 40, 42, 44, 48, 50, 60, 64, 65, 88, 93, 99, 136, 154, 155, 156], "table_nam": [37, 44, 60], "table_without_index": 159, "tablefilt": [34, 37], "tackl": 161, "tag": [135, 153], "take": [38, 86, 97, 121, 153, 155], "talk": 156, "tar": 5, "target": [103, 119, 125, 127, 134, 145, 156, 161], "target_label": [103, 119, 127, 156, 161], "target_norm": 127, "target_pr": [125, 161], "task": [0, 1, 9, 81, 85, 103, 123, 125, 126, 134, 153, 156, 157, 160], "team": [11, 16, 153, 155, 156, 158, 159, 161], "teardown": 9, "technic": [0, 157, 159, 160], "techniqu": [0, 157, 160, 161], "telescop": [0, 1, 156, 157, 159, 160, 161], "tend": 65, "tensor": [11, 13, 16, 72, 82, 84, 85, 86, 92, 94, 96, 97, 99, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 119, 121, 122, 123, 127, 129, 130, 134, 147, 151, 155, 156, 159, 161], "term": [85, 134, 161], "termin": 156, "test": [5, 9, 61, 67, 68, 69, 127, 135, 142, 149, 153, 155, 156, 161], "test_dataload": 9, "test_dataloader_kwarg": [5, 9, 67, 68, 69], "test_dataset": [1, 66], "test_funct": 149, "test_select": [9, 142, 155, 156], "test_siz": 135, "testdataset": [66, 69], "tev": 67, "than": [0, 8, 96, 127, 135, 150, 155, 156, 157, 160, 161], "thei": [71, 74, 77, 96, 154, 155, 156, 161], "them": [0, 1, 35, 72, 81, 87, 107, 127, 155, 156, 157, 159, 160, 161], "themselv": [1, 142, 143, 156, 161], "theo": 85, "therebi": [1, 142, 143, 156, 161], "therefor": [35, 51, 65, 154, 155, 156, 159, 161], "thi": [0, 3, 5, 7, 9, 11, 13, 14, 16, 18, 19, 21, 23, 24, 37, 38, 40, 42, 44, 46, 48, 50, 51, 56, 59, 60, 64, 65, 68, 69, 73, 76, 81, 84, 86, 88, 92, 93, 94, 96, 97, 103, 105, 107, 112, 113, 119, 121, 123, 125, 126, 127, 130, 132, 134, 135, 136, 140, 142, 143, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161], "thing": 156, "thoglu": [119, 127], "those": [21, 32, 130, 155, 156], "thread": 13, "three": [97, 113, 134, 161], "threshold": [0, 76, 157, 160], "through": [0, 97, 125, 126, 127, 134, 154, 156, 157, 160, 161], "throw": 154, "thu": [143, 161], "ti": 155, "time": [0, 4, 60, 82, 84, 86, 92, 96, 97, 105, 121, 126, 130, 136, 150, 155, 156, 157, 159, 160], "time_column": 96, "time_coord": 92, "time_lik": 92, "time_like_weight": 92, "time_series_column": [105, 121], "time_window": 82, "timereconstruct": [124, 126], "tini": 156, "tito": [85, 105, 109], "to_config": 161, "to_csv": [156, 161], "to_dense_adj": 130, "to_parquet": 159, "todo": 156, "togeth": [0, 14, 81, 91, 134, 157, 160], "token": 129, "too": [156, 161], "tool": [0, 1, 157, 160], "top": 161, "torch": [0, 11, 13, 16, 81, 84, 85, 88, 93, 94, 111, 118, 119, 149, 155, 156, 157, 158, 159, 160, 161], "torch_cpu": 158, "torch_geometr": [86, 130, 155, 156, 161], "torch_lightn": 161, "tort": [14, 134], "total": [97, 130, 135, 136, 155, 156, 159], "total_energi": [4, 155, 156, 161], "tqdmprogressbar": 132, "track": [0, 19, 21, 26, 40, 42, 44, 67, 85, 126, 131, 133, 153, 154, 156, 157, 160], "track_length": 4, "tradit": [0, 157, 160], "train": [0, 1, 5, 7, 9, 10, 61, 66, 67, 68, 69, 70, 76, 85, 93, 103, 112, 119, 122, 123, 130, 132, 133, 134, 135, 136, 138, 142, 143, 145, 152, 154, 155, 156, 157, 159, 160], "train_batch": [103, 122], "train_dataload": [9, 103, 156, 161], "train_dataloader_kwarg": [5, 9, 67, 68, 69], "train_ev": 127, "train_select": [142, 155, 156], "train_val_split": 9, "trainabl": 143, "trainer": [103, 132, 135, 156, 161], "trainer_kwarg": 103, "training_config": [137, 139, 156, 161], "training_example_data_sqlit": [138, 155, 156, 161], "training_step": [103, 122], "trainingconfig": [139, 145, 156, 161], "transform": [1, 81, 85, 86, 109, 111, 112, 121, 127, 129, 130, 136, 156, 161], "transform_infer": [127, 156, 161], "transform_prediction_and_target": [127, 156, 161], "transform_support": [127, 156, 161], "transform_target": [127, 156, 161], "transit": 147, "transpar": [142, 143, 153, 156, 161], "transpos": 35, "transpose_list_of_dict": [34, 35], "traverse_and_appli": [139, 144], "treat": [105, 121], "tree": [24, 156], "tri": [24, 38], "triangl": 102, "trident": [67, 102], "trident1211": [98, 102], "tridentsmal": [66, 67], "trigger": [24, 155, 156, 161], "trivial": [38, 127], "true": [37, 60, 65, 76, 84, 85, 88, 93, 96, 105, 107, 109, 111, 112, 113, 118, 130, 132, 134, 136, 148, 154, 155, 156, 161], "trust": [118, 156, 161], "truth": [3, 4, 5, 11, 13, 16, 22, 32, 44, 60, 64, 67, 68, 69, 88, 93, 127, 135, 136, 142, 155, 159, 161], "truth_dict": [88, 93], "truth_label": 155, "truth_tabl": [5, 11, 13, 16, 64, 135, 136, 142, 155, 156], "truthdata": 42, "try": [38, 154], "tum": [26, 33], "tupl": [7, 11, 13, 14, 16, 36, 38, 60, 85, 97, 105, 107, 109, 113, 127, 130, 135, 138, 147], "turn": [97, 153], "tutorial_output": [156, 161], "two": [8, 107, 132, 134, 135, 154, 155, 156, 159], "txt": 158, "type": [0, 5, 7, 8, 9, 11, 13, 14, 16, 18, 19, 20, 21, 32, 34, 35, 36, 42, 44, 50, 51, 52, 53, 54, 59, 60, 61, 63, 64, 65, 71, 82, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160], "typic": [0, 35, 121, 155, 157, 159, 160], "u": [155, 159], "ultra": 155, "unaccur": 134, "unambigu": [142, 143], "unbatch_edge_index": [81, 82], "uncertainti": [126, 156, 161], "uncompress": 155, "under": [0, 156, 157, 159, 160, 161], "unfamiliar": 161, "uniform": [131, 136], "uniformweightfitt": 136, "uninstanti": [85, 111], "union": [0, 7, 8, 9, 11, 13, 16, 24, 35, 38, 46, 48, 50, 51, 52, 53, 54, 56, 71, 72, 74, 76, 77, 78, 82, 85, 86, 88, 93, 94, 97, 103, 105, 107, 113, 119, 123, 127, 142, 145, 148, 154, 157, 159, 160], "uniqu": [11, 13, 16, 60, 96, 97, 130, 142, 156, 159, 161], "unit": [0, 7, 69, 92, 149, 153, 157, 160], "univers": 109, "unlik": 155, "unscal": 161, "untransform": 125, "unzip": 5, "up": [0, 5, 76, 153, 157, 160], "updat": [85, 111, 113, 121, 122, 130, 132, 156, 158, 161], "update_edg": [85, 111], "upgrad": [4, 22, 100, 156, 158], "upon": [119, 161], "us": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 27, 32, 34, 35, 40, 42, 44, 46, 48, 50, 51, 55, 56, 57, 60, 61, 63, 64, 65, 67, 68, 69, 70, 72, 74, 76, 78, 81, 84, 85, 86, 88, 91, 93, 94, 96, 97, 99, 103, 105, 107, 108, 109, 111, 112, 113, 118, 119, 121, 124, 125, 126, 127, 129, 130, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 149, 150, 153, 154, 157, 158, 159, 160], "usabl": [0, 157, 160], "usag": [119, 127, 138], "use_bia": [84, 85], "use_cach": 61, "use_global_featur": [105, 109], "use_post_processing_lay": [105, 109], "user": [0, 5, 81, 103, 132, 155, 156, 157, 158, 160, 161], "usernam": 68, "usual": 155, "util": [1, 3, 17, 20, 35, 36, 37, 38, 58, 59, 60, 61, 81, 87, 89, 131, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 155, 156, 158, 161], "v": 85, "v1": 158, "v4": 158, "val_batch": [103, 122], "val_dataload": [9, 103], "valid": [5, 9, 38, 61, 67, 68, 69, 103, 119, 122, 123, 127, 132, 134, 138, 140, 145, 155, 156, 161], "validate_fil": 50, "validate_task": [103, 119, 123], "validation_dataloader_kwarg": [5, 9, 67, 68, 69], "validation_step": [103, 122], "validationerror": [140, 145], "valu": [11, 13, 16, 32, 35, 60, 65, 84, 85, 86, 88, 91, 92, 93, 94, 97, 111, 113, 127, 130, 133, 134, 138, 140, 161], "valueerror": [24, 118, 119], "var": 126, "var1": 19, "var_n": 19, "variabl": [19, 21, 24, 32, 38, 50, 96, 97, 107, 130, 136, 150, 154, 159, 161], "varieti": 156, "variou": [1, 62, 73, 156], "vast": [123, 127], "vector": [82, 85, 86, 130, 134, 154, 161], "verbos": [46, 48, 51, 56, 103, 123, 132], "verbose_print": 118, "veri": [61, 155, 156, 161], "verifi": [103, 119, 123], "versa": 132, "version": [86, 97, 127, 132, 153, 156, 161], "vertex": [126, 156], "vertex_i": 4, "vertex_x": 4, "vertex_z": 4, "vertexreconstruct": [124, 126], "via": 94, "viabl": 159, "vice": 132, "virtual": 158, "visibl": 126, "visible_energi": 4, "visible_inelast": [4, 126], "visible_inelasticity_pr": 126, "visibleinelasticityreconstruct": [124, 126], "visit": 159, "vmf": 126, "vmf_loss": 134, "vmfs_factor": 134, "volum": 32, "von": 134, "vonmisesfisher2dloss": [131, 134, 156, 161], "vonmisesfisher3dloss": [131, 134], "vonmisesfisherloss": [131, 134], "w": [156, 161], "wa": [0, 7, 112, 155, 156, 157, 159, 160, 161], "wai": [14, 38, 61, 123, 153, 156, 159, 161], "walk": [84, 94, 111, 130], "walk_length": [94, 130], "wandb": [156, 161], "wandb_dir": [156, 161], "wandb_logg": [156, 161], "wandblogg": [156, 161], "want": [155, 156, 158, 159, 161], "warn": [150, 156], "warning_onc": [150, 156], "warranti": [14, 134], "waterdemo81": [98, 102], "wb": 154, "we": [35, 38, 61, 97, 119, 153, 156, 158, 159, 161], "weigel": 111, "weight": [11, 13, 16, 76, 78, 85, 88, 93, 97, 111, 112, 127, 130, 134, 136, 143, 156, 161], "weight_fit": [1, 131], "weight_nam": 136, "weightfitt": [131, 136], "well": [87, 153, 156, 161], "were": 65, "wether": 113, "what": [1, 84, 93, 153, 156, 161], "whatev": 156, "wheel": 158, "when": [0, 11, 13, 14, 16, 35, 37, 60, 65, 76, 85, 105, 107, 109, 113, 121, 133, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161], "whenev": 158, "where": [5, 19, 46, 48, 51, 56, 88, 93, 94, 96, 97, 121, 130, 133, 154, 155, 156, 159, 161], "wherea": [136, 155], "whether": [8, 14, 36, 38, 60, 84, 85, 105, 107, 109, 112, 113, 118, 129, 134, 144, 148, 149, 156], "which": [0, 5, 11, 13, 16, 19, 21, 22, 32, 36, 40, 42, 44, 61, 63, 65, 71, 73, 74, 77, 82, 86, 88, 93, 94, 97, 107, 113, 118, 119, 125, 127, 130, 134, 135, 138, 154, 155, 156, 157, 160, 161], "while": [0, 24, 103, 130, 132, 153, 155, 157, 160], "who": [5, 147, 156, 161], "whom": [14, 134], "whose": 76, "wide": [14, 119, 161], "width": [4, 14], "wiki": 68, "willing": [155, 159], "window": [82, 155, 156], "wisc": 68, "wise": [85, 86], "wish": [0, 71, 153, 157, 160], "with_standard_argu": 138, "within": [32, 82, 85, 86, 91, 107, 113, 156, 161], "without": [1, 14, 91, 94, 96, 111, 134, 155, 158], "work": [0, 4, 36, 105, 153, 154, 155, 156, 157, 160, 161], "worker": [6, 7, 14, 46, 56, 59, 64, 71, 74, 77, 138, 150], "workflow": [0, 157, 160], "would": [153, 155, 156, 159, 161], "wrap": [132, 142, 143], "write": [64, 76, 78, 154, 156, 161], "writer": [1, 3, 48, 63, 64, 65, 159], "written": [48, 71, 154], "wrt": 127, "www": 156, "x": [4, 32, 84, 85, 86, 92, 96, 97, 100, 111, 121, 127, 130, 134, 136, 155, 156, 159, 161], "x8": 155, "x_i": 85, "x_j": 85, "x_low": 136, "xyz": [96, 97, 99, 100, 101, 102, 155, 159], "xyz_coord": 130, "xyzt": 130, "y": [4, 32, 84, 92, 100, 130], "yaml": [140, 141, 156], "yet": 97, "yield": [0, 107, 113, 134, 157, 160], "yml": [61, 138, 142, 143, 155, 156, 161], "you": [65, 71, 84, 119, 142, 143, 153, 155, 156, 158, 159, 161], "your": [94, 119, 153, 154, 155, 156, 158], "yourself": 153, "z": [4, 32, 84, 92, 96, 97, 100, 130], "z_name": 96, "z_offset": [96, 97], "z_scale": [96, 97], "zenith": [4, 126, 133, 156, 161], "zenith_kappa": 126, "zenith_kei": 133, "zenith_pr": 126, "zenithreconstruct": [124, 126], "zenithreconstructionwithkappa": [124, 126, 156, 161], "zero": 94, "\u00f8rs\u00f8e": [0, 157, 160]}, "titles": ["Usage", "API", "constants", "data", "constants", "curated_datamodule", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "samplers", "sqlite", "sqlite_dataset", "extractors", "combine_extractors", "extractor", "icecube", "i3extractor", "i3featureextractor", "i3filtermapextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "internal", "parquet_extractor", "liquido", "h5_extractor", "prometheus", "prometheus_extractor", "parquet", "deprecated_methods", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "internal_parquet_reader", "liquido_reader", "prometheus_reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "datasets", "prometheus_datasets", "snowstorm_dataset", "test_dataset", "deployment", "deployer", "deployment_module", "i3modules", "deprecated_methods", "icecube", "cleaning_module", "i3deployer", "inference_module", "exceptions", "exceptions", "models", "coarsening", "components", "embedding", "layers", "pool", "data_representation", "data_representation", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "detector", "detector", "icecube", "liquido", "prometheus", "easy_model", "gnn", "RNN_tito", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "grit", "icemix", "particlenet", "graphs", "edges", "minkowski", "nodes", "model", "normalizing_flow", "rnn", "node_rnn", "standard_averaged_model", "standard_model", "task", "classification", "reconstruction", "task", "transformer", "iseecube", "utils", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contributing To GraphNeT", "Data Conversion in GraphNeT", "Datasets In GraphNeT", "GraphNeT tutorial", "GraphNeT", "Installation", "Integrating New Experiments into GraphNeT", "GraphNeT", "Models In GraphNeT", "&lt;no title&gt;"], "titleterms": {"1": 159, "2": 159, "In": [155, 161], "The": [156, 161], "To": 153, "acknowledg": 0, "ad": [155, 156, 159, 161], "advanc": 156, "api": 1, "appendix": 156, "appli": 159, "argpars": 138, "backbon": 161, "base_config": 140, "befor": 159, "callback": 132, "checkpoint": 161, "choos": 155, "class": [156, 159, 161], "classif": 125, "cleaning_modul": 76, "coarsen": 82, "code": 153, "collect": 35, "combin": [155, 156], "combine_extractor": 18, "compon": 83, "config": 139, "configur": 141, "constant": [2, 4], "content": 156, "contribut": 153, "convent": 153, "convers": 154, "convnet": 106, "creat": 156, "curated_datamodul": 5, "custom": [155, 156], "cvmf": 158, "data": [3, 154, 159], "data_represent": [87, 88], "dataclass": 6, "dataconfig": 156, "dataconvert": [7, 48, 154], "dataload": 8, "datamodul": 9, "dataset": [10, 11, 66, 155, 156], "dataset_config": 142, "datasetconfig": 156, "decor": 146, "deploy": [70, 71], "deployment_modul": 72, "deprecated_method": [46, 56, 74], "deprecation_tool": 147, "detector": [98, 99, 159], "dynedg": 107, "dynedge_jinst": 108, "dynedge_kaggle_tito": 109, "easy_model": 103, "edg": [90, 91, 115], "embed": 84, "energi": 161, "event": 155, "exampl": [156, 159, 161], "except": [79, 80], "experi": [159, 161], "extractor": [17, 19, 154, 159], "filesi": 148, "frame": 36, "function": 156, "geometri": 159, "github": 153, "gnn": [104, 110], "graph": [89, 94, 114], "graph_definit": 93, "graphdefinit": 161, "graphnet": 156, "graphnet_file_read": 50, "graphnet_writ": 63, "graphnetfileread": 159, "graphnetgraphnet": [153, 154, 155, 157, 159, 160, 161], "grit": 111, "h5_extractor": 42, "i3_filt": 37, "i3deploy": 77, "i3extractor": 21, "i3featureextractor": 22, "i3filtermapextractor": 23, "i3genericextractor": 24, "i3hybridrecoextractor": 25, "i3modul": 73, "i3ntmuonlabelsextractor": 26, "i3particleextractor": 27, "i3pisaextractor": 28, "i3quesoextractor": 29, "i3read": 51, "i3retroextractor": 30, "i3splinempeextractor": 31, "i3truthextractor": 32, "i3tumextractor": 33, "icecub": [20, 75, 100, 158], "icemix": 112, "implement": [155, 159], "import": 149, "index": 159, "inference_modul": 78, "instal": 158, "instanti": 161, "integr": 159, "intern": 39, "internal_parquet_read": 52, "introduct": 156, "iseecub": 129, "issu": 153, "label": [133, 155, 156], "layer": 85, "liquido": [41, 101], "liquido_read": 53, "load": 161, "log": 150, "loss_funct": 134, "math": 151, "minkowski": [92, 116], "model": [81, 118, 156, 161], "model_config": 143, "modelconfig": [156, 161], "multi": 159, "multipl": [155, 156], "new": [155, 159], "node": [95, 96, 117], "node_rnn": 121, "normalizing_flow": 119, "overview": 156, "own": [159, 161], "parquet": [12, 45], "parquet_dataset": 13, "parquet_extractor": 40, "parquet_to_sqlit": 58, "parquet_writ": 64, "parquetdataset": 155, "pars": 144, "particlenet": 113, "pool": 86, "pre_configur": 47, "prometheu": [43, 102], "prometheus_dataset": 67, "prometheus_extractor": 44, "prometheus_read": 54, "pull": 153, "qualiti": 153, "quick": 158, "random": 59, "reader": [49, 154], "reconstruct": [126, 161], "reproduc": 156, "request": 153, "rnn": 120, "rnn_tito": 105, "sampler": 14, "save": 161, "select": 155, "snowstorm_dataset": 68, "sqlite": [15, 55], "sqlite_dataset": 16, "sqlite_util": 60, "sqlite_writ": 65, "sqlitedataset": [155, 156], "src": 152, "standard_averaged_model": 122, "standard_model": 123, "standardmodel": [156, 161], "start": 158, "state_dict": 161, "string_selection_resolv": 61, "subset": 155, "support": 159, "syntax": 161, "tabl": 159, "task": [124, 127, 161], "test_dataset": 69, "track": 161, "train": [131, 161], "training_config": 145, "transform": 128, "truth": 156, "tutori": 156, "type": 38, "us": [155, 156, 161], "usag": 0, "util": [34, 57, 97, 130, 135, 137], "v": 155, "weight_fit": 136, "write": 159, "writer": [62, 154], "your": [159, 161]}})