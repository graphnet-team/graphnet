Search.setIndex({"alltitles": {"1) Adding Support for Your Data": [[151, "adding-support-for-your-data"]], "2) Implementing a Detector Class": [[151, "implementing-a-detector-class"]], "API": [[1, null]], "Acknowledgements": [[0, "acknowledgements"]], "Adding Your Own Model": [[153, "adding-your-own-model"]], "Adding custom Labels": [[147, "adding-custom-labels"]], "Adding custom truth labels": [[148, "adding-custom-truth-labels"]], "Advanced Functionality in SQLiteDataset": [[148, "advanced-functionality-in-sqlitedataset"]], "Appendix": [[148, "appendix"]], "Choosing a subset of events using selection": [[147, "choosing-a-subset-of-events-using-selection"]], "Code quality": [[145, "code-quality"]], "Combining Multiple Datasets": [[147, "combining-multiple-datasets"], [148, "combining-multiple-datasets"]], "Contents": [[148, "contents"]], "Contributing To GraphNeTgraphnet": [[145, null]], "Conventions": [[145, "conventions"]], "Creating reproducible Datasets using DatasetConfig": [[148, "creating-reproducible-datasets-using-datasetconfig"]], "Creating reproducible Models using ModelConfig": [[148, "creating-reproducible-models-using-modelconfig"]], "Data Conversion in GraphNeTgraphnet": [[146, null]], "DataConverter": [[146, "dataconverter"]], "Dataset": [[147, "dataset"]], "Datasets In GraphNeTgraphnet": [[147, null]], "Example DataConfig": [[148, "example-dataconfig"]], "Example ModelConfig": [[148, "example-modelconfig"]], "Example of geometry table before applying multi-index": [[151, "id1"]], "Example: Energy Reconstruction using ModelConfig": [[153, "example-energy-reconstruction-using-modelconfig"]], "Experiment Tracking": [[153, "experiment-tracking"]], "Extractors": [[146, "extractors"]], "GitHub issues": [[145, "github-issues"]], "GraphDefinition, backbone & Task": [[153, "graphdefinition-backbone-task"]], "GraphNeT tutorial": [[148, null]], "GraphNeTgraphnet": [[149, null], [152, null]], "Implementing a new Dataset": [[147, "implementing-a-new-dataset"]], "Installation": [[150, null]], "Installation in CVMFS (IceCube)": [[150, "installation-in-cvmfs-icecube"]], "Instantiating a StandardModel": [[153, "instantiating-a-standardmodel"]], "Integrating New Experiments into GraphNeTgraphnet": [[151, null]], "Introduction": [[148, "introduction"]], "Model.save": [[153, "model-save"]], "ModelConfig and state_dict": [[153, "modelconfig-and-state-dict"]], "Models In GraphNeTgraphnet": [[153, null]], "Overview of GraphNeT": [[148, "overview-of-graphnet"]], "Pull requests": [[145, "pull-requests"]], "Quick Start": [[150, "quick-start"]], "RNN_tito": [[92, null]], "Readers": [[146, "readers"]], "SQLiteDataset & ParquetDataset": [[147, "sqlitedataset-parquetdataset"]], "SQLiteDataset vs. ParquetDataset": [[147, "sqlitedataset-vs-parquetdataset"]], "Saving, loading, and checkpointing Models": [[153, "saving-loading-and-checkpointing-models"]], "The Model class": [[148, "the-model-class"], [153, "the-model-class"]], "The StandardModel class": [[148, "the-standardmodel-class"], [153, "the-standardmodel-class"]], "Training Syntax for StandardModel": [[153, "training-syntax-for-standardmodel"]], "Usage": [[0, null]], "Using checkpoints": [[153, "using-checkpoints"]], "Writers": [[146, "writers"]], "Writing your own Extractor and GraphNeTFileReader": [[151, "writing-your-own-extractor-and-graphnetfilereader"]], "argparse": [[130, null]], "base_config": [[132, null]], "callbacks": [[124, null]], "classification": [[117, null]], "cleaning_module": [[74, null]], "coarsening": [[80, null]], "collections": [[34, null]], "combine_extractors": [[18, null]], "components": [[81, null]], "config": [[131, null]], "configurable": [[133, null]], "constants": [[2, null], [4, null]], "convnet": [[93, null]], "curated_datamodule": [[5, null]], "data": [[3, null]], "dataclasses": [[6, null]], "dataconverter": [[7, null]], "dataconverters": [[47, null]], "dataloader": [[8, null]], "datamodule": [[9, null]], "dataset": [[10, null], [11, null]], "dataset_config": [[134, null]], "datasets": [[65, null]], "decorators": [[138, null]], "deployer": [[69, null]], "deployment": [[68, null]], "deployment_module": [[70, null]], "deprecated_methods": [[45, null], [55, null], [72, null]], "deprecation_tools": [[139, null]], "detector": [[85, null], [86, null]], "dynedge": [[94, null]], "dynedge_jinst": [[95, null]], "dynedge_kaggle_tito": [[96, null]], "easy_model": [[90, null]], "edges": [[102, null], [103, null]], "embedding": [[82, null]], "exceptions": [[77, null], [78, null]], "extractor": [[19, null]], "extractors": [[17, null]], "filesys": [[140, null]], "frames": [[35, null]], "gnn": [[91, null], [97, null]], "graph_definition": [[105, null]], "graphnet_file_reader": [[49, null]], "graphnet_writer": [[62, null]], "graphs": [[101, null], [106, null]], "grit": [[98, null]], "h5_extractor": [[41, null]], "i3_filters": [[36, null]], "i3deployer": [[75, null]], "i3extractor": [[21, null]], "i3featureextractor": [[22, null]], "i3genericextractor": [[23, null]], "i3hybridrecoextractor": [[24, null]], "i3modules": [[71, null]], "i3ntmuonlabelsextractor": [[25, null]], "i3particleextractor": [[26, null]], "i3pisaextractor": [[27, null]], "i3quesoextractor": [[28, null]], "i3reader": [[50, null]], "i3retroextractor": [[29, null]], "i3splinempeextractor": [[30, null]], "i3truthextractor": [[31, null]], "i3tumextractor": [[32, null]], "icecube": [[20, null], [73, null], [87, null]], "icemix": [[99, null]], "imports": [[141, null]], "inference_module": [[76, null]], "internal": [[38, null]], "internal_parquet_reader": [[51, null]], "iseecube": [[121, null]], "labels": [[125, null]], "layers": [[83, null]], "liquido": [[40, null], [88, null]], "liquido_reader": [[52, null]], "logging": [[142, null]], "loss_functions": [[126, null]], "maths": [[143, null]], "minkowski": [[104, null]], "model": [[110, null]], "model_config": [[135, null]], "models": [[79, null]], "node_rnn": [[113, null]], "nodes": [[107, null], [108, null]], "normalizing_flow": [[111, null]], "parquet": [[12, null], [44, null]], "parquet_dataset": [[13, null]], "parquet_extractor": [[39, null]], "parquet_to_sqlite": [[57, null]], "parquet_writer": [[63, null]], "parsing": [[136, null]], "particlenet": [[100, null]], "pool": [[84, null]], "pre_configured": [[46, null]], "prometheus": [[42, null], [89, null]], "prometheus_datasets": [[66, null]], "prometheus_extractor": [[43, null]], "prometheus_reader": [[53, null]], "random": [[58, null]], "readers": [[48, null]], "reconstruction": [[118, null]], "rnn": [[112, null]], "samplers": [[14, null]], "sqlite": [[15, null], [54, null]], "sqlite_dataset": [[16, null]], "sqlite_utilities": [[59, null]], "sqlite_writer": [[64, null]], "src": [[144, null]], "standard_averaged_model": [[114, null]], "standard_model": [[115, null]], "string_selection_resolver": [[60, null]], "task": [[116, null], [119, null]], "test_dataset": [[67, null]], "training": [[123, null]], "training_config": [[137, null]], "transformer": [[120, null]], "types": [[37, null]], "utilities": [[33, null], [56, null], [129, null]], "utils": [[109, null], [122, null], [127, null]], "weight_fitting": [[128, null]], "writers": [[61, null]]}, "docnames": ["about/about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.curated_datamodule", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.samplers", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.combine_extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.extractors.liquido", "api/graphnet.data.extractors.liquido.h5_extractor", "api/graphnet.data.extractors.prometheus", "api/graphnet.data.extractors.prometheus.prometheus_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.readers.liquido_reader", "api/graphnet.data.readers.prometheus_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.datasets", "api/graphnet.datasets.prometheus_datasets", "api/graphnet.datasets.test_dataset", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.liquido", "api/graphnet.models.detector.prometheus", "api/graphnet.models.easy_model", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.grit", "api/graphnet.models.gnn.icemix", "api/graphnet.models.gnn.particlenet", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.normalizing_flow", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.transformer", "api/graphnet.models.transformer.iseecube", "api/graphnet.models.utils", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute/contribute", "data_conversion/data_conversion", "datasets/datasets", "getting_started/getting_started", "index", "installation/install", "integration/integration", "intro/intro", "models/models", "substitutions"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["about/about.rst", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.curated_datamodule.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.samplers.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.combine_extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.extractors.liquido.rst", "api/graphnet.data.extractors.liquido.h5_extractor.rst", "api/graphnet.data.extractors.prometheus.rst", "api/graphnet.data.extractors.prometheus.prometheus_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.readers.liquido_reader.rst", "api/graphnet.data.readers.prometheus_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.datasets.rst", "api/graphnet.datasets.prometheus_datasets.rst", "api/graphnet.datasets.test_dataset.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.liquido.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.easy_model.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.grit.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.gnn.particlenet.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.normalizing_flow.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.transformer.rst", "api/graphnet.models.transformer.iseecube.rst", "api/graphnet.models.utils.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute/contribute.rst", "data_conversion/data_conversion.rst", "datasets/datasets.rst", "getting_started/getting_started.md", "index.rst", "installation/install.rst", "integration/integration.rst", "intro/intro.rst", "models/models.rst", "substitutions.rst"], "indexentries": {"accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors", false]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions", false]], "add_charge_threshold_summary() (graphnet.models.graphs.utils.cluster_and_pad method)": [[109, "graphnet.models.graphs.utils.cluster_and_pad.add_charge_threshold_summary", false]], "add_counts() (graphnet.models.graphs.utils.cluster_and_pad method)": [[109, "graphnet.models.graphs.utils.cluster_and_pad.add_counts", false]], "add_full_rrwp() (in module graphnet.models.utils)": [[122, "graphnet.models.utils.add_full_rrwp", false]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[11, "graphnet.data.dataset.dataset.Dataset.add_label", false]], "add_mean() (graphnet.models.graphs.utils.cluster_and_pad method)": [[109, "graphnet.models.graphs.utils.cluster_and_pad.add_mean", false]], "add_percentile_summary() (graphnet.models.graphs.utils.cluster_and_pad method)": [[109, "graphnet.models.graphs.utils.cluster_and_pad.add_percentile_summary", false]], "add_std() (graphnet.models.graphs.utils.cluster_and_pad method)": [[109, "graphnet.models.graphs.utils.cluster_and_pad.add_std", false]], "add_sum_charge() (graphnet.models.graphs.utils.cluster_and_pad method)": [[109, "graphnet.models.graphs.utils.cluster_and_pad.add_sum_charge", false]], "arca115 (class in graphnet.models.detector.prometheus)": [[89, "graphnet.models.detector.prometheus.ARCA115", false]], "argumentparser (class in graphnet.utilities.argparse)": [[130, "graphnet.utilities.argparse.ArgumentParser", false]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[135, "graphnet.utilities.config.model_config.ModelConfig.arguments", false]], "array_to_sequence() (in module graphnet.models.utils)": [[122, "graphnet.models.utils.array_to_sequence", false]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[132, "graphnet.utilities.config.base_config.BaseConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[135, "graphnet.utilities.config.model_config.ModelConfig.as_dict", false]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.attach_index", false]], "attention_rel (class in graphnet.models.components.layers)": [[83, "graphnet.models.components.layers.Attention_rel", false]], "attributecoarsening (class in graphnet.models.coarsening)": [[80, "graphnet.models.coarsening.AttributeCoarsening", false]], "available_backends (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.available_backends", false]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[118, "graphnet.models.task.reconstruction.AzimuthReconstruction", false]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[118, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa", false]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[126, "graphnet.training.loss_functions.LogCMK.backward", false]], "baikalgvd8 (class in graphnet.models.detector.prometheus)": [[89, "graphnet.models.detector.prometheus.BaikalGVD8", false]], "baikalgvdsmall (class in graphnet.datasets.prometheus_datasets)": [[66, "graphnet.datasets.prometheus_datasets.BaikalGVDSmall", false]], "baseconfig (class in graphnet.utilities.config.base_config)": [[132, "graphnet.utilities.config.base_config.BaseConfig", false]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[117, "graphnet.models.task.classification.BinaryClassificationTask", false]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[117, "graphnet.models.task.classification.BinaryClassificationTaskLogits", false]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[126, "graphnet.training.loss_functions.BinaryCrossEntropyLoss", false]], "bjoernlow (class in graphnet.training.weight_fitting)": [[128, "graphnet.training.weight_fitting.BjoernLow", false]], "block (class in graphnet.models.components.layers)": [[83, "graphnet.models.components.layers.Block", false]], "block_rel (class in graphnet.models.components.layers)": [[83, "graphnet.models.components.layers.Block_rel", false]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion", false]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[122, "graphnet.models.utils.calculate_distance_matrix", false]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[122, "graphnet.models.utils.calculate_xyzt_homophily", false]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python", false]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python", false]], "chunk_sizes (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset property)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.chunk_sizes", false]], "chunks (graphnet.data.dataset.samplers.randomchunksampler property)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler.chunks", false]], "citation (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.citation", false]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[135, "graphnet.utilities.config.model_config.ModelConfig.class_name", false]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[113, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object", false]], "cluster_and_pad (class in graphnet.models.graphs.utils)": [[109, "graphnet.models.graphs.utils.cluster_and_pad", false]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[109, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles", false]], "coarsening (class in graphnet.models.coarsening)": [[80, "graphnet.models.coarsening.Coarsening", false]], "collate_fn() (in module graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.collate_fn", false]], "collate_fn() (in module graphnet.training.utils)": [[127, "graphnet.training.utils.collate_fn", false]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[127, "graphnet.training.utils.collator_sequence_buckleting", false]], "columnmissingexception": [[78, "graphnet.exceptions.exceptions.ColumnMissingException", false]], "combinedextractor (class in graphnet.data.extractors.combine_extractors)": [[18, "graphnet.data.extractors.combine_extractors.CombinedExtractor", false]], "comments (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.comments", false]], "compute_loss() (graphnet.models.easy_model.easysyntax method)": [[90, "graphnet.models.easy_model.EasySyntax.compute_loss", false]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[115, "graphnet.models.standard_model.StandardModel.compute_loss", false]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[119, "graphnet.models.task.task.LearnedTask.compute_loss", false]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[119, "graphnet.models.task.task.StandardLearnedTask.compute_loss", false]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[104, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat", false]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[11, "graphnet.data.dataset.dataset.Dataset.concatenate", false]], "config (graphnet.utilities.config.configurable.configurable property)": [[133, "graphnet.utilities.config.configurable.Configurable.config", false]], "configurable (class in graphnet.utilities.config.configurable)": [[133, "graphnet.utilities.config.configurable.Configurable", false]], "configure_optimizers() (graphnet.models.easy_model.easysyntax method)": [[90, "graphnet.models.easy_model.EasySyntax.configure_optimizers", false]], "contains() (graphnet.utilities.argparse.options method)": [[130, "graphnet.utilities.argparse.Options.contains", false]], "convnet (class in graphnet.models.gnn.convnet)": [[93, "graphnet.models.gnn.convnet.ConvNet", false]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.create_table", false]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql", false]], "creator (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.creator", false]], "critical() (graphnet.utilities.logging.logger method)": [[142, "graphnet.utilities.logging.Logger.critical", false]], "crossentropyloss (class in graphnet.training.loss_functions)": [[126, "graphnet.training.loss_functions.CrossEntropyLoss", false]], "curateddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.CuratedDataset", false]], "customdomcoarsening (class in graphnet.models.coarsening)": [[80, "graphnet.models.coarsening.CustomDOMCoarsening", false]], "data_source (graphnet.data.dataset.samplers.randomchunksampler property)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler.data_source", false]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.database_exists", false]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.database_table_exists", false]], "dataconverter (class in graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.DataConverter", false]], "dataloader (class in graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.DataLoader", false]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[137, "graphnet.utilities.config.training_config.TrainingConfig.dataloader", false]], "dataset (class in graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.Dataset", false]], "dataset_dir (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.dataset_dir", false]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig", false]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta", false]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta", false]], "debug() (graphnet.utilities.logging.logger method)": [[142, "graphnet.utilities.logging.Logger.debug", false]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE", false]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE", false]], "deepice (class in graphnet.models.gnn.icemix)": [[99, "graphnet.models.gnn.icemix.DeepIce", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[117, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[117, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[118, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[118, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[118, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[118, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[118, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[118, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[119, "graphnet.models.task.task.IdentityTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.standardflowtask property)": [[119, "graphnet.models.task.task.StandardFlowTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.task property)": [[119, "graphnet.models.task.task.Task.default_prediction_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[117, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[117, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[118, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[118, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[118, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[118, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[118, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[118, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[119, "graphnet.models.task.task.IdentityTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.task property)": [[119, "graphnet.models.task.task.Task.default_target_labels", false]], "deployer (class in graphnet.deployment.deployer)": [[69, "graphnet.deployment.deployer.Deployer", false]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[70, "graphnet.deployment.deployment_module.DeploymentModule", false]], "description() (graphnet.data.curated_datamodule.curateddataset method)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.description", false]], "detector (class in graphnet.models.detector.detector)": [[86, "graphnet.models.detector.detector.Detector", false]], "direction (class in graphnet.training.labels)": [[125, "graphnet.training.labels.Direction", false]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[118, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa", false]], "do_shuffle() (in module graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.do_shuffle", false]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[80, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening", false]], "domcoarsening (class in graphnet.models.coarsening)": [[80, "graphnet.models.coarsening.DOMCoarsening", false]], "droppath (class in graphnet.models.components.layers)": [[83, "graphnet.models.components.layers.DropPath", false]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[132, "graphnet.utilities.config.base_config.BaseConfig.dump", false]], "dynedge (class in graphnet.models.gnn.dynedge)": [[94, "graphnet.models.gnn.dynedge.DynEdge", false]], "dynedgeconv (class in graphnet.models.components.layers)": [[83, "graphnet.models.components.layers.DynEdgeConv", false]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[95, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST", false]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[96, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO", false]], "dyntrans (class in graphnet.models.components.layers)": [[83, "graphnet.models.components.layers.DynTrans", false]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[137, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience", false]], "easysyntax (class in graphnet.models.easy_model)": [[90, "graphnet.models.easy_model.EasySyntax", false]], "edgeconvtito (class in graphnet.models.components.layers)": [[83, "graphnet.models.components.layers.EdgeConvTito", false]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[103, "graphnet.models.graphs.edges.edges.EdgeDefinition", false]], "edgelessgraph (class in graphnet.models.graphs.graphs)": [[106, "graphnet.models.graphs.graphs.EdgelessGraph", false]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[118, "graphnet.models.task.reconstruction.EnergyReconstruction", false]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[118, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower", false]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[118, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty", false]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[118, "graphnet.models.task.reconstruction.EnergyTCReconstruction", false]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.EnsembleDataset", false]], "ensembleloss (class in graphnet.training.loss_functions)": [[126, "graphnet.training.loss_functions.EnsembleLoss", false]], "eps_like() (in module graphnet.utilities.maths)": [[143, "graphnet.utilities.maths.eps_like", false]], "erdahosteddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.ERDAHostedDataset", false]], "error() (graphnet.utilities.logging.logger method)": [[142, "graphnet.utilities.logging.Logger.error", false]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[126, "graphnet.training.loss_functions.EuclideanDistanceLoss", false]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[103, "graphnet.models.graphs.edges.edges.EuclideanEdges", false]], "event_truth (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.event_truth", false]], "events (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.events", false]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[62, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes", false]], "experiment (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.experiment", false]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[83, "graphnet.models.components.layers.DropPath.extra_repr", false]], "extra_repr() (graphnet.models.model.model method)": [[110, "graphnet.models.model.Model.extra_repr", false]], "extra_repr_recursive() (graphnet.models.model.model method)": [[110, "graphnet.models.model.Model.extra_repr_recursive", false]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names", false]], "extractor (class in graphnet.data.extractors.extractor)": [[19, "graphnet.data.extractors.extractor.Extractor", false]], "feature_map() (graphnet.models.detector.detector.detector method)": [[86, "graphnet.models.detector.detector.Detector.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[87, "graphnet.models.detector.icecube.IceCube86.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[87, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[87, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[87, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map", false]], "feature_map() (graphnet.models.detector.liquido.liquido_v1 method)": [[88, "graphnet.models.detector.liquido.LiquidO_v1.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.arca115 method)": [[89, "graphnet.models.detector.prometheus.ARCA115.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.baikalgvd8 method)": [[89, "graphnet.models.detector.prometheus.BaikalGVD8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecube86prometheus method)": [[89, "graphnet.models.detector.prometheus.IceCube86Prometheus.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubedeepcore8 method)": [[89, "graphnet.models.detector.prometheus.IceCubeDeepCore8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubegen2 method)": [[89, "graphnet.models.detector.prometheus.IceCubeGen2.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubeupgrade7 method)": [[89, "graphnet.models.detector.prometheus.IceCubeUpgrade7.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icedemo81 method)": [[89, "graphnet.models.detector.prometheus.IceDemo81.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[89, "graphnet.models.detector.prometheus.ORCA150.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150superdense method)": [[89, "graphnet.models.detector.prometheus.ORCA150SuperDense.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.ponetriangle method)": [[89, "graphnet.models.detector.prometheus.PONETriangle.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.trident1211 method)": [[89, "graphnet.models.detector.prometheus.TRIDENT1211.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.waterdemo81 method)": [[89, "graphnet.models.detector.prometheus.WaterDemo81.feature_map", false]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES", false]], "features (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.features", false]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig.features", false]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[62, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension", false]], "file_handlers (graphnet.utilities.logging.logger property)": [[142, "graphnet.utilities.logging.Logger.file_handlers", false]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[142, "graphnet.utilities.logging.RepeatFilter.filter", false]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files", false]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[50, "graphnet.data.readers.i3reader.I3Reader.find_files", false]], "find_files() (graphnet.data.readers.internal_parquet_reader.parquetreader method)": [[51, "graphnet.data.readers.internal_parquet_reader.ParquetReader.find_files", false]], "find_files() (graphnet.data.readers.liquido_reader.liquidoreader method)": [[52, "graphnet.data.readers.liquido_reader.LiquidOReader.find_files", false]], "find_files() (graphnet.data.readers.prometheus_reader.prometheusreader method)": [[53, "graphnet.data.readers.prometheus_reader.PrometheusReader.find_files", false]], "find_i3_files() (in module graphnet.utilities.filesys)": [[140, "graphnet.utilities.filesys.find_i3_files", false]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[137, "graphnet.utilities.config.training_config.TrainingConfig.fit", false]], "fit() (graphnet.models.easy_model.easysyntax method)": [[90, "graphnet.models.easy_model.EasySyntax.fit", false]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[128, "graphnet.training.weight_fitting.WeightFitter.fit", false]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary", false]], "forward() (graphnet.models.coarsening.coarsening method)": [[80, "graphnet.models.coarsening.Coarsening.forward", false]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[82, "graphnet.models.components.embedding.FourierEncoder.forward", false]], "forward() (graphnet.models.components.embedding.linearedgeencoder method)": [[82, "graphnet.models.components.embedding.LinearEdgeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.linearnodeencoder method)": [[82, "graphnet.models.components.embedding.LinearNodeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.rrwplinearedgeencoder method)": [[82, "graphnet.models.components.embedding.RRWPLinearEdgeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.rrwplinearnodeencoder method)": [[82, "graphnet.models.components.embedding.RRWPLinearNodeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.rwselinearnodeencoder method)": [[82, "graphnet.models.components.embedding.RWSELinearNodeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[82, "graphnet.models.components.embedding.SinusoidalPosEmb.forward", false]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[82, "graphnet.models.components.embedding.SpacetimeEncoder.forward", false]], "forward() (graphnet.models.components.layers.attention_rel method)": [[83, "graphnet.models.components.layers.Attention_rel.forward", false]], "forward() (graphnet.models.components.layers.block method)": [[83, "graphnet.models.components.layers.Block.forward", false]], "forward() (graphnet.models.components.layers.block_rel method)": [[83, "graphnet.models.components.layers.Block_rel.forward", false]], "forward() (graphnet.models.components.layers.droppath method)": [[83, "graphnet.models.components.layers.DropPath.forward", false]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[83, "graphnet.models.components.layers.DynEdgeConv.forward", false]], "forward() (graphnet.models.components.layers.dyntrans method)": [[83, "graphnet.models.components.layers.DynTrans.forward", false]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[83, "graphnet.models.components.layers.EdgeConvTito.forward", false]], "forward() (graphnet.models.components.layers.gritsparsemha method)": [[83, "graphnet.models.components.layers.GritSparseMHA.forward", false]], "forward() (graphnet.models.components.layers.grittransformerlayer method)": [[83, "graphnet.models.components.layers.GritTransformerLayer.forward", false]], "forward() (graphnet.models.components.layers.mlp method)": [[83, "graphnet.models.components.layers.Mlp.forward", false]], "forward() (graphnet.models.components.layers.sangraphhead method)": [[83, "graphnet.models.components.layers.SANGraphHead.forward", false]], "forward() (graphnet.models.detector.detector.detector method)": [[86, "graphnet.models.detector.detector.Detector.forward", false]], "forward() (graphnet.models.easy_model.easysyntax method)": [[90, "graphnet.models.easy_model.EasySyntax.forward", false]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[93, "graphnet.models.gnn.convnet.ConvNet.forward", false]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[94, "graphnet.models.gnn.dynedge.DynEdge.forward", false]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[95, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward", false]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[96, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward", false]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[97, "graphnet.models.gnn.gnn.GNN.forward", false]], "forward() (graphnet.models.gnn.grit.grit method)": [[98, "graphnet.models.gnn.grit.GRIT.forward", false]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[99, "graphnet.models.gnn.icemix.DeepIce.forward", false]], "forward() (graphnet.models.gnn.particlenet.particlenet method)": [[100, "graphnet.models.gnn.particlenet.ParticleNeT.forward", false]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[92, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward", false]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[103, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward", false]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[105, "graphnet.models.graphs.graph_definition.GraphDefinition.forward", false]], "forward() (graphnet.models.graphs.graphs.knngraphrrwp method)": [[106, "graphnet.models.graphs.graphs.KNNGraphRRWP.forward", false]], "forward() (graphnet.models.graphs.graphs.knngraphrwse method)": [[106, "graphnet.models.graphs.graphs.KNNGraphRWSE.forward", false]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[108, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward", false]], "forward() (graphnet.models.normalizing_flow.normalizingflow method)": [[111, "graphnet.models.normalizing_flow.NormalizingFlow.forward", false]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[113, "graphnet.models.rnn.node_rnn.Node_RNN.forward", false]], "forward() (graphnet.models.standard_model.standardmodel method)": [[115, "graphnet.models.standard_model.StandardModel.forward", false]], "forward() (graphnet.models.task.task.learnedtask method)": [[119, "graphnet.models.task.task.LearnedTask.forward", false]], "forward() (graphnet.models.task.task.standardflowtask method)": [[119, "graphnet.models.task.task.StandardFlowTask.forward", false]], "forward() (graphnet.models.transformer.iseecube.iseecube method)": [[121, "graphnet.models.transformer.iseecube.ISeeCube.forward", false]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[126, "graphnet.training.loss_functions.LogCMK.forward", false]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[126, "graphnet.training.loss_functions.LossFunction.forward", false]], "fourierencoder (class in graphnet.models.components.embedding)": [[82, "graphnet.models.components.embedding.FourierEncoder", false]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo", false]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise", false]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[11, "graphnet.data.dataset.dataset.Dataset.from_config", false]], "from_config() (graphnet.models.model.model class method)": [[110, "graphnet.models.model.Model.from_config", false]], "from_config() (graphnet.utilities.config.configurable.configurable method)": [[133, "graphnet.utilities.config.configurable.Configurable.from_config", false]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[8, "graphnet.data.dataloader.DataLoader.from_dataset_config", false]], "full_edge_index() (in module graphnet.models.utils)": [[122, "graphnet.models.utils.full_edge_index", false]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[109, "graphnet.models.graphs.utils.gather_cluster_sequence", false]], "gather_len_matched_buckets() (in module graphnet.data.dataset.samplers)": [[14, "graphnet.data.dataset.samplers.gather_len_matched_buckets", false]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.gcd_file", false]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.gcd_file", false]], "geometry_table (graphnet.models.detector.detector.detector property)": [[86, "graphnet.models.detector.detector.Detector.geometry_table", false]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[87, "graphnet.models.detector.icecube.IceCube86.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubekaggle attribute)": [[87, "graphnet.models.detector.icecube.IceCubeKaggle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[87, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.liquido.liquido_v1 attribute)": [[88, "graphnet.models.detector.liquido.LiquidO_v1.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.arca115 attribute)": [[89, "graphnet.models.detector.prometheus.ARCA115.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[89, "graphnet.models.detector.prometheus.BaikalGVD8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[89, "graphnet.models.detector.prometheus.IceCube86Prometheus.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[89, "graphnet.models.detector.prometheus.IceCubeDeepCore8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[89, "graphnet.models.detector.prometheus.IceCubeGen2.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[89, "graphnet.models.detector.prometheus.IceCubeUpgrade7.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icedemo81 attribute)": [[89, "graphnet.models.detector.prometheus.IceDemo81.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[89, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150superdense attribute)": [[89, "graphnet.models.detector.prometheus.ORCA150SuperDense.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.ponetriangle attribute)": [[89, "graphnet.models.detector.prometheus.PONETriangle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.trident1211 attribute)": [[89, "graphnet.models.detector.prometheus.TRIDENT1211.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[89, "graphnet.models.detector.prometheus.WaterDemo81.geometry_table_path", false]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[132, "graphnet.utilities.config.base_config.get_all_argument_values", false]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[136, "graphnet.utilities.config.parsing.get_all_grapnet_classes", false]], "get_fields() (in module graphnet.models.utils)": [[122, "graphnet.models.utils.get_fields", false]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[136, "graphnet.utilities.config.parsing.get_graphnet_classes", false]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[124, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr", false]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.get_map_function", false]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.get_member_variables", false]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[124, "graphnet.training.callbacks.ProgressBar.get_metrics", false]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries", false]], "get_predictions() (in module graphnet.training.utils)": [[127, "graphnet.training.utils.get_predictions", false]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.get_primary_keys", false]], "get_rw_landing_probs() (in module graphnet.models.utils)": [[122, "graphnet.models.utils.get_rw_landing_probs", false]], "gnn (class in graphnet.models.gnn.gnn)": [[97, "graphnet.models.gnn.gnn.GNN", false]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition", false]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[105, "graphnet.models.graphs.graph_definition.GraphDefinition", false]], "graphnet": [[1, "module-graphnet", false]], "graphnet.constants": [[2, "module-graphnet.constants", false]], "graphnet.data": [[3, "module-graphnet.data", false]], "graphnet.data.constants": [[4, "module-graphnet.data.constants", false]], "graphnet.data.curated_datamodule": [[5, "module-graphnet.data.curated_datamodule", false]], "graphnet.data.dataclasses": [[6, "module-graphnet.data.dataclasses", false]], "graphnet.data.dataconverter": [[7, "module-graphnet.data.dataconverter", false]], "graphnet.data.dataloader": [[8, "module-graphnet.data.dataloader", false]], "graphnet.data.datamodule": [[9, "module-graphnet.data.datamodule", false]], "graphnet.data.dataset": [[10, "module-graphnet.data.dataset", false]], "graphnet.data.dataset.dataset": [[11, "module-graphnet.data.dataset.dataset", false]], "graphnet.data.dataset.parquet": [[12, "module-graphnet.data.dataset.parquet", false]], "graphnet.data.dataset.parquet.parquet_dataset": [[13, "module-graphnet.data.dataset.parquet.parquet_dataset", false]], "graphnet.data.dataset.samplers": [[14, "module-graphnet.data.dataset.samplers", false]], "graphnet.data.dataset.sqlite": [[15, "module-graphnet.data.dataset.sqlite", false]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[16, "module-graphnet.data.dataset.sqlite.sqlite_dataset", false]], "graphnet.data.extractors": [[17, "module-graphnet.data.extractors", false]], "graphnet.data.extractors.combine_extractors": [[18, "module-graphnet.data.extractors.combine_extractors", false]], "graphnet.data.extractors.extractor": [[19, "module-graphnet.data.extractors.extractor", false]], "graphnet.data.extractors.icecube": [[20, "module-graphnet.data.extractors.icecube", false]], "graphnet.data.extractors.icecube.i3extractor": [[21, "module-graphnet.data.extractors.icecube.i3extractor", false]], "graphnet.data.extractors.icecube.i3featureextractor": [[22, "module-graphnet.data.extractors.icecube.i3featureextractor", false]], "graphnet.data.extractors.icecube.i3genericextractor": [[23, "module-graphnet.data.extractors.icecube.i3genericextractor", false]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[24, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[25, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false]], "graphnet.data.extractors.icecube.i3particleextractor": [[26, "module-graphnet.data.extractors.icecube.i3particleextractor", false]], "graphnet.data.extractors.icecube.i3pisaextractor": [[27, "module-graphnet.data.extractors.icecube.i3pisaextractor", false]], "graphnet.data.extractors.icecube.i3quesoextractor": [[28, "module-graphnet.data.extractors.icecube.i3quesoextractor", false]], "graphnet.data.extractors.icecube.i3retroextractor": [[29, "module-graphnet.data.extractors.icecube.i3retroextractor", false]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[30, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false]], "graphnet.data.extractors.icecube.i3truthextractor": [[31, "module-graphnet.data.extractors.icecube.i3truthextractor", false]], "graphnet.data.extractors.icecube.i3tumextractor": [[32, "module-graphnet.data.extractors.icecube.i3tumextractor", false]], "graphnet.data.extractors.icecube.utilities": [[33, "module-graphnet.data.extractors.icecube.utilities", false]], "graphnet.data.extractors.icecube.utilities.collections": [[34, "module-graphnet.data.extractors.icecube.utilities.collections", false]], "graphnet.data.extractors.icecube.utilities.frames": [[35, "module-graphnet.data.extractors.icecube.utilities.frames", false]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[36, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false]], "graphnet.data.extractors.icecube.utilities.types": [[37, "module-graphnet.data.extractors.icecube.utilities.types", false]], "graphnet.data.extractors.internal": [[38, "module-graphnet.data.extractors.internal", false]], "graphnet.data.extractors.internal.parquet_extractor": [[39, "module-graphnet.data.extractors.internal.parquet_extractor", false]], "graphnet.data.extractors.liquido": [[40, "module-graphnet.data.extractors.liquido", false]], "graphnet.data.extractors.liquido.h5_extractor": [[41, "module-graphnet.data.extractors.liquido.h5_extractor", false]], "graphnet.data.extractors.prometheus": [[42, "module-graphnet.data.extractors.prometheus", false]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[43, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false]], "graphnet.data.parquet": [[44, "module-graphnet.data.parquet", false]], "graphnet.data.parquet.deprecated_methods": [[45, "module-graphnet.data.parquet.deprecated_methods", false]], "graphnet.data.pre_configured": [[46, "module-graphnet.data.pre_configured", false]], "graphnet.data.pre_configured.dataconverters": [[47, "module-graphnet.data.pre_configured.dataconverters", false]], "graphnet.data.readers": [[48, "module-graphnet.data.readers", false]], "graphnet.data.readers.graphnet_file_reader": [[49, "module-graphnet.data.readers.graphnet_file_reader", false]], "graphnet.data.readers.i3reader": [[50, "module-graphnet.data.readers.i3reader", false]], "graphnet.data.readers.internal_parquet_reader": [[51, "module-graphnet.data.readers.internal_parquet_reader", false]], "graphnet.data.readers.liquido_reader": [[52, "module-graphnet.data.readers.liquido_reader", false]], "graphnet.data.readers.prometheus_reader": [[53, "module-graphnet.data.readers.prometheus_reader", false]], "graphnet.data.sqlite": [[54, "module-graphnet.data.sqlite", false]], "graphnet.data.sqlite.deprecated_methods": [[55, "module-graphnet.data.sqlite.deprecated_methods", false]], "graphnet.data.utilities": [[56, "module-graphnet.data.utilities", false]], "graphnet.data.utilities.parquet_to_sqlite": [[57, "module-graphnet.data.utilities.parquet_to_sqlite", false]], "graphnet.data.utilities.random": [[58, "module-graphnet.data.utilities.random", false]], "graphnet.data.utilities.sqlite_utilities": [[59, "module-graphnet.data.utilities.sqlite_utilities", false]], "graphnet.data.utilities.string_selection_resolver": [[60, "module-graphnet.data.utilities.string_selection_resolver", false]], "graphnet.data.writers": [[61, "module-graphnet.data.writers", false]], "graphnet.data.writers.graphnet_writer": [[62, "module-graphnet.data.writers.graphnet_writer", false]], "graphnet.data.writers.parquet_writer": [[63, "module-graphnet.data.writers.parquet_writer", false]], "graphnet.data.writers.sqlite_writer": [[64, "module-graphnet.data.writers.sqlite_writer", false]], "graphnet.datasets": [[65, "module-graphnet.datasets", false]], "graphnet.datasets.prometheus_datasets": [[66, "module-graphnet.datasets.prometheus_datasets", false]], "graphnet.datasets.test_dataset": [[67, "module-graphnet.datasets.test_dataset", false]], "graphnet.deployment": [[68, "module-graphnet.deployment", false]], "graphnet.deployment.deployer": [[69, "module-graphnet.deployment.deployer", false]], "graphnet.deployment.deployment_module": [[70, "module-graphnet.deployment.deployment_module", false]], "graphnet.deployment.i3modules": [[71, "module-graphnet.deployment.i3modules", false]], "graphnet.deployment.i3modules.deprecated_methods": [[72, "module-graphnet.deployment.i3modules.deprecated_methods", false]], "graphnet.deployment.icecube": [[73, "module-graphnet.deployment.icecube", false]], "graphnet.deployment.icecube.cleaning_module": [[74, "module-graphnet.deployment.icecube.cleaning_module", false]], "graphnet.deployment.icecube.i3deployer": [[75, "module-graphnet.deployment.icecube.i3deployer", false]], "graphnet.deployment.icecube.inference_module": [[76, "module-graphnet.deployment.icecube.inference_module", false]], "graphnet.exceptions": [[77, "module-graphnet.exceptions", false]], "graphnet.exceptions.exceptions": [[78, "module-graphnet.exceptions.exceptions", false]], "graphnet.models": [[79, "module-graphnet.models", false]], "graphnet.models.coarsening": [[80, "module-graphnet.models.coarsening", false]], "graphnet.models.components": [[81, "module-graphnet.models.components", false]], "graphnet.models.components.embedding": [[82, "module-graphnet.models.components.embedding", false]], "graphnet.models.components.layers": [[83, "module-graphnet.models.components.layers", false]], "graphnet.models.components.pool": [[84, "module-graphnet.models.components.pool", false]], "graphnet.models.detector": [[85, "module-graphnet.models.detector", false]], "graphnet.models.detector.detector": [[86, "module-graphnet.models.detector.detector", false]], "graphnet.models.detector.icecube": [[87, "module-graphnet.models.detector.icecube", false]], "graphnet.models.detector.liquido": [[88, "module-graphnet.models.detector.liquido", false]], "graphnet.models.detector.prometheus": [[89, "module-graphnet.models.detector.prometheus", false]], "graphnet.models.easy_model": [[90, "module-graphnet.models.easy_model", false]], "graphnet.models.gnn": [[91, "module-graphnet.models.gnn", false]], "graphnet.models.gnn.convnet": [[93, "module-graphnet.models.gnn.convnet", false]], "graphnet.models.gnn.dynedge": [[94, "module-graphnet.models.gnn.dynedge", false]], "graphnet.models.gnn.dynedge_jinst": [[95, "module-graphnet.models.gnn.dynedge_jinst", false]], "graphnet.models.gnn.dynedge_kaggle_tito": [[96, "module-graphnet.models.gnn.dynedge_kaggle_tito", false]], "graphnet.models.gnn.gnn": [[97, "module-graphnet.models.gnn.gnn", false]], "graphnet.models.gnn.grit": [[98, "module-graphnet.models.gnn.grit", false]], "graphnet.models.gnn.icemix": [[99, "module-graphnet.models.gnn.icemix", false]], "graphnet.models.gnn.particlenet": [[100, "module-graphnet.models.gnn.particlenet", false]], "graphnet.models.gnn.rnn_tito": [[92, "module-graphnet.models.gnn.RNN_tito", false]], "graphnet.models.graphs": [[101, "module-graphnet.models.graphs", false]], "graphnet.models.graphs.edges": [[102, "module-graphnet.models.graphs.edges", false]], "graphnet.models.graphs.edges.edges": [[103, "module-graphnet.models.graphs.edges.edges", false]], "graphnet.models.graphs.edges.minkowski": [[104, "module-graphnet.models.graphs.edges.minkowski", false]], "graphnet.models.graphs.graph_definition": [[105, "module-graphnet.models.graphs.graph_definition", false]], "graphnet.models.graphs.graphs": [[106, "module-graphnet.models.graphs.graphs", false]], "graphnet.models.graphs.nodes": [[107, "module-graphnet.models.graphs.nodes", false]], "graphnet.models.graphs.nodes.nodes": [[108, "module-graphnet.models.graphs.nodes.nodes", false]], "graphnet.models.graphs.utils": [[109, "module-graphnet.models.graphs.utils", false]], "graphnet.models.model": [[110, "module-graphnet.models.model", false]], "graphnet.models.normalizing_flow": [[111, "module-graphnet.models.normalizing_flow", false]], "graphnet.models.rnn": [[112, "module-graphnet.models.rnn", false]], "graphnet.models.rnn.node_rnn": [[113, "module-graphnet.models.rnn.node_rnn", false]], "graphnet.models.standard_averaged_model": [[114, "module-graphnet.models.standard_averaged_model", false]], "graphnet.models.standard_model": [[115, "module-graphnet.models.standard_model", false]], "graphnet.models.task": [[116, "module-graphnet.models.task", false]], "graphnet.models.task.classification": [[117, "module-graphnet.models.task.classification", false]], "graphnet.models.task.reconstruction": [[118, "module-graphnet.models.task.reconstruction", false]], "graphnet.models.task.task": [[119, "module-graphnet.models.task.task", false]], "graphnet.models.transformer": [[120, "module-graphnet.models.transformer", false]], "graphnet.models.transformer.iseecube": [[121, "module-graphnet.models.transformer.iseecube", false]], "graphnet.models.utils": [[122, "module-graphnet.models.utils", false]], "graphnet.training": [[123, "module-graphnet.training", false]], "graphnet.training.callbacks": [[124, "module-graphnet.training.callbacks", false]], "graphnet.training.labels": [[125, "module-graphnet.training.labels", false]], "graphnet.training.loss_functions": [[126, "module-graphnet.training.loss_functions", false]], "graphnet.training.utils": [[127, "module-graphnet.training.utils", false]], "graphnet.training.weight_fitting": [[128, "module-graphnet.training.weight_fitting", false]], "graphnet.utilities": [[129, "module-graphnet.utilities", false]], "graphnet.utilities.argparse": [[130, "module-graphnet.utilities.argparse", false]], "graphnet.utilities.config": [[131, "module-graphnet.utilities.config", false]], "graphnet.utilities.config.base_config": [[132, "module-graphnet.utilities.config.base_config", false]], "graphnet.utilities.config.configurable": [[133, "module-graphnet.utilities.config.configurable", false]], "graphnet.utilities.config.dataset_config": [[134, "module-graphnet.utilities.config.dataset_config", false]], "graphnet.utilities.config.model_config": [[135, "module-graphnet.utilities.config.model_config", false]], "graphnet.utilities.config.parsing": [[136, "module-graphnet.utilities.config.parsing", false]], "graphnet.utilities.config.training_config": [[137, "module-graphnet.utilities.config.training_config", false]], "graphnet.utilities.decorators": [[138, "module-graphnet.utilities.decorators", false]], "graphnet.utilities.deprecation_tools": [[139, "module-graphnet.utilities.deprecation_tools", false]], "graphnet.utilities.filesys": [[140, "module-graphnet.utilities.filesys", false]], "graphnet.utilities.imports": [[141, "module-graphnet.utilities.imports", false]], "graphnet.utilities.logging": [[142, "module-graphnet.utilities.logging", false]], "graphnet.utilities.maths": [[143, "module-graphnet.utilities.maths", false]], "graphnetdatamodule (class in graphnet.data.datamodule)": [[9, "graphnet.data.datamodule.GraphNeTDataModule", false]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[124, "graphnet.training.callbacks.GraphnetEarlyStopping", false]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader", false]], "graphneti3deployer (class in graphnet.deployment.i3modules.deprecated_methods)": [[72, "graphnet.deployment.i3modules.deprecated_methods.GraphNeTI3Deployer", false]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[62, "graphnet.data.writers.graphnet_writer.GraphNeTWriter", false]], "grit (class in graphnet.models.gnn.grit)": [[98, "graphnet.models.gnn.grit.GRIT", false]], "gritsparsemha (class in graphnet.models.components.layers)": [[83, "graphnet.models.components.layers.GritSparseMHA", false]], "grittransformerlayer (class in graphnet.models.components.layers)": [[83, "graphnet.models.components.layers.GritTransformerLayer", false]], "group_by() (in module graphnet.models.components.pool)": [[84, "graphnet.models.components.pool.group_by", false]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[84, "graphnet.models.components.pool.group_pulses_to_dom", false]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[84, "graphnet.models.components.pool.group_pulses_to_pmt", false]], "h5extractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[41, "graphnet.data.extractors.liquido.h5_extractor.H5Extractor", false]], "h5hitextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[41, "graphnet.data.extractors.liquido.h5_extractor.H5HitExtractor", false]], "h5truthextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[41, "graphnet.data.extractors.liquido.h5_extractor.H5TruthExtractor", false]], "handlers (graphnet.utilities.logging.logger property)": [[142, "graphnet.utilities.logging.Logger.handlers", false]], "has_extension() (in module graphnet.utilities.filesys)": [[140, "graphnet.utilities.filesys.has_extension", false]], "has_icecube_package() (in module graphnet.utilities.imports)": [[141, "graphnet.utilities.imports.has_icecube_package", false]], "has_jammy_flows_package() (in module graphnet.utilities.imports)": [[141, "graphnet.utilities.imports.has_jammy_flows_package", false]], "has_torch_package() (in module graphnet.utilities.imports)": [[141, "graphnet.utilities.imports.has_torch_package", false]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.i3_file", false]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.i3_files", false]], "i3deployer (class in graphnet.deployment.icecube.i3deployer)": [[75, "graphnet.deployment.icecube.i3deployer.I3Deployer", false]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[21, "graphnet.data.extractors.icecube.i3extractor.I3Extractor", false]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor", false]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86", false]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore", false]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade", false]], "i3fileset (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.I3FileSet", false]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter", false]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask", false]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[24, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor", false]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[23, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor", false]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[76, "graphnet.deployment.icecube.inference_module.I3InferenceModule", false]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[25, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor", false]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[26, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor", false]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[27, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor", false]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[74, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule", false]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade", false]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[28, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor", false]], "i3reader (class in graphnet.data.readers.i3reader)": [[50, "graphnet.data.readers.i3reader.I3Reader", false]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[29, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor", false]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[30, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor", false]], "i3toparquetconverter (class in graphnet.data.pre_configured.dataconverters)": [[47, "graphnet.data.pre_configured.dataconverters.I3ToParquetConverter", false]], "i3tosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[47, "graphnet.data.pre_configured.dataconverters.I3ToSQLiteConverter", false]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[31, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor", false]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[32, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor", false]], "ice_transparency() (in module graphnet.models.graphs.utils)": [[109, "graphnet.models.graphs.utils.ice_transparency", false]], "icecube86 (class in graphnet.models.detector.icecube)": [[87, "graphnet.models.detector.icecube.IceCube86", false]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86", false]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86", false]], "icecube86prometheus (class in graphnet.models.detector.prometheus)": [[89, "graphnet.models.detector.prometheus.IceCube86Prometheus", false]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[87, "graphnet.models.detector.icecube.IceCubeDeepCore", false]], "icecubedeepcore8 (class in graphnet.models.detector.prometheus)": [[89, "graphnet.models.detector.prometheus.IceCubeDeepCore8", false]], "icecubegen2 (class in graphnet.models.detector.prometheus)": [[89, "graphnet.models.detector.prometheus.IceCubeGen2", false]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[87, "graphnet.models.detector.icecube.IceCubeKaggle", false]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[87, "graphnet.models.detector.icecube.IceCubeUpgrade", false]], "icecubeupgrade7 (class in graphnet.models.detector.prometheus)": [[89, "graphnet.models.detector.prometheus.IceCubeUpgrade7", false]], "icedemo81 (class in graphnet.models.detector.prometheus)": [[89, "graphnet.models.detector.prometheus.IceDemo81", false]], "icemixnodes (class in graphnet.models.graphs.nodes.nodes)": [[108, "graphnet.models.graphs.nodes.nodes.IceMixNodes", false]], "identify_indices() (in module graphnet.models.graphs.utils)": [[109, "graphnet.models.graphs.utils.identify_indices", false]], "identitytask (class in graphnet.models.task.task)": [[119, "graphnet.models.task.task.IdentityTask", false]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column", false]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[118, "graphnet.models.task.reconstruction.InelasticityReconstruction", false]], "inference() (graphnet.models.easy_model.easysyntax method)": [[90, "graphnet.models.easy_model.EasySyntax.inference", false]], "inference() (graphnet.models.task.task.task method)": [[119, "graphnet.models.task.task.Task.inference", false]], "info() (graphnet.utilities.logging.logger method)": [[142, "graphnet.utilities.logging.Logger.info", false]], "init_global_index() (in module graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.init_global_index", false]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[124, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm", false]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[124, "graphnet.training.callbacks.ProgressBar.init_test_tqdm", false]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[124, "graphnet.training.callbacks.ProgressBar.init_train_tqdm", false]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[124, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm", false]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_boost_class", false]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum", false]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[140, "graphnet.utilities.filesys.is_gcd_file", false]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[136, "graphnet.utilities.config.parsing.is_graphnet_class", false]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[136, "graphnet.utilities.config.parsing.is_graphnet_module", false]], "is_i3_file() (in module graphnet.utilities.filesys)": [[140, "graphnet.utilities.filesys.is_i3_file", false]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class", false]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_method", false]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_type", false]], "iseecube (class in graphnet.models.transformer.iseecube)": [[121, "graphnet.models.transformer.iseecube.ISeeCube", false]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE", false]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE", false]], "key (graphnet.training.labels.label property)": [[125, "graphnet.training.labels.Label.key", false]], "knn_graph_batch() (in module graphnet.models.utils)": [[122, "graphnet.models.utils.knn_graph_batch", false]], "knndistanceedges (class in graphnet.models.graphs.edges.edges)": [[103, "graphnet.models.graphs.edges.edges.KNNDistanceEdges", false]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[103, "graphnet.models.graphs.edges.edges.KNNEdges", false]], "knngraph (class in graphnet.models.graphs.graphs)": [[106, "graphnet.models.graphs.graphs.KNNGraph", false]], "knngraphrrwp (class in graphnet.models.graphs.graphs)": [[106, "graphnet.models.graphs.graphs.KNNGraphRRWP", false]], "knngraphrwse (class in graphnet.models.graphs.graphs)": [[106, "graphnet.models.graphs.graphs.KNNGraphRWSE", false]], "label (class in graphnet.training.labels)": [[125, "graphnet.training.labels.Label", false]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig.labels", false]], "learnedtask (class in graphnet.models.task.task)": [[119, "graphnet.models.task.task.LearnedTask", false]], "lenmatchbatchsampler (class in graphnet.data.dataset.samplers)": [[14, "graphnet.data.dataset.samplers.LenMatchBatchSampler", false]], "lex_sort() (in module graphnet.models.graphs.utils)": [[109, "graphnet.models.graphs.utils.lex_sort", false]], "linearedgeencoder (class in graphnet.models.components.embedding)": [[82, "graphnet.models.components.embedding.LinearEdgeEncoder", false]], "linearnodeencoder (class in graphnet.models.components.embedding)": [[82, "graphnet.models.components.embedding.LinearNodeEncoder", false]], "liquido (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.LIQUIDO", false]], "liquido (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.LIQUIDO", false]], "liquido_v1 (class in graphnet.models.detector.liquido)": [[88, "graphnet.models.detector.liquido.LiquidO_v1", false]], "liquidoreader (class in graphnet.data.readers.liquido_reader)": [[52, "graphnet.data.readers.liquido_reader.LiquidOReader", false]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[136, "graphnet.utilities.config.parsing.list_all_submodules", false]], "load() (graphnet.models.model.model class method)": [[110, "graphnet.models.model.Model.load", false]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[132, "graphnet.utilities.config.base_config.BaseConfig.load", false]], "load_module() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.load_module", false]], "load_state_dict() (graphnet.models.model.model method)": [[110, "graphnet.models.model.Model.load_state_dict", false]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[114, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict", false]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[126, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk", false]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[126, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx", false]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[126, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact", false]], "logcmk (class in graphnet.training.loss_functions)": [[126, "graphnet.training.loss_functions.LogCMK", false]], "logcoshloss (class in graphnet.training.loss_functions)": [[126, "graphnet.training.loss_functions.LogCoshLoss", false]], "logger (class in graphnet.utilities.logging)": [[142, "graphnet.utilities.logging.Logger", false]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column", false]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value", false]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table", false]], "lossfunction (class in graphnet.training.loss_functions)": [[126, "graphnet.training.loss_functions.LossFunction", false]], "maeloss (class in graphnet.training.loss_functions)": [[126, "graphnet.training.loss_functions.MAELoss", false]], "make_dataloader() (in module graphnet.training.utils)": [[127, "graphnet.training.utils.make_dataloader", false]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[127, "graphnet.training.utils.make_train_validation_dataloader", false]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.merge_files", false]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[62, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files", false]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[63, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files", false]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[64, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files", false]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[83, "graphnet.models.components.layers.EdgeConvTito.message", false]], "min_pool() (in module graphnet.models.components.pool)": [[84, "graphnet.models.components.pool.min_pool", false]], "min_pool_x() (in module graphnet.models.components.pool)": [[84, "graphnet.models.components.pool.min_pool_x", false]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[104, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges", false]], "mlp (class in graphnet.models.components.layers)": [[83, "graphnet.models.components.layers.Mlp", false]], "model (class in graphnet.models.model)": [[110, "graphnet.models.model.Model", false]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[132, "graphnet.utilities.config.base_config.BaseConfig.model_config", false]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config", false]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[135, "graphnet.utilities.config.model_config.ModelConfig.model_config", false]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[137, "graphnet.utilities.config.training_config.TrainingConfig.model_config", false]], "modelconfig (class in graphnet.utilities.config.model_config)": [[135, "graphnet.utilities.config.model_config.ModelConfig", false]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[135, "graphnet.utilities.config.model_config.ModelConfigSaverABC", false]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[135, "graphnet.utilities.config.model_config.ModelConfigSaverMeta", false]], "module": [[1, "module-graphnet", false], [2, "module-graphnet.constants", false], [3, "module-graphnet.data", false], [4, "module-graphnet.data.constants", false], [5, "module-graphnet.data.curated_datamodule", false], [6, "module-graphnet.data.dataclasses", false], [7, "module-graphnet.data.dataconverter", false], [8, "module-graphnet.data.dataloader", false], [9, "module-graphnet.data.datamodule", false], [10, "module-graphnet.data.dataset", false], [11, "module-graphnet.data.dataset.dataset", false], [12, "module-graphnet.data.dataset.parquet", false], [13, "module-graphnet.data.dataset.parquet.parquet_dataset", false], [14, "module-graphnet.data.dataset.samplers", false], [15, "module-graphnet.data.dataset.sqlite", false], [16, "module-graphnet.data.dataset.sqlite.sqlite_dataset", false], [17, "module-graphnet.data.extractors", false], [18, "module-graphnet.data.extractors.combine_extractors", false], [19, "module-graphnet.data.extractors.extractor", false], [20, "module-graphnet.data.extractors.icecube", false], [21, "module-graphnet.data.extractors.icecube.i3extractor", false], [22, "module-graphnet.data.extractors.icecube.i3featureextractor", false], [23, "module-graphnet.data.extractors.icecube.i3genericextractor", false], [24, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false], [25, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false], [26, "module-graphnet.data.extractors.icecube.i3particleextractor", false], [27, "module-graphnet.data.extractors.icecube.i3pisaextractor", false], [28, "module-graphnet.data.extractors.icecube.i3quesoextractor", false], [29, "module-graphnet.data.extractors.icecube.i3retroextractor", false], [30, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false], [31, "module-graphnet.data.extractors.icecube.i3truthextractor", false], [32, "module-graphnet.data.extractors.icecube.i3tumextractor", false], [33, "module-graphnet.data.extractors.icecube.utilities", false], [34, "module-graphnet.data.extractors.icecube.utilities.collections", false], [35, "module-graphnet.data.extractors.icecube.utilities.frames", false], [36, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false], [37, "module-graphnet.data.extractors.icecube.utilities.types", false], [38, "module-graphnet.data.extractors.internal", false], [39, "module-graphnet.data.extractors.internal.parquet_extractor", false], [40, "module-graphnet.data.extractors.liquido", false], [41, "module-graphnet.data.extractors.liquido.h5_extractor", false], [42, "module-graphnet.data.extractors.prometheus", false], [43, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false], [44, "module-graphnet.data.parquet", false], [45, "module-graphnet.data.parquet.deprecated_methods", false], [46, "module-graphnet.data.pre_configured", false], [47, "module-graphnet.data.pre_configured.dataconverters", false], [48, "module-graphnet.data.readers", false], [49, "module-graphnet.data.readers.graphnet_file_reader", false], [50, "module-graphnet.data.readers.i3reader", false], [51, "module-graphnet.data.readers.internal_parquet_reader", false], [52, "module-graphnet.data.readers.liquido_reader", false], [53, "module-graphnet.data.readers.prometheus_reader", false], [54, "module-graphnet.data.sqlite", false], [55, "module-graphnet.data.sqlite.deprecated_methods", false], [56, "module-graphnet.data.utilities", false], [57, "module-graphnet.data.utilities.parquet_to_sqlite", false], [58, "module-graphnet.data.utilities.random", false], [59, "module-graphnet.data.utilities.sqlite_utilities", false], [60, "module-graphnet.data.utilities.string_selection_resolver", false], [61, "module-graphnet.data.writers", false], [62, "module-graphnet.data.writers.graphnet_writer", false], [63, "module-graphnet.data.writers.parquet_writer", false], [64, "module-graphnet.data.writers.sqlite_writer", false], [65, "module-graphnet.datasets", false], [66, "module-graphnet.datasets.prometheus_datasets", false], [67, "module-graphnet.datasets.test_dataset", false], [68, "module-graphnet.deployment", false], [69, "module-graphnet.deployment.deployer", false], [70, "module-graphnet.deployment.deployment_module", false], [71, "module-graphnet.deployment.i3modules", false], [72, "module-graphnet.deployment.i3modules.deprecated_methods", false], [73, "module-graphnet.deployment.icecube", false], [74, "module-graphnet.deployment.icecube.cleaning_module", false], [75, "module-graphnet.deployment.icecube.i3deployer", false], [76, "module-graphnet.deployment.icecube.inference_module", false], [77, "module-graphnet.exceptions", false], [78, "module-graphnet.exceptions.exceptions", false], [79, "module-graphnet.models", false], [80, "module-graphnet.models.coarsening", false], [81, "module-graphnet.models.components", false], [82, "module-graphnet.models.components.embedding", false], [83, "module-graphnet.models.components.layers", false], [84, "module-graphnet.models.components.pool", false], [85, "module-graphnet.models.detector", false], [86, "module-graphnet.models.detector.detector", false], [87, "module-graphnet.models.detector.icecube", false], [88, "module-graphnet.models.detector.liquido", false], [89, "module-graphnet.models.detector.prometheus", false], [90, "module-graphnet.models.easy_model", false], [91, "module-graphnet.models.gnn", false], [92, "module-graphnet.models.gnn.RNN_tito", false], [93, "module-graphnet.models.gnn.convnet", false], [94, "module-graphnet.models.gnn.dynedge", false], [95, "module-graphnet.models.gnn.dynedge_jinst", false], [96, "module-graphnet.models.gnn.dynedge_kaggle_tito", false], [97, "module-graphnet.models.gnn.gnn", false], [98, "module-graphnet.models.gnn.grit", false], [99, "module-graphnet.models.gnn.icemix", false], [100, "module-graphnet.models.gnn.particlenet", false], [101, "module-graphnet.models.graphs", false], [102, "module-graphnet.models.graphs.edges", false], [103, "module-graphnet.models.graphs.edges.edges", false], [104, "module-graphnet.models.graphs.edges.minkowski", false], [105, "module-graphnet.models.graphs.graph_definition", false], [106, "module-graphnet.models.graphs.graphs", false], [107, "module-graphnet.models.graphs.nodes", false], [108, "module-graphnet.models.graphs.nodes.nodes", false], [109, "module-graphnet.models.graphs.utils", false], [110, "module-graphnet.models.model", false], [111, "module-graphnet.models.normalizing_flow", false], [112, "module-graphnet.models.rnn", false], [113, "module-graphnet.models.rnn.node_rnn", false], [114, "module-graphnet.models.standard_averaged_model", false], [115, "module-graphnet.models.standard_model", false], [116, "module-graphnet.models.task", false], [117, "module-graphnet.models.task.classification", false], [118, "module-graphnet.models.task.reconstruction", false], [119, "module-graphnet.models.task.task", false], [120, "module-graphnet.models.transformer", false], [121, "module-graphnet.models.transformer.iseecube", false], [122, "module-graphnet.models.utils", false], [123, "module-graphnet.training", false], [124, "module-graphnet.training.callbacks", false], [125, "module-graphnet.training.labels", false], [126, "module-graphnet.training.loss_functions", false], [127, "module-graphnet.training.utils", false], [128, "module-graphnet.training.weight_fitting", false], [129, "module-graphnet.utilities", false], [130, "module-graphnet.utilities.argparse", false], [131, "module-graphnet.utilities.config", false], [132, "module-graphnet.utilities.config.base_config", false], [133, "module-graphnet.utilities.config.configurable", false], [134, "module-graphnet.utilities.config.dataset_config", false], [135, "module-graphnet.utilities.config.model_config", false], [136, "module-graphnet.utilities.config.parsing", false], [137, "module-graphnet.utilities.config.training_config", false], [138, "module-graphnet.utilities.decorators", false], [139, "module-graphnet.utilities.deprecation_tools", false], [140, "module-graphnet.utilities.filesys", false], [141, "module-graphnet.utilities.imports", false], [142, "module-graphnet.utilities.logging", false], [143, "module-graphnet.utilities.maths", false]], "modules (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.modules", false]], "mseloss (class in graphnet.training.loss_functions)": [[126, "graphnet.training.loss_functions.MSELoss", false]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[117, "graphnet.models.task.classification.MulticlassClassificationTask", false]], "name (graphnet.data.extractors.extractor.extractor property)": [[19, "graphnet.data.extractors.extractor.Extractor.name", false]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[97, "graphnet.models.gnn.gnn.GNN.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[117, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[117, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[118, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[118, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[118, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[118, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[118, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[118, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[118, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[119, "graphnet.models.task.task.IdentityTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[119, "graphnet.models.task.task.LearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[119, "graphnet.models.task.task.StandardLearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.task property)": [[119, "graphnet.models.task.task.Task.nb_inputs", false]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[119, "graphnet.models.task.task.StandardFlowTask.nb_inputs", false]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[97, "graphnet.models.gnn.gnn.GNN.nb_outputs", false]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[108, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs", false]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[142, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed", false]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[99, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay", false]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[113, "graphnet.models.rnn.node_rnn.Node_RNN", false]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth", false]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table", false]], "nodeasdomtimeseries (class in graphnet.models.graphs.nodes.nodes)": [[108, "graphnet.models.graphs.nodes.nodes.NodeAsDOMTimeSeries", false]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[108, "graphnet.models.graphs.nodes.nodes.NodeDefinition", false]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[108, "graphnet.models.graphs.nodes.nodes.NodesAsPulses", false]], "normalizingflow (class in graphnet.models.normalizing_flow)": [[111, "graphnet.models.normalizing_flow.NormalizingFlow", false]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter", false]], "num_samples (graphnet.data.dataset.samplers.randomchunksampler property)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler.num_samples", false]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[124, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end", false]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[114, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[124, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[124, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end", false]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[124, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start", false]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[124, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end", false]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[114, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step", false]], "options (class in graphnet.utilities.argparse)": [[130, "graphnet.utilities.argparse.Options", false]], "orca150 (class in graphnet.models.detector.prometheus)": [[89, "graphnet.models.detector.prometheus.ORCA150", false]], "orca150superdense (class in graphnet.models.detector.prometheus)": [[89, "graphnet.models.detector.prometheus.ORCA150SuperDense", false]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.output_folder", false]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[58, "graphnet.data.utilities.random.pairwise_shuffle", false]], "parquetdataconverter (class in graphnet.data.parquet.deprecated_methods)": [[45, "graphnet.data.parquet.deprecated_methods.ParquetDataConverter", false]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset", false]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[39, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor", false]], "parquetreader (class in graphnet.data.readers.internal_parquet_reader)": [[51, "graphnet.data.readers.internal_parquet_reader.ParquetReader", false]], "parquettosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[47, "graphnet.data.pre_configured.dataconverters.ParquetToSQLiteConverter", false]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[63, "graphnet.data.writers.parquet_writer.ParquetWriter", false]], "parse_graph_definition() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.parse_graph_definition", false]], "parse_labels() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.parse_labels", false]], "particlenet (class in graphnet.models.gnn.particlenet)": [[100, "graphnet.models.gnn.particlenet.ParticleNeT", false]], "path (graphnet.data.dataset.dataset.dataset property)": [[11, "graphnet.data.dataset.dataset.Dataset.path", false]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig.path", false]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[108, "graphnet.models.graphs.nodes.nodes.PercentileClusters", false]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[124, "graphnet.training.callbacks.PiecewiseLinearLR", false]], "ponesmall (class in graphnet.datasets.prometheus_datasets)": [[66, "graphnet.datasets.prometheus_datasets.PONESmall", false]], "ponetriangle (class in graphnet.models.detector.prometheus)": [[89, "graphnet.models.detector.prometheus.PONETriangle", false]], "pop_default() (graphnet.utilities.argparse.options method)": [[130, "graphnet.utilities.argparse.Options.pop_default", false]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[118, "graphnet.models.task.reconstruction.PositionReconstruction", false]], "predict() (graphnet.models.easy_model.easysyntax method)": [[90, "graphnet.models.easy_model.EasySyntax.predict", false]], "predict_as_dataframe() (graphnet.models.easy_model.easysyntax method)": [[90, "graphnet.models.easy_model.EasySyntax.predict_as_dataframe", false]], "prediction_labels (graphnet.models.easy_model.easysyntax property)": [[90, "graphnet.models.easy_model.EasySyntax.prediction_labels", false]], "prepare_data() (graphnet.data.curated_datamodule.curateddataset method)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.prepare_data", false]], "prepare_data() (graphnet.data.curated_datamodule.erdahosteddataset method)": [[5, "graphnet.data.curated_datamodule.ERDAHostedDataset.prepare_data", false]], "prepare_data() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.prepare_data", false]], "progressbar (class in graphnet.training.callbacks)": [[124, "graphnet.training.callbacks.ProgressBar", false]], "prometheus (class in graphnet.models.detector.prometheus)": [[89, "graphnet.models.detector.prometheus.Prometheus", false]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS", false]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS", false]], "prometheusextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[43, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusExtractor", false]], "prometheusfeatureextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[43, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusFeatureExtractor", false]], "prometheusreader (class in graphnet.data.readers.prometheus_reader)": [[53, "graphnet.data.readers.prometheus_reader.PrometheusReader", false]], "prometheustruthextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[43, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusTruthExtractor", false]], "publicprometheusdataset (class in graphnet.datasets.prometheus_datasets)": [[66, "graphnet.datasets.prometheus_datasets.PublicPrometheusDataset", false]], "pulse_truth (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.pulse_truth", false]], "pulsemaps (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.pulsemaps", false]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps", false]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.query_database", false]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[11, "graphnet.data.dataset.dataset.Dataset.query_table", false]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table", false]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[16, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table", false]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[103, "graphnet.models.graphs.edges.edges.RadialEdges", false]], "randomchunksampler (class in graphnet.data.dataset.samplers)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler", false]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[80, "graphnet.models.coarsening.Coarsening.reduce_options", false]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[139, "graphnet.utilities.deprecation_tools.rename_state_dict_entries", false]], "repeatfilter (class in graphnet.utilities.logging)": [[142, "graphnet.utilities.logging.RepeatFilter", false]], "requires_icecube() (in module graphnet.utilities.imports)": [[141, "graphnet.utilities.imports.requires_icecube", false]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[83, "graphnet.models.components.layers.EdgeConvTito.reset_parameters", false]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[60, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve", false]], "rmseloss (class in graphnet.training.loss_functions)": [[126, "graphnet.training.loss_functions.RMSELoss", false]], "rmsevonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[126, "graphnet.training.loss_functions.RMSEVonMisesFisher3DLoss", false]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[92, "graphnet.models.gnn.RNN_tito.RNN_TITO", false]], "rrwplinearedgeencoder (class in graphnet.models.components.embedding)": [[82, "graphnet.models.components.embedding.RRWPLinearEdgeEncoder", false]], "rrwplinearnodeencoder (class in graphnet.models.components.embedding)": [[82, "graphnet.models.components.embedding.RRWPLinearNodeEncoder", false]], "run() (graphnet.deployment.deployer.deployer method)": [[69, "graphnet.deployment.deployer.Deployer.run", false]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.run_sql_code", false]], "rwselinearnodeencoder (class in graphnet.models.components.embedding)": [[82, "graphnet.models.components.embedding.RWSELinearNodeEncoder", false]], "sangraphhead (class in graphnet.models.components.layers)": [[83, "graphnet.models.components.layers.SANGraphHead", false]], "save() (graphnet.models.model.model method)": [[110, "graphnet.models.model.Model.save", false]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[133, "graphnet.utilities.config.configurable.Configurable.save_config", false]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[134, "graphnet.utilities.config.dataset_config.save_dataset_config", false]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[135, "graphnet.utilities.config.model_config.save_model_config", false]], "save_results() (in module graphnet.training.utils)": [[127, "graphnet.training.utils.save_results", false]], "save_selection() (in module graphnet.training.utils)": [[127, "graphnet.training.utils.save_selection", false]], "save_state_dict() (graphnet.models.model.model method)": [[110, "graphnet.models.model.Model.save_state_dict", false]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.save_to_sql", false]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig.seed", false]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig.selection", false]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[87, "graphnet.models.detector.icecube.IceCube86.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[87, "graphnet.models.detector.icecube.IceCubeKaggle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[87, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[88, "graphnet.models.detector.liquido.LiquidO_v1.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[89, "graphnet.models.detector.prometheus.ARCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[89, "graphnet.models.detector.prometheus.BaikalGVD8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[89, "graphnet.models.detector.prometheus.IceCube86Prometheus.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[89, "graphnet.models.detector.prometheus.IceCubeDeepCore8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[89, "graphnet.models.detector.prometheus.IceCubeGen2.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[89, "graphnet.models.detector.prometheus.IceCubeUpgrade7.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[89, "graphnet.models.detector.prometheus.IceDemo81.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[89, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[89, "graphnet.models.detector.prometheus.ORCA150SuperDense.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[89, "graphnet.models.detector.prometheus.PONETriangle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[89, "graphnet.models.detector.prometheus.TRIDENT1211.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[89, "graphnet.models.detector.prometheus.WaterDemo81.sensor_id_column", false]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[86, "graphnet.models.detector.detector.Detector.sensor_index_name", false]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[86, "graphnet.models.detector.detector.Detector.sensor_position_names", false]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.serialise", false]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors", false]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[21, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd", false]], "set_gcd() (graphnet.data.extractors.icecube.i3truthextractor.i3truthextractor method)": [[31, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor.set_gcd", false]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[108, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs", false]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[108, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names", false]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[110, "graphnet.models.model.Model.set_verbose_print_recursively", false]], "setlevel() (graphnet.utilities.logging.logger method)": [[142, "graphnet.utilities.logging.Logger.setLevel", false]], "settings (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.Settings", false]], "setup() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.setup", false]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[124, "graphnet.training.callbacks.GraphnetEarlyStopping.setup", false]], "shared_step() (graphnet.models.easy_model.easysyntax method)": [[90, "graphnet.models.easy_model.EasySyntax.shared_step", false]], "shared_step() (graphnet.models.normalizing_flow.normalizingflow method)": [[111, "graphnet.models.normalizing_flow.NormalizingFlow.shared_step", false]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[115, "graphnet.models.standard_model.StandardModel.shared_step", false]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[82, "graphnet.models.components.embedding.SinusoidalPosEmb", false]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[82, "graphnet.models.components.embedding.SpacetimeEncoder", false]], "sqlitedataconverter (class in graphnet.data.sqlite.deprecated_methods)": [[55, "graphnet.data.sqlite.deprecated_methods.SQLiteDataConverter", false]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[16, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset", false]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[64, "graphnet.data.writers.sqlite_writer.SQLiteWriter", false]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[130, "graphnet.utilities.argparse.ArgumentParser.standard_arguments", false]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[114, "graphnet.models.standard_averaged_model.StandardAveragedModel", false]], "standardflowtask (class in graphnet.models.task.task)": [[119, "graphnet.models.task.task.StandardFlowTask", false]], "standardlearnedtask (class in graphnet.models.task.task)": [[119, "graphnet.models.task.task.StandardLearnedTask", false]], "standardmodel (class in graphnet.models.standard_model)": [[115, "graphnet.models.standard_model.StandardModel", false]], "std_pool() (in module graphnet.models.components.pool)": [[84, "graphnet.models.components.pool.std_pool", false]], "std_pool_x() (in module graphnet.models.components.pool)": [[84, "graphnet.models.components.pool.std_pool_x", false]], "stream_handlers (graphnet.utilities.logging.logger property)": [[142, "graphnet.utilities.logging.Logger.stream_handlers", false]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[87, "graphnet.models.detector.icecube.IceCube86.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[87, "graphnet.models.detector.icecube.IceCubeKaggle.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[87, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column", false]], "string_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[88, "graphnet.models.detector.liquido.LiquidO_v1.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[89, "graphnet.models.detector.prometheus.ARCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[89, "graphnet.models.detector.prometheus.BaikalGVD8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[89, "graphnet.models.detector.prometheus.IceCube86Prometheus.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[89, "graphnet.models.detector.prometheus.IceCubeDeepCore8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[89, "graphnet.models.detector.prometheus.IceCubeGen2.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[89, "graphnet.models.detector.prometheus.IceCubeUpgrade7.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[89, "graphnet.models.detector.prometheus.IceDemo81.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[89, "graphnet.models.detector.prometheus.ORCA150.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[89, "graphnet.models.detector.prometheus.ORCA150SuperDense.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[89, "graphnet.models.detector.prometheus.PONETriangle.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[89, "graphnet.models.detector.prometheus.TRIDENT1211.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[89, "graphnet.models.detector.prometheus.WaterDemo81.string_id_column", false]], "string_index_name (graphnet.models.detector.detector.detector property)": [[86, "graphnet.models.detector.detector.Detector.string_index_name", false]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection", false]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[60, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver", false]], "subeventstreami3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.SubEventStreamI3Filter", false]], "sum_pool() (in module graphnet.models.components.pool)": [[84, "graphnet.models.components.pool.sum_pool", false]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[84, "graphnet.models.components.pool.sum_pool_and_distribute", false]], "sum_pool_x() (in module graphnet.models.components.pool)": [[84, "graphnet.models.components.pool.sum_pool_x", false]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[137, "graphnet.utilities.config.training_config.TrainingConfig.target", false]], "target_labels (graphnet.models.easy_model.easysyntax property)": [[90, "graphnet.models.easy_model.EasySyntax.target_labels", false]], "task (class in graphnet.models.task.task)": [[119, "graphnet.models.task.task.Task", false]], "teardown() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.teardown", false]], "test_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.test_dataloader", false]], "testdataset (class in graphnet.datasets.test_dataset)": [[67, "graphnet.datasets.test_dataset.TestDataset", false]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[118, "graphnet.models.task.reconstruction.TimeReconstruction", false]], "track (class in graphnet.training.labels)": [[125, "graphnet.training.labels.Track", false]], "train() (graphnet.models.easy_model.easysyntax method)": [[90, "graphnet.models.easy_model.EasySyntax.train", false]], "train_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.train_dataloader", false]], "train_eval() (graphnet.models.task.task.task method)": [[119, "graphnet.models.task.task.Task.train_eval", false]], "training_step() (graphnet.models.easy_model.easysyntax method)": [[90, "graphnet.models.easy_model.EasySyntax.training_step", false]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[114, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step", false]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[137, "graphnet.utilities.config.training_config.TrainingConfig", false]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts", false]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[136, "graphnet.utilities.config.parsing.traverse_and_apply", false]], "trident1211 (class in graphnet.models.detector.prometheus)": [[89, "graphnet.models.detector.prometheus.TRIDENT1211", false]], "tridentsmall (class in graphnet.datasets.prometheus_datasets)": [[66, "graphnet.datasets.prometheus_datasets.TRIDENTSmall", false]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH", false]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig.truth", false]], "truth_table (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.truth_table", false]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[11, "graphnet.data.dataset.dataset.Dataset.truth_table", false]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[134, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table", false]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[80, "graphnet.models.coarsening.unbatch_edge_index", false]], "uniform (class in graphnet.training.weight_fitting)": [[128, "graphnet.training.weight_fitting.Uniform", false]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE", false]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE", false]], "val_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.val_dataloader", false]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files", false]], "validate_tasks() (graphnet.models.easy_model.easysyntax method)": [[90, "graphnet.models.easy_model.EasySyntax.validate_tasks", false]], "validate_tasks() (graphnet.models.normalizing_flow.normalizingflow method)": [[111, "graphnet.models.normalizing_flow.NormalizingFlow.validate_tasks", false]], "validate_tasks() (graphnet.models.standard_model.standardmodel method)": [[115, "graphnet.models.standard_model.StandardModel.validate_tasks", false]], "validation_step() (graphnet.models.easy_model.easysyntax method)": [[90, "graphnet.models.easy_model.EasySyntax.validation_step", false]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[114, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step", false]], "verbose_print (graphnet.models.model.model attribute)": [[110, "graphnet.models.model.Model.verbose_print", false]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[118, "graphnet.models.task.reconstruction.VertexReconstruction", false]], "visibleinelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[118, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction", false]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[126, "graphnet.training.loss_functions.VonMisesFisher2DLoss", false]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[126, "graphnet.training.loss_functions.VonMisesFisher3DLoss", false]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[126, "graphnet.training.loss_functions.VonMisesFisherLoss", false]], "warning() (graphnet.utilities.logging.logger method)": [[142, "graphnet.utilities.logging.Logger.warning", false]], "warning_once() (graphnet.utilities.logging.logger method)": [[142, "graphnet.utilities.logging.Logger.warning_once", false]], "waterdemo81 (class in graphnet.models.detector.prometheus)": [[89, "graphnet.models.detector.prometheus.WaterDemo81", false]], "weightfitter (class in graphnet.training.weight_fitting)": [[128, "graphnet.training.weight_fitting.WeightFitter", false]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[130, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments", false]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[87, "graphnet.models.detector.icecube.IceCube86.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubekaggle attribute)": [[87, "graphnet.models.detector.icecube.IceCubeKaggle.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[87, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz", false]], "xyz (graphnet.models.detector.liquido.liquido_v1 attribute)": [[88, "graphnet.models.detector.liquido.LiquidO_v1.xyz", false]], "xyz (graphnet.models.detector.prometheus.arca115 attribute)": [[89, "graphnet.models.detector.prometheus.ARCA115.xyz", false]], "xyz (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[89, "graphnet.models.detector.prometheus.BaikalGVD8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[89, "graphnet.models.detector.prometheus.IceCube86Prometheus.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[89, "graphnet.models.detector.prometheus.IceCubeDeepCore8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[89, "graphnet.models.detector.prometheus.IceCubeGen2.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[89, "graphnet.models.detector.prometheus.IceCubeUpgrade7.xyz", false]], "xyz (graphnet.models.detector.prometheus.icedemo81 attribute)": [[89, "graphnet.models.detector.prometheus.IceDemo81.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[89, "graphnet.models.detector.prometheus.ORCA150.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150superdense attribute)": [[89, "graphnet.models.detector.prometheus.ORCA150SuperDense.xyz", false]], "xyz (graphnet.models.detector.prometheus.ponetriangle attribute)": [[89, "graphnet.models.detector.prometheus.PONETriangle.xyz", false]], "xyz (graphnet.models.detector.prometheus.trident1211 attribute)": [[89, "graphnet.models.detector.prometheus.TRIDENT1211.xyz", false]], "xyz (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[89, "graphnet.models.detector.prometheus.WaterDemo81.xyz", false]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[118, "graphnet.models.task.reconstruction.ZenithReconstruction", false]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[118, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa", false]]}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [65, 0, 0, "-", "datasets"], [68, 0, 0, "-", "deployment"], [77, 0, 0, "-", "exceptions"], [79, 0, 0, "-", "models"], [123, 0, 0, "-", "training"], [129, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "curated_datamodule"], [6, 0, 0, "-", "dataclasses"], [7, 0, 0, "-", "dataconverter"], [8, 0, 0, "-", "dataloader"], [9, 0, 0, "-", "datamodule"], [10, 0, 0, "-", "dataset"], [17, 0, 0, "-", "extractors"], [44, 0, 0, "-", "parquet"], [46, 0, 0, "-", "pre_configured"], [48, 0, 0, "-", "readers"], [54, 0, 0, "-", "sqlite"], [56, 0, 0, "-", "utilities"], [61, 0, 0, "-", "writers"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.curated_datamodule": [[5, 1, 1, "", "CuratedDataset"], [5, 1, 1, "", "ERDAHostedDataset"]], "graphnet.data.curated_datamodule.CuratedDataset": [[5, 3, 1, "", "available_backends"], [5, 3, 1, "", "citation"], [5, 3, 1, "", "comments"], [5, 3, 1, "", "creator"], [5, 3, 1, "", "dataset_dir"], [5, 4, 1, "", "description"], [5, 3, 1, "", "event_truth"], [5, 3, 1, "", "events"], [5, 3, 1, "", "experiment"], [5, 3, 1, "", "features"], [5, 4, 1, "", "prepare_data"], [5, 3, 1, "", "pulse_truth"], [5, 3, 1, "", "pulsemaps"], [5, 3, 1, "", "truth_table"]], "graphnet.data.curated_datamodule.ERDAHostedDataset": [[5, 4, 1, "", "prepare_data"]], "graphnet.data.dataclasses": [[6, 1, 1, "", "I3FileSet"], [6, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_files"], [6, 2, 1, "", "modules"], [6, 2, 1, "", "output_folder"]], "graphnet.data.dataconverter": [[7, 1, 1, "", "DataConverter"], [7, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[7, 4, 1, "", "get_map_function"], [7, 4, 1, "", "merge_files"]], "graphnet.data.dataloader": [[8, 1, 1, "", "DataLoader"], [8, 5, 1, "", "collate_fn"], [8, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[8, 4, 1, "", "from_dataset_config"]], "graphnet.data.datamodule": [[9, 1, 1, "", "GraphNeTDataModule"]], "graphnet.data.datamodule.GraphNeTDataModule": [[9, 4, 1, "", "prepare_data"], [9, 4, 1, "", "setup"], [9, 4, 1, "", "teardown"], [9, 3, 1, "", "test_dataloader"], [9, 3, 1, "", "train_dataloader"], [9, 3, 1, "", "val_dataloader"]], "graphnet.data.dataset": [[11, 0, 0, "-", "dataset"], [12, 0, 0, "-", "parquet"], [14, 0, 0, "-", "samplers"], [15, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[11, 1, 1, "", "Dataset"], [11, 1, 1, "", "EnsembleDataset"], [11, 5, 1, "", "load_module"], [11, 5, 1, "", "parse_graph_definition"], [11, 5, 1, "", "parse_labels"]], "graphnet.data.dataset.dataset.Dataset": [[11, 4, 1, "", "add_label"], [11, 4, 1, "", "concatenate"], [11, 4, 1, "", "from_config"], [11, 3, 1, "", "path"], [11, 4, 1, "", "query_table"], [11, 3, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[13, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[13, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[13, 3, 1, "", "chunk_sizes"], [13, 4, 1, "", "query_table"]], "graphnet.data.dataset.samplers": [[14, 1, 1, "", "LenMatchBatchSampler"], [14, 1, 1, "", "RandomChunkSampler"], [14, 5, 1, "", "gather_len_matched_buckets"]], "graphnet.data.dataset.samplers.RandomChunkSampler": [[14, 3, 1, "", "chunks"], [14, 3, 1, "", "data_source"], [14, 3, 1, "", "num_samples"]], "graphnet.data.dataset.sqlite": [[16, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[16, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[16, 4, 1, "", "query_table"]], "graphnet.data.extractors": [[18, 0, 0, "-", "combine_extractors"], [19, 0, 0, "-", "extractor"], [20, 0, 0, "-", "icecube"], [38, 0, 0, "-", "internal"], [40, 0, 0, "-", "liquido"], [42, 0, 0, "-", "prometheus"]], "graphnet.data.extractors.combine_extractors": [[18, 1, 1, "", "CombinedExtractor"]], "graphnet.data.extractors.extractor": [[19, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[19, 3, 1, "", "name"]], "graphnet.data.extractors.icecube": [[21, 0, 0, "-", "i3extractor"], [22, 0, 0, "-", "i3featureextractor"], [23, 0, 0, "-", "i3genericextractor"], [24, 0, 0, "-", "i3hybridrecoextractor"], [25, 0, 0, "-", "i3ntmuonlabelsextractor"], [26, 0, 0, "-", "i3particleextractor"], [27, 0, 0, "-", "i3pisaextractor"], [28, 0, 0, "-", "i3quesoextractor"], [29, 0, 0, "-", "i3retroextractor"], [30, 0, 0, "-", "i3splinempeextractor"], [31, 0, 0, "-", "i3truthextractor"], [32, 0, 0, "-", "i3tumextractor"], [33, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[21, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[21, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[22, 1, 1, "", "I3FeatureExtractor"], [22, 1, 1, "", "I3FeatureExtractorIceCube86"], [22, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [22, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [22, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[23, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[24, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[25, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[26, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[27, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[28, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[29, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[30, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[31, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor": [[31, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3tumextractor": [[32, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[34, 0, 0, "-", "collections"], [35, 0, 0, "-", "frames"], [36, 0, 0, "-", "i3_filters"], [37, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[34, 5, 1, "", "flatten_nested_dictionary"], [34, 5, 1, "", "serialise"], [34, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[35, 5, 1, "", "frame_is_montecarlo"], [35, 5, 1, "", "frame_is_noise"], [35, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[36, 1, 1, "", "I3Filter"], [36, 1, 1, "", "I3FilterMask"], [36, 1, 1, "", "NullSplitI3Filter"], [36, 1, 1, "", "SubEventStreamI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[37, 5, 1, "", "break_cyclic_recursion"], [37, 5, 1, "", "cast_object_to_pure_python"], [37, 5, 1, "", "cast_pulse_series_to_pure_python"], [37, 5, 1, "", "get_member_variables"], [37, 5, 1, "", "is_boost_class"], [37, 5, 1, "", "is_boost_enum"], [37, 5, 1, "", "is_icecube_class"], [37, 5, 1, "", "is_method"], [37, 5, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[39, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[39, 1, 1, "", "ParquetExtractor"]], "graphnet.data.extractors.liquido": [[41, 0, 0, "-", "h5_extractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[41, 1, 1, "", "H5Extractor"], [41, 1, 1, "", "H5HitExtractor"], [41, 1, 1, "", "H5TruthExtractor"]], "graphnet.data.extractors.prometheus": [[43, 0, 0, "-", "prometheus_extractor"]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[43, 1, 1, "", "PrometheusExtractor"], [43, 1, 1, "", "PrometheusFeatureExtractor"], [43, 1, 1, "", "PrometheusTruthExtractor"]], "graphnet.data.parquet": [[45, 0, 0, "-", "deprecated_methods"]], "graphnet.data.parquet.deprecated_methods": [[45, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.pre_configured": [[47, 0, 0, "-", "dataconverters"]], "graphnet.data.pre_configured.dataconverters": [[47, 1, 1, "", "I3ToParquetConverter"], [47, 1, 1, "", "I3ToSQLiteConverter"], [47, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.readers": [[49, 0, 0, "-", "graphnet_file_reader"], [50, 0, 0, "-", "i3reader"], [51, 0, 0, "-", "internal_parquet_reader"], [52, 0, 0, "-", "liquido_reader"], [53, 0, 0, "-", "prometheus_reader"]], "graphnet.data.readers.graphnet_file_reader": [[49, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[49, 3, 1, "", "accepted_extractors"], [49, 3, 1, "", "accepted_file_extensions"], [49, 3, 1, "", "extracor_names"], [49, 4, 1, "", "find_files"], [49, 4, 1, "", "set_extractors"], [49, 4, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[50, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[50, 4, 1, "", "find_files"]], "graphnet.data.readers.internal_parquet_reader": [[51, 1, 1, "", "ParquetReader"]], "graphnet.data.readers.internal_parquet_reader.ParquetReader": [[51, 4, 1, "", "find_files"]], "graphnet.data.readers.liquido_reader": [[52, 1, 1, "", "LiquidOReader"]], "graphnet.data.readers.liquido_reader.LiquidOReader": [[52, 4, 1, "", "find_files"]], "graphnet.data.readers.prometheus_reader": [[53, 1, 1, "", "PrometheusReader"]], "graphnet.data.readers.prometheus_reader.PrometheusReader": [[53, 4, 1, "", "find_files"]], "graphnet.data.sqlite": [[55, 0, 0, "-", "deprecated_methods"]], "graphnet.data.sqlite.deprecated_methods": [[55, 1, 1, "", "SQLiteDataConverter"]], "graphnet.data.utilities": [[57, 0, 0, "-", "parquet_to_sqlite"], [58, 0, 0, "-", "random"], [59, 0, 0, "-", "sqlite_utilities"], [60, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.random": [[58, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[59, 5, 1, "", "attach_index"], [59, 5, 1, "", "create_table"], [59, 5, 1, "", "create_table_and_save_to_sql"], [59, 5, 1, "", "database_exists"], [59, 5, 1, "", "database_table_exists"], [59, 5, 1, "", "get_primary_keys"], [59, 5, 1, "", "query_database"], [59, 5, 1, "", "run_sql_code"], [59, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[60, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[60, 4, 1, "", "resolve"]], "graphnet.data.writers": [[62, 0, 0, "-", "graphnet_writer"], [63, 0, 0, "-", "parquet_writer"], [64, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[62, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[62, 3, 1, "", "expects_merged_dataframes"], [62, 3, 1, "", "file_extension"], [62, 4, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[63, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[63, 4, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[64, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[64, 4, 1, "", "merge_files"]], "graphnet.datasets": [[66, 0, 0, "-", "prometheus_datasets"], [67, 0, 0, "-", "test_dataset"]], "graphnet.datasets.prometheus_datasets": [[66, 1, 1, "", "BaikalGVDSmall"], [66, 1, 1, "", "PONESmall"], [66, 1, 1, "", "PublicPrometheusDataset"], [66, 1, 1, "", "TRIDENTSmall"]], "graphnet.datasets.test_dataset": [[67, 1, 1, "", "TestDataset"]], "graphnet.deployment": [[69, 0, 0, "-", "deployer"], [70, 0, 0, "-", "deployment_module"], [71, 0, 0, "-", "i3modules"], [73, 0, 0, "-", "icecube"]], "graphnet.deployment.deployer": [[69, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[69, 4, 1, "", "run"]], "graphnet.deployment.deployment_module": [[70, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.i3modules": [[72, 0, 0, "-", "deprecated_methods"]], "graphnet.deployment.i3modules.deprecated_methods": [[72, 1, 1, "", "GraphNeTI3Deployer"]], "graphnet.deployment.icecube": [[74, 0, 0, "-", "cleaning_module"], [75, 0, 0, "-", "i3deployer"], [76, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[74, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.i3deployer": [[75, 1, 1, "", "I3Deployer"]], "graphnet.deployment.icecube.inference_module": [[76, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[78, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[78, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[80, 0, 0, "-", "coarsening"], [81, 0, 0, "-", "components"], [85, 0, 0, "-", "detector"], [90, 0, 0, "-", "easy_model"], [91, 0, 0, "-", "gnn"], [101, 0, 0, "-", "graphs"], [110, 0, 0, "-", "model"], [111, 0, 0, "-", "normalizing_flow"], [112, 0, 0, "-", "rnn"], [114, 0, 0, "-", "standard_averaged_model"], [115, 0, 0, "-", "standard_model"], [116, 0, 0, "-", "task"], [120, 0, 0, "-", "transformer"], [122, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[80, 1, 1, "", "AttributeCoarsening"], [80, 1, 1, "", "Coarsening"], [80, 1, 1, "", "CustomDOMCoarsening"], [80, 1, 1, "", "DOMAndTimeWindowCoarsening"], [80, 1, 1, "", "DOMCoarsening"], [80, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[80, 4, 1, "", "forward"], [80, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[82, 0, 0, "-", "embedding"], [83, 0, 0, "-", "layers"], [84, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[82, 1, 1, "", "FourierEncoder"], [82, 1, 1, "", "LinearEdgeEncoder"], [82, 1, 1, "", "LinearNodeEncoder"], [82, 1, 1, "", "RRWPLinearEdgeEncoder"], [82, 1, 1, "", "RRWPLinearNodeEncoder"], [82, 1, 1, "", "RWSELinearNodeEncoder"], [82, 1, 1, "", "SinusoidalPosEmb"], [82, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[82, 4, 1, "", "forward"]], "graphnet.models.components.embedding.LinearEdgeEncoder": [[82, 4, 1, "", "forward"]], "graphnet.models.components.embedding.LinearNodeEncoder": [[82, 4, 1, "", "forward"]], "graphnet.models.components.embedding.RRWPLinearEdgeEncoder": [[82, 4, 1, "", "forward"]], "graphnet.models.components.embedding.RRWPLinearNodeEncoder": [[82, 4, 1, "", "forward"]], "graphnet.models.components.embedding.RWSELinearNodeEncoder": [[82, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[82, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[82, 4, 1, "", "forward"]], "graphnet.models.components.layers": [[83, 1, 1, "", "Attention_rel"], [83, 1, 1, "", "Block"], [83, 1, 1, "", "Block_rel"], [83, 1, 1, "", "DropPath"], [83, 1, 1, "", "DynEdgeConv"], [83, 1, 1, "", "DynTrans"], [83, 1, 1, "", "EdgeConvTito"], [83, 1, 1, "", "GritSparseMHA"], [83, 1, 1, "", "GritTransformerLayer"], [83, 1, 1, "", "Mlp"], [83, 1, 1, "", "SANGraphHead"]], "graphnet.models.components.layers.Attention_rel": [[83, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[83, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[83, 4, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[83, 4, 1, "", "extra_repr"], [83, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[83, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[83, 4, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[83, 4, 1, "", "forward"], [83, 4, 1, "", "message"], [83, 4, 1, "", "reset_parameters"]], "graphnet.models.components.layers.GritSparseMHA": [[83, 4, 1, "", "forward"]], "graphnet.models.components.layers.GritTransformerLayer": [[83, 4, 1, "", "forward"]], "graphnet.models.components.layers.Mlp": [[83, 4, 1, "", "forward"]], "graphnet.models.components.layers.SANGraphHead": [[83, 4, 1, "", "forward"]], "graphnet.models.components.pool": [[84, 5, 1, "", "group_by"], [84, 5, 1, "", "group_pulses_to_dom"], [84, 5, 1, "", "group_pulses_to_pmt"], [84, 5, 1, "", "min_pool"], [84, 5, 1, "", "min_pool_x"], [84, 5, 1, "", "std_pool"], [84, 5, 1, "", "std_pool_x"], [84, 5, 1, "", "sum_pool"], [84, 5, 1, "", "sum_pool_and_distribute"], [84, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[86, 0, 0, "-", "detector"], [87, 0, 0, "-", "icecube"], [88, 0, 0, "-", "liquido"], [89, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[86, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[86, 4, 1, "", "feature_map"], [86, 4, 1, "", "forward"], [86, 3, 1, "", "geometry_table"], [86, 3, 1, "", "sensor_index_name"], [86, 3, 1, "", "sensor_position_names"], [86, 3, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[87, 1, 1, "", "IceCube86"], [87, 1, 1, "", "IceCubeDeepCore"], [87, 1, 1, "", "IceCubeKaggle"], [87, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[87, 4, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[87, 4, 1, "", "feature_map"], [87, 2, 1, "", "geometry_table_path"], [87, 2, 1, "", "sensor_id_column"], [87, 2, 1, "", "string_id_column"], [87, 2, 1, "", "xyz"]], "graphnet.models.detector.liquido": [[88, 1, 1, "", "LiquidO_v1"]], "graphnet.models.detector.liquido.LiquidO_v1": [[88, 4, 1, "", "feature_map"], [88, 2, 1, "", "geometry_table_path"], [88, 2, 1, "", "sensor_id_column"], [88, 2, 1, "", "string_id_column"], [88, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[89, 1, 1, "", "ARCA115"], [89, 1, 1, "", "BaikalGVD8"], [89, 1, 1, "", "IceCube86Prometheus"], [89, 1, 1, "", "IceCubeDeepCore8"], [89, 1, 1, "", "IceCubeGen2"], [89, 1, 1, "", "IceCubeUpgrade7"], [89, 1, 1, "", "IceDemo81"], [89, 1, 1, "", "ORCA150"], [89, 1, 1, "", "ORCA150SuperDense"], [89, 1, 1, "", "PONETriangle"], [89, 1, 1, "", "Prometheus"], [89, 1, 1, "", "TRIDENT1211"], [89, 1, 1, "", "WaterDemo81"]], "graphnet.models.detector.prometheus.ARCA115": [[89, 4, 1, "", "feature_map"], [89, 2, 1, "", "geometry_table_path"], [89, 2, 1, "", "sensor_id_column"], [89, 2, 1, "", "string_id_column"], [89, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.BaikalGVD8": [[89, 4, 1, "", "feature_map"], [89, 2, 1, "", "geometry_table_path"], [89, 2, 1, "", "sensor_id_column"], [89, 2, 1, "", "string_id_column"], [89, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCube86Prometheus": [[89, 4, 1, "", "feature_map"], [89, 2, 1, "", "geometry_table_path"], [89, 2, 1, "", "sensor_id_column"], [89, 2, 1, "", "string_id_column"], [89, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeDeepCore8": [[89, 4, 1, "", "feature_map"], [89, 2, 1, "", "geometry_table_path"], [89, 2, 1, "", "sensor_id_column"], [89, 2, 1, "", "string_id_column"], [89, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeGen2": [[89, 4, 1, "", "feature_map"], [89, 2, 1, "", "geometry_table_path"], [89, 2, 1, "", "sensor_id_column"], [89, 2, 1, "", "string_id_column"], [89, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeUpgrade7": [[89, 4, 1, "", "feature_map"], [89, 2, 1, "", "geometry_table_path"], [89, 2, 1, "", "sensor_id_column"], [89, 2, 1, "", "string_id_column"], [89, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceDemo81": [[89, 4, 1, "", "feature_map"], [89, 2, 1, "", "geometry_table_path"], [89, 2, 1, "", "sensor_id_column"], [89, 2, 1, "", "string_id_column"], [89, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150": [[89, 4, 1, "", "feature_map"], [89, 2, 1, "", "geometry_table_path"], [89, 2, 1, "", "sensor_id_column"], [89, 2, 1, "", "string_id_column"], [89, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150SuperDense": [[89, 4, 1, "", "feature_map"], [89, 2, 1, "", "geometry_table_path"], [89, 2, 1, "", "sensor_id_column"], [89, 2, 1, "", "string_id_column"], [89, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.PONETriangle": [[89, 4, 1, "", "feature_map"], [89, 2, 1, "", "geometry_table_path"], [89, 2, 1, "", "sensor_id_column"], [89, 2, 1, "", "string_id_column"], [89, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.TRIDENT1211": [[89, 4, 1, "", "feature_map"], [89, 2, 1, "", "geometry_table_path"], [89, 2, 1, "", "sensor_id_column"], [89, 2, 1, "", "string_id_column"], [89, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.WaterDemo81": [[89, 4, 1, "", "feature_map"], [89, 2, 1, "", "geometry_table_path"], [89, 2, 1, "", "sensor_id_column"], [89, 2, 1, "", "string_id_column"], [89, 2, 1, "", "xyz"]], "graphnet.models.easy_model": [[90, 1, 1, "", "EasySyntax"]], "graphnet.models.easy_model.EasySyntax": [[90, 4, 1, "", "compute_loss"], [90, 4, 1, "", "configure_optimizers"], [90, 4, 1, "", "fit"], [90, 4, 1, "", "forward"], [90, 4, 1, "", "inference"], [90, 4, 1, "", "predict"], [90, 4, 1, "", "predict_as_dataframe"], [90, 3, 1, "", "prediction_labels"], [90, 4, 1, "", "shared_step"], [90, 3, 1, "", "target_labels"], [90, 4, 1, "", "train"], [90, 4, 1, "", "training_step"], [90, 4, 1, "", "validate_tasks"], [90, 4, 1, "", "validation_step"]], "graphnet.models.gnn": [[92, 0, 0, "-", "RNN_tito"], [93, 0, 0, "-", "convnet"], [94, 0, 0, "-", "dynedge"], [95, 0, 0, "-", "dynedge_jinst"], [96, 0, 0, "-", "dynedge_kaggle_tito"], [97, 0, 0, "-", "gnn"], [98, 0, 0, "-", "grit"], [99, 0, 0, "-", "icemix"], [100, 0, 0, "-", "particlenet"]], "graphnet.models.gnn.RNN_tito": [[92, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[92, 4, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[93, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[93, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[94, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[94, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[95, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[95, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[96, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[96, 4, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[97, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[97, 4, 1, "", "forward"], [97, 3, 1, "", "nb_inputs"], [97, 3, 1, "", "nb_outputs"]], "graphnet.models.gnn.grit": [[98, 1, 1, "", "GRIT"]], "graphnet.models.gnn.grit.GRIT": [[98, 4, 1, "", "forward"]], "graphnet.models.gnn.icemix": [[99, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[99, 4, 1, "", "forward"], [99, 4, 1, "", "no_weight_decay"]], "graphnet.models.gnn.particlenet": [[100, 1, 1, "", "ParticleNeT"]], "graphnet.models.gnn.particlenet.ParticleNeT": [[100, 4, 1, "", "forward"]], "graphnet.models.graphs": [[102, 0, 0, "-", "edges"], [105, 0, 0, "-", "graph_definition"], [106, 0, 0, "-", "graphs"], [107, 0, 0, "-", "nodes"], [109, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[103, 0, 0, "-", "edges"], [104, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[103, 1, 1, "", "EdgeDefinition"], [103, 1, 1, "", "EuclideanEdges"], [103, 1, 1, "", "KNNDistanceEdges"], [103, 1, 1, "", "KNNEdges"], [103, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[103, 4, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[104, 1, 1, "", "MinkowskiKNNEdges"], [104, 5, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[105, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[105, 4, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[106, 1, 1, "", "EdgelessGraph"], [106, 1, 1, "", "KNNGraph"], [106, 1, 1, "", "KNNGraphRRWP"], [106, 1, 1, "", "KNNGraphRWSE"]], "graphnet.models.graphs.graphs.KNNGraphRRWP": [[106, 4, 1, "", "forward"]], "graphnet.models.graphs.graphs.KNNGraphRWSE": [[106, 4, 1, "", "forward"]], "graphnet.models.graphs.nodes": [[108, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[108, 1, 1, "", "IceMixNodes"], [108, 1, 1, "", "NodeAsDOMTimeSeries"], [108, 1, 1, "", "NodeDefinition"], [108, 1, 1, "", "NodesAsPulses"], [108, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[108, 4, 1, "", "forward"], [108, 3, 1, "", "nb_outputs"], [108, 4, 1, "", "set_number_of_inputs"], [108, 4, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[109, 1, 1, "", "cluster_and_pad"], [109, 5, 1, "", "cluster_summarize_with_percentiles"], [109, 5, 1, "", "gather_cluster_sequence"], [109, 5, 1, "", "ice_transparency"], [109, 5, 1, "", "identify_indices"], [109, 5, 1, "", "lex_sort"]], "graphnet.models.graphs.utils.cluster_and_pad": [[109, 4, 1, "", "add_charge_threshold_summary"], [109, 4, 1, "", "add_counts"], [109, 4, 1, "", "add_mean"], [109, 4, 1, "", "add_percentile_summary"], [109, 4, 1, "", "add_std"], [109, 4, 1, "", "add_sum_charge"]], "graphnet.models.model": [[110, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[110, 4, 1, "", "extra_repr"], [110, 4, 1, "", "extra_repr_recursive"], [110, 4, 1, "", "from_config"], [110, 4, 1, "", "load"], [110, 4, 1, "", "load_state_dict"], [110, 4, 1, "", "save"], [110, 4, 1, "", "save_state_dict"], [110, 4, 1, "", "set_verbose_print_recursively"], [110, 2, 1, "", "verbose_print"]], "graphnet.models.normalizing_flow": [[111, 1, 1, "", "NormalizingFlow"]], "graphnet.models.normalizing_flow.NormalizingFlow": [[111, 4, 1, "", "forward"], [111, 4, 1, "", "shared_step"], [111, 4, 1, "", "validate_tasks"]], "graphnet.models.rnn": [[113, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[113, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[113, 4, 1, "", "clean_up_data_object"], [113, 4, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[114, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[114, 4, 1, "", "load_state_dict"], [114, 4, 1, "", "on_train_end"], [114, 4, 1, "", "optimizer_step"], [114, 4, 1, "", "training_step"], [114, 4, 1, "", "validation_step"]], "graphnet.models.standard_model": [[115, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[115, 4, 1, "", "compute_loss"], [115, 4, 1, "", "forward"], [115, 4, 1, "", "shared_step"], [115, 4, 1, "", "validate_tasks"]], "graphnet.models.task": [[117, 0, 0, "-", "classification"], [118, 0, 0, "-", "reconstruction"], [119, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[117, 1, 1, "", "BinaryClassificationTask"], [117, 1, 1, "", "BinaryClassificationTaskLogits"], [117, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[117, 2, 1, "", "default_prediction_labels"], [117, 2, 1, "", "default_target_labels"], [117, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[117, 2, 1, "", "default_prediction_labels"], [117, 2, 1, "", "default_target_labels"], [117, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[118, 1, 1, "", "AzimuthReconstruction"], [118, 1, 1, "", "AzimuthReconstructionWithKappa"], [118, 1, 1, "", "DirectionReconstructionWithKappa"], [118, 1, 1, "", "EnergyReconstruction"], [118, 1, 1, "", "EnergyReconstructionWithPower"], [118, 1, 1, "", "EnergyReconstructionWithUncertainty"], [118, 1, 1, "", "EnergyTCReconstruction"], [118, 1, 1, "", "InelasticityReconstruction"], [118, 1, 1, "", "PositionReconstruction"], [118, 1, 1, "", "TimeReconstruction"], [118, 1, 1, "", "VertexReconstruction"], [118, 1, 1, "", "VisibleInelasticityReconstruction"], [118, 1, 1, "", "ZenithReconstruction"], [118, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[118, 2, 1, "", "default_prediction_labels"], [118, 2, 1, "", "default_target_labels"], [118, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[118, 2, 1, "", "default_prediction_labels"], [118, 2, 1, "", "default_target_labels"], [118, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[118, 2, 1, "", "default_prediction_labels"], [118, 2, 1, "", "default_target_labels"], [118, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[118, 2, 1, "", "default_prediction_labels"], [118, 2, 1, "", "default_target_labels"], [118, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[118, 2, 1, "", "default_prediction_labels"], [118, 2, 1, "", "default_target_labels"], [118, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[118, 2, 1, "", "default_prediction_labels"], [118, 2, 1, "", "default_target_labels"], [118, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[118, 2, 1, "", "default_prediction_labels"], [118, 2, 1, "", "default_target_labels"], [118, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[118, 2, 1, "", "default_prediction_labels"], [118, 2, 1, "", "default_target_labels"], [118, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[118, 2, 1, "", "default_prediction_labels"], [118, 2, 1, "", "default_target_labels"], [118, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[118, 2, 1, "", "default_prediction_labels"], [118, 2, 1, "", "default_target_labels"], [118, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[118, 2, 1, "", "default_prediction_labels"], [118, 2, 1, "", "default_target_labels"], [118, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction": [[118, 2, 1, "", "default_prediction_labels"], [118, 2, 1, "", "default_target_labels"], [118, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[118, 2, 1, "", "default_prediction_labels"], [118, 2, 1, "", "default_target_labels"], [118, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[118, 2, 1, "", "default_prediction_labels"], [118, 2, 1, "", "default_target_labels"], [118, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[119, 1, 1, "", "IdentityTask"], [119, 1, 1, "", "LearnedTask"], [119, 1, 1, "", "StandardFlowTask"], [119, 1, 1, "", "StandardLearnedTask"], [119, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[119, 3, 1, "", "default_prediction_labels"], [119, 3, 1, "", "default_target_labels"], [119, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[119, 4, 1, "", "compute_loss"], [119, 4, 1, "", "forward"], [119, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[119, 3, 1, "", "default_prediction_labels"], [119, 4, 1, "", "forward"], [119, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[119, 4, 1, "", "compute_loss"], [119, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[119, 3, 1, "", "default_prediction_labels"], [119, 3, 1, "", "default_target_labels"], [119, 4, 1, "", "inference"], [119, 3, 1, "", "nb_inputs"], [119, 4, 1, "", "train_eval"]], "graphnet.models.transformer": [[121, 0, 0, "-", "iseecube"]], "graphnet.models.transformer.iseecube": [[121, 1, 1, "", "ISeeCube"]], "graphnet.models.transformer.iseecube.ISeeCube": [[121, 4, 1, "", "forward"]], "graphnet.models.utils": [[122, 5, 1, "", "add_full_rrwp"], [122, 5, 1, "", "array_to_sequence"], [122, 5, 1, "", "calculate_distance_matrix"], [122, 5, 1, "", "calculate_xyzt_homophily"], [122, 5, 1, "", "full_edge_index"], [122, 5, 1, "", "get_fields"], [122, 5, 1, "", "get_rw_landing_probs"], [122, 5, 1, "", "knn_graph_batch"]], "graphnet.training": [[124, 0, 0, "-", "callbacks"], [125, 0, 0, "-", "labels"], [126, 0, 0, "-", "loss_functions"], [127, 0, 0, "-", "utils"], [128, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[124, 1, 1, "", "GraphnetEarlyStopping"], [124, 1, 1, "", "PiecewiseLinearLR"], [124, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[124, 4, 1, "", "on_fit_end"], [124, 4, 1, "", "on_train_epoch_end"], [124, 4, 1, "", "on_validation_end"], [124, 4, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[124, 4, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[124, 4, 1, "", "get_metrics"], [124, 4, 1, "", "init_predict_tqdm"], [124, 4, 1, "", "init_test_tqdm"], [124, 4, 1, "", "init_train_tqdm"], [124, 4, 1, "", "init_validation_tqdm"], [124, 4, 1, "", "on_train_epoch_end"], [124, 4, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[125, 1, 1, "", "Direction"], [125, 1, 1, "", "Label"], [125, 1, 1, "", "Track"]], "graphnet.training.labels.Label": [[125, 3, 1, "", "key"]], "graphnet.training.loss_functions": [[126, 1, 1, "", "BinaryCrossEntropyLoss"], [126, 1, 1, "", "CrossEntropyLoss"], [126, 1, 1, "", "EnsembleLoss"], [126, 1, 1, "", "EuclideanDistanceLoss"], [126, 1, 1, "", "LogCMK"], [126, 1, 1, "", "LogCoshLoss"], [126, 1, 1, "", "LossFunction"], [126, 1, 1, "", "MAELoss"], [126, 1, 1, "", "MSELoss"], [126, 1, 1, "", "RMSELoss"], [126, 1, 1, "", "RMSEVonMisesFisher3DLoss"], [126, 1, 1, "", "VonMisesFisher2DLoss"], [126, 1, 1, "", "VonMisesFisher3DLoss"], [126, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[126, 4, 1, "", "backward"], [126, 4, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[126, 4, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[126, 4, 1, "", "log_cmk"], [126, 4, 1, "", "log_cmk_approx"], [126, 4, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[127, 5, 1, "", "collate_fn"], [127, 1, 1, "", "collator_sequence_buckleting"], [127, 5, 1, "", "get_predictions"], [127, 5, 1, "", "make_dataloader"], [127, 5, 1, "", "make_train_validation_dataloader"], [127, 5, 1, "", "save_results"], [127, 5, 1, "", "save_selection"]], "graphnet.training.weight_fitting": [[128, 1, 1, "", "BjoernLow"], [128, 1, 1, "", "Uniform"], [128, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[128, 4, 1, "", "fit"]], "graphnet.utilities": [[130, 0, 0, "-", "argparse"], [131, 0, 0, "-", "config"], [138, 0, 0, "-", "decorators"], [139, 0, 0, "-", "deprecation_tools"], [140, 0, 0, "-", "filesys"], [141, 0, 0, "-", "imports"], [142, 0, 0, "-", "logging"], [143, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[130, 1, 1, "", "ArgumentParser"], [130, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[130, 2, 1, "", "standard_arguments"], [130, 4, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[130, 4, 1, "", "contains"], [130, 4, 1, "", "pop_default"]], "graphnet.utilities.config": [[132, 0, 0, "-", "base_config"], [133, 0, 0, "-", "configurable"], [134, 0, 0, "-", "dataset_config"], [135, 0, 0, "-", "model_config"], [136, 0, 0, "-", "parsing"], [137, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[132, 1, 1, "", "BaseConfig"], [132, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[132, 4, 1, "", "as_dict"], [132, 4, 1, "", "dump"], [132, 4, 1, "", "load"], [132, 2, 1, "", "model_config"]], "graphnet.utilities.config.configurable": [[133, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[133, 3, 1, "", "config"], [133, 4, 1, "", "from_config"], [133, 4, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[134, 1, 1, "", "DatasetConfig"], [134, 1, 1, "", "DatasetConfigSaverABCMeta"], [134, 1, 1, "", "DatasetConfigSaverMeta"], [134, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[134, 4, 1, "", "as_dict"], [134, 2, 1, "", "features"], [134, 2, 1, "", "graph_definition"], [134, 2, 1, "", "index_column"], [134, 2, 1, "", "labels"], [134, 2, 1, "", "loss_weight_column"], [134, 2, 1, "", "loss_weight_default_value"], [134, 2, 1, "", "loss_weight_table"], [134, 2, 1, "", "model_config"], [134, 2, 1, "", "node_truth"], [134, 2, 1, "", "node_truth_table"], [134, 2, 1, "", "path"], [134, 2, 1, "", "pulsemaps"], [134, 2, 1, "", "seed"], [134, 2, 1, "", "selection"], [134, 2, 1, "", "string_selection"], [134, 2, 1, "", "truth"], [134, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[135, 1, 1, "", "ModelConfig"], [135, 1, 1, "", "ModelConfigSaverABC"], [135, 1, 1, "", "ModelConfigSaverMeta"], [135, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[135, 2, 1, "", "arguments"], [135, 4, 1, "", "as_dict"], [135, 2, 1, "", "class_name"], [135, 2, 1, "", "model_config"]], "graphnet.utilities.config.parsing": [[136, 5, 1, "", "get_all_grapnet_classes"], [136, 5, 1, "", "get_graphnet_classes"], [136, 5, 1, "", "is_graphnet_class"], [136, 5, 1, "", "is_graphnet_module"], [136, 5, 1, "", "list_all_submodules"], [136, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[137, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[137, 2, 1, "", "dataloader"], [137, 2, 1, "", "early_stopping_patience"], [137, 2, 1, "", "fit"], [137, 2, 1, "", "model_config"], [137, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[139, 5, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[140, 5, 1, "", "find_i3_files"], [140, 5, 1, "", "has_extension"], [140, 5, 1, "", "is_gcd_file"], [140, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[141, 5, 1, "", "has_icecube_package"], [141, 5, 1, "", "has_jammy_flows_package"], [141, 5, 1, "", "has_torch_package"], [141, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[142, 1, 1, "", "Logger"], [142, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[142, 4, 1, "", "critical"], [142, 4, 1, "", "debug"], [142, 4, 1, "", "error"], [142, 3, 1, "", "file_handlers"], [142, 3, 1, "", "handlers"], [142, 4, 1, "", "info"], [142, 4, 1, "", "setLevel"], [142, 3, 1, "", "stream_handlers"], [142, 4, 1, "", "warning"], [142, 4, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[142, 4, 1, "", "filter"], [142, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[143, 5, 1, "", "eps_like"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:exception"}, "terms": {"": [0, 7, 8, 9, 11, 13, 16, 34, 45, 47, 49, 52, 53, 55, 62, 64, 69, 82, 86, 90, 93, 94, 100, 105, 111, 119, 122, 124, 128, 130, 134, 135, 142, 143, 146, 147, 148, 149, 151, 152, 153], "0": [9, 11, 13, 16, 31, 45, 47, 50, 55, 60, 74, 80, 82, 83, 84, 92, 93, 94, 96, 98, 100, 103, 104, 106, 109, 113, 119, 122, 125, 126, 127, 134, 147, 148, 150, 151, 153], "000": 147, "001": [148, 153], "01": [148, 153], "0221": 148, "02_data": 148, "03042": 95, "03762": 82, "04616": 126, "04_ensemble_dataset": 148, "05": 126, "06": 145, "06166": 103, "08570": 100, "0e04": 151, "0e4": 151, "1": [0, 7, 9, 11, 13, 14, 19, 34, 45, 47, 55, 60, 63, 66, 69, 72, 75, 80, 83, 84, 92, 94, 96, 98, 99, 100, 103, 104, 106, 109, 113, 117, 118, 119, 122, 124, 125, 126, 127, 128, 134, 146, 147, 148, 149, 150, 152, 153], "10": [9, 66, 87, 88, 89, 98, 108, 109, 130, 147, 148, 151, 153], "100": 147, "1000": [119, 147, 148], "10000": [11, 13, 16, 60, 82], "1088": 148, "10th": 109, "11": [148, 150], "12": [60, 99, 121, 134, 147, 148], "120": 148, "128": [82, 93, 94, 96, 100, 130, 147, 148, 153], "13": 60, "14": [60, 134, 147, 148], "1536": 121, "15674": 82, "16": [14, 60, 82, 92, 100, 121, 134, 147, 148, 153], "17": [14, 148], "1706": 82, "1748": 148, "17589": 98, "1809": 103, "1812": 126, "1902": 100, "192": 99, "196": 121, "1e6": 119, "2": [9, 34, 45, 55, 83, 84, 92, 94, 96, 98, 100, 103, 106, 109, 113, 118, 122, 126, 134, 147, 148, 150, 153], "20": [11, 13, 16, 60, 142, 148, 150, 151, 153], "200": [147, 151], "200000": 63, "2018": 145, "2019": 126, "2020": [0, 149, 152], "2023": 14, "21": [98, 145, 147, 148], "2209": 95, "2305": 98, "2310": 82, "256": [94, 96, 100, 121], "26": 147, "2d": [122, 126], "2nd": [14, 82, 99], "3": [84, 92, 93, 96, 104, 109, 113, 118, 121, 122, 126, 145, 148, 150, 151], "30": 151, "300": [147, 151], "32": [14, 82, 99, 121], "336": [94, 96], "384": [82, 99, 121], "39": [0, 149, 152], "3d": [118, 126], "4": [14, 83, 95, 99, 109, 118, 148, 151, 153], "40": 151, "400": 64, "42": 9, "5": [11, 13, 16, 60, 83, 92, 98, 109, 113, 126, 130, 146, 147, 148, 150, 151, 153], "50": [108, 109, 130, 151], "500": [109, 151], "50000": [60, 134, 147, 148], "5001": 147, "50th": 109, "59": 150, "6": [82, 84, 99, 121], "64": [92, 100], "7": [74, 84], "700": 126, "768": 108, "8": [83, 84, 92, 94, 96, 98, 106, 113, 122, 126, 127, 145, 147, 148, 150, 153], "80": [148, 153], "86": [22, 87], "890778": [0, 149, 152], "9": 9, "90": [108, 109], "90th": 109, "A": [5, 7, 9, 11, 14, 36, 49, 50, 51, 52, 53, 59, 64, 66, 67, 69, 70, 74, 75, 84, 86, 87, 88, 89, 90, 105, 106, 109, 110, 111, 115, 117, 119, 122, 126, 128, 146, 147, 148, 151, 153], "AND": [14, 126], "AS": [14, 126], "As": [94, 100, 153], "BE": [14, 126], "BUT": [14, 126], "But": 153, "By": [0, 45, 47, 50, 55, 119, 147, 148, 149, 152, 153], "FOR": [14, 126], "For": [14, 37, 108, 124, 147, 148, 153], "IN": [14, 126], "If": [5, 11, 13, 14, 21, 23, 31, 36, 64, 66, 67, 82, 83, 94, 99, 100, 105, 108, 109, 110, 119, 124, 126, 128, 145, 146, 148, 153], "In": [45, 47, 49, 50, 55, 62, 122, 134, 135, 146, 148, 150], "It": [1, 5, 34, 59, 74, 82, 109, 117, 119, 145, 147, 148, 153], "NO": [14, 126], "NOT": [14, 59, 126, 148], "No": [0, 148, 149, 152], "OF": [14, 126], "ONE": 66, "OR": [14, 126], "On": 5, "One": 148, "Or": 147, "Such": 59, "THE": [14, 126], "TO": [14, 126], "That": [11, 13, 16, 94, 100, 118, 125, 148, 153], "The": [0, 7, 9, 11, 13, 14, 16, 18, 34, 37, 45, 47, 55, 59, 62, 63, 64, 69, 70, 72, 74, 75, 76, 80, 82, 83, 84, 92, 94, 96, 99, 100, 103, 105, 106, 109, 111, 113, 117, 118, 119, 121, 122, 124, 125, 126, 139, 146, 147, 149, 151, 152], "Then": [5, 145], "There": [148, 153], "These": [0, 49, 62, 64, 105, 145, 147, 148, 149, 151, 152, 153], "To": [147, 148, 150, 151, 153], "WITH": [14, 126], "Will": [5, 66, 67, 69, 72, 74, 75, 76, 103, 146], "With": [148, 151, 153], "_": 148, "__": [34, 37, 148], "_____________________": [14, 126], "__call__": [19, 21, 49, 70, 146, 147, 148, 151], "__init__": [134, 135, 146, 147, 148, 153], "_accepted_extractor": [146, 151], "_accepted_file_extens": [146, 151], "_and_": [94, 100], "_charge_sum": 109, "_charge_weight": 109, "_cluster_nam": 109, "_column_nam": 146, "_construct_edg": 103, "_count": 109, "_definition_": 148, "_extractor": [146, 151], "_extractor_nam": [146, 151], "_file_extens": 146, "_file_hash": 5, "_fit_weight": 128, "_forward": 153, "_indic": [11, 13], "_layer": 153, "_lrschedul": 124, "_may_": [11, 13], "_merge_datafram": 146, "_padded_x": 109, "_pred": 119, "_save_fil": 146, "_sensor_tim": 151, "_sensor_xyz": 151, "_tabl": 146, "_task": [90, 111, 115], "_verify_column": 146, "_x_": 148, "a__b": 34, "ab": [60, 98, 100, 126, 134, 147, 148], "abc": [7, 11, 19, 49, 62, 69, 110, 125, 128, 133, 134, 135], "abcmeta": [134, 135], "abil": 147, "abl": [34, 108, 111, 146, 148, 150, 151, 153], "about": [110, 147, 148, 151], "abov": [14, 126, 128, 147, 148, 151, 153], "abs_p": 106, "absolut": [83, 98, 106, 122, 126], "absopt": 108, "absorpt": 109, "abstract": [1, 5, 11, 62, 86, 97, 105, 119, 133, 148], "abstractmethod": 147, "acceler": 1, "accept": [49, 145, 153], "accepted_extractor": [49, 146], "accepted_file_extens": [49, 146], "access": [106, 125, 147], "accompani": [45, 47, 50, 55, 148], "accord": [80, 84, 103, 105, 106, 109, 126], "achiev": 150, "achitectur": 153, "across": [1, 2, 11, 13, 16, 37, 56, 69, 72, 75, 84, 90, 115, 122, 126, 129, 130, 131, 142, 151], "act": [119, 126, 148, 153], "action": [14, 126], "activ": [83, 90, 92, 94, 98, 100, 108, 113, 119, 145], "activation_lay": [94, 100], "actual": [148, 153], "ad": [7, 11, 13, 16, 22, 45, 47, 55, 82, 94, 99, 108, 109], "adam": [111, 148, 153], "adapt": [98, 148, 153], "add": [11, 82, 83, 94, 98, 100, 106, 109, 122, 130, 139, 145, 148, 151], "add_batchnorm_lay": 100, "add_charge_threshold_summari": 109, "add_count": [108, 109], "add_full_rrwp": [79, 122], "add_global_variables_after_pool": [94, 148, 153], "add_ice_properti": 108, "add_ident": 122, "add_inactive_sensor": 105, "add_label": [11, 147, 148], "add_mean": 109, "add_node_attr_as_self_loop": [82, 98], "add_norm_lay": 94, "add_percentile_summari": 109, "add_std": 109, "add_sum_charg": 109, "add_to_databas": 128, "addit": [49, 62, 80, 83, 90, 106, 109, 126, 128, 146, 148, 153], "additional_attribut": [90, 127, 148, 153], "address": 153, "adher": [145, 153], "adjac": [86, 122], "adjust": 153, "advanc": [1, 84], "after": [9, 83, 92, 94, 96, 98, 100, 124, 130, 134, 147, 148, 153], "again": [148, 153], "against": 5, "aggr": 83, "aggreg": [83, 84, 109], "agnost": [0, 149, 152, 153], "agreement": [0, 145, 149, 152], "ai": 148, "aim": [0, 1, 145, 148, 149, 152], "algorithm": 26, "all": [1, 5, 11, 13, 14, 16, 18, 19, 21, 23, 36, 59, 64, 66, 67, 74, 82, 83, 84, 86, 94, 97, 100, 104, 105, 109, 110, 119, 126, 128, 132, 133, 134, 135, 136, 137, 142, 145, 146, 147, 148, 151, 153], "allow": [0, 5, 39, 68, 71, 79, 84, 124, 132, 137, 147, 148, 149, 152, 153], "almost": 122, "along": [109, 148, 153], "alongsid": [148, 153], "alreadi": 59, "also": [7, 11, 13, 16, 60, 92, 134, 146, 147, 148, 151, 153], "alter": [105, 109], "altern": [94, 126, 145], "alwai": 127, "amount": 92, "an": [0, 14, 19, 37, 45, 47, 50, 55, 60, 71, 75, 98, 105, 106, 113, 114, 126, 140, 142, 145, 146, 148, 149, 150, 151, 152, 153], "anaconda": 150, "analys": [68, 148], "analysi": [69, 75], "angl": [118, 125, 148, 153], "ani": [6, 7, 8, 9, 11, 13, 14, 16, 34, 35, 36, 37, 49, 51, 52, 53, 62, 64, 74, 80, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 124, 126, 128, 130, 132, 133, 134, 135, 136, 137, 142, 147, 148, 153], "anoth": [14, 134, 135, 147, 148], "anyth": 145, "api": [144, 146, 148], "appear": [69, 72, 75, 147, 148], "append": 105, "appli": [7, 11, 13, 16, 45, 47, 48, 49, 55, 69, 72, 75, 82, 83, 84, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 109, 111, 113, 115, 117, 119, 121, 126, 136, 146, 147, 148], "applic": [34, 147, 148, 153], "apply_norm": 82, "appropri": [59, 119, 148], "approx": 126, "approxim": 64, "ar": [0, 1, 4, 5, 11, 13, 14, 16, 21, 23, 31, 36, 37, 49, 60, 62, 63, 64, 69, 74, 75, 83, 84, 92, 94, 96, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 117, 122, 126, 128, 134, 135, 145, 146, 147, 148, 149, 151, 152, 153], "arbitrari": [0, 149, 152], "arca": 89, "arca115": [85, 89], "architectur": [1, 93, 94, 95, 96, 100, 111, 113, 121, 148, 153], "archiv": 127, "area": 1, "arg": [11, 13, 16, 18, 36, 80, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 110, 111, 113, 114, 115, 117, 118, 119, 121, 126, 130, 132, 142, 146, 151], "argpars": [1, 129], "argument": [5, 9, 14, 63, 66, 67, 99, 111, 124, 128, 130, 132, 134, 135, 137, 147, 148, 151, 153], "argumentpars": [129, 130], "aris": [14, 126], "arrai": [19, 31, 34, 108, 109, 122, 146, 147, 148, 151], "array_to_sequ": [79, 122], "arriv": 147, "art": [0, 149, 152], "articl": 148, "artifact": [148, 153], "arxiv": [82, 98, 100, 103, 126], "as_dict": [132, 134, 135, 148, 153], "assert": [146, 147], "assertionerror": 146, "assign": [7, 11, 13, 16, 80, 84, 103, 106, 122, 145, 146], "associ": [14, 74, 76, 105, 109, 118, 126, 146, 147, 148, 151, 153], "assort": 143, "assum": [5, 74, 82, 86, 105, 109, 119, 122], "atmospher": 147, "attach": 59, "attach_index": [56, 59], "attempt": [21, 31, 148], "attent": [82, 83, 98, 99, 121], "attention_rel": [81, 83], "attn_activ": [83, 98], "attn_bia": 83, "attn_clamp": [83, 98], "attn_drop": 83, "attn_dropout": [83, 98], "attn_edge_enh": 83, "attn_head_dim": 83, "attn_mask": 83, "attr": [82, 98], "attr_name_ab": 122, "attr_name_rel": 122, "attribut": [5, 11, 13, 16, 80, 82, 103, 119, 147, 148, 153], "attributecoarsen": [79, 80], "author": [14, 93, 95, 98, 126], "auto": 119, "autom": 145, "automat": [23, 63, 82, 105, 109, 126, 145, 146, 148, 151], "automatic_log_bin": 128, "auxiliari": [4, 82, 148, 153], "avail": [5, 7, 23, 66, 67, 117, 118, 119, 141, 146, 147, 148, 150, 151, 153], "available_backend": 5, "available_t": 146, "averag": [84, 114, 126], "avg": 80, "avg_pool": 80, "avg_pool_x": 80, "avoid": [13, 142, 145], "awai": [1, 148], "azimiuth": 125, "azimuth": [4, 118, 125], "azimuth_kappa": 118, "azimuth_kei": 125, "azimuth_pr": 118, "azimuthreconstruct": [116, 118], "azimuthreconstructionwithkappa": [116, 118], "b": [34, 80, 84, 122, 148, 151, 153], "backbon": [111, 148], "backend": [5, 12, 15, 61, 63, 66, 67, 151], "backward": [109, 126], "baikal": 66, "baikalgvd8": [85, 89], "baikalgvdsmal": [65, 66], "bar": 124, "base": [0, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 60, 62, 63, 64, 66, 67, 69, 70, 72, 74, 75, 76, 78, 80, 82, 83, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 137, 141, 142, 146, 147, 148, 149, 152, 153], "base_config": [129, 131], "baseclass": [69, 75], "baseconfig": [131, 132, 133, 134, 135, 137], "basemodel": [132, 134, 135], "basi": 153, "basic": [1, 148], "batch": [0, 8, 13, 14, 63, 80, 83, 84, 90, 100, 111, 113, 115, 122, 127, 130, 147, 149, 152], "batch_idx": [90, 111, 114, 115, 122], "batch_norm_momentum": 83, "batch_norm_runn": 83, "batch_siz": [8, 9, 14, 122, 127, 147, 148, 153], "batch_split": 127, "batchnorm": [82, 83, 98], "batchnorm1d": [82, 83, 98], "batchsampl": 14, "becaus": [58, 148, 153], "been": [5, 72, 74, 126, 145, 153], "befor": [11, 13, 94, 104, 113, 119, 124], "behavior": 146, "behaviour": 124, "behind": [148, 153], "being": [21, 31, 74, 82, 117, 119, 147, 148, 153], "beitv2": 83, "belong": 122, "below": [5, 60, 108, 128, 145, 146, 148, 149, 151, 152, 153], "benchmark": [5, 122], "besid": 147, "bessel": 126, "best": [0, 124, 145, 149, 152], "better": 145, "between": [39, 66, 82, 90, 101, 102, 103, 104, 107, 111, 115, 119, 122, 124, 126, 128, 134, 135, 148, 153], "bia": [82, 83, 121], "bias": [98, 148, 153], "big": [148, 153], "biject": 146, "bin": [14, 128], "binari": [115, 117, 126, 153], "binaryclassificationtask": [116, 117, 148, 153], "binaryclassificationtasklogit": [116, 117], "binarycrossentropyloss": [123, 126], "bjoernlow": [123, 128], "black": 145, "blob": [14, 82, 83, 98, 122, 126, 148], "block": [0, 1, 81, 83, 100, 148, 149, 152], "block_rel": [81, 83], "boilerpl": 153, "bool": [8, 14, 35, 36, 37, 59, 60, 62, 74, 82, 83, 90, 92, 94, 96, 98, 99, 100, 105, 106, 108, 109, 110, 115, 121, 122, 124, 126, 127, 128, 130, 136, 139, 140, 141, 142], "boost": 37, "border": 31, "both": [0, 23, 111, 115, 119, 148, 149, 151, 152, 153], "bottleneck": 14, "boundari": 31, "box": [146, 148, 153], "branch": 145, "break_cyclic_recurs": [33, 37], "broken": [45, 47, 50, 55], "bucket": [14, 121, 127], "bucket_width": 14, "bug": [145, 148], "build": [0, 1, 79, 86, 103, 104, 108, 109, 110, 111, 132, 134, 135, 148, 149, 152, 153], "built": [0, 79, 105, 111, 147, 148, 149, 151, 152, 153], "c": [14, 21, 31, 34, 84, 104, 126, 148], "c_": 126, "cach": 13, "cache_s": 13, "calcul": [74, 82, 83, 90, 98, 103, 106, 108, 109, 111, 115, 122, 125, 126, 147, 148, 153], "calculate_distance_matrix": [79, 122], "calculate_xyzt_homophili": [79, 122], "calibr": [35, 37], "call": [7, 14, 23, 37, 82, 84, 119, 124, 128, 142, 146, 148, 151, 153], "callabl": [8, 11, 37, 83, 84, 86, 87, 88, 89, 105, 114, 119, 127, 128, 132, 134, 135, 136, 141, 151], "callback": [1, 90, 123, 148, 153], "can": [0, 1, 5, 9, 11, 13, 14, 16, 19, 23, 26, 74, 82, 84, 105, 106, 111, 128, 130, 132, 134, 135, 145, 146, 147, 148, 149, 151, 152, 153], "cannot": [37, 113, 128, 132, 137], "cap": 128, "capabl": [0, 115, 149, 152], "captur": [148, 153], "care": 147, "carlo": 35, "cascad": 118, "case": [11, 13, 16, 23, 45, 47, 50, 55, 74, 84, 109, 119, 146, 147, 148, 150, 153], "cast": [23, 37], "cast_object_to_pure_python": [33, 37], "cast_pulse_series_to_pure_python": [33, 37], "caus": 148, "caveat": [148, 153], "cc": 125, "cd": 150, "center": 103, "centr": 103, "central": [148, 150], "certain": 148, "cfg": 11, "cframe": [21, 31], "chain": [0, 1, 68, 71, 79, 90, 111, 115, 126, 149, 150, 152], "chang": [126, 145, 148, 153], "charg": [4, 14, 82, 92, 108, 109, 113, 126, 147, 148, 153], "charge_column": 108, "charge_index": 109, "check": [8, 35, 36, 37, 49, 59, 108, 130, 140, 141, 145, 151], "checkpoint": 148, "checkpointing_bas": 148, "chenli2049": 121, "cherenkov": [108, 109, 148, 151, 153], "choic": [147, 148, 153], "choos": [148, 153], "chosen": [103, 109, 142, 147], "chunk": [13, 14, 146], "chunk_siz": 13, "chunks_per_seg": 14, "citat": 5, "cite": 5, "ckpt": [148, 153], "ckpt_path": 90, "claim": [14, 126], "clamp": [83, 98], "clash": 142, "class": [4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 39, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 60, 62, 63, 64, 66, 67, 69, 70, 72, 74, 75, 76, 80, 82, 83, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 142, 145, 146, 147], "class_nam": [11, 36, 49, 51, 52, 53, 62, 135, 142, 147, 148, 153], "classif": [1, 79, 115, 116, 119, 126, 148, 153], "classifi": [117, 147, 148, 153], "classmethod": [8, 11, 110, 126, 132, 148, 153], "classvar": [132, 134, 135, 137], "clean": [74, 145, 150], "clean_up_data_object": 113, "cleaning_modul": [68, 73], "cleanup": 9, "clear": [142, 147], "cli": 130, "clone": 150, "close": 9, "closest": 124, "cloud": [148, 153], "cls_tocken": 99, "cluster": [80, 83, 84, 92, 94, 96, 100, 108, 109, 113], "cluster_and_pad": [101, 109], "cluster_class": 109, "cluster_column": 109, "cluster_index": 84, "cluster_indic": 109, "cluster_on": [108, 109], "cluster_summarize_with_percentil": [101, 109], "clustered_x": 109, "cnn": [148, 153], "coarsen": [1, 79, 84], "code": [0, 31, 45, 55, 59, 82, 83, 98, 105, 122, 134, 135, 146, 147, 148, 149, 151, 152, 153], "coincid": 108, "col": 106, "collabor": [1, 148, 153], "collate_fn": [3, 8, 123, 127], "collator_sequence_bucklet": [123, 127], "collect": [11, 20, 33, 71, 126, 143, 148, 153], "column": [7, 11, 13, 16, 19, 41, 43, 45, 47, 55, 59, 63, 64, 70, 76, 78, 82, 86, 90, 92, 103, 105, 106, 108, 109, 113, 117, 118, 119, 122, 126, 128, 146, 147, 148, 151, 153], "column_nam": [41, 146], "column_offset": 109, "columnmissingexcept": [11, 13, 77, 78], "com": [14, 82, 83, 98, 99, 111, 121, 122, 126, 148, 150], "combin": [18, 34, 47, 92, 115, 126, 134, 153], "combine_extractor": [3, 17], "combinedextractor": [17, 18], "come": [5, 90, 119, 146, 147, 148, 153], "command": 130, "comment": 5, "commit": 145, "common": [0, 1, 126, 134, 135, 138, 141, 147, 148, 149, 152], "compar": [148, 153], "comparison": [26, 126], "compat": [49, 60, 90, 111, 115, 119, 146, 147, 148, 153], "competit": [82, 83, 87, 96, 99], "complementari": 122, "complet": [0, 14, 79, 148, 149, 150, 152, 153], "complex": [0, 79, 148, 149, 152], "compon": [0, 1, 79, 82, 83, 84, 90, 110, 111, 115, 148, 149, 152, 153], "compos": [148, 153], "composit": 142, "comprehens": 148, "compress": [5, 147], "compris": [0, 149, 152], "comput": [70, 83, 90, 104, 109, 115, 119, 122, 126, 147, 148], "compute_loss": [90, 115, 119], "compute_minkowski_distance_mat": [102, 104], "con": [148, 153], "concatdataset": 11, "concaten": [11, 34, 94], "concept": 145, "conceptu": [146, 148], "concret": 148, "condit": [14, 111, 119, 126], "condition_on": 111, "confid": 148, "config": [1, 8, 60, 124, 126, 129, 130, 132, 133, 134, 135, 136, 137, 147, 148, 153], "config_dir": [148, 153], "configdict": [132, 134, 135, 137], "configur": [0, 1, 9, 11, 46, 47, 70, 71, 79, 90, 110, 129, 131, 132, 134, 135, 137, 142, 146, 148, 149, 152, 153], "configure_optim": 90, "conflict": 148, "conform": [132, 134, 135, 137], "conjunct": [19, 119], "conn": 148, "connect": [0, 9, 14, 82, 83, 98, 103, 104, 105, 108, 126, 147, 148, 149, 152], "consequ": 110, "consid": [74, 92, 147, 148, 151], "consist": [82, 130, 142, 145, 148, 153], "consortium": [0, 149, 152], "constant": [1, 3, 119, 122, 144, 147, 148, 153], "constitut": [63, 147], "constraint": [90, 148], "construct": [5, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 41, 43, 49, 51, 52, 53, 60, 62, 63, 64, 66, 67, 70, 80, 81, 82, 83, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 113, 114, 115, 117, 118, 119, 121, 124, 125, 126, 127, 128, 130, 133, 134, 135, 142, 146, 147, 148, 153], "constructor": [146, 147, 148], "consult": 153, "consum": 148, "consumpt": 147, "conta": 14, "contain": [0, 5, 6, 7, 11, 13, 14, 16, 17, 18, 21, 34, 35, 38, 39, 40, 43, 45, 47, 49, 50, 51, 55, 59, 62, 63, 64, 65, 66, 69, 70, 71, 72, 74, 75, 76, 78, 90, 94, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 115, 119, 122, 126, 128, 130, 146, 147, 148, 149, 151, 152, 153], "containeris": 1, "content": [146, 153], "context": 67, "continu": [0, 126, 148, 149, 152], "contract": [14, 126], "contribut": [0, 126, 148, 149, 152], "contributor": 145, "conveni": [1, 145, 148, 153], "convent": [45, 47, 50, 55], "convers": [7, 38, 39, 43, 45, 55, 108, 147, 148, 151], "convert": [0, 1, 3, 5, 7, 13, 21, 31, 34, 36, 45, 46, 47, 55, 57, 63, 65, 122, 146, 147, 148, 149, 150, 151, 152], "converteddataset": 5, "convex": 31, "convnet": [79, 91, 148], "convolut": [83, 93, 94, 95, 96, 100], "coo": 147, "coordin": [31, 86, 104, 108, 109, 122, 148], "copi": [14, 126, 147], "copyright": [14, 126], "core": 97, "correct": [122, 126], "correpond": 58, "correspond": [11, 13, 16, 34, 37, 58, 94, 100, 105, 106, 109, 128, 140, 147, 148, 151, 153], "cosh": 126, "could": [145, 148, 153], "count": 109, "counterpart": 147, "cover": 60, "cpu": [7, 14, 45, 47, 55, 70], "creat": [5, 9, 14, 59, 105, 106, 108, 109, 132, 133, 137, 145, 147, 153], "create_t": [56, 59], "create_table_and_save_to_sql": [56, 59], "creator": 5, "critic": [142, 148, 151], "cross": 126, "crossentropyloss": [123, 126], "csv": [127, 134, 147, 148, 151, 153], "ctx": 126, "cuda": 150, "cumul": 109, "curat": 5, "curated_datamodul": [1, 3], "curateddataset": [3, 5, 66, 67], "curi": [0, 149, 152], "current": [60, 113, 124, 145, 148], "curv": 128, "custom": [11, 49, 77, 105, 124, 153], "custom_label_funct": 105, "customdomcoarsen": [79, 80], "customis": 124, "cut": 127, "d": [34, 104, 105, 108, 122, 145, 151], "damag": [14, 126], "data": [0, 1, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 105, 106, 108, 109, 111, 113, 114, 115, 119, 121, 122, 125, 127, 130, 132, 134, 137, 141, 144, 147, 148, 149, 152, 153], "data_path": 105, "data_sourc": 14, "databas": [5, 16, 59, 64, 128, 147, 148], "database_exist": [56, 59], "database_indic": 127, "database_nam": 64, "database_path": [59, 128], "database_table_exist": [56, 59], "dataclass": [1, 3, 35], "dataconfig": [134, 147], "dataconvert": [1, 3, 46, 62, 63, 64, 148, 151], "dataformat": [61, 64], "datafram": [59, 60, 62, 86, 90, 127, 128, 146, 148, 151, 153], "dataload": [1, 3, 5, 9, 13, 66, 67, 90, 105, 127, 137, 147, 148, 153], "datamodul": [1, 3, 5], "datarepresent": 111, "dataset": [1, 3, 5, 8, 9, 12, 13, 14, 15, 16, 25, 60, 63, 66, 67, 78, 92, 105, 113, 130, 134, 144, 151, 153], "dataset_1": [147, 148], "dataset_2": [147, 148], "dataset_3": [147, 148], "dataset_arg": 9, "dataset_config": [129, 131, 148, 153], "dataset_config_path": [148, 153], "dataset_dir": 5, "dataset_refer": 9, "datasetconfig": [8, 11, 60, 131, 134, 147, 153], "datasetconfigsav": 134, "datasetconfigsaverabcmeta": [131, 134], "datasetconfigsavermeta": [131, 134], "db": [64, 127, 128, 147, 148], "db_count_norm": 128, "ddp": [148, 153], "de": 34, "deactiv": [90, 119], "deal": [14, 126], "debug": [142, 148], "decai": 99, "decor": [1, 129, 141], "dedic": 145, "deem": 37, "deep": [0, 5, 62, 64, 83, 96, 99, 146, 148, 149, 150, 151, 152, 153], "deepcopi": 139, "deepcor": [4, 22, 87], "deepic": [91, 99], "def": [146, 147, 148, 151, 153], "default": [5, 7, 9, 11, 13, 14, 16, 21, 23, 31, 34, 43, 45, 47, 50, 55, 59, 63, 64, 66, 67, 69, 70, 72, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 113, 119, 121, 122, 124, 125, 126, 128, 130, 132, 140, 147, 148], "default_prediction_label": [117, 118, 119, 153], "default_target_label": [117, 118, 119, 153], "default_typ": 59, "defin": [5, 11, 13, 16, 31, 60, 66, 67, 70, 74, 76, 84, 101, 102, 103, 105, 107, 109, 111, 127, 134, 147, 148, 151, 153], "definit": [103, 105, 106, 108, 110, 119, 145, 148, 153], "deg": 106, "deg_scal": 83, "degre": [83, 106], "deleg": 142, "deliv": 90, "demo_ic": 89, "demo_wat": 89, "denot": [19, 124, 125, 146, 151], "dens": 84, "depend": [0, 82, 146, 147, 148, 149, 152, 153], "deploi": [0, 1, 68, 70, 148, 149, 150, 152], "deploy": [0, 1, 70, 72, 73, 74, 75, 76, 105, 144, 148, 149, 151, 152, 153], "deployment_modul": [1, 68], "deploymentmodul": [68, 69, 70, 72, 75, 76], "deprec": [44, 45, 54, 55, 72, 139], "deprecated_method": [3, 44, 54, 68, 71], "deprecation_tool": [1, 129], "depth": [83, 99, 109, 121], "depth_rel": 99, "describ": [5, 145, 148], "descript": [5, 110, 130], "design": [1, 148, 151], "desir": [128, 140], "detail": [1, 5, 92, 110, 111, 119, 124, 147, 148, 150, 151, 153], "detector": [0, 1, 31, 71, 79, 87, 88, 89, 105, 106, 108, 147, 148, 149, 152, 153], "detector_respons": 148, "determin": [69, 72, 75, 92], "develop": [0, 1, 145, 147, 148, 149, 150, 151, 152, 153], "deviat": [105, 106, 109], "devic": 70, "df": [59, 146], "dfg": [0, 149, 152], "diagon": 122, "dict": [5, 8, 9, 11, 13, 16, 23, 34, 37, 59, 70, 86, 87, 88, 89, 90, 99, 105, 106, 108, 110, 111, 114, 124, 127, 130, 132, 134, 135, 136, 137, 139, 146, 147, 148, 151], "dictionari": [11, 13, 16, 19, 34, 35, 37, 49, 59, 105, 106, 110, 132, 134, 135, 137, 146, 151], "did": 14, "differ": [0, 11, 13, 16, 19, 21, 39, 40, 41, 43, 49, 50, 51, 71, 106, 127, 145, 146, 147, 148, 149, 151, 152, 153], "difficult": 147, "diffier": [148, 153], "digit": 82, "dim": [82, 83], "dim_emb": 82, "dim_in": [82, 83], "dim_out": 83, "dimenion": [94, 96, 100], "dimens": [82, 83, 87, 88, 89, 92, 93, 94, 96, 98, 99, 100, 109, 113, 119, 121, 122, 126, 151, 153], "dimension": [82, 83, 122, 147, 153], "dir": 140, "dir_with_fil": [146, 151], "dir_x_pr": 118, "dir_y_pr": 118, "dir_z_pr": 118, "direct": [96, 109, 117, 118, 119, 123, 125, 147, 151], "direction_kappa": 118, "directionreconstructionwithkappa": [116, 118, 148, 153], "directli": [0, 94, 100, 146, 148, 149, 151, 152, 153], "directori": [5, 7, 45, 47, 49, 50, 51, 52, 53, 55, 62, 63, 66, 67, 124, 140, 146, 148, 153], "dirti": 148, "discard_empty_ev": 74, "disco": 122, "disconnect": 147, "discuss": 145, "disk": [146, 147, 148], "distanc": [31, 103, 104, 106, 122], "distance_as_edge_featur": 106, "distribut": [14, 84, 94, 111, 118, 122, 126, 128, 150, 153], "distribution_strategi": 90, "ditto": 126, "diverg": 126, "divid": [69, 72, 75, 109, 119], "dk": 5, "dl": [148, 153], "dnn": [25, 32], "do": [0, 14, 70, 74, 126, 134, 135, 145, 147, 148, 149, 152, 153], "do_shuffl": [3, 8], "doc": 148, "docformatt": 145, "docker": 1, "docstr": 145, "document": [14, 111, 126, 151, 153], "doe": [37, 117, 119, 135, 146, 147, 148, 153], "doesn": 59, "dom": [8, 11, 13, 16, 80, 84, 92, 108, 109, 113, 127, 148, 153], "dom_i": [4, 87, 108], "dom_numb": 4, "dom_tim": [4, 108], "dom_typ": 4, "dom_x": [4, 87, 108], "dom_z": [4, 87, 108], "domain": [0, 1, 3, 68, 148, 149, 152], "domandtimewindowcoarsen": [79, 80], "domcoarsen": [79, 80], "don": [124, 146], "done": [23, 84, 142, 145, 146, 148, 151], "dot": 83, "download": [5, 66, 67, 150], "download_dir": [5, 66, 67], "downsid": 147, "draw": 14, "drawn": [101, 102, 106, 107, 148, 153], "drhb": [14, 99], "drop": [14, 83, 93], "drop_last": 14, "drop_path": 83, "drop_prob": 83, "dropout": [83, 92, 98, 100, 113], "dropout_prob": 83, "dropout_ratio": 93, "dropout_readout": 100, "droppath": [81, 83], "droput": 83, "dtype": [11, 13, 16, 105, 106, 143, 147, 148, 153], "due": [147, 148, 153], "dummy_pid": [147, 148], "dump": [132, 134, 135, 146, 147, 148], "duplciat": 124, "duplic": 108, "dure": [83, 99, 105, 119, 124, 151], "dynam": [23, 83, 94, 95, 96, 100, 148, 153], "dynedg": [74, 76, 79, 91, 95, 96, 99, 100, 148, 153], "dynedge_arg": 99, "dynedge_jinst": [79, 91], "dynedge_kaggle_tito": [79, 91], "dynedge_layer_s": [94, 100, 148, 153], "dynedgeconv": [81, 83, 94, 100], "dynedgejinst": [91, 95], "dynedgetito": [91, 92, 96], "dyntran": [81, 83, 92, 96], "dyntrans1": 83, "dyntrans_layer_s": [92, 96], "e": [1, 5, 8, 9, 11, 13, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 37, 39, 43, 59, 60, 64, 70, 74, 76, 80, 82, 83, 84, 86, 87, 88, 89, 93, 97, 98, 103, 105, 106, 108, 109, 110, 111, 114, 115, 117, 118, 119, 122, 124, 125, 126, 128, 132, 142, 145, 146, 147, 148, 150, 153], "each": [5, 14, 23, 34, 37, 58, 59, 63, 64, 69, 70, 72, 75, 80, 82, 83, 84, 87, 88, 89, 92, 94, 96, 100, 103, 105, 106, 108, 109, 113, 117, 119, 122, 124, 126, 127, 140, 146, 147, 148, 151, 153], "earli": [124, 130], "early_stopping_pati": [90, 137], "earlystop": 124, "easi": [0, 146, 147, 148, 149, 152, 153], "easili": [1, 148, 153], "easy_model": [1, 79], "easysyntax": [79, 90, 111, 115], "ed": 126, "edg": [79, 82, 83, 84, 94, 95, 96, 98, 100, 101, 104, 105, 106, 107, 108, 122, 147, 148, 153], "edge_attr": [147, 148], "edge_definit": [105, 106], "edge_enh": [83, 98], "edge_index": [80, 83, 122, 147, 148], "edge_weight": 122, "edgeconv": 83, "edgeconvtito": [81, 83], "edgedefinit": [101, 102, 103, 104, 105, 106, 107, 148, 153], "edgelessgraph": [101, 106], "effect": [124, 145, 148, 153], "effici": 14, "effort": [145, 147, 151], "either": [0, 5, 9, 11, 16, 21, 31, 66, 67, 83, 98, 126, 146, 148, 149, 152], "elast": 4, "element": [11, 13, 19, 34, 37, 90, 111, 115, 122, 127, 136, 146, 148, 151], "elementwis": 126, "elimin": 74, "els": [74, 125, 146, 151], "ema": 114, "emb_dim": 82, "embed": [79, 81, 92, 99, 113, 117, 119, 121], "embedding_dim": [92, 113], "empti": 74, "en": 148, "enabl": [0, 3, 90, 108, 149, 152], "enable_edge_transform": [83, 98], "encod": [82, 98, 106, 122, 125], "encount": 148, "encourag": [145, 148], "end": [0, 1, 14, 109, 124, 148, 149, 152], "energi": [4, 118, 119, 128, 147, 148, 151], "energy_cascad": [4, 118], "energy_cascade_pr": 118, "energy_pr": 118, "energy_reco": 76, "energy_sigma": 118, "energy_track": [4, 118], "energy_track_pr": 118, "energyreconstruct": [116, 118, 148, 153], "energyreconstructionwithpow": [116, 118], "energyreconstructionwithuncertainti": [116, 118, 148], "energytcreconstruct": [116, 118], "engin": [0, 149, 152], "enough": 110, "ensemble_dataset": [147, 148], "ensembledataset": [10, 11, 134, 147, 148], "ensembleloss": [123, 126], "ensur": [37, 58, 126, 142, 145, 153], "entir": [11, 13, 110, 146, 148, 153], "entiti": [148, 153], "entri": [74, 76, 94, 100, 122, 130, 151], "entropi": 126, "enum": 37, "env": 150, "environ": [50, 150], "ep": [143, 148, 153], "epoch": [114, 124, 130], "eps_lik": [129, 143], "equival": [37, 148, 153], "erda": [5, 66], "erdahost": 67, "erdahosteddataset": [3, 5, 66, 67], "error": [126, 142, 145, 146, 148], "especi": 74, "establish": 153, "estim": 122, "etc": [0, 14, 126, 142, 147, 148, 149, 151, 152], "eth": 122, "euclidean": [103, 122, 145], "euclideandistanceloss": [123, 126], "euclideanedg": [102, 103], "european": [0, 149, 152], "eval": [110, 150], "evalu": [5, 111, 119], "even": 58, "event": [0, 1, 5, 7, 9, 11, 13, 14, 16, 18, 28, 31, 43, 45, 47, 55, 59, 60, 63, 64, 66, 67, 74, 82, 84, 92, 105, 108, 109, 115, 119, 121, 122, 125, 126, 127, 128, 134, 146, 148, 149, 151, 152, 153], "event_no": [7, 11, 13, 16, 45, 47, 55, 59, 60, 63, 64, 128, 134, 147, 148, 153], "event_truth": 5, "events_per_batch": 63, "everi": [100, 111, 146, 148, 151], "everyth": [148, 153], "everytim": 145, "exact": [95, 126, 153], "exactli": [122, 126, 142, 147], "exampl": [7, 14, 34, 60, 80, 84, 109, 111, 122, 126, 134, 135, 146, 147, 150], "example_energy_reconstruction_model": [130, 148, 153], "exce": 128, "exceed": 64, "except": [1, 144, 146], "exclud": 23, "exclude_kei": 23, "excluding_valu": 122, "execut": 59, "exist": [0, 11, 13, 16, 59, 79, 111, 125, 134, 147, 148, 149, 152, 153], "exist_ok": [148, 153], "expand": [0, 148, 149, 152], "expans": 99, "expect": [59, 60, 62, 74, 76, 105, 108, 147, 148, 153], "expects_merged_datafram": 62, "experi": [0, 1, 5, 6, 7, 48, 49, 70, 123, 146, 148, 149, 152], "experiment": 153, "expert": 1, "explain": 148, "explicitli": [127, 132, 137], "exponenti": 126, "export": [146, 147, 148, 151, 153], "expos": 1, "express": [14, 110, 126], "extend": [0, 1, 31, 146, 147, 149, 152], "extend_boundari": 31, "extens": [1, 5, 49, 62, 140], "extern": [147, 148], "extra": [83, 106, 153], "extra_repr": [83, 110], "extra_repr_recurs": 110, "extracor_nam": 49, "extract": [7, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 39, 41, 42, 43, 58, 74, 76, 119, 122, 146, 148, 151], "extractor": [1, 3, 7, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 55, 74, 76], "extractor_nam": [18, 19, 21, 23, 26, 39, 41, 43, 146, 151], "f": [84, 146, 148, 153], "f1": 84, "f2": 84, "f_absorpt": 109, "f_scatter": 109, "factor": [83, 109, 122, 124, 126, 148, 153], "fail": 18, "fals": [14, 36, 74, 82, 83, 94, 98, 99, 100, 105, 106, 108, 110, 121, 122, 124, 126, 128, 148, 153], "fanci": 148, "fashion": 1, "fast": [0, 147, 148, 149, 152], "faster": [0, 146, 147, 149, 152], "favorit": 150, "favourit": 148, "fbeezabg5a": 5, "fc": [83, 84], "featur": [1, 3, 4, 5, 11, 13, 16, 22, 64, 66, 67, 74, 76, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 113, 117, 121, 122, 127, 134, 145, 147, 148, 151, 153], "feature_idx": 109, "feature_map": [86, 87, 88, 89, 151], "feature_nam": 109, "features_subset": [83, 92, 94, 96, 100, 113, 148, 153], "feedforward": 83, "feel": 148, "fetch": 130, "few": [0, 79, 145, 146, 147, 148, 149, 152, 153], "fiber_id": 88, "field": [106, 111, 122, 125, 132, 137, 139, 146, 147, 148, 151], "figur": 0, "file": [0, 1, 3, 5, 7, 11, 13, 14, 16, 19, 21, 31, 34, 36, 39, 40, 41, 42, 43, 45, 47, 49, 50, 51, 52, 53, 55, 57, 58, 62, 63, 64, 69, 70, 72, 74, 75, 76, 105, 110, 124, 126, 127, 130, 131, 132, 133, 134, 135, 140, 142, 146, 147, 148, 149, 150, 151, 152, 153], "file_extens": 62, "file_handl": 142, "file_path": [127, 146, 151], "file_read": [7, 146, 151], "filehandl": 142, "filenam": 140, "fileread": [19, 49], "files_list": 58, "filesi": [1, 129], "fill": [5, 14, 82], "fill_valu": [82, 98], "filter": [36, 45, 47, 50, 55, 142, 151], "filter_ani": 36, "filter_nam": 36, "filtermask": 36, "final": [0, 7, 84, 124, 134, 147, 148, 149, 152], "find": [21, 31, 104, 140, 147, 148, 151, 153], "find_fil": [49, 50, 51, 52, 53, 146], "find_i3_fil": [129, 140], "first": [82, 92, 104, 108, 113, 124, 127, 145, 148, 151], "fisher": 126, "fit": [9, 14, 90, 126, 128, 137, 148, 153], "fit_weight": 128, "five": [106, 147], "fix": [60, 148], "flag": [22, 74], "flake8": 145, "flatten": 34, "flatten_nested_dictionari": [33, 34], "flexibil": 153, "flexibl": 60, "float": [11, 13, 16, 31, 74, 82, 83, 90, 92, 93, 98, 100, 103, 104, 105, 106, 108, 109, 113, 119, 124, 126, 127, 128, 134, 147], "float32": [11, 13, 16, 105, 106], "float64": 126, "flow": [111, 119, 153], "flow_lay": [111, 119], "flowchart": [0, 149, 152], "fly": [147, 148], "fn": [11, 37, 132, 136], "fn_kwarg": 136, "folder": [45, 47, 50, 51, 52, 53, 55, 69, 146], "folk": 148, "follow": [14, 90, 94, 100, 111, 115, 126, 128, 145, 146, 147, 148], "fork": 145, "form": [0, 19, 79, 98, 117, 132, 137, 146, 147, 149, 152, 153], "format": [0, 1, 3, 5, 7, 11, 34, 38, 39, 49, 51, 62, 63, 64, 82, 110, 113, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153], "forward": [80, 82, 83, 86, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 105, 106, 108, 111, 113, 115, 119, 121, 126, 153], "found": [37, 45, 47, 50, 55, 63, 109, 126, 147, 148], "four": 82, "fourier": 82, "fourierencod": [81, 82, 99, 121], "fraction": [93, 113, 127], "frame": [20, 21, 23, 31, 33, 36, 37, 76], "frame_is_montecarlo": [33, 35], "frame_is_nois": [33, 35], "framework": [0, 148, 149, 152], "free": [0, 14, 126, 148, 149, 152], "freeli": 148, "frequenc": 82, "friendli": [0, 62, 64, 146, 148, 149, 150, 152], "from": [0, 1, 5, 7, 8, 9, 11, 13, 14, 16, 19, 20, 21, 23, 25, 26, 28, 31, 34, 35, 36, 37, 39, 41, 42, 43, 49, 50, 52, 53, 57, 62, 64, 66, 67, 82, 84, 86, 87, 88, 89, 96, 99, 103, 105, 106, 108, 109, 110, 111, 114, 117, 118, 119, 122, 124, 125, 126, 132, 133, 135, 137, 142, 145, 146, 147, 148, 149, 151, 152, 153], "from_config": [11, 110, 133, 134, 135, 147, 148, 153], "from_dataset_config": [8, 148, 153], "full": [63, 122, 148, 153], "full_edge_index": [79, 122], "fulli": [82, 98, 146, 148, 153], "func": 148, "function": [0, 7, 8, 11, 14, 21, 37, 39, 43, 58, 59, 74, 76, 80, 83, 84, 86, 87, 88, 89, 94, 98, 100, 105, 109, 110, 111, 119, 122, 126, 127, 129, 134, 135, 136, 139, 140, 141, 143, 147, 149, 151, 152, 153], "fund": [0, 149, 152], "furnish": [14, 126], "further": [74, 109], "furthermor": 113, "g": [1, 5, 11, 13, 16, 18, 19, 21, 31, 34, 37, 59, 60, 64, 74, 76, 83, 84, 98, 105, 108, 109, 119, 122, 126, 128, 142, 145, 147, 148, 150, 153], "galatict": 24, "gamma_1": 83, "gamma_2": 83, "gather": [14, 109], "gather_cluster_sequ": [101, 109], "gather_len_matched_bucket": [10, 14], "gaussian": 122, "gcd": [21, 31, 35, 45, 47, 50, 55, 58, 72, 74, 75, 76, 140], "gcd_dict": [35, 37], "gcd_file": [6, 21, 31, 72, 74, 75, 76], "gcd_list": [58, 140], "gcd_rescu": [45, 47, 50, 55, 140], "gcd_shuffl": 58, "gelu": 83, "gener": [0, 5, 9, 11, 13, 14, 16, 23, 36, 49, 62, 66, 69, 74, 75, 76, 82, 101, 102, 105, 106, 107, 109, 117, 126, 128, 147, 148, 149, 151, 152, 153], "geometr": 148, "geometri": [66, 86, 105, 153], "geometry_t": [86, 87, 88, 89, 151], "geometry_table_path": [87, 88, 89, 151], "germani": [0, 149, 152], "get": [19, 35, 59, 86, 109, 124, 127, 148, 153], "get_all_argument_valu": [131, 132], "get_all_grapnet_class": [131, 136], "get_field": [79, 122], "get_graphnet_class": [131, 136], "get_lr": 124, "get_map_funct": 7, "get_member_vari": [33, 37], "get_metr": 124, "get_om_keys_and_pulseseri": [33, 35], "get_predict": [123, 127], "get_primary_kei": [56, 59], "get_rw_landing_prob": [79, 122], "gev": 66, "gframe": [21, 31], "gggt": [111, 119], "git": 150, "github": [14, 82, 83, 98, 99, 111, 119, 121, 122, 126, 148, 150], "given": [5, 11, 14, 16, 21, 31, 64, 66, 67, 82, 84, 103, 119, 122, 126, 128, 130, 147, 151], "glob": 146, "global": [2, 4, 92, 94, 96, 100, 110, 148], "global_index": 7, "global_pooling_schem": [92, 94, 96, 100, 148, 153], "gnn": [1, 71, 79, 92, 93, 94, 95, 96, 98, 99, 100, 105, 111, 113, 121, 148, 153], "go": [14, 145, 148], "googl": 145, "got": 146, "gpu": [90, 130, 148, 150, 153], "grab": 119, "grad_output": 126, "gradient_clip_v": 90, "grant": [0, 14, 126, 149, 152], "graph": [0, 1, 8, 11, 13, 16, 79, 82, 83, 84, 86, 98, 102, 103, 104, 105, 107, 108, 109, 113, 122, 125, 127, 145, 147, 148, 149, 152, 153], "graph_definit": [5, 11, 13, 16, 66, 67, 79, 101, 111, 127, 134, 147, 148, 153], "graph_definiton": 147, "graphdefinit": [5, 11, 13, 16, 66, 67, 101, 102, 105, 106, 107, 111, 127, 145, 147, 148], "graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153], "graphnet_file_read": [3, 48, 146, 151], "graphnet_model": 124, "graphnet_modul": 72, "graphnet_writ": [3, 61], "graphnetdatamodul": [3, 5, 9], "graphnetearlystop": [123, 124], "graphnetfileread": [7, 48, 49, 50, 51, 52, 53, 146], "graphnetfilesavemethod": [62, 64], "graphneti3deploy": [71, 72], "graphnetwrit": [7, 61, 62, 63, 64, 146], "grapnet": [136, 148], "greatli": [148, 153], "grit": [79, 82, 83, 91, 122], "grit_lay": 83, "grit_model": 98, "gritsparsemha": [81, 83], "grittransformerlay": [81, 83], "group": [0, 14, 84, 148, 149, 152], "group_bi": [81, 84], "group_pulses_to_dom": [81, 84], "group_pulses_to_pmt": [81, 84], "groupbi": 84, "guarante": [148, 153], "guid": 145, "guidelin": 145, "gvd": [66, 89], "gz": 5, "h5": [41, 52, 146], "h5_extractor": [17, 40], "h5extractor": [7, 40, 41, 49, 146], "h5hitextractor": [40, 41, 146], "h5py": 146, "h5truthextractor": [40, 41, 146], "ha": [0, 5, 37, 59, 72, 74, 93, 109, 126, 140, 146, 147, 148, 149, 150, 151, 152, 153], "had": 151, "hadron": 118, "hand": [23, 147, 148], "handi": 58, "handl": [23, 126, 130, 139, 142, 146, 147, 148], "handler": 142, "happen": [109, 128, 147, 151], "hard": [31, 108], "has_extens": [129, 140], "has_icecube_packag": [129, 141], "has_jammy_flows_packag": [129, 141], "has_torch_packag": [129, 141], "have": [1, 5, 13, 23, 45, 47, 50, 55, 59, 60, 64, 84, 99, 105, 109, 119, 145, 147, 148, 151, 153], "head": [83, 92, 96, 98, 99, 119, 121, 153], "head_dim": 83, "head_siz": 99, "heavi": 146, "height": 122, "help": [74, 76, 130, 145, 147, 148, 151, 153], "here": [105, 145, 147, 148, 150, 151, 153], "herebi": [14, 126], "hidden": [82, 83, 92, 94, 95, 98, 100, 113], "hidden_dim": [98, 99, 121], "hidden_featur": 83, "hidden_s": [113, 117, 118, 119, 148, 153], "high": [0, 148, 149, 152], "higher": 147, "highest_protocol": 146, "hint": 145, "hit": [8, 127, 147, 148, 151], "hitdata": 41, "hlc": 108, "hlc_name": 108, "hold": [105, 109, 146, 151, 153], "holder": [14, 126], "home": [87, 88, 89, 130, 146, 151], "homophili": 122, "hook": 145, "horizon": [0, 149, 152], "host": [5, 66, 151], "how": [5, 14, 101, 102, 107, 146, 148, 153], "howev": [45, 47, 50, 55, 147, 148], "html": [111, 119, 148], "http": [5, 14, 82, 83, 98, 99, 100, 103, 111, 119, 121, 122, 126, 145, 148, 150], "hull": 31, "human": 148, "hybrid": 24, "hyperparamet": [135, 148, 153], "i": [0, 1, 5, 9, 11, 13, 14, 16, 18, 19, 21, 23, 31, 34, 35, 36, 37, 39, 41, 43, 45, 47, 50, 55, 58, 59, 60, 63, 64, 69, 72, 74, 75, 76, 80, 82, 83, 84, 93, 94, 98, 99, 100, 103, 105, 106, 108, 109, 111, 113, 115, 118, 119, 122, 124, 125, 126, 127, 128, 130, 132, 135, 136, 137, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153], "i3": [1, 21, 31, 35, 36, 37, 45, 47, 50, 55, 58, 69, 74, 76, 140, 148, 150], "i3_fil": [6, 21, 31], "i3_filt": [20, 33, 45, 47, 50, 55], "i3_list": [58, 140], "i3_shuffl": 58, "i3calibr": 35, "i3deploy": [6, 68, 72, 73], "i3extractor": [7, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 45, 47, 49, 55], "i3featureextractor": [4, 17, 20, 74, 76], "i3featureextractoricecube86": [20, 22], "i3featureextractoricecubedeepcor": [20, 22], "i3featureextractoricecubeupgrad": [20, 22], "i3fileset": [3, 6, 49, 50], "i3filt": [33, 36, 45, 47, 50, 55], "i3filtermask": [33, 36], "i3fram": [20, 23, 35, 37, 74, 76], "i3galacticplanehybridrecoextractor": [20, 24], "i3genericextractor": [17, 20], "i3hybridrecoextractor": [17, 20], "i3inferencemodul": [72, 73, 74, 75, 76], "i3mctre": 31, "i3modul": [1, 68, 70, 72], "i3ntmuonlabelextractor": [20, 25], "i3ntmuonlabelsextractor": [17, 20], "i3particl": 26, "i3particleextractor": [17, 20], "i3pisaextractor": [17, 20], "i3pulsecleanermodul": [73, 74], "i3pulsenoisetruthflagicecubeupgrad": [20, 22], "i3quesoextractor": [17, 20], "i3read": [3, 45, 47, 48, 55], "i3retroextractor": [17, 20], "i3splinempeextractor": [17, 20], "i3splinempeicextractor": [20, 30], "i3toparquetconvert": [45, 46, 47], "i3tosqliteconvert": [46, 47, 55], "i3truthextractor": [4, 17, 20], "i3tumextractor": [17, 20], "ic": [96, 99, 108], "ice_arg": 108, "ice_transpar": [101, 109], "icecub": [1, 3, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 45, 47, 50, 55, 68, 71, 74, 75, 76, 79, 83, 85, 96, 99, 108, 109, 141, 148, 153], "icecube86": [4, 85, 87, 89], "icecube86prometheu": [85, 89], "icecube_deepcor": 89, "icecube_gen2": 89, "icecube_upgrad": [87, 89], "icecubedeepcor": [85, 87], "icecubedeepcore8": [85, 89], "icecubegen2": [85, 89], "icecubekaggl": [85, 87], "icecubeupgrad": [85, 87], "icecubeupgrade7": [85, 89], "icedemo81": [85, 89], "icemix": [79, 91], "icemixnod": [107, 108], "icetrai": [35, 37, 45, 47, 50, 55, 70, 71, 141, 150], "icetray_verbos": [45, 47, 50, 55], "id": [5, 7, 9, 13, 45, 47, 55, 64, 86, 105, 127, 146, 147, 148, 151], "id_column": 108, "ideal": 153, "ident": [84, 86, 87, 88, 89, 106, 119, 122], "identifi": [7, 11, 13, 16, 31, 108, 109, 122, 134, 135, 151], "identify_indic": [101, 109], "identitytask": [116, 117, 119], "ie": 92, "ignor": [11, 13, 16, 37, 63, 122], "illustr": [0, 145, 146, 149, 152], "imag": [0, 1, 145, 148, 149, 152, 153], "impact": 99, "implement": [1, 5, 14, 19, 21, 49, 62, 70, 75, 83, 92, 93, 94, 95, 96, 98, 99, 100, 103, 113, 121, 122, 126, 145, 146, 148, 153], "impli": [14, 126], "import": [0, 1, 5, 59, 79, 129, 146, 147, 148, 149, 151, 152, 153], "impos": [11, 13, 90], "improv": [0, 1, 130, 148, 149, 152, 153], "in_dim": 83, "in_featur": 83, "inaccur": 109, "inact": 105, "includ": [1, 5, 13, 14, 66, 67, 83, 90, 108, 126, 132, 145, 147, 148, 151, 153], "include_dynedg": 99, "incom": 106, "incompat": 148, "incomplet": 14, "incorpor": 82, "increas": [0, 124, 149, 152], "indent": 110, "independ": [69, 72, 75, 146], "index": [1, 7, 11, 13, 16, 37, 59, 63, 84, 86, 92, 104, 109, 113, 122, 124, 147, 148, 153], "index_column": [7, 11, 13, 16, 45, 47, 55, 59, 60, 63, 64, 127, 128, 134, 147, 148], "indic": [14, 60, 78, 84, 92, 104, 106, 109, 113, 119, 122, 124, 126, 130, 145, 148, 153], "indicesfor": 35, "indici": [11, 13, 16, 35, 60], "individu": [0, 11, 13, 16, 84, 94, 122, 147, 149, 152, 153], "induct": 98, "industri": [0, 3, 149, 152], "inelast": [4, 118], "inelasticity_pr": 118, "inelasticityreconstruct": [116, 118], "inf": 122, "infer": [0, 1, 64, 68, 70, 71, 74, 76, 90, 119, 148, 149, 152], "inference_modul": [68, 73], "info": [142, 148], "inform": [5, 11, 13, 16, 18, 19, 21, 23, 31, 39, 41, 43, 66, 67, 105, 108, 109, 110, 146, 147, 148, 151, 153], "ingest": [0, 1, 3, 85, 149, 152], "inherit": [5, 19, 21, 37, 49, 62, 86, 108, 126, 142, 146, 147, 148, 153], "init_fn": [134, 135], "init_global_index": [3, 7], "init_predict_tqdm": 124, "init_test_tqdm": 124, "init_train_tqdm": 124, "init_validation_tqdm": 124, "init_valu": 83, "initi": [7, 36, 50, 64, 69, 72, 75, 83, 92, 99, 104, 109], "initial_st": 43, "initialis": [135, 148, 153], "injection_azimuth": [4, 147, 148], "injection_bjorkeni": [4, 147, 148], "injection_bjorkenx": [4, 147, 148], "injection_column_depth": [4, 147, 148], "injection_energi": [4, 147, 148], "injection_interaction_typ": [4, 147, 148], "injection_position_i": [4, 147, 148], "injection_position_x": [4, 147, 148], "injection_position_z": [4, 147, 148], "injection_typ": [4, 147, 148], "injection_zenith": [4, 147, 148, 153], "innov": [0, 149, 152], "inptut": 109, "input": [5, 7, 11, 13, 16, 45, 47, 49, 50, 55, 62, 66, 67, 69, 72, 74, 75, 76, 82, 83, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 105, 106, 108, 109, 111, 113, 117, 119, 121, 122, 132, 137, 139, 146, 147, 148, 151, 153], "input_dim": [83, 153], "input_dir": [146, 151], "input_featur": [86, 105, 106], "input_feature_nam": [86, 105, 106, 108], "input_fil": [49, 69], "input_nam": 109, "ins": 86, "insert": 109, "insid": 147, "inspect": [148, 153], "inspir": [100, 122], "instal": [145, 148], "instanc": [11, 19, 21, 31, 37, 39, 41, 43, 45, 47, 50, 55, 105, 110, 125, 127, 133, 135, 146, 147, 148, 153], "instanti": [7, 9, 135, 146, 147, 151], "instead": [21, 31, 45, 47, 50, 55, 72, 111, 126, 148, 153], "int": [5, 7, 8, 9, 11, 13, 14, 16, 25, 28, 36, 45, 47, 49, 50, 51, 52, 53, 55, 60, 62, 63, 64, 69, 72, 75, 82, 83, 84, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 124, 126, 127, 128, 130, 134, 137, 142, 146, 153], "integ": [59, 92, 94, 95, 100, 126, 147, 148], "integer_primary_kei": 59, "integr": 153, "intend": [92, 113, 148], "interact": [118, 125, 147, 148], "interaction_kei": 125, "interaction_tim": [4, 118], "interaction_time_pr": 118, "interaction_typ": [4, 125], "interchang": [148, 153], "interfac": [0, 134, 135, 148, 149, 150, 151, 152], "interim": [7, 61, 62, 63, 64, 146], "intermedi": [0, 1, 3, 7, 11, 93, 148, 149, 152], "intern": [3, 17, 39, 47, 51], "internal_parquet_read": [3, 48], "interpol": [109, 124], "interpret": 117, "interv": [82, 148, 153], "intract": 147, "introduc": 148, "introduct": [111, 119], "intuit": [142, 153], "invers": 119, "invert": 119, "involv": 60, "io": [111, 119, 145, 148], "iop": 148, "iopscienc": 148, "is_boost_class": [33, 37], "is_boost_enum": [33, 37], "is_gcd_fil": [129, 140], "is_graphnet_class": [131, 136], "is_graphnet_modul": [131, 136], "is_i3_fil": [129, 140], "is_icecube_class": [33, 37], "is_method": [33, 37], "is_typ": [33, 37], "iseecub": [79, 120], "isinst": 146, "isn": 37, "isol": 106, "issu": [148, 153], "iter": 11, "its": [37, 113, 147, 148, 153], "itself": [37, 119, 146, 148, 153], "iv": 126, "jammy_flow": [111, 119, 141], "job": 151, "join": [146, 148], "json": [34, 134, 147, 148], "just": [5, 84, 146, 147, 148, 153], "k": [83, 92, 94, 96, 100, 103, 106, 113, 122, 126], "kaggl": [4, 82, 83, 87, 96, 99], "kappa": [118, 126], "kappa_switch": 126, "karg": [110, 114], "keep": [19, 21, 36, 39, 41, 43, 108, 146], "kei": [11, 23, 34, 35, 37, 59, 64, 83, 84, 108, 125, 134, 135, 146, 147, 148, 151], "kept": 36, "key_padding_mask": 83, "keyword": [124, 132, 137], "kind": [14, 126, 151], "km3net": [148, 153], "knn": 106, "knn_graph_batch": [79, 122], "knndistanceedg": [102, 103], "knnedg": [102, 103], "knngraph": [101, 106, 147, 148, 153], "knngraphrrwp": [101, 106], "knngraphrws": [101, 106], "know": 151, "known": 84, "kstep": [98, 122], "kv": 83, "kwarg": [7, 8, 11, 13, 16, 36, 49, 51, 52, 53, 62, 80, 83, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 110, 111, 113, 114, 115, 117, 118, 119, 121, 124, 126, 128, 132, 134, 135, 142], "l": [83, 109, 122], "label": [1, 11, 13, 16, 25, 28, 90, 93, 105, 115, 119, 123, 127, 134], "lai": 148, "lambda": [110, 148, 153], "land": [122, 148], "larg": [0, 92, 126, 147, 149, 152], "larger": 146, "largest": 109, "last": [14, 94, 100, 113, 117, 118, 119, 124, 127, 153], "last_epoch": 124, "lastli": 151, "latent": [82, 92, 94, 96, 99, 100, 111, 113, 117, 118, 119, 121, 153], "latest": 148, "layer": [0, 79, 81, 82, 84, 92, 93, 94, 95, 96, 98, 99, 100, 111, 113, 117, 118, 119, 149, 152], "layer_s": 83, "layer_size_scal": 95, "layernorm": [83, 98], "ldot": [80, 84], "lead": [147, 148], "learn": [0, 1, 5, 62, 64, 74, 76, 111, 115, 117, 119, 124, 146, 148, 149, 150, 151, 152, 153], "learnabl": [83, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 113, 119, 121, 153], "learnedtask": [116, 119], "least": [13, 145, 147, 148], "leav": 124, "len": [11, 13, 109, 122, 146, 147], "length": [11, 13, 14, 37, 108, 109, 122, 124], "lenmatchbatchsampl": [10, 14], "less": [8, 127, 148, 153], "let": [148, 151, 153], "level": [0, 5, 11, 13, 16, 18, 31, 36, 43, 45, 47, 49, 50, 51, 52, 53, 55, 59, 62, 63, 66, 67, 80, 84, 99, 115, 142, 147, 148, 149, 151, 152], "leverag": 1, "lex_sort": [101, 109], "liabil": [14, 126], "liabl": [14, 126], "liamma": [82, 83, 98, 122], "lib": [87, 88, 89, 130], "licens": [14, 126], "lift": 146, "light": 104, "lightn": [9, 124, 148, 153], "lightningdatamodul": 9, "lightningmodul": [82, 83, 110, 124, 142, 148, 153], "liheng": 98, "like": [14, 19, 37, 84, 104, 111, 119, 122, 126, 143, 145, 147, 148, 150, 153], "limit": [14, 108, 126], "line": [124, 130, 146, 147, 151], "linear": [82, 83, 94, 100, 109, 153], "linearedgeencod": [81, 82], "linearli": 124, "linearnodeencod": [81, 82], "liquid": 88, "liquido": [3, 4, 17, 41, 52, 79, 85, 146], "liquido_read": [3, 48], "liquido_v1": [85, 88], "liquidoread": [48, 52, 146], "list": [5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 23, 31, 34, 36, 37, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 72, 74, 75, 76, 80, 83, 84, 86, 87, 88, 89, 90, 92, 94, 96, 100, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 119, 122, 124, 126, 127, 128, 134, 136, 137, 140, 142, 146, 147, 151], "list_all_submodul": [131, 136], "ljvmiranda921": 145, "load": [0, 8, 11, 58, 70, 110, 114, 132, 134, 147, 148, 149, 151, 152], "load_from_checkpoint": [148, 153], "load_modul": [10, 11, 110], "load_state_dict": [110, 114, 148, 153], "loaded_model": [148, 153], "local": [80, 87, 88, 89, 108, 130, 148, 150, 153], "locat": 109, "lock": 13, "log": [0, 1, 118, 123, 124, 126, 129, 147, 148, 149, 152, 153], "log10": [119, 128, 148, 153], "log_cmk": 126, "log_cmk_approx": 126, "log_cmk_exact": 126, "log_every_n_step": [90, 148, 153], "log_fold": [36, 49, 51, 52, 53, 62, 142], "log_model": [148, 153], "logcmk": [123, 126], "logcoshloss": [123, 126, 148, 153], "logger": [7, 9, 11, 14, 19, 36, 49, 51, 52, 53, 60, 62, 69, 70, 90, 103, 110, 125, 128, 129, 142, 148, 153], "loggeradapt": 142, "logic": 147, "logit": [117, 126, 153], "logrecord": 142, "long": 147, "longer": 108, "longev": [0, 149, 152], "longtensor": [80, 84, 122], "look": [23, 147, 148], "lookup": 136, "loop": [82, 122, 148, 153], "loss": [11, 13, 16, 90, 105, 111, 115, 119, 124, 126, 130, 148, 153], "loss_factor": 126, "loss_funct": [1, 119, 123, 148, 153], "loss_weight": [105, 119, 148, 153], "loss_weight_column": [11, 13, 16, 105, 127, 134], "loss_weight_default_valu": [11, 13, 16, 105, 134], "loss_weight_t": [11, 13, 16, 127, 134], "lossfunct": [119, 123, 126, 148], "lot": 145, "lower": [0, 148, 149, 152], "lr": [148, 153], "m": [104, 109, 126], "ma": 98, "machin": 1, "made": [148, 153], "maeloss": [123, 126], "magnitud": [0, 149, 152], "mai": [49, 60, 70, 108, 119, 147, 148, 150, 153], "main": [1, 14, 82, 83, 91, 98, 122, 145, 148], "mainli": 37, "major": [115, 119], "make": [0, 7, 108, 128, 134, 135, 145, 146, 147, 148, 149, 151, 152, 153], "make_dataload": [123, 127], "make_train_validation_dataload": [123, 127], "makedir": [148, 153], "manag": [0, 123, 146, 148, 149, 152], "mandatori": 82, "mangl": 37, "mani": [64, 146, 148, 153], "manipul": [34, 101, 102, 107], "map": [7, 11, 13, 16, 22, 23, 59, 87, 88, 89, 105, 106, 119, 148, 151, 153], "mari": [0, 149, 152], "martin": 93, "mask": [14, 105, 122], "masked_entri": 122, "master": 126, "match": [14, 49, 105, 128, 140, 143, 146], "math": [1, 83, 129], "mathbb": 84, "mathbf": [80, 84], "matic": 119, "matric": [83, 122], "matrix": [83, 84, 98, 103, 104, 109, 122, 126, 147], "max": [80, 83, 94, 96, 100, 126, 128, 130, 148, 153], "max_activ": 108, "max_epoch": [90, 148, 153], "max_length": 108, "max_pool": [80, 84], "max_pool_x": [80, 84], "max_puls": 108, "max_rel_po": 121, "max_table_s": 64, "max_weight": 128, "maximum": [64, 84, 108, 109, 119, 121, 130], "mc": [23, 59], "mc_truth": [19, 43, 147, 148], "mctree": [31, 35], "md": 148, "mean": [0, 11, 13, 16, 79, 83, 94, 96, 98, 100, 109, 122, 126, 135, 146, 147, 148, 149, 152, 153], "meaning": 82, "meant": [146, 148, 153], "measur": [108, 109, 122, 148, 151], "mechan": 83, "meet": 119, "member": [21, 23, 31, 37, 49, 108, 134, 135, 142, 146, 151], "memori": [13, 147], "mention": 148, "merchant": [14, 126], "merg": [7, 14, 62, 63, 64, 126, 146, 147, 151], "merge_fil": [7, 62, 63, 64, 146, 151], "merged_database_nam": 64, "messag": [83, 98, 124, 142, 148], "messagepass": 83, "metaclass": [134, 135], "metaproject": 150, "meter": 148, "meth": 148, "method": [5, 7, 9, 11, 13, 14, 16, 19, 21, 31, 33, 34, 35, 37, 44, 45, 49, 54, 55, 62, 63, 64, 66, 67, 70, 72, 83, 84, 86, 98, 99, 109, 118, 126, 128, 146, 148, 153], "metric": [92, 94, 96, 100, 104, 113, 124, 148, 153], "mha": [83, 98], "might": [147, 148, 153], "mileston": [124, 148, 153], "million": [64, 66], "min": [80, 84, 94, 96, 100, 128, 148, 153], "min_pool": [80, 81, 84], "min_pool_x": [80, 81, 84], "mind": 148, "minh": 93, "mini": 127, "minim": [90, 111, 147, 148, 151, 153], "minimum": [108, 119], "minkowski": [101, 102], "minkowskiknnedg": [102, 104], "minu": 126, "mise": 126, "miss": 78, "mit": [14, 126], "mix": 18, "ml": [0, 1, 149, 152], "mlp": [81, 82, 83, 94, 99, 100, 121, 153], "mlp_dim": [82, 121], "mlp_ratio": [83, 99], "mode": [90, 119], "model": [0, 1, 5, 68, 70, 71, 74, 76, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 130, 132, 134, 135, 137, 144, 146, 147, 149, 150, 151, 152], "model_config": [70, 74, 76, 129, 131, 132, 134, 137, 148, 153], "model_config_path": [148, 153], "model_nam": [74, 76], "modelconfig": [70, 74, 76, 110, 131, 134, 135], "modelconfigsav": 135, "modelconfigsaverabc": [131, 135], "modelconfigsavermeta": [131, 135], "modif": [148, 153], "modifi": [14, 126, 148, 153], "modul": [0, 3, 6, 7, 11, 17, 18, 37, 38, 40, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 61, 62, 64, 68, 69, 71, 72, 73, 74, 75, 78, 79, 82, 83, 85, 91, 98, 101, 102, 104, 105, 106, 107, 110, 112, 116, 120, 123, 129, 131, 134, 135, 136, 137, 141, 146, 148, 149, 152, 153], "modular": [0, 79, 146, 148, 149, 152, 153], "moduletyp": 136, "momentum": 83, "mont": 35, "more": [1, 11, 13, 14, 58, 59, 92, 110, 134, 135, 142, 147, 148, 153], "most": [0, 1, 60, 104, 119, 146, 149, 151, 152, 153], "mryab": 126, "mseloss": [123, 126], "msg": 142, "mulitpli": 126, "multi": [83, 94, 100, 115], "multiclassclassificationtask": [116, 117, 148], "multiheadattent": [14, 83], "multiindex": 151, "multipl": [11, 13, 16, 18, 82, 109, 124, 126, 134, 142, 153], "multipli": [83, 124], "multiprocess": [7, 14, 45, 47, 55, 146], "multiprocessing_context": [13, 14], "muon": [25, 147, 153], "must": [13, 18, 49, 50, 59, 62, 80, 83, 124, 126, 128, 145, 146, 147, 148, 151], "my": [147, 148, 151], "my_custom_label": [147, 148], "my_databas": 64, "my_fil": [146, 151], "my_geometry_t": 151, "my_outdir": [146, 151], "my_tabl": 151, "mycustomlabel": [147, 148], "mydetector": 151, "myexperi": 151, "myextractor": 151, "mygraphnetmodel": 153, "mymodel": 153, "mypi": 145, "mypicklewrit": 146, "myread": 151, "n": [14, 19, 80, 84, 104, 122, 126, 147, 148, 151], "n_1": 84, "n_b": 84, "n_cluster": 109, "n_event": [146, 151], "n_featur": [82, 99, 121], "n_freq": 82, "n_head": [83, 92, 96, 98], "n_layer": 98, "n_pmt": 109, "n_puls": [108, 151], "n_rel": 99, "n_worker": [69, 72, 75], "name": [4, 5, 7, 8, 11, 13, 16, 18, 19, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 41, 43, 45, 47, 49, 51, 52, 53, 55, 59, 62, 63, 64, 70, 74, 76, 82, 86, 87, 88, 89, 105, 106, 108, 109, 111, 113, 119, 122, 125, 128, 130, 132, 134, 135, 136, 137, 142, 145, 146, 147, 148, 151, 153], "namespac": [4, 110, 134, 135], "nan": 109, "narg": 130, "nb_dom": 122, "nb_file": 7, "nb_input": [92, 93, 94, 95, 96, 97, 98, 100, 113, 117, 118, 119, 148, 153], "nb_intermedi": 93, "nb_nearest_neighbour": [103, 104, 106, 147, 148, 153], "nb_neighbor": 83, "nb_neighbour": [92, 94, 96, 100, 113, 148, 153], "nb_output": [93, 95, 97, 98, 108, 117, 118, 119, 148, 153], "nb_repeats_allow": 142, "ndarrai": [11, 13, 31, 105, 106, 109, 128, 146], "nearest": [92, 94, 96, 100, 103, 104, 106, 113, 122, 148, 153], "nearli": 153, "necessari": [0, 9, 34, 145, 149, 152], "need": [0, 5, 9, 34, 64, 79, 82, 110, 113, 126, 139, 146, 147, 148, 149, 150, 151, 152, 153], "negat": 84, "neighbour": [83, 92, 94, 96, 100, 103, 104, 106, 113, 122, 148, 153], "nest": 34, "nester": 34, "network": [1, 83, 93, 98, 112, 153], "neural": [1, 112, 153], "neutrino": [0, 1, 21, 43, 50, 83, 96, 99, 109, 121, 147, 148, 149, 151, 152, 153], "new": [0, 1, 18, 83, 108, 132, 137, 145, 146, 148, 149, 152, 153], "new_features_nam": 108, "new_phras": 139, "nfdi": [0, 149, 152], "nn": [0, 79, 82, 83, 98, 103, 106, 149, 152, 153], "no_weight_decai": 99, "node": [11, 13, 16, 79, 80, 82, 83, 84, 92, 93, 94, 96, 98, 100, 101, 102, 103, 105, 106, 113, 122, 147, 148, 153], "node_definit": [105, 106, 147, 148, 153], "node_feature_nam": [108, 147, 148, 153], "node_level": 127, "node_rnn": [79, 92, 112], "node_truth": [11, 13, 16, 127, 134], "node_truth_t": [11, 13, 16, 127, 134, 148], "nodeasdomtimeseri": [107, 108], "nodedefinit": [105, 106, 107, 108, 148, 153], "nodesaspuls": [105, 107, 108, 147, 148, 153], "nodetimernn": 113, "nois": [22, 35, 74, 148], "non": [9, 34, 37, 59, 92, 106, 119, 126, 148], "none": [5, 7, 8, 9, 11, 13, 14, 16, 21, 23, 31, 35, 36, 37, 45, 47, 49, 50, 51, 52, 53, 55, 59, 60, 62, 63, 64, 66, 67, 69, 70, 76, 83, 84, 86, 87, 88, 89, 90, 92, 94, 96, 99, 100, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 119, 122, 124, 126, 127, 128, 130, 132, 133, 134, 136, 140, 142, 146, 147, 148, 151, 153], "noninfring": [14, 126], "nope": 98, "norm": [83, 98], "norm_edg": [83, 98], "norm_lay": [82, 83], "normal": [82, 83, 94, 98, 100, 109, 111, 119, 151], "normalizing_flow": [1, 79], "normalizingflow": [79, 111, 119], "northeren": 25, "note": [11, 13, 16, 50, 63, 64, 109, 135, 148], "notebook": 145, "notic": [14, 64, 122, 126], "notimplementederror": 146, "now": [148, 151, 153], "np": [128, 146], "null": [36, 59, 147, 148, 153], "nullspliti3filt": [33, 36, 45, 47, 50, 55], "num": [106, 130], "num_class": 126, "num_edg": 147, "num_edge_featur": 147, "num_featur": 147, "num_head": [83, 121], "num_lay": [113, 121], "num_nod": [122, 147], "num_puls": 108, "num_register_token": 121, "num_row": [105, 147], "num_sampl": 14, "num_work": [7, 8, 9, 14, 47, 63, 127, 146, 147, 148, 151, 153], "number": [0, 5, 7, 11, 13, 14, 16, 19, 45, 47, 55, 60, 63, 64, 69, 72, 75, 82, 83, 84, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 113, 117, 118, 119, 121, 122, 124, 127, 128, 130, 146, 147, 148, 149, 151, 152], "numer": [119, 151], "numpi": 109, "numu": 125, "numucc": 125, "o": [0, 88, 119, 146, 148, 149, 150, 152, 153], "obj": [34, 37, 136], "object": [4, 6, 11, 13, 14, 16, 23, 34, 37, 80, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 124, 126, 127, 130, 142, 147, 148, 153], "observ": 151, "observatori": [21, 50], "obtain": [14, 84, 106, 126], "occur": [8, 127], "oerso": 95, "offer": 147, "offset": [108, 109], "ofintern": 38, "often": 147, "old": 82, "old_phras": 139, "om": [35, 37], "omit": 153, "on_fit_end": 124, "on_train_end": 114, "on_train_epoch_end": 124, "on_train_epoch_start": 124, "on_validation_end": 124, "onc": [142, 148, 150], "one": [11, 13, 21, 31, 59, 74, 84, 134, 135, 140, 145, 146, 147, 148, 151, 153], "ones": [109, 114], "onli": [0, 1, 11, 13, 16, 36, 64, 79, 84, 92, 108, 109, 119, 128, 132, 135, 137, 141, 146, 147, 148, 149, 151, 152, 153], "open": [0, 49, 145, 146, 147, 148, 149, 150, 151, 152], "opensciencegrid": 150, "oper": [14, 80, 83, 91, 94], "oppos": 147, "optic": [37, 109], "optim": [90, 111, 114, 124, 148, 153], "optimis": [0, 1, 148, 149, 152, 153], "optimizer_class": [111, 148, 153], "optimizer_closur": 114, "optimizer_kwarg": [111, 148, 153], "optimizer_step": 114, "optimzi": 111, "option": [5, 7, 9, 11, 13, 14, 16, 21, 31, 59, 64, 66, 67, 70, 76, 82, 83, 84, 86, 87, 88, 89, 92, 94, 96, 99, 100, 104, 105, 106, 108, 109, 110, 111, 113, 119, 122, 124, 126, 128, 129, 130, 132, 134, 140, 146, 147, 148, 151, 153], "orca": 89, "orca150": [85, 89, 153], "orca150superdens": [85, 89], "orca_150": 89, "order": [0, 34, 49, 69, 72, 75, 80, 108, 122, 126, 148, 149, 152], "ordinari": 153, "ordinarili": 151, "org": [98, 100, 103, 126, 148, 150], "orient": [0, 79, 149, 152], "origin": [14, 82, 83, 98, 99, 122, 147, 153], "ot": 126, "other": [14, 26, 59, 103, 126, 145, 147, 148, 153], "otherwis": [14, 37, 126], "our": [148, 151], "out": [5, 11, 13, 14, 94, 116, 126, 142, 145, 146, 147, 148, 151, 153], "out_dim": [82, 83], "out_featur": 83, "outdir": [7, 45, 47, 55, 146, 148, 151, 153], "outer": 34, "outlin": [151, 153], "output": [19, 64, 69, 70, 82, 83, 90, 92, 93, 94, 95, 97, 98, 100, 105, 108, 109, 113, 117, 118, 119, 128, 134, 135, 146, 151, 153], "output_dim": [82, 153], "output_dir": [62, 63, 64, 146], "output_fil": 7, "output_file_path": 146, "output_fold": [6, 69], "outsid": [67, 145], "over": [104, 108, 146, 147], "overal": 126, "overhead": 151, "overrid": [9, 124], "overridden": 108, "overview": [0, 149, 152], "overwrit": [70, 82, 124], "overwrite_old_attr": 82, "overwritten": [49, 130, 132], "own": [145, 148], "ownership": 145, "p": [35, 66, 126, 146], "p11003": 148, "packag": [0, 1, 58, 119, 136, 140, 141, 145, 148, 149, 152, 153], "pad": [82, 98, 105, 109, 122], "pad_to_full_graph": [82, 98], "padding_valu": [25, 28, 122], "pair": [21, 31, 45, 47, 50, 55, 82, 83, 98], "pairwis": [104, 122], "pairwise_shuffl": [56, 58], "panda": [60, 128, 146, 148, 151, 153], "paper": [98, 126], "paradigm": [148, 153], "parallel": [7, 45, 47, 55, 146, 151], "param": [14, 39, 41, 43, 122], "paramet": [5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 72, 74, 75, 76, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143], "parent": [34, 148], "parent_kei": 34, "parquet": [1, 3, 5, 10, 13, 39, 42, 43, 45, 47, 51, 53, 55, 57, 63, 66, 67, 87, 88, 89, 146, 147, 148, 151], "parquet_dataset": [10, 12, 147], "parquet_extractor": [17, 38], "parquet_to_sqlit": [3, 56], "parquet_writ": [3, 61], "parquetdataconvert": [44, 45], "parquetdataset": [9, 12, 13, 146, 148], "parquetextractor": [7, 38, 39, 41, 47, 49], "parquetread": [48, 51], "parquettosqliteconvert": [46, 47], "parquetwrit": [13, 39, 47, 61, 63, 146, 147, 151], "pars": [23, 129, 130, 131, 132, 137, 146], "parse_graph_definit": [10, 11], "parse_label": [10, 11], "part": [71, 146, 148, 150, 151], "particl": [31, 59, 125, 147, 148, 151], "particlenet": [79, 91], "particular": [14, 126, 145], "particularli": [147, 148, 153], "partit": 64, "partli": [0, 149, 152], "pass": [11, 16, 82, 83, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 105, 106, 111, 113, 115, 119, 121, 124, 126, 128, 145, 146, 147, 148, 151, 153], "path": [5, 11, 13, 16, 21, 31, 45, 47, 49, 50, 51, 52, 53, 55, 58, 59, 64, 69, 72, 74, 75, 76, 83, 105, 110, 114, 122, 124, 127, 130, 132, 133, 134, 140, 146, 147, 148, 151, 153], "path_to_arrai": 151, "path_to_geometry_t": 151, "patienc": 130, "pd": [146, 148, 151], "pdf": [103, 111], "pdg": 125, "pe": 122, "pe_nam": 82, "penal": 126, "peopl": [148, 153], "pep257": 145, "pep8": 145, "per": [11, 13, 16, 23, 59, 83, 84, 92, 113, 119, 126, 128, 147, 148], "percentil": [108, 109], "percentileclust": [107, 108], "perceptron": [83, 94, 100], "perform": [0, 9, 80, 82, 83, 84, 90, 91, 92, 94, 96, 100, 108, 111, 113, 114, 115, 117, 119, 127, 148, 149, 152, 153], "permiss": [14, 126], "permit": [14, 126], "persistent_work": [8, 127], "person": [5, 14, 126], "perturb": [105, 106], "perturbation_dict": [105, 106], "pframe": [45, 47, 50, 55], "philip": 98, "philosophi": [148, 153], "photon": [43, 147, 148], "phrase": 139, "phyic": 1, "physic": [0, 1, 21, 35, 37, 68, 74, 76, 79, 116, 119, 147, 148, 149, 152, 153], "physicist": [0, 1, 148, 149, 152], "physicst": 1, "pick": 147, "pickl": [146, 148, 151, 153], "pid": [4, 60, 125, 134, 147], "pid_kei": 125, "piecewiselinearlr": [123, 124, 148, 153], "pip": [145, 150], "pisa": 27, "place": [14, 82, 99, 139, 145], "plai": 1, "plane": [24, 126], "pleas": [72, 146, 147, 148, 151], "plot": 147, "plug": 1, "pmt": [84, 109, 147, 148], "pmt_area": 4, "pmt_dir_i": 4, "pmt_dir_x": 4, "pmt_dir_z": 4, "pmt_number": 4, "point": [5, 30, 111, 125, 126, 127, 148, 151, 153], "pole": 96, "pone": 89, "pone_triangl": 89, "ponesmal": [65, 66], "ponetriangl": [85, 89], "pool": [7, 79, 80, 81, 83, 92, 94, 96, 98, 100], "pop_default": 130, "popular": 153, "port": 148, "portabl": [0, 148, 149, 152, 153], "portion": [14, 126], "pos_x": 148, "posit": [74, 82, 83, 84, 98, 99, 106, 109, 118, 121, 122, 132, 137, 147, 151], "position_encod": 98, "position_i": 4, "position_x": 4, "position_x_pr": 118, "position_y_pr": 118, "position_z": 4, "position_z_pr": 118, "positionreconstruct": [116, 118], "possibl": [0, 34, 64, 145, 149, 151, 152], "post": [92, 94, 96, 100], "post_processing_layer_s": [92, 94, 96, 148, 153], "posterior": 111, "pow": [148, 153], "power": [146, 148, 153], "pr": 113, "practic": [0, 145, 149, 152], "pre": [0, 5, 46, 47, 65, 86, 105, 125, 145, 147, 148, 149, 152, 153], "pre_configur": [1, 3, 47], "precis": 126, "precommit": 145, "preconfigur": 47, "pred": [90, 115, 119], "pred_head_activ": 98, "pred_head_lay": 98, "pred_head_pool": 98, "predict": [0, 9, 26, 30, 32, 74, 76, 83, 90, 93, 98, 99, 111, 115, 117, 119, 126, 127, 148, 149, 152, 153], "predict_as_datafram": [90, 148, 153], "prediction_column": [70, 76, 90, 127], "prediction_kei": 126, "prediction_label": [90, 119, 148, 153], "prefer": 104, "prefetch_factor": 8, "prepar": [0, 5, 9, 126, 147, 149, 152], "prepare_data": [5, 9], "preprocess": 148, "present": [11, 13, 21, 31, 36, 122, 130, 140, 141, 147, 153], "previou": [124, 148, 153], "primari": [59, 64, 147, 148], "primary_hadron_1_direction_phi": [4, 147, 148], "primary_hadron_1_direction_theta": [4, 147, 148], "primary_hadron_1_energi": [4, 147, 148], "primary_hadron_1_position_i": [4, 147, 148], "primary_hadron_1_position_x": [4, 147, 148], "primary_hadron_1_position_z": [4, 147, 148], "primary_hadron_1_typ": [4, 147, 148], "primary_key_rescu": 64, "primary_lepton_1_direction_phi": [4, 147, 148], "primary_lepton_1_direction_theta": [4, 147, 148], "primary_lepton_1_energi": [4, 147, 148], "primary_lepton_1_position_i": [4, 147, 148], "primary_lepton_1_position_x": [4, 147, 148], "primary_lepton_1_position_z": [4, 147, 148], "primary_lepton_1_typ": [4, 147, 148], "principl": [1, 148], "print": [5, 110, 124, 142], "prior": 147, "prioriti": 145, "privat": 128, "pro": [148, 153], "prob": 122, "probabl": [82, 83, 98, 106, 122, 126, 153], "problem": [0, 103, 145, 147, 148, 149, 152, 153], "procedur": 9, "proceedur": 64, "process": [1, 7, 14, 45, 47, 55, 74, 82, 86, 92, 94, 96, 100, 145, 146, 148, 153], "process_posit": 124, "produc": [5, 49, 82, 111, 115, 125, 128, 147, 148], "product": [8, 83, 127], "programm": [0, 149, 152], "progress": 124, "progressbar": [123, 124, 148, 153], "proj_drop": 83, "project": [0, 53, 83, 145, 148, 149, 152, 153], "prometheu": [3, 4, 17, 43, 53, 66, 79, 85, 147, 148, 153], "prometheus_dataset": [1, 65], "prometheus_extractor": [17, 42], "prometheus_read": [3, 48], "prometheusextractor": [7, 42, 43, 49], "prometheusfeatureextractor": [42, 43], "prometheusread": [48, 53], "prometheustruthextractor": [42, 43], "prompt": 148, "prone": 148, "proof": [148, 153], "properti": [5, 9, 11, 13, 14, 19, 26, 37, 49, 62, 84, 86, 90, 97, 108, 109, 119, 125, 133, 142, 146], "propos": 83, "protocol": 146, "prototyp": 88, "proven": [19, 21, 39, 41, 43, 146], "provid": [0, 1, 7, 11, 13, 14, 16, 74, 79, 99, 105, 110, 111, 126, 145, 146, 147, 148, 149, 152, 153], "pth": [148, 153], "public": [66, 86, 128], "publicprometheusdataset": [65, 66], "publish": [14, 126, 148, 153], "puls": [5, 11, 13, 16, 18, 22, 23, 35, 37, 43, 59, 74, 80, 84, 99, 105, 108, 109, 115, 121, 122, 147, 148, 151, 153], "pulse_truth": 5, "pulsemap": [5, 11, 13, 16, 22, 66, 67, 74, 76, 127, 134, 147, 148], "pulsemap_extractor": [74, 76], "pulseseri": 35, "pulsmap": [74, 76], "punch4nfdi": [0, 149, 152], "pure": [7, 19, 20, 23, 37], "purpos": [0, 14, 79, 126, 149, 151, 152], "put": [64, 148, 153], "py": [14, 82, 83, 98, 122, 126, 148], "py3": 150, "pydant": [132, 134, 135, 137], "pydantic_cor": [132, 137], "pydocstyl": 145, "pyg": [122, 147, 148, 153], "pylint": 145, "python": [0, 1, 7, 19, 20, 23, 34, 37, 145, 148, 149, 150, 152, 153], "python3": [87, 88, 89, 130], "pytorch": [16, 124, 148, 150, 153], "pytorch_lightn": [90, 124, 142, 148, 153], "pytorchlightn": 148, "q": 83, "qk_scale": 83, "qkv_bia": 83, "qualiti": [0, 148, 149, 152], "quantiti": [27, 119, 122, 148], "queri": [11, 13, 16, 59, 60, 64, 83, 147, 148], "query_databas": [56, 59], "query_t": [11, 13, 16, 147], "queso": 28, "question": 148, "quick": [109, 148], "r": [84, 103, 146, 148, 150, 151], "radial": 103, "radialedg": [102, 103], "radiat": [108, 109, 148, 153], "radiu": [103, 148], "rais": [11, 13, 21, 23, 31, 110, 111, 132, 137, 146], "random": [3, 11, 13, 16, 56, 60, 63, 82, 98, 106, 108, 122, 134, 147, 148], "randomchunksampl": [10, 14], "randomli": [14, 60, 105, 106, 135, 148, 153], "rang": [14, 119, 149, 151, 152, 153], "rare": 146, "rasmu": [0, 95, 149, 152], "rate": [111, 124], "rather": [119, 142, 148, 153], "ratio": [9, 83, 99], "raw": [0, 108, 109, 147, 148, 149, 151, 152, 153], "rde": 4, "re": [133, 147, 148, 151, 153], "reach": [147, 151], "read": [0, 3, 7, 11, 13, 16, 34, 48, 50, 51, 52, 53, 86, 94, 116, 146, 147, 148, 149, 151, 152], "read_csv": 151, "read_sql": 148, "readabl": 148, "reader": [1, 3, 47, 49, 50, 51, 52, 53, 151], "readi": [65, 151, 153], "readm": 148, "readout": [92, 94, 96, 100], "readout_layer_s": [92, 94, 96, 100, 148, 153], "readthedoc": 148, "receiv": [0, 149, 152, 153], "reciev": [62, 146, 151, 153], "recommend": [148, 150, 151, 153], "reconstruct": [0, 1, 22, 24, 25, 29, 30, 32, 68, 71, 79, 96, 113, 116, 119, 147, 148, 149, 152], "record": 142, "recov": 119, "recreat": [147, 148, 153], "recurr": 112, "recurs": [23, 37, 45, 47, 49, 50, 55, 110, 136, 140], "reduc": [148, 153], "reduce_opt": 80, "refer": [9, 89, 111, 134, 147, 148, 151, 153], "refresh_r": 124, "regardless": [147, 148, 153], "regist": 121, "regress": 115, "regular": [37, 83, 148, 153], "rel": [82, 83, 99, 106, 121, 122], "rel_pos_bia": 83, "rel_pos_bucket": 121, "relat": [58, 140, 151], "relev": [1, 37, 58, 140, 145], "reli": [50, 111], "reload": 153, "relu": [83, 98, 100], "remain": 147, "remaining_batch": 14, "remov": [8, 45, 55, 105, 127, 130, 151], "renam": [72, 139], "rename_state_dict_entri": [129, 139], "repeat": [105, 142], "repeat_label": 105, "repeatfilt": [129, 142], "replac": [86, 87, 88, 89, 139], "replace_with_ident": [86, 87, 88, 89], "repo": 145, "repositori": 145, "repres": [84, 92, 105, 106, 108, 109, 122, 132, 134, 135, 146, 147, 148, 151, 153], "represent": [5, 11, 13, 16, 37, 66, 67, 82, 83, 84, 106, 110, 111, 113, 122, 147, 148, 151, 153], "reproduc": [134, 135, 153], "repurpos": 153, "requir": [0, 21, 27, 39, 43, 59, 108, 117, 119, 126, 145, 146, 147, 148, 149, 150, 151, 152, 153], "requires_icecub": [129, 141], "research": [0, 148, 149, 152], "reset": 83, "reset_paramet": 83, "residu": 83, "resolv": [11, 13, 16, 60], "respect": [127, 148, 151], "respons": [147, 148], "restrict": [14, 119, 126, 153], "result": [14, 59, 63, 84, 106, 109, 124, 126, 127, 136, 148, 151, 153], "retriev": [86, 146, 147], "retro": 29, "return": [5, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 31, 34, 35, 37, 49, 50, 51, 52, 53, 58, 59, 60, 62, 63, 64, 69, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 146, 147, 148, 151, 153], "return_discard": 37, "return_el": 126, "reusabl": [0, 149, 152], "reuseabl": [148, 153], "review": 145, "rezero": 83, "rhel_7_x86_64": 150, "right": [14, 126, 148], "rmse": 126, "rmseloss": [123, 126], "rmsevonmisesfisher3dloss": [123, 126], "rng": 58, "rnn": [1, 79, 92, 113], "rnn_dropout": 92, "rnn_dynedg": 92, "rnn_hidden_s": 92, "rnn_layer": 92, "rnn_tito": [79, 91], "role": 153, "root": 126, "roughli": 147, "row": [59, 64, 105, 106, 109, 122, 147, 148, 151, 153], "rrwp": [82, 106, 122], "rrwp_encod": [82, 122], "rrwp_index": 106, "rrwp_val": 106, "rrwplinearedgeencod": [81, 82], "rrwplinearnodeencod": [81, 82], "run": [1, 14, 50, 69, 71, 72, 75, 83, 146, 148, 150, 151, 153], "run_sql_cod": [56, 59], "runner": [87, 88, 89, 130], "runtim": [125, 150], "runtimeerror": [21, 31], "rw": 122, "rwse": 106, "rwselinearedgeencod": 82, "rwselinearnodeencod": [81, 82], "ryabinin": 126, "sai": [148, 153], "same": [18, 37, 59, 80, 84, 109, 117, 122, 124, 136, 142, 147, 148, 153], "sampl": [14, 60, 83, 105, 106, 108, 148, 153], "sample_puls": 108, "sampler": [3, 10], "san": 83, "san_graph": 83, "sangraphhead": [81, 83], "satisfi": [0, 146, 149, 152], "save": [7, 19, 21, 34, 39, 41, 43, 45, 47, 55, 59, 61, 62, 64, 110, 124, 126, 127, 128, 132, 133, 134, 135, 146, 148, 151], "save_config": [133, 148, 153], "save_dataset_config": [131, 134], "save_dir": [124, 148, 153], "save_fil": [62, 146], "save_method": [7, 146, 151], "save_model_config": [131, 135], "save_result": [123, 127], "save_select": [123, 127], "save_state_dict": [110, 148, 153], "save_to_sql": [56, 59], "scalabl": 147, "scalar": [11, 13, 19, 122, 126], "scale": [82, 83, 95, 99, 104, 105, 108, 109, 119, 121, 126, 147, 153], "scaled_emb": [99, 121], "scatter": [108, 109], "schedul": 111, "scheduler_class": [111, 148, 153], "scheduler_config": [111, 148, 153], "scheduler_kwarg": [111, 148, 153], "schema": 148, "scheme": [92, 94, 96, 100, 146], "scientif": [0, 1, 149, 152], "scope": 145, "score": [83, 98], "script": [148, 153], "search": [45, 47, 49, 50, 51, 52, 53, 55, 140, 146], "sec": 126, "second": 104, "section": 148, "see": [82, 92, 103, 105, 111, 119, 124, 145, 147, 148, 150], "seed": [9, 11, 13, 16, 60, 105, 106, 127, 134, 147, 148], "seen": 82, "select": [5, 8, 9, 11, 13, 14, 16, 28, 36, 60, 108, 127, 128, 134, 145, 148, 151], "selection_nam": 8, "self": [11, 13, 82, 90, 98, 105, 111, 115, 122, 132, 137, 146, 147, 148, 151, 153], "sell": [14, 126], "send": 119, "sensor": [86, 105, 109, 147, 148, 151, 153], "sensor_i": 151, "sensor_id": [87, 89, 151], "sensor_id_column": [87, 88, 89, 151], "sensor_index_nam": 86, "sensor_mask": 105, "sensor_pos_i": [4, 89, 147, 148, 153], "sensor_pos_x": [4, 89, 147, 148, 153], "sensor_pos_z": [4, 89, 147, 148, 153], "sensor_position_nam": 86, "sensor_string_id": 89, "sensor_tim": 151, "sensor_x": [147, 151], "sensor_z": 151, "separ": [34, 104, 124, 148, 150], "seper": [113, 147], "seq_length": [82, 99, 121, 122], "sequenc": [14, 69, 72, 75, 82, 83, 109, 122, 127, 148, 153], "sequenti": [11, 13], "sequential_index": [11, 13, 16], "seri": [11, 13, 16, 22, 23, 35, 37, 59, 74, 92, 108, 113, 147, 148, 153], "serial": [146, 147], "serialis": [33, 34, 148, 153], "serv": 147, "session": [134, 135, 147, 148, 153], "set": [3, 6, 9, 13, 21, 23, 31, 45, 47, 49, 50, 55, 62, 82, 83, 99, 108, 109, 110, 119, 125, 127, 145, 146, 148, 151, 153], "set_extractor": 49, "set_gcd": [21, 31], "set_index": 151, "set_number_of_input": 108, "set_output_feature_nam": 108, "set_verbose_print_recurs": 110, "setlevel": 142, "setup": [9, 124, 150], "setuptool": 150, "sever": [148, 153], "sh": 150, "shall": [14, 126], "shape": [19, 104, 105, 108, 122, 126, 146, 147], "share": [90, 111, 115, 148, 153], "share_redirect": 5, "shared_step": [90, 111, 115], "sharelink": 5, "shell": 150, "shortest": 122, "should": [8, 11, 13, 16, 19, 21, 34, 60, 67, 70, 83, 84, 86, 87, 88, 89, 92, 99, 105, 106, 113, 122, 126, 127, 132, 134, 135, 137, 145, 146, 147, 148, 150, 151, 153], "show": [60, 124, 148], "shown": 148, "shuffl": [8, 9, 58, 63, 127, 147], "shutdown": 9, "sid": 5, "sigmoid": 153, "sign": 126, "signal": [74, 153], "signatur": [23, 37], "signific": 147, "significantli": 147, "signup": 148, "similar": [14, 23, 37, 108, 148, 153], "similarli": [37, 146, 147, 148, 153], "simpl": [0, 79, 90, 148, 149, 152, 153], "simplecoarsen": 80, "simplest": [148, 153], "simpli": [148, 153], "simul": [35, 43, 53, 66, 74, 148, 151], "sinc": [14, 74, 126, 148], "singl": [5, 11, 18, 62, 64, 84, 94, 100, 109, 125, 128, 134, 135, 146, 147, 148, 151, 153], "single_event_as_arrai": 109, "sinusoid": [82, 99, 121], "sinusoidalposemb": [81, 82], "sipm_i": [4, 88], "sipm_id": 88, "sipm_x": [4, 88], "sipm_z": [4, 88], "situat": 145, "size": [13, 14, 64, 82, 83, 84, 92, 94, 95, 96, 98, 99, 100, 122, 130, 147], "skip": [36, 94, 100, 148], "skip_readout": [94, 100], "sklearn": [148, 153], "sk\u0142odowska": [0, 149, 152], "slack": 148, "slice": [83, 94, 100], "slower": 64, "small": [126, 147, 148, 153], "smaller": [62, 146], "smooth": 145, "snippet": [148, 153], "so": [14, 126, 147, 148, 150, 151, 153], "soft": 82, "softmax": 126, "softwar": [0, 14, 50, 126, 149, 152], "solut": [82, 83, 96, 99, 145], "solv": [1, 145, 153], "some": [11, 13, 14, 16, 45, 47, 50, 55, 105, 109, 147, 148], "someth": [148, 153], "somewhat": 148, "sort": [105, 109], "sort_bi": 105, "sota": 5, "sourc": [0, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 72, 74, 75, 76, 78, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 147, 148, 149, 152], "south": 96, "space": [82, 103, 104, 119, 122, 128], "space_coord": 104, "space_dim": 122, "spacetim": 82, "spacetimeencod": [81, 82], "spars": 122, "sparsetensor": 83, "spatial": 109, "spawn": [13, 14], "spd": 122, "special": [23, 74, 113, 122], "specialis": [148, 153], "specif": [0, 1, 3, 5, 6, 7, 11, 13, 16, 17, 19, 22, 37, 48, 49, 50, 59, 64, 68, 70, 73, 75, 78, 80, 84, 85, 86, 87, 88, 89, 91, 92, 97, 103, 105, 108, 112, 116, 117, 118, 119, 120, 122, 126, 145, 146, 147, 148, 149, 151, 152, 153], "specifi": [11, 13, 14, 16, 60, 80, 109, 111, 119, 124, 147, 148, 151, 153], "speed": [74, 104, 147], "sphere": 103, "spite": 126, "splinemp": 30, "split": [0, 9, 36, 64, 80, 149, 152], "split_se": 9, "splitinicepuls": 59, "sql": 128, "sqlite": [1, 3, 5, 9, 10, 16, 47, 55, 57, 59, 64, 66, 67, 147, 148], "sqlite3": 148, "sqlite_dataset": [10, 15, 147], "sqlite_util": [3, 56], "sqlite_writ": [3, 61], "sqlitedataconvert": [54, 55], "sqlitedatas": 147, "sqlitedataset": [9, 15, 16, 146], "sqlitewrit": [61, 64, 146, 147], "squar": 126, "src": [14, 148], "stabl": [118, 119], "stage": [9, 124], "stai": 122, "standalon": 113, "standard": [0, 3, 4, 36, 60, 70, 87, 88, 89, 92, 105, 106, 108, 109, 111, 114, 115, 119, 130, 145, 148, 149, 151, 152, 153], "standard_argu": 130, "standard_averaged_model": [1, 79], "standard_model": [1, 79, 148], "standardaveragedmodel": [79, 114], "standardaveragemodel": 114, "standardflowtask": [116, 119], "standardis": 85, "standardlearnedtask": [116, 117, 118, 119, 153], "standardmodel": [79, 90, 114, 115], "start": [14, 31, 83, 145, 148, 151, 153], "stat": 83, "state": [0, 70, 92, 113, 139, 149, 152], "state_dict": [70, 74, 76, 110, 114, 139, 148], "static": [126, 145], "statist": 109, "std": 84, "std_pool": [81, 84], "std_pool_x": [81, 84], "stdout": 124, "step": [90, 98, 106, 111, 114, 115, 122, 124, 148, 151, 153], "still": 134, "stochast": 83, "stop": [31, 124, 130], "stopped_muon": 4, "store": [11, 13, 16, 59, 62, 63, 64, 125, 146, 147, 148, 151, 153], "str": [5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 72, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 90, 92, 94, 96, 98, 99, 100, 105, 106, 108, 109, 110, 111, 114, 119, 122, 124, 125, 127, 128, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 146, 151], "straightforward": 147, "strategi": [148, 153], "stream": 36, "stream_handl": 142, "streamhandl": 142, "streamlin": 1, "string": [4, 5, 11, 13, 16, 34, 60, 84, 86, 87, 105, 110, 111, 119, 132, 148, 151, 153], "string_id": 151, "string_id_column": [87, 88, 89, 151], "string_index_nam": 86, "string_mask": 105, "string_select": [11, 13, 16, 127, 134], "string_selection_resolv": [3, 56], "stringselectionresolv": [56, 60], "strongli": [148, 153], "structur": [82, 90, 106, 136, 146, 147, 148, 153], "style": 145, "sub": 148, "subclass": [0, 5, 79, 90, 146, 147, 148, 149, 152, 153], "subev": 36, "subeventstreami3filt": [33, 36], "subfold": [45, 47, 50, 55], "subject": [14, 99, 126], "sublicens": [14, 126], "submit": 99, "submodul": [1, 3, 10, 12, 15, 17, 20, 33, 38, 40, 42, 44, 46, 48, 54, 56, 61, 65, 68, 71, 73, 77, 79, 81, 85, 91, 101, 102, 107, 112, 116, 120, 123, 129, 131, 136], "subpackag": [1, 3, 10, 17, 20, 68, 79, 101, 129], "subsampl": [63, 147], "subsequ": 148, "subset": [11, 13, 16, 83, 92, 94, 96, 100, 113, 148], "substanti": [14, 126], "suggest": [90, 126, 148], "suit": [0, 111, 119, 148, 149, 152], "suitabl": [1, 151], "sum": [80, 84, 90, 94, 96, 100, 109, 115, 128, 148, 153], "sum_pool": [80, 81, 84], "sum_pool_and_distribut": [81, 84], "sum_pool_x": [80, 81, 84], "summar": [74, 76, 108, 109], "summari": [108, 109], "summaris": [148, 153], "summariz": 153, "summarization_indic": 109, "super": [146, 147, 148, 153], "supervis": [115, 119, 153], "support": [0, 7, 37, 119, 145, 146, 147, 148, 149, 152], "suppos": [5, 109, 147, 151], "sure": [145, 146], "swa": 114, "swapabl": 148, "switch": [126, 148, 153], "synchron": 7, "syntax": [60, 90, 126, 147, 148], "system": [140, 148, 153], "t": [4, 37, 59, 124, 126, 146, 147, 148, 151, 153], "t_co": 8, "tabl": [5, 11, 13, 16, 18, 19, 21, 39, 41, 43, 49, 59, 63, 64, 86, 105, 128, 146, 147, 148], "table_nam": [43, 59], "table_without_index": 151, "tackl": 153, "tag": [127, 145], "take": [37, 84, 109, 113, 145, 147], "talk": 148, "tar": 5, "target": [90, 111, 117, 119, 126, 137, 148, 153], "target_label": [90, 111, 119, 148, 153], "target_norm": 119, "target_pr": [117, 153], "task": [0, 1, 9, 79, 83, 90, 115, 117, 118, 126, 145, 148, 149, 152], "team": [145, 147, 148, 150, 151, 153], "teardown": 9, "technic": [0, 149, 151, 152], "techniqu": [0, 149, 152, 153], "telescop": [0, 1, 148, 149, 151, 152, 153], "tend": 64, "tensor": [11, 13, 16, 70, 80, 82, 83, 84, 86, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 106, 108, 109, 111, 113, 114, 115, 119, 121, 122, 126, 139, 143, 147, 148, 151, 153], "term": [83, 126, 153], "termin": 148, "test": [5, 9, 60, 66, 67, 119, 127, 134, 141, 145, 147, 148, 153], "test_dataload": 9, "test_dataloader_kwarg": [5, 9, 66, 67], "test_dataset": [1, 65], "test_funct": 141, "test_select": [9, 134, 147, 148], "test_siz": 127, "testdataset": [65, 67], "tev": 66, "than": [0, 8, 108, 119, 127, 142, 147, 148, 149, 152, 153], "thei": [69, 72, 75, 108, 146, 147, 148, 153], "them": [0, 1, 34, 70, 79, 94, 119, 147, 148, 149, 151, 152, 153], "themselv": [1, 134, 135, 148, 153], "theo": 83, "therebi": [1, 134, 135, 148, 153], "therefor": [34, 50, 146, 147, 148, 151, 153], "thi": [0, 3, 5, 7, 9, 11, 13, 14, 16, 18, 19, 21, 23, 37, 39, 41, 43, 45, 47, 49, 50, 55, 58, 59, 63, 64, 67, 71, 74, 79, 82, 84, 90, 92, 94, 99, 100, 104, 105, 106, 108, 109, 111, 113, 115, 117, 118, 119, 122, 124, 126, 127, 128, 132, 134, 135, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153], "thing": 148, "thoglu": [111, 119], "those": [21, 31, 122, 147, 148], "thread": 13, "three": [100, 109, 126, 153], "threshold": [0, 74, 149, 152], "through": [0, 109, 117, 118, 119, 126, 146, 148, 149, 152, 153], "throw": 146, "thu": [135, 153], "ti": 147, "time": [0, 4, 59, 80, 82, 84, 92, 104, 108, 109, 113, 118, 122, 128, 142, 147, 148, 149, 151, 152], "time_column": 108, "time_coord": 104, "time_lik": 104, "time_like_weight": 104, "time_series_column": [92, 113], "time_window": 80, "timereconstruct": [116, 118], "tini": 148, "tito": [83, 92, 96], "to_config": 153, "to_csv": [148, 153], "to_dense_adj": 122, "to_parquet": 151, "todo": 148, "togeth": [0, 14, 79, 103, 126, 149, 152], "token": 121, "too": [148, 153], "tool": [0, 1, 149, 152], "top": 153, "torch": [0, 11, 13, 16, 79, 82, 83, 98, 105, 106, 110, 111, 141, 147, 148, 149, 150, 151, 152, 153], "torch_cpu": 150, "torch_geometr": [84, 122, 147, 148, 153], "torch_lightn": 153, "tort": [14, 126], "total": [109, 122, 127, 128, 147, 148, 151], "total_energi": [4, 147, 148, 153], "tqdmprogressbar": 124, "track": [0, 19, 21, 25, 39, 41, 43, 66, 83, 118, 123, 125, 145, 146, 148, 149, 152], "tradit": [0, 149, 152], "train": [0, 1, 5, 7, 9, 10, 60, 65, 66, 67, 68, 74, 83, 90, 99, 105, 111, 114, 115, 122, 124, 125, 126, 127, 128, 130, 134, 135, 137, 144, 146, 147, 148, 149, 151, 152], "train_batch": [90, 114], "train_dataload": [9, 90, 148, 153], "train_dataloader_kwarg": [5, 9, 66, 67], "train_ev": 119, "train_select": [134, 147, 148], "train_val_split": 9, "trainabl": 135, "trainer": [90, 124, 127, 148, 153], "trainer_kwarg": 90, "training_config": [129, 131, 148, 153], "training_example_data_sqlit": [130, 147, 148, 153], "training_step": [90, 114], "trainingconfig": [131, 137, 148, 153], "transform": [1, 79, 83, 84, 96, 98, 99, 113, 119, 121, 122, 128, 148, 153], "transform_infer": [119, 148, 153], "transform_prediction_and_target": [119, 148, 153], "transform_support": [119, 148, 153], "transform_target": [119, 148, 153], "transit": 139, "transpar": [134, 135, 145, 148, 153], "transpos": 34, "transpose_list_of_dict": [33, 34], "traverse_and_appli": [131, 136], "treat": [92, 113], "tree": [23, 148], "tri": [23, 37], "triangl": 89, "trident": [66, 89], "trident1211": [85, 89], "tridentsmal": [65, 66], "trigger": [23, 147, 148, 153], "trivial": [37, 119], "true": [36, 59, 74, 82, 83, 92, 94, 96, 98, 99, 100, 105, 108, 110, 122, 124, 126, 128, 140, 146, 147, 148, 153], "trust": [110, 148, 153], "truth": [3, 4, 5, 11, 13, 16, 22, 31, 43, 59, 63, 66, 67, 105, 119, 127, 128, 134, 147, 151, 153], "truth_dict": 105, "truth_label": 147, "truth_tabl": [5, 11, 13, 16, 63, 127, 128, 134, 147, 148], "truthdata": 41, "try": [37, 146], "tum": [25, 32], "tupl": [7, 11, 13, 14, 16, 35, 37, 59, 83, 92, 94, 96, 100, 109, 119, 122, 127, 130, 139], "turn": [109, 145], "tutorial_output": [148, 153], "two": [8, 94, 124, 126, 127, 146, 147, 148, 151], "txt": 150, "type": [0, 5, 7, 8, 9, 11, 13, 14, 16, 20, 21, 31, 33, 34, 35, 41, 43, 49, 50, 51, 52, 53, 58, 59, 60, 62, 63, 64, 69, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152], "typic": [0, 34, 113, 147, 149, 151, 152], "u": [147, 151], "ultra": 147, "unaccur": 126, "unambigu": [134, 135], "unbatch_edge_index": [79, 80], "uncertainti": [118, 148, 153], "uncompress": 147, "under": [0, 148, 149, 151, 152, 153], "unfamiliar": 153, "uniform": [123, 128], "uniformweightfitt": 128, "uninstanti": [83, 98], "union": [0, 7, 8, 9, 11, 13, 16, 23, 34, 37, 45, 47, 49, 50, 51, 52, 53, 55, 69, 70, 72, 74, 75, 76, 80, 83, 84, 90, 92, 94, 100, 105, 106, 109, 111, 115, 119, 134, 137, 140, 146, 149, 151, 152], "uniqu": [11, 13, 16, 59, 108, 109, 122, 134, 148, 151, 153], "unit": [0, 7, 67, 104, 141, 145, 149, 152], "univers": 96, "unlik": 147, "unscal": 153, "untransform": 117, "up": [0, 74, 145, 149, 152], "updat": [83, 98, 100, 113, 114, 122, 124, 148, 150, 153], "update_edg": [83, 98], "upgrad": [4, 22, 87, 148, 150], "upon": [111, 153], "us": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 31, 33, 34, 39, 41, 43, 45, 47, 49, 50, 54, 55, 56, 59, 60, 62, 63, 64, 66, 67, 68, 70, 72, 74, 76, 79, 82, 83, 84, 86, 90, 92, 94, 95, 96, 98, 99, 100, 103, 105, 106, 108, 109, 110, 111, 113, 116, 117, 118, 119, 121, 122, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 141, 142, 145, 146, 149, 150, 151, 152], "usabl": [0, 149, 152], "usag": [111, 119, 130], "use_bia": [82, 83], "use_cach": 60, "use_global_featur": [92, 96], "use_post_processing_lay": [92, 96], "user": [0, 5, 79, 90, 124, 147, 148, 149, 150, 152, 153], "usual": 147, "util": [1, 3, 17, 20, 34, 35, 36, 37, 57, 58, 59, 60, 79, 101, 123, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 147, 148, 150, 153], "v": 83, "v1": 150, "v4": 150, "val_batch": [90, 114], "val_dataload": [9, 90], "valid": [5, 9, 37, 60, 66, 67, 90, 111, 114, 115, 119, 124, 126, 130, 132, 137, 147, 148, 153], "validate_fil": 49, "validate_task": [90, 111, 115], "validation_dataloader_kwarg": [5, 9, 66, 67], "validation_step": [90, 114], "validationerror": [132, 137], "valu": [11, 13, 16, 31, 34, 59, 82, 83, 84, 98, 100, 103, 104, 105, 106, 109, 119, 122, 125, 126, 130, 132, 153], "valueerror": [23, 110, 111], "var": 118, "var1": 19, "var_n": 19, "variabl": [19, 21, 23, 31, 37, 49, 94, 108, 109, 122, 128, 142, 146, 151, 153], "varieti": 148, "variou": [1, 61, 71, 148], "vast": [115, 119], "vector": [80, 83, 84, 122, 126, 146, 153], "verbos": [45, 47, 50, 55, 90, 115, 124], "verbose_print": 110, "veri": [60, 147, 148, 153], "verifi": [90, 111, 115], "versa": 124, "version": [84, 109, 119, 124, 145, 148, 153], "vertex": [118, 148], "vertex_i": 4, "vertex_x": 4, "vertex_z": 4, "vertexreconstruct": [116, 118], "via": 106, "viabl": 151, "vice": 124, "virtual": 150, "visibl": 118, "visible_energi": 4, "visible_inelast": [4, 118], "visible_inelasticity_pr": 118, "visibleinelasticityreconstruct": [116, 118], "visit": 151, "vmf": 118, "vmf_loss": 126, "vmfs_factor": 126, "volum": 31, "von": 126, "vonmisesfisher2dloss": [123, 126, 148, 153], "vonmisesfisher3dloss": [123, 126], "vonmisesfisherloss": [123, 126], "w": [148, 153], "wa": [0, 7, 99, 147, 148, 149, 151, 152, 153], "wai": [14, 37, 60, 115, 145, 148, 151, 153], "walk": [82, 98, 106, 122], "walk_length": [106, 122], "wandb": [148, 153], "wandb_dir": [148, 153], "wandb_logg": [148, 153], "wandblogg": [148, 153], "want": [147, 148, 150, 151, 153], "warn": [142, 148], "warning_onc": [142, 148], "warranti": [14, 126], "waterdemo81": [85, 89], "wb": 146, "we": [34, 37, 60, 109, 111, 145, 148, 150, 151, 153], "weigel": 98, "weight": [11, 13, 16, 74, 76, 83, 98, 99, 105, 109, 119, 122, 126, 128, 135, 148, 153], "weight_fit": [1, 123], "weight_nam": 128, "weightfitt": [123, 128], "well": [145, 148, 153], "wether": 100, "what": [1, 82, 105, 145, 148, 153], "whatev": 148, "wheel": 150, "when": [0, 11, 13, 14, 16, 34, 36, 59, 74, 83, 92, 94, 96, 100, 113, 125, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153], "whenev": 150, "where": [19, 45, 47, 50, 55, 105, 106, 108, 109, 113, 122, 125, 146, 147, 148, 151, 153], "wherea": [128, 147], "whether": [8, 14, 35, 37, 59, 82, 83, 92, 94, 96, 99, 100, 110, 121, 126, 136, 140, 141, 148], "which": [0, 5, 11, 13, 16, 19, 21, 22, 31, 35, 39, 41, 43, 60, 62, 64, 69, 71, 72, 75, 80, 84, 94, 100, 105, 106, 109, 110, 111, 117, 119, 122, 126, 127, 130, 146, 147, 148, 149, 152, 153], "while": [0, 23, 90, 122, 124, 145, 147, 149, 152], "who": [5, 139, 148, 153], "whom": [14, 126], "whose": 74, "wide": [14, 111, 153], "width": 14, "willing": [147, 151], "window": [80, 147, 148], "wise": [83, 84], "wish": [0, 69, 145, 149, 152], "with_standard_argu": 130, "within": [31, 80, 83, 84, 94, 100, 103, 148, 153], "without": [1, 14, 98, 103, 106, 108, 126, 147, 150], "work": [0, 4, 35, 92, 145, 146, 147, 148, 149, 152, 153], "worker": [6, 7, 14, 45, 55, 58, 63, 69, 72, 75, 130, 142], "workflow": [0, 149, 152], "would": [145, 147, 148, 151, 153], "wrap": [124, 134, 135], "write": [63, 74, 76, 146, 148, 153], "writer": [1, 3, 47, 62, 63, 64, 151], "written": [47, 69, 146], "wrt": 119, "www": 148, "x": [4, 31, 82, 83, 84, 87, 98, 104, 108, 109, 113, 119, 122, 126, 128, 147, 148, 151, 153], "x8": 147, "x_i": 83, "x_j": 83, "x_low": 128, "xyz": [86, 87, 88, 89, 108, 109, 147, 151], "xyz_coord": 122, "xyzt": 122, "y": [4, 31, 82, 87, 104, 122], "yaml": [132, 133, 148], "yet": 109, "yield": [0, 94, 100, 126, 149, 152], "yml": [60, 130, 134, 135, 147, 148, 153], "you": [64, 69, 82, 111, 134, 135, 145, 147, 148, 150, 151, 153], "your": [106, 111, 145, 146, 147, 148, 150], "yourself": 145, "z": [4, 31, 82, 87, 104, 108, 109, 122], "z_name": 108, "z_offset": [108, 109], "z_scale": [108, 109], "zenith": [4, 118, 125, 148, 153], "zenith_kappa": 118, "zenith_kei": 125, "zenith_pr": 118, "zenithreconstruct": [116, 118], "zenithreconstructionwithkappa": [116, 118, 148, 153], "zero": 106, "\u00f8rs\u00f8e": [0, 149, 152]}, "titles": ["Usage", "API", "constants", "data", "constants", "curated_datamodule", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "samplers", "sqlite", "sqlite_dataset", "extractors", "combine_extractors", "extractor", "icecube", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "internal", "parquet_extractor", "liquido", "h5_extractor", "prometheus", "prometheus_extractor", "parquet", "deprecated_methods", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "internal_parquet_reader", "liquido_reader", "prometheus_reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "datasets", "prometheus_datasets", "test_dataset", "deployment", "deployer", "deployment_module", "i3modules", "deprecated_methods", "icecube", "cleaning_module", "i3deployer", "inference_module", "exceptions", "exceptions", "models", "coarsening", "components", "embedding", "layers", "pool", "detector", "detector", "icecube", "liquido", "prometheus", "easy_model", "gnn", "RNN_tito", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "grit", "icemix", "particlenet", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "normalizing_flow", "rnn", "node_rnn", "standard_averaged_model", "standard_model", "task", "classification", "reconstruction", "task", "transformer", "iseecube", "utils", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contributing To GraphNeT", "Data Conversion in GraphNeT", "Datasets In GraphNeT", "GraphNeT tutorial", "GraphNeT", "Installation", "Integrating New Experiments into GraphNeT", "GraphNeT", "Models In GraphNeT", "&lt;no title&gt;"], "titleterms": {"1": 151, "2": 151, "In": [147, 153], "The": [148, 153], "To": 145, "acknowledg": 0, "ad": [147, 148, 151, 153], "advanc": 148, "api": 1, "appendix": 148, "appli": 151, "argpars": 130, "backbon": 153, "base_config": 132, "befor": 151, "callback": 124, "checkpoint": 153, "choos": 147, "class": [148, 151, 153], "classif": 117, "cleaning_modul": 74, "coarsen": 80, "code": 145, "collect": 34, "combin": [147, 148], "combine_extractor": 18, "compon": 81, "config": 131, "configur": 133, "constant": [2, 4], "content": 148, "contribut": 145, "convent": 145, "convers": 146, "convnet": 93, "creat": 148, "curated_datamodul": 5, "custom": [147, 148], "cvmf": 150, "data": [3, 146, 151], "dataclass": 6, "dataconfig": 148, "dataconvert": [7, 47, 146], "dataload": 8, "datamodul": 9, "dataset": [10, 11, 65, 147, 148], "dataset_config": 134, "datasetconfig": 148, "decor": 138, "deploy": [68, 69], "deployment_modul": 70, "deprecated_method": [45, 55, 72], "deprecation_tool": 139, "detector": [85, 86, 151], "dynedg": 94, "dynedge_jinst": 95, "dynedge_kaggle_tito": 96, "easy_model": 90, "edg": [102, 103], "embed": 82, "energi": 153, "event": 147, "exampl": [148, 151, 153], "except": [77, 78], "experi": [151, 153], "extractor": [17, 19, 146, 151], "filesi": 140, "frame": 35, "function": 148, "geometri": 151, "github": 145, "gnn": [91, 97], "graph": [101, 106], "graph_definit": 105, "graphdefinit": 153, "graphnet": 148, "graphnet_file_read": 49, "graphnet_writ": 62, "graphnetfileread": 151, "graphnetgraphnet": [145, 146, 147, 149, 151, 152, 153], "grit": 98, "h5_extractor": 41, "i3_filt": 36, "i3deploy": 75, "i3extractor": 21, "i3featureextractor": 22, "i3genericextractor": 23, "i3hybridrecoextractor": 24, "i3modul": 71, "i3ntmuonlabelsextractor": 25, "i3particleextractor": 26, "i3pisaextractor": 27, "i3quesoextractor": 28, "i3read": 50, "i3retroextractor": 29, "i3splinempeextractor": 30, "i3truthextractor": 31, "i3tumextractor": 32, "icecub": [20, 73, 87, 150], "icemix": 99, "implement": [147, 151], "import": 141, "index": 151, "inference_modul": 76, "instal": 150, "instanti": 153, "integr": 151, "intern": 38, "internal_parquet_read": 51, "introduct": 148, "iseecub": 121, "issu": 145, "label": [125, 147, 148], "layer": 83, "liquido": [40, 88], "liquido_read": 52, "load": 153, "log": 142, "loss_funct": 126, "math": 143, "minkowski": 104, "model": [79, 110, 148, 153], "model_config": 135, "modelconfig": [148, 153], "multi": 151, "multipl": [147, 148], "new": [147, 151], "node": [107, 108], "node_rnn": 113, "normalizing_flow": 111, "overview": 148, "own": [151, 153], "parquet": [12, 44], "parquet_dataset": 13, "parquet_extractor": 39, "parquet_to_sqlit": 57, "parquet_writ": 63, "parquetdataset": 147, "pars": 136, "particlenet": 100, "pool": 84, "pre_configur": 46, "prometheu": [42, 89], "prometheus_dataset": 66, "prometheus_extractor": 43, "prometheus_read": 53, "pull": 145, "qualiti": 145, "quick": 150, "random": 58, "reader": [48, 146], "reconstruct": [118, 153], "reproduc": 148, "request": 145, "rnn": 112, "rnn_tito": 92, "sampler": 14, "save": 153, "select": 147, "sqlite": [15, 54], "sqlite_dataset": 16, "sqlite_util": 59, "sqlite_writ": 64, "sqlitedataset": [147, 148], "src": 144, "standard_averaged_model": 114, "standard_model": 115, "standardmodel": [148, 153], "start": 150, "state_dict": 153, "string_selection_resolv": 60, "subset": 147, "support": 151, "syntax": 153, "tabl": 151, "task": [116, 119, 153], "test_dataset": 67, "track": 153, "train": [123, 153], "training_config": 137, "transform": 120, "truth": 148, "tutori": 148, "type": 37, "us": [147, 148, 153], "usag": 0, "util": [33, 56, 109, 122, 127, 129], "v": 147, "weight_fit": 128, "write": 151, "writer": [61, 146], "your": [151, 153]}})