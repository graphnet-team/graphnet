Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.combine_extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.extractors.liquido", "api/graphnet.data.extractors.liquido.h5_extractor", "api/graphnet.data.extractors.prometheus", "api/graphnet.data.extractors.prometheus.prometheus_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.readers.liquido_reader", "api/graphnet.data.readers.prometheus_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.liquido", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.icemix", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.combine_extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.extractors.liquido.rst", "api/graphnet.data.extractors.liquido.h5_extractor.rst", "api/graphnet.data.extractors.prometheus.rst", "api/graphnet.data.extractors.prometheus.prometheus_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.readers.liquido_reader.rst", "api/graphnet.data.readers.prometheus_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.liquido.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "sqlite", "sqlite_dataset", "extractors", "combine_extractors", "extractor", "icecube", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "internal", "parquet_extractor", "liquido", "h5_extractor", "prometheus", "prometheus_extractor", "parquet", "deprecated_methods", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "internal_parquet_reader", "liquido_reader", "prometheus_reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "deployment", "deployer", "deployment_module", "i3modules", "deprecated_methods", "icecube", "cleaning_module", "i3deployer", "inference_module", "exceptions", "exceptions", "models", "coarsening", "components", "embedding", "layers", "pool", "detector", "detector", "icecube", "liquido", "prometheus", "gnn", "RNN_tito", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "icemix", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "rnn", "node_rnn", "standard_averaged_model", "standard_model", "task", "classification", "reconstruction", "task", "utils", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 45, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 69, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136], "i": [0, 1, 8, 10, 12, 14, 16, 17, 19, 21, 32, 33, 34, 35, 37, 39, 41, 43, 45, 48, 53, 56, 57, 58, 61, 62, 64, 69, 71, 75, 77, 78, 79, 87, 88, 92, 95, 97, 100, 101, 104, 109, 110, 111, 113, 114, 115, 116, 117, 119, 121, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136], "an": [0, 17, 35, 43, 45, 48, 53, 58, 97, 104, 105, 115, 129, 131, 134, 135, 136], "open": [0, 47, 134, 135], "sourc": [0, 4, 5, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 41, 43, 45, 47, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 64, 65, 69, 71, 73, 75, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135], "python": [0, 1, 6, 17, 18, 21, 32, 35, 134, 135, 136], "framework": [0, 135], "aim": [0, 1, 134, 135], "provid": [0, 1, 6, 10, 12, 14, 69, 74, 92, 97, 102, 115, 134, 135, 136], "high": [0, 135], "qualiti": [0, 135], "user": [0, 74, 113, 135, 136], "friendli": [0, 60, 62, 135], "end": [0, 1, 113, 135], "function": [0, 6, 7, 10, 19, 35, 37, 41, 56, 57, 69, 71, 75, 78, 79, 82, 83, 84, 88, 97, 101, 102, 110, 111, 115, 116, 118, 123, 124, 125, 128, 129, 130, 132, 135], "perform": [0, 8, 75, 77, 78, 79, 85, 86, 88, 90, 100, 104, 105, 106, 108, 110, 116, 135], "reconstruct": [0, 1, 20, 22, 23, 27, 28, 30, 63, 74, 90, 92, 104, 107, 110, 135], "task": [0, 1, 8, 74, 106, 108, 109, 115, 134, 135], "neutrino": [0, 1, 19, 41, 48, 78, 90, 92, 101, 135], "telescop": [0, 1, 135], "us": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 19, 24, 29, 31, 32, 37, 39, 41, 43, 45, 47, 48, 52, 53, 54, 57, 58, 60, 61, 62, 63, 65, 69, 71, 74, 77, 78, 79, 81, 86, 88, 89, 90, 92, 95, 97, 98, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 130, 131, 134, 135, 136], "graph": [0, 1, 7, 10, 12, 14, 74, 78, 79, 81, 94, 95, 96, 97, 99, 100, 101, 104, 110, 111, 114, 116, 134, 135], "neural": [0, 1, 103, 135], "network": [0, 1, 78, 87, 103, 135], "gnn": [0, 1, 74, 86, 87, 88, 89, 90, 92, 97, 104, 106, 135, 136], "make": [0, 6, 100, 117, 123, 124, 134, 135, 136], "fast": [0, 135, 136], "easi": [0, 135], "train": [0, 1, 6, 8, 9, 58, 63, 69, 78, 92, 97, 105, 106, 111, 113, 114, 115, 116, 117, 119, 123, 124, 126, 133, 135, 136], "complex": [0, 74, 135], "model": [0, 1, 63, 65, 69, 71, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 119, 121, 123, 124, 126, 133, 135, 136], "can": [0, 1, 8, 10, 12, 14, 17, 21, 24, 69, 77, 79, 97, 117, 119, 121, 123, 124, 134, 135, 136], "event": [0, 1, 6, 8, 10, 12, 14, 16, 26, 41, 43, 45, 53, 57, 58, 61, 62, 69, 77, 79, 86, 97, 100, 101, 110, 111, 115, 116, 117, 123, 135], "state": [0, 65, 86, 104, 128, 135], "art": [0, 135], "arbitrari": [0, 135], "detector": [0, 1, 29, 74, 82, 83, 84, 97, 98, 100, 106, 135], "configur": [0, 1, 8, 10, 44, 45, 65, 74, 102, 106, 118, 120, 121, 123, 124, 126, 131, 135], "infer": [0, 1, 62, 63, 65, 69, 71, 106, 110, 135, 136], "time": [0, 4, 57, 75, 77, 79, 86, 96, 100, 101, 104, 109, 111, 131, 135, 136], "ar": [0, 1, 4, 10, 12, 14, 19, 21, 34, 35, 47, 58, 60, 61, 62, 64, 69, 78, 79, 86, 88, 90, 93, 94, 95, 97, 98, 99, 100, 101, 104, 108, 115, 117, 123, 124, 134, 135, 136], "order": [0, 32, 47, 64, 75, 100, 111, 135], "magnitud": [0, 135], "faster": [0, 135], "than": [0, 7, 110, 116, 131, 135], "tradit": [0, 135], "techniqu": [0, 135], "common": [0, 1, 115, 123, 124, 127, 130, 135], "ml": [0, 1, 135], "develop": [0, 1, 134, 135, 136], "physicist": [0, 1, 135], "wish": [0, 64, 134, 135], "tool": [0, 1, 135], "research": [0, 135], "By": [0, 43, 45, 48, 53, 110, 135], "unit": [0, 6, 96, 130, 134, 135], "both": [0, 21, 110, 135], "group": [0, 79, 135], "increas": [0, 113, 135], "longev": [0, 135], "usabl": [0, 135], "individu": [0, 10, 12, 14, 79, 88, 111, 135], "code": [0, 29, 43, 53, 57, 97, 123, 124, 135], "contribut": [0, 135, 136], "from": [0, 1, 6, 7, 8, 10, 12, 14, 17, 18, 19, 21, 23, 24, 26, 32, 33, 34, 35, 37, 39, 40, 41, 47, 48, 50, 51, 55, 60, 62, 77, 79, 90, 92, 95, 97, 100, 101, 102, 105, 108, 109, 110, 111, 113, 114, 115, 121, 122, 123, 124, 126, 131, 134, 135, 136], "build": [0, 1, 74, 81, 95, 96, 100, 101, 102, 121, 123, 124, 135], "gener": [0, 8, 10, 12, 14, 21, 34, 47, 60, 64, 69, 71, 77, 93, 94, 97, 98, 99, 108, 115, 135], "reusabl": [0, 135], "softwar": [0, 48, 115, 135], "packag": [0, 1, 56, 125, 129, 130, 134, 135, 136], "base": [0, 4, 5, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 37, 39, 41, 43, 45, 47, 48, 49, 50, 51, 53, 58, 60, 61, 62, 64, 65, 69, 71, 73, 75, 77, 78, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 126, 130, 131, 135], "engin": [0, 135], "best": [0, 113, 134, 135], "practic": [0, 134, 135], "lower": [0, 135], "technic": [0, 135], "threshold": [0, 69, 135], "most": [0, 1, 58, 96, 110, 135, 136], "scientif": [0, 1, 135], "problem": [0, 95, 134, 135], "The": [0, 6, 8, 10, 12, 14, 16, 32, 35, 43, 45, 53, 57, 60, 61, 62, 64, 65, 69, 71, 75, 77, 78, 79, 86, 88, 90, 92, 95, 97, 101, 104, 108, 109, 110, 111, 113, 114, 115, 128, 135], "improv": [0, 1, 119, 135], "classif": [0, 1, 74, 107, 110, 115, 135], "yield": [0, 88, 115, 135], "veri": [0, 58, 135], "accur": [0, 135], "e": [0, 1, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 35, 37, 41, 57, 58, 62, 65, 69, 71, 75, 78, 79, 81, 82, 83, 84, 87, 91, 95, 97, 100, 101, 102, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 121, 131, 134, 135, 136], "g": [0, 1, 10, 12, 14, 16, 17, 19, 29, 32, 35, 57, 58, 62, 69, 71, 79, 97, 100, 101, 110, 111, 117, 131, 134, 135, 136], "low": [0, 135], "energi": [0, 4, 109, 110, 117, 135], "observ": [0, 135], "icecub": [0, 1, 3, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 43, 45, 48, 53, 63, 69, 71, 74, 78, 80, 90, 92, 100, 101, 130, 135, 136], "here": [0, 97, 134, 135, 136], "implement": [0, 1, 17, 19, 47, 60, 65, 78, 86, 87, 88, 89, 90, 92, 95, 104, 115, 134, 135], "wa": [0, 6, 135], "appli": [0, 6, 10, 12, 14, 43, 45, 46, 47, 53, 64, 78, 79, 86, 87, 88, 89, 90, 91, 92, 101, 104, 106, 108, 110, 125, 135], "oscil": [0, 135], "lead": [0, 135], "signific": [0, 135], "angular": [0, 135], "rang": [0, 110, 135], "relev": [0, 1, 35, 56, 129, 134, 135], "studi": [0, 135], "furthermor": [0, 104, 135], "shown": [0, 135], "could": [0, 134, 135], "muon": [0, 23, 135], "v": [0, 78, 135], "therebi": [0, 1, 123, 124, 135], "effici": [0, 135], "puriti": [0, 135], "sampl": [0, 58, 78, 97, 98, 100, 110, 135], "analysi": [0, 64, 135, 136], "similarli": [0, 35, 135], "ha": [0, 35, 57, 69, 87, 101, 115, 129, 135, 136], "great": [0, 135], "point": [0, 28, 114, 115, 116, 135], "analys": [0, 63, 135], "final": [0, 6, 77, 79, 113, 123, 135], "millisecond": [0, 135], "allow": [0, 37, 63, 74, 79, 113, 121, 126, 135, 136], "whole": [0, 135], "new": [0, 1, 16, 78, 100, 121, 126, 134, 135], "type": [0, 6, 7, 8, 10, 12, 14, 18, 19, 31, 32, 33, 39, 41, 47, 48, 49, 50, 51, 56, 57, 58, 60, 61, 62, 64, 75, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 113, 115, 116, 117, 119, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 134, 135], "cosmic": [0, 135], "alert": [0, 135], "which": [0, 10, 12, 14, 17, 19, 20, 29, 33, 37, 39, 41, 58, 60, 62, 64, 75, 79, 88, 97, 98, 101, 102, 108, 111, 115, 116, 119, 135, 136], "were": [0, 135], "previous": [0, 135], "unfeas": [0, 135], "possibl": [0, 32, 62, 134, 135], "identifi": [0, 6, 10, 12, 14, 29, 100, 101, 111, 123, 124, 135], "10": [0, 8, 82, 83, 84, 100, 101, 119, 135], "tev": [0, 135], "monitor": [0, 135], "rate": [0, 113, 135], "direct": [0, 90, 92, 101, 108, 109, 110, 112, 114, 135], "real": [0, 135], "thi": [0, 3, 6, 8, 10, 12, 14, 16, 17, 19, 21, 35, 37, 39, 41, 43, 45, 47, 48, 53, 56, 57, 61, 62, 69, 74, 77, 79, 86, 88, 92, 96, 97, 98, 100, 101, 104, 106, 108, 109, 110, 111, 113, 115, 116, 117, 121, 123, 124, 126, 131, 134, 135, 136], "enabl": [0, 3, 135], "first": [0, 77, 86, 96, 104, 113, 116, 134, 135], "ever": [0, 135], "despit": [0, 135], "larg": [0, 86, 115, 135], "background": [0, 135], "origin": [0, 92, 135], "compris": [0, 135], "number": [0, 6, 10, 12, 14, 17, 43, 45, 53, 58, 61, 62, 64, 77, 78, 79, 86, 87, 88, 89, 90, 91, 92, 95, 96, 98, 100, 101, 104, 108, 109, 110, 111, 113, 116, 117, 119, 135], "modul": [0, 3, 5, 6, 10, 15, 16, 35, 36, 38, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 62, 63, 64, 69, 73, 74, 77, 78, 80, 85, 93, 94, 96, 97, 98, 99, 102, 103, 107, 112, 118, 120, 123, 124, 125, 126, 130, 135], "necessari": [0, 8, 32, 134, 135], "workflow": [0, 135], "ingest": [0, 1, 3, 80, 135], "raw": [0, 100, 101, 135], "data": [0, 1, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 97, 98, 100, 104, 105, 106, 110, 111, 114, 116, 119, 121, 123, 126, 130, 133, 135, 136], "domain": [0, 1, 3, 63, 135], "specif": [0, 1, 3, 5, 6, 10, 12, 14, 15, 17, 20, 35, 46, 47, 48, 57, 62, 63, 65, 73, 75, 79, 80, 81, 82, 83, 84, 85, 86, 91, 95, 97, 100, 103, 106, 107, 108, 109, 110, 115, 134, 135, 136], "format": [0, 1, 3, 6, 10, 32, 36, 37, 47, 49, 60, 61, 62, 77, 102, 104, 123, 134, 135, 136], "deploi": [0, 1, 63, 65, 135], "chain": [0, 1, 63, 74, 106, 135, 136], "illustr": [0, 134, 135], "figur": [0, 135], "level": [0, 10, 12, 14, 16, 29, 34, 41, 43, 45, 47, 48, 49, 50, 51, 53, 57, 60, 61, 75, 79, 92, 131, 135, 136], "overview": [0, 135], "typic": [0, 32, 104, 135], "convert": [0, 1, 3, 6, 12, 19, 32, 34, 43, 44, 45, 53, 55, 61, 111, 135, 136], "industri": [0, 3, 135], "standard": [0, 3, 4, 34, 58, 65, 82, 83, 84, 86, 97, 98, 100, 105, 106, 110, 119, 134, 135], "intermedi": [0, 1, 3, 6, 10, 87, 135, 136], "file": [0, 1, 3, 6, 10, 12, 14, 17, 19, 32, 34, 37, 38, 39, 40, 41, 43, 45, 47, 48, 49, 50, 51, 53, 55, 56, 60, 61, 62, 64, 65, 69, 71, 97, 102, 113, 115, 116, 119, 120, 121, 122, 123, 124, 129, 131, 135, 136], "read": [0, 3, 6, 10, 12, 14, 32, 46, 48, 49, 50, 51, 81, 88, 106, 107, 135, 136], "simpl": [0, 74, 135], "physic": [0, 1, 19, 33, 35, 63, 69, 71, 74, 107, 110, 135], "orient": [0, 74, 135], "compon": [0, 1, 74, 77, 78, 79, 102, 106, 135], "manag": [0, 112, 135], "experi": [0, 1, 5, 6, 46, 47, 65, 112, 135], "log": [0, 1, 109, 112, 113, 115, 118, 135, 136], "deploy": [0, 1, 65, 69, 71, 97, 133, 135], "modular": [0, 74, 135], "subclass": [0, 74, 135], "torch": [0, 10, 12, 14, 74, 78, 97, 98, 102, 130, 135, 136], "nn": [0, 74, 78, 95, 98, 135], "mean": [0, 10, 12, 14, 74, 88, 90, 101, 115, 124, 135], "onli": [0, 1, 10, 12, 14, 62, 74, 79, 86, 110, 117, 121, 124, 126, 130, 135, 136], "need": [0, 8, 32, 62, 74, 77, 102, 104, 115, 128, 135, 136], "import": [0, 1, 57, 74, 118, 135], "few": [0, 74, 134, 135], "exist": [0, 10, 12, 14, 57, 74, 114, 123, 135], "purpos": [0, 74, 115, 135], "built": [0, 74, 97, 135], "them": [0, 1, 32, 65, 74, 88, 110, 135, 136], "togeth": [0, 74, 95, 106, 135], "form": [0, 17, 74, 108, 121, 126, 135], "complet": [0, 74, 106, 135], "extend": [0, 1, 135], "suit": [0, 110, 135], "through": [0, 108, 109, 110, 115, 135], "layer": [0, 74, 76, 79, 86, 87, 88, 89, 90, 92, 104, 108, 109, 110, 135], "connect": [0, 8, 95, 96, 97, 100, 115, 135], "etc": [0, 115, 131, 135], "optimis": [0, 1, 135], "differ": [0, 10, 12, 14, 17, 19, 37, 38, 39, 41, 47, 48, 49, 98, 106, 116, 134, 135, 136], "track": [0, 17, 19, 23, 37, 39, 41, 109, 134, 135], "These": [0, 47, 60, 62, 97, 134, 135], "prepar": [0, 8, 115, 135], "satisfi": [0, 135], "o": [0, 83, 110, 135], "load": [0, 7, 10, 56, 65, 102, 105, 121, 123, 135], "requir": [0, 19, 25, 37, 41, 57, 100, 108, 115, 123, 124, 126, 135, 136], "when": [0, 10, 12, 14, 32, 34, 57, 69, 78, 86, 88, 90, 104, 114, 131, 134, 135, 136], "batch": [0, 7, 12, 61, 75, 78, 79, 104, 106, 111, 116, 119, 135], "do": [0, 65, 69, 115, 123, 124, 134, 135, 136], "predict": [0, 8, 24, 28, 30, 69, 71, 87, 92, 106, 108, 110, 115, 116, 135], "either": [0, 8, 10, 14, 19, 115, 135, 136], "contain": [0, 5, 6, 10, 12, 14, 15, 16, 19, 32, 33, 36, 37, 38, 41, 43, 45, 47, 48, 49, 53, 57, 60, 61, 62, 64, 65, 69, 71, 73, 88, 93, 94, 96, 97, 98, 99, 101, 102, 110, 111, 115, 117, 119, 135, 136], "imag": [0, 1, 134, 135, 136], "portabl": [0, 135], "depend": [0, 135, 136], "free": [0, 115, 135], "split": [0, 8, 34, 62, 75, 135], "up": [0, 69, 134, 135, 136], "interfac": [0, 123, 124, 135, 136], "block": [0, 1, 76, 78, 135], "pre": [0, 44, 45, 81, 97, 114, 134, 135], "directli": [0, 88, 135], "while": [0, 21, 113, 135], "continu": [0, 115, 135], "expand": [0, 135], "": [0, 6, 7, 8, 10, 12, 14, 32, 43, 45, 47, 50, 51, 53, 60, 62, 64, 77, 81, 87, 88, 97, 106, 110, 111, 113, 117, 119, 123, 124, 131, 132, 135, 136], "capabl": [0, 135], "project": [0, 51, 77, 78, 134, 135], "receiv": [0, 135], "fund": [0, 135], "european": [0, 135], "union": [0, 6, 7, 8, 10, 12, 14, 21, 32, 35, 43, 45, 47, 48, 49, 50, 51, 53, 64, 65, 69, 71, 75, 78, 79, 86, 88, 97, 98, 106, 110, 123, 126, 129, 135], "horizon": [0, 135], "2020": [0, 135], "innov": [0, 135], "programm": [0, 135], "under": [0, 135], "mari": [0, 135], "sk\u0142odowska": [0, 135], "curi": [0, 135], "grant": [0, 115, 135], "agreement": [0, 134, 135], "No": [0, 135], "890778": [0, 135], "work": [0, 4, 33, 86, 134, 135, 136], "rasmu": [0, 89, 135], "\u00f8rs\u00f8e": [0, 135], "partli": [0, 135], "punch4nfdi": [0, 135], "consortium": [0, 135], "support": [0, 6, 35, 134, 135, 136], "dfg": [0, 135], "nfdi": [0, 135], "39": [0, 135, 136], "1": [0, 6, 8, 10, 12, 17, 32, 43, 45, 53, 58, 61, 64, 75, 78, 79, 86, 88, 90, 92, 95, 96, 98, 101, 104, 108, 109, 110, 111, 113, 115, 116, 117, 123, 135, 136], "germani": [0, 135], "conveni": [1, 134, 136], "collabor": 1, "solv": [1, 134], "It": [1, 32, 57, 69, 77, 101, 108, 110, 134], "leverag": 1, "advanc": [1, 79], "machin": [1, 136], "learn": [1, 60, 62, 69, 71, 108, 110, 113, 136], "without": [1, 95, 100, 115, 136], "have": [1, 21, 43, 45, 48, 53, 57, 58, 62, 79, 92, 97, 101, 110, 134, 136], "expert": 1, "themselv": [1, 123, 124], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 10, 12, 14, 16, 17, 19, 21, 34, 57, 62, 69, 77, 78, 79, 81, 88, 91, 96, 97, 102, 115, 121, 122, 123, 124, 125, 126, 131, 134, 136], "streamlin": 1, "process": [1, 6, 43, 45, 53, 69, 77, 81, 86, 88, 90, 134, 136], "transform": [1, 78, 79, 90, 92, 104, 110, 117], "extens": [1, 47, 60, 129], "basic": 1, "across": [1, 2, 10, 12, 14, 35, 54, 64, 79, 106, 115, 118, 119, 120, 131], "variou": [1, 59], "easili": 1, "architectur": [1, 87, 88, 89, 90, 92, 104], "main": [1, 85, 97, 106, 134, 136], "featur": [1, 3, 4, 10, 12, 14, 20, 62, 69, 71, 77, 78, 79, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 108, 111, 116, 123, 134], "i3": [1, 19, 33, 34, 35, 43, 45, 48, 53, 56, 64, 69, 71, 129, 136], "more": [1, 10, 12, 56, 57, 86, 102, 123, 124, 131], "index": [1, 6, 10, 12, 14, 35, 57, 61, 79, 81, 86, 96, 101, 104, 113], "sqlite": [1, 3, 8, 9, 14, 45, 53, 55, 57, 62, 136], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 10, 60, 81, 91, 97, 110, 122], "awai": 1, "detail": [1, 86, 102, 113, 136], "expos": 1, "physicst": 1, "what": [1, 77, 97, 134], "i3modul": [1, 63, 65], "includ": [1, 12, 78, 100, 106, 115, 121, 134], "docker": 1, "run": [1, 48, 64], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 9, 15, 18, 63, 74, 93, 118], "dataset": [1, 3, 7, 8, 11, 12, 13, 14, 23, 58, 61, 73, 86, 97, 104, 119, 123], "extractor": [1, 3, 6, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 53, 69, 71], "parquet": [1, 3, 9, 12, 37, 40, 41, 43, 45, 49, 51, 53, 55, 61, 82, 83, 84, 136], "pre_configur": [1, 3, 45], "reader": [1, 3, 45, 47, 48, 49, 50, 51], "util": [1, 3, 15, 18, 32, 33, 34, 35, 55, 56, 57, 58, 74, 93, 112, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133], "writer": [1, 3, 45, 60, 61, 62], "constant": [1, 3, 133], "dataclass": [1, 3, 33], "dataconvert": [1, 3, 44, 60, 61, 62], "dataload": [1, 3, 8, 97, 106, 116, 126], "datamodul": [1, 3], "deployment_modul": [1, 63], "except": [1, 133], "rnn": [1, 74, 86, 104], "coarsen": [1, 74, 79], "standard_averaged_model": [1, 74], "standard_model": [1, 74], "callback": [1, 106, 112], "label": [1, 10, 14, 23, 26, 87, 97, 106, 110, 112, 116, 123], "loss_funct": [1, 110, 112], "weight_fit": [1, 112], "config": [1, 7, 58, 113, 115, 118, 119, 121, 122, 123, 124, 125, 126], "argpars": [1, 118], "decor": [1, 118, 130], "deprecation_tool": [1, 118], "filesi": [1, 118], "math": [1, 78, 118], "submodul": [1, 3, 9, 11, 13, 15, 18, 31, 36, 38, 40, 42, 44, 46, 52, 54, 59, 63, 66, 68, 72, 74, 76, 80, 85, 93, 94, 99, 103, 107, 112, 118, 120, 125], "global": [2, 4, 86, 88, 90, 102], "intern": [3, 15, 37, 45, 49], "liquido": [3, 4, 15, 39, 50, 74, 80], "prometheu": [3, 4, 15, 41, 51, 74, 80], "combine_extractor": [3, 15], "deprecated_method": [3, 42, 52, 63, 66], "graphnet_file_read": [3, 46], "i3read": [3, 43, 45, 46, 53], "internal_parquet_read": [3, 46], "liquido_read": [3, 46], "prometheus_read": [3, 46], "parquet_to_sqlit": [3, 54], "random": [3, 10, 12, 14, 54, 58, 61, 100, 123], "sqlite_util": [3, 54], "string_selection_resolv": [3, 54], "graphnet_writ": [3, 59], "parquet_writ": [3, 59], "sqlite_writ": [3, 59], "truth": [3, 4, 10, 12, 14, 20, 29, 41, 57, 61, 97, 110, 116, 117, 123], "i3fileset": [3, 5, 47, 48], "set": [3, 5, 8, 19, 21, 43, 45, 47, 48, 53, 60, 78, 92, 100, 101, 102, 110, 116, 134], "init_global_index": [3, 6], "collate_fn": [3, 7, 112, 116], "do_shuffl": [3, 7], "graphnetdatamodul": [3, 8], "class": [4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 37, 39, 41, 43, 45, 47, 48, 49, 50, 51, 53, 58, 60, 61, 62, 64, 65, 69, 71, 75, 77, 78, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 131, 134], "object": [4, 5, 10, 12, 14, 21, 32, 35, 75, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 109, 110, 113, 115, 116, 119, 121, 123, 124, 126, 131], "namespac": [4, 102, 123, 124], "name": [4, 6, 7, 10, 12, 14, 16, 17, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 39, 41, 43, 45, 47, 49, 50, 51, 53, 57, 60, 61, 62, 65, 69, 71, 81, 97, 98, 100, 104, 110, 114, 117, 119, 121, 123, 124, 125, 126, 131, 134, 136], "i3featureextractor": [4, 15, 18, 69, 71], "icecube86": [4, 80, 82], "dom_x": [4, 82, 100], "dom_i": [4, 82, 100], "dom_z": [4, 82, 100], "dom_tim": [4, 100], "charg": [4, 77, 86, 100, 101, 104, 115], "rde": 4, "pmt_area": 4, "deepcor": [4, 20, 82], "upgrad": [4, 20, 82, 136], "string": [4, 10, 12, 14, 32, 58, 79, 81, 82, 97, 102, 121], "pmt_number": 4, "dom_numb": 4, "pmt_dir_x": 4, "pmt_dir_i": 4, "pmt_dir_z": 4, "dom_typ": 4, "sensor_pos_x": [4, 84], "sensor_pos_i": [4, 84], "sensor_pos_z": [4, 84], "t": [4, 35, 57, 113, 115, 136], "kaggl": [4, 77, 78, 82, 90, 92], "x": [4, 29, 77, 78, 79, 96, 100, 101, 104, 110, 111, 115, 117], "y": [4, 29, 77, 96, 111, 136], "z": [4, 29, 77, 96, 100, 101, 111, 136], "auxiliari": [4, 77], "sipm_x": [4, 83], "sipm_i": [4, 83], "sipm_z": [4, 83], "i3truthextractor": [4, 15, 18], "energy_track": [4, 109], "energy_cascad": [4, 109], "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": [4, 109, 114], "zenith": [4, 109, 114], "pid": [4, 58, 123], "elast": 4, "interaction_typ": 4, "interaction_tim": [4, 109], "inelast": [4, 109], "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "vertex_x": 4, "vertex_i": 4, "vertex_z": 4, "i3_fil": [5, 19], "str": [5, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 41, 43, 45, 47, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 64, 65, 69, 71, 78, 79, 81, 82, 83, 84, 86, 88, 90, 92, 97, 98, 100, 101, 102, 105, 106, 110, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 131], "gcd_file": [5, 19, 69, 71], "paramet": [5, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 41, 43, 45, 47, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 64, 65, 69, 71, 75, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132], "output_fold": [5, 64], "worker": [5, 6, 43, 53, 56, 61, 64, 119, 131], "i3deploy": [5, 63, 68], "list": [5, 6, 7, 8, 10, 12, 14, 16, 21, 29, 32, 34, 35, 39, 41, 43, 45, 47, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 64, 65, 69, 71, 75, 78, 79, 81, 86, 88, 90, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 110, 111, 113, 116, 117, 123, 125, 126, 129, 131], "ani": [5, 6, 7, 8, 10, 12, 14, 32, 33, 34, 35, 47, 49, 50, 51, 60, 62, 69, 75, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 113, 115, 117, 119, 121, 122, 123, 124, 125, 126, 131, 136], "output_fil": 6, "global_index": 6, "avail": [6, 21, 108, 109, 110, 130], "pool": [6, 74, 75, 76, 86, 88, 90], "return": [6, 7, 8, 10, 12, 14, 16, 17, 19, 32, 33, 35, 47, 48, 49, 50, 51, 56, 57, 58, 60, 61, 62, 64, 75, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132], "none": [6, 7, 8, 10, 12, 14, 19, 21, 29, 33, 34, 35, 43, 45, 47, 48, 49, 50, 51, 53, 57, 58, 60, 61, 62, 64, 65, 71, 78, 79, 86, 88, 90, 92, 96, 97, 98, 100, 101, 102, 104, 105, 106, 110, 113, 115, 116, 117, 119, 121, 122, 123, 125, 129, 131], "synchron": 6, "file_read": 6, "save_method": 6, "outdir": [6, 43, 45, 53], "index_column": [6, 10, 12, 14, 43, 45, 53, 57, 58, 61, 62, 116, 117, 123], "num_work": [6, 7, 45, 61, 116], "abc": [6, 10, 17, 47, 60, 64, 102, 114, 117, 122, 123, 124], "logger": [6, 8, 10, 17, 34, 47, 49, 50, 51, 58, 60, 64, 65, 95, 102, 106, 114, 117, 118, 131, 136], "A": [6, 8, 10, 34, 47, 48, 49, 50, 51, 57, 62, 64, 65, 69, 79, 97, 98, 101, 102, 108, 110, 111, 115, 117, 121, 123, 124, 126, 136], "convers": [6, 36, 37, 41, 43, 53, 100, 136], "parallel": [6, 43, 45, 53], "extract": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 37, 39, 40, 41, 56, 69, 71, 110], "also": [6, 10, 12, 14, 58, 86, 123], "assign": [6, 10, 12, 14, 75, 79, 134], "id": [6, 8, 12, 43, 45, 53, 62, 81, 97, 116], "exampl": [6, 32, 58, 75, 79, 101, 111, 115, 123, 124, 136], "initi": [6, 34, 48, 62, 64, 78, 86, 92, 96], "graphnetfileread": [6, 46, 47, 48, 49, 50, 51], "method": [6, 8, 10, 12, 14, 17, 19, 31, 32, 33, 35, 42, 43, 47, 52, 53, 60, 61, 62, 65, 78, 79, 81, 101, 109, 115, 117], "graphnetwrit": [6, 59, 60, 61, 62], "save": [6, 17, 19, 32, 37, 39, 41, 43, 45, 53, 57, 59, 60, 62, 102, 113, 115, 116, 117, 121, 122, 123, 124, 136], "interim": [6, 59, 60, 61, 62], "directori": [6, 43, 45, 47, 48, 49, 50, 51, 53, 60, 61, 113, 129], "i3extractor": [6, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 43, 45, 47, 53], "parquetextractor": [6, 36, 37, 39, 45, 47], "h5extractor": [6, 38, 39, 47], "prometheusextractor": [6, 40, 41, 47], "input": [6, 10, 12, 14, 43, 45, 47, 48, 53, 60, 64, 69, 71, 77, 78, 82, 86, 87, 88, 89, 90, 91, 92, 97, 98, 100, 104, 108, 110, 111, 121, 126, 128], "default": [6, 8, 10, 12, 14, 19, 21, 29, 32, 41, 43, 45, 48, 53, 57, 61, 62, 64, 65, 69, 71, 77, 78, 79, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 100, 101, 102, 104, 110, 111, 113, 114, 115, 117, 119, 121, 123, 129], "event_no": [6, 10, 12, 14, 43, 45, 53, 57, 58, 61, 62, 117, 123], "column": [6, 10, 12, 14, 17, 39, 41, 43, 45, 53, 57, 61, 62, 65, 71, 73, 81, 86, 95, 97, 98, 100, 101, 104, 106, 108, 109, 110, 111, 117], "ad": [6, 10, 12, 14, 20, 43, 45, 53, 77, 88, 92, 97, 100, 101], "int": [6, 7, 8, 10, 12, 14, 23, 26, 34, 43, 45, 47, 48, 49, 50, 51, 53, 58, 60, 61, 62, 64, 77, 78, 79, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 113, 115, 116, 117, 119, 123, 126, 131], "cpu": [6, 43, 45, 53, 65, 136], "multiprocess": [6, 43, 45, 53, 136], "get_map_funct": 6, "nb_file": 6, "map": [6, 10, 12, 14, 20, 21, 57, 82, 83, 84, 97, 98, 110, 121, 123, 124, 126], "pure": [6, 17, 18, 21, 35], "tupl": [6, 10, 12, 14, 33, 35, 57, 78, 86, 88, 90, 101, 110, 111, 116, 119, 128], "option": [6, 8, 10, 12, 14, 19, 29, 62, 65, 71, 78, 79, 86, 88, 90, 92, 96, 97, 98, 100, 101, 102, 104, 110, 113, 117, 118, 119, 121, 123, 129, 136], "merge_fil": [6, 60, 61, 62], "kwarg": [6, 7, 10, 12, 14, 34, 47, 49, 50, 51, 60, 75, 78, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 109, 110, 113, 115, 117, 121, 123, 124, 131], "merg": [6, 60, 61, 62, 115, 136], "call": [6, 21, 35, 77, 79, 110, 113, 117, 131], "instanti": [6, 8, 124], "remov": [7, 43, 53, 97, 116, 119], "less": [7, 116], "two": [7, 88, 113, 115, 116], "dom": [7, 10, 12, 14, 75, 79, 86, 100, 101, 104, 116], "hit": [7, 116], "should": [7, 10, 12, 14, 17, 19, 32, 58, 65, 78, 79, 86, 92, 97, 98, 104, 111, 115, 116, 121, 123, 124, 126, 134, 136], "occur": [7, 116], "product": [7, 78, 116], "selection_nam": 7, "check": [7, 33, 34, 35, 47, 57, 100, 119, 129, 130, 134, 136], "whether": [7, 33, 35, 57, 77, 78, 86, 88, 90, 92, 102, 115, 125, 129, 130], "shuffl": [7, 8, 56, 61, 116], "select": [7, 8, 10, 12, 14, 26, 58, 116, 117, 123, 134], "bool": [7, 33, 34, 35, 57, 58, 60, 69, 77, 78, 86, 88, 90, 92, 97, 100, 101, 102, 106, 113, 115, 116, 117, 119, 125, 128, 129, 130, 131], "batch_siz": [7, 111, 116], "persistent_work": [7, 116], "prefetch_factor": 7, "construct": [7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 37, 39, 41, 47, 49, 50, 51, 58, 60, 61, 62, 65, 75, 76, 77, 78, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 117, 119, 122, 123, 124, 131], "t_co": 7, "callabl": [7, 10, 35, 78, 79, 81, 82, 83, 84, 97, 105, 110, 116, 117, 121, 123, 124, 125, 130], "classmethod": [7, 10, 102, 115, 121, 122], "from_dataset_config": 7, "datasetconfig": [7, 10, 58, 120, 123], "dict": [7, 8, 10, 14, 21, 32, 35, 57, 65, 81, 82, 83, 84, 92, 97, 98, 100, 102, 105, 106, 113, 116, 119, 121, 123, 124, 125, 126, 128], "dataset_refer": 8, "dataset_arg": 8, "test_select": [8, 123], "train_dataloader_kwarg": 8, "validation_dataloader_kwarg": 8, "test_dataloader_kwarg": 8, "train_val_split": 8, "0": [8, 10, 12, 14, 43, 45, 48, 53, 58, 69, 75, 78, 79, 86, 87, 88, 90, 95, 96, 98, 101, 104, 111, 115, 116, 123], "9": 8, "split_se": 8, "lightningdatamodul": 8, "creat": [8, 57, 97, 100, 121, 122, 126, 134, 136], "sqlitedataset": [8, 13, 14], "parquetdataset": [8, 11, 12], "non": [8, 32, 35, 57, 86, 115], "refer": [8, 84, 123], "argument": [8, 61, 92, 97, 113, 117, 119, 121, 123, 124, 126], "valid": [8, 35, 58, 105, 106, 110, 113, 115, 119, 121, 126], "test": [8, 58, 110, 116, 123, 130, 134], "ratio": [8, 78], "42": [8, 136], "seed": [8, 10, 12, 14, 58, 97, 98, 116, 123], "prepare_data": 8, "setup": [8, 113, 136], "stage": [8, 113], "lightn": [8, 113], "fit": [8, 106, 115, 117, 126], "properti": [8, 10, 17, 24, 35, 47, 60, 79, 81, 91, 100, 101, 106, 110, 114, 122, 131], "train_dataload": [8, 106], "val_dataload": [8, 106], "test_dataload": 8, "teardown": 8, "cleanup": 8, "shutdown": 8, "procedur": 8, "close": 8, "after": [8, 78, 86, 88, 90, 113, 119, 123], "overrid": [8, 113], "parquet_dataset": [9, 11], "sqlite_dataset": [9, 13], "load_modul": [9, 10, 102], "parse_graph_definit": [9, 10], "parse_label": [9, 10], "ensembledataset": [9, 10, 123], "class_nam": [10, 34, 47, 49, 50, 51, 60, 124, 131], "cfg": 10, "graphdefinit": [10, 12, 14, 93, 94, 97, 98, 99, 116, 134], "arg": [10, 12, 14, 16, 34, 75, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 109, 110, 115, 119, 121, 131], "path": [10, 12, 14, 19, 43, 45, 47, 48, 49, 50, 51, 53, 56, 57, 62, 64, 69, 71, 78, 97, 102, 105, 113, 116, 119, 121, 122, 123, 129, 136], "pulsemap": [10, 12, 14, 20, 69, 71, 116, 123], "puls": [10, 12, 14, 16, 20, 21, 33, 35, 41, 57, 69, 75, 79, 92, 97, 100, 101, 111], "seri": [10, 12, 14, 20, 21, 33, 35, 57, 69, 86, 100, 104], "node": [10, 12, 14, 74, 75, 79, 86, 87, 88, 90, 93, 94, 95, 97, 98, 104, 111], "multipl": [10, 12, 14, 16, 101, 113, 123, 131], "store": [10, 12, 14, 57, 60, 61, 62, 114], "attribut": [10, 12, 14, 75, 110], "node_truth": [10, 12, 14, 116, 123], "uniqu": [10, 12, 14, 57, 100, 111, 123], "indici": [10, 12, 14, 33, 58, 115], "tabl": [10, 12, 14, 16, 17, 19, 37, 39, 41, 47, 57, 61, 62, 81, 97, 117], "truth_tabl": [10, 12, 14, 61, 116, 117, 123], "inform": [10, 12, 14, 16, 17, 19, 21, 29, 37, 39, 41, 97, 100, 101, 102], "node_truth_t": [10, 12, 14, 116, 123], "string_select": [10, 12, 14, 116, 123], "subset": [10, 12, 14, 78, 86, 88, 90, 104], "given": [10, 14, 19, 62, 79, 95, 110, 117, 119], "queri": [10, 12, 14, 57, 58, 62, 78], "pass": [10, 14, 77, 78, 86, 87, 88, 89, 90, 91, 92, 97, 104, 106, 110, 113, 115, 117, 134], "dtype": [10, 12, 14, 97, 98, 132], "float32": [10, 12, 14, 97, 98], "tensor": [10, 12, 14, 65, 75, 77, 78, 79, 81, 86, 87, 88, 89, 90, 91, 92, 96, 100, 104, 105, 106, 110, 111, 115, 128, 132], "loss_weight_t": [10, 12, 14, 116, 123], "per": [10, 12, 14, 21, 57, 78, 79, 86, 104, 110, 115, 117], "loss": [10, 12, 14, 97, 106, 110, 113, 115, 119], "weight": [10, 12, 14, 69, 71, 78, 92, 97, 110, 115, 117, 124, 136], "loss_weight_column": [10, 12, 14, 97, 116, 123], "correspond": [10, 12, 14, 32, 35, 56, 88, 97, 101, 117, 121, 123, 124, 126, 129, 136], "loss_weight_default_valu": [10, 12, 14, 97, 123], "float": [10, 12, 14, 69, 78, 86, 87, 95, 96, 97, 98, 100, 101, 104, 106, 113, 115, 116, 123], "note": [10, 12, 14, 48, 61, 62, 101, 124], "valu": [10, 12, 14, 29, 32, 57, 78, 79, 96, 97, 98, 111, 114, 115, 119, 121], "specifi": [10, 12, 14, 58, 75, 101, 110, 113, 136], "case": [10, 12, 14, 21, 43, 45, 48, 53, 69, 79, 101, 110, 136], "That": [10, 12, 14, 88, 109, 114], "ignor": [10, 12, 14, 35, 61], "resolv": [10, 12, 14, 58], "10000": [10, 12, 14, 58, 77], "5": [10, 12, 14, 58, 86, 104, 119, 136], "20": [10, 12, 14, 58, 131], "graph_definit": [10, 12, 14, 74, 93, 116, 123], "defin": [10, 12, 14, 58, 65, 69, 71, 79, 93, 94, 95, 97, 99, 101, 116, 121, 123, 124, 126], "represent": [10, 12, 14, 35, 77, 78, 79, 98, 102, 104], "dictionari": [10, 14, 17, 32, 33, 35, 47, 57, 97, 98, 102, 121, 123, 124, 126], "from_config": [10, 102, 122, 123, 124], "instanc": [10, 17, 19, 29, 35, 37, 39, 41, 43, 45, 48, 53, 97, 102, 114, 116, 122, 124, 136], "concaten": [10, 32, 88], "one": [10, 12, 19, 57, 69, 79, 123, 124, 129, 134, 136], "query_t": [10, 12, 14], "sequential_index": [10, 12, 14], "some": [10, 12, 14, 43, 45, 48, 53, 97, 101], "out": [10, 12, 88, 106, 107, 115, 131, 134, 136], "sequenti": [10, 12], "len": [10, 12, 101], "self": [10, 12, 97, 121, 126], "_may_": [10, 12], "_indic": [10, 12], "If": [10, 12, 19, 21, 34, 62, 78, 88, 92, 97, 100, 101, 102, 110, 113, 117, 134, 136], "entir": [10, 12, 102], "impos": [10, 12], "befor": [10, 12, 88, 96, 104, 110, 113], "ndarrai": [10, 12, 29, 97, 101, 117], "scalar": [10, 12, 17, 111, 115], "length": [10, 12, 35, 100, 101, 111, 113], "rais": [10, 12, 19, 21, 102, 121, 126], "columnmissingexcept": [10, 12, 72, 73], "element": [10, 12, 17, 32, 35, 106, 111, 116, 125], "present": [10, 12, 19, 34, 111, 119, 129, 130], "add_label": 10, "fn": [10, 35, 121, 125], "kei": [10, 21, 32, 33, 35, 57, 62, 78, 79, 100, 114, 123, 124], "add": [10, 78, 88, 119, 128, 134, 136], "custom": [10, 47, 72, 97, 113], "concatdataset": 10, "singl": [10, 16, 60, 62, 79, 88, 101, 114, 123, 124], "collect": [10, 18, 31, 115, 132], "iter": 10, "backend": [11, 13, 59, 61], "parquetwrit": [12, 37, 45, 59, 61], "cache_s": 12, "cach": 12, "memori": 12, "must": [12, 16, 47, 48, 57, 60, 75, 113, 117, 134], "least": [12, 134, 136], "databas": [14, 57, 62, 117, 136], "pytorch": [14, 113, 136], "i3genericextractor": [15, 18], "i3hybridrecoextractor": [15, 18], "i3ntmuonlabelsextractor": [15, 18], "i3particleextractor": [15, 18], "i3pisaextractor": [15, 18], "i3quesoextractor": [15, 18], "i3retroextractor": [15, 18], "i3splinempeextractor": [15, 18], "i3tumextractor": [15, 18], "parquet_extractor": [15, 36], "h5_extractor": [15, 38], "prometheus_extractor": [15, 40], "combinedextractor": [15, 16], "combin": [16, 32, 45, 86, 123], "extractor_nam": [16, 17, 19, 21, 24, 37, 39, 41], "same": [16, 35, 57, 75, 79, 101, 108, 111, 113, 125, 131], "mix": 16, "fail": 16, "inherit": [17, 19, 35, 47, 60, 81, 100, 115, 131], "__call__": [17, 19, 47, 65], "output": [17, 62, 64, 65, 77, 78, 86, 87, 88, 89, 91, 100, 101, 104, 106, 108, 109, 110, 117, 123, 124, 136], "var1": 17, "var_n": 17, "variabl": [17, 19, 21, 35, 47, 88, 100, 101, 111, 117, 131], "arrai": [17, 29, 32, 100, 101, 111], "like": [17, 35, 79, 96, 110, 111, 115, 132, 134], "shape": [17, 96, 97, 100, 111, 115], "n": [17, 75, 79, 96, 111, 115], "where": [17, 43, 45, 48, 53, 97, 98, 100, 101, 104, 111, 114], "denot": [17, 113], "conjunct": [17, 110], "fileread": [17, 47], "keep": [17, 19, 37, 39, 41, 100], "proven": [17, 19, 37, 39, 41], "mc_truth": [17, 41], "get": [17, 33, 57, 81, 113, 116, 136], "i3fram": [18, 21, 33, 35, 69, 71], "frame": [18, 19, 21, 31, 34, 35, 71], "i3_filt": [18, 31, 43, 45, 48, 53], "i3featureextractoricecube86": [18, 20], "i3featureextractoricecubedeepcor": [18, 20], "i3featureextractoricecubeupgrad": [18, 20], "i3pulsenoisetruthflagicecubeupgrad": [18, 20], "i3galacticplanehybridrecoextractor": [18, 22], "i3ntmuonlabelextractor": [18, 23], "i3splinempeicextractor": [18, 28], "observatori": [19, 48], "set_gcd": 19, "gframe": 19, "cframe": 19, "gcd": [19, 33, 43, 45, 48, 53, 56, 69, 71, 129], "pair": [19, 43, 45, 48, 53, 77], "member": [19, 21, 35, 47, 100, 123, 124, 131], "being": [19, 69, 77, 108, 110], "attempt": 19, "find": [19, 96, 129], "c": [19, 32, 79, 96, 115, 136], "instead": [19, 43, 45, 48, 53, 115], "those": 19, "runtimeerror": 19, "86": [20, 82], "nois": [20, 33, 69], "flag": [20, 69], "exclude_kei": 21, "dynam": [21, 78, 88, 89, 90], "pars": [21, 118, 119, 120, 121, 126], "tri": [21, 35], "automat": [21, 61, 97, 115, 134], "cast": [21, 35], "done": [21, 79, 131, 134], "recurs": [21, 35, 43, 45, 47, 48, 53, 102, 125, 129], "each": [21, 32, 35, 56, 57, 61, 62, 64, 65, 75, 77, 78, 79, 82, 83, 84, 86, 88, 90, 95, 97, 98, 100, 101, 104, 108, 110, 111, 113, 116, 129], "look": [21, 136], "signatur": [21, 35], "similar": [21, 35, 100, 136], "handl": [21, 115, 119, 128, 131], "hand": 21, "special": [21, 69, 104, 111], "mc": [21, 57], "tree": 21, "trigger": 21, "exclud": [21, 136], "valueerror": [21, 102], "hybrid": 22, "galatict": 22, "plane": [22, 115], "tum": [23, 30], "dnn": [23, 30], "padding_valu": [23, 26, 111], "northeren": 23, "i3particl": 24, "other": [24, 57, 95, 115, 134], "algorithm": 24, "comparison": [24, 115], "quantiti": [25, 110, 111], "pisa": [25, 136], "queso": 26, "retro": 27, "splinemp": 28, "border": 29, "mctree": [29, 33], "boundari": 29, "volum": 29, "coordin": [29, 81, 96, 100, 101, 111], "particl": [29, 57, 114], "start": [29, 134, 136], "stop": [29, 113, 119], "within": [29, 75, 78, 79, 88, 95], "hard": [29, 100], "i3mctre": 29, "flatten_nested_dictionari": [31, 32], "serialis": [31, 32], "transpose_list_of_dict": [31, 32], "frame_is_montecarlo": [31, 33], "frame_is_nois": [31, 33], "get_om_keys_and_pulseseri": [31, 33], "i3filt": [31, 34, 43, 45, 48, 53], "nullspliti3filt": [31, 34, 43, 45, 48, 53], "i3filtermask": [31, 34], "is_boost_enum": [31, 35], "is_boost_class": [31, 35], "is_icecube_class": [31, 35], "is_typ": [31, 35], "is_method": [31, 35], "break_cyclic_recurs": [31, 35], "get_member_vari": [31, 35], "cast_object_to_pure_python": [31, 35], "cast_pulse_series_to_pure_python": [31, 35], "manipul": [32, 93, 94, 99], "obj": [32, 35, 125], "parent_kei": 32, "separ": [32, 96, 113, 136], "flatten": 32, "nest": 32, "d": [32, 96, 97, 100, 111, 134], "b": [32, 75, 79, 111], "2": [32, 43, 53, 78, 79, 86, 88, 90, 95, 98, 101, 104, 109, 111, 115, 123, 136], "a__b": 32, "applic": 32, "parent": 32, "__": [32, 35], "nester": 32, "json": [32, 123], "therefor": [32, 48], "we": [32, 35, 58, 101, 134, 136], "outer": 32, "abl": [32, 100, 136], "de": 32, "transpos": 32, "mont": 33, "carlo": 33, "simul": [33, 41, 51, 69], "icetrai": [33, 35, 43, 45, 48, 53, 65, 130], "pulseseri": 33, "calibr": [33, 35], "gcd_dict": [33, 35], "p": [33, 115], "om": [33, 35], "i3calibr": 33, "indicesfor": 33, "filter": [34, 43, 45, 48, 53, 131], "log_fold": [34, 47, 49, 50, 51, 60, 131], "skip": [34, 88], "null": [34, 57], "filter_nam": 34, "filter_ani": 34, "filtermask": 34, "true": [34, 57, 69, 86, 88, 90, 92, 97, 100, 102, 113, 115, 117, 123, 124, 126, 129], "kept": 34, "fals": [34, 69, 77, 78, 88, 92, 97, 102, 113, 115, 117, 123], "boost": 35, "enum": 35, "ensur": [35, 56, 115, 131, 134, 136], "isn": 35, "return_discard": 35, "mangl": 35, "take": [35, 79, 101, 104, 134], "mainli": 35, "cannot": [35, 104, 121, 126], "trivial": [35, 110], "For": [35, 100, 113], "doe": [35, 108, 110, 124], "try": 35, "equival": 35, "its": [35, 104], "regular": [35, 78], "otherwis": [35, 115], "itself": [35, 110], "deem": 35, "wai": [35, 58, 134, 136], "optic": [35, 101], "found": [35, 43, 45, 48, 53, 61, 101, 115], "ofintern": 36, "between": [37, 77, 93, 94, 95, 96, 99, 106, 110, 111, 113, 115, 123, 124], "param": [37, 39, 41], "h5hitextractor": [38, 39], "h5truthextractor": [38, 39], "h5": [39, 50], "column_nam": 39, "hitdata": 39, "truthdata": 39, "prometheustruthextractor": [40, 41], "prometheusfeatureextractor": [40, 41], "table_nam": [41, 57], "initial_st": 41, "photon": 41, "deprec": [42, 43, 52, 53, 128], "parquetdataconvert": [42, 43], "gcd_rescu": [43, 45, 48, 53, 129], "i3toparquetconvert": [43, 44, 45], "subfold": [43, 45, 48, 53], "search": [43, 45, 47, 48, 49, 50, 51, 53, 129], "convent": [43, 45, 48, 53], "folder": [43, 45, 48, 49, 50, 51, 53, 64], "accompani": [43, 45, 48, 53], "howev": [43, 45, 48, 53], "broken": [43, 45, 48, 53], "In": [43, 45, 47, 48, 53, 60, 123, 124, 136], "icetray_verbos": [43, 45, 48, 53], "verbos": [43, 45, 48, 53, 106, 113], "pframe": [43, 45, 48, 53], "i3tosqliteconvert": [44, 45, 53], "parquettosqliteconvert": [44, 45], "preconfigur": 45, "written": [45, 64], "parquetread": [46, 49], "liquidoread": [46, 50], "prometheusread": [46, 51], "addit": [47, 60, 75, 78, 106, 115, 117], "accepted_file_extens": 47, "accepted_extractor": 47, "accept": [47, 134], "compat": [47, 58, 110], "extracor_nam": 47, "produc": [47, 77, 114, 117], "find_fil": [47, 48, 49, 50, 51], "mai": [47, 58, 65, 100, 136], "overwritten": [47, 119, 121], "match": [47, 117, 129, 132], "set_extractor": 47, "validate_fil": 47, "input_fil": [47, 64], "reli": 48, "environ": [48, 136], "sqlitedataconvert": [52, 53, 136], "pairwise_shuffl": [54, 56], "database_exist": [54, 57], "query_databas": [54, 57], "get_primary_kei": [54, 57], "database_table_exist": [54, 57], "run_sql_cod": [54, 57], "save_to_sql": [54, 57], "attach_index": [54, 57], "create_t": [54, 57], "create_table_and_save_to_sql": [54, 57], "stringselectionresolv": [54, 58], "rng": 56, "relat": [56, 129], "i3_list": [56, 129], "gcd_list": [56, 129], "correpond": 56, "handi": 56, "becaus": 56, "even": 56, "files_list": 56, "gcd_shuffl": 56, "i3_shuffl": 56, "database_path": [57, 117], "execut": 57, "result": [57, 61, 79, 101, 113, 115, 116, 125, 136], "datafram": [57, 58, 60, 81, 106, 116, 117], "primari": [57, 62], "splitinicepuls": 57, "df": 57, "alreadi": [57, 136], "attach": 57, "default_typ": 57, "integer_primary_kei": 57, "NOT": [57, 115], "integ": [57, 86, 88, 89, 115], "Such": 57, "row": [57, 62, 101, 111], "appropri": [57, 110], "expect": [57, 58, 60, 69, 71, 97, 100], "doesn": 57, "indic": [58, 73, 79, 86, 96, 101, 104, 113, 119, 134], "use_cach": 58, "flexibl": 58, "below": [58, 100, 117, 134, 136], "show": [58, 113], "involv": 58, "cover": 58, "current": [58, 104, 113, 134, 136], "yml": [58, 119, 123, 124], "50000": [58, 123], "ab": [58, 115, 123], "12": [58, 92, 123], "14": [58, 123], "16": [58, 77, 86, 123], "13": [58, 136], "panda": [58, 117], "syntax": [58, 115], "fix": 58, "randomli": [58, 97, 98, 124], "dataformat": [59, 62], "sqlitewrit": [59, 62], "graphnetfilesavemethod": [60, 62], "deep": [60, 62, 78, 90, 92], "save_fil": 60, "reciev": 60, "file_extens": 60, "output_dir": [60, 61, 62], "smaller": 60, "expects_merged_datafram": 60, "write": [61, 69, 71, 136], "events_per_batch": 61, "constitut": 61, "subsampl": 61, "full": 61, "200000": 61, "merged_database_nam": 62, "max_table_s": 62, "db": [62, 116, 117], "maximum": [62, 79, 100, 101, 110, 119], "proceedur": 62, "partit": 62, "size": [62, 78, 79, 86, 88, 89, 90, 92, 111, 119], "approxim": 62, "you": [62, 64, 77, 123, 124, 134, 136], "mani": 62, "exceed": 62, "400": 62, "million": 62, "tend": 62, "notic": [62, 111, 115], "slower": 62, "put": 62, "primary_key_rescu": 62, "database_nam": 62, "my_databas": 62, "cleaning_modul": [63, 68], "inference_modul": [63, 68], "deploymentmodul": [63, 64, 65, 71], "n_worker": 64, "baseclass": 64, "thei": 64, "appear": 64, "Will": [64, 69, 71, 95], "independ": 64, "sequenc": [64, 77, 78, 101, 111, 116], "determin": [64, 86], "divid": 64, "model_config": [65, 69, 71, 118, 120, 121, 123, 126], "state_dict": [65, 69, 71, 102, 105, 128], "devic": 65, "prediction_column": [65, 71, 106, 116], "overwrit": [65, 113], "modelconfig": [65, 69, 71, 102, 120, 123, 124], "comput": [65, 78, 96, 106, 110, 111, 115, 121, 123, 124, 126], "i3pulsecleanermodul": [68, 69], "i3inferencemodul": [68, 69, 71], "pulsemap_extractor": [69, 71], "model_nam": [69, 71], "discard_empty_ev": 69, "clean": [69, 134, 136], "assum": [69, 77, 81, 97, 101, 110, 111], "been": [69, 115, 134], "pulsmap": [69, 71], "summar": [69, 71, 100, 101], "help": [69, 71, 119, 134], "entri": [69, 71, 88, 111, 119], "dynedg": [69, 71, 74, 85, 89, 90, 92], "associ": [69, 71, 97, 101, 109, 110, 115], "7": [69, 79], "consid": [69, 86, 136], "posit": [69, 77, 78, 79, 92, 101, 109, 121, 126], "signal": 69, "els": 69, "elimin": 69, "whose": 69, "empti": 69, "speed": [69, 96], "especi": 69, "sinc": [69, 115], "further": 69, "calcul": [69, 77, 95, 98, 100, 106, 111, 114, 115], "energy_reco": 71, "miss": 73, "embed": [74, 76, 86, 92, 104, 108, 110], "rnn_tito": [74, 85], "convnet": [74, 85], "dynedge_jinst": [74, 85], "dynedge_kaggle_tito": [74, 85], "icemix": [74, 85], "edg": [74, 78, 79, 88, 89, 90, 93, 96, 97, 98, 99, 100, 111], "node_rnn": [74, 86, 103], "unbatch_edge_index": [74, 75], "attributecoarsen": [74, 75], "domcoarsen": [74, 75], "customdomcoarsen": [74, 75], "domandtimewindowcoarsen": [74, 75], "standardaveragedmodel": [74, 105], "standardmodel": [74, 105, 106], "calculate_xyzt_homophili": [74, 111], "calculate_distance_matrix": [74, 111], "knn_graph_batch": [74, 111], "array_to_sequ": [74, 111], "oper": [75, 78, 85, 88], "cluster": [75, 78, 79, 86, 88, 90, 100, 101, 104], "local": [75, 82, 83, 84, 100, 119], "edge_index": [75, 78, 111], "accord": [75, 79, 95, 97, 98, 101], "vector": [75, 78, 79, 115], "longtensor": [75, 79, 111], "mathbf": [75, 79], "ldot": [75, 79], "reduce_opt": 75, "avg": 75, "avg_pool": 75, "avg_pool_x": 75, "max": [75, 78, 88, 90, 115, 119], "max_pool": [75, 79], "max_pool_x": [75, 79], "min": [75, 79, 88, 90], "min_pool": [75, 76, 79], "min_pool_x": [75, 76, 79], "sum": [75, 79, 88, 90, 106, 117], "sum_pool": [75, 76, 79], "sum_pool_x": [75, 76, 79], "forward": [75, 77, 78, 81, 86, 87, 88, 89, 90, 91, 92, 95, 97, 100, 104, 106, 110, 115], "simplecoarsen": 75, "window": 75, "time_window": 75, "sinusoidalposemb": [76, 77], "fourierencod": [76, 77], "spacetimeencod": [76, 77], "dynedgeconv": [76, 78, 88], "edgeconvtito": [76, 78], "dyntran": [76, 78, 86, 90], "droppath": [76, 78], "mlp": [76, 78, 88], "block_rel": [76, 78], "attention_rel": [76, 78], "sum_pool_and_distribut": [76, 79], "group_bi": [76, 79], "group_pulses_to_dom": [76, 79], "group_pulses_to_pmt": [76, 79], "std_pool_x": [76, 79], "std_pool": [76, 79], "dim": [77, 78], "n_freq": 77, "scale": [77, 78, 89, 92, 96, 97, 100, 101, 110, 115], "lightningmodul": [77, 78, 102, 113, 131], "sinusoid": [77, 92], "competit": [77, 78, 82, 90, 92], "2nd": [77, 92], "place": [77, 92, 128, 134], "solut": [77, 78, 90, 92, 134], "see": [77, 86, 95, 97, 113, 134, 136], "arxiv": [77, 95, 115], "2310": 77, "15674": 77, "fourier": 77, "encod": 77, "attent": [77, 78, 92], "1706": 77, "03762": 77, "seen": 77, "soft": 77, "digit": 77, "dimens": [77, 78, 82, 83, 84, 86, 87, 88, 90, 92, 101, 104, 110, 111, 115], "frequenc": 77, "seq_length": [77, 92, 111], "output_dim": 77, "n_featur": [77, 92], "incorpor": 77, "meaning": 77, "four": 77, "mandatori": 77, "128": [77, 87, 88, 90, 119], "dimension": [77, 78], "384": [77, 92], "6": [77, 79, 92], "spacetim": 77, "space": [77, 95, 96, 110, 117], "interv": 77, "32": [77, 92], "aggr": 78, "nb_neighbor": 78, "features_subset": [78, 86, 88, 90, 104], "edgeconv": 78, "convolut": [78, 87, 88, 89, 90], "aggreg": [78, 79], "8": [78, 79, 86, 88, 90, 98, 104, 115, 116, 134, 136], "neighbour": [78, 86, 88, 90, 95, 96, 98, 104, 111], "slice": [78, 88], "sparsetensor": 78, "messagepass": 78, "tito": [78, 86, 90], "reset_paramet": 78, "reset": 78, "learnabl": [78, 85, 86, 87, 88, 89, 90, 91, 92, 104, 110], "messag": [78, 113, 131], "x_i": 78, "x_j": 78, "layer_s": 78, "n_head": [78, 86, 90], "dyntrans1": 78, "head": [78, 86, 90, 92, 110], "multiheadattent": 78, "drop_prob": 78, "drop": [78, 87], "stochast": 78, "depth": [78, 92, 101], "probabl": [78, 115], "dure": [78, 92, 97, 110, 113], "extra_repr": [78, 102], "extra": [78, 136], "in_featur": 78, "hidden_featur": 78, "out_featur": 78, "activ": [78, 86, 88, 100, 104, 106, 110, 134, 136], "gelu": 78, "dropout_prob": 78, "multi": [78, 88], "perceptron": [78, 88], "hidden": [78, 86, 88, 89, 104], "dropout": [78, 86, 104], "input_dim": 78, "num_head": 78, "mlp_ratio": 78, "qkv_bia": 78, "qk_scale": 78, "attn_drop": 78, "drop_path": 78, "init_valu": 78, "norm_lay": 78, "normal": [78, 88, 101, 110], "layernorm": 78, "attn_head_dim": 78, "beitv2": 78, "4": [78, 89, 92, 109], "feedforward": 78, "bia": 78, "term": [78, 115], "matric": 78, "factor": [78, 101, 113], "dot": 78, "gamma_1": 78, "gamma_2": 78, "key_padding_mask": 78, "rel_pos_bia": 78, "kv": 78, "proj_drop": 78, "mechan": 78, "rel": [78, 92], "multipli": [78, 113], "head_dim": 78, "q": 78, "k": [78, 86, 88, 90, 95, 98, 104, 111, 115], "attn_mask": 78, "just": [79, 136], "negat": 79, "cluster_index": 79, "distribut": [79, 88, 109, 110, 115, 117], "ident": [79, 110], "pmt": [79, 101], "f1": 79, "f2": 79, "groupbi": 79, "3": [79, 86, 87, 90, 96, 101, 104, 109, 111, 115, 134, 136], "matrix": [79, 95, 96, 111, 115], "mathbb": 79, "r": [79, 95, 136], "n_1": 79, "n_b": 79, "f": 79, "obtain": [79, 115], "wise": 79, "dens": 79, "fc": 79, "known": 79, "std": 79, "repres": [79, 86, 97, 98, 100, 101, 111, 121, 123, 124], "averag": [79, 105, 115], "torch_geometr": [79, 111], "version": [79, 101, 110, 113, 134, 136], "standardis": 80, "icecubekaggl": [80, 82], "icecubedeepcor": [80, 82], "icecubeupgrad": [80, 82], "liquido_v1": [80, 83], "orca150": [80, 84], "ins": 81, "feature_map": [81, 82, 83, 84], "input_featur": [81, 97], "input_feature_nam": [81, 97, 98, 100], "adjac": 81, "geometry_t": [81, 82, 83, 84], "public": [81, 117], "retriev": 81, "geometri": [81, 97], "string_index_nam": 81, "sensor_position_nam": 81, "xyz": [81, 82, 83, 84, 100, 101], "sensor_index_nam": 81, "sensor": [81, 97], "geometry_table_path": [82, 83, 84], "home": [82, 83, 84, 119, 136], "runner": [82, 83, 84, 119], "lib": [82, 83, 84, 119, 136], "python3": [82, 83, 84, 119], "string_id_column": [82, 83, 84], "sensor_id_column": [82, 83, 84], "sensor_id": [82, 84], "icecube_upgrad": 82, "prototyp": [83, 84], "liquid": 83, "fiber_id": 83, "sipm_id": 83, "orca_150": 84, "sensor_string_id": 84, "dynedgejinst": [85, 89], "dynedgetito": [85, 86, 90], "deepic": [85, 92], "rnn_dynedg": 86, "intend": [86, 104, 136], "amount": 86, "nb_input": [86, 87, 88, 89, 90, 91, 104, 108, 109, 110], "time_series_column": [86, 104], "treat": [86, 104], "nb_neighbour": [86, 88, 90, 104], "rnn_layer": 86, "rnn_hidden_s": 86, "64": [86, 136], "rnn_dropout": 86, "latent": [86, 88, 90, 92, 104, 108, 109, 110], "metric": [86, 88, 90, 96, 104, 113], "nearest": [86, 88, 90, 95, 96, 98, 104, 111], "dyntrans_layer_s": [86, 90], "post_processing_layer_s": [86, 88, 90], "post": [86, 88, 90], "readout_layer_s": [86, 88, 90], "readout": [86, 88, 90], "global_pooling_schem": [86, 88, 90], "scheme": [86, 88, 90], "embedding_dim": [86, 104], "ie": 86, "use_global_featur": [86, 90], "use_post_processing_lay": [86, 90], "author": [87, 89, 115], "martin": 87, "minh": 87, "nb_output": [87, 89, 91, 100, 108, 109, 110], "nb_intermedi": 87, "dropout_ratio": 87, "fraction": [87, 104, 116], "dynedge_layer_s": 88, "dimenion": [88, 90], "256": [88, 90], "336": [88, 90], "follow": [88, 106, 115, 117, 134, 136], "_and_": 88, "As": 88, "last": [88, 104, 108, 109, 110, 113, 116], "add_global_variables_after_pool": 88, "altern": [88, 115, 134], "activation_lay": 88, "add_norm_lay": 88, "linear": 88, "skip_readout": 88, "exact": [89, 115], "2209": 89, "03042": 89, "oerso": 89, "layer_size_scal": 89, "ic": [90, 92, 100], "univers": [90, 92], "south": [90, 92], "pole": [90, 92], "core": 91, "drhb": 92, "http": [92, 95, 97, 115, 134], "github": [92, 97, 115, 136], "com": [92, 97, 115, 136], "hidden_dim": 92, "192": 92, "head_siz": 92, "depth_rel": 92, "n_rel": 92, "scaled_emb": 92, "include_dynedg": 92, "dynedge_arg": 92, "impact": 92, "no_weight_decai": 92, "cls_tocken": 92, "subject": [92, 115], "decai": 92, "edgedefinit": [93, 94, 95, 96, 97, 99], "how": [93, 94, 99], "drawn": [93, 94, 98, 99], "minkowski": [93, 94], "knngraph": [93, 98], "lex_sort": [93, 101], "gather_cluster_sequ": [93, 101], "identify_indic": [93, 101], "cluster_summarize_with_percentil": [93, 101], "ice_transpar": [93, 101], "knnedg": [94, 95], "radialedg": [94, 95], "euclideanedg": [94, 95], "compute_minkowski_distance_mat": [94, 96], "minkowskiknnedg": [94, 96], "_construct_edg": 95, "definit": [95, 97, 98, 100, 102, 110, 134], "nb_nearest_neighbour": [95, 96, 98], "distanc": [95, 96, 98, 111], "sphere": 95, "chosen": [95, 101, 131], "radiu": 95, "centr": 95, "radial": 95, "center": 95, "euclidean": [95, 134], "org": [95, 115, 136], "pdf": 95, "1809": 95, "06166": 95, "space_coord": 96, "time_coord": 96, "pairwis": [96, 111], "second": 96, "m": [96, 101, 115], "light": [96, 136], "time_like_weight": 96, "prefer": [96, 136], "over": [96, 100], "time_lik": 96, "hold": 97, "alter": 97, "node_definit": [97, 98], "edge_definit": 97, "nodedefinit": [97, 98, 99, 100], "nodesaspuls": [97, 99, 100], "perturbation_dict": [97, 98], "deviat": [97, 98, 101], "perturb": [97, 98], "add_inactive_sensor": 97, "inact": 97, "append": 97, "pad": [97, 101, 111], "sensor_mask": 97, "mask": [97, 111], "string_mask": 97, "sort_bi": 97, "sort": [97, 101], "truth_dict": 97, "custom_label_funct": 97, "loss_weight": [97, 110], "data_path": 97, "num_row": 97, "team": [97, 134], "blob": [97, 115], "getting_start": 97, "md": 97, "your": [98, 134, 136], "percentileclust": [99, 100], "nodeasdomtimeseri": [99, 100], "icemixnod": [99, 100], "num_puls": 100, "node_feature_nam": 100, "new_features_nam": 100, "overridden": 100, "set_number_of_input": 100, "set_output_feature_nam": 100, "measur": [100, 101, 111], "cherenkov": [100, 101], "radiat": [100, 101], "percentil": [100, 101], "summari": [100, 101], "cluster_on": [100, 101], "50": [100, 101, 119], "90": [100, 101], "add_count": [100, 101], "duplic": 100, "id_column": 100, "time_column": 100, "charge_column": 100, "max_activ": 100, "n_puls": 100, "limit": [100, 115], "minimum": [100, 110], "hlc": 100, "max_puls": 100, "768": 100, "z_name": 100, "hlc_name": 100, "coincid": 100, "add_ice_properti": 100, "scatter": [100, 101], "absopt": 100, "ice_arg": 100, "z_offset": [100, 101], "z_scale": [100, 101], "offset": [100, 101], "cluster_column": 101, "numpi": 101, "along": 101, "backward": [101, 115], "feature_idx": 101, "turn": [101, 134], "gather": 101, "nan": 101, "n_cluster": 101, "l": [101, 111], "largest": 101, "suppos": 101, "n_pmt": 101, "three": [101, 115], "spatial": 101, "column_offset": 101, "feature_nam": 101, "summarization_indic": 101, "cluster_indic": 101, "interpol": [101, 113], "500": 101, "inaccur": 101, "f_absorpt": 101, "absorpt": 101, "f_scatter": 101, "verbose_print": 102, "save_state_dict": 102, "load_state_dict": [102, 105], "karg": [102, 105], "trust": 102, "enough": 102, "eval": [102, 136], "lambda": 102, "express": [102, 115], "consequ": 102, "set_verbose_print_recurs": 102, "descript": [102, 119], "print": [102, 113, 131], "about": [102, 121, 123, 124, 126], "extra_repr_recurs": 102, "indent": 102, "recurr": 103, "nodetimernn": 104, "standalon": 104, "pr": 104, "seper": 104, "hidden_s": [104, 108, 109, 110], "num_lay": 104, "clean_up_data_object": 104, "updat": [104, 105, 111, 113], "swa": 105, "ema": 105, "standardaveragemodel": 105, "training_step": [105, 106], "train_batch": [105, 106], "batch_idx": [105, 106, 111], "step": [105, 106, 111, 113], "validation_step": [105, 106], "val_batch": [105, 106], "optimizer_step": 105, "epoch": [105, 113, 119], "optim": [105, 106, 113], "optimizer_closur": 105, "on_train_end": 105, "ones": [105, 136], "backbon": 106, "max_epoch": 106, "early_stopping_pati": [106, 126], "gpu": [106, 119, 136], "ckpt_path": 106, "log_every_n_step": 106, "gradient_clip_v": 106, "distribution_strategi": 106, "trainer_kwarg": 106, "pytorch_lightn": [106, 113, 131], "trainer": [106, 113, 116], "target_label": [106, 110], "target": [106, 108, 110, 115, 126], "prediction_label": [106, 110], "configure_optim": 106, "shared_step": 106, "share": 106, "compute_loss": [106, 110], "pred": [106, 110], "mode": [106, 110], "deactiv": [106, 110], "predict_as_datafram": 106, "additional_attribut": [106, 116], "multiclassclassificationtask": [107, 108], "binaryclassificationtask": [107, 108], "binaryclassificationtasklogit": [107, 108], "azimuthreconstructionwithkappa": [107, 109], "azimuthreconstruct": [107, 109], "directionreconstructionwithkappa": [107, 109], "zenithreconstruct": [107, 109], "zenithreconstructionwithkappa": [107, 109], "energyreconstruct": [107, 109], "energyreconstructionwithpow": [107, 109], "energytcreconstruct": [107, 109], "energyreconstructionwithuncertainti": [107, 109], "vertexreconstruct": [107, 109], "positionreconstruct": [107, 109], "timereconstruct": [107, 109], "inelasticityreconstruct": [107, 109], "learnedtask": [107, 110], "standardlearnedtask": [107, 108, 109, 110], "identitytask": [107, 108, 110], "standardflowtask": [107, 110], "classifi": 108, "untransform": 108, "interpret": 108, "logit": [108, 115], "binari": [108, 115], "default_target_label": [108, 109, 110], "default_prediction_label": [108, 109, 110], "target_pr": 108, "angl": [109, 114], "kappa": [109, 115], "var": 109, "azimuth_pr": 109, "azimuth_kappa": 109, "3d": [109, 115], "vmf": 109, "dir_x_pr": 109, "dir_y_pr": 109, "dir_z_pr": 109, "direction_kappa": 109, "zenith_pr": 109, "zenith_kappa": 109, "stabl": [109, 110], "energy_pr": 109, "cascad": 109, "energy_track_pr": 109, "energy_cascade_pr": 109, "uncertainti": 109, "energy_sigma": 109, "vertex": 109, "position_x_pr": 109, "position_y_pr": 109, "position_z_pr": 109, "interaction_time_pr": 109, "interact": 109, "hadron": 109, "inelasticity_pr": 109, "lossfunct": [110, 112, 115], "auto": 110, "matic": 110, "_pred": 110, "transform_prediction_and_target": 110, "numer": 110, "transform_target": 110, "log10": [110, 117], "rather": [110, 131], "transform_infer": 110, "invers": 110, "recov": 110, "transform_support": 110, "restrict": [110, 115], "invert": 110, "1e6": 110, "train_ev": 110, "act": [110, 115], "wrt": 110, "meet": 110, "come": [110, 134], "vast": 110, "major": 110, "supervis": 110, "grab": 110, "send": 110, "evalu": 110, "normalizingflow": 110, "jacobian": 110, "flow": 110, "xyzt": 111, "homophili": 111, "xyz_coord": 111, "nb_dom": 111, "excluding_valu": 111, "total": [111, 116, 117], "belong": 111, "inf": 111, "masked_entri": 111, "piecewiselinearlr": [112, 113], "progressbar": [112, 113], "graphnetearlystop": [112, 113], "mseloss": [112, 115], "rmseloss": [112, 115], "logcoshloss": [112, 115], "crossentropyloss": [112, 115], "binarycrossentropyloss": [112, 115], "logcmk": [112, 115], "vonmisesfisherloss": [112, 115], "vonmisesfisher2dloss": [112, 115], "euclideandistanceloss": [112, 115], "vonmisesfisher3dloss": [112, 115], "collator_sequence_bucklet": [112, 116], "make_dataload": [112, 116], "make_train_validation_dataload": [112, 116], "get_predict": [112, 116], "save_result": [112, 116], "save_select": [112, 116], "weightfitt": [112, 117], "uniform": [112, 117], "bjoernlow": [112, 117], "mileston": 113, "last_epoch": 113, "_lrschedul": 113, "linearli": 113, "closest": 113, "vice": 113, "versa": 113, "wrap": [113, 123, 124], "stdout": 113, "get_lr": 113, "effect": [113, 134], "refresh_r": 113, "process_posit": 113, "tqdmprogressbar": 113, "progress": 113, "bar": 113, "customis": 113, "init_validation_tqdm": 113, "init_predict_tqdm": 113, "init_test_tqdm": 113, "init_train_tqdm": 113, "get_metr": 113, "on_train_epoch_start": 113, "previou": 113, "line": [113, 119], "behaviour": 113, "on_train_epoch_end": 113, "don": [113, 136], "duplciat": 113, "save_dir": 113, "earlystop": 113, "earli": [113, 119], "keyword": [113, 121, 126], "graphnet_model": 113, "on_validation_end": 113, "on_fit_end": 113, "runtim": [114, 136], "field": [114, 121, 123, 124, 126, 128], "azimuth_kei": 114, "zenith_kei": 114, "access": [114, 136], "azimiuth": 114, "return_el": 115, "elementwis": 115, "squar": 115, "error": [115, 131, 134], "root": [115, 136], "cosh": 115, "small": 115, "cross": 115, "entropi": 115, "num_class": 115, "softmax": 115, "ed": 115, "mit": 115, "licens": 115, "copyright": 115, "2019": 115, "ryabinin": 115, "permiss": 115, "herebi": 115, "person": 115, "copi": 115, "document": 115, "deal": 115, "right": 115, "modifi": 115, "publish": 115, "sublicens": 115, "sell": 115, "permit": 115, "whom": 115, "furnish": 115, "so": [115, 136], "condit": 115, "abov": [115, 117, 136], "shall": 115, "substanti": 115, "portion": 115, "THE": 115, "AS": 115, "warranti": 115, "OF": 115, "kind": 115, "OR": 115, "impli": 115, "BUT": 115, "TO": 115, "merchant": 115, "FOR": 115, "particular": [115, 134], "AND": 115, "noninfring": 115, "IN": 115, "NO": 115, "holder": 115, "BE": 115, "liabl": 115, "claim": 115, "damag": 115, "liabil": 115, "action": 115, "contract": 115, "tort": 115, "aris": 115, "WITH": 115, "_____________________": 115, "mryab": 115, "vmf_loss": 115, "master": 115, "py": [115, 136], "bessel": 115, "exponenti": 115, "ditto": 115, "iv": 115, "1812": 115, "04616": 115, "spite": 115, "suggest": 115, "sec": 115, "paper": 115, "chang": [115, 134], "correct": 115, "static": [115, 134], "ctx": 115, "grad_output": 115, "von": 115, "mise": 115, "fisher": 115, "log_cmk_exact": 115, "c_": 115, "exactli": [115, 131], "log_cmk_approx": 115, "approx": 115, "minu": 115, "sign": 115, "log_cmk": 115, "kappa_switch": 115, "diverg": 115, "700": 115, "float64": 115, "precis": 115, "unaccur": 115, "switch": 115, "2d": 115, "batch_split": 116, "bucket": 116, "cut": 116, "mini": 116, "explicitli": [116, 121, 126], "alwai": 116, "respect": 116, "database_indic": 116, "test_siz": 116, "node_level": 116, "tag": [116, 134, 136], "archiv": 116, "file_path": 116, "csv": [116, 123], "fit_weight": 117, "uniformweightfitt": 117, "bin": 117, "weight_nam": 117, "add_to_databas": 117, "db_count_norm": 117, "privat": 117, "_fit_weight": 117, "sql": 117, "desir": [117, 129], "np": 117, "happen": 117, "x_low": 117, "wherea": 117, "curv": 117, "base_config": [118, 120], "dataset_config": [118, 120], "training_config": [118, 120], "argumentpars": [118, 119], "rename_state_dict_entri": [118, 128], "is_gcd_fil": [118, 129], "is_i3_fil": [118, 129], "has_extens": [118, 129], "find_i3_fil": [118, 129], "has_icecube_packag": [118, 130], "has_torch_packag": [118, 130], "requires_icecub": [118, 130], "repeatfilt": [118, 131], "eps_lik": [118, 132], "consist": [119, 131, 134], "cli": 119, "pop_default": 119, "usag": 119, "command": [119, 136], "standard_argu": 119, "training_example_data_sqlit": 119, "patienc": 119, "narg": 119, "example_energy_reconstruction_model": 119, "num": 119, "fetch": 119, "with_standard_argu": 119, "baseconfig": [120, 121, 122, 123, 124, 126], "get_all_argument_valu": [120, 121], "save_dataset_config": [120, 123], "datasetconfigsavermeta": [120, 123], "datasetconfigsaverabcmeta": [120, 123], "save_model_config": [120, 124], "modelconfigsavermeta": [120, 124], "modelconfigsaverabc": [120, 124], "traverse_and_appli": [120, 125], "list_all_submodul": [120, 125], "get_all_grapnet_class": [120, 125], "is_graphnet_modul": [120, 125], "is_graphnet_class": [120, 125], "get_graphnet_class": [120, 125], "trainingconfig": [120, 126], "basemodel": [121, 123, 124], "validationerror": [121, 126], "pydantic_cor": [121, 126], "dump": [121, 123, 124], "yaml": [121, 122], "as_dict": [121, 123, 124], "model_computed_field": [121, 123, 124, 126], "classvar": [121, 123, 124, 126], "computedfieldinfo": [121, 123, 124, 126], "configdict": [121, 123, 124, 126], "conform": [121, 123, 124, 126], "pydant": [121, 123, 124, 126], "model_field": [121, 123, 124, 126], "fieldinfo": [121, 123, 124, 126], "metadata": [121, 123, 124, 126], "replac": [121, 123, 124, 126, 128], "__fields__": [121, 123, 124, 126], "v1": [121, 123, 124, 126, 136], "re": [122, 136], "save_config": 122, "dataconfig": 123, "transpar": [123, 124, 134], "reproduc": [123, 124], "session": [123, 124], "anoth": [123, 124], "still": 123, "train_select": 123, "unambigu": [123, 124], "annot": [123, 124, 126], "nonetyp": 123, "init_fn": [123, 124], "__init__": [123, 124, 136], "metaclass": [123, 124], "abcmeta": [123, 124], "datasetconfigsav": 123, "trainabl": 124, "hyperparamet": 124, "initialis": 124, "thu": 124, "modelconfigsav": 124, "fn_kwarg": 125, "structur": 125, "moduletyp": 125, "grapnet": 125, "lookup": 125, "transit": 128, "old_phras": 128, "new_phras": 128, "deepcopi": 128, "who": 128, "renam": 128, "phrase": 128, "system": [129, 136], "filenam": 129, "dir": 129, "test_funct": 130, "repeat": 131, "nb_repeats_allow": 131, "record": 131, "logrecord": 131, "clear": 131, "intuit": 131, "composit": 131, "loggeradapt": 131, "avoid": [131, 134], "clash": 131, "setlevel": 131, "deleg": 131, "critic": 131, "msg": 131, "warn": 131, "info": [131, 136], "debug": 131, "warning_onc": 131, "onc": 131, "handler": 131, "file_handl": 131, "filehandl": 131, "stream_handl": 131, "streamhandl": 131, "assort": 132, "ep": 132, "api": 133, "To": [134, 136], "sure": [134, 136], "smooth": 134, "guidelin": 134, "guid": 134, "encourag": 134, "contributor": 134, "discuss": 134, "bug": 134, "anyth": 134, "describ": 134, "would": 134, "yourself": 134, "ownership": 134, "prioriti": 134, "situat": 134, "lot": 134, "effort": 134, "go": 134, "outsid": 134, "scope": 134, "better": 134, "fork": 134, "repo": 134, "dedic": 134, "branch": [134, 136], "repositori": 134, "own": [134, 136], "autom": 134, "review": 134, "pep8": 134, "docstr": 134, "googl": 134, "style": 134, "hint": 134, "adher": 134, "pep": 134, "pylint": 134, "flake8": 134, "black": 134, "well": 134, "recommend": [134, 136], "mypi": 134, "pydocstyl": 134, "docformatt": 134, "commit": 134, "hook": 134, "instal": 134, "pip": [134, 136], "Then": 134, "everytim": 134, "pep257": 134, "concept": 134, "ljvmiranda921": 134, "io": 134, "notebook": 134, "2018": 134, "06": 134, "21": 134, "precommit": 134, "virtual": 136, "anaconda": 136, "prove": 136, "instruct": 136, "want": 136, "part": 136, "achiev": 136, "bash": 136, "shell": 136, "cvmf": 136, "opensciencegrid": 136, "py3": 136, "v4": 136, "sh": 136, "rhel_7_x86_64": 136, "metaproject": 136, "env": 136, "alia": 136, "script": 136, "everi": 136, "With": 136, "now": 136, "geometr": 136, "won": 136, "later": 136, "torch_cpu": 136, "txt": 136, "torch_gpu": 136, "unix": 136, "git": 136, "clone": 136, "usernam": 136, "cd": 136, "conda": 136, "gcc_linux": 136, "gxx_linux": 136, "libgcc": 136, "cudatoolkit": 136, "11": 136, "forg": 136, "box": 136, "compil": 136, "gcc": 136, "date": 136, "possibli": 136, "cuda": 136, "toolkit": 136, "recent": 136, "omit": 136, "newer": 136, "export": 136, "ld_library_path": 136, "anaconda3": 136, "miniconda3": 136, "bashrc": 136, "librari": 136, "rm": 136, "asogaard": 136, "latest": 136, "dc423315742c": 136, "01_icetrai": 136, "01_convert_i3_fil": 136, "2023": 136, "01": 136, "24": 136, "41": 136, "27": 136, "graphnet_20230124": 136, "134127": 136, "46": 136, "convert_i3_fil": 136, "ic86": 136, "thread": 136, "100": 136, "00": 136, "79": 136, "26": 136, "413": 136, "88it": 136, "specialis": 136, "push": 136, "vx": 136}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [63, 0, 0, "-", "deployment"], [72, 0, 0, "-", "exceptions"], [74, 0, 0, "-", "models"], [112, 0, 0, "-", "training"], [118, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "dataclasses"], [6, 0, 0, "-", "dataconverter"], [7, 0, 0, "-", "dataloader"], [8, 0, 0, "-", "datamodule"], [9, 0, 0, "-", "dataset"], [15, 0, 0, "-", "extractors"], [42, 0, 0, "-", "parquet"], [44, 0, 0, "-", "pre_configured"], [46, 0, 0, "-", "readers"], [52, 0, 0, "-", "sqlite"], [54, 0, 0, "-", "utilities"], [59, 0, 0, "-", "writers"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.dataclasses": [[5, 1, 1, "", "I3FileSet"], [5, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_files"], [5, 2, 1, "", "modules"], [5, 2, 1, "", "output_folder"]], "graphnet.data.dataconverter": [[6, 1, 1, "", "DataConverter"], [6, 4, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[6, 3, 1, "", "get_map_function"], [6, 3, 1, "", "merge_files"]], "graphnet.data.dataloader": [[7, 1, 1, "", "DataLoader"], [7, 4, 1, "", "collate_fn"], [7, 4, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[7, 3, 1, "", "from_dataset_config"]], "graphnet.data.datamodule": [[8, 1, 1, "", "GraphNeTDataModule"]], "graphnet.data.datamodule.GraphNeTDataModule": [[8, 3, 1, "", "prepare_data"], [8, 3, 1, "", "setup"], [8, 3, 1, "", "teardown"], [8, 5, 1, "", "test_dataloader"], [8, 5, 1, "", "train_dataloader"], [8, 5, 1, "", "val_dataloader"]], "graphnet.data.dataset": [[10, 0, 0, "-", "dataset"], [11, 0, 0, "-", "parquet"], [13, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[10, 1, 1, "", "Dataset"], [10, 1, 1, "", "EnsembleDataset"], [10, 4, 1, "", "load_module"], [10, 4, 1, "", "parse_graph_definition"], [10, 4, 1, "", "parse_labels"]], "graphnet.data.dataset.dataset.Dataset": [[10, 3, 1, "", "add_label"], [10, 3, 1, "", "concatenate"], [10, 3, 1, "", "from_config"], [10, 5, 1, "", "path"], [10, 3, 1, "", "query_table"], [10, 5, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[12, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[12, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[12, 3, 1, "", "query_table"]], "graphnet.data.dataset.sqlite": [[14, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[14, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[14, 3, 1, "", "query_table"]], "graphnet.data.extractors": [[16, 0, 0, "-", "combine_extractors"], [17, 0, 0, "-", "extractor"], [18, 0, 0, "-", "icecube"], [36, 0, 0, "-", "internal"], [38, 0, 0, "-", "liquido"], [40, 0, 0, "-", "prometheus"]], "graphnet.data.extractors.combine_extractors": [[16, 1, 1, "", "CombinedExtractor"]], "graphnet.data.extractors.extractor": [[17, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[17, 5, 1, "", "name"]], "graphnet.data.extractors.icecube": [[19, 0, 0, "-", "i3extractor"], [20, 0, 0, "-", "i3featureextractor"], [21, 0, 0, "-", "i3genericextractor"], [22, 0, 0, "-", "i3hybridrecoextractor"], [23, 0, 0, "-", "i3ntmuonlabelsextractor"], [24, 0, 0, "-", "i3particleextractor"], [25, 0, 0, "-", "i3pisaextractor"], [26, 0, 0, "-", "i3quesoextractor"], [27, 0, 0, "-", "i3retroextractor"], [28, 0, 0, "-", "i3splinempeextractor"], [29, 0, 0, "-", "i3truthextractor"], [30, 0, 0, "-", "i3tumextractor"], [31, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[19, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[19, 3, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[20, 1, 1, "", "I3FeatureExtractor"], [20, 1, 1, "", "I3FeatureExtractorIceCube86"], [20, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [20, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [20, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[21, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[22, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[23, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[24, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[25, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[26, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[27, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[28, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[29, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[30, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[32, 0, 0, "-", "collections"], [33, 0, 0, "-", "frames"], [34, 0, 0, "-", "i3_filters"], [35, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[32, 4, 1, "", "flatten_nested_dictionary"], [32, 4, 1, "", "serialise"], [32, 4, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[33, 4, 1, "", "frame_is_montecarlo"], [33, 4, 1, "", "frame_is_noise"], [33, 4, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[34, 1, 1, "", "I3Filter"], [34, 1, 1, "", "I3FilterMask"], [34, 1, 1, "", "NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[35, 4, 1, "", "break_cyclic_recursion"], [35, 4, 1, "", "cast_object_to_pure_python"], [35, 4, 1, "", "cast_pulse_series_to_pure_python"], [35, 4, 1, "", "get_member_variables"], [35, 4, 1, "", "is_boost_class"], [35, 4, 1, "", "is_boost_enum"], [35, 4, 1, "", "is_icecube_class"], [35, 4, 1, "", "is_method"], [35, 4, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[37, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[37, 1, 1, "", "ParquetExtractor"]], "graphnet.data.extractors.liquido": [[39, 0, 0, "-", "h5_extractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[39, 1, 1, "", "H5Extractor"], [39, 1, 1, "", "H5HitExtractor"], [39, 1, 1, "", "H5TruthExtractor"]], "graphnet.data.extractors.prometheus": [[41, 0, 0, "-", "prometheus_extractor"]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[41, 1, 1, "", "PrometheusExtractor"], [41, 1, 1, "", "PrometheusFeatureExtractor"], [41, 1, 1, "", "PrometheusTruthExtractor"]], "graphnet.data.parquet": [[43, 0, 0, "-", "deprecated_methods"]], "graphnet.data.parquet.deprecated_methods": [[43, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.pre_configured": [[45, 0, 0, "-", "dataconverters"]], "graphnet.data.pre_configured.dataconverters": [[45, 1, 1, "", "I3ToParquetConverter"], [45, 1, 1, "", "I3ToSQLiteConverter"], [45, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.readers": [[47, 0, 0, "-", "graphnet_file_reader"], [48, 0, 0, "-", "i3reader"], [49, 0, 0, "-", "internal_parquet_reader"], [50, 0, 0, "-", "liquido_reader"], [51, 0, 0, "-", "prometheus_reader"]], "graphnet.data.readers.graphnet_file_reader": [[47, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[47, 5, 1, "", "accepted_extractors"], [47, 5, 1, "", "accepted_file_extensions"], [47, 5, 1, "", "extracor_names"], [47, 3, 1, "", "find_files"], [47, 3, 1, "", "set_extractors"], [47, 3, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[48, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[48, 3, 1, "", "find_files"]], "graphnet.data.readers.internal_parquet_reader": [[49, 1, 1, "", "ParquetReader"]], "graphnet.data.readers.internal_parquet_reader.ParquetReader": [[49, 3, 1, "", "find_files"]], "graphnet.data.readers.liquido_reader": [[50, 1, 1, "", "LiquidOReader"]], "graphnet.data.readers.liquido_reader.LiquidOReader": [[50, 3, 1, "", "find_files"]], "graphnet.data.readers.prometheus_reader": [[51, 1, 1, "", "PrometheusReader"]], "graphnet.data.readers.prometheus_reader.PrometheusReader": [[51, 3, 1, "", "find_files"]], "graphnet.data.sqlite": [[53, 0, 0, "-", "deprecated_methods"]], "graphnet.data.sqlite.deprecated_methods": [[53, 1, 1, "", "SQLiteDataConverter"]], "graphnet.data.utilities": [[55, 0, 0, "-", "parquet_to_sqlite"], [56, 0, 0, "-", "random"], [57, 0, 0, "-", "sqlite_utilities"], [58, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.random": [[56, 4, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[57, 4, 1, "", "attach_index"], [57, 4, 1, "", "create_table"], [57, 4, 1, "", "create_table_and_save_to_sql"], [57, 4, 1, "", "database_exists"], [57, 4, 1, "", "database_table_exists"], [57, 4, 1, "", "get_primary_keys"], [57, 4, 1, "", "query_database"], [57, 4, 1, "", "run_sql_code"], [57, 4, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[58, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[58, 3, 1, "", "resolve"]], "graphnet.data.writers": [[60, 0, 0, "-", "graphnet_writer"], [61, 0, 0, "-", "parquet_writer"], [62, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[60, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[60, 5, 1, "", "expects_merged_dataframes"], [60, 5, 1, "", "file_extension"], [60, 3, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[61, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[61, 3, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[62, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[62, 3, 1, "", "merge_files"]], "graphnet.deployment": [[64, 0, 0, "-", "deployer"], [65, 0, 0, "-", "deployment_module"]], "graphnet.deployment.deployer": [[64, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[64, 3, 1, "", "run"]], "graphnet.deployment.deployment_module": [[65, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.icecube": [[69, 0, 0, "-", "cleaning_module"], [71, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[69, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.inference_module": [[71, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[73, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[73, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[75, 0, 0, "-", "coarsening"], [76, 0, 0, "-", "components"], [80, 0, 0, "-", "detector"], [85, 0, 0, "-", "gnn"], [93, 0, 0, "-", "graphs"], [102, 0, 0, "-", "model"], [103, 0, 0, "-", "rnn"], [105, 0, 0, "-", "standard_averaged_model"], [106, 0, 0, "-", "standard_model"], [107, 0, 0, "-", "task"], [111, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[75, 1, 1, "", "AttributeCoarsening"], [75, 1, 1, "", "Coarsening"], [75, 1, 1, "", "CustomDOMCoarsening"], [75, 1, 1, "", "DOMAndTimeWindowCoarsening"], [75, 1, 1, "", "DOMCoarsening"], [75, 4, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[75, 3, 1, "", "forward"], [75, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[77, 0, 0, "-", "embedding"], [78, 0, 0, "-", "layers"], [79, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[77, 1, 1, "", "FourierEncoder"], [77, 1, 1, "", "SinusoidalPosEmb"], [77, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[77, 3, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[77, 3, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[77, 3, 1, "", "forward"]], "graphnet.models.components.layers": [[78, 1, 1, "", "Attention_rel"], [78, 1, 1, "", "Block"], [78, 1, 1, "", "Block_rel"], [78, 1, 1, "", "DropPath"], [78, 1, 1, "", "DynEdgeConv"], [78, 1, 1, "", "DynTrans"], [78, 1, 1, "", "EdgeConvTito"], [78, 1, 1, "", "Mlp"]], "graphnet.models.components.layers.Attention_rel": [[78, 3, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[78, 3, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[78, 3, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[78, 3, 1, "", "extra_repr"], [78, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[78, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[78, 3, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[78, 3, 1, "", "forward"], [78, 3, 1, "", "message"], [78, 3, 1, "", "reset_parameters"]], "graphnet.models.components.layers.Mlp": [[78, 3, 1, "", "forward"]], "graphnet.models.components.pool": [[79, 4, 1, "", "group_by"], [79, 4, 1, "", "group_pulses_to_dom"], [79, 4, 1, "", "group_pulses_to_pmt"], [79, 4, 1, "", "min_pool"], [79, 4, 1, "", "min_pool_x"], [79, 4, 1, "", "std_pool"], [79, 4, 1, "", "std_pool_x"], [79, 4, 1, "", "sum_pool"], [79, 4, 1, "", "sum_pool_and_distribute"], [79, 4, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[81, 0, 0, "-", "detector"], [82, 0, 0, "-", "icecube"], [83, 0, 0, "-", "liquido"], [84, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[81, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[81, 3, 1, "", "feature_map"], [81, 3, 1, "", "forward"], [81, 5, 1, "", "geometry_table"], [81, 5, 1, "", "sensor_index_name"], [81, 5, 1, "", "sensor_position_names"], [81, 5, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[82, 1, 1, "", "IceCube86"], [82, 1, 1, "", "IceCubeDeepCore"], [82, 1, 1, "", "IceCubeKaggle"], [82, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[82, 3, 1, "", "feature_map"], [82, 2, 1, "", "geometry_table_path"], [82, 2, 1, "", "sensor_id_column"], [82, 2, 1, "", "string_id_column"], [82, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[82, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[82, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[82, 3, 1, "", "feature_map"], [82, 2, 1, "", "geometry_table_path"], [82, 2, 1, "", "sensor_id_column"], [82, 2, 1, "", "string_id_column"], [82, 2, 1, "", "xyz"]], "graphnet.models.detector.liquido": [[83, 1, 1, "", "LiquidO_v1"]], "graphnet.models.detector.liquido.LiquidO_v1": [[83, 3, 1, "", "feature_map"], [83, 2, 1, "", "geometry_table_path"], [83, 2, 1, "", "sensor_id_column"], [83, 2, 1, "", "string_id_column"], [83, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[84, 1, 1, "", "ORCA150"], [84, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.ORCA150": [[84, 3, 1, "", "feature_map"], [84, 2, 1, "", "geometry_table_path"], [84, 2, 1, "", "sensor_id_column"], [84, 2, 1, "", "string_id_column"], [84, 2, 1, "", "xyz"]], "graphnet.models.gnn": [[86, 0, 0, "-", "RNN_tito"], [87, 0, 0, "-", "convnet"], [88, 0, 0, "-", "dynedge"], [89, 0, 0, "-", "dynedge_jinst"], [90, 0, 0, "-", "dynedge_kaggle_tito"], [91, 0, 0, "-", "gnn"], [92, 0, 0, "-", "icemix"]], "graphnet.models.gnn.RNN_tito": [[86, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[86, 3, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[87, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[87, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[88, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[88, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[89, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[89, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[90, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[90, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[91, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[91, 3, 1, "", "forward"], [91, 5, 1, "", "nb_inputs"], [91, 5, 1, "", "nb_outputs"]], "graphnet.models.gnn.icemix": [[92, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[92, 3, 1, "", "forward"], [92, 3, 1, "", "no_weight_decay"]], "graphnet.models.graphs": [[94, 0, 0, "-", "edges"], [97, 0, 0, "-", "graph_definition"], [98, 0, 0, "-", "graphs"], [99, 0, 0, "-", "nodes"], [101, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[95, 0, 0, "-", "edges"], [96, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[95, 1, 1, "", "EdgeDefinition"], [95, 1, 1, "", "EuclideanEdges"], [95, 1, 1, "", "KNNEdges"], [95, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[95, 3, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[96, 1, 1, "", "MinkowskiKNNEdges"], [96, 4, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[97, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[97, 3, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[98, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[100, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[100, 1, 1, "", "IceMixNodes"], [100, 1, 1, "", "NodeAsDOMTimeSeries"], [100, 1, 1, "", "NodeDefinition"], [100, 1, 1, "", "NodesAsPulses"], [100, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[100, 3, 1, "", "forward"], [100, 5, 1, "", "nb_outputs"], [100, 3, 1, "", "set_number_of_inputs"], [100, 3, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[101, 4, 1, "", "cluster_summarize_with_percentiles"], [101, 4, 1, "", "gather_cluster_sequence"], [101, 4, 1, "", "ice_transparency"], [101, 4, 1, "", "identify_indices"], [101, 4, 1, "", "lex_sort"]], "graphnet.models.model": [[102, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[102, 3, 1, "", "extra_repr"], [102, 3, 1, "", "extra_repr_recursive"], [102, 3, 1, "", "from_config"], [102, 3, 1, "", "load"], [102, 3, 1, "", "load_state_dict"], [102, 3, 1, "", "save"], [102, 3, 1, "", "save_state_dict"], [102, 3, 1, "", "set_verbose_print_recursively"], [102, 2, 1, "", "verbose_print"]], "graphnet.models.rnn": [[104, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[104, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[104, 3, 1, "", "clean_up_data_object"], [104, 3, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[105, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[105, 3, 1, "", "load_state_dict"], [105, 3, 1, "", "on_train_end"], [105, 3, 1, "", "optimizer_step"], [105, 3, 1, "", "training_step"], [105, 3, 1, "", "validation_step"]], "graphnet.models.standard_model": [[106, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[106, 3, 1, "", "compute_loss"], [106, 3, 1, "", "configure_optimizers"], [106, 3, 1, "", "fit"], [106, 3, 1, "", "forward"], [106, 3, 1, "", "inference"], [106, 3, 1, "", "predict"], [106, 3, 1, "", "predict_as_dataframe"], [106, 5, 1, "", "prediction_labels"], [106, 3, 1, "", "shared_step"], [106, 5, 1, "", "target_labels"], [106, 3, 1, "", "train"], [106, 3, 1, "", "training_step"], [106, 3, 1, "", "validation_step"]], "graphnet.models.task": [[108, 0, 0, "-", "classification"], [109, 0, 0, "-", "reconstruction"], [110, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[108, 1, 1, "", "BinaryClassificationTask"], [108, 1, 1, "", "BinaryClassificationTaskLogits"], [108, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[108, 2, 1, "", "default_prediction_labels"], [108, 2, 1, "", "default_target_labels"], [108, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[108, 2, 1, "", "default_prediction_labels"], [108, 2, 1, "", "default_target_labels"], [108, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[109, 1, 1, "", "AzimuthReconstruction"], [109, 1, 1, "", "AzimuthReconstructionWithKappa"], [109, 1, 1, "", "DirectionReconstructionWithKappa"], [109, 1, 1, "", "EnergyReconstruction"], [109, 1, 1, "", "EnergyReconstructionWithPower"], [109, 1, 1, "", "EnergyReconstructionWithUncertainty"], [109, 1, 1, "", "EnergyTCReconstruction"], [109, 1, 1, "", "InelasticityReconstruction"], [109, 1, 1, "", "PositionReconstruction"], [109, 1, 1, "", "TimeReconstruction"], [109, 1, 1, "", "VertexReconstruction"], [109, 1, 1, "", "ZenithReconstruction"], [109, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[109, 2, 1, "", "default_prediction_labels"], [109, 2, 1, "", "default_target_labels"], [109, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[109, 2, 1, "", "default_prediction_labels"], [109, 2, 1, "", "default_target_labels"], [109, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[109, 2, 1, "", "default_prediction_labels"], [109, 2, 1, "", "default_target_labels"], [109, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[109, 2, 1, "", "default_prediction_labels"], [109, 2, 1, "", "default_target_labels"], [109, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[109, 2, 1, "", "default_prediction_labels"], [109, 2, 1, "", "default_target_labels"], [109, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[109, 2, 1, "", "default_prediction_labels"], [109, 2, 1, "", "default_target_labels"], [109, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[109, 2, 1, "", "default_prediction_labels"], [109, 2, 1, "", "default_target_labels"], [109, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[109, 2, 1, "", "default_prediction_labels"], [109, 2, 1, "", "default_target_labels"], [109, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[109, 2, 1, "", "default_prediction_labels"], [109, 2, 1, "", "default_target_labels"], [109, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[109, 2, 1, "", "default_prediction_labels"], [109, 2, 1, "", "default_target_labels"], [109, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[109, 2, 1, "", "default_prediction_labels"], [109, 2, 1, "", "default_target_labels"], [109, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[109, 2, 1, "", "default_prediction_labels"], [109, 2, 1, "", "default_target_labels"], [109, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[109, 2, 1, "", "default_prediction_labels"], [109, 2, 1, "", "default_target_labels"], [109, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[110, 1, 1, "", "IdentityTask"], [110, 1, 1, "", "LearnedTask"], [110, 1, 1, "", "StandardFlowTask"], [110, 1, 1, "", "StandardLearnedTask"], [110, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[110, 5, 1, "", "default_prediction_labels"], [110, 5, 1, "", "default_target_labels"], [110, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[110, 3, 1, "", "compute_loss"], [110, 3, 1, "", "forward"], [110, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[110, 3, 1, "", "compute_loss"], [110, 3, 1, "", "forward"], [110, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[110, 3, 1, "", "compute_loss"], [110, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[110, 5, 1, "", "default_prediction_labels"], [110, 5, 1, "", "default_target_labels"], [110, 3, 1, "", "inference"], [110, 5, 1, "", "nb_inputs"], [110, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[111, 4, 1, "", "array_to_sequence"], [111, 4, 1, "", "calculate_distance_matrix"], [111, 4, 1, "", "calculate_xyzt_homophily"], [111, 4, 1, "", "knn_graph_batch"]], "graphnet.training": [[113, 0, 0, "-", "callbacks"], [114, 0, 0, "-", "labels"], [115, 0, 0, "-", "loss_functions"], [116, 0, 0, "-", "utils"], [117, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[113, 1, 1, "", "GraphnetEarlyStopping"], [113, 1, 1, "", "PiecewiseLinearLR"], [113, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[113, 3, 1, "", "on_fit_end"], [113, 3, 1, "", "on_train_epoch_end"], [113, 3, 1, "", "on_validation_end"], [113, 3, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[113, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[113, 3, 1, "", "get_metrics"], [113, 3, 1, "", "init_predict_tqdm"], [113, 3, 1, "", "init_test_tqdm"], [113, 3, 1, "", "init_train_tqdm"], [113, 3, 1, "", "init_validation_tqdm"], [113, 3, 1, "", "on_train_epoch_end"], [113, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[114, 1, 1, "", "Direction"], [114, 1, 1, "", "Label"]], "graphnet.training.labels.Label": [[114, 5, 1, "", "key"]], "graphnet.training.loss_functions": [[115, 1, 1, "", "BinaryCrossEntropyLoss"], [115, 1, 1, "", "CrossEntropyLoss"], [115, 1, 1, "", "EuclideanDistanceLoss"], [115, 1, 1, "", "LogCMK"], [115, 1, 1, "", "LogCoshLoss"], [115, 1, 1, "", "LossFunction"], [115, 1, 1, "", "MSELoss"], [115, 1, 1, "", "RMSELoss"], [115, 1, 1, "", "VonMisesFisher2DLoss"], [115, 1, 1, "", "VonMisesFisher3DLoss"], [115, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[115, 3, 1, "", "backward"], [115, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[115, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[115, 3, 1, "", "log_cmk"], [115, 3, 1, "", "log_cmk_approx"], [115, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[116, 4, 1, "", "collate_fn"], [116, 1, 1, "", "collator_sequence_buckleting"], [116, 4, 1, "", "get_predictions"], [116, 4, 1, "", "make_dataloader"], [116, 4, 1, "", "make_train_validation_dataloader"], [116, 4, 1, "", "save_results"], [116, 4, 1, "", "save_selection"]], "graphnet.training.weight_fitting": [[117, 1, 1, "", "BjoernLow"], [117, 1, 1, "", "Uniform"], [117, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[117, 3, 1, "", "fit"]], "graphnet.utilities": [[119, 0, 0, "-", "argparse"], [120, 0, 0, "-", "config"], [127, 0, 0, "-", "decorators"], [128, 0, 0, "-", "deprecation_tools"], [129, 0, 0, "-", "filesys"], [130, 0, 0, "-", "imports"], [131, 0, 0, "-", "logging"], [132, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[119, 1, 1, "", "ArgumentParser"], [119, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[119, 2, 1, "", "standard_arguments"], [119, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[119, 3, 1, "", "contains"], [119, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[121, 0, 0, "-", "base_config"], [122, 0, 0, "-", "configurable"], [123, 0, 0, "-", "dataset_config"], [124, 0, 0, "-", "model_config"], [125, 0, 0, "-", "parsing"], [126, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[121, 1, 1, "", "BaseConfig"], [121, 4, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[121, 3, 1, "", "as_dict"], [121, 3, 1, "", "dump"], [121, 3, 1, "", "load"], [121, 2, 1, "", "model_computed_fields"], [121, 2, 1, "", "model_config"], [121, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[122, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[122, 5, 1, "", "config"], [122, 3, 1, "", "from_config"], [122, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[123, 1, 1, "", "DatasetConfig"], [123, 1, 1, "", "DatasetConfigSaverABCMeta"], [123, 1, 1, "", "DatasetConfigSaverMeta"], [123, 4, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[123, 3, 1, "", "as_dict"], [123, 2, 1, "", "features"], [123, 2, 1, "", "graph_definition"], [123, 2, 1, "", "index_column"], [123, 2, 1, "", "labels"], [123, 2, 1, "", "loss_weight_column"], [123, 2, 1, "", "loss_weight_default_value"], [123, 2, 1, "", "loss_weight_table"], [123, 2, 1, "", "model_computed_fields"], [123, 2, 1, "", "model_config"], [123, 2, 1, "", "model_fields"], [123, 2, 1, "", "node_truth"], [123, 2, 1, "", "node_truth_table"], [123, 2, 1, "", "path"], [123, 2, 1, "", "pulsemaps"], [123, 2, 1, "", "seed"], [123, 2, 1, "", "selection"], [123, 2, 1, "", "string_selection"], [123, 2, 1, "", "truth"], [123, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[124, 1, 1, "", "ModelConfig"], [124, 1, 1, "", "ModelConfigSaverABC"], [124, 1, 1, "", "ModelConfigSaverMeta"], [124, 4, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[124, 2, 1, "", "arguments"], [124, 3, 1, "", "as_dict"], [124, 2, 1, "", "class_name"], [124, 2, 1, "", "model_computed_fields"], [124, 2, 1, "", "model_config"], [124, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[125, 4, 1, "", "get_all_grapnet_classes"], [125, 4, 1, "", "get_graphnet_classes"], [125, 4, 1, "", "is_graphnet_class"], [125, 4, 1, "", "is_graphnet_module"], [125, 4, 1, "", "list_all_submodules"], [125, 4, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[126, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[126, 2, 1, "", "dataloader"], [126, 2, 1, "", "early_stopping_patience"], [126, 2, 1, "", "fit"], [126, 2, 1, "", "model_computed_fields"], [126, 2, 1, "", "model_config"], [126, 2, 1, "", "model_fields"], [126, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[128, 4, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[129, 4, 1, "", "find_i3_files"], [129, 4, 1, "", "has_extension"], [129, 4, 1, "", "is_gcd_file"], [129, 4, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[130, 4, 1, "", "has_icecube_package"], [130, 4, 1, "", "has_torch_package"], [130, 4, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[131, 1, 1, "", "Logger"], [131, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[131, 3, 1, "", "critical"], [131, 3, 1, "", "debug"], [131, 3, 1, "", "error"], [131, 5, 1, "", "file_handlers"], [131, 5, 1, "", "handlers"], [131, 3, 1, "", "info"], [131, 3, 1, "", "setLevel"], [131, 5, 1, "", "stream_handlers"], [131, 3, 1, "", "warning"], [131, 3, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[131, 3, 1, "", "filter"], [131, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[132, 4, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 135], "impact": [0, 135], "usag": [0, 135], "acknowledg": [0, 135], "api": 1, "constant": [2, 4], "data": 3, "dataclass": 5, "dataconvert": [6, 45], "dataload": 7, "datamodul": 8, "dataset": [9, 10], "parquet": [11, 42], "parquet_dataset": 12, "sqlite": [13, 52], "sqlite_dataset": 14, "extractor": [15, 17], "combine_extractor": 16, "icecub": [18, 68, 82], "i3extractor": 19, "i3featureextractor": 20, "i3genericextractor": 21, "i3hybridrecoextractor": 22, "i3ntmuonlabelsextractor": 23, "i3particleextractor": 24, "i3pisaextractor": 25, "i3quesoextractor": 26, "i3retroextractor": 27, "i3splinempeextractor": 28, "i3truthextractor": 29, "i3tumextractor": 30, "util": [31, 54, 101, 111, 116, 118], "collect": 32, "frame": 33, "i3_filt": 34, "type": 35, "intern": 36, "parquet_extractor": 37, "liquido": [38, 83], "h5_extractor": 39, "prometheu": [40, 84], "prometheus_extractor": 41, "deprecated_method": [43, 53, 67], "pre_configur": 44, "reader": 46, "graphnet_file_read": 47, "i3read": 48, "internal_parquet_read": 49, "liquido_read": 50, "prometheus_read": 51, "parquet_to_sqlit": 55, "random": 56, "sqlite_util": 57, "string_selection_resolv": 58, "writer": 59, "graphnet_writ": 60, "parquet_writ": 61, "sqlite_writ": 62, "deploy": [63, 64], "deployment_modul": 65, "i3modul": 66, "cleaning_modul": 69, "i3deploy": 70, "inference_modul": 71, "except": [72, 73], "model": [74, 102], "coarsen": 75, "compon": 76, "embed": 77, "layer": 78, "pool": 79, "detector": [80, 81], "gnn": [85, 91], "rnn_tito": 86, "convnet": 87, "dynedg": 88, "dynedge_jinst": 89, "dynedge_kaggle_tito": 90, "icemix": 92, "graph": [93, 98], "edg": [94, 95], "minkowski": 96, "graph_definit": 97, "node": [99, 100], "rnn": 103, "node_rnn": 104, "standard_averaged_model": 105, "standard_model": 106, "task": [107, 110], "classif": 108, "reconstruct": 109, "train": 112, "callback": 113, "label": 114, "loss_funct": 115, "weight_fit": 117, "argpars": 119, "config": 120, "base_config": 121, "configur": 122, "dataset_config": 123, "model_config": 124, "pars": 125, "training_config": 126, "decor": 127, "deprecation_tool": 128, "filesi": 129, "import": 130, "log": 131, "math": 132, "src": 133, "contribut": 134, "github": 134, "issu": 134, "pull": 134, "request": 134, "convent": 134, "code": 134, "qualiti": 134, "instal": 136, "icetrai": 136, "stand": 136, "alon": 136, "run": 136, "docker": 136}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"], [135, "about"]], "Impact": [[0, "impact"], [135, "impact"]], "Usage": [[0, "usage"], [135, "usage"]], "Acknowledgements": [[0, "acknowledgements"], [135, "acknowledgements"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "dataclasses": [[5, "module-graphnet.data.dataclasses"]], "dataconverter": [[6, "module-graphnet.data.dataconverter"]], "dataloader": [[7, "module-graphnet.data.dataloader"]], "datamodule": [[8, "module-graphnet.data.datamodule"]], "dataset": [[9, "module-graphnet.data.dataset"], [10, "module-graphnet.data.dataset.dataset"]], "parquet": [[11, "module-graphnet.data.dataset.parquet"], [42, "module-graphnet.data.parquet"]], "parquet_dataset": [[12, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "sqlite": [[13, "module-graphnet.data.dataset.sqlite"], [52, "module-graphnet.data.sqlite"]], "sqlite_dataset": [[14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "extractors": [[15, "module-graphnet.data.extractors"]], "combine_extractors": [[16, "module-graphnet.data.extractors.combine_extractors"]], "extractor": [[17, "module-graphnet.data.extractors.extractor"]], "icecube": [[18, "module-graphnet.data.extractors.icecube"], [68, "icecube"], [82, "module-graphnet.models.detector.icecube"]], "i3extractor": [[19, "module-graphnet.data.extractors.icecube.i3extractor"]], "i3featureextractor": [[20, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor": [[21, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3hybridrecoextractor": [[22, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3ntmuonlabelsextractor": [[23, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor": [[24, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor": [[25, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor": [[26, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3retroextractor": [[27, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeextractor": [[28, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor": [[29, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor": [[30, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "utilities": [[31, "module-graphnet.data.extractors.icecube.utilities"], [54, "module-graphnet.data.utilities"], [118, "module-graphnet.utilities"]], "collections": [[32, "module-graphnet.data.extractors.icecube.utilities.collections"]], "frames": [[33, "module-graphnet.data.extractors.icecube.utilities.frames"]], "i3_filters": [[34, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "types": [[35, "module-graphnet.data.extractors.icecube.utilities.types"]], "internal": [[36, "module-graphnet.data.extractors.internal"]], "parquet_extractor": [[37, "module-graphnet.data.extractors.internal.parquet_extractor"]], "liquido": [[38, "module-graphnet.data.extractors.liquido"], [83, "module-graphnet.models.detector.liquido"]], "h5_extractor": [[39, "module-graphnet.data.extractors.liquido.h5_extractor"]], "prometheus": [[40, "module-graphnet.data.extractors.prometheus"], [84, "module-graphnet.models.detector.prometheus"]], "prometheus_extractor": [[41, "module-graphnet.data.extractors.prometheus.prometheus_extractor"]], "deprecated_methods": [[43, "module-graphnet.data.parquet.deprecated_methods"], [53, "module-graphnet.data.sqlite.deprecated_methods"], [67, "deprecated-methods"]], "pre_configured": [[44, "module-graphnet.data.pre_configured"]], "dataconverters": [[45, "module-graphnet.data.pre_configured.dataconverters"]], "readers": [[46, "module-graphnet.data.readers"]], "graphnet_file_reader": [[47, "module-graphnet.data.readers.graphnet_file_reader"]], "i3reader": [[48, "module-graphnet.data.readers.i3reader"]], "internal_parquet_reader": [[49, "module-graphnet.data.readers.internal_parquet_reader"]], "liquido_reader": [[50, "module-graphnet.data.readers.liquido_reader"]], "prometheus_reader": [[51, "module-graphnet.data.readers.prometheus_reader"]], "parquet_to_sqlite": [[55, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[56, "module-graphnet.data.utilities.random"]], "sqlite_utilities": [[57, "module-graphnet.data.utilities.sqlite_utilities"]], "string_selection_resolver": [[58, "module-graphnet.data.utilities.string_selection_resolver"]], "writers": [[59, "module-graphnet.data.writers"]], "graphnet_writer": [[60, "module-graphnet.data.writers.graphnet_writer"]], "parquet_writer": [[61, "module-graphnet.data.writers.parquet_writer"]], "sqlite_writer": [[62, "module-graphnet.data.writers.sqlite_writer"]], "deployment": [[63, "module-graphnet.deployment"]], "deployer": [[64, "module-graphnet.deployment.deployer"]], "deployment_module": [[65, "module-graphnet.deployment.deployment_module"]], "i3modules": [[66, "i3modules"]], "cleaning_module": [[69, "module-graphnet.deployment.icecube.cleaning_module"]], "i3deployer": [[70, "i3deployer"]], "inference_module": [[71, "module-graphnet.deployment.icecube.inference_module"]], "exceptions": [[72, "module-graphnet.exceptions"], [73, "module-graphnet.exceptions.exceptions"]], "models": [[74, "module-graphnet.models"]], "coarsening": [[75, "module-graphnet.models.coarsening"]], "components": [[76, "module-graphnet.models.components"]], "embedding": [[77, "module-graphnet.models.components.embedding"]], "layers": [[78, "module-graphnet.models.components.layers"]], "pool": [[79, "module-graphnet.models.components.pool"]], "detector": [[80, "module-graphnet.models.detector"], [81, "module-graphnet.models.detector.detector"]], "gnn": [[85, "module-graphnet.models.gnn"], [91, "module-graphnet.models.gnn.gnn"]], "RNN_tito": [[86, "module-graphnet.models.gnn.RNN_tito"]], "convnet": [[87, "module-graphnet.models.gnn.convnet"]], "dynedge": [[88, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[89, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedge_kaggle_tito": [[90, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "icemix": [[92, "module-graphnet.models.gnn.icemix"]], "graphs": [[93, "module-graphnet.models.graphs"], [98, "module-graphnet.models.graphs.graphs"]], "edges": [[94, "module-graphnet.models.graphs.edges"], [95, "module-graphnet.models.graphs.edges.edges"]], "minkowski": [[96, "module-graphnet.models.graphs.edges.minkowski"]], "graph_definition": [[97, "module-graphnet.models.graphs.graph_definition"]], "nodes": [[99, "module-graphnet.models.graphs.nodes"], [100, "module-graphnet.models.graphs.nodes.nodes"]], "utils": [[101, "module-graphnet.models.graphs.utils"], [111, "module-graphnet.models.utils"], [116, "module-graphnet.training.utils"]], "model": [[102, "module-graphnet.models.model"]], "rnn": [[103, "module-graphnet.models.rnn"]], "node_rnn": [[104, "module-graphnet.models.rnn.node_rnn"]], "standard_averaged_model": [[105, "module-graphnet.models.standard_averaged_model"]], "standard_model": [[106, "module-graphnet.models.standard_model"]], "task": [[107, "module-graphnet.models.task"], [110, "module-graphnet.models.task.task"]], "classification": [[108, "module-graphnet.models.task.classification"]], "reconstruction": [[109, "module-graphnet.models.task.reconstruction"]], "training": [[112, "module-graphnet.training"]], "callbacks": [[113, "module-graphnet.training.callbacks"]], "labels": [[114, "module-graphnet.training.labels"]], "loss_functions": [[115, "module-graphnet.training.loss_functions"]], "weight_fitting": [[117, "module-graphnet.training.weight_fitting"]], "argparse": [[119, "module-graphnet.utilities.argparse"]], "config": [[120, "module-graphnet.utilities.config"]], "base_config": [[121, "module-graphnet.utilities.config.base_config"]], "configurable": [[122, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[123, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[124, "module-graphnet.utilities.config.model_config"]], "parsing": [[125, "module-graphnet.utilities.config.parsing"]], "training_config": [[126, "module-graphnet.utilities.config.training_config"]], "decorators": [[127, "module-graphnet.utilities.decorators"]], "deprecation_tools": [[128, "module-graphnet.utilities.deprecation_tools"]], "filesys": [[129, "module-graphnet.utilities.filesys"]], "imports": [[130, "module-graphnet.utilities.imports"]], "logging": [[131, "module-graphnet.utilities.logging"]], "maths": [[132, "module-graphnet.utilities.maths"]], "src": [[133, "src"]], "Contribute": [[134, "contribute"]], "GitHub issues": [[134, "github-issues"]], "Pull requests": [[134, "pull-requests"]], "Conventions": [[134, "conventions"]], "Code quality": [[134, "code-quality"]], "Install": [[136, "install"]], "Installing with IceTray": [[136, "installing-with-icetray"]], "Installing stand-alone": [[136, "installing-stand-alone"]], "Running in Docker": [[136, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.dataclasses"], [6, "module-graphnet.data.dataconverter"], [7, "module-graphnet.data.dataloader"], [8, "module-graphnet.data.datamodule"], [9, "module-graphnet.data.dataset"], [10, "module-graphnet.data.dataset.dataset"], [11, "module-graphnet.data.dataset.parquet"], [12, "module-graphnet.data.dataset.parquet.parquet_dataset"], [13, "module-graphnet.data.dataset.sqlite"], [14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"], [15, "module-graphnet.data.extractors"], [16, "module-graphnet.data.extractors.combine_extractors"], [17, "module-graphnet.data.extractors.extractor"], [18, "module-graphnet.data.extractors.icecube"], [19, "module-graphnet.data.extractors.icecube.i3extractor"], [20, "module-graphnet.data.extractors.icecube.i3featureextractor"], [21, "module-graphnet.data.extractors.icecube.i3genericextractor"], [22, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"], [23, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"], [24, "module-graphnet.data.extractors.icecube.i3particleextractor"], [25, "module-graphnet.data.extractors.icecube.i3pisaextractor"], [26, "module-graphnet.data.extractors.icecube.i3quesoextractor"], [27, "module-graphnet.data.extractors.icecube.i3retroextractor"], [28, "module-graphnet.data.extractors.icecube.i3splinempeextractor"], [29, "module-graphnet.data.extractors.icecube.i3truthextractor"], [30, "module-graphnet.data.extractors.icecube.i3tumextractor"], [31, "module-graphnet.data.extractors.icecube.utilities"], [32, "module-graphnet.data.extractors.icecube.utilities.collections"], [33, "module-graphnet.data.extractors.icecube.utilities.frames"], [34, "module-graphnet.data.extractors.icecube.utilities.i3_filters"], [35, "module-graphnet.data.extractors.icecube.utilities.types"], [36, "module-graphnet.data.extractors.internal"], [37, "module-graphnet.data.extractors.internal.parquet_extractor"], [38, "module-graphnet.data.extractors.liquido"], [39, "module-graphnet.data.extractors.liquido.h5_extractor"], [40, "module-graphnet.data.extractors.prometheus"], [41, "module-graphnet.data.extractors.prometheus.prometheus_extractor"], [42, "module-graphnet.data.parquet"], [43, "module-graphnet.data.parquet.deprecated_methods"], [44, "module-graphnet.data.pre_configured"], [45, "module-graphnet.data.pre_configured.dataconverters"], [46, "module-graphnet.data.readers"], [47, "module-graphnet.data.readers.graphnet_file_reader"], [48, "module-graphnet.data.readers.i3reader"], [49, "module-graphnet.data.readers.internal_parquet_reader"], [50, "module-graphnet.data.readers.liquido_reader"], [51, "module-graphnet.data.readers.prometheus_reader"], [52, "module-graphnet.data.sqlite"], [53, "module-graphnet.data.sqlite.deprecated_methods"], [54, "module-graphnet.data.utilities"], [55, "module-graphnet.data.utilities.parquet_to_sqlite"], [56, "module-graphnet.data.utilities.random"], [57, "module-graphnet.data.utilities.sqlite_utilities"], [58, "module-graphnet.data.utilities.string_selection_resolver"], [59, "module-graphnet.data.writers"], [60, "module-graphnet.data.writers.graphnet_writer"], [61, "module-graphnet.data.writers.parquet_writer"], [62, "module-graphnet.data.writers.sqlite_writer"], [63, "module-graphnet.deployment"], [64, "module-graphnet.deployment.deployer"], [65, "module-graphnet.deployment.deployment_module"], [69, "module-graphnet.deployment.icecube.cleaning_module"], [71, "module-graphnet.deployment.icecube.inference_module"], [72, "module-graphnet.exceptions"], [73, "module-graphnet.exceptions.exceptions"], [74, "module-graphnet.models"], [75, "module-graphnet.models.coarsening"], [76, "module-graphnet.models.components"], [77, "module-graphnet.models.components.embedding"], [78, "module-graphnet.models.components.layers"], [79, "module-graphnet.models.components.pool"], [80, "module-graphnet.models.detector"], [81, "module-graphnet.models.detector.detector"], [82, "module-graphnet.models.detector.icecube"], [83, "module-graphnet.models.detector.liquido"], [84, "module-graphnet.models.detector.prometheus"], [85, "module-graphnet.models.gnn"], [86, "module-graphnet.models.gnn.RNN_tito"], [87, "module-graphnet.models.gnn.convnet"], [88, "module-graphnet.models.gnn.dynedge"], [89, "module-graphnet.models.gnn.dynedge_jinst"], [90, "module-graphnet.models.gnn.dynedge_kaggle_tito"], [91, "module-graphnet.models.gnn.gnn"], [92, "module-graphnet.models.gnn.icemix"], [93, "module-graphnet.models.graphs"], [94, "module-graphnet.models.graphs.edges"], [95, "module-graphnet.models.graphs.edges.edges"], [96, "module-graphnet.models.graphs.edges.minkowski"], [97, "module-graphnet.models.graphs.graph_definition"], [98, "module-graphnet.models.graphs.graphs"], [99, "module-graphnet.models.graphs.nodes"], [100, "module-graphnet.models.graphs.nodes.nodes"], [101, "module-graphnet.models.graphs.utils"], [102, "module-graphnet.models.model"], [103, "module-graphnet.models.rnn"], [104, "module-graphnet.models.rnn.node_rnn"], [105, "module-graphnet.models.standard_averaged_model"], [106, "module-graphnet.models.standard_model"], [107, "module-graphnet.models.task"], [108, "module-graphnet.models.task.classification"], [109, "module-graphnet.models.task.reconstruction"], [110, "module-graphnet.models.task.task"], [111, "module-graphnet.models.utils"], [112, "module-graphnet.training"], [113, "module-graphnet.training.callbacks"], [114, "module-graphnet.training.labels"], [115, "module-graphnet.training.loss_functions"], [116, "module-graphnet.training.utils"], [117, "module-graphnet.training.weight_fitting"], [118, "module-graphnet.utilities"], [119, "module-graphnet.utilities.argparse"], [120, "module-graphnet.utilities.config"], [121, "module-graphnet.utilities.config.base_config"], [122, "module-graphnet.utilities.config.configurable"], [123, "module-graphnet.utilities.config.dataset_config"], [124, "module-graphnet.utilities.config.model_config"], [125, "module-graphnet.utilities.config.parsing"], [126, "module-graphnet.utilities.config.training_config"], [127, "module-graphnet.utilities.decorators"], [128, "module-graphnet.utilities.deprecation_tools"], [129, "module-graphnet.utilities.filesys"], [130, "module-graphnet.utilities.imports"], [131, "module-graphnet.utilities.logging"], [132, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "liquido (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.LIQUIDO"]], "liquido (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.LIQUIDO"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "i3fileset (class in graphnet.data.dataclasses)": [[5, "graphnet.data.dataclasses.I3FileSet"]], "settings (class in graphnet.data.dataclasses)": [[5, "graphnet.data.dataclasses.Settings"]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[5, "graphnet.data.dataclasses.I3FileSet.gcd_file"]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.gcd_file"]], "graphnet.data.dataclasses": [[5, "module-graphnet.data.dataclasses"]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[5, "graphnet.data.dataclasses.I3FileSet.i3_file"]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.i3_files"]], "modules (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.modules"]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.output_folder"]], "dataconverter (class in graphnet.data.dataconverter)": [[6, "graphnet.data.dataconverter.DataConverter"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[6, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[6, "module-graphnet.data.dataconverter"]], "init_global_index() (in module graphnet.data.dataconverter)": [[6, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[6, "graphnet.data.dataconverter.DataConverter.merge_files"]], "dataloader (class in graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.DataLoader"]], "collate_fn() (in module graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.collate_fn"]], "do_shuffle() (in module graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.do_shuffle"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[7, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "graphnet.data.dataloader": [[7, "module-graphnet.data.dataloader"]], "graphnetdatamodule (class in graphnet.data.datamodule)": [[8, "graphnet.data.datamodule.GraphNeTDataModule"]], "graphnet.data.datamodule": [[8, "module-graphnet.data.datamodule"]], "prepare_data() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.prepare_data"]], "setup() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.setup"]], "teardown() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.teardown"]], "test_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.test_dataloader"]], "train_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.train_dataloader"]], "val_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.val_dataloader"]], "graphnet.data.dataset": [[9, "module-graphnet.data.dataset"]], "dataset (class in graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.Dataset"]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.EnsembleDataset"]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[10, "graphnet.data.dataset.dataset.Dataset.add_label"]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[10, "graphnet.data.dataset.dataset.Dataset.concatenate"]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[10, "graphnet.data.dataset.dataset.Dataset.from_config"]], "graphnet.data.dataset.dataset": [[10, "module-graphnet.data.dataset.dataset"]], "load_module() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.load_module"]], "parse_graph_definition() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.parse_graph_definition"]], "parse_labels() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.parse_labels"]], "path (graphnet.data.dataset.dataset.dataset property)": [[10, "graphnet.data.dataset.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[10, "graphnet.data.dataset.dataset.Dataset.query_table"]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[10, "graphnet.data.dataset.dataset.Dataset.truth_table"]], "graphnet.data.dataset.parquet": [[11, "module-graphnet.data.dataset.parquet"]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[12, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[12, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[12, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table"]], "graphnet.data.dataset.sqlite": [[13, "module-graphnet.data.dataset.sqlite"]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[14, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[14, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "graphnet.data.extractors": [[15, "module-graphnet.data.extractors"]], "combinedextractor (class in graphnet.data.extractors.combine_extractors)": [[16, "graphnet.data.extractors.combine_extractors.CombinedExtractor"]], "graphnet.data.extractors.combine_extractors": [[16, "module-graphnet.data.extractors.combine_extractors"]], "extractor (class in graphnet.data.extractors.extractor)": [[17, "graphnet.data.extractors.extractor.Extractor"]], "graphnet.data.extractors.extractor": [[17, "module-graphnet.data.extractors.extractor"]], "name (graphnet.data.extractors.extractor.extractor property)": [[17, "graphnet.data.extractors.extractor.Extractor.name"]], "graphnet.data.extractors.icecube": [[18, "module-graphnet.data.extractors.icecube"]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[19, "graphnet.data.extractors.icecube.i3extractor.I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor": [[19, "module-graphnet.data.extractors.icecube.i3extractor"]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[19, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd"]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3featureextractor": [[20, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[21, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3genericextractor": [[21, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[22, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[22, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[23, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[23, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[24, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[24, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[25, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[25, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[26, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[26, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[27, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[27, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[28, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[28, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[29, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[29, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[30, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[30, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "graphnet.data.extractors.icecube.utilities": [[31, "module-graphnet.data.extractors.icecube.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[32, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.icecube.utilities.collections": [[32, "module-graphnet.data.extractors.icecube.utilities.collections"]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[32, "graphnet.data.extractors.icecube.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[32, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[33, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[33, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[33, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.frames": [[33, "module-graphnet.data.extractors.icecube.utilities.frames"]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[34, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter"]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[34, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask"]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[34, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[34, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.get_member_variables"]], "graphnet.data.extractors.icecube.utilities.types": [[35, "module-graphnet.data.extractors.icecube.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_type"]], "graphnet.data.extractors.internal": [[36, "module-graphnet.data.extractors.internal"]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[37, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[37, "module-graphnet.data.extractors.internal.parquet_extractor"]], "graphnet.data.extractors.liquido": [[38, "module-graphnet.data.extractors.liquido"]], "h5extractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[39, "graphnet.data.extractors.liquido.h5_extractor.H5Extractor"]], "h5hitextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[39, "graphnet.data.extractors.liquido.h5_extractor.H5HitExtractor"]], "h5truthextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[39, "graphnet.data.extractors.liquido.h5_extractor.H5TruthExtractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[39, "module-graphnet.data.extractors.liquido.h5_extractor"]], "graphnet.data.extractors.prometheus": [[40, "module-graphnet.data.extractors.prometheus"]], "prometheusextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[41, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusExtractor"]], "prometheusfeatureextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[41, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusFeatureExtractor"]], "prometheustruthextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[41, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusTruthExtractor"]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[41, "module-graphnet.data.extractors.prometheus.prometheus_extractor"]], "graphnet.data.parquet": [[42, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.deprecated_methods)": [[43, "graphnet.data.parquet.deprecated_methods.ParquetDataConverter"]], "graphnet.data.parquet.deprecated_methods": [[43, "module-graphnet.data.parquet.deprecated_methods"]], "graphnet.data.pre_configured": [[44, "module-graphnet.data.pre_configured"]], "i3toparquetconverter (class in graphnet.data.pre_configured.dataconverters)": [[45, "graphnet.data.pre_configured.dataconverters.I3ToParquetConverter"]], "i3tosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[45, "graphnet.data.pre_configured.dataconverters.I3ToSQLiteConverter"]], "parquettosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[45, "graphnet.data.pre_configured.dataconverters.ParquetToSQLiteConverter"]], "graphnet.data.pre_configured.dataconverters": [[45, "module-graphnet.data.pre_configured.dataconverters"]], "graphnet.data.readers": [[46, "module-graphnet.data.readers"]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[47, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader"]], "accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[47, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors"]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[47, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions"]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[47, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names"]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[47, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files"]], "graphnet.data.readers.graphnet_file_reader": [[47, "module-graphnet.data.readers.graphnet_file_reader"]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[47, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors"]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[47, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files"]], "i3reader (class in graphnet.data.readers.i3reader)": [[48, "graphnet.data.readers.i3reader.I3Reader"]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[48, "graphnet.data.readers.i3reader.I3Reader.find_files"]], "graphnet.data.readers.i3reader": [[48, "module-graphnet.data.readers.i3reader"]], "parquetreader (class in graphnet.data.readers.internal_parquet_reader)": [[49, "graphnet.data.readers.internal_parquet_reader.ParquetReader"]], "find_files() (graphnet.data.readers.internal_parquet_reader.parquetreader method)": [[49, "graphnet.data.readers.internal_parquet_reader.ParquetReader.find_files"]], "graphnet.data.readers.internal_parquet_reader": [[49, "module-graphnet.data.readers.internal_parquet_reader"]], "liquidoreader (class in graphnet.data.readers.liquido_reader)": [[50, "graphnet.data.readers.liquido_reader.LiquidOReader"]], "find_files() (graphnet.data.readers.liquido_reader.liquidoreader method)": [[50, "graphnet.data.readers.liquido_reader.LiquidOReader.find_files"]], "graphnet.data.readers.liquido_reader": [[50, "module-graphnet.data.readers.liquido_reader"]], "prometheusreader (class in graphnet.data.readers.prometheus_reader)": [[51, "graphnet.data.readers.prometheus_reader.PrometheusReader"]], "find_files() (graphnet.data.readers.prometheus_reader.prometheusreader method)": [[51, "graphnet.data.readers.prometheus_reader.PrometheusReader.find_files"]], "graphnet.data.readers.prometheus_reader": [[51, "module-graphnet.data.readers.prometheus_reader"]], "graphnet.data.sqlite": [[52, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.deprecated_methods)": [[53, "graphnet.data.sqlite.deprecated_methods.SQLiteDataConverter"]], "graphnet.data.sqlite.deprecated_methods": [[53, "module-graphnet.data.sqlite.deprecated_methods"]], "graphnet.data.utilities": [[54, "module-graphnet.data.utilities"]], "graphnet.data.utilities.parquet_to_sqlite": [[55, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random": [[56, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[56, "graphnet.data.utilities.random.pairwise_shuffle"]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[57, "graphnet.data.utilities.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[57, "graphnet.data.utilities.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[57, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[57, "graphnet.data.utilities.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[57, "graphnet.data.utilities.sqlite_utilities.database_table_exists"]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[57, "graphnet.data.utilities.sqlite_utilities.get_primary_keys"]], "graphnet.data.utilities.sqlite_utilities": [[57, "module-graphnet.data.utilities.sqlite_utilities"]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[57, "graphnet.data.utilities.sqlite_utilities.query_database"]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[57, "graphnet.data.utilities.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[57, "graphnet.data.utilities.sqlite_utilities.save_to_sql"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[58, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[58, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[58, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.data.writers": [[59, "module-graphnet.data.writers"]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[60, "graphnet.data.writers.graphnet_writer.GraphNeTWriter"]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[60, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes"]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[60, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension"]], "graphnet.data.writers.graphnet_writer": [[60, "module-graphnet.data.writers.graphnet_writer"]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[60, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files"]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[61, "graphnet.data.writers.parquet_writer.ParquetWriter"]], "graphnet.data.writers.parquet_writer": [[61, "module-graphnet.data.writers.parquet_writer"]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[61, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files"]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[62, "graphnet.data.writers.sqlite_writer.SQLiteWriter"]], "graphnet.data.writers.sqlite_writer": [[62, "module-graphnet.data.writers.sqlite_writer"]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[62, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files"]], "graphnet.deployment": [[63, "module-graphnet.deployment"]], "deployer (class in graphnet.deployment.deployer)": [[64, "graphnet.deployment.deployer.Deployer"]], "graphnet.deployment.deployer": [[64, "module-graphnet.deployment.deployer"]], "run() (graphnet.deployment.deployer.deployer method)": [[64, "graphnet.deployment.deployer.Deployer.run"]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[65, "graphnet.deployment.deployment_module.DeploymentModule"]], "graphnet.deployment.deployment_module": [[65, "module-graphnet.deployment.deployment_module"]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[69, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule"]], "graphnet.deployment.icecube.cleaning_module": [[69, "module-graphnet.deployment.icecube.cleaning_module"]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[71, "graphnet.deployment.icecube.inference_module.I3InferenceModule"]], "graphnet.deployment.icecube.inference_module": [[71, "module-graphnet.deployment.icecube.inference_module"]], "graphnet.exceptions": [[72, "module-graphnet.exceptions"]], "columnmissingexception": [[73, "graphnet.exceptions.exceptions.ColumnMissingException"]], "graphnet.exceptions.exceptions": [[73, "module-graphnet.exceptions.exceptions"]], "graphnet.models": [[74, "module-graphnet.models"]], "attributecoarsening (class in graphnet.models.coarsening)": [[75, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[75, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[75, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[75, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[75, "graphnet.models.coarsening.DOMCoarsening"]], "forward() (graphnet.models.coarsening.coarsening method)": [[75, "graphnet.models.coarsening.Coarsening.forward"]], "graphnet.models.coarsening": [[75, "module-graphnet.models.coarsening"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[75, "graphnet.models.coarsening.Coarsening.reduce_options"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[75, "graphnet.models.coarsening.unbatch_edge_index"]], "graphnet.models.components": [[76, "module-graphnet.models.components"]], "fourierencoder (class in graphnet.models.components.embedding)": [[77, "graphnet.models.components.embedding.FourierEncoder"]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[77, "graphnet.models.components.embedding.SinusoidalPosEmb"]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[77, "graphnet.models.components.embedding.SpacetimeEncoder"]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[77, "graphnet.models.components.embedding.FourierEncoder.forward"]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[77, "graphnet.models.components.embedding.SinusoidalPosEmb.forward"]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[77, "graphnet.models.components.embedding.SpacetimeEncoder.forward"]], "graphnet.models.components.embedding": [[77, "module-graphnet.models.components.embedding"]], "attention_rel (class in graphnet.models.components.layers)": [[78, "graphnet.models.components.layers.Attention_rel"]], "block (class in graphnet.models.components.layers)": [[78, "graphnet.models.components.layers.Block"]], "block_rel (class in graphnet.models.components.layers)": [[78, "graphnet.models.components.layers.Block_rel"]], "droppath (class in graphnet.models.components.layers)": [[78, "graphnet.models.components.layers.DropPath"]], "dynedgeconv (class in graphnet.models.components.layers)": [[78, "graphnet.models.components.layers.DynEdgeConv"]], "dyntrans (class in graphnet.models.components.layers)": [[78, "graphnet.models.components.layers.DynTrans"]], "edgeconvtito (class in graphnet.models.components.layers)": [[78, "graphnet.models.components.layers.EdgeConvTito"]], "mlp (class in graphnet.models.components.layers)": [[78, "graphnet.models.components.layers.Mlp"]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[78, "graphnet.models.components.layers.DropPath.extra_repr"]], "forward() (graphnet.models.components.layers.attention_rel method)": [[78, "graphnet.models.components.layers.Attention_rel.forward"]], "forward() (graphnet.models.components.layers.block method)": [[78, "graphnet.models.components.layers.Block.forward"]], "forward() (graphnet.models.components.layers.block_rel method)": [[78, "graphnet.models.components.layers.Block_rel.forward"]], "forward() (graphnet.models.components.layers.droppath method)": [[78, "graphnet.models.components.layers.DropPath.forward"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[78, "graphnet.models.components.layers.DynEdgeConv.forward"]], "forward() (graphnet.models.components.layers.dyntrans method)": [[78, "graphnet.models.components.layers.DynTrans.forward"]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[78, "graphnet.models.components.layers.EdgeConvTito.forward"]], "forward() (graphnet.models.components.layers.mlp method)": [[78, "graphnet.models.components.layers.Mlp.forward"]], "graphnet.models.components.layers": [[78, "module-graphnet.models.components.layers"]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[78, "graphnet.models.components.layers.EdgeConvTito.message"]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[78, "graphnet.models.components.layers.EdgeConvTito.reset_parameters"]], "graphnet.models.components.pool": [[79, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[79, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[79, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[79, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[79, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[79, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[79, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[79, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[79, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[79, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[79, "graphnet.models.components.pool.sum_pool_x"]], "graphnet.models.detector": [[80, "module-graphnet.models.detector"]], "detector (class in graphnet.models.detector.detector)": [[81, "graphnet.models.detector.detector.Detector"]], "feature_map() (graphnet.models.detector.detector.detector method)": [[81, "graphnet.models.detector.detector.Detector.feature_map"]], "forward() (graphnet.models.detector.detector.detector method)": [[81, "graphnet.models.detector.detector.Detector.forward"]], "geometry_table (graphnet.models.detector.detector.detector property)": [[81, "graphnet.models.detector.detector.Detector.geometry_table"]], "graphnet.models.detector.detector": [[81, "module-graphnet.models.detector.detector"]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[81, "graphnet.models.detector.detector.Detector.sensor_index_name"]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[81, "graphnet.models.detector.detector.Detector.sensor_position_names"]], "string_index_name (graphnet.models.detector.detector.detector property)": [[81, "graphnet.models.detector.detector.Detector.string_index_name"]], "icecube86 (class in graphnet.models.detector.icecube)": [[82, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[82, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[82, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[82, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[82, "graphnet.models.detector.icecube.IceCube86.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[82, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[82, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[82, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map"]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[82, "graphnet.models.detector.icecube.IceCube86.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[82, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path"]], "graphnet.models.detector.icecube": [[82, "module-graphnet.models.detector.icecube"]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[82, "graphnet.models.detector.icecube.IceCube86.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[82, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[82, "graphnet.models.detector.icecube.IceCube86.string_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[82, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column"]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[82, "graphnet.models.detector.icecube.IceCube86.xyz"]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[82, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz"]], "liquido_v1 (class in graphnet.models.detector.liquido)": [[83, "graphnet.models.detector.liquido.LiquidO_v1"]], "feature_map() (graphnet.models.detector.liquido.liquido_v1 method)": [[83, "graphnet.models.detector.liquido.LiquidO_v1.feature_map"]], "geometry_table_path (graphnet.models.detector.liquido.liquido_v1 attribute)": [[83, "graphnet.models.detector.liquido.LiquidO_v1.geometry_table_path"]], "graphnet.models.detector.liquido": [[83, "module-graphnet.models.detector.liquido"]], "sensor_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[83, "graphnet.models.detector.liquido.LiquidO_v1.sensor_id_column"]], "string_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[83, "graphnet.models.detector.liquido.LiquidO_v1.string_id_column"]], "xyz (graphnet.models.detector.liquido.liquido_v1 attribute)": [[83, "graphnet.models.detector.liquido.LiquidO_v1.xyz"]], "orca150 (class in graphnet.models.detector.prometheus)": [[84, "graphnet.models.detector.prometheus.ORCA150"]], "prometheus (class in graphnet.models.detector.prometheus)": [[84, "graphnet.models.detector.prometheus.Prometheus"]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[84, "graphnet.models.detector.prometheus.ORCA150.feature_map"]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[84, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path"]], "graphnet.models.detector.prometheus": [[84, "module-graphnet.models.detector.prometheus"]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[84, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column"]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[84, "graphnet.models.detector.prometheus.ORCA150.string_id_column"]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[84, "graphnet.models.detector.prometheus.ORCA150.xyz"]], "graphnet.models.gnn": [[85, "module-graphnet.models.gnn"]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[86, "graphnet.models.gnn.RNN_tito.RNN_TITO"]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[86, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward"]], "graphnet.models.gnn.rnn_tito": [[86, "module-graphnet.models.gnn.RNN_tito"]], "convnet (class in graphnet.models.gnn.convnet)": [[87, "graphnet.models.gnn.convnet.ConvNet"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[87, "graphnet.models.gnn.convnet.ConvNet.forward"]], "graphnet.models.gnn.convnet": [[87, "module-graphnet.models.gnn.convnet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[88, "graphnet.models.gnn.dynedge.DynEdge"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[88, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "graphnet.models.gnn.dynedge": [[88, "module-graphnet.models.gnn.dynedge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[89, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[89, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "graphnet.models.gnn.dynedge_jinst": [[89, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[90, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO"]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[90, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[90, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "gnn (class in graphnet.models.gnn.gnn)": [[91, "graphnet.models.gnn.gnn.GNN"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[91, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn.gnn": [[91, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[91, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[91, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "deepice (class in graphnet.models.gnn.icemix)": [[92, "graphnet.models.gnn.icemix.DeepIce"]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[92, "graphnet.models.gnn.icemix.DeepIce.forward"]], "graphnet.models.gnn.icemix": [[92, "module-graphnet.models.gnn.icemix"]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[92, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay"]], "graphnet.models.graphs": [[93, "module-graphnet.models.graphs"]], "graphnet.models.graphs.edges": [[94, "module-graphnet.models.graphs.edges"]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[95, "graphnet.models.graphs.edges.edges.EdgeDefinition"]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[95, "graphnet.models.graphs.edges.edges.EuclideanEdges"]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[95, "graphnet.models.graphs.edges.edges.KNNEdges"]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[95, "graphnet.models.graphs.edges.edges.RadialEdges"]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[95, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward"]], "graphnet.models.graphs.edges.edges": [[95, "module-graphnet.models.graphs.edges.edges"]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[96, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges"]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[96, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat"]], "graphnet.models.graphs.edges.minkowski": [[96, "module-graphnet.models.graphs.edges.minkowski"]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[97, "graphnet.models.graphs.graph_definition.GraphDefinition"]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[97, "graphnet.models.graphs.graph_definition.GraphDefinition.forward"]], "graphnet.models.graphs.graph_definition": [[97, "module-graphnet.models.graphs.graph_definition"]], "knngraph (class in graphnet.models.graphs.graphs)": [[98, "graphnet.models.graphs.graphs.KNNGraph"]], "graphnet.models.graphs.graphs": [[98, "module-graphnet.models.graphs.graphs"]], "graphnet.models.graphs.nodes": [[99, "module-graphnet.models.graphs.nodes"]], "icemixnodes (class in graphnet.models.graphs.nodes.nodes)": [[100, "graphnet.models.graphs.nodes.nodes.IceMixNodes"]], "nodeasdomtimeseries (class in graphnet.models.graphs.nodes.nodes)": [[100, "graphnet.models.graphs.nodes.nodes.NodeAsDOMTimeSeries"]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[100, "graphnet.models.graphs.nodes.nodes.NodeDefinition"]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[100, "graphnet.models.graphs.nodes.nodes.NodesAsPulses"]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[100, "graphnet.models.graphs.nodes.nodes.PercentileClusters"]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[100, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward"]], "graphnet.models.graphs.nodes.nodes": [[100, "module-graphnet.models.graphs.nodes.nodes"]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[100, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs"]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[100, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs"]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[100, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names"]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[101, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles"]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[101, "graphnet.models.graphs.utils.gather_cluster_sequence"]], "graphnet.models.graphs.utils": [[101, "module-graphnet.models.graphs.utils"]], "ice_transparency() (in module graphnet.models.graphs.utils)": [[101, "graphnet.models.graphs.utils.ice_transparency"]], "identify_indices() (in module graphnet.models.graphs.utils)": [[101, "graphnet.models.graphs.utils.identify_indices"]], "lex_sort() (in module graphnet.models.graphs.utils)": [[101, "graphnet.models.graphs.utils.lex_sort"]], "model (class in graphnet.models.model)": [[102, "graphnet.models.model.Model"]], "extra_repr() (graphnet.models.model.model method)": [[102, "graphnet.models.model.Model.extra_repr"]], "extra_repr_recursive() (graphnet.models.model.model method)": [[102, "graphnet.models.model.Model.extra_repr_recursive"]], "from_config() (graphnet.models.model.model class method)": [[102, "graphnet.models.model.Model.from_config"]], "graphnet.models.model": [[102, "module-graphnet.models.model"]], "load() (graphnet.models.model.model class method)": [[102, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[102, "graphnet.models.model.Model.load_state_dict"]], "save() (graphnet.models.model.model method)": [[102, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[102, "graphnet.models.model.Model.save_state_dict"]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[102, "graphnet.models.model.Model.set_verbose_print_recursively"]], "verbose_print (graphnet.models.model.model attribute)": [[102, "graphnet.models.model.Model.verbose_print"]], "graphnet.models.rnn": [[103, "module-graphnet.models.rnn"]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[104, "graphnet.models.rnn.node_rnn.Node_RNN"]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[104, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object"]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[104, "graphnet.models.rnn.node_rnn.Node_RNN.forward"]], "graphnet.models.rnn.node_rnn": [[104, "module-graphnet.models.rnn.node_rnn"]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[105, "graphnet.models.standard_averaged_model.StandardAveragedModel"]], "graphnet.models.standard_averaged_model": [[105, "module-graphnet.models.standard_averaged_model"]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[105, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict"]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[105, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end"]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[105, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step"]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[105, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step"]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[105, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step"]], "standardmodel (class in graphnet.models.standard_model)": [[106, "graphnet.models.standard_model.StandardModel"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[106, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[106, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "fit() (graphnet.models.standard_model.standardmodel method)": [[106, "graphnet.models.standard_model.StandardModel.fit"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[106, "graphnet.models.standard_model.StandardModel.forward"]], "graphnet.models.standard_model": [[106, "module-graphnet.models.standard_model"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[106, "graphnet.models.standard_model.StandardModel.inference"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[106, "graphnet.models.standard_model.StandardModel.predict"]], "predict_as_dataframe() (graphnet.models.standard_model.standardmodel method)": [[106, "graphnet.models.standard_model.StandardModel.predict_as_dataframe"]], "prediction_labels (graphnet.models.standard_model.standardmodel property)": [[106, "graphnet.models.standard_model.StandardModel.prediction_labels"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[106, "graphnet.models.standard_model.StandardModel.shared_step"]], "target_labels (graphnet.models.standard_model.standardmodel property)": [[106, "graphnet.models.standard_model.StandardModel.target_labels"]], "train() (graphnet.models.standard_model.standardmodel method)": [[106, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[106, "graphnet.models.standard_model.StandardModel.training_step"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[106, "graphnet.models.standard_model.StandardModel.validation_step"]], "graphnet.models.task": [[107, "module-graphnet.models.task"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[108, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[108, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[108, "graphnet.models.task.classification.MulticlassClassificationTask"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[108, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[108, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[108, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[108, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels"]], "graphnet.models.task.classification": [[108, "module-graphnet.models.task.classification"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[108, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[108, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[109, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[109, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[109, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[109, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[109, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[109, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[109, "graphnet.models.task.reconstruction.EnergyTCReconstruction"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[109, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[109, "graphnet.models.task.reconstruction.PositionReconstruction"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[109, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[109, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[109, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[109, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[109, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[109, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[109, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[109, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[109, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[109, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[109, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[109, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[109, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[109, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[109, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[109, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels"]], "graphnet.models.task.reconstruction": [[109, "module-graphnet.models.task.reconstruction"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[109, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[109, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[109, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[109, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[109, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[109, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[109, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "identitytask (class in graphnet.models.task.task)": [[110, "graphnet.models.task.task.IdentityTask"]], "learnedtask (class in graphnet.models.task.task)": [[110, "graphnet.models.task.task.LearnedTask"]], "standardflowtask (class in graphnet.models.task.task)": [[110, "graphnet.models.task.task.StandardFlowTask"]], "standardlearnedtask (class in graphnet.models.task.task)": [[110, "graphnet.models.task.task.StandardLearnedTask"]], "task (class in graphnet.models.task.task)": [[110, "graphnet.models.task.task.Task"]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[110, "graphnet.models.task.task.LearnedTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardflowtask method)": [[110, "graphnet.models.task.task.StandardFlowTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[110, "graphnet.models.task.task.StandardLearnedTask.compute_loss"]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[110, "graphnet.models.task.task.IdentityTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.task.task property)": [[110, "graphnet.models.task.task.Task.default_prediction_labels"]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[110, "graphnet.models.task.task.IdentityTask.default_target_labels"]], "default_target_labels (graphnet.models.task.task.task property)": [[110, "graphnet.models.task.task.Task.default_target_labels"]], "forward() (graphnet.models.task.task.learnedtask method)": [[110, "graphnet.models.task.task.LearnedTask.forward"]], "forward() (graphnet.models.task.task.standardflowtask method)": [[110, "graphnet.models.task.task.StandardFlowTask.forward"]], "graphnet.models.task.task": [[110, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[110, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[110, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[110, "graphnet.models.task.task.LearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[110, "graphnet.models.task.task.StandardLearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[110, "graphnet.models.task.task.Task.nb_inputs"]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[110, "graphnet.models.task.task.StandardFlowTask.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[110, "graphnet.models.task.task.Task.train_eval"]], "array_to_sequence() (in module graphnet.models.utils)": [[111, "graphnet.models.utils.array_to_sequence"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[111, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[111, "graphnet.models.utils.calculate_xyzt_homophily"]], "graphnet.models.utils": [[111, "module-graphnet.models.utils"]], "knn_graph_batch() (in module graphnet.models.utils)": [[111, "graphnet.models.utils.knn_graph_batch"]], "graphnet.training": [[112, "module-graphnet.training"]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[113, "graphnet.training.callbacks.GraphnetEarlyStopping"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[113, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[113, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[113, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[113, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[113, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[113, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[113, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[113, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[113, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[113, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end"]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[113, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[113, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[113, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[113, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end"]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[113, "graphnet.training.callbacks.GraphnetEarlyStopping.setup"]], "direction (class in graphnet.training.labels)": [[114, "graphnet.training.labels.Direction"]], "label (class in graphnet.training.labels)": [[114, "graphnet.training.labels.Label"]], "graphnet.training.labels": [[114, "module-graphnet.training.labels"]], "key (graphnet.training.labels.label property)": [[114, "graphnet.training.labels.Label.key"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[115, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[115, "graphnet.training.loss_functions.CrossEntropyLoss"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[115, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.training.loss_functions)": [[115, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[115, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[115, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[115, "graphnet.training.loss_functions.MSELoss"]], "rmseloss (class in graphnet.training.loss_functions)": [[115, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[115, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[115, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[115, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[115, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[115, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[115, "graphnet.training.loss_functions.LossFunction.forward"]], "graphnet.training.loss_functions": [[115, "module-graphnet.training.loss_functions"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[115, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[115, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[115, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "collate_fn() (in module graphnet.training.utils)": [[116, "graphnet.training.utils.collate_fn"]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[116, "graphnet.training.utils.collator_sequence_buckleting"]], "get_predictions() (in module graphnet.training.utils)": [[116, "graphnet.training.utils.get_predictions"]], "graphnet.training.utils": [[116, "module-graphnet.training.utils"]], "make_dataloader() (in module graphnet.training.utils)": [[116, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[116, "graphnet.training.utils.make_train_validation_dataloader"]], "save_results() (in module graphnet.training.utils)": [[116, "graphnet.training.utils.save_results"]], "save_selection() (in module graphnet.training.utils)": [[116, "graphnet.training.utils.save_selection"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[117, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[117, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[117, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[117, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[117, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[118, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[119, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[119, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[119, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[119, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[119, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[119, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[119, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[120, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[121, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[121, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[121, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[121, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[121, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[121, "graphnet.utilities.config.base_config.BaseConfig.load"]], "model_computed_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[121, "graphnet.utilities.config.base_config.BaseConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[121, "graphnet.utilities.config.base_config.BaseConfig.model_config"]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[121, "graphnet.utilities.config.base_config.BaseConfig.model_fields"]], "configurable (class in graphnet.utilities.config.configurable)": [[122, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[122, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[122, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[122, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[122, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta"]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta"]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition"]], "graphnet.utilities.config.dataset_config": [[123, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.labels"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "model_computed_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config"]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[123, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[123, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[124, "graphnet.utilities.config.model_config.ModelConfig"]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[124, "graphnet.utilities.config.model_config.ModelConfigSaverABC"]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[124, "graphnet.utilities.config.model_config.ModelConfigSaverMeta"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[124, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[124, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[124, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[124, "module-graphnet.utilities.config.model_config"]], "model_computed_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[124, "graphnet.utilities.config.model_config.ModelConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[124, "graphnet.utilities.config.model_config.ModelConfig.model_config"]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[124, "graphnet.utilities.config.model_config.ModelConfig.model_fields"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[124, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[125, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[125, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[125, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[125, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[125, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[125, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[125, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[126, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[126, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[126, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[126, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[126, "module-graphnet.utilities.config.training_config"]], "model_computed_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[126, "graphnet.utilities.config.training_config.TrainingConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[126, "graphnet.utilities.config.training_config.TrainingConfig.model_config"]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[126, "graphnet.utilities.config.training_config.TrainingConfig.model_fields"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[126, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[127, "module-graphnet.utilities.decorators"]], "graphnet.utilities.deprecation_tools": [[128, "module-graphnet.utilities.deprecation_tools"]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[128, "graphnet.utilities.deprecation_tools.rename_state_dict_entries"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[129, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[129, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[129, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[129, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[129, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[130, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[130, "graphnet.utilities.imports.has_icecube_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[130, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[130, "graphnet.utilities.imports.requires_icecube"]], "logger (class in graphnet.utilities.logging)": [[131, "graphnet.utilities.logging.Logger"]], "repeatfilter (class in graphnet.utilities.logging)": [[131, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.logger method)": [[131, "graphnet.utilities.logging.Logger.critical"]], "debug() (graphnet.utilities.logging.logger method)": [[131, "graphnet.utilities.logging.Logger.debug"]], "error() (graphnet.utilities.logging.logger method)": [[131, "graphnet.utilities.logging.Logger.error"]], "file_handlers (graphnet.utilities.logging.logger property)": [[131, "graphnet.utilities.logging.Logger.file_handlers"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[131, "graphnet.utilities.logging.RepeatFilter.filter"]], "graphnet.utilities.logging": [[131, "module-graphnet.utilities.logging"]], "handlers (graphnet.utilities.logging.logger property)": [[131, "graphnet.utilities.logging.Logger.handlers"]], "info() (graphnet.utilities.logging.logger method)": [[131, "graphnet.utilities.logging.Logger.info"]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[131, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed"]], "setlevel() (graphnet.utilities.logging.logger method)": [[131, "graphnet.utilities.logging.Logger.setLevel"]], "stream_handlers (graphnet.utilities.logging.logger property)": [[131, "graphnet.utilities.logging.Logger.stream_handlers"]], "warning() (graphnet.utilities.logging.logger method)": [[131, "graphnet.utilities.logging.Logger.warning"]], "warning_once() (graphnet.utilities.logging.logger method)": [[131, "graphnet.utilities.logging.Logger.warning_once"]], "eps_like() (in module graphnet.utilities.maths)": [[132, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[132, "module-graphnet.utilities.maths"]]}})