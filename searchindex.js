Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.i3extractor", "api/graphnet.data.extractors.i3featureextractor", "api/graphnet.data.extractors.i3genericextractor", "api/graphnet.data.extractors.i3hybridrecoextractor", "api/graphnet.data.extractors.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.i3particleextractor", "api/graphnet.data.extractors.i3pisaextractor", "api/graphnet.data.extractors.i3quesoextractor", "api/graphnet.data.extractors.i3retroextractor", "api/graphnet.data.extractors.i3splinempeextractor", "api/graphnet.data.extractors.i3truthextractor", "api/graphnet.data.extractors.i3tumextractor", "api/graphnet.data.extractors.utilities", "api/graphnet.data.extractors.utilities.collections", "api/graphnet.data.extractors.utilities.frames", "api/graphnet.data.extractors.utilities.types", "api/graphnet.data.filters", "api/graphnet.data.parquet", "api/graphnet.data.parquet.parquet_dataconverter", "api/graphnet.data.pipeline", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.sqlite_dataconverter", "api/graphnet.data.sqlite.sqlite_utilities", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.deployment", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deployer", "api/graphnet.deployment.i3modules.graphnet_module", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.pisa", "api/graphnet.pisa.fitting", "api/graphnet.pisa.plotting", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.i3extractor.rst", "api/graphnet.data.extractors.i3featureextractor.rst", "api/graphnet.data.extractors.i3genericextractor.rst", "api/graphnet.data.extractors.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.i3particleextractor.rst", "api/graphnet.data.extractors.i3pisaextractor.rst", "api/graphnet.data.extractors.i3quesoextractor.rst", "api/graphnet.data.extractors.i3retroextractor.rst", "api/graphnet.data.extractors.i3splinempeextractor.rst", "api/graphnet.data.extractors.i3truthextractor.rst", "api/graphnet.data.extractors.i3tumextractor.rst", "api/graphnet.data.extractors.utilities.rst", "api/graphnet.data.extractors.utilities.collections.rst", "api/graphnet.data.extractors.utilities.frames.rst", "api/graphnet.data.extractors.utilities.types.rst", "api/graphnet.data.filters.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.parquet_dataconverter.rst", "api/graphnet.data.pipeline.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.sqlite_dataconverter.rst", "api/graphnet.data.sqlite.sqlite_utilities.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deployer.rst", "api/graphnet.deployment.i3modules.graphnet_module.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.pisa.rst", "api/graphnet.pisa.fitting.rst", "api/graphnet.pisa.plotting.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "sqlite", "sqlite_dataset", "extractors", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "types", "filters", "parquet", "parquet_dataconverter", "pipeline", "sqlite", "sqlite_dataconverter", "sqlite_utilities", "utilities", "parquet_to_sqlite", "random", "string_selection_resolver", "deployment", "i3modules", "deployer", "graphnet_module", "models", "coarsening", "components", "layers", "pool", "detector", "detector", "icecube", "prometheus", "gnn", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "standard_model", "task", "classification", "reconstruction", "task", "utils", "pisa", "fitting", "plotting", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104], "i": [0, 1, 7, 9, 11, 13, 15, 17, 28, 29, 30, 31, 36, 37, 40, 41, 45, 47, 50, 56, 57, 63, 65, 68, 69, 74, 75, 76, 79, 81, 82, 83, 84, 85, 87, 89, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104], "an": [0, 5, 30, 33, 34, 36, 41, 45, 65, 83, 97, 99, 102, 103, 104], "open": [0, 102, 103], "sourc": [0, 4, 5, 6, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 41, 45, 47, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103], "python": [0, 1, 5, 14, 15, 17, 28, 30, 102, 103, 104], "framework": [0, 103], "aim": [0, 1, 102, 103], "provid": [0, 1, 9, 11, 13, 45, 46, 65, 83, 102, 103, 104], "high": [0, 103], "qualiti": [0, 103], "user": [0, 46, 81, 103, 104], "friendli": [0, 103], "end": [0, 1, 5, 33, 36, 81, 103], "function": [0, 5, 6, 9, 30, 37, 40, 45, 47, 50, 53, 54, 65, 69, 70, 75, 76, 78, 79, 83, 84, 86, 91, 92, 93, 96, 97, 98, 100, 103], "perform": [0, 7, 47, 49, 50, 55, 57, 59, 71, 73, 75, 84, 103], "reconstruct": [0, 1, 16, 18, 19, 23, 24, 26, 34, 42, 46, 59, 72, 75, 103], "task": [0, 1, 7, 46, 71, 73, 74, 83, 102, 103], "neutrino": [0, 1, 49, 59, 69, 78, 103], "telescop": [0, 1, 103], "us": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 20, 25, 27, 28, 33, 34, 36, 37, 38, 39, 41, 42, 45, 46, 49, 50, 52, 57, 58, 59, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 85, 86, 87, 88, 91, 92, 93, 98, 99, 102, 103, 104], "graph": [0, 1, 6, 9, 11, 13, 45, 46, 49, 50, 52, 62, 63, 64, 65, 67, 68, 69, 75, 76, 82, 84, 102, 103], "neural": [0, 1, 103], "network": [0, 1, 56, 103], "gnn": [0, 1, 34, 46, 56, 57, 58, 59, 65, 71, 103, 104], "make": [0, 5, 85, 91, 92, 102, 103, 104], "fast": [0, 103, 104], "easi": [0, 103], "train": [0, 1, 7, 8, 41, 42, 45, 65, 71, 81, 82, 83, 84, 85, 87, 91, 92, 94, 101, 103, 104], "complex": [0, 46, 103], "model": [0, 1, 42, 45, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 87, 89, 91, 92, 94, 101, 103, 104], "can": [0, 1, 7, 9, 11, 13, 15, 17, 20, 39, 45, 50, 65, 78, 79, 85, 87, 89, 91, 92, 102, 103, 104], "event": [0, 1, 7, 9, 11, 13, 22, 37, 39, 41, 45, 50, 65, 69, 75, 76, 78, 83, 84, 85, 91, 103], "state": [0, 96, 103], "art": [0, 103], "arbitrari": [0, 103], "detector": [0, 1, 25, 46, 53, 54, 65, 66, 68, 71, 103], "configur": [0, 1, 7, 9, 46, 70, 71, 78, 86, 88, 89, 91, 92, 94, 99, 103], "infer": [0, 1, 34, 42, 45, 71, 75, 103, 104], "time": [0, 4, 37, 47, 50, 64, 68, 69, 74, 99, 103, 104], "ar": [0, 1, 4, 5, 9, 11, 13, 17, 30, 31, 33, 36, 39, 41, 45, 50, 57, 59, 61, 62, 63, 65, 66, 67, 69, 73, 78, 83, 85, 91, 92, 102, 103, 104], "order": [0, 28, 47, 76, 103], "magnitud": [0, 103], "faster": [0, 103], "than": [0, 6, 75, 84, 99, 103], "tradit": [0, 103], "techniqu": [0, 103], "common": [0, 1, 83, 91, 92, 95, 98, 103], "ml": [0, 1, 103], "develop": [0, 1, 102, 103, 104], "physicist": [0, 1, 103], "wish": [0, 102, 103], "tool": [0, 1, 103], "research": [0, 103], "By": [0, 39, 75, 103], "unit": [0, 5, 64, 98, 102, 103], "both": [0, 17, 75, 79, 103], "group": [0, 5, 33, 36, 50, 103], "increas": [0, 81, 103], "longev": [0, 103], "usabl": [0, 103], "individu": [0, 5, 9, 11, 13, 50, 57, 76, 103], "code": [0, 25, 37, 65, 91, 92, 103], "contribut": [0, 103, 104], "from": [0, 1, 6, 7, 9, 11, 13, 14, 15, 17, 19, 20, 22, 28, 29, 30, 31, 34, 36, 39, 45, 50, 59, 63, 65, 68, 69, 70, 73, 74, 75, 76, 79, 81, 82, 83, 89, 90, 91, 92, 94, 99, 102, 103, 104], "build": [0, 1, 46, 52, 63, 64, 68, 69, 70, 89, 91, 92, 103], "gener": [0, 5, 7, 9, 11, 13, 17, 31, 45, 61, 62, 65, 66, 67, 73, 83, 103], "reusabl": [0, 103], "softwar": [0, 83, 103], "packag": [0, 1, 40, 93, 97, 98, 102, 103, 104], "base": [0, 4, 5, 6, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 33, 34, 36, 39, 41, 45, 47, 49, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 70, 71, 73, 74, 75, 78, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 94, 98, 99, 103], "engin": [0, 103], "best": [0, 81, 102, 103], "practic": [0, 102, 103], "lower": [0, 79, 103], "technic": [0, 103], "threshold": [0, 45, 103], "most": [0, 1, 41, 64, 75, 103, 104], "scientif": [0, 1, 103], "problem": [0, 63, 102, 103], "The": [0, 5, 7, 9, 11, 13, 28, 30, 34, 36, 37, 45, 47, 49, 50, 57, 59, 63, 65, 69, 73, 74, 75, 76, 78, 79, 81, 82, 83, 96, 103], "improv": [0, 1, 87, 103], "classif": [0, 1, 46, 72, 75, 83, 103], "yield": [0, 57, 78, 83, 103], "veri": [0, 41, 103], "accur": [0, 103], "e": [0, 1, 5, 6, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 30, 33, 34, 36, 37, 41, 45, 47, 49, 50, 52, 53, 54, 56, 60, 63, 65, 68, 69, 70, 71, 73, 74, 75, 76, 81, 82, 83, 85, 89, 99, 102, 103, 104], "g": [0, 1, 5, 9, 11, 13, 25, 28, 30, 33, 34, 36, 37, 41, 45, 50, 65, 68, 69, 75, 76, 85, 99, 102, 103, 104], "low": [0, 103], "energi": [0, 4, 34, 74, 75, 85, 103], "observ": [0, 103], "icecub": [0, 1, 16, 29, 30, 46, 49, 51, 59, 98, 103, 104], "here": [0, 65, 102, 103, 104], "implement": [0, 1, 5, 15, 32, 33, 35, 36, 49, 56, 57, 58, 59, 63, 83, 102, 103], "wa": [0, 103], "appli": [0, 9, 11, 13, 15, 50, 56, 57, 58, 59, 60, 71, 73, 75, 93, 103], "oscil": [0, 77, 103], "lead": [0, 103], "signific": [0, 103], "angular": [0, 103], "rang": [0, 75, 103], "relev": [0, 1, 30, 40, 97, 102, 103], "studi": [0, 103], "furthermor": [0, 103], "shown": [0, 103], "could": [0, 102, 103], "muon": [0, 19, 103], "v": [0, 103], "therebi": [0, 1, 91, 92, 103], "effici": [0, 103], "puriti": [0, 103], "sampl": [0, 41, 65, 66, 75, 103], "analysi": [0, 34, 103, 104], "similarli": [0, 30, 103], "ha": [0, 5, 30, 33, 36, 37, 45, 56, 69, 83, 97, 103, 104], "great": [0, 103], "point": [0, 24, 82, 83, 84, 103], "analys": [0, 42, 77, 103], "final": [0, 50, 81, 91, 103], "millisecond": [0, 103], "allow": [0, 42, 46, 50, 81, 89, 94, 103, 104], "whole": [0, 103], "new": [0, 1, 36, 49, 68, 89, 94, 102, 103], "type": [0, 5, 6, 7, 9, 11, 13, 14, 15, 27, 28, 29, 33, 36, 37, 39, 40, 41, 47, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 102, 103], "cosmic": [0, 103], "alert": [0, 103], "which": [0, 9, 11, 13, 15, 16, 25, 29, 34, 41, 45, 47, 50, 57, 65, 66, 69, 70, 73, 78, 83, 84, 87, 103, 104], "were": [0, 103], "previous": [0, 103], "unfeas": [0, 103], "possibl": [0, 28, 102, 103], "identifi": [0, 5, 9, 11, 13, 25, 69, 91, 92, 103], "10": [0, 7, 34, 53, 54, 68, 69, 87, 103], "tev": [0, 103], "monitor": [0, 103], "rate": [0, 81, 103], "direct": [0, 59, 69, 73, 74, 75, 80, 82, 103], "real": [0, 103], "thi": [0, 3, 5, 7, 9, 11, 13, 15, 17, 30, 33, 36, 37, 40, 45, 46, 50, 57, 64, 65, 66, 68, 71, 73, 74, 75, 76, 78, 79, 81, 83, 84, 85, 89, 91, 92, 94, 99, 102, 103, 104], "enabl": [0, 3, 103], "first": [0, 64, 81, 84, 102, 103], "ever": [0, 103], "despit": [0, 103], "larg": [0, 83, 103], "background": [0, 103], "origin": [0, 78, 103], "compris": [0, 103], "number": [0, 5, 9, 11, 13, 33, 34, 36, 41, 49, 50, 56, 57, 58, 59, 60, 63, 64, 66, 68, 69, 73, 74, 75, 81, 84, 87, 103], "modul": [0, 3, 9, 30, 34, 42, 45, 46, 49, 51, 55, 61, 62, 64, 65, 66, 67, 70, 72, 77, 80, 86, 88, 91, 92, 93, 94, 98, 103], "necessari": [0, 7, 28, 102, 103], "workflow": [0, 103], "ingest": [0, 1, 3, 51, 103], "raw": [0, 68, 69, 103], "data": [0, 1, 4, 5, 6, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 65, 66, 71, 75, 76, 82, 84, 87, 89, 91, 94, 98, 101, 103, 104], "domain": [0, 1, 3, 42, 103], "specif": [0, 1, 3, 5, 9, 11, 13, 16, 30, 32, 33, 35, 36, 37, 42, 47, 50, 51, 52, 53, 54, 55, 60, 63, 65, 68, 71, 72, 73, 74, 75, 83, 102, 103, 104], "format": [0, 1, 3, 5, 9, 28, 33, 36, 79, 91, 102, 103, 104], "deploi": [0, 1, 42, 45, 103], "chain": [0, 1, 42, 46, 71, 103, 104], "illustr": [0, 102, 103], "figur": [0, 79, 103], "level": [0, 9, 11, 13, 25, 31, 37, 47, 50, 99, 103, 104], "overview": [0, 103], "typic": [0, 28, 103], "convert": [0, 1, 3, 5, 28, 31, 33, 36, 39, 103, 104], "industri": [0, 3, 103], "standard": [0, 3, 4, 5, 31, 33, 36, 41, 53, 54, 65, 66, 68, 71, 75, 87, 102, 103], "intermedi": [0, 1, 3, 5, 9, 33, 36, 56, 103, 104], "file": [0, 1, 3, 5, 9, 11, 13, 15, 28, 31, 33, 36, 39, 40, 45, 65, 70, 78, 81, 83, 84, 87, 88, 89, 90, 91, 92, 97, 99, 103, 104], "read": [0, 3, 9, 11, 13, 28, 52, 57, 71, 72, 103, 104], "simpl": [0, 46, 103], "physic": [0, 1, 15, 29, 30, 42, 45, 46, 72, 75, 103], "orient": [0, 46, 103], "compon": [0, 1, 46, 49, 50, 70, 71, 103], "manag": [0, 15, 80, 103], "experi": [0, 1, 80, 103], "log": [0, 1, 74, 80, 81, 83, 86, 103, 104], "deploy": [0, 1, 43, 45, 65, 101, 103], "modular": [0, 46, 103], "subclass": [0, 46, 103], "torch": [0, 9, 11, 13, 46, 49, 65, 66, 70, 98, 103, 104], "nn": [0, 46, 49, 63, 66, 103], "mean": [0, 5, 9, 11, 13, 33, 36, 46, 57, 59, 69, 83, 92, 103], "onli": [0, 1, 9, 11, 13, 46, 50, 75, 78, 85, 89, 92, 94, 98, 103, 104], "need": [0, 7, 28, 46, 70, 83, 96, 103, 104], "import": [0, 1, 37, 46, 86, 103], "few": [0, 46, 102, 103], "exist": [0, 9, 11, 13, 34, 36, 37, 46, 82, 91, 103], "purpos": [0, 46, 83, 103], "built": [0, 46, 65, 103], "them": [0, 1, 28, 46, 57, 75, 78, 103, 104], "togeth": [0, 46, 63, 71, 103], "form": [0, 46, 73, 89, 94, 103], "complet": [0, 46, 71, 103], "extend": [0, 1, 103], "suit": [0, 75, 103], "through": [0, 73, 74, 75, 83, 103], "layer": [0, 46, 48, 50, 56, 57, 58, 59, 73, 74, 75, 103], "connect": [0, 7, 63, 64, 65, 68, 83, 103], "etc": [0, 83, 99, 103], "optimis": [0, 1, 103], "differ": [0, 9, 11, 13, 15, 66, 71, 84, 102, 103, 104], "track": [0, 15, 19, 74, 102, 103], "These": [0, 65, 102, 103], "prepar": [0, 7, 83, 103], "satisfi": [0, 103], "o": [0, 75, 103], "load": [0, 6, 9, 40, 70, 89, 91, 103], "requir": [0, 21, 37, 73, 83, 91, 92, 94, 103, 104], "when": [0, 5, 9, 11, 13, 28, 31, 33, 36, 37, 45, 49, 57, 59, 82, 99, 102, 103, 104], "batch": [0, 6, 34, 47, 49, 50, 71, 76, 84, 87, 103], "do": [0, 45, 83, 91, 92, 102, 103, 104], "predict": [0, 7, 20, 24, 26, 34, 45, 56, 71, 73, 75, 83, 84, 103], "either": [0, 7, 9, 11, 13, 83, 103, 104], "contain": [0, 5, 9, 11, 13, 28, 29, 33, 34, 36, 45, 57, 61, 62, 64, 65, 66, 67, 69, 70, 75, 83, 85, 87, 103, 104], "imag": [0, 1, 102, 103, 104], "portabl": [0, 103], "depend": [0, 103, 104], "free": [0, 83, 103], "split": [0, 7, 31, 47, 103], "up": [0, 5, 33, 36, 45, 102, 103, 104], "interfac": [0, 77, 91, 92, 103, 104], "block": [0, 1, 103], "pre": [0, 52, 65, 82, 102, 103], "directli": [0, 15, 103], "while": [0, 17, 81, 103], "continu": [0, 83, 103], "expand": [0, 103], "": [0, 5, 6, 7, 9, 11, 13, 15, 28, 36, 39, 52, 56, 57, 65, 71, 75, 76, 81, 85, 87, 91, 92, 99, 100, 103, 104], "capabl": [0, 103], "project": [0, 102, 103], "receiv": [0, 103], "fund": [0, 103], "european": [0, 103], "union": [0, 6, 7, 9, 11, 13, 17, 28, 30, 45, 47, 49, 50, 57, 65, 66, 71, 75, 91, 94, 97, 103], "horizon": [0, 103], "2020": [0, 103], "innov": [0, 103], "programm": [0, 103], "under": [0, 103], "mari": [0, 103], "sk\u0142odowska": [0, 103], "curi": [0, 103], "grant": [0, 83, 103], "agreement": [0, 102, 103], "No": [0, 103], "890778": [0, 103], "work": [0, 4, 29, 102, 103, 104], "rasmu": [0, 58, 103], "\u00f8rs\u00f8e": [0, 103], "partli": [0, 103], "punch4nfdi": [0, 103], "consortium": [0, 103], "support": [0, 30, 102, 103, 104], "dfg": [0, 103], "nfdi": [0, 103], "39": [0, 103, 104], "1": [0, 5, 7, 9, 28, 33, 36, 41, 47, 50, 57, 59, 63, 64, 66, 69, 73, 74, 75, 76, 81, 83, 84, 85, 91, 103, 104], "germani": [0, 103], "conveni": [1, 102, 104], "collabor": 1, "solv": [1, 102], "It": [1, 28, 37, 45, 69, 73, 75, 102], "leverag": 1, "advanc": [1, 50], "machin": [1, 104], "learn": [1, 45, 73, 75, 81, 104], "without": [1, 63, 68, 78, 83, 104], "have": [1, 5, 17, 33, 36, 37, 41, 50, 65, 69, 75, 102, 104], "expert": 1, "themselv": [1, 91, 92], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 5, 9, 11, 13, 15, 17, 31, 33, 36, 37, 45, 49, 50, 52, 57, 60, 64, 65, 70, 83, 89, 90, 91, 92, 93, 94, 99, 102, 104], "streamlin": 1, "process": [1, 5, 15, 45, 52, 57, 59, 102, 104], "transform": [1, 50, 59, 75, 85], "extens": [1, 97], "basic": 1, "across": [1, 2, 9, 11, 13, 30, 38, 50, 71, 83, 86, 87, 88, 99], "variou": 1, "easili": 1, "architectur": [1, 56, 57, 58, 59], "main": [1, 55, 65, 71, 102, 104], "featur": [1, 3, 4, 5, 9, 11, 13, 16, 34, 45, 49, 50, 52, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 73, 76, 84, 91, 102], "i3": [1, 5, 15, 29, 30, 31, 33, 36, 40, 45, 97, 104], "more": [1, 9, 37, 40, 91, 92, 99], "index": [1, 5, 9, 11, 13, 30, 37, 50, 52, 64, 69, 81], "sqlite": [1, 3, 7, 8, 13, 34, 36, 37, 39, 104], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 5, 9, 52, 60, 65, 75, 90], "awai": 1, "detail": [1, 81, 104], "expos": 1, "physicst": 1, "what": [1, 65, 102], "i3modul": [1, 42, 45], "includ": [1, 71, 78, 83, 89, 102], "docker": 1, "run": [1, 39], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 8, 14, 42, 46, 61, 86], "dataset": [1, 3, 6, 7, 10, 11, 12, 13, 19, 41, 65, 87, 91], "extractor": [1, 3, 5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 45], "parquet": [1, 3, 8, 11, 33, 39, 53, 54, 104], "util": [1, 3, 14, 28, 29, 30, 37, 39, 40, 41, 46, 61, 80, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101], "constant": [1, 3, 101], "dataconvert": [1, 3, 33, 36], "dataload": [1, 3, 7, 34, 65, 71, 84, 94], "datamodul": [1, 3], "filter": [1, 3, 99], "pipelin": [1, 3], "coarsen": [1, 46, 50], "standard_model": [1, 46], "pisa": [1, 21, 34, 78, 79, 98, 101, 104], "fit": [1, 7, 71, 77, 79, 83, 85, 94], "plot": [1, 77], "callback": [1, 71, 80], "label": [1, 9, 19, 22, 56, 65, 71, 75, 79, 80, 84], "loss_funct": [1, 75, 80], "weight_fit": [1, 80], "config": [1, 6, 41, 78, 81, 83, 86, 87, 89, 90, 91, 92, 93, 94], "argpars": [1, 86], "decor": [1, 5, 86, 98], "deprecation_tool": [1, 86], "filesi": [1, 86], "math": [1, 86], "submodul": [1, 3, 8, 10, 12, 14, 27, 32, 35, 38, 43, 46, 48, 51, 55, 61, 62, 67, 72, 77, 80, 86, 88, 93], "global": [2, 4, 57, 59, 70], "i3extractor": [3, 5, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 33, 36], "i3featureextractor": [3, 4, 14, 36, 45], "i3genericextractor": [3, 14, 36], "i3hybridrecoextractor": [3, 14], "i3ntmuonlabelsextractor": [3, 14], "i3particleextractor": [3, 14], "i3pisaextractor": [3, 14], "i3quesoextractor": [3, 14], "i3retroextractor": [3, 14], "i3splinempeextractor": [3, 14], "i3truthextractor": [3, 4, 14], "i3tumextractor": [3, 14], "parquet_dataconvert": [3, 32], "sqlite_dataconvert": [3, 35], "sqlite_util": [3, 35], "parquet_to_sqlit": [3, 38], "random": [3, 9, 11, 13, 38, 41, 91], "string_selection_resolv": [3, 38], "truth": [3, 4, 9, 11, 13, 16, 25, 34, 37, 65, 75, 84, 85, 91], "fileset": [3, 5], "init_global_index": [3, 5], "cache_output_fil": [3, 5], "collate_fn": [3, 6, 80, 84], "do_shuffl": [3, 6], "graphnetdatamodul": [3, 7], "i3filt": [3, 5, 31, 33, 36], "nullspliti3filt": [3, 31], "i3filtermask": [3, 31], "insqlitepipelin": [3, 34], "class": [4, 5, 6, 7, 8, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 39, 41, 45, 47, 49, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 70, 71, 73, 74, 75, 78, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 99, 102], "object": [4, 5, 9, 11, 13, 15, 17, 28, 30, 47, 50, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 70, 71, 73, 74, 75, 78, 81, 83, 84, 87, 89, 91, 92, 94, 99], "namespac": [4, 70, 91, 92], "name": [4, 5, 6, 9, 11, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 36, 37, 39, 45, 52, 65, 66, 68, 75, 78, 82, 85, 87, 89, 91, 92, 93, 94, 99, 102, 104], "icecube86": [4, 51, 53], "dom_x": [4, 45, 53, 68], "dom_i": [4, 45, 53, 68], "dom_z": [4, 45, 53, 68], "dom_tim": 4, "charg": [4, 45, 68, 69, 83], "rde": 4, "pmt_area": 4, "deepcor": [4, 16, 53], "upgrad": [4, 16, 53, 104], "string": [4, 5, 9, 11, 13, 28, 33, 36, 41, 50, 52, 53, 65, 89], "pmt_number": 4, "dom_numb": 4, "pmt_dir_x": 4, "pmt_dir_i": 4, "pmt_dir_z": 4, "dom_typ": 4, "prometheu": [4, 46, 51], "sensor_pos_x": [4, 54], "sensor_pos_i": [4, 54], "sensor_pos_z": [4, 54], "t": [4, 30, 37, 79, 81, 83, 104], "kaggl": [4, 49, 53, 59], "x": [4, 5, 25, 33, 36, 49, 50, 64, 68, 69, 75, 76, 79, 83, 85], "y": [4, 25, 64, 76, 79, 104], "z": [4, 5, 25, 33, 36, 64, 76, 104], "auxiliari": 4, "energy_track": [4, 74], "energy_cascad": [4, 74], "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": [4, 74, 82], "zenith": [4, 74, 82], "pid": [4, 41, 91], "elast": 4, "sim_typ": 4, "interaction_typ": 4, "interaction_tim": [4, 74], "inelast": [4, 74], "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "i3_fil": [5, 15], "str": [5, 6, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 41, 45, 49, 50, 52, 53, 54, 57, 59, 65, 66, 68, 69, 70, 71, 75, 78, 81, 82, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 99], "gcd_file": [5, 15, 45], "paramet": [5, 6, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 41, 45, 47, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100], "output_fil": [5, 33, 36], "global_index": 5, "avail": [5, 17, 34, 73, 74, 75, 98], "pool": [5, 46, 47, 48, 57, 59], "worker": [5, 33, 34, 36, 40, 87, 99], "return": [5, 6, 7, 9, 11, 13, 15, 28, 29, 30, 33, 36, 37, 39, 40, 41, 47, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100], "none": [5, 6, 7, 9, 11, 13, 15, 17, 25, 29, 30, 31, 33, 34, 36, 37, 39, 41, 45, 49, 50, 57, 59, 64, 65, 66, 68, 70, 71, 75, 78, 81, 83, 84, 85, 87, 89, 90, 91, 93, 97, 99], "synchron": 5, "list": [5, 6, 7, 9, 11, 13, 15, 17, 25, 28, 30, 31, 33, 34, 36, 37, 39, 40, 41, 45, 47, 49, 50, 52, 57, 59, 63, 64, 65, 66, 68, 69, 70, 71, 75, 76, 79, 81, 84, 85, 91, 93, 94, 97, 99], "process_method": 5, "cach": 5, "output": [5, 33, 36, 39, 56, 57, 58, 60, 68, 69, 71, 73, 74, 75, 78, 85, 91, 92, 104], "typevar": 5, "f": [5, 50], "bound": [5, 79], "callabl": [5, 6, 9, 30, 49, 50, 52, 53, 54, 65, 75, 84, 85, 89, 91, 92, 93, 98], "ani": [5, 6, 7, 9, 11, 13, 28, 29, 30, 31, 33, 36, 45, 47, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 70, 71, 73, 74, 75, 79, 81, 83, 85, 87, 89, 90, 91, 92, 93, 94, 99, 104], "outdir": [5, 33, 34, 36, 39, 78], "gcd_rescu": [5, 33, 36, 97], "nb_files_to_batch": [5, 33, 36], "sequential_batch_pattern": [5, 33, 36], "input_file_batch_pattern": [5, 33, 36], "index_column": [5, 9, 11, 13, 33, 36, 37, 41, 78, 84, 85, 91], "icetray_verbos": [5, 33, 36], "i3_filt": [5, 33, 36], "abc": [5, 9, 15, 34, 70, 82, 85, 90, 91, 92], "logger": [5, 7, 9, 15, 31, 34, 39, 41, 45, 63, 70, 71, 82, 85, 86, 99, 104], "construct": [5, 6, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 33, 36, 39, 41, 47, 48, 49, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 81, 82, 83, 84, 85, 87, 90, 91, 92, 99], "regular": [5, 30, 33, 36], "express": [5, 33, 36, 70, 83], "accord": [5, 33, 36, 47, 50, 63, 65, 66, 69], "match": [5, 33, 36, 85, 97, 100], "certain": [5, 33, 36, 39, 78], "pattern": [5, 33, 36], "wildcard": [5, 33, 36], "same": [5, 30, 33, 36, 37, 47, 50, 69, 73, 76, 81, 93, 99], "input": [5, 9, 11, 13, 33, 34, 36, 45, 53, 56, 57, 58, 59, 60, 65, 66, 68, 73, 75, 76, 89, 94, 96], "replac": [5, 33, 36, 89, 91, 92, 94, 96], "period": [5, 33, 36], "special": [5, 17, 33, 36, 45, 76], "interpret": [5, 33, 36, 73], "liter": [5, 33, 36], "charact": [5, 33, 36], "regex": [5, 33, 36], "For": [5, 30, 33, 36, 81], "instanc": [5, 9, 15, 25, 30, 33, 36, 45, 65, 70, 78, 82, 84, 90, 92, 104], "A": [5, 7, 9, 31, 33, 34, 36, 45, 50, 65, 66, 69, 73, 75, 76, 78, 83, 85, 89, 91, 92, 94, 104], "_": [5, 33, 36], "0": [5, 7, 9, 11, 13, 33, 36, 41, 45, 47, 50, 56, 57, 59, 63, 64, 66, 69, 76, 78, 79, 83, 84, 91], "9": [5, 7, 33, 36], "5": [5, 9, 11, 13, 33, 36, 41, 87, 104], "zst": [5, 33, 36], "find": [5, 33, 36, 64, 97], "whose": [5, 33, 36, 45], "one": [5, 9, 33, 36, 37, 45, 50, 91, 92, 97, 102, 104], "capit": [5, 33, 36], "letter": [5, 33, 36], "follow": [5, 33, 36, 57, 71, 83, 85, 102, 104], "underscor": [5, 33, 36], "five": [5, 33, 36], "upgrade_genie_step4_141020_a_000000": [5, 33, 36], "upgrade_genie_step4_141020_a_000001": [5, 33, 36], "upgrade_genie_step4_141020_a_000008": [5, 33, 36], "upgrade_genie_step4_141020_a_000009": [5, 33, 36], "would": [5, 33, 36, 102], "upgrade_genie_step4_141020_a_00000x": [5, 33, 36], "suffix": [5, 33, 36], "upgrade_genie_step4_141020_a_000010": [5, 33, 36], "separ": [5, 28, 33, 36, 64, 81, 104], "upgrade_genie_step4_141020_a_00001x": [5, 33, 36], "int": [5, 6, 7, 9, 11, 13, 19, 22, 31, 33, 34, 36, 41, 49, 50, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 78, 81, 83, 84, 85, 87, 91, 94, 99], "properti": [5, 7, 9, 15, 20, 30, 50, 52, 60, 68, 71, 75, 82, 90, 99], "file_suffix": [5, 33, 36], "execut": [5, 37], "method": [5, 7, 9, 11, 13, 15, 27, 28, 29, 30, 33, 36, 45, 49, 50, 52, 74, 83, 85], "set": [5, 7, 17, 68, 69, 75, 84, 102], "inherit": [5, 15, 30, 52, 68, 83, 99], "path": [5, 9, 11, 13, 37, 40, 45, 65, 70, 78, 79, 81, 84, 87, 89, 90, 91, 97, 104], "correspond": [5, 9, 11, 13, 28, 30, 36, 40, 57, 65, 69, 85, 89, 91, 92, 94, 97, 104], "gcd": [5, 15, 29, 40, 45, 97], "save_data": [5, 33, 36], "save": [5, 15, 28, 33, 36, 37, 70, 78, 81, 83, 84, 85, 89, 90, 91, 92, 104], "ordereddict": [5, 33, 36], "extract": [5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 36, 39, 40, 45, 75], "merge_fil": [5, 33, 36], "input_fil": [5, 33, 36], "merg": [5, 33, 36, 83, 104], "result": [5, 33, 36, 50, 69, 81, 83, 84, 93, 104], "option": [5, 7, 9, 11, 13, 25, 33, 34, 36, 45, 49, 50, 57, 59, 64, 65, 66, 68, 70, 75, 78, 79, 81, 85, 86, 87, 89, 91, 97, 104], "default": [5, 7, 9, 11, 13, 17, 25, 28, 33, 34, 36, 37, 39, 45, 49, 50, 56, 57, 58, 59, 63, 64, 65, 66, 68, 70, 75, 78, 79, 81, 82, 83, 85, 87, 89, 91, 97], "current": [5, 33, 36, 41, 81, 102, 104], "rais": [5, 9, 17, 33, 70, 89, 94], "notimplementederror": [5, 33], "If": [5, 9, 17, 31, 33, 34, 36, 65, 68, 69, 70, 75, 78, 81, 85, 102, 104], "been": [5, 33, 45, 83, 102], "backend": [5, 10, 12, 33, 36], "question": 5, "get_map_funct": 5, "nb_file": 5, "map": [5, 9, 11, 13, 16, 17, 36, 37, 45, 53, 54, 65, 66, 75, 89, 91, 92, 94], "pure": [5, 14, 15, 17, 30], "multiprocess": [5, 104], "tupl": [5, 9, 11, 13, 29, 30, 49, 57, 59, 69, 75, 76, 78, 79, 84, 87, 96], "remov": [6, 65, 84, 87], "less": [6, 84], "two": [6, 57, 78, 81, 83, 84], "dom": [6, 9, 11, 13, 47, 50, 68, 69, 84], "hit": [6, 84], "should": [6, 9, 11, 13, 15, 28, 41, 49, 50, 65, 66, 83, 84, 89, 91, 92, 94, 102, 104], "occur": [6, 84], "product": [6, 84], "selection_nam": 6, "check": [6, 29, 30, 31, 36, 37, 87, 97, 98, 102, 104], "whether": [6, 29, 30, 36, 37, 57, 59, 70, 83, 93, 97, 98], "shuffl": [6, 7, 40, 84], "select": [6, 7, 9, 11, 13, 22, 41, 84, 85, 91, 102], "bool": [6, 29, 30, 31, 36, 37, 41, 45, 57, 59, 65, 68, 69, 70, 71, 78, 81, 83, 84, 85, 87, 93, 96, 97, 98, 99], "batch_siz": [6, 34, 76, 84], "num_work": [6, 84], "persistent_work": [6, 84], "prefetch_factor": 6, "kwarg": [6, 9, 11, 13, 31, 47, 49, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 70, 71, 73, 74, 75, 81, 83, 85, 89, 91, 92, 99], "t_co": 6, "classmethod": [6, 9, 70, 83, 89, 90], "from_dataset_config": 6, "datasetconfig": [6, 9, 41, 88, 91], "dict": [6, 7, 9, 17, 28, 30, 34, 36, 52, 53, 54, 65, 66, 70, 71, 78, 79, 81, 84, 87, 89, 91, 92, 93, 94, 96], "dataset_refer": 7, "dataset_arg": 7, "test_select": [7, 91], "train_dataloader_kwarg": 7, "validation_dataloader_kwarg": 7, "test_dataloader_kwarg": 7, "train_val_split": 7, "split_se": 7, "lightningdatamodul": 7, "creat": [7, 34, 36, 37, 65, 68, 89, 90, 94, 102, 104], "sqlitedataset": [7, 12, 13], "parquetdataset": [7, 10, 11], "non": [7, 28, 30, 36, 37, 83], "instanti": [7, 92], "refer": [7, 15, 54, 91], "argument": [7, 39, 81, 85, 87, 89, 91, 92, 94], "id": [7, 39, 52, 65, 84], "valid": [7, 30, 41, 71, 75, 81, 83, 87, 89, 94], "test": [7, 41, 75, 84, 91, 98, 102], "ratio": 7, "42": [7, 104], "seed": [7, 9, 11, 13, 41, 65, 66, 84, 91], "prepare_data": 7, "setup": [7, 81, 104], "stage": [7, 81], "lightn": [7, 81], "train_dataload": [7, 71], "val_dataload": [7, 71], "test_dataload": 7, "teardown": 7, "cleanup": 7, "shutdown": 7, "procedur": 7, "close": 7, "after": [7, 49, 57, 59, 81, 87, 91], "overrid": [7, 81], "parquet_dataset": [8, 10], "sqlite_dataset": [8, 12], "columnmissingexcept": [8, 9], "load_modul": [8, 9, 70], "parse_graph_definit": [8, 9], "ensembledataset": [8, 9, 91], "except": 9, "indic": [9, 41, 50, 64, 69, 81, 87, 102], "miss": 9, "column": [9, 11, 13, 37, 45, 52, 63, 65, 66, 68, 69, 71, 73, 74, 75, 76, 78, 85], "class_nam": [9, 31, 92, 99], "cfg": 9, "graphdefinit": [9, 11, 13, 45, 61, 62, 65, 66, 67, 84, 102], "arg": [9, 11, 13, 31, 47, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 68, 70, 71, 73, 74, 75, 83, 87, 89, 99], "pulsemap": [9, 11, 13, 16, 36, 45, 84, 91], "puls": [9, 11, 13, 16, 17, 29, 30, 36, 37, 45, 47, 50, 65, 68, 69, 76], "seri": [9, 11, 13, 16, 17, 29, 30, 37, 45], "node": [9, 11, 13, 46, 47, 50, 56, 57, 59, 61, 62, 63, 65, 66, 76], "multipl": [9, 11, 13, 15, 69, 81, 91, 99], "store": [9, 11, 13, 15, 34, 37, 78, 82], "ad": [9, 11, 13, 16, 57, 65, 68, 69, 78], "attribut": [9, 11, 13, 47, 75], "node_truth": [9, 11, 13, 84, 91], "event_no": [9, 11, 13, 37, 41, 85, 91], "uniqu": [9, 11, 13, 37, 39, 68, 91], "indici": [9, 11, 13, 29, 41, 83], "tabl": [9, 11, 13, 15, 34, 36, 37, 52, 65, 78, 85], "truth_tabl": [9, 11, 13, 78, 84, 85, 91], "inform": [9, 11, 13, 15, 17, 25, 65, 68, 69, 79], "node_truth_t": [9, 11, 13, 84, 91], "string_select": [9, 11, 13, 84, 91], "subset": [9, 11, 13, 49, 57, 59], "given": [9, 11, 13, 36, 50, 63, 75, 85, 87], "queri": [9, 11, 13, 37, 41], "pass": [9, 11, 13, 49, 56, 57, 58, 59, 60, 65, 71, 75, 81, 83, 85, 102], "dtype": [9, 11, 13, 65, 66, 100], "float32": [9, 11, 13, 65, 66], "tensor": [9, 11, 13, 47, 49, 50, 52, 56, 57, 58, 59, 60, 64, 68, 71, 75, 76, 83, 96, 100], "loss_weight_t": [9, 11, 13, 84, 91], "per": [9, 11, 13, 17, 37, 50, 75, 83, 85], "loss": [9, 11, 13, 65, 71, 75, 81, 83, 87], "weight": [9, 11, 13, 45, 65, 75, 78, 83, 85, 92, 104], "loss_weight_column": [9, 11, 13, 65, 84, 91], "also": [9, 11, 13, 41, 91], "assign": [9, 11, 13, 39, 47, 50, 102], "loss_weight_default_valu": [9, 11, 13, 65, 91], "float": [9, 11, 13, 45, 56, 63, 64, 65, 66, 71, 78, 79, 81, 83, 84, 91], "note": [9, 11, 13, 69, 79, 92], "valu": [9, 11, 13, 25, 28, 36, 37, 50, 64, 65, 66, 79, 82, 83, 87, 89], "specifi": [9, 11, 13, 41, 47, 69, 75, 79, 81, 104], "case": [9, 11, 13, 17, 45, 50, 69, 75, 104], "That": [9, 11, 13, 57, 74, 82], "ignor": [9, 11, 13, 30], "resolv": [9, 11, 13, 41], "10000": [9, 11, 13, 41], "20": [9, 11, 13, 41, 99], "graph_definit": [9, 11, 13, 45, 46, 61, 84, 91], "defin": [9, 11, 13, 41, 45, 50, 61, 62, 63, 65, 67, 69, 84, 89, 91, 92, 94], "represent": [9, 11, 13, 30, 50, 66], "from_config": [9, 70, 90, 91, 92], "concaten": [9, 28, 57], "query_t": [9, 11, 13], "sequential_index": [9, 11, 13], "some": [9, 11, 13, 65, 69], "out": [9, 57, 71, 72, 83, 99, 102, 104], "sequenti": 9, "len": [9, 69], "self": [9, 65, 78, 89, 94], "_may_": 9, "_indic": 9, "entir": [9, 70], "impos": 9, "befor": [9, 57, 64, 75, 81], "scalar": [9, 76, 83], "length": [9, 30, 69, 81], "element": [9, 28, 30, 71, 76, 84, 93], "present": [9, 31, 87, 97, 98], "add_label": 9, "fn": [9, 30, 89, 93], "kei": [9, 17, 28, 29, 30, 36, 37, 50, 82, 91, 92], "add": [9, 57, 87, 96, 102, 104], "custom": [9, 65, 81], "concatdataset": 9, "singl": [9, 15, 50, 57, 69, 82, 91, 92], "collect": [9, 14, 15, 27, 83, 100], "iter": 9, "pytorch": [11, 13, 81, 104], "databas": [13, 34, 36, 37, 39, 78, 85, 104], "i3fram": [14, 15, 17, 29, 30, 45], "frame": [14, 15, 17, 27, 30, 31, 36, 45], "i3extractorcollect": [14, 15], "i3featureextractoricecube86": [14, 16], "i3featureextractoricecubedeepcor": [14, 16], "i3featureextractoricecubeupgrad": [14, 16], "i3pulsenoisetruthflagicecubeupgrad": [14, 16], "i3galacticplanehybridrecoextractor": [14, 18], "i3ntmuonlabelextractor": [14, 19], "i3splinempeicextractor": [14, 24], "__call__": 15, "icetrai": [15, 29, 30, 45, 98], "keep": 15, "proven": 15, "set_fil": 15, "being": [15, 45, 73, 75], "get": [15, 29, 52, 81, 84, 104], "treat": 15, "86": [16, 53], "nois": [16, 29, 45], "flag": [16, 45], "exclude_kei": 17, "dynam": [17, 49, 57, 58, 59], "pars": [17, 79, 86, 87, 88, 89, 94], "call": [17, 30, 36, 50, 75, 78, 81, 85, 99], "tri": [17, 30], "automat": [17, 65, 83, 102], "cast": [17, 30], "done": [17, 50, 99, 102], "recurs": [17, 30, 93, 97], "each": [17, 28, 30, 37, 39, 40, 47, 50, 53, 54, 57, 59, 63, 65, 66, 68, 69, 73, 75, 76, 78, 79, 81, 84, 97], "look": [17, 104], "member": [17, 30, 68, 91, 92, 99], "variabl": [17, 30, 57, 68, 69, 76, 85, 99], "signatur": [17, 30], "similar": [17, 30, 104], "handl": [17, 83, 87, 96, 99], "hand": 17, "mc": [17, 36, 37], "tree": [17, 36], "trigger": 17, "exclud": [17, 39, 104], "valueerror": [17, 70], "hybrid": 18, "galatict": 18, "plane": [18, 83], "tum": [19, 26], "dnn": [19, 26], "padding_valu": [19, 22], "northeren": 19, "i3particl": 20, "other": [20, 37, 63, 83, 102], "algorithm": 20, "comparison": [20, 83], "quantiti": [21, 75, 76], "queso": 22, "retro": [23, 34], "splinemp": 24, "border": 25, "mctree": [25, 29], "ndarrai": [25, 65, 69, 85], "arrai": [25, 28, 68, 69], "boundari": 25, "volum": 25, "coordin": [25, 52, 64, 68, 76], "particl": [25, 37, 82], "start": [25, 102, 104], "stop": [25, 81, 87], "within": [25, 47, 49, 50, 57, 63], "hard": 25, "i3mctre": 25, "flatten_nested_dictionari": [27, 28], "serialis": [27, 28], "transpose_list_of_dict": [27, 28], "frame_is_montecarlo": [27, 29], "frame_is_nois": [27, 29], "get_om_keys_and_pulseseri": [27, 29], "is_boost_enum": [27, 30], "is_boost_class": [27, 30], "is_icecube_class": [27, 30], "is_typ": [27, 30], "is_method": [27, 30], "break_cyclic_recurs": [27, 30], "get_member_vari": [27, 30], "cast_object_to_pure_python": [27, 30], "cast_pulse_series_to_pure_python": [27, 30], "manipul": [28, 61, 62, 67], "obj": [28, 30, 93], "parent_kei": 28, "flatten": 28, "nest": 28, "dictionari": [28, 29, 30, 34, 36, 65, 66, 78, 79, 89, 91, 92, 94], "exampl": [28, 41, 47, 50, 69, 83, 91, 92, 104], "d": [28, 64, 65, 68, 102], "b": [28, 47, 50], "c": [28, 50, 64, 83, 104], "2": [28, 50, 57, 59, 63, 66, 69, 74, 76, 78, 79, 83, 91, 104], "a__b": 28, "applic": 28, "combin": [28, 91], "parent": 28, "__": [28, 30], "nester": 28, "json": [28, 91], "therefor": 28, "we": [28, 30, 41, 69, 102, 104], "outer": 28, "abl": [28, 104], "de": 28, "transpos": 28, "mont": 29, "carlo": 29, "simul": [29, 45], "pulseseri": 29, "calibr": [29, 30], "gcd_dict": [29, 30], "p": [29, 36, 83], "om": [29, 30], "dataclass": 29, "i3calibr": 29, "indicesfor": 29, "boost": 30, "enum": 30, "ensur": [30, 40, 83, 99, 102, 104], "isn": 30, "return_discard": 30, "mangl": 30, "take": [30, 36, 50, 102], "mainli": 30, "cannot": [30, 89, 94], "trivial": [30, 75], "doe": [30, 73, 75, 92], "try": 30, "equival": 30, "its": 30, "like": [30, 50, 64, 75, 76, 83, 100, 102], "otherwis": [30, 83], "itself": [30, 75], "deem": 30, "wai": [30, 41, 102, 104], "optic": 30, "found": [30, 69, 83], "log_fold": [31, 99], "skip": [31, 57], "null": [31, 37], "filter_nam": 31, "filter_ani": 31, "filtermask": 31, "initi": [31, 64], "true": [31, 36, 37, 45, 59, 65, 68, 78, 81, 83, 85, 91, 92, 94, 97], "kept": 31, "fals": [31, 45, 57, 65, 70, 78, 81, 83, 85, 91], "parquetdataconvert": [32, 33], "module_dict": 34, "devic": 34, "retro_table_nam": 34, "n_worker": [34, 78], "pipeline_nam": 34, "initialis": [34, 92], "gnn_module_for_energy_regress": 34, "modulelist": 34, "comput": [34, 64, 71, 75, 76, 83, 89, 91, 92, 94], "directori": [34, 39, 78, 81, 97], "100": [34, 104], "size": [34, 49, 50, 57, 58, 59, 87], "alreadi": [34, 37, 104], "error": [34, 83, 99, 102], "prompt": 34, "avoid": [34, 99, 102], "overwrit": [34, 81], "sqlitedataconvert": [35, 36, 104], "construct_datafram": [35, 36], "is_pulse_map": [35, 36], "is_mc_tre": [35, 36], "database_exist": [35, 37], "database_table_exist": [35, 37], "run_sql_cod": [35, 37], "save_to_sql": [35, 37], "attach_index": [35, 37], "create_t": [35, 37], "create_table_and_save_to_sql": [35, 37], "db": [36, 84], "max_table_s": 36, "maximum": [36, 50, 69, 75, 87], "row": [36, 37, 69], "exce": 36, "limit": [36, 83], "any_pulsemap_is_non_empti": 36, "data_dict": 36, "empti": [36, 45], "retriev": [36, 52], "splitinicepuls": 36, "least": [36, 102, 104], "becaus": [36, 40], "instead": [36, 83], "alwai": [36, 84], "panda": [36, 41, 85], "datafram": [36, 37, 41, 52, 71, 78, 84, 85], "table_nam": [36, 37], "database_path": [37, 78, 85], "df": 37, "must": [37, 47, 81, 85, 102], "attach": 37, "default_typ": 37, "integer_primary_kei": 37, "NOT": [37, 83], "integ": [37, 57, 58, 83], "primari": 37, "Such": 37, "appropri": [37, 75], "expect": [37, 41, 45, 65, 68], "doesn": 37, "parquettosqliteconvert": [38, 39], "pairwise_shuffl": [38, 40], "stringselectionresolv": [38, 41], "parquet_path": 39, "mc_truth_tabl": 39, "excluded_field": 39, "everi": [39, 104], "field": [39, 79, 82, 89, 91, 92, 94, 96], "One": [39, 79], "choos": 39, "exclude_field": 39, "database_nam": 39, "convers": [39, 104], "rng": 40, "relat": [40, 97], "i3_list": [40, 97], "gcd_list": [40, 97], "correpond": 40, "handi": 40, "even": 40, "files_list": 40, "gcd_shuffl": 40, "i3_shuffl": 40, "use_cach": 41, "flexibl": 41, "below": [41, 79, 85, 102, 104], "show": [41, 81], "involv": 41, "cover": 41, "yml": [41, 87, 91, 92], "50000": [41, 91], "ab": [41, 83, 91], "12": [41, 91], "14": [41, 91], "16": [41, 91], "13": [41, 104], "compat": [41, 75], "syntax": [41, 83], "mai": [41, 68, 104], "fix": 41, "randomli": [41, 65, 66, 92], "graphnet_modul": [42, 43], "graphneti3modul": [43, 45], "i3inferencemodul": [43, 45], "i3pulsecleanermodul": [43, 45], "pulsemap_extractor": 45, "produc": [45, 82, 85], "write": [45, 104], "constructor": 45, "knngraph": [45, 61, 66], "associ": [45, 65, 69, 74, 75, 83], "model_config": [45, 86, 88, 89, 91, 94], "state_dict": [45, 70, 96], "model_nam": [45, 78], "prediction_column": [45, 71, 84], "pulsmap": 45, "modelconfig": [45, 70, 88, 91, 92], "summar": [45, 68, 69], "Will": [45, 63], "help": [45, 87, 102], "entri": [45, 57, 79, 87], "dynedg": [45, 46, 55, 58, 59], "energy_reco": 45, "discard_empty_ev": 45, "clean": [45, 102, 104], "assum": [45, 52, 65, 69, 75, 76], "7": [45, 50, 78], "consid": [45, 104], "posit": [45, 50, 69, 74, 89, 94], "signal": 45, "els": 45, "elimin": 45, "speed": [45, 64], "especi": 45, "sinc": [45, 83], "further": 45, "calcul": [45, 63, 66, 71, 76, 82, 83], "convnet": [46, 55], "dynedge_jinst": [46, 55], "dynedge_kaggle_tito": [46, 55], "edg": [46, 49, 50, 57, 58, 59, 61, 64, 65, 66, 67, 68, 76], "unbatch_edge_index": [46, 47], "attributecoarsen": [46, 47], "domcoarsen": [46, 47], "customdomcoarsen": [46, 47], "domandtimewindowcoarsen": [46, 47], "standardmodel": [46, 71], "calculate_xyzt_homophili": [46, 76], "calculate_distance_matrix": [46, 76], "knn_graph_batch": [46, 76], "oper": [47, 49, 55, 57], "cluster": [47, 49, 50, 57, 59, 68, 69], "local": [47, 53, 54, 87], "edge_index": [47, 49, 76], "vector": [47, 50, 83], "longtensor": [47, 50, 76], "mathbf": [47, 50], "ldot": [47, 50], "n": [47, 50, 64, 83], "reduce_opt": 47, "avg": 47, "avg_pool": 47, "avg_pool_x": 47, "max": [47, 49, 57, 59, 83, 87], "max_pool": [47, 50], "max_pool_x": [47, 50], "min": [47, 50, 57, 59], "min_pool": [47, 48, 50], "min_pool_x": [47, 48, 50], "sum": [47, 50, 57, 59, 71], "sum_pool": [47, 48, 50], "sum_pool_x": [47, 48, 50], "forward": [47, 49, 52, 56, 57, 58, 59, 60, 63, 65, 68, 71, 75, 83], "simplecoarsen": 47, "addit": [47, 49, 71, 83, 85], "window": 47, "time_window": 47, "dynedgeconv": [48, 49, 57], "edgeconvtito": [48, 49], "dyntran": [48, 49, 59], "sum_pool_and_distribut": [48, 50], "group_bi": [48, 50], "group_pulses_to_dom": [48, 50], "group_pulses_to_pmt": [48, 50], "std_pool_x": [48, 50], "std_pool": [48, 50], "aggr": 49, "nb_neighbor": 49, "features_subset": [49, 57, 59], "edgeconv": 49, "lightningmodul": [49, 70, 81, 99], "convolut": [49, 56, 57, 58, 59], "mlp": [49, 57], "aggreg": [49, 50], "8": [49, 50, 57, 66, 83, 84, 102, 104], "neighbour": [49, 57, 59, 63, 64, 66, 76], "sequenc": [49, 69, 84], "slice": [49, 57], "sparsetensor": 49, "messagepass": 49, "tito": [49, 59], "solut": [49, 59, 102], "deep": [49, 59], "competit": [49, 53, 59], "reset_paramet": 49, "reset": 49, "learnabl": [49, 55, 56, 57, 58, 59, 60, 75], "messag": [49, 81, 99], "x_i": 49, "x_j": 49, "layer_s": 49, "n_head": 49, "dyntrans1": 49, "head": [49, 75], "multiheadattent": 49, "just": [50, 104], "negat": 50, "cluster_index": 50, "distribut": [50, 57, 74, 75, 83, 85], "ident": [50, 75], "pmt": [50, 69], "f1": 50, "f2": 50, "6": [50, 79], "groupbi": 50, "3": [50, 56, 59, 64, 69, 74, 76, 78, 79, 83, 102, 104], "matrix": [50, 63, 64, 76, 83], "mathbb": 50, "r": [50, 63, 104], "n_1": 50, "n_b": 50, "obtain": [50, 83], "wise": 50, "dens": 50, "fc": 50, "known": 50, "std": 50, "repres": [50, 65, 66, 68, 69, 89, 91, 92], "averag": [50, 83], "torch_geometr": 50, "version": [50, 69, 75, 81, 102, 104], "standardis": 51, "icecubekaggl": [51, 53], "icecubedeepcor": [51, 53], "icecubeupgrad": [51, 53], "orca150": [51, 54], "ins": 52, "feature_map": [52, 53, 54], "input_featur": [52, 65], "input_feature_nam": [52, 65, 66, 68], "adjac": 52, "geometry_t": [52, 53, 54], "public": [52, 85], "geometri": [52, 65], "string_index_nam": 52, "sensor_position_nam": 52, "xyz": [52, 53, 54, 68, 69], "sensor_index_nam": 52, "sensor": [52, 65], "geometry_table_path": [53, 54], "home": [53, 54, 87, 104], "runner": [53, 54, 87], "lib": [53, 54, 87, 104], "python3": [53, 54, 87], "string_id_column": [53, 54], "sensor_id_column": [53, 54], "sensor_id": [53, 54], "dimens": [53, 54, 56, 57, 59, 69, 75, 83], "icecube_upgrad": 53, "prototyp": 54, "orca_150": 54, "sensor_string_id": 54, "dynedgejinst": [55, 58], "dynedgetito": [55, 59], "author": [56, 58, 83], "martin": 56, "minh": 56, "nb_input": [56, 57, 58, 59, 60, 73, 74, 75], "nb_output": [56, 58, 60, 68, 73, 74, 75], "nb_intermedi": 56, "128": [56, 57, 87], "dropout_ratio": 56, "fraction": [56, 84], "drop": 56, "nb_neighbour": 57, "k": [57, 59, 63, 66, 76, 83], "nearest": [57, 59, 63, 64, 66, 76], "latent": [57, 59, 73, 74, 75], "metric": [57, 59, 64, 81], "dynedge_layer_s": 57, "dimenion": [57, 59], "multi": 57, "perceptron": 57, "256": [57, 59], "336": 57, "post_processing_layer_s": 57, "hidden": [57, 58], "readout_layer_s": 57, "post": [57, 59], "_and_": 57, "As": 57, "last": [57, 73, 74, 75, 81, 84], "global_pooling_schem": [57, 59], "scheme": [57, 59], "add_global_variables_after_pool": 57, "altern": [57, 83, 102], "exact": [58, 83], "2209": 58, "03042": 58, "oerso": 58, "layer_size_scal": 58, "4": [58, 74, 79], "scale": [58, 64, 65, 75, 83], "ic": 59, "univers": 59, "south": 59, "pole": 59, "dyntrans_layer_s": 59, "use_global_featur": 59, "use_post_processing_lay": 59, "core": 60, "edgedefinit": [61, 62, 63, 64, 65, 67], "how": [61, 62, 67], "drawn": [61, 62, 66, 67], "between": [61, 62, 63, 64, 67, 71, 75, 76, 81, 83, 91, 92], "minkowski": [61, 62], "lex_sort": [61, 69], "gather_cluster_sequ": [61, 69], "identify_indic": [61, 69], "cluster_summarize_with_percentil": [61, 69], "knnedg": [62, 63], "radialedg": [62, 63], "euclideanedg": [62, 63], "compute_minkowski_distance_mat": [62, 64], "minkowskiknnedg": [62, 64], "_construct_edg": 63, "definit": [63, 65, 66, 68, 70, 75, 102], "nb_nearest_neighbour": [63, 64, 66], "space": [63, 64, 75, 85], "distanc": [63, 64, 66, 76], "sphere": 63, "chosen": [63, 69, 99], "radiu": 63, "centr": 63, "radial": 63, "center": 63, "euclidean": [63, 102], "see": [63, 65, 81, 102, 104], "http": [63, 65, 83, 102], "arxiv": [63, 83], "org": [63, 83, 104], "pdf": 63, "1809": 63, "06166": 63, "space_coord": 64, "time_coord": 64, "pairwis": [64, 76], "shape": [64, 65, 68, 76, 83], "second": 64, "m": [64, 69, 83], "light": [64, 104], "time_like_weight": 64, "prefer": [64, 104], "over": 64, "time_lik": 64, "hold": 65, "alter": 65, "dure": [65, 75, 81], "node_definit": [65, 66], "edge_definit": 65, "nodedefinit": [65, 66, 67, 68], "nodesaspuls": [65, 67, 68], "perturbation_dict": [65, 66], "deviat": [65, 66], "perturb": [65, 66], "add_inactive_sensor": 65, "inact": 65, "append": 65, "pad": [65, 69], "sensor_mask": 65, "mask": 65, "string_mask": 65, "sort_bi": 65, "sort": [65, 69], "truth_dict": 65, "custom_label_funct": 65, "loss_weight": [65, 75], "data_path": 65, "num_row": 65, "github": [65, 83, 104], "com": [65, 83, 104], "team": [65, 102], "blob": [65, 83], "getting_start": 65, "md": 65, "where": [65, 66, 68, 69, 82], "your": [66, 102, 104], "percentileclust": [67, 68], "num_puls": 68, "node_feature_nam": 68, "new_features_nam": 68, "overridden": 68, "set_number_of_input": 68, "set_output_feature_nam": 68, "measur": [68, 69, 76], "cherenkov": [68, 69], "radiat": [68, 69], "percentil": [68, 69], "summari": [68, 69], "cluster_on": [68, 69], "50": [68, 69, 87], "90": [68, 69, 79], "add_count": [68, 69], "duplic": 68, "cluster_column": 69, "numpi": 69, "along": 69, "backward": [69, 83], "feature_idx": 69, "turn": [69, 102], "gather": 69, "nan": 69, "n_cluster": 69, "l": 69, "largest": 69, "suppos": 69, "n_pmt": 69, "three": [69, 83], "spatial": 69, "column_offset": 69, "feature_nam": 69, "summarization_indic": 69, "cluster_indic": 69, "save_state_dict": 70, "load_state_dict": 70, "karg": 70, "trust": 70, "enough": 70, "eval": [70, 104], "lambda": 70, "consequ": 70, "backbon": 71, "max_epoch": 71, "early_stopping_pati": [71, 94], "gpu": [71, 87, 104], "ckpt_path": 71, "log_every_n_step": 71, "gradient_clip_v": 71, "distribution_strategi": 71, "trainer_kwarg": 71, "pytorch_lightn": [71, 81, 99], "trainer": [71, 81, 84], "target_label": [71, 75], "target": [71, 73, 75, 83, 94], "prediction_label": [71, 75], "configure_optim": 71, "optim": [71, 81], "shared_step": 71, "batch_idx": 71, "share": 71, "step": [71, 81], "training_step": 71, "train_batch": 71, "validation_step": 71, "val_batch": 71, "compute_loss": [71, 75], "pred": [71, 75], "verbos": [71, 81], "activ": [71, 75, 102, 104], "mode": [71, 75], "deactiv": [71, 75], "predict_as_datafram": 71, "additional_attribut": [71, 84], "multiclassclassificationtask": [72, 73], "binaryclassificationtask": [72, 73], "binaryclassificationtasklogit": [72, 73], "azimuthreconstructionwithkappa": [72, 74], "azimuthreconstruct": [72, 74], "directionreconstructionwithkappa": [72, 74], "zenithreconstruct": [72, 74], "zenithreconstructionwithkappa": [72, 74], "energyreconstruct": [72, 74], "energyreconstructionwithpow": [72, 74], "energytcreconstruct": [72, 74], "energyreconstructionwithuncertainti": [72, 74], "vertexreconstruct": [72, 74], "positionreconstruct": [72, 74], "timereconstruct": [72, 74], "inelasticityreconstruct": [72, 74], "learnedtask": [72, 75], "standardlearnedtask": [72, 73, 74, 75], "identitytask": [72, 73, 75], "standardflowtask": [72, 75], "classifi": 73, "untransform": 73, "logit": [73, 83], "embed": [73, 75], "binari": [73, 83], "hidden_s": [73, 74, 75], "default_target_label": [73, 74, 75], "default_prediction_label": [73, 74, 75], "target_pr": 73, "angl": [74, 82], "kappa": [74, 83], "var": 74, "azimuth_pr": 74, "azimuth_kappa": 74, "3d": [74, 83], "vmf": 74, "dir_x_pr": 74, "dir_y_pr": 74, "dir_z_pr": 74, "direction_kappa": 74, "zenith_pr": 74, "zenith_kappa": 74, "stabl": [74, 75], "energy_pr": 74, "cascad": 74, "energy_track_pr": 74, "energy_cascade_pr": 74, "uncertainti": 74, "energy_sigma": 74, "vertex": 74, "position_x_pr": 74, "position_y_pr": 74, "position_z_pr": 74, "interaction_time_pr": 74, "interact": 74, "hadron": 74, "inelasticity_pr": 74, "lossfunct": [75, 80, 83], "auto": 75, "matic": 75, "_pred": 75, "transform_prediction_and_target": 75, "numer": 75, "transform_target": 75, "log10": [75, 85], "rather": [75, 99], "conjunct": 75, "transform_infer": 75, "invers": 75, "recov": 75, "transform_support": 75, "minimum": 75, "restrict": [75, 83], "invert": 75, "1e6": 75, "train_ev": 75, "act": [75, 83], "wrt": 75, "meet": 75, "come": [75, 102], "vast": 75, "major": 75, "supervis": 75, "grab": 75, "send": 75, "evalu": 75, "normalizingflow": 75, "jacobian": 75, "normal": 75, "flow": 75, "xyzt": 76, "homophili": 76, "notic": [76, 83], "xyz_coord": 76, "nb_dom": 76, "updat": [76, 78, 81], "config_updat": [77, 78], "weightfitt": [77, 78, 80, 85], "contourfitt": [77, 78], "read_entri": [77, 79], "plot_2d_contour": [77, 79], "plot_1d_contour": [77, 79], "contour": [78, 79], "config_path": 78, "new_config_path": 78, "dummy_sect": 78, "temp": 78, "dummi": 78, "section": 78, "header": 78, "configupdat": 78, "programat": 78, "statistical_fit": 78, "fit_weight": [78, 85], "config_outdir": 78, "weight_nam": [78, 85], "pisa_config_dict": 78, "add_to_databas": [78, 85], "flux": 78, "_database_path": 78, "statist": 78, "effect": [78, 81, 102], "account": 78, "systemat": 78, "hypersurfac": 78, "chang": [78, 83, 102], "assumpt": 78, "regard": 78, "pipeline_path": 78, "post_fix": 78, "include_retro": 78, "fit_1d_contour": 78, "run_nam": 78, "config_dict": 78, "grid_siz": 78, "theta23_minmax": 78, "36": 78, "54": 78, "dm31_minmax": 78, "1d": [78, 79], "fit_2d_contour": 78, "2d": [78, 79, 83], "content": 79, "contour_data": 79, "xlim": 79, "ylim": 79, "0023799999999999997": 79, "0025499999999999997": 79, "chi2_critical_valu": 79, "width": 79, "height": 79, "path_to_pisa_fit_result": 79, "name_of_my_model_in_fit": 79, "legend": 79, "color": 79, "linestyl": 79, "style": [79, 102], "line": [79, 81, 87], "upper": 79, "axi": 79, "605": 79, "critic": [79, 99], "chi2": 79, "cl": 79, "right": [79, 83], "176": 79, "inch": 79, "388": 79, "706": 79, "abov": [79, 83, 85, 104], "352": 79, "piecewiselinearlr": [80, 81], "progressbar": [80, 81], "graphnetearlystop": [80, 81], "mseloss": [80, 83], "rmseloss": [80, 83], "logcoshloss": [80, 83], "crossentropyloss": [80, 83], "binarycrossentropyloss": [80, 83], "logcmk": [80, 83], "vonmisesfisherloss": [80, 83], "vonmisesfisher2dloss": [80, 83], "euclideandistanceloss": [80, 83], "vonmisesfisher3dloss": [80, 83], "collator_sequence_bucklet": [80, 84], "make_dataload": [80, 84], "make_train_validation_dataload": [80, 84], "get_predict": [80, 84], "save_result": [80, 84], "save_select": [80, 84], "uniform": [80, 85], "bjoernlow": [80, 85], "mileston": 81, "factor": 81, "last_epoch": 81, "_lrschedul": 81, "interpol": 81, "linearli": 81, "denot": 81, "multipli": 81, "closest": 81, "vice": 81, "versa": 81, "wrap": [81, 91, 92], "epoch": [81, 87], "print": [81, 99], "stdout": 81, "get_lr": 81, "refresh_r": 81, "process_posit": 81, "tqdmprogressbar": 81, "progress": 81, "bar": 81, "customis": 81, "init_validation_tqdm": 81, "init_predict_tqdm": 81, "init_test_tqdm": 81, "init_train_tqdm": 81, "get_metr": 81, "on_train_epoch_start": 81, "previou": 81, "behaviour": 81, "on_train_epoch_end": 81, "don": [81, 104], "duplciat": 81, "save_dir": 81, "earlystop": 81, "earli": [81, 87], "keyword": [81, 89, 94], "graphnet_model": 81, "on_validation_end": 81, "on_fit_end": 81, "runtim": [82, 104], "azimuth_kei": 82, "zenith_kei": 82, "access": [82, 104], "azimiuth": 82, "return_el": 83, "elementwis": 83, "term": 83, "squar": 83, "root": [83, 104], "cosh": 83, "small": 83, "cross": 83, "entropi": 83, "num_class": 83, "softmax": 83, "ed": 83, "probabl": 83, "mit": 83, "licens": 83, "copyright": 83, "2019": 83, "ryabinin": 83, "permiss": 83, "herebi": 83, "person": 83, "copi": 83, "document": 83, "deal": 83, "modifi": 83, "publish": 83, "sublicens": 83, "sell": 83, "permit": 83, "whom": 83, "furnish": 83, "so": [83, 104], "subject": 83, "condit": 83, "shall": 83, "substanti": 83, "portion": 83, "THE": 83, "AS": 83, "warranti": 83, "OF": 83, "kind": 83, "OR": 83, "impli": 83, "BUT": 83, "TO": 83, "merchant": 83, "FOR": 83, "particular": [83, 102], "AND": 83, "noninfring": 83, "IN": 83, "NO": 83, "holder": 83, "BE": 83, "liabl": 83, "claim": 83, "damag": 83, "liabil": 83, "action": 83, "contract": 83, "tort": 83, "aris": 83, "WITH": 83, "_____________________": 83, "mryab": 83, "vmf_loss": 83, "master": 83, "py": [83, 104], "bessel": 83, "exponenti": 83, "ditto": 83, "iv": 83, "1812": 83, "04616": 83, "spite": 83, "suggest": 83, "sec": 83, "paper": 83, "correct": 83, "static": [83, 102], "ctx": 83, "grad_output": 83, "von": 83, "mise": 83, "fisher": 83, "log_cmk_exact": 83, "c_": 83, "exactli": [83, 99], "log_cmk_approx": 83, "approx": 83, "minu": 83, "sign": 83, "log_cmk": 83, "kappa_switch": 83, "diverg": 83, "700": 83, "float64": 83, "precis": 83, "unaccur": 83, "switch": 83, "batch_split": 84, "bucket": 84, "cut": 84, "mini": 84, "total": 84, "explicitli": [84, 89, 94], "respect": 84, "database_indic": 84, "test_siz": 84, "node_level": 84, "tag": [84, 102, 104], "archiv": 84, "file_path": 84, "csv": [84, 91], "uniformweightfitt": 85, "bin": 85, "privat": 85, "_fit_weight": 85, "sql": 85, "desir": [85, 97], "np": 85, "happen": 85, "x_low": 85, "wherea": 85, "curv": 85, "base_config": [86, 88], "dataset_config": [86, 88], "training_config": [86, 88], "argumentpars": [86, 87], "rename_state_dict_entri": [86, 96], "is_gcd_fil": [86, 97], "is_i3_fil": [86, 97], "has_extens": [86, 97], "find_i3_fil": [86, 97], "has_icecube_packag": [86, 98], "has_torch_packag": [86, 98], "has_pisa_packag": [86, 98], "requires_icecub": [86, 98], "repeatfilt": [86, 99], "eps_lik": [86, 100], "consist": [87, 99, 102], "cli": 87, "pop_default": 87, "usag": 87, "descript": 87, "command": [87, 104], "standard_argu": 87, "training_example_data_sqlit": 87, "patienc": 87, "narg": 87, "example_energy_reconstruction_model": 87, "num": 87, "fetch": 87, "with_standard_argu": 87, "overwritten": [87, 89], "baseconfig": [88, 89, 90, 91, 92, 94], "get_all_argument_valu": [88, 89], "save_dataset_config": [88, 91], "datasetconfigsavermeta": [88, 91], "datasetconfigsaverabcmeta": [88, 91], "save_model_config": [88, 92], "modelconfigsavermeta": [88, 92], "modelconfigsaverabc": [88, 92], "traverse_and_appli": [88, 93], "list_all_submodul": [88, 93], "get_all_grapnet_class": [88, 93], "is_graphnet_modul": [88, 93], "is_graphnet_class": [88, 93], "get_graphnet_class": [88, 93], "trainingconfig": [88, 94], "basemodel": [89, 91, 92], "validationerror": [89, 94], "pydantic_cor": [89, 94], "dump": [89, 91, 92], "yaml": [89, 90], "as_dict": [89, 91, 92], "model_computed_field": [89, 91, 92, 94], "classvar": [89, 91, 92, 94], "computedfieldinfo": [89, 91, 92, 94], "configdict": [89, 91, 92, 94], "conform": [89, 91, 92, 94], "pydant": [89, 91, 92, 94], "model_field": [89, 91, 92, 94], "fieldinfo": [89, 91, 92, 94], "metadata": [89, 91, 92, 94], "about": [89, 91, 92, 94], "__fields__": [89, 91, 92, 94], "v1": [89, 91, 92, 94, 104], "re": [90, 104], "save_config": 90, "dataconfig": 91, "transpar": [91, 92, 102], "reproduc": [91, 92], "In": [91, 92, 104], "session": [91, 92], "anoth": [91, 92], "you": [91, 92, 102, 104], "still": 91, "train_select": 91, "unambigu": [91, 92], "annot": [91, 92, 94], "nonetyp": 91, "init_fn": [91, 92], "__init__": [91, 92, 104], "metaclass": [91, 92], "abcmeta": [91, 92], "datasetconfigsav": 91, "trainabl": 92, "hyperparamet": 92, "thu": 92, "modelconfigsav": 92, "fn_kwarg": 93, "structur": 93, "moduletyp": 93, "grapnet": 93, "lookup": 93, "deprec": 96, "transit": 96, "old_phras": 96, "new_phras": 96, "deepcopi": 96, "who": 96, "renam": 96, "phrase": 96, "place": [96, 102], "system": [97, 104], "filenam": 97, "dir": 97, "search": 97, "test_funct": 98, "repeat": 99, "nb_repeats_allow": 99, "record": 99, "logrecord": 99, "clear": 99, "intuit": 99, "composit": 99, "loggeradapt": 99, "clash": 99, "setlevel": 99, "deleg": 99, "msg": 99, "warn": 99, "info": [99, 104], "debug": 99, "warning_onc": 99, "onc": 99, "handler": 99, "file_handl": 99, "filehandl": 99, "stream_handl": 99, "streamhandl": 99, "assort": 100, "ep": 100, "api": 101, "To": [102, 104], "sure": [102, 104], "smooth": 102, "guidelin": 102, "guid": 102, "encourag": 102, "contributor": 102, "discuss": 102, "bug": 102, "anyth": 102, "describ": 102, "yourself": 102, "ownership": 102, "prioriti": 102, "situat": 102, "lot": 102, "effort": 102, "go": 102, "outsid": 102, "scope": 102, "better": 102, "fork": 102, "repo": 102, "dedic": 102, "branch": [102, 104], "repositori": 102, "own": [102, 104], "accept": 102, "autom": 102, "review": 102, "pep8": 102, "docstr": 102, "googl": 102, "hint": 102, "adher": 102, "pep": 102, "pylint": 102, "flake8": 102, "black": 102, "well": 102, "recommend": [102, 104], "mypi": 102, "pydocstyl": 102, "docformatt": 102, "commit": 102, "hook": 102, "instal": 102, "pip": [102, 104], "Then": 102, "everytim": 102, "pep257": 102, "concept": 102, "ljvmiranda921": 102, "io": 102, "notebook": 102, "2018": 102, "06": 102, "21": 102, "precommit": 102, "environ": 104, "virtual": 104, "anaconda": 104, "prove": 104, "instruct": 104, "want": 104, "part": 104, "achiev": 104, "bash": 104, "shell": 104, "cvmf": 104, "opensciencegrid": 104, "py3": 104, "v4": 104, "sh": 104, "rhel_7_x86_64": 104, "metaproject": 104, "env": 104, "alia": 104, "script": 104, "With": 104, "now": 104, "extra": 104, "geometr": 104, "won": 104, "later": 104, "torch_cpu": 104, "txt": 104, "cpu": 104, "torch_gpu": 104, "unix": 104, "git": 104, "clone": 104, "usernam": 104, "cd": 104, "conda": 104, "gcc_linux": 104, "64": 104, "gxx_linux": 104, "libgcc": 104, "cudatoolkit": 104, "11": 104, "forg": 104, "box": 104, "compil": 104, "gcc": 104, "date": 104, "possibli": 104, "cuda": 104, "toolkit": 104, "recent": 104, "omit": 104, "newer": 104, "export": 104, "ld_library_path": 104, "anaconda3": 104, "miniconda3": 104, "bashrc": 104, "librari": 104, "intend": 104, "rm": 104, "asogaard": 104, "latest": 104, "dc423315742c": 104, "01_icetrai": 104, "01_convert_i3_fil": 104, "2023": 104, "01": 104, "24": 104, "41": 104, "27": 104, "graphnet_20230124": 104, "134127": 104, "46": 104, "convert_i3_fil": 104, "ic86": 104, "thread": 104, "00": 104, "79": 104, "26": 104, "413": 104, "88it": 104, "specialis": 104, "ones": 104, "push": 104, "vx": 104}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [42, 0, 0, "-", "deployment"], [46, 0, 0, "-", "models"], [77, 0, 0, "-", "pisa"], [80, 0, 0, "-", "training"], [86, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "dataconverter"], [6, 0, 0, "-", "dataloader"], [7, 0, 0, "-", "datamodule"], [8, 0, 0, "-", "dataset"], [14, 0, 0, "-", "extractors"], [31, 0, 0, "-", "filters"], [32, 0, 0, "-", "parquet"], [34, 0, 0, "-", "pipeline"], [35, 0, 0, "-", "sqlite"], [38, 0, 0, "-", "utilities"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.dataconverter": [[5, 1, 1, "", "DataConverter"], [5, 1, 1, "", "FileSet"], [5, 5, 1, "", "cache_output_files"], [5, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[5, 3, 1, "", "execute"], [5, 4, 1, "", "file_suffix"], [5, 3, 1, "", "get_map_function"], [5, 3, 1, "", "merge_files"], [5, 3, 1, "", "save_data"]], "graphnet.data.dataconverter.FileSet": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_file"]], "graphnet.data.dataloader": [[6, 1, 1, "", "DataLoader"], [6, 5, 1, "", "collate_fn"], [6, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[6, 3, 1, "", "from_dataset_config"]], "graphnet.data.datamodule": [[7, 1, 1, "", "GraphNeTDataModule"]], "graphnet.data.datamodule.GraphNeTDataModule": [[7, 3, 1, "", "prepare_data"], [7, 3, 1, "", "setup"], [7, 3, 1, "", "teardown"], [7, 4, 1, "", "test_dataloader"], [7, 4, 1, "", "train_dataloader"], [7, 4, 1, "", "val_dataloader"]], "graphnet.data.dataset": [[9, 0, 0, "-", "dataset"], [10, 0, 0, "-", "parquet"], [12, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[9, 6, 1, "", "ColumnMissingException"], [9, 1, 1, "", "Dataset"], [9, 1, 1, "", "EnsembleDataset"], [9, 5, 1, "", "load_module"], [9, 5, 1, "", "parse_graph_definition"]], "graphnet.data.dataset.dataset.Dataset": [[9, 3, 1, "", "add_label"], [9, 3, 1, "", "concatenate"], [9, 3, 1, "", "from_config"], [9, 4, 1, "", "path"], [9, 3, 1, "", "query_table"], [9, 4, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[11, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[11, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[11, 3, 1, "", "query_table"]], "graphnet.data.dataset.sqlite": [[13, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[13, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[13, 3, 1, "", "query_table"]], "graphnet.data.extractors": [[15, 0, 0, "-", "i3extractor"], [16, 0, 0, "-", "i3featureextractor"], [17, 0, 0, "-", "i3genericextractor"], [18, 0, 0, "-", "i3hybridrecoextractor"], [19, 0, 0, "-", "i3ntmuonlabelsextractor"], [20, 0, 0, "-", "i3particleextractor"], [21, 0, 0, "-", "i3pisaextractor"], [22, 0, 0, "-", "i3quesoextractor"], [23, 0, 0, "-", "i3retroextractor"], [24, 0, 0, "-", "i3splinempeextractor"], [25, 0, 0, "-", "i3truthextractor"], [26, 0, 0, "-", "i3tumextractor"], [27, 0, 0, "-", "utilities"]], "graphnet.data.extractors.i3extractor": [[15, 1, 1, "", "I3Extractor"], [15, 1, 1, "", "I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor.I3Extractor": [[15, 4, 1, "", "name"], [15, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3extractor.I3ExtractorCollection": [[15, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3featureextractor": [[16, 1, 1, "", "I3FeatureExtractor"], [16, 1, 1, "", "I3FeatureExtractorIceCube86"], [16, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [16, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [16, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3genericextractor": [[17, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[18, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3ntmuonlabelsextractor": [[19, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.i3particleextractor": [[20, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[21, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.i3quesoextractor": [[22, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.i3retroextractor": [[23, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[24, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3truthextractor": [[25, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.i3tumextractor": [[26, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.utilities": [[28, 0, 0, "-", "collections"], [29, 0, 0, "-", "frames"], [30, 0, 0, "-", "types"]], "graphnet.data.extractors.utilities.collections": [[28, 5, 1, "", "flatten_nested_dictionary"], [28, 5, 1, "", "serialise"], [28, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.utilities.frames": [[29, 5, 1, "", "frame_is_montecarlo"], [29, 5, 1, "", "frame_is_noise"], [29, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.types": [[30, 5, 1, "", "break_cyclic_recursion"], [30, 5, 1, "", "cast_object_to_pure_python"], [30, 5, 1, "", "cast_pulse_series_to_pure_python"], [30, 5, 1, "", "get_member_variables"], [30, 5, 1, "", "is_boost_class"], [30, 5, 1, "", "is_boost_enum"], [30, 5, 1, "", "is_icecube_class"], [30, 5, 1, "", "is_method"], [30, 5, 1, "", "is_type"]], "graphnet.data.filters": [[31, 1, 1, "", "I3Filter"], [31, 1, 1, "", "I3FilterMask"], [31, 1, 1, "", "NullSplitI3Filter"]], "graphnet.data.parquet": [[33, 0, 0, "-", "parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataconverter": [[33, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter": [[33, 2, 1, "", "file_suffix"], [33, 3, 1, "", "merge_files"], [33, 3, 1, "", "save_data"]], "graphnet.data.pipeline": [[34, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.sqlite": [[36, 0, 0, "-", "sqlite_dataconverter"], [37, 0, 0, "-", "sqlite_utilities"]], "graphnet.data.sqlite.sqlite_dataconverter": [[36, 1, 1, "", "SQLiteDataConverter"], [36, 5, 1, "", "construct_dataframe"], [36, 5, 1, "", "is_mc_tree"], [36, 5, 1, "", "is_pulse_map"]], "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter": [[36, 3, 1, "", "any_pulsemap_is_non_empty"], [36, 2, 1, "", "file_suffix"], [36, 3, 1, "", "merge_files"], [36, 3, 1, "", "save_data"]], "graphnet.data.sqlite.sqlite_utilities": [[37, 5, 1, "", "attach_index"], [37, 5, 1, "", "create_table"], [37, 5, 1, "", "create_table_and_save_to_sql"], [37, 5, 1, "", "database_exists"], [37, 5, 1, "", "database_table_exists"], [37, 5, 1, "", "run_sql_code"], [37, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities": [[39, 0, 0, "-", "parquet_to_sqlite"], [40, 0, 0, "-", "random"], [41, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.parquet_to_sqlite": [[39, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[39, 3, 1, "", "run"]], "graphnet.data.utilities.random": [[40, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.string_selection_resolver": [[41, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[41, 3, 1, "", "resolve"]], "graphnet.deployment.i3modules": [[45, 0, 0, "-", "graphnet_module"]], "graphnet.deployment.i3modules.graphnet_module": [[45, 1, 1, "", "GraphNeTI3Module"], [45, 1, 1, "", "I3InferenceModule"], [45, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.models": [[47, 0, 0, "-", "coarsening"], [48, 0, 0, "-", "components"], [51, 0, 0, "-", "detector"], [55, 0, 0, "-", "gnn"], [61, 0, 0, "-", "graphs"], [70, 0, 0, "-", "model"], [71, 0, 0, "-", "standard_model"], [72, 0, 0, "-", "task"], [76, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[47, 1, 1, "", "AttributeCoarsening"], [47, 1, 1, "", "Coarsening"], [47, 1, 1, "", "CustomDOMCoarsening"], [47, 1, 1, "", "DOMAndTimeWindowCoarsening"], [47, 1, 1, "", "DOMCoarsening"], [47, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[47, 3, 1, "", "forward"], [47, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[49, 0, 0, "-", "layers"], [50, 0, 0, "-", "pool"]], "graphnet.models.components.layers": [[49, 1, 1, "", "DynEdgeConv"], [49, 1, 1, "", "DynTrans"], [49, 1, 1, "", "EdgeConvTito"]], "graphnet.models.components.layers.DynEdgeConv": [[49, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[49, 3, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[49, 3, 1, "", "forward"], [49, 3, 1, "", "message"], [49, 3, 1, "", "reset_parameters"]], "graphnet.models.components.pool": [[50, 5, 1, "", "group_by"], [50, 5, 1, "", "group_pulses_to_dom"], [50, 5, 1, "", "group_pulses_to_pmt"], [50, 5, 1, "", "min_pool"], [50, 5, 1, "", "min_pool_x"], [50, 5, 1, "", "std_pool"], [50, 5, 1, "", "std_pool_x"], [50, 5, 1, "", "sum_pool"], [50, 5, 1, "", "sum_pool_and_distribute"], [50, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[52, 0, 0, "-", "detector"], [53, 0, 0, "-", "icecube"], [54, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[52, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[52, 3, 1, "", "feature_map"], [52, 3, 1, "", "forward"], [52, 4, 1, "", "geometry_table"], [52, 4, 1, "", "sensor_index_name"], [52, 4, 1, "", "sensor_position_names"], [52, 4, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[53, 1, 1, "", "IceCube86"], [53, 1, 1, "", "IceCubeDeepCore"], [53, 1, 1, "", "IceCubeKaggle"], [53, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[53, 3, 1, "", "feature_map"], [53, 2, 1, "", "geometry_table_path"], [53, 2, 1, "", "sensor_id_column"], [53, 2, 1, "", "string_id_column"], [53, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[53, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[53, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[53, 3, 1, "", "feature_map"], [53, 2, 1, "", "geometry_table_path"], [53, 2, 1, "", "sensor_id_column"], [53, 2, 1, "", "string_id_column"], [53, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[54, 1, 1, "", "ORCA150"], [54, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.ORCA150": [[54, 3, 1, "", "feature_map"], [54, 2, 1, "", "geometry_table_path"], [54, 2, 1, "", "sensor_id_column"], [54, 2, 1, "", "string_id_column"], [54, 2, 1, "", "xyz"]], "graphnet.models.gnn": [[56, 0, 0, "-", "convnet"], [57, 0, 0, "-", "dynedge"], [58, 0, 0, "-", "dynedge_jinst"], [59, 0, 0, "-", "dynedge_kaggle_tito"], [60, 0, 0, "-", "gnn"]], "graphnet.models.gnn.convnet": [[56, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[56, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[57, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[57, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[58, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[58, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[59, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[59, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[60, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[60, 3, 1, "", "forward"], [60, 4, 1, "", "nb_inputs"], [60, 4, 1, "", "nb_outputs"]], "graphnet.models.graphs": [[62, 0, 0, "-", "edges"], [65, 0, 0, "-", "graph_definition"], [66, 0, 0, "-", "graphs"], [67, 0, 0, "-", "nodes"], [69, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[63, 0, 0, "-", "edges"], [64, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[63, 1, 1, "", "EdgeDefinition"], [63, 1, 1, "", "EuclideanEdges"], [63, 1, 1, "", "KNNEdges"], [63, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[63, 3, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[64, 1, 1, "", "MinkowskiKNNEdges"], [64, 5, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[65, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[65, 3, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[66, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[68, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[68, 1, 1, "", "NodeDefinition"], [68, 1, 1, "", "NodesAsPulses"], [68, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[68, 3, 1, "", "forward"], [68, 4, 1, "", "nb_outputs"], [68, 3, 1, "", "set_number_of_inputs"], [68, 3, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[69, 5, 1, "", "cluster_summarize_with_percentiles"], [69, 5, 1, "", "gather_cluster_sequence"], [69, 5, 1, "", "identify_indices"], [69, 5, 1, "", "lex_sort"]], "graphnet.models.model": [[70, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[70, 3, 1, "", "from_config"], [70, 3, 1, "", "load"], [70, 3, 1, "", "load_state_dict"], [70, 3, 1, "", "save"], [70, 3, 1, "", "save_state_dict"]], "graphnet.models.standard_model": [[71, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[71, 3, 1, "", "compute_loss"], [71, 3, 1, "", "configure_optimizers"], [71, 3, 1, "", "fit"], [71, 3, 1, "", "forward"], [71, 3, 1, "", "inference"], [71, 3, 1, "", "predict"], [71, 3, 1, "", "predict_as_dataframe"], [71, 4, 1, "", "prediction_labels"], [71, 3, 1, "", "shared_step"], [71, 4, 1, "", "target_labels"], [71, 3, 1, "", "train"], [71, 3, 1, "", "training_step"], [71, 3, 1, "", "validation_step"]], "graphnet.models.task": [[73, 0, 0, "-", "classification"], [74, 0, 0, "-", "reconstruction"], [75, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[73, 1, 1, "", "BinaryClassificationTask"], [73, 1, 1, "", "BinaryClassificationTaskLogits"], [73, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[73, 2, 1, "", "default_prediction_labels"], [73, 2, 1, "", "default_target_labels"], [73, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[73, 2, 1, "", "default_prediction_labels"], [73, 2, 1, "", "default_target_labels"], [73, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[74, 1, 1, "", "AzimuthReconstruction"], [74, 1, 1, "", "AzimuthReconstructionWithKappa"], [74, 1, 1, "", "DirectionReconstructionWithKappa"], [74, 1, 1, "", "EnergyReconstruction"], [74, 1, 1, "", "EnergyReconstructionWithPower"], [74, 1, 1, "", "EnergyReconstructionWithUncertainty"], [74, 1, 1, "", "EnergyTCReconstruction"], [74, 1, 1, "", "InelasticityReconstruction"], [74, 1, 1, "", "PositionReconstruction"], [74, 1, 1, "", "TimeReconstruction"], [74, 1, 1, "", "VertexReconstruction"], [74, 1, 1, "", "ZenithReconstruction"], [74, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[74, 2, 1, "", "default_prediction_labels"], [74, 2, 1, "", "default_target_labels"], [74, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[74, 2, 1, "", "default_prediction_labels"], [74, 2, 1, "", "default_target_labels"], [74, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[74, 2, 1, "", "default_prediction_labels"], [74, 2, 1, "", "default_target_labels"], [74, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[74, 2, 1, "", "default_prediction_labels"], [74, 2, 1, "", "default_target_labels"], [74, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[74, 2, 1, "", "default_prediction_labels"], [74, 2, 1, "", "default_target_labels"], [74, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[74, 2, 1, "", "default_prediction_labels"], [74, 2, 1, "", "default_target_labels"], [74, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[74, 2, 1, "", "default_prediction_labels"], [74, 2, 1, "", "default_target_labels"], [74, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[74, 2, 1, "", "default_prediction_labels"], [74, 2, 1, "", "default_target_labels"], [74, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[74, 2, 1, "", "default_prediction_labels"], [74, 2, 1, "", "default_target_labels"], [74, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[74, 2, 1, "", "default_prediction_labels"], [74, 2, 1, "", "default_target_labels"], [74, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[74, 2, 1, "", "default_prediction_labels"], [74, 2, 1, "", "default_target_labels"], [74, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[74, 2, 1, "", "default_prediction_labels"], [74, 2, 1, "", "default_target_labels"], [74, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[74, 2, 1, "", "default_prediction_labels"], [74, 2, 1, "", "default_target_labels"], [74, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[75, 1, 1, "", "IdentityTask"], [75, 1, 1, "", "LearnedTask"], [75, 1, 1, "", "StandardFlowTask"], [75, 1, 1, "", "StandardLearnedTask"], [75, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[75, 4, 1, "", "default_prediction_labels"], [75, 4, 1, "", "default_target_labels"], [75, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[75, 3, 1, "", "compute_loss"], [75, 3, 1, "", "forward"], [75, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[75, 3, 1, "", "compute_loss"], [75, 3, 1, "", "forward"], [75, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[75, 3, 1, "", "compute_loss"], [75, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[75, 4, 1, "", "default_prediction_labels"], [75, 4, 1, "", "default_target_labels"], [75, 3, 1, "", "inference"], [75, 4, 1, "", "nb_inputs"], [75, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[76, 5, 1, "", "calculate_distance_matrix"], [76, 5, 1, "", "calculate_xyzt_homophily"], [76, 5, 1, "", "knn_graph_batch"]], "graphnet.pisa": [[78, 0, 0, "-", "fitting"], [79, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[78, 1, 1, "", "ContourFitter"], [78, 1, 1, "", "WeightFitter"], [78, 5, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[78, 3, 1, "", "fit_1d_contour"], [78, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[78, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[79, 5, 1, "", "plot_1D_contour"], [79, 5, 1, "", "plot_2D_contour"], [79, 5, 1, "", "read_entry"]], "graphnet.training": [[81, 0, 0, "-", "callbacks"], [82, 0, 0, "-", "labels"], [83, 0, 0, "-", "loss_functions"], [84, 0, 0, "-", "utils"], [85, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[81, 1, 1, "", "GraphnetEarlyStopping"], [81, 1, 1, "", "PiecewiseLinearLR"], [81, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[81, 3, 1, "", "on_fit_end"], [81, 3, 1, "", "on_train_epoch_end"], [81, 3, 1, "", "on_validation_end"], [81, 3, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[81, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[81, 3, 1, "", "get_metrics"], [81, 3, 1, "", "init_predict_tqdm"], [81, 3, 1, "", "init_test_tqdm"], [81, 3, 1, "", "init_train_tqdm"], [81, 3, 1, "", "init_validation_tqdm"], [81, 3, 1, "", "on_train_epoch_end"], [81, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[82, 1, 1, "", "Direction"], [82, 1, 1, "", "Label"]], "graphnet.training.labels.Label": [[82, 4, 1, "", "key"]], "graphnet.training.loss_functions": [[83, 1, 1, "", "BinaryCrossEntropyLoss"], [83, 1, 1, "", "CrossEntropyLoss"], [83, 1, 1, "", "EuclideanDistanceLoss"], [83, 1, 1, "", "LogCMK"], [83, 1, 1, "", "LogCoshLoss"], [83, 1, 1, "", "LossFunction"], [83, 1, 1, "", "MSELoss"], [83, 1, 1, "", "RMSELoss"], [83, 1, 1, "", "VonMisesFisher2DLoss"], [83, 1, 1, "", "VonMisesFisher3DLoss"], [83, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[83, 3, 1, "", "backward"], [83, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[83, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[83, 3, 1, "", "log_cmk"], [83, 3, 1, "", "log_cmk_approx"], [83, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[84, 5, 1, "", "collate_fn"], [84, 1, 1, "", "collator_sequence_buckleting"], [84, 5, 1, "", "get_predictions"], [84, 5, 1, "", "make_dataloader"], [84, 5, 1, "", "make_train_validation_dataloader"], [84, 5, 1, "", "save_results"], [84, 5, 1, "", "save_selection"]], "graphnet.training.weight_fitting": [[85, 1, 1, "", "BjoernLow"], [85, 1, 1, "", "Uniform"], [85, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[85, 3, 1, "", "fit"]], "graphnet.utilities": [[87, 0, 0, "-", "argparse"], [88, 0, 0, "-", "config"], [95, 0, 0, "-", "decorators"], [96, 0, 0, "-", "deprecation_tools"], [97, 0, 0, "-", "filesys"], [98, 0, 0, "-", "imports"], [99, 0, 0, "-", "logging"], [100, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[87, 1, 1, "", "ArgumentParser"], [87, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[87, 2, 1, "", "standard_arguments"], [87, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[87, 3, 1, "", "contains"], [87, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[89, 0, 0, "-", "base_config"], [90, 0, 0, "-", "configurable"], [91, 0, 0, "-", "dataset_config"], [92, 0, 0, "-", "model_config"], [93, 0, 0, "-", "parsing"], [94, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[89, 1, 1, "", "BaseConfig"], [89, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[89, 3, 1, "", "as_dict"], [89, 3, 1, "", "dump"], [89, 3, 1, "", "load"], [89, 2, 1, "", "model_computed_fields"], [89, 2, 1, "", "model_config"], [89, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[90, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[90, 4, 1, "", "config"], [90, 3, 1, "", "from_config"], [90, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[91, 1, 1, "", "DatasetConfig"], [91, 1, 1, "", "DatasetConfigSaverABCMeta"], [91, 1, 1, "", "DatasetConfigSaverMeta"], [91, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[91, 3, 1, "", "as_dict"], [91, 2, 1, "", "features"], [91, 2, 1, "", "graph_definition"], [91, 2, 1, "", "index_column"], [91, 2, 1, "", "loss_weight_column"], [91, 2, 1, "", "loss_weight_default_value"], [91, 2, 1, "", "loss_weight_table"], [91, 2, 1, "", "model_computed_fields"], [91, 2, 1, "", "model_config"], [91, 2, 1, "", "model_fields"], [91, 2, 1, "", "node_truth"], [91, 2, 1, "", "node_truth_table"], [91, 2, 1, "", "path"], [91, 2, 1, "", "pulsemaps"], [91, 2, 1, "", "seed"], [91, 2, 1, "", "selection"], [91, 2, 1, "", "string_selection"], [91, 2, 1, "", "truth"], [91, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[92, 1, 1, "", "ModelConfig"], [92, 1, 1, "", "ModelConfigSaverABC"], [92, 1, 1, "", "ModelConfigSaverMeta"], [92, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[92, 2, 1, "", "arguments"], [92, 3, 1, "", "as_dict"], [92, 2, 1, "", "class_name"], [92, 2, 1, "", "model_computed_fields"], [92, 2, 1, "", "model_config"], [92, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[93, 5, 1, "", "get_all_grapnet_classes"], [93, 5, 1, "", "get_graphnet_classes"], [93, 5, 1, "", "is_graphnet_class"], [93, 5, 1, "", "is_graphnet_module"], [93, 5, 1, "", "list_all_submodules"], [93, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[94, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[94, 2, 1, "", "dataloader"], [94, 2, 1, "", "early_stopping_patience"], [94, 2, 1, "", "fit"], [94, 2, 1, "", "model_computed_fields"], [94, 2, 1, "", "model_config"], [94, 2, 1, "", "model_fields"], [94, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[96, 5, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[97, 5, 1, "", "find_i3_files"], [97, 5, 1, "", "has_extension"], [97, 5, 1, "", "is_gcd_file"], [97, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[98, 5, 1, "", "has_icecube_package"], [98, 5, 1, "", "has_pisa_package"], [98, 5, 1, "", "has_torch_package"], [98, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[99, 1, 1, "", "Logger"], [99, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[99, 3, 1, "", "critical"], [99, 3, 1, "", "debug"], [99, 3, 1, "", "error"], [99, 4, 1, "", "file_handlers"], [99, 4, 1, "", "handlers"], [99, 3, 1, "", "info"], [99, 3, 1, "", "setLevel"], [99, 4, 1, "", "stream_handlers"], [99, 3, 1, "", "warning"], [99, 3, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[99, 3, 1, "", "filter"], [99, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[100, 5, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 103], "impact": [0, 103], "usag": [0, 103], "acknowledg": [0, 103], "api": 1, "constant": [2, 4], "data": 3, "dataconvert": 5, "dataload": 6, "datamodul": 7, "dataset": [8, 9], "parquet": [10, 32], "parquet_dataset": 11, "sqlite": [12, 35], "sqlite_dataset": 13, "extractor": 14, "i3extractor": 15, "i3featureextractor": 16, "i3genericextractor": 17, "i3hybridrecoextractor": 18, "i3ntmuonlabelsextractor": 19, "i3particleextractor": 20, "i3pisaextractor": 21, "i3quesoextractor": 22, "i3retroextractor": 23, "i3splinempeextractor": 24, "i3truthextractor": 25, "i3tumextractor": 26, "util": [27, 38, 69, 76, 84, 86], "collect": 28, "frame": 29, "type": 30, "filter": 31, "parquet_dataconvert": 33, "pipelin": 34, "sqlite_dataconvert": 36, "sqlite_util": 37, "parquet_to_sqlit": 39, "random": 40, "string_selection_resolv": 41, "deploy": [42, 44], "i3modul": 43, "graphnet_modul": 45, "model": [46, 70], "coarsen": 47, "compon": 48, "layer": 49, "pool": 50, "detector": [51, 52], "icecub": 53, "prometheu": 54, "gnn": [55, 60], "convnet": 56, "dynedg": 57, "dynedge_jinst": 58, "dynedge_kaggle_tito": 59, "graph": [61, 66], "edg": [62, 63], "minkowski": 64, "graph_definit": 65, "node": [67, 68], "standard_model": 71, "task": [72, 75], "classif": 73, "reconstruct": 74, "pisa": 77, "fit": 78, "plot": 79, "train": 80, "callback": 81, "label": 82, "loss_funct": 83, "weight_fit": 85, "argpars": 87, "config": 88, "base_config": 89, "configur": 90, "dataset_config": 91, "model_config": 92, "pars": 93, "training_config": 94, "decor": 95, "deprecation_tool": 96, "filesi": 97, "import": 98, "log": 99, "math": 100, "src": 101, "contribut": 102, "github": 102, "issu": 102, "pull": 102, "request": 102, "convent": 102, "code": 102, "qualiti": 102, "instal": 104, "icetrai": 104, "stand": 104, "alon": 104, "run": 104, "docker": 104}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"], [103, "about"]], "Impact": [[0, "impact"], [103, "impact"]], "Usage": [[0, "usage"], [103, "usage"]], "Acknowledgements": [[0, "acknowledgements"], [103, "acknowledgements"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "dataconverter": [[5, "module-graphnet.data.dataconverter"]], "dataloader": [[6, "module-graphnet.data.dataloader"]], "datamodule": [[7, "module-graphnet.data.datamodule"]], "dataset": [[8, "module-graphnet.data.dataset"], [9, "module-graphnet.data.dataset.dataset"]], "parquet": [[10, "module-graphnet.data.dataset.parquet"], [32, "module-graphnet.data.parquet"]], "parquet_dataset": [[11, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "sqlite": [[12, "module-graphnet.data.dataset.sqlite"], [35, "module-graphnet.data.sqlite"]], "sqlite_dataset": [[13, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "extractors": [[14, "module-graphnet.data.extractors"]], "i3extractor": [[15, "module-graphnet.data.extractors.i3extractor"]], "i3featureextractor": [[16, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor": [[17, "module-graphnet.data.extractors.i3genericextractor"]], "i3hybridrecoextractor": [[18, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3ntmuonlabelsextractor": [[19, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"]], "i3particleextractor": [[20, "module-graphnet.data.extractors.i3particleextractor"]], "i3pisaextractor": [[21, "module-graphnet.data.extractors.i3pisaextractor"]], "i3quesoextractor": [[22, "module-graphnet.data.extractors.i3quesoextractor"]], "i3retroextractor": [[23, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeextractor": [[24, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor": [[25, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor": [[26, "module-graphnet.data.extractors.i3tumextractor"]], "utilities": [[27, "module-graphnet.data.extractors.utilities"], [38, "module-graphnet.data.utilities"], [86, "module-graphnet.utilities"]], "collections": [[28, "module-graphnet.data.extractors.utilities.collections"]], "frames": [[29, "module-graphnet.data.extractors.utilities.frames"]], "types": [[30, "module-graphnet.data.extractors.utilities.types"]], "filters": [[31, "module-graphnet.data.filters"]], "parquet_dataconverter": [[33, "module-graphnet.data.parquet.parquet_dataconverter"]], "pipeline": [[34, "module-graphnet.data.pipeline"]], "sqlite_dataconverter": [[36, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "sqlite_utilities": [[37, "module-graphnet.data.sqlite.sqlite_utilities"]], "parquet_to_sqlite": [[39, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[40, "module-graphnet.data.utilities.random"]], "string_selection_resolver": [[41, "module-graphnet.data.utilities.string_selection_resolver"]], "deployment": [[42, "module-graphnet.deployment"]], "i3modules": [[43, "i3modules"]], "deployer": [[44, "deployer"]], "graphnet_module": [[45, "module-graphnet.deployment.i3modules.graphnet_module"]], "models": [[46, "module-graphnet.models"]], "coarsening": [[47, "module-graphnet.models.coarsening"]], "components": [[48, "module-graphnet.models.components"]], "layers": [[49, "module-graphnet.models.components.layers"]], "pool": [[50, "module-graphnet.models.components.pool"]], "detector": [[51, "module-graphnet.models.detector"], [52, "module-graphnet.models.detector.detector"]], "icecube": [[53, "module-graphnet.models.detector.icecube"]], "prometheus": [[54, "module-graphnet.models.detector.prometheus"]], "gnn": [[55, "module-graphnet.models.gnn"], [60, "module-graphnet.models.gnn.gnn"]], "convnet": [[56, "module-graphnet.models.gnn.convnet"]], "dynedge": [[57, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[58, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedge_kaggle_tito": [[59, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "graphs": [[61, "module-graphnet.models.graphs"], [66, "module-graphnet.models.graphs.graphs"]], "edges": [[62, "module-graphnet.models.graphs.edges"], [63, "module-graphnet.models.graphs.edges.edges"]], "minkowski": [[64, "module-graphnet.models.graphs.edges.minkowski"]], "graph_definition": [[65, "module-graphnet.models.graphs.graph_definition"]], "nodes": [[67, "module-graphnet.models.graphs.nodes"], [68, "module-graphnet.models.graphs.nodes.nodes"]], "utils": [[69, "module-graphnet.models.graphs.utils"], [76, "module-graphnet.models.utils"], [84, "module-graphnet.training.utils"]], "model": [[70, "module-graphnet.models.model"]], "standard_model": [[71, "module-graphnet.models.standard_model"]], "task": [[72, "module-graphnet.models.task"], [75, "module-graphnet.models.task.task"]], "classification": [[73, "module-graphnet.models.task.classification"]], "reconstruction": [[74, "module-graphnet.models.task.reconstruction"]], "pisa": [[77, "module-graphnet.pisa"]], "fitting": [[78, "module-graphnet.pisa.fitting"]], "plotting": [[79, "module-graphnet.pisa.plotting"]], "training": [[80, "module-graphnet.training"]], "callbacks": [[81, "module-graphnet.training.callbacks"]], "labels": [[82, "module-graphnet.training.labels"]], "loss_functions": [[83, "module-graphnet.training.loss_functions"]], "weight_fitting": [[85, "module-graphnet.training.weight_fitting"]], "argparse": [[87, "module-graphnet.utilities.argparse"]], "config": [[88, "module-graphnet.utilities.config"]], "base_config": [[89, "module-graphnet.utilities.config.base_config"]], "configurable": [[90, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[91, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[92, "module-graphnet.utilities.config.model_config"]], "parsing": [[93, "module-graphnet.utilities.config.parsing"]], "training_config": [[94, "module-graphnet.utilities.config.training_config"]], "decorators": [[95, "module-graphnet.utilities.decorators"]], "deprecation_tools": [[96, "module-graphnet.utilities.deprecation_tools"]], "filesys": [[97, "module-graphnet.utilities.filesys"]], "imports": [[98, "module-graphnet.utilities.imports"]], "logging": [[99, "module-graphnet.utilities.logging"]], "maths": [[100, "module-graphnet.utilities.maths"]], "src": [[101, "src"]], "Contribute": [[102, "contribute"]], "GitHub issues": [[102, "github-issues"]], "Pull requests": [[102, "pull-requests"]], "Conventions": [[102, "conventions"]], "Code quality": [[102, "code-quality"]], "Install": [[104, "install"]], "Installing with IceTray": [[104, "installing-with-icetray"]], "Installing stand-alone": [[104, "installing-stand-alone"]], "Running in Docker": [[104, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.dataconverter"], [6, "module-graphnet.data.dataloader"], [7, "module-graphnet.data.datamodule"], [8, "module-graphnet.data.dataset"], [9, "module-graphnet.data.dataset.dataset"], [10, "module-graphnet.data.dataset.parquet"], [11, "module-graphnet.data.dataset.parquet.parquet_dataset"], [12, "module-graphnet.data.dataset.sqlite"], [13, "module-graphnet.data.dataset.sqlite.sqlite_dataset"], [14, "module-graphnet.data.extractors"], [15, "module-graphnet.data.extractors.i3extractor"], [16, "module-graphnet.data.extractors.i3featureextractor"], [17, "module-graphnet.data.extractors.i3genericextractor"], [18, "module-graphnet.data.extractors.i3hybridrecoextractor"], [19, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"], [20, "module-graphnet.data.extractors.i3particleextractor"], [21, "module-graphnet.data.extractors.i3pisaextractor"], [22, "module-graphnet.data.extractors.i3quesoextractor"], [23, "module-graphnet.data.extractors.i3retroextractor"], [24, "module-graphnet.data.extractors.i3splinempeextractor"], [25, "module-graphnet.data.extractors.i3truthextractor"], [26, "module-graphnet.data.extractors.i3tumextractor"], [27, "module-graphnet.data.extractors.utilities"], [28, "module-graphnet.data.extractors.utilities.collections"], [29, "module-graphnet.data.extractors.utilities.frames"], [30, "module-graphnet.data.extractors.utilities.types"], [31, "module-graphnet.data.filters"], [32, "module-graphnet.data.parquet"], [33, "module-graphnet.data.parquet.parquet_dataconverter"], [34, "module-graphnet.data.pipeline"], [35, "module-graphnet.data.sqlite"], [36, "module-graphnet.data.sqlite.sqlite_dataconverter"], [37, "module-graphnet.data.sqlite.sqlite_utilities"], [38, "module-graphnet.data.utilities"], [39, "module-graphnet.data.utilities.parquet_to_sqlite"], [40, "module-graphnet.data.utilities.random"], [41, "module-graphnet.data.utilities.string_selection_resolver"], [42, "module-graphnet.deployment"], [45, "module-graphnet.deployment.i3modules.graphnet_module"], [46, "module-graphnet.models"], [47, "module-graphnet.models.coarsening"], [48, "module-graphnet.models.components"], [49, "module-graphnet.models.components.layers"], [50, "module-graphnet.models.components.pool"], [51, "module-graphnet.models.detector"], [52, "module-graphnet.models.detector.detector"], [53, "module-graphnet.models.detector.icecube"], [54, "module-graphnet.models.detector.prometheus"], [55, "module-graphnet.models.gnn"], [56, "module-graphnet.models.gnn.convnet"], [57, "module-graphnet.models.gnn.dynedge"], [58, "module-graphnet.models.gnn.dynedge_jinst"], [59, "module-graphnet.models.gnn.dynedge_kaggle_tito"], [60, "module-graphnet.models.gnn.gnn"], [61, "module-graphnet.models.graphs"], [62, "module-graphnet.models.graphs.edges"], [63, "module-graphnet.models.graphs.edges.edges"], [64, "module-graphnet.models.graphs.edges.minkowski"], [65, "module-graphnet.models.graphs.graph_definition"], [66, "module-graphnet.models.graphs.graphs"], [67, "module-graphnet.models.graphs.nodes"], [68, "module-graphnet.models.graphs.nodes.nodes"], [69, "module-graphnet.models.graphs.utils"], [70, "module-graphnet.models.model"], [71, "module-graphnet.models.standard_model"], [72, "module-graphnet.models.task"], [73, "module-graphnet.models.task.classification"], [74, "module-graphnet.models.task.reconstruction"], [75, "module-graphnet.models.task.task"], [76, "module-graphnet.models.utils"], [77, "module-graphnet.pisa"], [78, "module-graphnet.pisa.fitting"], [79, "module-graphnet.pisa.plotting"], [80, "module-graphnet.training"], [81, "module-graphnet.training.callbacks"], [82, "module-graphnet.training.labels"], [83, "module-graphnet.training.loss_functions"], [84, "module-graphnet.training.utils"], [85, "module-graphnet.training.weight_fitting"], [86, "module-graphnet.utilities"], [87, "module-graphnet.utilities.argparse"], [88, "module-graphnet.utilities.config"], [89, "module-graphnet.utilities.config.base_config"], [90, "module-graphnet.utilities.config.configurable"], [91, "module-graphnet.utilities.config.dataset_config"], [92, "module-graphnet.utilities.config.model_config"], [93, "module-graphnet.utilities.config.parsing"], [94, "module-graphnet.utilities.config.training_config"], [95, "module-graphnet.utilities.decorators"], [96, "module-graphnet.utilities.deprecation_tools"], [97, "module-graphnet.utilities.filesys"], [98, "module-graphnet.utilities.imports"], [99, "module-graphnet.utilities.logging"], [100, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "dataconverter (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.DataConverter"]], "fileset (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.FileSet"]], "cache_output_files() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.cache_output_files"]], "execute() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.execute"]], "file_suffix (graphnet.data.dataconverter.dataconverter property)": [[5, "graphnet.data.dataconverter.DataConverter.file_suffix"]], "gcd_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.gcd_file"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[5, "module-graphnet.data.dataconverter"]], "i3_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.i3_file"]], "init_global_index() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.merge_files"]], "save_data() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.save_data"]], "dataloader (class in graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.DataLoader"]], "collate_fn() (in module graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.collate_fn"]], "do_shuffle() (in module graphnet.data.dataloader)": [[6, "graphnet.data.dataloader.do_shuffle"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[6, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "graphnet.data.dataloader": [[6, "module-graphnet.data.dataloader"]], "graphnetdatamodule (class in graphnet.data.datamodule)": [[7, "graphnet.data.datamodule.GraphNeTDataModule"]], "graphnet.data.datamodule": [[7, "module-graphnet.data.datamodule"]], "prepare_data() (graphnet.data.datamodule.graphnetdatamodule method)": [[7, "graphnet.data.datamodule.GraphNeTDataModule.prepare_data"]], "setup() (graphnet.data.datamodule.graphnetdatamodule method)": [[7, "graphnet.data.datamodule.GraphNeTDataModule.setup"]], "teardown() (graphnet.data.datamodule.graphnetdatamodule method)": [[7, "graphnet.data.datamodule.GraphNeTDataModule.teardown"]], "test_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[7, "graphnet.data.datamodule.GraphNeTDataModule.test_dataloader"]], "train_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[7, "graphnet.data.datamodule.GraphNeTDataModule.train_dataloader"]], "val_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[7, "graphnet.data.datamodule.GraphNeTDataModule.val_dataloader"]], "graphnet.data.dataset": [[8, "module-graphnet.data.dataset"]], "columnmissingexception": [[9, "graphnet.data.dataset.dataset.ColumnMissingException"]], "dataset (class in graphnet.data.dataset.dataset)": [[9, "graphnet.data.dataset.dataset.Dataset"]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[9, "graphnet.data.dataset.dataset.EnsembleDataset"]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[9, "graphnet.data.dataset.dataset.Dataset.add_label"]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[9, "graphnet.data.dataset.dataset.Dataset.concatenate"]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[9, "graphnet.data.dataset.dataset.Dataset.from_config"]], "graphnet.data.dataset.dataset": [[9, "module-graphnet.data.dataset.dataset"]], "load_module() (in module graphnet.data.dataset.dataset)": [[9, "graphnet.data.dataset.dataset.load_module"]], "parse_graph_definition() (in module graphnet.data.dataset.dataset)": [[9, "graphnet.data.dataset.dataset.parse_graph_definition"]], "path (graphnet.data.dataset.dataset.dataset property)": [[9, "graphnet.data.dataset.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[9, "graphnet.data.dataset.dataset.Dataset.query_table"]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[9, "graphnet.data.dataset.dataset.Dataset.truth_table"]], "graphnet.data.dataset.parquet": [[10, "module-graphnet.data.dataset.parquet"]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[11, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[11, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[11, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table"]], "graphnet.data.dataset.sqlite": [[12, "module-graphnet.data.dataset.sqlite"]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[13, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[13, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[13, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "graphnet.data.extractors": [[14, "module-graphnet.data.extractors"]], "i3extractor (class in graphnet.data.extractors.i3extractor)": [[15, "graphnet.data.extractors.i3extractor.I3Extractor"]], "i3extractorcollection (class in graphnet.data.extractors.i3extractor)": [[15, "graphnet.data.extractors.i3extractor.I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor": [[15, "module-graphnet.data.extractors.i3extractor"]], "name (graphnet.data.extractors.i3extractor.i3extractor property)": [[15, "graphnet.data.extractors.i3extractor.I3Extractor.name"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractor method)": [[15, "graphnet.data.extractors.i3extractor.I3Extractor.set_files"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[15, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.set_files"]], "i3featureextractor (class in graphnet.data.extractors.i3featureextractor)": [[16, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.i3featureextractor)": [[16, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.i3featureextractor)": [[16, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[16, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[16, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3featureextractor": [[16, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.i3genericextractor)": [[17, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.i3genericextractor": [[17, "module-graphnet.data.extractors.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.i3hybridrecoextractor)": [[18, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[18, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.i3ntmuonlabelsextractor)": [[19, "graphnet.data.extractors.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor"]], "graphnet.data.extractors.i3ntmuonlabelsextractor": [[19, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"]], "i3particleextractor (class in graphnet.data.extractors.i3particleextractor)": [[20, "graphnet.data.extractors.i3particleextractor.I3ParticleExtractor"]], "graphnet.data.extractors.i3particleextractor": [[20, "module-graphnet.data.extractors.i3particleextractor"]], "i3pisaextractor (class in graphnet.data.extractors.i3pisaextractor)": [[21, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[21, "module-graphnet.data.extractors.i3pisaextractor"]], "i3quesoextractor (class in graphnet.data.extractors.i3quesoextractor)": [[22, "graphnet.data.extractors.i3quesoextractor.I3QUESOExtractor"]], "graphnet.data.extractors.i3quesoextractor": [[22, "module-graphnet.data.extractors.i3quesoextractor"]], "i3retroextractor (class in graphnet.data.extractors.i3retroextractor)": [[23, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.i3retroextractor": [[23, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.i3splinempeextractor)": [[24, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[24, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.i3truthextractor)": [[25, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.i3truthextractor": [[25, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.i3tumextractor)": [[26, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.i3tumextractor": [[26, "module-graphnet.data.extractors.i3tumextractor"]], "graphnet.data.extractors.utilities": [[27, "module-graphnet.data.extractors.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.utilities.collections)": [[28, "graphnet.data.extractors.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.utilities.collections": [[28, "module-graphnet.data.extractors.utilities.collections"]], "serialise() (in module graphnet.data.extractors.utilities.collections)": [[28, "graphnet.data.extractors.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.utilities.collections)": [[28, "graphnet.data.extractors.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.utilities.frames)": [[29, "graphnet.data.extractors.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.utilities.frames)": [[29, "graphnet.data.extractors.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.utilities.frames)": [[29, "graphnet.data.extractors.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.frames": [[29, "module-graphnet.data.extractors.utilities.frames"]], "break_cyclic_recursion() (in module graphnet.data.extractors.utilities.types)": [[30, "graphnet.data.extractors.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[30, "graphnet.data.extractors.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[30, "graphnet.data.extractors.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.utilities.types)": [[30, "graphnet.data.extractors.utilities.types.get_member_variables"]], "graphnet.data.extractors.utilities.types": [[30, "module-graphnet.data.extractors.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.utilities.types)": [[30, "graphnet.data.extractors.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.utilities.types)": [[30, "graphnet.data.extractors.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.utilities.types)": [[30, "graphnet.data.extractors.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.utilities.types)": [[30, "graphnet.data.extractors.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.utilities.types)": [[30, "graphnet.data.extractors.utilities.types.is_type"]], "i3filter (class in graphnet.data.filters)": [[31, "graphnet.data.filters.I3Filter"]], "i3filtermask (class in graphnet.data.filters)": [[31, "graphnet.data.filters.I3FilterMask"]], "nullspliti3filter (class in graphnet.data.filters)": [[31, "graphnet.data.filters.NullSplitI3Filter"]], "graphnet.data.filters": [[31, "module-graphnet.data.filters"]], "graphnet.data.parquet": [[32, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.parquet_dataconverter)": [[33, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter"]], "file_suffix (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter attribute)": [[33, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.file_suffix"]], "graphnet.data.parquet.parquet_dataconverter": [[33, "module-graphnet.data.parquet.parquet_dataconverter"]], "merge_files() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[33, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.merge_files"]], "save_data() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[33, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.save_data"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[34, "graphnet.data.pipeline.InSQLitePipeline"]], "graphnet.data.pipeline": [[34, "module-graphnet.data.pipeline"]], "graphnet.data.sqlite": [[35, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.sqlite_dataconverter)": [[36, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter"]], "any_pulsemap_is_non_empty() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[36, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.any_pulsemap_is_non_empty"]], "construct_dataframe() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[36, "graphnet.data.sqlite.sqlite_dataconverter.construct_dataframe"]], "file_suffix (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter attribute)": [[36, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.file_suffix"]], "graphnet.data.sqlite.sqlite_dataconverter": [[36, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "is_mc_tree() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[36, "graphnet.data.sqlite.sqlite_dataconverter.is_mc_tree"]], "is_pulse_map() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[36, "graphnet.data.sqlite.sqlite_dataconverter.is_pulse_map"]], "merge_files() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[36, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.merge_files"]], "save_data() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[36, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.save_data"]], "attach_index() (in module graphnet.data.sqlite.sqlite_utilities)": [[37, "graphnet.data.sqlite.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.sqlite.sqlite_utilities)": [[37, "graphnet.data.sqlite.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[37, "graphnet.data.sqlite.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[37, "graphnet.data.sqlite.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[37, "graphnet.data.sqlite.sqlite_utilities.database_table_exists"]], "graphnet.data.sqlite.sqlite_utilities": [[37, "module-graphnet.data.sqlite.sqlite_utilities"]], "run_sql_code() (in module graphnet.data.sqlite.sqlite_utilities)": [[37, "graphnet.data.sqlite.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[37, "graphnet.data.sqlite.sqlite_utilities.save_to_sql"]], "graphnet.data.utilities": [[38, "module-graphnet.data.utilities"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[39, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite": [[39, "module-graphnet.data.utilities.parquet_to_sqlite"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[39, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.data.utilities.random": [[40, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[40, "graphnet.data.utilities.random.pairwise_shuffle"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[41, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[41, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[41, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.deployment": [[42, "module-graphnet.deployment"]], "graphneti3module (class in graphnet.deployment.i3modules.graphnet_module)": [[45, "graphnet.deployment.i3modules.graphnet_module.GraphNeTI3Module"]], "i3inferencemodule (class in graphnet.deployment.i3modules.graphnet_module)": [[45, "graphnet.deployment.i3modules.graphnet_module.I3InferenceModule"]], "i3pulsecleanermodule (class in graphnet.deployment.i3modules.graphnet_module)": [[45, "graphnet.deployment.i3modules.graphnet_module.I3PulseCleanerModule"]], "graphnet.deployment.i3modules.graphnet_module": [[45, "module-graphnet.deployment.i3modules.graphnet_module"]], "graphnet.models": [[46, "module-graphnet.models"]], "attributecoarsening (class in graphnet.models.coarsening)": [[47, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[47, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[47, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[47, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[47, "graphnet.models.coarsening.DOMCoarsening"]], "forward() (graphnet.models.coarsening.coarsening method)": [[47, "graphnet.models.coarsening.Coarsening.forward"]], "graphnet.models.coarsening": [[47, "module-graphnet.models.coarsening"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[47, "graphnet.models.coarsening.Coarsening.reduce_options"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[47, "graphnet.models.coarsening.unbatch_edge_index"]], "graphnet.models.components": [[48, "module-graphnet.models.components"]], "dynedgeconv (class in graphnet.models.components.layers)": [[49, "graphnet.models.components.layers.DynEdgeConv"]], "dyntrans (class in graphnet.models.components.layers)": [[49, "graphnet.models.components.layers.DynTrans"]], "edgeconvtito (class in graphnet.models.components.layers)": [[49, "graphnet.models.components.layers.EdgeConvTito"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[49, "graphnet.models.components.layers.DynEdgeConv.forward"]], "forward() (graphnet.models.components.layers.dyntrans method)": [[49, "graphnet.models.components.layers.DynTrans.forward"]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[49, "graphnet.models.components.layers.EdgeConvTito.forward"]], "graphnet.models.components.layers": [[49, "module-graphnet.models.components.layers"]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[49, "graphnet.models.components.layers.EdgeConvTito.message"]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[49, "graphnet.models.components.layers.EdgeConvTito.reset_parameters"]], "graphnet.models.components.pool": [[50, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[50, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[50, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[50, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[50, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[50, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[50, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[50, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[50, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[50, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[50, "graphnet.models.components.pool.sum_pool_x"]], "graphnet.models.detector": [[51, "module-graphnet.models.detector"]], "detector (class in graphnet.models.detector.detector)": [[52, "graphnet.models.detector.detector.Detector"]], "feature_map() (graphnet.models.detector.detector.detector method)": [[52, "graphnet.models.detector.detector.Detector.feature_map"]], "forward() (graphnet.models.detector.detector.detector method)": [[52, "graphnet.models.detector.detector.Detector.forward"]], "geometry_table (graphnet.models.detector.detector.detector property)": [[52, "graphnet.models.detector.detector.Detector.geometry_table"]], "graphnet.models.detector.detector": [[52, "module-graphnet.models.detector.detector"]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[52, "graphnet.models.detector.detector.Detector.sensor_index_name"]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[52, "graphnet.models.detector.detector.Detector.sensor_position_names"]], "string_index_name (graphnet.models.detector.detector.detector property)": [[52, "graphnet.models.detector.detector.Detector.string_index_name"]], "icecube86 (class in graphnet.models.detector.icecube)": [[53, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[53, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[53, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[53, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[53, "graphnet.models.detector.icecube.IceCube86.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[53, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[53, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[53, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map"]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[53, "graphnet.models.detector.icecube.IceCube86.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[53, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path"]], "graphnet.models.detector.icecube": [[53, "module-graphnet.models.detector.icecube"]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[53, "graphnet.models.detector.icecube.IceCube86.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[53, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[53, "graphnet.models.detector.icecube.IceCube86.string_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[53, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column"]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[53, "graphnet.models.detector.icecube.IceCube86.xyz"]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[53, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz"]], "orca150 (class in graphnet.models.detector.prometheus)": [[54, "graphnet.models.detector.prometheus.ORCA150"]], "prometheus (class in graphnet.models.detector.prometheus)": [[54, "graphnet.models.detector.prometheus.Prometheus"]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[54, "graphnet.models.detector.prometheus.ORCA150.feature_map"]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[54, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path"]], "graphnet.models.detector.prometheus": [[54, "module-graphnet.models.detector.prometheus"]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[54, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column"]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[54, "graphnet.models.detector.prometheus.ORCA150.string_id_column"]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[54, "graphnet.models.detector.prometheus.ORCA150.xyz"]], "graphnet.models.gnn": [[55, "module-graphnet.models.gnn"]], "convnet (class in graphnet.models.gnn.convnet)": [[56, "graphnet.models.gnn.convnet.ConvNet"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[56, "graphnet.models.gnn.convnet.ConvNet.forward"]], "graphnet.models.gnn.convnet": [[56, "module-graphnet.models.gnn.convnet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[57, "graphnet.models.gnn.dynedge.DynEdge"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[57, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "graphnet.models.gnn.dynedge": [[57, "module-graphnet.models.gnn.dynedge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[58, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[58, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "graphnet.models.gnn.dynedge_jinst": [[58, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[59, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO"]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[59, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[59, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "gnn (class in graphnet.models.gnn.gnn)": [[60, "graphnet.models.gnn.gnn.GNN"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[60, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn.gnn": [[60, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[60, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[60, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "graphnet.models.graphs": [[61, "module-graphnet.models.graphs"]], "graphnet.models.graphs.edges": [[62, "module-graphnet.models.graphs.edges"]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[63, "graphnet.models.graphs.edges.edges.EdgeDefinition"]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[63, "graphnet.models.graphs.edges.edges.EuclideanEdges"]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[63, "graphnet.models.graphs.edges.edges.KNNEdges"]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[63, "graphnet.models.graphs.edges.edges.RadialEdges"]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[63, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward"]], "graphnet.models.graphs.edges.edges": [[63, "module-graphnet.models.graphs.edges.edges"]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[64, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges"]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[64, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat"]], "graphnet.models.graphs.edges.minkowski": [[64, "module-graphnet.models.graphs.edges.minkowski"]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[65, "graphnet.models.graphs.graph_definition.GraphDefinition"]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[65, "graphnet.models.graphs.graph_definition.GraphDefinition.forward"]], "graphnet.models.graphs.graph_definition": [[65, "module-graphnet.models.graphs.graph_definition"]], "knngraph (class in graphnet.models.graphs.graphs)": [[66, "graphnet.models.graphs.graphs.KNNGraph"]], "graphnet.models.graphs.graphs": [[66, "module-graphnet.models.graphs.graphs"]], "graphnet.models.graphs.nodes": [[67, "module-graphnet.models.graphs.nodes"]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[68, "graphnet.models.graphs.nodes.nodes.NodeDefinition"]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[68, "graphnet.models.graphs.nodes.nodes.NodesAsPulses"]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[68, "graphnet.models.graphs.nodes.nodes.PercentileClusters"]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[68, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward"]], "graphnet.models.graphs.nodes.nodes": [[68, "module-graphnet.models.graphs.nodes.nodes"]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[68, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs"]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[68, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs"]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[68, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names"]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[69, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles"]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[69, "graphnet.models.graphs.utils.gather_cluster_sequence"]], "graphnet.models.graphs.utils": [[69, "module-graphnet.models.graphs.utils"]], "identify_indices() (in module graphnet.models.graphs.utils)": [[69, "graphnet.models.graphs.utils.identify_indices"]], "lex_sort() (in module graphnet.models.graphs.utils)": [[69, "graphnet.models.graphs.utils.lex_sort"]], "model (class in graphnet.models.model)": [[70, "graphnet.models.model.Model"]], "from_config() (graphnet.models.model.model class method)": [[70, "graphnet.models.model.Model.from_config"]], "graphnet.models.model": [[70, "module-graphnet.models.model"]], "load() (graphnet.models.model.model class method)": [[70, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[70, "graphnet.models.model.Model.load_state_dict"]], "save() (graphnet.models.model.model method)": [[70, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[70, "graphnet.models.model.Model.save_state_dict"]], "standardmodel (class in graphnet.models.standard_model)": [[71, "graphnet.models.standard_model.StandardModel"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[71, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[71, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "fit() (graphnet.models.standard_model.standardmodel method)": [[71, "graphnet.models.standard_model.StandardModel.fit"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[71, "graphnet.models.standard_model.StandardModel.forward"]], "graphnet.models.standard_model": [[71, "module-graphnet.models.standard_model"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[71, "graphnet.models.standard_model.StandardModel.inference"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[71, "graphnet.models.standard_model.StandardModel.predict"]], "predict_as_dataframe() (graphnet.models.standard_model.standardmodel method)": [[71, "graphnet.models.standard_model.StandardModel.predict_as_dataframe"]], "prediction_labels (graphnet.models.standard_model.standardmodel property)": [[71, "graphnet.models.standard_model.StandardModel.prediction_labels"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[71, "graphnet.models.standard_model.StandardModel.shared_step"]], "target_labels (graphnet.models.standard_model.standardmodel property)": [[71, "graphnet.models.standard_model.StandardModel.target_labels"]], "train() (graphnet.models.standard_model.standardmodel method)": [[71, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[71, "graphnet.models.standard_model.StandardModel.training_step"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[71, "graphnet.models.standard_model.StandardModel.validation_step"]], "graphnet.models.task": [[72, "module-graphnet.models.task"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[73, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[73, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[73, "graphnet.models.task.classification.MulticlassClassificationTask"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[73, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[73, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[73, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[73, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels"]], "graphnet.models.task.classification": [[73, "module-graphnet.models.task.classification"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[73, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[73, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[74, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[74, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[74, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[74, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[74, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[74, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[74, "graphnet.models.task.reconstruction.EnergyTCReconstruction"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[74, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[74, "graphnet.models.task.reconstruction.PositionReconstruction"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[74, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[74, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[74, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[74, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[74, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[74, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[74, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[74, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[74, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[74, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[74, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[74, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[74, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[74, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[74, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[74, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels"]], "graphnet.models.task.reconstruction": [[74, "module-graphnet.models.task.reconstruction"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[74, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[74, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[74, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[74, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[74, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[74, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[74, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "identitytask (class in graphnet.models.task.task)": [[75, "graphnet.models.task.task.IdentityTask"]], "learnedtask (class in graphnet.models.task.task)": [[75, "graphnet.models.task.task.LearnedTask"]], "standardflowtask (class in graphnet.models.task.task)": [[75, "graphnet.models.task.task.StandardFlowTask"]], "standardlearnedtask (class in graphnet.models.task.task)": [[75, "graphnet.models.task.task.StandardLearnedTask"]], "task (class in graphnet.models.task.task)": [[75, "graphnet.models.task.task.Task"]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[75, "graphnet.models.task.task.LearnedTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardflowtask method)": [[75, "graphnet.models.task.task.StandardFlowTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[75, "graphnet.models.task.task.StandardLearnedTask.compute_loss"]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[75, "graphnet.models.task.task.IdentityTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.task.task property)": [[75, "graphnet.models.task.task.Task.default_prediction_labels"]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[75, "graphnet.models.task.task.IdentityTask.default_target_labels"]], "default_target_labels (graphnet.models.task.task.task property)": [[75, "graphnet.models.task.task.Task.default_target_labels"]], "forward() (graphnet.models.task.task.learnedtask method)": [[75, "graphnet.models.task.task.LearnedTask.forward"]], "forward() (graphnet.models.task.task.standardflowtask method)": [[75, "graphnet.models.task.task.StandardFlowTask.forward"]], "graphnet.models.task.task": [[75, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[75, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[75, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[75, "graphnet.models.task.task.LearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[75, "graphnet.models.task.task.StandardLearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[75, "graphnet.models.task.task.Task.nb_inputs"]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[75, "graphnet.models.task.task.StandardFlowTask.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[75, "graphnet.models.task.task.Task.train_eval"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[76, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[76, "graphnet.models.utils.calculate_xyzt_homophily"]], "graphnet.models.utils": [[76, "module-graphnet.models.utils"]], "knn_graph_batch() (in module graphnet.models.utils)": [[76, "graphnet.models.utils.knn_graph_batch"]], "graphnet.pisa": [[77, "module-graphnet.pisa"]], "contourfitter (class in graphnet.pisa.fitting)": [[78, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[78, "graphnet.pisa.fitting.WeightFitter"]], "config_updater() (in module graphnet.pisa.fitting)": [[78, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[78, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[78, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[78, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa.fitting": [[78, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[79, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[79, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[79, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[79, "graphnet.pisa.plotting.read_entry"]], "graphnet.training": [[80, "module-graphnet.training"]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[81, "graphnet.training.callbacks.GraphnetEarlyStopping"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[81, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[81, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[81, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[81, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[81, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[81, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[81, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[81, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[81, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[81, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end"]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[81, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[81, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[81, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[81, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end"]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[81, "graphnet.training.callbacks.GraphnetEarlyStopping.setup"]], "direction (class in graphnet.training.labels)": [[82, "graphnet.training.labels.Direction"]], "label (class in graphnet.training.labels)": [[82, "graphnet.training.labels.Label"]], "graphnet.training.labels": [[82, "module-graphnet.training.labels"]], "key (graphnet.training.labels.label property)": [[82, "graphnet.training.labels.Label.key"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[83, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[83, "graphnet.training.loss_functions.CrossEntropyLoss"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[83, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.training.loss_functions)": [[83, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[83, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[83, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[83, "graphnet.training.loss_functions.MSELoss"]], "rmseloss (class in graphnet.training.loss_functions)": [[83, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[83, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[83, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[83, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[83, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[83, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[83, "graphnet.training.loss_functions.LossFunction.forward"]], "graphnet.training.loss_functions": [[83, "module-graphnet.training.loss_functions"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[83, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[83, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[83, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "collate_fn() (in module graphnet.training.utils)": [[84, "graphnet.training.utils.collate_fn"]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[84, "graphnet.training.utils.collator_sequence_buckleting"]], "get_predictions() (in module graphnet.training.utils)": [[84, "graphnet.training.utils.get_predictions"]], "graphnet.training.utils": [[84, "module-graphnet.training.utils"]], "make_dataloader() (in module graphnet.training.utils)": [[84, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[84, "graphnet.training.utils.make_train_validation_dataloader"]], "save_results() (in module graphnet.training.utils)": [[84, "graphnet.training.utils.save_results"]], "save_selection() (in module graphnet.training.utils)": [[84, "graphnet.training.utils.save_selection"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[85, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[85, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[85, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[85, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[85, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[86, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[87, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[87, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[87, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[87, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[87, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[87, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[87, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[88, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[89, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[89, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[89, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[89, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[89, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[89, "graphnet.utilities.config.base_config.BaseConfig.load"]], "model_computed_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[89, "graphnet.utilities.config.base_config.BaseConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[89, "graphnet.utilities.config.base_config.BaseConfig.model_config"]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[89, "graphnet.utilities.config.base_config.BaseConfig.model_fields"]], "configurable (class in graphnet.utilities.config.configurable)": [[90, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[90, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[90, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[90, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[90, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta"]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta"]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition"]], "graphnet.utilities.config.dataset_config": [[91, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "model_computed_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config"]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[91, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[91, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[92, "graphnet.utilities.config.model_config.ModelConfig"]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[92, "graphnet.utilities.config.model_config.ModelConfigSaverABC"]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[92, "graphnet.utilities.config.model_config.ModelConfigSaverMeta"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[92, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[92, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[92, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[92, "module-graphnet.utilities.config.model_config"]], "model_computed_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[92, "graphnet.utilities.config.model_config.ModelConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[92, "graphnet.utilities.config.model_config.ModelConfig.model_config"]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[92, "graphnet.utilities.config.model_config.ModelConfig.model_fields"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[92, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[93, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[93, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[93, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[93, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[93, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[93, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[93, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[94, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[94, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[94, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[94, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[94, "module-graphnet.utilities.config.training_config"]], "model_computed_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[94, "graphnet.utilities.config.training_config.TrainingConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[94, "graphnet.utilities.config.training_config.TrainingConfig.model_config"]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[94, "graphnet.utilities.config.training_config.TrainingConfig.model_fields"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[94, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[95, "module-graphnet.utilities.decorators"]], "graphnet.utilities.deprecation_tools": [[96, "module-graphnet.utilities.deprecation_tools"]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[96, "graphnet.utilities.deprecation_tools.rename_state_dict_entries"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[97, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[97, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[97, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[97, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[97, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[98, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[98, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[98, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[98, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[98, "graphnet.utilities.imports.requires_icecube"]], "logger (class in graphnet.utilities.logging)": [[99, "graphnet.utilities.logging.Logger"]], "repeatfilter (class in graphnet.utilities.logging)": [[99, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.logger method)": [[99, "graphnet.utilities.logging.Logger.critical"]], "debug() (graphnet.utilities.logging.logger method)": [[99, "graphnet.utilities.logging.Logger.debug"]], "error() (graphnet.utilities.logging.logger method)": [[99, "graphnet.utilities.logging.Logger.error"]], "file_handlers (graphnet.utilities.logging.logger property)": [[99, "graphnet.utilities.logging.Logger.file_handlers"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[99, "graphnet.utilities.logging.RepeatFilter.filter"]], "graphnet.utilities.logging": [[99, "module-graphnet.utilities.logging"]], "handlers (graphnet.utilities.logging.logger property)": [[99, "graphnet.utilities.logging.Logger.handlers"]], "info() (graphnet.utilities.logging.logger method)": [[99, "graphnet.utilities.logging.Logger.info"]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[99, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed"]], "setlevel() (graphnet.utilities.logging.logger method)": [[99, "graphnet.utilities.logging.Logger.setLevel"]], "stream_handlers (graphnet.utilities.logging.logger property)": [[99, "graphnet.utilities.logging.Logger.stream_handlers"]], "warning() (graphnet.utilities.logging.logger method)": [[99, "graphnet.utilities.logging.Logger.warning"]], "warning_once() (graphnet.utilities.logging.logger method)": [[99, "graphnet.utilities.logging.Logger.warning_once"]], "eps_like() (in module graphnet.utilities.maths)": [[100, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[100, "module-graphnet.utilities.maths"]]}})