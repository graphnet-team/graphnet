Search.setIndex({"alltitles": {"1) Adding Support for Your Data": [[158, "adding-support-for-your-data"]], "2) Implementing a Detector Class": [[158, "implementing-a-detector-class"]], "API": [[1, null]], "Acknowledgements": [[0, "acknowledgements"]], "Adding Your Own Model": [[160, "adding-your-own-model"]], "Adding custom Labels": [[154, "adding-custom-labels"]], "Adding custom truth labels": [[155, "adding-custom-truth-labels"]], "Advanced Functionality in SQLiteDataset": [[155, "advanced-functionality-in-sqlitedataset"]], "Appendix": [[155, "appendix"]], "Choosing a subset of events using selection": [[154, "choosing-a-subset-of-events-using-selection"]], "Code quality": [[152, "code-quality"]], "Combining Multiple Datasets": [[154, "combining-multiple-datasets"], [155, "combining-multiple-datasets"]], "Contents": [[155, "contents"]], "Contributing To GraphNeTgraphnet": [[152, null]], "Conventions": [[152, "conventions"]], "Creating reproducible Datasets using DatasetConfig": [[155, "creating-reproducible-datasets-using-datasetconfig"]], "Creating reproducible Models using ModelConfig": [[155, "creating-reproducible-models-using-modelconfig"]], "Data Conversion in GraphNeTgraphnet": [[153, null]], "DataConverter": [[153, "dataconverter"]], "Dataset": [[154, "dataset"]], "Datasets In GraphNeTgraphnet": [[154, null]], "Example DataConfig": [[155, "example-dataconfig"]], "Example ModelConfig": [[155, "example-modelconfig"]], "Example of geometry table before applying multi-index": [[158, "id1"]], "Example: Energy Reconstruction using ModelConfig": [[160, "example-energy-reconstruction-using-modelconfig"]], "Experiment Tracking": [[160, "experiment-tracking"]], "Extractors": [[153, "extractors"]], "GitHub issues": [[152, "github-issues"]], "GraphDefinition, backbone & Task": [[160, "graphdefinition-backbone-task"]], "GraphNeT tutorial": [[155, null]], "GraphNeTgraphnet": [[156, null], [159, null]], "Implementing a new Dataset": [[154, "implementing-a-new-dataset"]], "Installation": [[157, null]], "Installation in CVMFS (IceCube)": [[157, "installation-in-cvmfs-icecube"]], "Instantiating a StandardModel": [[160, "instantiating-a-standardmodel"]], "Integrating New Experiments into GraphNeTgraphnet": [[158, null]], "Introduction": [[155, "introduction"]], "Model.save": [[160, "model-save"]], "ModelConfig and state_dict": [[160, "modelconfig-and-state-dict"]], "Models In GraphNeTgraphnet": [[160, null]], "Overview of GraphNeT": [[155, "overview-of-graphnet"]], "Pull requests": [[152, "pull-requests"]], "Quick Start": [[157, "quick-start"]], "RNN_tito": [[104, null]], "Readers": [[153, "readers"]], "SQLiteDataset & ParquetDataset": [[154, "sqlitedataset-parquetdataset"]], "SQLiteDataset vs. ParquetDataset": [[154, "sqlitedataset-vs-parquetdataset"]], "Saving, loading, and checkpointing Models": [[160, "saving-loading-and-checkpointing-models"]], "The Model class": [[155, "the-model-class"], [160, "the-model-class"]], "The StandardModel class": [[155, "the-standardmodel-class"], [160, "the-standardmodel-class"]], "Training Syntax for StandardModel": [[160, "training-syntax-for-standardmodel"]], "Usage": [[0, null]], "Using checkpoints": [[160, "using-checkpoints"]], "Writers": [[153, "writers"]], "Writing your own Extractor and GraphNeTFileReader": [[158, "writing-your-own-extractor-and-graphnetfilereader"]], "argparse": [[137, null]], "base_config": [[139, null]], "callbacks": [[131, null]], "classification": [[124, null]], "cleaning_module": [[75, null]], "coarsening": [[81, null]], "collections": [[34, null]], "combine_extractors": [[18, null]], "components": [[82, null]], "config": [[138, null]], "configurable": [[140, null]], "constants": [[2, null], [4, null]], "convnet": [[105, null]], "curated_datamodule": [[5, null]], "data": [[3, null]], "data_representation": [[86, null], [87, null]], "dataclasses": [[6, null]], "dataconverter": [[7, null]], "dataconverters": [[47, null]], "dataloader": [[8, null]], "datamodule": [[9, null]], "dataset": [[10, null], [11, null]], "dataset_config": [[141, null]], "datasets": [[65, null]], "decorators": [[145, null]], "deployer": [[70, null]], "deployment": [[69, null]], "deployment_module": [[71, null]], "deprecated_methods": [[45, null], [55, null], [73, null]], "deprecation_tools": [[146, null]], "detector": [[97, null], [98, null]], "dynedge": [[106, null]], "dynedge_jinst": [[107, null]], "dynedge_kaggle_tito": [[108, null]], "easy_model": [[102, null]], "edges": [[89, null], [90, null], [114, null]], "embedding": [[83, null]], "exceptions": [[78, null], [79, null]], "extractor": [[19, null]], "extractors": [[17, null]], "filesys": [[147, null]], "frames": [[35, null]], "gnn": [[103, null], [109, null]], "graph_definition": [[92, null]], "graphnet_file_reader": [[49, null]], "graphnet_writer": [[62, null]], "graphs": [[88, null], [93, null], [113, null]], "grit": [[110, null]], "h5_extractor": [[41, null]], "i3_filters": [[36, null]], "i3deployer": [[76, null]], "i3extractor": [[21, null]], "i3featureextractor": [[22, null]], "i3genericextractor": [[23, null]], "i3hybridrecoextractor": [[24, null]], "i3modules": [[72, null]], "i3ntmuonlabelsextractor": [[25, null]], "i3particleextractor": [[26, null]], "i3pisaextractor": [[27, null]], "i3quesoextractor": [[28, null]], "i3reader": [[50, null]], "i3retroextractor": [[29, null]], "i3splinempeextractor": [[30, null]], "i3truthextractor": [[31, null]], "i3tumextractor": [[32, null]], "icecube": [[20, null], [74, null], [99, null]], "icemix": [[111, null]], "imports": [[148, null]], "inference_module": [[77, null]], "internal": [[38, null]], "internal_parquet_reader": [[51, null]], "iseecube": [[128, null]], "labels": [[132, null]], "layers": [[84, null]], "liquido": [[40, null], [100, null]], "liquido_reader": [[52, null]], "logging": [[149, null]], "loss_functions": [[133, null]], "maths": [[150, null]], "minkowski": [[91, null], [115, null]], "model": [[117, null]], "model_config": [[142, null]], "models": [[80, null]], "node_rnn": [[120, null]], "nodes": [[94, null], [95, null], [116, null]], "normalizing_flow": [[118, null]], "parquet": [[12, null], [44, null]], "parquet_dataset": [[13, null]], "parquet_extractor": [[39, null]], "parquet_to_sqlite": [[57, null]], "parquet_writer": [[63, null]], "parsing": [[143, null]], "particlenet": [[112, null]], "pool": [[85, null]], "pre_configured": [[46, null]], "prometheus": [[42, null], [101, null]], "prometheus_datasets": [[66, null]], "prometheus_extractor": [[43, null]], "prometheus_reader": [[53, null]], "random": [[58, null]], "readers": [[48, null]], "reconstruction": [[125, null]], "rnn": [[119, null]], "samplers": [[14, null]], "snowstorm_dataset": [[67, null]], "sqlite": [[15, null], [54, null]], "sqlite_dataset": [[16, null]], "sqlite_utilities": [[59, null]], "sqlite_writer": [[64, null]], "src": [[151, null]], "standard_averaged_model": [[121, null]], "standard_model": [[122, null]], "string_selection_resolver": [[60, null]], "task": [[123, null], [126, null]], "test_dataset": [[68, null]], "training": [[130, null]], "training_config": [[144, null]], "transformer": [[127, null]], "types": [[37, null]], "utilities": [[33, null], [56, null], [136, null]], "utils": [[96, null], [129, null], [134, null]], "weight_fitting": [[135, null]], "writers": [[61, null]]}, "docnames": ["about/about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.curated_datamodule", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.samplers", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.combine_extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.extractors.liquido", "api/graphnet.data.extractors.liquido.h5_extractor", "api/graphnet.data.extractors.prometheus", "api/graphnet.data.extractors.prometheus.prometheus_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.readers.liquido_reader", "api/graphnet.data.readers.prometheus_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.datasets", "api/graphnet.datasets.prometheus_datasets", "api/graphnet.datasets.snowstorm_dataset", "api/graphnet.datasets.test_dataset", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.data_representation", "api/graphnet.models.data_representation.data_representation", "api/graphnet.models.data_representation.graphs", "api/graphnet.models.data_representation.graphs.edges", "api/graphnet.models.data_representation.graphs.edges.edges", "api/graphnet.models.data_representation.graphs.edges.minkowski", "api/graphnet.models.data_representation.graphs.graph_definition", "api/graphnet.models.data_representation.graphs.graphs", "api/graphnet.models.data_representation.graphs.nodes", "api/graphnet.models.data_representation.graphs.nodes.nodes", "api/graphnet.models.data_representation.graphs.utils", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.liquido", "api/graphnet.models.detector.prometheus", "api/graphnet.models.easy_model", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.grit", "api/graphnet.models.gnn.icemix", "api/graphnet.models.gnn.particlenet", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.nodes", "api/graphnet.models.model", "api/graphnet.models.normalizing_flow", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.transformer", "api/graphnet.models.transformer.iseecube", "api/graphnet.models.utils", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute/contribute", "data_conversion/data_conversion", "datasets/datasets", "getting_started/getting_started", "index", "installation/install", "integration/integration", "intro/intro", "models/models", "substitutions"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["about/about.rst", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.curated_datamodule.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.samplers.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.combine_extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.extractors.liquido.rst", "api/graphnet.data.extractors.liquido.h5_extractor.rst", "api/graphnet.data.extractors.prometheus.rst", "api/graphnet.data.extractors.prometheus.prometheus_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.readers.liquido_reader.rst", "api/graphnet.data.readers.prometheus_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.datasets.rst", "api/graphnet.datasets.prometheus_datasets.rst", "api/graphnet.datasets.snowstorm_dataset.rst", "api/graphnet.datasets.test_dataset.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.data_representation.rst", "api/graphnet.models.data_representation.data_representation.rst", "api/graphnet.models.data_representation.graphs.rst", "api/graphnet.models.data_representation.graphs.edges.rst", "api/graphnet.models.data_representation.graphs.edges.edges.rst", "api/graphnet.models.data_representation.graphs.edges.minkowski.rst", "api/graphnet.models.data_representation.graphs.graph_definition.rst", "api/graphnet.models.data_representation.graphs.graphs.rst", "api/graphnet.models.data_representation.graphs.nodes.rst", "api/graphnet.models.data_representation.graphs.nodes.nodes.rst", "api/graphnet.models.data_representation.graphs.utils.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.liquido.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.easy_model.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.grit.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.gnn.particlenet.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.model.rst", "api/graphnet.models.normalizing_flow.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.transformer.rst", "api/graphnet.models.transformer.iseecube.rst", "api/graphnet.models.utils.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute/contribute.rst", "data_conversion/data_conversion.rst", "datasets/datasets.rst", "getting_started/getting_started.md", "index.rst", "installation/install.rst", "integration/integration.rst", "intro/intro.rst", "models/models.rst", "substitutions.rst"], "indexentries": {"accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors", false]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions", false]], "add_charge_threshold_summary() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[96, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_charge_threshold_summary", false]], "add_counts() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[96, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_counts", false]], "add_full_rrwp() (in module graphnet.models.utils)": [[129, "graphnet.models.utils.add_full_rrwp", false]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[11, "graphnet.data.dataset.dataset.Dataset.add_label", false]], "add_mean() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[96, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_mean", false]], "add_percentile_summary() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[96, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_percentile_summary", false]], "add_std() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[96, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_std", false]], "add_sum_charge() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[96, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_sum_charge", false]], "arca115 (class in graphnet.models.detector.prometheus)": [[101, "graphnet.models.detector.prometheus.ARCA115", false]], "argumentparser (class in graphnet.utilities.argparse)": [[137, "graphnet.utilities.argparse.ArgumentParser", false]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[142, "graphnet.utilities.config.model_config.ModelConfig.arguments", false]], "array_to_sequence() (in module graphnet.models.utils)": [[129, "graphnet.models.utils.array_to_sequence", false]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[139, "graphnet.utilities.config.base_config.BaseConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[142, "graphnet.utilities.config.model_config.ModelConfig.as_dict", false]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.attach_index", false]], "attention_rel (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.Attention_rel", false]], "attributecoarsening (class in graphnet.models.coarsening)": [[81, "graphnet.models.coarsening.AttributeCoarsening", false]], "available_backends (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.available_backends", false]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.AzimuthReconstruction", false]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa", false]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[133, "graphnet.training.loss_functions.LogCMK.backward", false]], "baikalgvd8 (class in graphnet.models.detector.prometheus)": [[101, "graphnet.models.detector.prometheus.BaikalGVD8", false]], "baikalgvdsmall (class in graphnet.datasets.prometheus_datasets)": [[66, "graphnet.datasets.prometheus_datasets.BaikalGVDSmall", false]], "baseconfig (class in graphnet.utilities.config.base_config)": [[139, "graphnet.utilities.config.base_config.BaseConfig", false]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[124, "graphnet.models.task.classification.BinaryClassificationTask", false]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[124, "graphnet.models.task.classification.BinaryClassificationTaskLogits", false]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.BinaryCrossEntropyLoss", false]], "bjoernlow (class in graphnet.training.weight_fitting)": [[135, "graphnet.training.weight_fitting.BjoernLow", false]], "block (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.Block", false]], "block_rel (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.Block_rel", false]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion", false]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[129, "graphnet.models.utils.calculate_distance_matrix", false]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[129, "graphnet.models.utils.calculate_xyzt_homophily", false]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python", false]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python", false]], "chargefilter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.ChargeFilter", false]], "chunk_sizes (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset property)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.chunk_sizes", false]], "chunks (graphnet.data.dataset.samplers.randomchunksampler property)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler.chunks", false]], "citation (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.citation", false]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[142, "graphnet.utilities.config.model_config.ModelConfig.class_name", false]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[120, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object", false]], "cluster_and_pad (class in graphnet.models.data_representation.graphs.utils)": [[96, "graphnet.models.data_representation.graphs.utils.cluster_and_pad", false]], "cluster_summarize_with_percentiles() (in module graphnet.models.data_representation.graphs.utils)": [[96, "graphnet.models.data_representation.graphs.utils.cluster_summarize_with_percentiles", false]], "coarsening (class in graphnet.models.coarsening)": [[81, "graphnet.models.coarsening.Coarsening", false]], "collate_fn() (in module graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.collate_fn", false]], "collate_fn() (in module graphnet.training.utils)": [[134, "graphnet.training.utils.collate_fn", false]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[134, "graphnet.training.utils.collator_sequence_buckleting", false]], "columnmissingexception": [[79, "graphnet.exceptions.exceptions.ColumnMissingException", false]], "combinedextractor (class in graphnet.data.extractors.combine_extractors)": [[18, "graphnet.data.extractors.combine_extractors.CombinedExtractor", false]], "comments (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.comments", false]], "compute_loss() (graphnet.models.easy_model.easysyntax method)": [[102, "graphnet.models.easy_model.EasySyntax.compute_loss", false]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[122, "graphnet.models.standard_model.StandardModel.compute_loss", false]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[126, "graphnet.models.task.task.LearnedTask.compute_loss", false]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[126, "graphnet.models.task.task.StandardLearnedTask.compute_loss", false]], "compute_minkowski_distance_mat() (in module graphnet.models.data_representation.graphs.edges.minkowski)": [[91, "graphnet.models.data_representation.graphs.edges.minkowski.compute_minkowski_distance_mat", false]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[11, "graphnet.data.dataset.dataset.Dataset.concatenate", false]], "config (graphnet.utilities.config.configurable.configurable property)": [[140, "graphnet.utilities.config.configurable.Configurable.config", false]], "configurable (class in graphnet.utilities.config.configurable)": [[140, "graphnet.utilities.config.configurable.Configurable", false]], "configure_optimizers() (graphnet.models.easy_model.easysyntax method)": [[102, "graphnet.models.easy_model.EasySyntax.configure_optimizers", false]], "contains() (graphnet.utilities.argparse.options method)": [[137, "graphnet.utilities.argparse.Options.contains", false]], "convnet (class in graphnet.models.gnn.convnet)": [[105, "graphnet.models.gnn.convnet.ConvNet", false]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.create_table", false]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql", false]], "creator (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.creator", false]], "critical() (graphnet.utilities.logging.logger method)": [[149, "graphnet.utilities.logging.Logger.critical", false]], "crossentropyloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.CrossEntropyLoss", false]], "curateddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.CuratedDataset", false]], "customdomcoarsening (class in graphnet.models.coarsening)": [[81, "graphnet.models.coarsening.CustomDOMCoarsening", false]], "data_representation (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.data_representation", false]], "data_source (graphnet.data.dataset.samplers.randomchunksampler property)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler.data_source", false]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.database_exists", false]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.database_table_exists", false]], "dataconverter (class in graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.DataConverter", false]], "dataloader (class in graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.DataLoader", false]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[144, "graphnet.utilities.config.training_config.TrainingConfig.dataloader", false]], "datarepresentation (class in graphnet.models.data_representation.data_representation)": [[87, "graphnet.models.data_representation.data_representation.DataRepresentation", false]], "dataset (class in graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.Dataset", false]], "dataset_dir (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.dataset_dir", false]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig", false]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta", false]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta", false]], "debug() (graphnet.utilities.logging.logger method)": [[149, "graphnet.utilities.logging.Logger.debug", false]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE", false]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE", false]], "deepice (class in graphnet.models.gnn.icemix)": [[111, "graphnet.models.gnn.icemix.DeepIce", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[124, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[124, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[125, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[125, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[125, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[125, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[125, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[125, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[126, "graphnet.models.task.task.IdentityTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.standardflowtask property)": [[126, "graphnet.models.task.task.StandardFlowTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.task property)": [[126, "graphnet.models.task.task.Task.default_prediction_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[124, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[124, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[125, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[125, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[125, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[125, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[125, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[125, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[126, "graphnet.models.task.task.IdentityTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.task property)": [[126, "graphnet.models.task.task.Task.default_target_labels", false]], "deployer (class in graphnet.deployment.deployer)": [[70, "graphnet.deployment.deployer.Deployer", false]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[71, "graphnet.deployment.deployment_module.DeploymentModule", false]], "description() (graphnet.data.curated_datamodule.curateddataset method)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.description", false]], "detector (class in graphnet.models.detector.detector)": [[98, "graphnet.models.detector.detector.Detector", false]], "direction (class in graphnet.training.labels)": [[132, "graphnet.training.labels.Direction", false]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa", false]], "do_shuffle() (in module graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.do_shuffle", false]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[81, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening", false]], "domcoarsening (class in graphnet.models.coarsening)": [[81, "graphnet.models.coarsening.DOMCoarsening", false]], "droppath (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.DropPath", false]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[139, "graphnet.utilities.config.base_config.BaseConfig.dump", false]], "dynedge (class in graphnet.models.gnn.dynedge)": [[106, "graphnet.models.gnn.dynedge.DynEdge", false]], "dynedgeconv (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.DynEdgeConv", false]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[107, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST", false]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[108, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO", false]], "dyntrans (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.DynTrans", false]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[144, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience", false]], "easysyntax (class in graphnet.models.easy_model)": [[102, "graphnet.models.easy_model.EasySyntax", false]], "edgeconvtito (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.EdgeConvTito", false]], "edgedefinition (class in graphnet.models.data_representation.graphs.edges.edges)": [[90, "graphnet.models.data_representation.graphs.edges.edges.EdgeDefinition", false]], "edgelessgraph (class in graphnet.models.data_representation.graphs.graphs)": [[93, "graphnet.models.data_representation.graphs.graphs.EdgelessGraph", false]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.EnergyReconstruction", false]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower", false]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty", false]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.EnergyTCReconstruction", false]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.EnsembleDataset", false]], "ensembleloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.EnsembleLoss", false]], "eps_like() (in module graphnet.utilities.maths)": [[150, "graphnet.utilities.maths.eps_like", false]], "erdahosteddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.ERDAHostedDataset", false]], "error() (graphnet.utilities.logging.logger method)": [[149, "graphnet.utilities.logging.Logger.error", false]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.EuclideanDistanceLoss", false]], "euclideanedges (class in graphnet.models.data_representation.graphs.edges.edges)": [[90, "graphnet.models.data_representation.graphs.edges.edges.EuclideanEdges", false]], "event_truth (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.event_truth", false]], "events (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.events", false]], "exclude() (graphnet.data.extractors.extractor.extractor method)": [[19, "graphnet.data.extractors.extractor.Extractor.exclude", false]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[62, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes", false]], "experiment (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.experiment", false]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[84, "graphnet.models.components.layers.DropPath.extra_repr", false]], "extra_repr() (graphnet.models.model.model method)": [[117, "graphnet.models.model.Model.extra_repr", false]], "extra_repr_recursive() (graphnet.models.model.model method)": [[117, "graphnet.models.model.Model.extra_repr_recursive", false]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names", false]], "extractor (class in graphnet.data.extractors.extractor)": [[19, "graphnet.data.extractors.extractor.Extractor", false]], "feature_map() (graphnet.models.detector.detector.detector method)": [[98, "graphnet.models.detector.detector.Detector.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[99, "graphnet.models.detector.icecube.IceCube86.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[99, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[99, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[99, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map", false]], "feature_map() (graphnet.models.detector.liquido.liquido_v1 method)": [[100, "graphnet.models.detector.liquido.LiquidO_v1.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.arca115 method)": [[101, "graphnet.models.detector.prometheus.ARCA115.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.baikalgvd8 method)": [[101, "graphnet.models.detector.prometheus.BaikalGVD8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecube86prometheus method)": [[101, "graphnet.models.detector.prometheus.IceCube86Prometheus.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubedeepcore8 method)": [[101, "graphnet.models.detector.prometheus.IceCubeDeepCore8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubegen2 method)": [[101, "graphnet.models.detector.prometheus.IceCubeGen2.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubeupgrade7 method)": [[101, "graphnet.models.detector.prometheus.IceCubeUpgrade7.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icedemo81 method)": [[101, "graphnet.models.detector.prometheus.IceDemo81.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[101, "graphnet.models.detector.prometheus.ORCA150.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150superdense method)": [[101, "graphnet.models.detector.prometheus.ORCA150SuperDense.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.ponetriangle method)": [[101, "graphnet.models.detector.prometheus.PONETriangle.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.trident1211 method)": [[101, "graphnet.models.detector.prometheus.TRIDENT1211.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.waterdemo81 method)": [[101, "graphnet.models.detector.prometheus.WaterDemo81.feature_map", false]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES", false]], "features (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.features", false]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.features", false]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[62, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension", false]], "file_handlers (graphnet.utilities.logging.logger property)": [[149, "graphnet.utilities.logging.Logger.file_handlers", false]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[149, "graphnet.utilities.logging.RepeatFilter.filter", false]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files", false]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[50, "graphnet.data.readers.i3reader.I3Reader.find_files", false]], "find_files() (graphnet.data.readers.internal_parquet_reader.parquetreader method)": [[51, "graphnet.data.readers.internal_parquet_reader.ParquetReader.find_files", false]], "find_files() (graphnet.data.readers.liquido_reader.liquidoreader method)": [[52, "graphnet.data.readers.liquido_reader.LiquidOReader.find_files", false]], "find_files() (graphnet.data.readers.prometheus_reader.prometheusreader method)": [[53, "graphnet.data.readers.prometheus_reader.PrometheusReader.find_files", false]], "find_i3_files() (in module graphnet.utilities.filesys)": [[147, "graphnet.utilities.filesys.find_i3_files", false]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[144, "graphnet.utilities.config.training_config.TrainingConfig.fit", false]], "fit() (graphnet.models.easy_model.easysyntax method)": [[102, "graphnet.models.easy_model.EasySyntax.fit", false]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[135, "graphnet.training.weight_fitting.WeightFitter.fit", false]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary", false]], "forward() (graphnet.models.coarsening.coarsening method)": [[81, "graphnet.models.coarsening.Coarsening.forward", false]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[83, "graphnet.models.components.embedding.FourierEncoder.forward", false]], "forward() (graphnet.models.components.embedding.linearedgeencoder method)": [[83, "graphnet.models.components.embedding.LinearEdgeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.linearnodeencoder method)": [[83, "graphnet.models.components.embedding.LinearNodeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.rrwplinearedgeencoder method)": [[83, "graphnet.models.components.embedding.RRWPLinearEdgeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.rrwplinearnodeencoder method)": [[83, "graphnet.models.components.embedding.RRWPLinearNodeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.rwselinearnodeencoder method)": [[83, "graphnet.models.components.embedding.RWSELinearNodeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[83, "graphnet.models.components.embedding.SinusoidalPosEmb.forward", false]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[83, "graphnet.models.components.embedding.SpacetimeEncoder.forward", false]], "forward() (graphnet.models.components.layers.attention_rel method)": [[84, "graphnet.models.components.layers.Attention_rel.forward", false]], "forward() (graphnet.models.components.layers.block method)": [[84, "graphnet.models.components.layers.Block.forward", false]], "forward() (graphnet.models.components.layers.block_rel method)": [[84, "graphnet.models.components.layers.Block_rel.forward", false]], "forward() (graphnet.models.components.layers.droppath method)": [[84, "graphnet.models.components.layers.DropPath.forward", false]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[84, "graphnet.models.components.layers.DynEdgeConv.forward", false]], "forward() (graphnet.models.components.layers.dyntrans method)": [[84, "graphnet.models.components.layers.DynTrans.forward", false]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[84, "graphnet.models.components.layers.EdgeConvTito.forward", false]], "forward() (graphnet.models.components.layers.gritsparsemha method)": [[84, "graphnet.models.components.layers.GritSparseMHA.forward", false]], "forward() (graphnet.models.components.layers.grittransformerlayer method)": [[84, "graphnet.models.components.layers.GritTransformerLayer.forward", false]], "forward() (graphnet.models.components.layers.mlp method)": [[84, "graphnet.models.components.layers.Mlp.forward", false]], "forward() (graphnet.models.components.layers.sangraphhead method)": [[84, "graphnet.models.components.layers.SANGraphHead.forward", false]], "forward() (graphnet.models.data_representation.data_representation.datarepresentation method)": [[87, "graphnet.models.data_representation.data_representation.DataRepresentation.forward", false]], "forward() (graphnet.models.data_representation.graphs.edges.edges.edgedefinition method)": [[90, "graphnet.models.data_representation.graphs.edges.edges.EdgeDefinition.forward", false]], "forward() (graphnet.models.data_representation.graphs.graph_definition.graphdefinition method)": [[92, "graphnet.models.data_representation.graphs.graph_definition.GraphDefinition.forward", false]], "forward() (graphnet.models.data_representation.graphs.graphs.knngraphrrwp method)": [[93, "graphnet.models.data_representation.graphs.graphs.KNNGraphRRWP.forward", false]], "forward() (graphnet.models.data_representation.graphs.graphs.knngraphrwse method)": [[93, "graphnet.models.data_representation.graphs.graphs.KNNGraphRWSE.forward", false]], "forward() (graphnet.models.data_representation.graphs.nodes.nodes.nodedefinition method)": [[95, "graphnet.models.data_representation.graphs.nodes.nodes.NodeDefinition.forward", false]], "forward() (graphnet.models.detector.detector.detector method)": [[98, "graphnet.models.detector.detector.Detector.forward", false]], "forward() (graphnet.models.easy_model.easysyntax method)": [[102, "graphnet.models.easy_model.EasySyntax.forward", false]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[105, "graphnet.models.gnn.convnet.ConvNet.forward", false]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[106, "graphnet.models.gnn.dynedge.DynEdge.forward", false]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[107, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward", false]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[108, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward", false]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[109, "graphnet.models.gnn.gnn.GNN.forward", false]], "forward() (graphnet.models.gnn.grit.grit method)": [[110, "graphnet.models.gnn.grit.GRIT.forward", false]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[111, "graphnet.models.gnn.icemix.DeepIce.forward", false]], "forward() (graphnet.models.gnn.particlenet.particlenet method)": [[112, "graphnet.models.gnn.particlenet.ParticleNeT.forward", false]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[104, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward", false]], "forward() (graphnet.models.normalizing_flow.normalizingflow method)": [[118, "graphnet.models.normalizing_flow.NormalizingFlow.forward", false]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[120, "graphnet.models.rnn.node_rnn.Node_RNN.forward", false]], "forward() (graphnet.models.standard_model.standardmodel method)": [[122, "graphnet.models.standard_model.StandardModel.forward", false]], "forward() (graphnet.models.task.task.learnedtask method)": [[126, "graphnet.models.task.task.LearnedTask.forward", false]], "forward() (graphnet.models.task.task.standardflowtask method)": [[126, "graphnet.models.task.task.StandardFlowTask.forward", false]], "forward() (graphnet.models.transformer.iseecube.iseecube method)": [[128, "graphnet.models.transformer.iseecube.ISeeCube.forward", false]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[133, "graphnet.training.loss_functions.LogCMK.forward", false]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[133, "graphnet.training.loss_functions.LossFunction.forward", false]], "fourierencoder (class in graphnet.models.components.embedding)": [[83, "graphnet.models.components.embedding.FourierEncoder", false]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo", false]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise", false]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[11, "graphnet.data.dataset.dataset.Dataset.from_config", false]], "from_config() (graphnet.models.model.model class method)": [[117, "graphnet.models.model.Model.from_config", false]], "from_config() (graphnet.utilities.config.configurable.configurable method)": [[140, "graphnet.utilities.config.configurable.Configurable.from_config", false]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[8, "graphnet.data.dataloader.DataLoader.from_dataset_config", false]], "full_edge_index() (in module graphnet.models.utils)": [[129, "graphnet.models.utils.full_edge_index", false]], "gather_cluster_sequence() (in module graphnet.models.data_representation.graphs.utils)": [[96, "graphnet.models.data_representation.graphs.utils.gather_cluster_sequence", false]], "gather_len_matched_buckets() (in module graphnet.data.dataset.samplers)": [[14, "graphnet.data.dataset.samplers.gather_len_matched_buckets", false]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.gcd_file", false]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.gcd_file", false]], "geometry_table (graphnet.models.detector.detector.detector property)": [[98, "graphnet.models.detector.detector.Detector.geometry_table", false]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[99, "graphnet.models.detector.icecube.IceCube86.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubekaggle attribute)": [[99, "graphnet.models.detector.icecube.IceCubeKaggle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[99, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.liquido.liquido_v1 attribute)": [[100, "graphnet.models.detector.liquido.LiquidO_v1.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.arca115 attribute)": [[101, "graphnet.models.detector.prometheus.ARCA115.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[101, "graphnet.models.detector.prometheus.BaikalGVD8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[101, "graphnet.models.detector.prometheus.IceCube86Prometheus.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[101, "graphnet.models.detector.prometheus.IceCubeDeepCore8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[101, "graphnet.models.detector.prometheus.IceCubeGen2.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[101, "graphnet.models.detector.prometheus.IceCubeUpgrade7.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icedemo81 attribute)": [[101, "graphnet.models.detector.prometheus.IceDemo81.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[101, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150superdense attribute)": [[101, "graphnet.models.detector.prometheus.ORCA150SuperDense.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.ponetriangle attribute)": [[101, "graphnet.models.detector.prometheus.PONETriangle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.trident1211 attribute)": [[101, "graphnet.models.detector.prometheus.TRIDENT1211.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[101, "graphnet.models.detector.prometheus.WaterDemo81.geometry_table_path", false]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[139, "graphnet.utilities.config.base_config.get_all_argument_values", false]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[143, "graphnet.utilities.config.parsing.get_all_grapnet_classes", false]], "get_fields() (in module graphnet.models.utils)": [[129, "graphnet.models.utils.get_fields", false]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[143, "graphnet.utilities.config.parsing.get_graphnet_classes", false]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[131, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr", false]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.get_map_function", false]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.get_member_variables", false]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[131, "graphnet.training.callbacks.ProgressBar.get_metrics", false]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries", false]], "get_predictions() (in module graphnet.training.utils)": [[134, "graphnet.training.utils.get_predictions", false]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.get_primary_keys", false]], "get_rw_landing_probs() (in module graphnet.models.utils)": [[129, "graphnet.models.utils.get_rw_landing_probs", false]], "gnn (class in graphnet.models.gnn.gnn)": [[109, "graphnet.models.gnn.gnn.GNN", false]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition", false]], "graphdefinition (class in graphnet.models.data_representation.graphs.graph_definition)": [[92, "graphnet.models.data_representation.graphs.graph_definition.GraphDefinition", false]], "graphnet": [[1, "module-graphnet", false]], "graphnet.constants": [[2, "module-graphnet.constants", false]], "graphnet.data": [[3, "module-graphnet.data", false]], "graphnet.data.constants": [[4, "module-graphnet.data.constants", false]], "graphnet.data.curated_datamodule": [[5, "module-graphnet.data.curated_datamodule", false]], "graphnet.data.dataclasses": [[6, "module-graphnet.data.dataclasses", false]], "graphnet.data.dataconverter": [[7, "module-graphnet.data.dataconverter", false]], "graphnet.data.dataloader": [[8, "module-graphnet.data.dataloader", false]], "graphnet.data.datamodule": [[9, "module-graphnet.data.datamodule", false]], "graphnet.data.dataset": [[10, "module-graphnet.data.dataset", false]], "graphnet.data.dataset.dataset": [[11, "module-graphnet.data.dataset.dataset", false]], "graphnet.data.dataset.parquet": [[12, "module-graphnet.data.dataset.parquet", false]], "graphnet.data.dataset.parquet.parquet_dataset": [[13, "module-graphnet.data.dataset.parquet.parquet_dataset", false]], "graphnet.data.dataset.samplers": [[14, "module-graphnet.data.dataset.samplers", false]], "graphnet.data.dataset.sqlite": [[15, "module-graphnet.data.dataset.sqlite", false]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[16, "module-graphnet.data.dataset.sqlite.sqlite_dataset", false]], "graphnet.data.extractors": [[17, "module-graphnet.data.extractors", false]], "graphnet.data.extractors.combine_extractors": [[18, "module-graphnet.data.extractors.combine_extractors", false]], "graphnet.data.extractors.extractor": [[19, "module-graphnet.data.extractors.extractor", false]], "graphnet.data.extractors.icecube": [[20, "module-graphnet.data.extractors.icecube", false]], "graphnet.data.extractors.icecube.i3extractor": [[21, "module-graphnet.data.extractors.icecube.i3extractor", false]], "graphnet.data.extractors.icecube.i3featureextractor": [[22, "module-graphnet.data.extractors.icecube.i3featureextractor", false]], "graphnet.data.extractors.icecube.i3genericextractor": [[23, "module-graphnet.data.extractors.icecube.i3genericextractor", false]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[24, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[25, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false]], "graphnet.data.extractors.icecube.i3particleextractor": [[26, "module-graphnet.data.extractors.icecube.i3particleextractor", false]], "graphnet.data.extractors.icecube.i3pisaextractor": [[27, "module-graphnet.data.extractors.icecube.i3pisaextractor", false]], "graphnet.data.extractors.icecube.i3quesoextractor": [[28, "module-graphnet.data.extractors.icecube.i3quesoextractor", false]], "graphnet.data.extractors.icecube.i3retroextractor": [[29, "module-graphnet.data.extractors.icecube.i3retroextractor", false]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[30, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false]], "graphnet.data.extractors.icecube.i3truthextractor": [[31, "module-graphnet.data.extractors.icecube.i3truthextractor", false]], "graphnet.data.extractors.icecube.i3tumextractor": [[32, "module-graphnet.data.extractors.icecube.i3tumextractor", false]], "graphnet.data.extractors.icecube.utilities": [[33, "module-graphnet.data.extractors.icecube.utilities", false]], "graphnet.data.extractors.icecube.utilities.collections": [[34, "module-graphnet.data.extractors.icecube.utilities.collections", false]], "graphnet.data.extractors.icecube.utilities.frames": [[35, "module-graphnet.data.extractors.icecube.utilities.frames", false]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[36, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false]], "graphnet.data.extractors.icecube.utilities.types": [[37, "module-graphnet.data.extractors.icecube.utilities.types", false]], "graphnet.data.extractors.internal": [[38, "module-graphnet.data.extractors.internal", false]], "graphnet.data.extractors.internal.parquet_extractor": [[39, "module-graphnet.data.extractors.internal.parquet_extractor", false]], "graphnet.data.extractors.liquido": [[40, "module-graphnet.data.extractors.liquido", false]], "graphnet.data.extractors.liquido.h5_extractor": [[41, "module-graphnet.data.extractors.liquido.h5_extractor", false]], "graphnet.data.extractors.prometheus": [[42, "module-graphnet.data.extractors.prometheus", false]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[43, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false]], "graphnet.data.parquet": [[44, "module-graphnet.data.parquet", false]], "graphnet.data.parquet.deprecated_methods": [[45, "module-graphnet.data.parquet.deprecated_methods", false]], "graphnet.data.pre_configured": [[46, "module-graphnet.data.pre_configured", false]], "graphnet.data.pre_configured.dataconverters": [[47, "module-graphnet.data.pre_configured.dataconverters", false]], "graphnet.data.readers": [[48, "module-graphnet.data.readers", false]], "graphnet.data.readers.graphnet_file_reader": [[49, "module-graphnet.data.readers.graphnet_file_reader", false]], "graphnet.data.readers.i3reader": [[50, "module-graphnet.data.readers.i3reader", false]], "graphnet.data.readers.internal_parquet_reader": [[51, "module-graphnet.data.readers.internal_parquet_reader", false]], "graphnet.data.readers.liquido_reader": [[52, "module-graphnet.data.readers.liquido_reader", false]], "graphnet.data.readers.prometheus_reader": [[53, "module-graphnet.data.readers.prometheus_reader", false]], "graphnet.data.sqlite": [[54, "module-graphnet.data.sqlite", false]], "graphnet.data.sqlite.deprecated_methods": [[55, "module-graphnet.data.sqlite.deprecated_methods", false]], "graphnet.data.utilities": [[56, "module-graphnet.data.utilities", false]], "graphnet.data.utilities.parquet_to_sqlite": [[57, "module-graphnet.data.utilities.parquet_to_sqlite", false]], "graphnet.data.utilities.random": [[58, "module-graphnet.data.utilities.random", false]], "graphnet.data.utilities.sqlite_utilities": [[59, "module-graphnet.data.utilities.sqlite_utilities", false]], "graphnet.data.utilities.string_selection_resolver": [[60, "module-graphnet.data.utilities.string_selection_resolver", false]], "graphnet.data.writers": [[61, "module-graphnet.data.writers", false]], "graphnet.data.writers.graphnet_writer": [[62, "module-graphnet.data.writers.graphnet_writer", false]], "graphnet.data.writers.parquet_writer": [[63, "module-graphnet.data.writers.parquet_writer", false]], "graphnet.data.writers.sqlite_writer": [[64, "module-graphnet.data.writers.sqlite_writer", false]], "graphnet.datasets": [[65, "module-graphnet.datasets", false]], "graphnet.datasets.prometheus_datasets": [[66, "module-graphnet.datasets.prometheus_datasets", false]], "graphnet.datasets.snowstorm_dataset": [[67, "module-graphnet.datasets.snowstorm_dataset", false]], "graphnet.datasets.test_dataset": [[68, "module-graphnet.datasets.test_dataset", false]], "graphnet.deployment": [[69, "module-graphnet.deployment", false]], "graphnet.deployment.deployer": [[70, "module-graphnet.deployment.deployer", false]], "graphnet.deployment.deployment_module": [[71, "module-graphnet.deployment.deployment_module", false]], "graphnet.deployment.i3modules": [[72, "module-graphnet.deployment.i3modules", false]], "graphnet.deployment.i3modules.deprecated_methods": [[73, "module-graphnet.deployment.i3modules.deprecated_methods", false]], "graphnet.deployment.icecube": [[74, "module-graphnet.deployment.icecube", false]], "graphnet.deployment.icecube.cleaning_module": [[75, "module-graphnet.deployment.icecube.cleaning_module", false]], "graphnet.deployment.icecube.i3deployer": [[76, "module-graphnet.deployment.icecube.i3deployer", false]], "graphnet.deployment.icecube.inference_module": [[77, "module-graphnet.deployment.icecube.inference_module", false]], "graphnet.exceptions": [[78, "module-graphnet.exceptions", false]], "graphnet.exceptions.exceptions": [[79, "module-graphnet.exceptions.exceptions", false]], "graphnet.models": [[80, "module-graphnet.models", false]], "graphnet.models.coarsening": [[81, "module-graphnet.models.coarsening", false]], "graphnet.models.components": [[82, "module-graphnet.models.components", false]], "graphnet.models.components.embedding": [[83, "module-graphnet.models.components.embedding", false]], "graphnet.models.components.layers": [[84, "module-graphnet.models.components.layers", false]], "graphnet.models.components.pool": [[85, "module-graphnet.models.components.pool", false]], "graphnet.models.data_representation": [[86, "module-graphnet.models.data_representation", false]], "graphnet.models.data_representation.data_representation": [[87, "module-graphnet.models.data_representation.data_representation", false]], "graphnet.models.data_representation.graphs": [[88, "module-graphnet.models.data_representation.graphs", false]], "graphnet.models.data_representation.graphs.edges": [[89, "module-graphnet.models.data_representation.graphs.edges", false]], "graphnet.models.data_representation.graphs.edges.edges": [[90, "module-graphnet.models.data_representation.graphs.edges.edges", false]], "graphnet.models.data_representation.graphs.edges.minkowski": [[91, "module-graphnet.models.data_representation.graphs.edges.minkowski", false]], "graphnet.models.data_representation.graphs.graph_definition": [[92, "module-graphnet.models.data_representation.graphs.graph_definition", false]], "graphnet.models.data_representation.graphs.graphs": [[93, "module-graphnet.models.data_representation.graphs.graphs", false]], "graphnet.models.data_representation.graphs.nodes": [[94, "module-graphnet.models.data_representation.graphs.nodes", false]], "graphnet.models.data_representation.graphs.nodes.nodes": [[95, "module-graphnet.models.data_representation.graphs.nodes.nodes", false]], "graphnet.models.data_representation.graphs.utils": [[96, "module-graphnet.models.data_representation.graphs.utils", false]], "graphnet.models.detector": [[97, "module-graphnet.models.detector", false]], "graphnet.models.detector.detector": [[98, "module-graphnet.models.detector.detector", false]], "graphnet.models.detector.icecube": [[99, "module-graphnet.models.detector.icecube", false]], "graphnet.models.detector.liquido": [[100, "module-graphnet.models.detector.liquido", false]], "graphnet.models.detector.prometheus": [[101, "module-graphnet.models.detector.prometheus", false]], "graphnet.models.easy_model": [[102, "module-graphnet.models.easy_model", false]], "graphnet.models.gnn": [[103, "module-graphnet.models.gnn", false]], "graphnet.models.gnn.convnet": [[105, "module-graphnet.models.gnn.convnet", false]], "graphnet.models.gnn.dynedge": [[106, "module-graphnet.models.gnn.dynedge", false]], "graphnet.models.gnn.dynedge_jinst": [[107, "module-graphnet.models.gnn.dynedge_jinst", false]], "graphnet.models.gnn.dynedge_kaggle_tito": [[108, "module-graphnet.models.gnn.dynedge_kaggle_tito", false]], "graphnet.models.gnn.gnn": [[109, "module-graphnet.models.gnn.gnn", false]], "graphnet.models.gnn.grit": [[110, "module-graphnet.models.gnn.grit", false]], "graphnet.models.gnn.icemix": [[111, "module-graphnet.models.gnn.icemix", false]], "graphnet.models.gnn.particlenet": [[112, "module-graphnet.models.gnn.particlenet", false]], "graphnet.models.gnn.rnn_tito": [[104, "module-graphnet.models.gnn.RNN_tito", false]], "graphnet.models.graphs": [[113, "module-graphnet.models.graphs", false]], "graphnet.models.graphs.edges": [[114, "module-graphnet.models.graphs.edges", false]], "graphnet.models.graphs.edges.minkowski": [[115, "module-graphnet.models.graphs.edges.minkowski", false]], "graphnet.models.graphs.nodes": [[116, "module-graphnet.models.graphs.nodes", false]], "graphnet.models.model": [[117, "module-graphnet.models.model", false]], "graphnet.models.normalizing_flow": [[118, "module-graphnet.models.normalizing_flow", false]], "graphnet.models.rnn": [[119, "module-graphnet.models.rnn", false]], "graphnet.models.rnn.node_rnn": [[120, "module-graphnet.models.rnn.node_rnn", false]], "graphnet.models.standard_averaged_model": [[121, "module-graphnet.models.standard_averaged_model", false]], "graphnet.models.standard_model": [[122, "module-graphnet.models.standard_model", false]], "graphnet.models.task": [[123, "module-graphnet.models.task", false]], "graphnet.models.task.classification": [[124, "module-graphnet.models.task.classification", false]], "graphnet.models.task.reconstruction": [[125, "module-graphnet.models.task.reconstruction", false]], "graphnet.models.task.task": [[126, "module-graphnet.models.task.task", false]], "graphnet.models.transformer": [[127, "module-graphnet.models.transformer", false]], "graphnet.models.transformer.iseecube": [[128, "module-graphnet.models.transformer.iseecube", false]], "graphnet.models.utils": [[129, "module-graphnet.models.utils", false]], "graphnet.training": [[130, "module-graphnet.training", false]], "graphnet.training.callbacks": [[131, "module-graphnet.training.callbacks", false]], "graphnet.training.labels": [[132, "module-graphnet.training.labels", false]], "graphnet.training.loss_functions": [[133, "module-graphnet.training.loss_functions", false]], "graphnet.training.utils": [[134, "module-graphnet.training.utils", false]], "graphnet.training.weight_fitting": [[135, "module-graphnet.training.weight_fitting", false]], "graphnet.utilities": [[136, "module-graphnet.utilities", false]], "graphnet.utilities.argparse": [[137, "module-graphnet.utilities.argparse", false]], "graphnet.utilities.config": [[138, "module-graphnet.utilities.config", false]], "graphnet.utilities.config.base_config": [[139, "module-graphnet.utilities.config.base_config", false]], "graphnet.utilities.config.configurable": [[140, "module-graphnet.utilities.config.configurable", false]], "graphnet.utilities.config.dataset_config": [[141, "module-graphnet.utilities.config.dataset_config", false]], "graphnet.utilities.config.model_config": [[142, "module-graphnet.utilities.config.model_config", false]], "graphnet.utilities.config.parsing": [[143, "module-graphnet.utilities.config.parsing", false]], "graphnet.utilities.config.training_config": [[144, "module-graphnet.utilities.config.training_config", false]], "graphnet.utilities.decorators": [[145, "module-graphnet.utilities.decorators", false]], "graphnet.utilities.deprecation_tools": [[146, "module-graphnet.utilities.deprecation_tools", false]], "graphnet.utilities.filesys": [[147, "module-graphnet.utilities.filesys", false]], "graphnet.utilities.imports": [[148, "module-graphnet.utilities.imports", false]], "graphnet.utilities.logging": [[149, "module-graphnet.utilities.logging", false]], "graphnet.utilities.maths": [[150, "module-graphnet.utilities.maths", false]], "graphnetdatamodule (class in graphnet.data.datamodule)": [[9, "graphnet.data.datamodule.GraphNeTDataModule", false]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[131, "graphnet.training.callbacks.GraphnetEarlyStopping", false]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader", false]], "graphneti3deployer (class in graphnet.deployment.i3modules.deprecated_methods)": [[73, "graphnet.deployment.i3modules.deprecated_methods.GraphNeTI3Deployer", false]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[62, "graphnet.data.writers.graphnet_writer.GraphNeTWriter", false]], "grit (class in graphnet.models.gnn.grit)": [[110, "graphnet.models.gnn.grit.GRIT", false]], "gritsparsemha (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.GritSparseMHA", false]], "grittransformerlayer (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.GritTransformerLayer", false]], "group_by() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.group_by", false]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.group_pulses_to_dom", false]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.group_pulses_to_pmt", false]], "h5extractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[41, "graphnet.data.extractors.liquido.h5_extractor.H5Extractor", false]], "h5hitextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[41, "graphnet.data.extractors.liquido.h5_extractor.H5HitExtractor", false]], "h5truthextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[41, "graphnet.data.extractors.liquido.h5_extractor.H5TruthExtractor", false]], "handlers (graphnet.utilities.logging.logger property)": [[149, "graphnet.utilities.logging.Logger.handlers", false]], "has_extension() (in module graphnet.utilities.filesys)": [[147, "graphnet.utilities.filesys.has_extension", false]], "has_icecube_package() (in module graphnet.utilities.imports)": [[148, "graphnet.utilities.imports.has_icecube_package", false]], "has_jammy_flows_package() (in module graphnet.utilities.imports)": [[148, "graphnet.utilities.imports.has_jammy_flows_package", false]], "has_torch_package() (in module graphnet.utilities.imports)": [[148, "graphnet.utilities.imports.has_torch_package", false]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.i3_file", false]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.i3_files", false]], "i3deployer (class in graphnet.deployment.icecube.i3deployer)": [[76, "graphnet.deployment.icecube.i3deployer.I3Deployer", false]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[21, "graphnet.data.extractors.icecube.i3extractor.I3Extractor", false]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor", false]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86", false]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore", false]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade", false]], "i3fileset (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.I3FileSet", false]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter", false]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask", false]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[24, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor", false]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[23, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor", false]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[77, "graphnet.deployment.icecube.inference_module.I3InferenceModule", false]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[25, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor", false]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[26, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor", false]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[27, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor", false]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[75, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule", false]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade", false]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[28, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor", false]], "i3reader (class in graphnet.data.readers.i3reader)": [[50, "graphnet.data.readers.i3reader.I3Reader", false]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[29, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor", false]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[30, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor", false]], "i3toparquetconverter (class in graphnet.data.pre_configured.dataconverters)": [[47, "graphnet.data.pre_configured.dataconverters.I3ToParquetConverter", false]], "i3tosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[47, "graphnet.data.pre_configured.dataconverters.I3ToSQLiteConverter", false]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[31, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor", false]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[32, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor", false]], "ice_transparency() (in module graphnet.models.data_representation.graphs.utils)": [[96, "graphnet.models.data_representation.graphs.utils.ice_transparency", false]], "icecube86 (class in graphnet.models.detector.icecube)": [[99, "graphnet.models.detector.icecube.IceCube86", false]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86", false]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86", false]], "icecube86prometheus (class in graphnet.models.detector.prometheus)": [[101, "graphnet.models.detector.prometheus.IceCube86Prometheus", false]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[99, "graphnet.models.detector.icecube.IceCubeDeepCore", false]], "icecubedeepcore8 (class in graphnet.models.detector.prometheus)": [[101, "graphnet.models.detector.prometheus.IceCubeDeepCore8", false]], "icecubegen2 (class in graphnet.models.detector.prometheus)": [[101, "graphnet.models.detector.prometheus.IceCubeGen2", false]], "icecubehosteddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.IceCubeHostedDataset", false]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[99, "graphnet.models.detector.icecube.IceCubeKaggle", false]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[99, "graphnet.models.detector.icecube.IceCubeUpgrade", false]], "icecubeupgrade7 (class in graphnet.models.detector.prometheus)": [[101, "graphnet.models.detector.prometheus.IceCubeUpgrade7", false]], "icedemo81 (class in graphnet.models.detector.prometheus)": [[101, "graphnet.models.detector.prometheus.IceDemo81", false]], "icemixnodes (class in graphnet.models.data_representation.graphs.nodes.nodes)": [[95, "graphnet.models.data_representation.graphs.nodes.nodes.IceMixNodes", false]], "identify_indices() (in module graphnet.models.data_representation.graphs.utils)": [[96, "graphnet.models.data_representation.graphs.utils.identify_indices", false]], "identitytask (class in graphnet.models.task.task)": [[126, "graphnet.models.task.task.IdentityTask", false]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column", false]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.InelasticityReconstruction", false]], "inference() (graphnet.models.easy_model.easysyntax method)": [[102, "graphnet.models.easy_model.EasySyntax.inference", false]], "inference() (graphnet.models.task.task.task method)": [[126, "graphnet.models.task.task.Task.inference", false]], "info() (graphnet.utilities.logging.logger method)": [[149, "graphnet.utilities.logging.Logger.info", false]], "init_global_index() (in module graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.init_global_index", false]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[131, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm", false]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[131, "graphnet.training.callbacks.ProgressBar.init_test_tqdm", false]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[131, "graphnet.training.callbacks.ProgressBar.init_train_tqdm", false]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[131, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm", false]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_boost_class", false]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum", false]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[147, "graphnet.utilities.filesys.is_gcd_file", false]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[143, "graphnet.utilities.config.parsing.is_graphnet_class", false]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[143, "graphnet.utilities.config.parsing.is_graphnet_module", false]], "is_i3_file() (in module graphnet.utilities.filesys)": [[147, "graphnet.utilities.filesys.is_i3_file", false]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class", false]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_method", false]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_type", false]], "iseecube (class in graphnet.models.transformer.iseecube)": [[128, "graphnet.models.transformer.iseecube.ISeeCube", false]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE", false]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE", false]], "key (graphnet.training.labels.label property)": [[132, "graphnet.training.labels.Label.key", false]], "knn_graph_batch() (in module graphnet.models.utils)": [[129, "graphnet.models.utils.knn_graph_batch", false]], "knndistanceedges (class in graphnet.models.data_representation.graphs.edges.edges)": [[90, "graphnet.models.data_representation.graphs.edges.edges.KNNDistanceEdges", false]], "knnedges (class in graphnet.models.data_representation.graphs.edges.edges)": [[90, "graphnet.models.data_representation.graphs.edges.edges.KNNEdges", false]], "knngraph (class in graphnet.models.data_representation.graphs.graphs)": [[93, "graphnet.models.data_representation.graphs.graphs.KNNGraph", false]], "knngraphrrwp (class in graphnet.models.data_representation.graphs.graphs)": [[93, "graphnet.models.data_representation.graphs.graphs.KNNGraphRRWP", false]], "knngraphrwse (class in graphnet.models.data_representation.graphs.graphs)": [[93, "graphnet.models.data_representation.graphs.graphs.KNNGraphRWSE", false]], "label (class in graphnet.training.labels)": [[132, "graphnet.training.labels.Label", false]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.labels", false]], "learnedtask (class in graphnet.models.task.task)": [[126, "graphnet.models.task.task.LearnedTask", false]], "lenmatchbatchsampler (class in graphnet.data.dataset.samplers)": [[14, "graphnet.data.dataset.samplers.LenMatchBatchSampler", false]], "lex_sort() (in module graphnet.models.data_representation.graphs.utils)": [[96, "graphnet.models.data_representation.graphs.utils.lex_sort", false]], "linearedgeencoder (class in graphnet.models.components.embedding)": [[83, "graphnet.models.components.embedding.LinearEdgeEncoder", false]], "linearnodeencoder (class in graphnet.models.components.embedding)": [[83, "graphnet.models.components.embedding.LinearNodeEncoder", false]], "liquido (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.LIQUIDO", false]], "liquido (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.LIQUIDO", false]], "liquido_v1 (class in graphnet.models.detector.liquido)": [[100, "graphnet.models.detector.liquido.LiquidO_v1", false]], "liquidoreader (class in graphnet.data.readers.liquido_reader)": [[52, "graphnet.data.readers.liquido_reader.LiquidOReader", false]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[143, "graphnet.utilities.config.parsing.list_all_submodules", false]], "load() (graphnet.models.model.model class method)": [[117, "graphnet.models.model.Model.load", false]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[139, "graphnet.utilities.config.base_config.BaseConfig.load", false]], "load_module() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.load_module", false]], "load_state_dict() (graphnet.models.model.model method)": [[117, "graphnet.models.model.Model.load_state_dict", false]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[121, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict", false]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[133, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk", false]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[133, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx", false]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[133, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact", false]], "logcmk (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.LogCMK", false]], "logcoshloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.LogCoshLoss", false]], "logger (class in graphnet.utilities.logging)": [[149, "graphnet.utilities.logging.Logger", false]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column", false]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value", false]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table", false]], "lossfunction (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.LossFunction", false]], "maeloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.MAELoss", false]], "make_dataloader() (in module graphnet.training.utils)": [[134, "graphnet.training.utils.make_dataloader", false]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[134, "graphnet.training.utils.make_train_validation_dataloader", false]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.merge_files", false]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[62, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files", false]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[63, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files", false]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[64, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files", false]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[84, "graphnet.models.components.layers.EdgeConvTito.message", false]], "min_pool() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.min_pool", false]], "min_pool_x() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.min_pool_x", false]], "minkowskiknnedges (class in graphnet.models.data_representation.graphs.edges.minkowski)": [[91, "graphnet.models.data_representation.graphs.edges.minkowski.MinkowskiKNNEdges", false]], "mlp (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.Mlp", false]], "model (class in graphnet.models.model)": [[117, "graphnet.models.model.Model", false]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[139, "graphnet.utilities.config.base_config.BaseConfig.model_config", false]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config", false]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[142, "graphnet.utilities.config.model_config.ModelConfig.model_config", false]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[144, "graphnet.utilities.config.training_config.TrainingConfig.model_config", false]], "modelconfig (class in graphnet.utilities.config.model_config)": [[142, "graphnet.utilities.config.model_config.ModelConfig", false]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[142, "graphnet.utilities.config.model_config.ModelConfigSaverABC", false]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[142, "graphnet.utilities.config.model_config.ModelConfigSaverMeta", false]], "module": [[1, "module-graphnet", false], [2, "module-graphnet.constants", false], [3, "module-graphnet.data", false], [4, "module-graphnet.data.constants", false], [5, "module-graphnet.data.curated_datamodule", false], [6, "module-graphnet.data.dataclasses", false], [7, "module-graphnet.data.dataconverter", false], [8, "module-graphnet.data.dataloader", false], [9, "module-graphnet.data.datamodule", false], [10, "module-graphnet.data.dataset", false], [11, "module-graphnet.data.dataset.dataset", false], [12, "module-graphnet.data.dataset.parquet", false], [13, "module-graphnet.data.dataset.parquet.parquet_dataset", false], [14, "module-graphnet.data.dataset.samplers", false], [15, "module-graphnet.data.dataset.sqlite", false], [16, "module-graphnet.data.dataset.sqlite.sqlite_dataset", false], [17, "module-graphnet.data.extractors", false], [18, "module-graphnet.data.extractors.combine_extractors", false], [19, "module-graphnet.data.extractors.extractor", false], [20, "module-graphnet.data.extractors.icecube", false], [21, "module-graphnet.data.extractors.icecube.i3extractor", false], [22, "module-graphnet.data.extractors.icecube.i3featureextractor", false], [23, "module-graphnet.data.extractors.icecube.i3genericextractor", false], [24, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false], [25, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false], [26, "module-graphnet.data.extractors.icecube.i3particleextractor", false], [27, "module-graphnet.data.extractors.icecube.i3pisaextractor", false], [28, "module-graphnet.data.extractors.icecube.i3quesoextractor", false], [29, "module-graphnet.data.extractors.icecube.i3retroextractor", false], [30, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false], [31, "module-graphnet.data.extractors.icecube.i3truthextractor", false], [32, "module-graphnet.data.extractors.icecube.i3tumextractor", false], [33, "module-graphnet.data.extractors.icecube.utilities", false], [34, "module-graphnet.data.extractors.icecube.utilities.collections", false], [35, "module-graphnet.data.extractors.icecube.utilities.frames", false], [36, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false], [37, "module-graphnet.data.extractors.icecube.utilities.types", false], [38, "module-graphnet.data.extractors.internal", false], [39, "module-graphnet.data.extractors.internal.parquet_extractor", false], [40, "module-graphnet.data.extractors.liquido", false], [41, "module-graphnet.data.extractors.liquido.h5_extractor", false], [42, "module-graphnet.data.extractors.prometheus", false], [43, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false], [44, "module-graphnet.data.parquet", false], [45, "module-graphnet.data.parquet.deprecated_methods", false], [46, "module-graphnet.data.pre_configured", false], [47, "module-graphnet.data.pre_configured.dataconverters", false], [48, "module-graphnet.data.readers", false], [49, "module-graphnet.data.readers.graphnet_file_reader", false], [50, "module-graphnet.data.readers.i3reader", false], [51, "module-graphnet.data.readers.internal_parquet_reader", false], [52, "module-graphnet.data.readers.liquido_reader", false], [53, "module-graphnet.data.readers.prometheus_reader", false], [54, "module-graphnet.data.sqlite", false], [55, "module-graphnet.data.sqlite.deprecated_methods", false], [56, "module-graphnet.data.utilities", false], [57, "module-graphnet.data.utilities.parquet_to_sqlite", false], [58, "module-graphnet.data.utilities.random", false], [59, "module-graphnet.data.utilities.sqlite_utilities", false], [60, "module-graphnet.data.utilities.string_selection_resolver", false], [61, "module-graphnet.data.writers", false], [62, "module-graphnet.data.writers.graphnet_writer", false], [63, "module-graphnet.data.writers.parquet_writer", false], [64, "module-graphnet.data.writers.sqlite_writer", false], [65, "module-graphnet.datasets", false], [66, "module-graphnet.datasets.prometheus_datasets", false], [67, "module-graphnet.datasets.snowstorm_dataset", false], [68, "module-graphnet.datasets.test_dataset", false], [69, "module-graphnet.deployment", false], [70, "module-graphnet.deployment.deployer", false], [71, "module-graphnet.deployment.deployment_module", false], [72, "module-graphnet.deployment.i3modules", false], [73, "module-graphnet.deployment.i3modules.deprecated_methods", false], [74, "module-graphnet.deployment.icecube", false], [75, "module-graphnet.deployment.icecube.cleaning_module", false], [76, "module-graphnet.deployment.icecube.i3deployer", false], [77, "module-graphnet.deployment.icecube.inference_module", false], [78, "module-graphnet.exceptions", false], [79, "module-graphnet.exceptions.exceptions", false], [80, "module-graphnet.models", false], [81, "module-graphnet.models.coarsening", false], [82, "module-graphnet.models.components", false], [83, "module-graphnet.models.components.embedding", false], [84, "module-graphnet.models.components.layers", false], [85, "module-graphnet.models.components.pool", false], [86, "module-graphnet.models.data_representation", false], [87, "module-graphnet.models.data_representation.data_representation", false], [88, "module-graphnet.models.data_representation.graphs", false], [89, "module-graphnet.models.data_representation.graphs.edges", false], [90, "module-graphnet.models.data_representation.graphs.edges.edges", false], [91, "module-graphnet.models.data_representation.graphs.edges.minkowski", false], [92, "module-graphnet.models.data_representation.graphs.graph_definition", false], [93, "module-graphnet.models.data_representation.graphs.graphs", false], [94, "module-graphnet.models.data_representation.graphs.nodes", false], [95, "module-graphnet.models.data_representation.graphs.nodes.nodes", false], [96, "module-graphnet.models.data_representation.graphs.utils", false], [97, "module-graphnet.models.detector", false], [98, "module-graphnet.models.detector.detector", false], [99, "module-graphnet.models.detector.icecube", false], [100, "module-graphnet.models.detector.liquido", false], [101, "module-graphnet.models.detector.prometheus", false], [102, "module-graphnet.models.easy_model", false], [103, "module-graphnet.models.gnn", false], [104, "module-graphnet.models.gnn.RNN_tito", false], [105, "module-graphnet.models.gnn.convnet", false], [106, "module-graphnet.models.gnn.dynedge", false], [107, "module-graphnet.models.gnn.dynedge_jinst", false], [108, "module-graphnet.models.gnn.dynedge_kaggle_tito", false], [109, "module-graphnet.models.gnn.gnn", false], [110, "module-graphnet.models.gnn.grit", false], [111, "module-graphnet.models.gnn.icemix", false], [112, "module-graphnet.models.gnn.particlenet", false], [113, "module-graphnet.models.graphs", false], [114, "module-graphnet.models.graphs.edges", false], [115, "module-graphnet.models.graphs.edges.minkowski", false], [116, "module-graphnet.models.graphs.nodes", false], [117, "module-graphnet.models.model", false], [118, "module-graphnet.models.normalizing_flow", false], [119, "module-graphnet.models.rnn", false], [120, "module-graphnet.models.rnn.node_rnn", false], [121, "module-graphnet.models.standard_averaged_model", false], [122, "module-graphnet.models.standard_model", false], [123, "module-graphnet.models.task", false], [124, "module-graphnet.models.task.classification", false], [125, "module-graphnet.models.task.reconstruction", false], [126, "module-graphnet.models.task.task", false], [127, "module-graphnet.models.transformer", false], [128, "module-graphnet.models.transformer.iseecube", false], [129, "module-graphnet.models.utils", false], [130, "module-graphnet.training", false], [131, "module-graphnet.training.callbacks", false], [132, "module-graphnet.training.labels", false], [133, "module-graphnet.training.loss_functions", false], [134, "module-graphnet.training.utils", false], [135, "module-graphnet.training.weight_fitting", false], [136, "module-graphnet.utilities", false], [137, "module-graphnet.utilities.argparse", false], [138, "module-graphnet.utilities.config", false], [139, "module-graphnet.utilities.config.base_config", false], [140, "module-graphnet.utilities.config.configurable", false], [141, "module-graphnet.utilities.config.dataset_config", false], [142, "module-graphnet.utilities.config.model_config", false], [143, "module-graphnet.utilities.config.parsing", false], [144, "module-graphnet.utilities.config.training_config", false], [145, "module-graphnet.utilities.decorators", false], [146, "module-graphnet.utilities.deprecation_tools", false], [147, "module-graphnet.utilities.filesys", false], [148, "module-graphnet.utilities.imports", false], [149, "module-graphnet.utilities.logging", false], [150, "module-graphnet.utilities.maths", false]], "modules (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.modules", false]], "mseloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.MSELoss", false]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[124, "graphnet.models.task.classification.MulticlassClassificationTask", false]], "name (graphnet.data.extractors.extractor.extractor property)": [[19, "graphnet.data.extractors.extractor.Extractor.name", false]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[109, "graphnet.models.gnn.gnn.GNN.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[124, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[124, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[125, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[125, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[125, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[125, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[125, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[125, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[126, "graphnet.models.task.task.IdentityTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[126, "graphnet.models.task.task.LearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[126, "graphnet.models.task.task.StandardLearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.task property)": [[126, "graphnet.models.task.task.Task.nb_inputs", false]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[126, "graphnet.models.task.task.StandardFlowTask.nb_inputs", false]], "nb_outputs (graphnet.models.data_representation.data_representation.datarepresentation property)": [[87, "graphnet.models.data_representation.data_representation.DataRepresentation.nb_outputs", false]], "nb_outputs (graphnet.models.data_representation.graphs.nodes.nodes.nodedefinition property)": [[95, "graphnet.models.data_representation.graphs.nodes.nodes.NodeDefinition.nb_outputs", false]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[109, "graphnet.models.gnn.gnn.GNN.nb_outputs", false]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[149, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed", false]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[111, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay", false]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[120, "graphnet.models.rnn.node_rnn.Node_RNN", false]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth", false]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table", false]], "nodeasdomtimeseries (class in graphnet.models.data_representation.graphs.nodes.nodes)": [[95, "graphnet.models.data_representation.graphs.nodes.nodes.NodeAsDOMTimeSeries", false]], "nodedefinition (class in graphnet.models.data_representation.graphs.nodes.nodes)": [[95, "graphnet.models.data_representation.graphs.nodes.nodes.NodeDefinition", false]], "nodesaspulses (class in graphnet.models.data_representation.graphs.nodes.nodes)": [[95, "graphnet.models.data_representation.graphs.nodes.nodes.NodesAsPulses", false]], "normalizingflow (class in graphnet.models.normalizing_flow)": [[118, "graphnet.models.normalizing_flow.NormalizingFlow", false]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter", false]], "num_samples (graphnet.data.dataset.samplers.randomchunksampler property)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler.num_samples", false]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[131, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end", false]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[121, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[131, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[131, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end", false]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[131, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start", false]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[131, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end", false]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[121, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step", false]], "options (class in graphnet.utilities.argparse)": [[137, "graphnet.utilities.argparse.Options", false]], "orca150 (class in graphnet.models.detector.prometheus)": [[101, "graphnet.models.detector.prometheus.ORCA150", false]], "orca150superdense (class in graphnet.models.detector.prometheus)": [[101, "graphnet.models.detector.prometheus.ORCA150SuperDense", false]], "output_feature_names (graphnet.models.data_representation.data_representation.datarepresentation property)": [[87, "graphnet.models.data_representation.data_representation.DataRepresentation.output_feature_names", false]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.output_folder", false]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[58, "graphnet.data.utilities.random.pairwise_shuffle", false]], "parquetdataconverter (class in graphnet.data.parquet.deprecated_methods)": [[45, "graphnet.data.parquet.deprecated_methods.ParquetDataConverter", false]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset", false]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[39, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor", false]], "parquetreader (class in graphnet.data.readers.internal_parquet_reader)": [[51, "graphnet.data.readers.internal_parquet_reader.ParquetReader", false]], "parquettosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[47, "graphnet.data.pre_configured.dataconverters.ParquetToSQLiteConverter", false]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[63, "graphnet.data.writers.parquet_writer.ParquetWriter", false]], "parse_data_representation() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.parse_data_representation", false]], "parse_labels() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.parse_labels", false]], "particlenet (class in graphnet.models.gnn.particlenet)": [[112, "graphnet.models.gnn.particlenet.ParticleNeT", false]], "path (graphnet.data.dataset.dataset.dataset property)": [[11, "graphnet.data.dataset.dataset.Dataset.path", false]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.path", false]], "percentileclusters (class in graphnet.models.data_representation.graphs.nodes.nodes)": [[95, "graphnet.models.data_representation.graphs.nodes.nodes.PercentileClusters", false]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[131, "graphnet.training.callbacks.PiecewiseLinearLR", false]], "ponesmall (class in graphnet.datasets.prometheus_datasets)": [[66, "graphnet.datasets.prometheus_datasets.PONESmall", false]], "ponetriangle (class in graphnet.models.detector.prometheus)": [[101, "graphnet.models.detector.prometheus.PONETriangle", false]], "pop_default() (graphnet.utilities.argparse.options method)": [[137, "graphnet.utilities.argparse.Options.pop_default", false]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.PositionReconstruction", false]], "predict() (graphnet.models.easy_model.easysyntax method)": [[102, "graphnet.models.easy_model.EasySyntax.predict", false]], "predict_as_dataframe() (graphnet.models.easy_model.easysyntax method)": [[102, "graphnet.models.easy_model.EasySyntax.predict_as_dataframe", false]], "prediction_labels (graphnet.models.easy_model.easysyntax property)": [[102, "graphnet.models.easy_model.EasySyntax.prediction_labels", false]], "prepare_data() (graphnet.data.curated_datamodule.curateddataset method)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.prepare_data", false]], "prepare_data() (graphnet.data.curated_datamodule.erdahosteddataset method)": [[5, "graphnet.data.curated_datamodule.ERDAHostedDataset.prepare_data", false]], "prepare_data() (graphnet.data.curated_datamodule.icecubehosteddataset method)": [[5, "graphnet.data.curated_datamodule.IceCubeHostedDataset.prepare_data", false]], "prepare_data() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.prepare_data", false]], "progressbar (class in graphnet.training.callbacks)": [[131, "graphnet.training.callbacks.ProgressBar", false]], "prometheus (class in graphnet.models.detector.prometheus)": [[101, "graphnet.models.detector.prometheus.Prometheus", false]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS", false]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS", false]], "prometheusextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[43, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusExtractor", false]], "prometheusfeatureextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[43, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusFeatureExtractor", false]], "prometheusreader (class in graphnet.data.readers.prometheus_reader)": [[53, "graphnet.data.readers.prometheus_reader.PrometheusReader", false]], "prometheustruthextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[43, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusTruthExtractor", false]], "publicprometheusdataset (class in graphnet.datasets.prometheus_datasets)": [[66, "graphnet.datasets.prometheus_datasets.PublicPrometheusDataset", false]], "pulse_truth (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.pulse_truth", false]], "pulsemaps (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.pulsemaps", false]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps", false]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.query_database", false]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[11, "graphnet.data.dataset.dataset.Dataset.query_table", false]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table", false]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[16, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table", false]], "radialedges (class in graphnet.models.data_representation.graphs.edges.edges)": [[90, "graphnet.models.data_representation.graphs.edges.edges.RadialEdges", false]], "randomchunksampler (class in graphnet.data.dataset.samplers)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler", false]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[81, "graphnet.models.coarsening.Coarsening.reduce_options", false]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[146, "graphnet.utilities.deprecation_tools.rename_state_dict_entries", false]], "repeatfilter (class in graphnet.utilities.logging)": [[149, "graphnet.utilities.logging.RepeatFilter", false]], "requires_icecube() (in module graphnet.utilities.imports)": [[148, "graphnet.utilities.imports.requires_icecube", false]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[84, "graphnet.models.components.layers.EdgeConvTito.reset_parameters", false]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[60, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve", false]], "rmseloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.RMSELoss", false]], "rmsevonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.RMSEVonMisesFisher3DLoss", false]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[104, "graphnet.models.gnn.RNN_tito.RNN_TITO", false]], "rrwplinearedgeencoder (class in graphnet.models.components.embedding)": [[83, "graphnet.models.components.embedding.RRWPLinearEdgeEncoder", false]], "rrwplinearnodeencoder (class in graphnet.models.components.embedding)": [[83, "graphnet.models.components.embedding.RRWPLinearNodeEncoder", false]], "run() (graphnet.deployment.deployer.deployer method)": [[70, "graphnet.deployment.deployer.Deployer.run", false]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.run_sql_code", false]], "rwselinearnodeencoder (class in graphnet.models.components.embedding)": [[83, "graphnet.models.components.embedding.RWSELinearNodeEncoder", false]], "sangraphhead (class in graphnet.models.components.layers)": [[84, "graphnet.models.components.layers.SANGraphHead", false]], "save() (graphnet.models.model.model method)": [[117, "graphnet.models.model.Model.save", false]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[140, "graphnet.utilities.config.configurable.Configurable.save_config", false]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[141, "graphnet.utilities.config.dataset_config.save_dataset_config", false]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[142, "graphnet.utilities.config.model_config.save_model_config", false]], "save_results() (in module graphnet.training.utils)": [[134, "graphnet.training.utils.save_results", false]], "save_selection() (in module graphnet.training.utils)": [[134, "graphnet.training.utils.save_selection", false]], "save_state_dict() (graphnet.models.model.model method)": [[117, "graphnet.models.model.Model.save_state_dict", false]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[59, "graphnet.data.utilities.sqlite_utilities.save_to_sql", false]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.seed", false]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.selection", false]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[99, "graphnet.models.detector.icecube.IceCube86.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[99, "graphnet.models.detector.icecube.IceCubeKaggle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[99, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[100, "graphnet.models.detector.liquido.LiquidO_v1.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[101, "graphnet.models.detector.prometheus.ARCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[101, "graphnet.models.detector.prometheus.BaikalGVD8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[101, "graphnet.models.detector.prometheus.IceCube86Prometheus.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[101, "graphnet.models.detector.prometheus.IceCubeDeepCore8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[101, "graphnet.models.detector.prometheus.IceCubeGen2.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[101, "graphnet.models.detector.prometheus.IceCubeUpgrade7.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[101, "graphnet.models.detector.prometheus.IceDemo81.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[101, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[101, "graphnet.models.detector.prometheus.ORCA150SuperDense.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[101, "graphnet.models.detector.prometheus.PONETriangle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[101, "graphnet.models.detector.prometheus.TRIDENT1211.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[101, "graphnet.models.detector.prometheus.WaterDemo81.sensor_id_column", false]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[98, "graphnet.models.detector.detector.Detector.sensor_index_name", false]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[98, "graphnet.models.detector.detector.Detector.sensor_position_names", false]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.serialise", false]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors", false]], "set_gcd() (graphnet.data.extractors.combine_extractors.combinedextractor method)": [[18, "graphnet.data.extractors.combine_extractors.CombinedExtractor.set_gcd", false]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[21, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd", false]], "set_gcd() (graphnet.data.extractors.icecube.i3truthextractor.i3truthextractor method)": [[31, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor.set_gcd", false]], "set_number_of_inputs() (graphnet.models.data_representation.graphs.nodes.nodes.nodedefinition method)": [[95, "graphnet.models.data_representation.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs", false]], "set_output_feature_names() (graphnet.models.data_representation.graphs.nodes.nodes.nodedefinition method)": [[95, "graphnet.models.data_representation.graphs.nodes.nodes.NodeDefinition.set_output_feature_names", false]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[117, "graphnet.models.model.Model.set_verbose_print_recursively", false]], "setlevel() (graphnet.utilities.logging.logger method)": [[149, "graphnet.utilities.logging.Logger.setLevel", false]], "settings (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.Settings", false]], "setup() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.setup", false]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[131, "graphnet.training.callbacks.GraphnetEarlyStopping.setup", false]], "shared_step() (graphnet.models.easy_model.easysyntax method)": [[102, "graphnet.models.easy_model.EasySyntax.shared_step", false]], "shared_step() (graphnet.models.normalizing_flow.normalizingflow method)": [[118, "graphnet.models.normalizing_flow.NormalizingFlow.shared_step", false]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[122, "graphnet.models.standard_model.StandardModel.shared_step", false]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[83, "graphnet.models.components.embedding.SinusoidalPosEmb", false]], "snowstorm (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.SNOWSTORM", false]], "snowstorm (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.SNOWSTORM", false]], "snowstormdataset (class in graphnet.datasets.snowstorm_dataset)": [[67, "graphnet.datasets.snowstorm_dataset.SnowStormDataset", false]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[83, "graphnet.models.components.embedding.SpacetimeEncoder", false]], "sqlitedataconverter (class in graphnet.data.sqlite.deprecated_methods)": [[55, "graphnet.data.sqlite.deprecated_methods.SQLiteDataConverter", false]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[16, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset", false]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[64, "graphnet.data.writers.sqlite_writer.SQLiteWriter", false]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[137, "graphnet.utilities.argparse.ArgumentParser.standard_arguments", false]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[121, "graphnet.models.standard_averaged_model.StandardAveragedModel", false]], "standardflowtask (class in graphnet.models.task.task)": [[126, "graphnet.models.task.task.StandardFlowTask", false]], "standardlearnedtask (class in graphnet.models.task.task)": [[126, "graphnet.models.task.task.StandardLearnedTask", false]], "standardmodel (class in graphnet.models.standard_model)": [[122, "graphnet.models.standard_model.StandardModel", false]], "std_pool() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.std_pool", false]], "std_pool_x() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.std_pool_x", false]], "stream_handlers (graphnet.utilities.logging.logger property)": [[149, "graphnet.utilities.logging.Logger.stream_handlers", false]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[99, "graphnet.models.detector.icecube.IceCube86.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[99, "graphnet.models.detector.icecube.IceCubeKaggle.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[99, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column", false]], "string_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[100, "graphnet.models.detector.liquido.LiquidO_v1.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[101, "graphnet.models.detector.prometheus.ARCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[101, "graphnet.models.detector.prometheus.BaikalGVD8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[101, "graphnet.models.detector.prometheus.IceCube86Prometheus.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[101, "graphnet.models.detector.prometheus.IceCubeDeepCore8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[101, "graphnet.models.detector.prometheus.IceCubeGen2.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[101, "graphnet.models.detector.prometheus.IceCubeUpgrade7.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[101, "graphnet.models.detector.prometheus.IceDemo81.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[101, "graphnet.models.detector.prometheus.ORCA150.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[101, "graphnet.models.detector.prometheus.ORCA150SuperDense.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[101, "graphnet.models.detector.prometheus.PONETriangle.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[101, "graphnet.models.detector.prometheus.TRIDENT1211.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[101, "graphnet.models.detector.prometheus.WaterDemo81.string_id_column", false]], "string_index_name (graphnet.models.detector.detector.detector property)": [[98, "graphnet.models.detector.detector.Detector.string_index_name", false]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection", false]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[60, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver", false]], "subeventstreami3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.SubEventStreamI3Filter", false]], "sum_pool() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.sum_pool", false]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.sum_pool_and_distribute", false]], "sum_pool_x() (in module graphnet.models.components.pool)": [[85, "graphnet.models.components.pool.sum_pool_x", false]], "tablefilter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.TableFilter", false]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[144, "graphnet.utilities.config.training_config.TrainingConfig.target", false]], "target_labels (graphnet.models.easy_model.easysyntax property)": [[102, "graphnet.models.easy_model.EasySyntax.target_labels", false]], "task (class in graphnet.models.task.task)": [[126, "graphnet.models.task.task.Task", false]], "teardown() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.teardown", false]], "test_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.test_dataloader", false]], "testdataset (class in graphnet.datasets.test_dataset)": [[68, "graphnet.datasets.test_dataset.TestDataset", false]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.TimeReconstruction", false]], "track (class in graphnet.training.labels)": [[132, "graphnet.training.labels.Track", false]], "train() (graphnet.models.easy_model.easysyntax method)": [[102, "graphnet.models.easy_model.EasySyntax.train", false]], "train_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.train_dataloader", false]], "train_eval() (graphnet.models.task.task.task method)": [[126, "graphnet.models.task.task.Task.train_eval", false]], "training_step() (graphnet.models.easy_model.easysyntax method)": [[102, "graphnet.models.easy_model.EasySyntax.training_step", false]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[121, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step", false]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[144, "graphnet.utilities.config.training_config.TrainingConfig", false]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts", false]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[143, "graphnet.utilities.config.parsing.traverse_and_apply", false]], "trident1211 (class in graphnet.models.detector.prometheus)": [[101, "graphnet.models.detector.prometheus.TRIDENT1211", false]], "tridentsmall (class in graphnet.datasets.prometheus_datasets)": [[66, "graphnet.datasets.prometheus_datasets.TRIDENTSmall", false]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH", false]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.truth", false]], "truth_table (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.truth_table", false]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[11, "graphnet.data.dataset.dataset.Dataset.truth_table", false]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table", false]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[81, "graphnet.models.coarsening.unbatch_edge_index", false]], "uniform (class in graphnet.training.weight_fitting)": [[135, "graphnet.training.weight_fitting.Uniform", false]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE", false]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE", false]], "val_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.val_dataloader", false]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[49, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files", false]], "validate_tasks() (graphnet.models.easy_model.easysyntax method)": [[102, "graphnet.models.easy_model.EasySyntax.validate_tasks", false]], "validate_tasks() (graphnet.models.normalizing_flow.normalizingflow method)": [[118, "graphnet.models.normalizing_flow.NormalizingFlow.validate_tasks", false]], "validate_tasks() (graphnet.models.standard_model.standardmodel method)": [[122, "graphnet.models.standard_model.StandardModel.validate_tasks", false]], "validation_step() (graphnet.models.easy_model.easysyntax method)": [[102, "graphnet.models.easy_model.EasySyntax.validation_step", false]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[121, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step", false]], "verbose_print (graphnet.models.model.model attribute)": [[117, "graphnet.models.model.Model.verbose_print", false]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.VertexReconstruction", false]], "visibleinelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction", false]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.VonMisesFisher2DLoss", false]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.VonMisesFisher3DLoss", false]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.VonMisesFisherLoss", false]], "warning() (graphnet.utilities.logging.logger method)": [[149, "graphnet.utilities.logging.Logger.warning", false]], "warning_once() (graphnet.utilities.logging.logger method)": [[149, "graphnet.utilities.logging.Logger.warning_once", false]], "waterdemo81 (class in graphnet.models.detector.prometheus)": [[101, "graphnet.models.detector.prometheus.WaterDemo81", false]], "weightfitter (class in graphnet.training.weight_fitting)": [[135, "graphnet.training.weight_fitting.WeightFitter", false]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[137, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments", false]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[99, "graphnet.models.detector.icecube.IceCube86.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubekaggle attribute)": [[99, "graphnet.models.detector.icecube.IceCubeKaggle.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[99, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz", false]], "xyz (graphnet.models.detector.liquido.liquido_v1 attribute)": [[100, "graphnet.models.detector.liquido.LiquidO_v1.xyz", false]], "xyz (graphnet.models.detector.prometheus.arca115 attribute)": [[101, "graphnet.models.detector.prometheus.ARCA115.xyz", false]], "xyz (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[101, "graphnet.models.detector.prometheus.BaikalGVD8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[101, "graphnet.models.detector.prometheus.IceCube86Prometheus.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[101, "graphnet.models.detector.prometheus.IceCubeDeepCore8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[101, "graphnet.models.detector.prometheus.IceCubeGen2.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[101, "graphnet.models.detector.prometheus.IceCubeUpgrade7.xyz", false]], "xyz (graphnet.models.detector.prometheus.icedemo81 attribute)": [[101, "graphnet.models.detector.prometheus.IceDemo81.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[101, "graphnet.models.detector.prometheus.ORCA150.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150superdense attribute)": [[101, "graphnet.models.detector.prometheus.ORCA150SuperDense.xyz", false]], "xyz (graphnet.models.detector.prometheus.ponetriangle attribute)": [[101, "graphnet.models.detector.prometheus.PONETriangle.xyz", false]], "xyz (graphnet.models.detector.prometheus.trident1211 attribute)": [[101, "graphnet.models.detector.prometheus.TRIDENT1211.xyz", false]], "xyz (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[101, "graphnet.models.detector.prometheus.WaterDemo81.xyz", false]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.ZenithReconstruction", false]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa", false]]}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [65, 0, 0, "-", "datasets"], [69, 0, 0, "-", "deployment"], [78, 0, 0, "-", "exceptions"], [80, 0, 0, "-", "models"], [130, 0, 0, "-", "training"], [136, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "curated_datamodule"], [6, 0, 0, "-", "dataclasses"], [7, 0, 0, "-", "dataconverter"], [8, 0, 0, "-", "dataloader"], [9, 0, 0, "-", "datamodule"], [10, 0, 0, "-", "dataset"], [17, 0, 0, "-", "extractors"], [44, 0, 0, "-", "parquet"], [46, 0, 0, "-", "pre_configured"], [48, 0, 0, "-", "readers"], [54, 0, 0, "-", "sqlite"], [56, 0, 0, "-", "utilities"], [61, 0, 0, "-", "writers"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "SNOWSTORM"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "SNOWSTORM"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.curated_datamodule": [[5, 1, 1, "", "CuratedDataset"], [5, 1, 1, "", "ERDAHostedDataset"], [5, 1, 1, "", "IceCubeHostedDataset"]], "graphnet.data.curated_datamodule.CuratedDataset": [[5, 3, 1, "", "available_backends"], [5, 3, 1, "", "citation"], [5, 3, 1, "", "comments"], [5, 3, 1, "", "creator"], [5, 3, 1, "", "dataset_dir"], [5, 4, 1, "", "description"], [5, 3, 1, "", "event_truth"], [5, 3, 1, "", "events"], [5, 3, 1, "", "experiment"], [5, 3, 1, "", "features"], [5, 4, 1, "", "prepare_data"], [5, 3, 1, "", "pulse_truth"], [5, 3, 1, "", "pulsemaps"], [5, 3, 1, "", "truth_table"]], "graphnet.data.curated_datamodule.ERDAHostedDataset": [[5, 4, 1, "", "prepare_data"]], "graphnet.data.curated_datamodule.IceCubeHostedDataset": [[5, 4, 1, "", "prepare_data"]], "graphnet.data.dataclasses": [[6, 1, 1, "", "I3FileSet"], [6, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_files"], [6, 2, 1, "", "modules"], [6, 2, 1, "", "output_folder"]], "graphnet.data.dataconverter": [[7, 1, 1, "", "DataConverter"], [7, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[7, 4, 1, "", "get_map_function"], [7, 4, 1, "", "merge_files"]], "graphnet.data.dataloader": [[8, 1, 1, "", "DataLoader"], [8, 5, 1, "", "collate_fn"], [8, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[8, 4, 1, "", "from_dataset_config"]], "graphnet.data.datamodule": [[9, 1, 1, "", "GraphNeTDataModule"]], "graphnet.data.datamodule.GraphNeTDataModule": [[9, 4, 1, "", "prepare_data"], [9, 4, 1, "", "setup"], [9, 4, 1, "", "teardown"], [9, 3, 1, "", "test_dataloader"], [9, 3, 1, "", "train_dataloader"], [9, 3, 1, "", "val_dataloader"]], "graphnet.data.dataset": [[11, 0, 0, "-", "dataset"], [12, 0, 0, "-", "parquet"], [14, 0, 0, "-", "samplers"], [15, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[11, 1, 1, "", "Dataset"], [11, 1, 1, "", "EnsembleDataset"], [11, 5, 1, "", "load_module"], [11, 5, 1, "", "parse_data_representation"], [11, 5, 1, "", "parse_labels"]], "graphnet.data.dataset.dataset.Dataset": [[11, 4, 1, "", "add_label"], [11, 4, 1, "", "concatenate"], [11, 4, 1, "", "from_config"], [11, 3, 1, "", "path"], [11, 4, 1, "", "query_table"], [11, 3, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[13, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[13, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[13, 3, 1, "", "chunk_sizes"], [13, 4, 1, "", "query_table"]], "graphnet.data.dataset.samplers": [[14, 1, 1, "", "LenMatchBatchSampler"], [14, 1, 1, "", "RandomChunkSampler"], [14, 5, 1, "", "gather_len_matched_buckets"]], "graphnet.data.dataset.samplers.RandomChunkSampler": [[14, 3, 1, "", "chunks"], [14, 3, 1, "", "data_source"], [14, 3, 1, "", "num_samples"]], "graphnet.data.dataset.sqlite": [[16, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[16, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[16, 4, 1, "", "query_table"]], "graphnet.data.extractors": [[18, 0, 0, "-", "combine_extractors"], [19, 0, 0, "-", "extractor"], [20, 0, 0, "-", "icecube"], [38, 0, 0, "-", "internal"], [40, 0, 0, "-", "liquido"], [42, 0, 0, "-", "prometheus"]], "graphnet.data.extractors.combine_extractors": [[18, 1, 1, "", "CombinedExtractor"]], "graphnet.data.extractors.combine_extractors.CombinedExtractor": [[18, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.extractor": [[19, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[19, 4, 1, "", "exclude"], [19, 3, 1, "", "name"]], "graphnet.data.extractors.icecube": [[21, 0, 0, "-", "i3extractor"], [22, 0, 0, "-", "i3featureextractor"], [23, 0, 0, "-", "i3genericextractor"], [24, 0, 0, "-", "i3hybridrecoextractor"], [25, 0, 0, "-", "i3ntmuonlabelsextractor"], [26, 0, 0, "-", "i3particleextractor"], [27, 0, 0, "-", "i3pisaextractor"], [28, 0, 0, "-", "i3quesoextractor"], [29, 0, 0, "-", "i3retroextractor"], [30, 0, 0, "-", "i3splinempeextractor"], [31, 0, 0, "-", "i3truthextractor"], [32, 0, 0, "-", "i3tumextractor"], [33, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[21, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[21, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[22, 1, 1, "", "I3FeatureExtractor"], [22, 1, 1, "", "I3FeatureExtractorIceCube86"], [22, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [22, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [22, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[23, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[24, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[25, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[26, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[27, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[28, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[29, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[30, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[31, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor": [[31, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3tumextractor": [[32, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[34, 0, 0, "-", "collections"], [35, 0, 0, "-", "frames"], [36, 0, 0, "-", "i3_filters"], [37, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[34, 5, 1, "", "flatten_nested_dictionary"], [34, 5, 1, "", "serialise"], [34, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[35, 5, 1, "", "frame_is_montecarlo"], [35, 5, 1, "", "frame_is_noise"], [35, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[36, 1, 1, "", "ChargeFilter"], [36, 1, 1, "", "I3Filter"], [36, 1, 1, "", "I3FilterMask"], [36, 1, 1, "", "NullSplitI3Filter"], [36, 1, 1, "", "SubEventStreamI3Filter"], [36, 1, 1, "", "TableFilter"]], "graphnet.data.extractors.icecube.utilities.types": [[37, 5, 1, "", "break_cyclic_recursion"], [37, 5, 1, "", "cast_object_to_pure_python"], [37, 5, 1, "", "cast_pulse_series_to_pure_python"], [37, 5, 1, "", "get_member_variables"], [37, 5, 1, "", "is_boost_class"], [37, 5, 1, "", "is_boost_enum"], [37, 5, 1, "", "is_icecube_class"], [37, 5, 1, "", "is_method"], [37, 5, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[39, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[39, 1, 1, "", "ParquetExtractor"]], "graphnet.data.extractors.liquido": [[41, 0, 0, "-", "h5_extractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[41, 1, 1, "", "H5Extractor"], [41, 1, 1, "", "H5HitExtractor"], [41, 1, 1, "", "H5TruthExtractor"]], "graphnet.data.extractors.prometheus": [[43, 0, 0, "-", "prometheus_extractor"]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[43, 1, 1, "", "PrometheusExtractor"], [43, 1, 1, "", "PrometheusFeatureExtractor"], [43, 1, 1, "", "PrometheusTruthExtractor"]], "graphnet.data.parquet": [[45, 0, 0, "-", "deprecated_methods"]], "graphnet.data.parquet.deprecated_methods": [[45, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.pre_configured": [[47, 0, 0, "-", "dataconverters"]], "graphnet.data.pre_configured.dataconverters": [[47, 1, 1, "", "I3ToParquetConverter"], [47, 1, 1, "", "I3ToSQLiteConverter"], [47, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.readers": [[49, 0, 0, "-", "graphnet_file_reader"], [50, 0, 0, "-", "i3reader"], [51, 0, 0, "-", "internal_parquet_reader"], [52, 0, 0, "-", "liquido_reader"], [53, 0, 0, "-", "prometheus_reader"]], "graphnet.data.readers.graphnet_file_reader": [[49, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[49, 3, 1, "", "accepted_extractors"], [49, 3, 1, "", "accepted_file_extensions"], [49, 3, 1, "", "extracor_names"], [49, 4, 1, "", "find_files"], [49, 4, 1, "", "set_extractors"], [49, 4, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[50, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[50, 4, 1, "", "find_files"]], "graphnet.data.readers.internal_parquet_reader": [[51, 1, 1, "", "ParquetReader"]], "graphnet.data.readers.internal_parquet_reader.ParquetReader": [[51, 4, 1, "", "find_files"]], "graphnet.data.readers.liquido_reader": [[52, 1, 1, "", "LiquidOReader"]], "graphnet.data.readers.liquido_reader.LiquidOReader": [[52, 4, 1, "", "find_files"]], "graphnet.data.readers.prometheus_reader": [[53, 1, 1, "", "PrometheusReader"]], "graphnet.data.readers.prometheus_reader.PrometheusReader": [[53, 4, 1, "", "find_files"]], "graphnet.data.sqlite": [[55, 0, 0, "-", "deprecated_methods"]], "graphnet.data.sqlite.deprecated_methods": [[55, 1, 1, "", "SQLiteDataConverter"]], "graphnet.data.utilities": [[57, 0, 0, "-", "parquet_to_sqlite"], [58, 0, 0, "-", "random"], [59, 0, 0, "-", "sqlite_utilities"], [60, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.random": [[58, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[59, 5, 1, "", "attach_index"], [59, 5, 1, "", "create_table"], [59, 5, 1, "", "create_table_and_save_to_sql"], [59, 5, 1, "", "database_exists"], [59, 5, 1, "", "database_table_exists"], [59, 5, 1, "", "get_primary_keys"], [59, 5, 1, "", "query_database"], [59, 5, 1, "", "run_sql_code"], [59, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[60, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[60, 4, 1, "", "resolve"]], "graphnet.data.writers": [[62, 0, 0, "-", "graphnet_writer"], [63, 0, 0, "-", "parquet_writer"], [64, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[62, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[62, 3, 1, "", "expects_merged_dataframes"], [62, 3, 1, "", "file_extension"], [62, 4, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[63, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[63, 4, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[64, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[64, 4, 1, "", "merge_files"]], "graphnet.datasets": [[66, 0, 0, "-", "prometheus_datasets"], [67, 0, 0, "-", "snowstorm_dataset"], [68, 0, 0, "-", "test_dataset"]], "graphnet.datasets.prometheus_datasets": [[66, 1, 1, "", "BaikalGVDSmall"], [66, 1, 1, "", "PONESmall"], [66, 1, 1, "", "PublicPrometheusDataset"], [66, 1, 1, "", "TRIDENTSmall"]], "graphnet.datasets.snowstorm_dataset": [[67, 1, 1, "", "SnowStormDataset"]], "graphnet.datasets.test_dataset": [[68, 1, 1, "", "TestDataset"]], "graphnet.deployment": [[70, 0, 0, "-", "deployer"], [71, 0, 0, "-", "deployment_module"], [72, 0, 0, "-", "i3modules"], [74, 0, 0, "-", "icecube"]], "graphnet.deployment.deployer": [[70, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[70, 4, 1, "", "run"]], "graphnet.deployment.deployment_module": [[71, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.i3modules": [[73, 0, 0, "-", "deprecated_methods"]], "graphnet.deployment.i3modules.deprecated_methods": [[73, 1, 1, "", "GraphNeTI3Deployer"]], "graphnet.deployment.icecube": [[75, 0, 0, "-", "cleaning_module"], [76, 0, 0, "-", "i3deployer"], [77, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[75, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.i3deployer": [[76, 1, 1, "", "I3Deployer"]], "graphnet.deployment.icecube.inference_module": [[77, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[79, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[79, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[81, 0, 0, "-", "coarsening"], [82, 0, 0, "-", "components"], [86, 0, 0, "-", "data_representation"], [97, 0, 0, "-", "detector"], [102, 0, 0, "-", "easy_model"], [103, 0, 0, "-", "gnn"], [113, 0, 0, "-", "graphs"], [117, 0, 0, "-", "model"], [118, 0, 0, "-", "normalizing_flow"], [119, 0, 0, "-", "rnn"], [121, 0, 0, "-", "standard_averaged_model"], [122, 0, 0, "-", "standard_model"], [123, 0, 0, "-", "task"], [127, 0, 0, "-", "transformer"], [129, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[81, 1, 1, "", "AttributeCoarsening"], [81, 1, 1, "", "Coarsening"], [81, 1, 1, "", "CustomDOMCoarsening"], [81, 1, 1, "", "DOMAndTimeWindowCoarsening"], [81, 1, 1, "", "DOMCoarsening"], [81, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[81, 4, 1, "", "forward"], [81, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[83, 0, 0, "-", "embedding"], [84, 0, 0, "-", "layers"], [85, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[83, 1, 1, "", "FourierEncoder"], [83, 1, 1, "", "LinearEdgeEncoder"], [83, 1, 1, "", "LinearNodeEncoder"], [83, 1, 1, "", "RRWPLinearEdgeEncoder"], [83, 1, 1, "", "RRWPLinearNodeEncoder"], [83, 1, 1, "", "RWSELinearNodeEncoder"], [83, 1, 1, "", "SinusoidalPosEmb"], [83, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[83, 4, 1, "", "forward"]], "graphnet.models.components.embedding.LinearEdgeEncoder": [[83, 4, 1, "", "forward"]], "graphnet.models.components.embedding.LinearNodeEncoder": [[83, 4, 1, "", "forward"]], "graphnet.models.components.embedding.RRWPLinearEdgeEncoder": [[83, 4, 1, "", "forward"]], "graphnet.models.components.embedding.RRWPLinearNodeEncoder": [[83, 4, 1, "", "forward"]], "graphnet.models.components.embedding.RWSELinearNodeEncoder": [[83, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[83, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[83, 4, 1, "", "forward"]], "graphnet.models.components.layers": [[84, 1, 1, "", "Attention_rel"], [84, 1, 1, "", "Block"], [84, 1, 1, "", "Block_rel"], [84, 1, 1, "", "DropPath"], [84, 1, 1, "", "DynEdgeConv"], [84, 1, 1, "", "DynTrans"], [84, 1, 1, "", "EdgeConvTito"], [84, 1, 1, "", "GritSparseMHA"], [84, 1, 1, "", "GritTransformerLayer"], [84, 1, 1, "", "Mlp"], [84, 1, 1, "", "SANGraphHead"]], "graphnet.models.components.layers.Attention_rel": [[84, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[84, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[84, 4, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[84, 4, 1, "", "extra_repr"], [84, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[84, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[84, 4, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[84, 4, 1, "", "forward"], [84, 4, 1, "", "message"], [84, 4, 1, "", "reset_parameters"]], "graphnet.models.components.layers.GritSparseMHA": [[84, 4, 1, "", "forward"]], "graphnet.models.components.layers.GritTransformerLayer": [[84, 4, 1, "", "forward"]], "graphnet.models.components.layers.Mlp": [[84, 4, 1, "", "forward"]], "graphnet.models.components.layers.SANGraphHead": [[84, 4, 1, "", "forward"]], "graphnet.models.components.pool": [[85, 5, 1, "", "group_by"], [85, 5, 1, "", "group_pulses_to_dom"], [85, 5, 1, "", "group_pulses_to_pmt"], [85, 5, 1, "", "min_pool"], [85, 5, 1, "", "min_pool_x"], [85, 5, 1, "", "std_pool"], [85, 5, 1, "", "std_pool_x"], [85, 5, 1, "", "sum_pool"], [85, 5, 1, "", "sum_pool_and_distribute"], [85, 5, 1, "", "sum_pool_x"]], "graphnet.models.data_representation": [[87, 0, 0, "-", "data_representation"], [88, 0, 0, "-", "graphs"]], "graphnet.models.data_representation.data_representation": [[87, 1, 1, "", "DataRepresentation"]], "graphnet.models.data_representation.data_representation.DataRepresentation": [[87, 4, 1, "", "forward"], [87, 3, 1, "", "nb_outputs"], [87, 3, 1, "", "output_feature_names"]], "graphnet.models.data_representation.graphs": [[89, 0, 0, "-", "edges"], [92, 0, 0, "-", "graph_definition"], [93, 0, 0, "-", "graphs"], [94, 0, 0, "-", "nodes"], [96, 0, 0, "-", "utils"]], "graphnet.models.data_representation.graphs.edges": [[90, 0, 0, "-", "edges"], [91, 0, 0, "-", "minkowski"]], "graphnet.models.data_representation.graphs.edges.edges": [[90, 1, 1, "", "EdgeDefinition"], [90, 1, 1, "", "EuclideanEdges"], [90, 1, 1, "", "KNNDistanceEdges"], [90, 1, 1, "", "KNNEdges"], [90, 1, 1, "", "RadialEdges"]], "graphnet.models.data_representation.graphs.edges.edges.EdgeDefinition": [[90, 4, 1, "", "forward"]], "graphnet.models.data_representation.graphs.edges.minkowski": [[91, 1, 1, "", "MinkowskiKNNEdges"], [91, 5, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.data_representation.graphs.graph_definition": [[92, 1, 1, "", "GraphDefinition"]], "graphnet.models.data_representation.graphs.graph_definition.GraphDefinition": [[92, 4, 1, "", "forward"]], "graphnet.models.data_representation.graphs.graphs": [[93, 1, 1, "", "EdgelessGraph"], [93, 1, 1, "", "KNNGraph"], [93, 1, 1, "", "KNNGraphRRWP"], [93, 1, 1, "", "KNNGraphRWSE"]], "graphnet.models.data_representation.graphs.graphs.KNNGraphRRWP": [[93, 4, 1, "", "forward"]], "graphnet.models.data_representation.graphs.graphs.KNNGraphRWSE": [[93, 4, 1, "", "forward"]], "graphnet.models.data_representation.graphs.nodes": [[95, 0, 0, "-", "nodes"]], "graphnet.models.data_representation.graphs.nodes.nodes": [[95, 1, 1, "", "IceMixNodes"], [95, 1, 1, "", "NodeAsDOMTimeSeries"], [95, 1, 1, "", "NodeDefinition"], [95, 1, 1, "", "NodesAsPulses"], [95, 1, 1, "", "PercentileClusters"]], "graphnet.models.data_representation.graphs.nodes.nodes.NodeDefinition": [[95, 4, 1, "", "forward"], [95, 3, 1, "", "nb_outputs"], [95, 4, 1, "", "set_number_of_inputs"], [95, 4, 1, "", "set_output_feature_names"]], "graphnet.models.data_representation.graphs.utils": [[96, 1, 1, "", "cluster_and_pad"], [96, 5, 1, "", "cluster_summarize_with_percentiles"], [96, 5, 1, "", "gather_cluster_sequence"], [96, 5, 1, "", "ice_transparency"], [96, 5, 1, "", "identify_indices"], [96, 5, 1, "", "lex_sort"]], "graphnet.models.data_representation.graphs.utils.cluster_and_pad": [[96, 4, 1, "", "add_charge_threshold_summary"], [96, 4, 1, "", "add_counts"], [96, 4, 1, "", "add_mean"], [96, 4, 1, "", "add_percentile_summary"], [96, 4, 1, "", "add_std"], [96, 4, 1, "", "add_sum_charge"]], "graphnet.models.detector": [[98, 0, 0, "-", "detector"], [99, 0, 0, "-", "icecube"], [100, 0, 0, "-", "liquido"], [101, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[98, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[98, 4, 1, "", "feature_map"], [98, 4, 1, "", "forward"], [98, 3, 1, "", "geometry_table"], [98, 3, 1, "", "sensor_index_name"], [98, 3, 1, "", "sensor_position_names"], [98, 3, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[99, 1, 1, "", "IceCube86"], [99, 1, 1, "", "IceCubeDeepCore"], [99, 1, 1, "", "IceCubeKaggle"], [99, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[99, 4, 1, "", "feature_map"], [99, 2, 1, "", "geometry_table_path"], [99, 2, 1, "", "sensor_id_column"], [99, 2, 1, "", "string_id_column"], [99, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[99, 4, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[99, 4, 1, "", "feature_map"], [99, 2, 1, "", "geometry_table_path"], [99, 2, 1, "", "sensor_id_column"], [99, 2, 1, "", "string_id_column"], [99, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[99, 4, 1, "", "feature_map"], [99, 2, 1, "", "geometry_table_path"], [99, 2, 1, "", "sensor_id_column"], [99, 2, 1, "", "string_id_column"], [99, 2, 1, "", "xyz"]], "graphnet.models.detector.liquido": [[100, 1, 1, "", "LiquidO_v1"]], "graphnet.models.detector.liquido.LiquidO_v1": [[100, 4, 1, "", "feature_map"], [100, 2, 1, "", "geometry_table_path"], [100, 2, 1, "", "sensor_id_column"], [100, 2, 1, "", "string_id_column"], [100, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[101, 1, 1, "", "ARCA115"], [101, 1, 1, "", "BaikalGVD8"], [101, 1, 1, "", "IceCube86Prometheus"], [101, 1, 1, "", "IceCubeDeepCore8"], [101, 1, 1, "", "IceCubeGen2"], [101, 1, 1, "", "IceCubeUpgrade7"], [101, 1, 1, "", "IceDemo81"], [101, 1, 1, "", "ORCA150"], [101, 1, 1, "", "ORCA150SuperDense"], [101, 1, 1, "", "PONETriangle"], [101, 1, 1, "", "Prometheus"], [101, 1, 1, "", "TRIDENT1211"], [101, 1, 1, "", "WaterDemo81"]], "graphnet.models.detector.prometheus.ARCA115": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.BaikalGVD8": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCube86Prometheus": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeDeepCore8": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeGen2": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeUpgrade7": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceDemo81": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150SuperDense": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.PONETriangle": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.TRIDENT1211": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.WaterDemo81": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.easy_model": [[102, 1, 1, "", "EasySyntax"]], "graphnet.models.easy_model.EasySyntax": [[102, 4, 1, "", "compute_loss"], [102, 4, 1, "", "configure_optimizers"], [102, 4, 1, "", "fit"], [102, 4, 1, "", "forward"], [102, 4, 1, "", "inference"], [102, 4, 1, "", "predict"], [102, 4, 1, "", "predict_as_dataframe"], [102, 3, 1, "", "prediction_labels"], [102, 4, 1, "", "shared_step"], [102, 3, 1, "", "target_labels"], [102, 4, 1, "", "train"], [102, 4, 1, "", "training_step"], [102, 4, 1, "", "validate_tasks"], [102, 4, 1, "", "validation_step"]], "graphnet.models.gnn": [[104, 0, 0, "-", "RNN_tito"], [105, 0, 0, "-", "convnet"], [106, 0, 0, "-", "dynedge"], [107, 0, 0, "-", "dynedge_jinst"], [108, 0, 0, "-", "dynedge_kaggle_tito"], [109, 0, 0, "-", "gnn"], [110, 0, 0, "-", "grit"], [111, 0, 0, "-", "icemix"], [112, 0, 0, "-", "particlenet"]], "graphnet.models.gnn.RNN_tito": [[104, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[104, 4, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[105, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[105, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[106, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[106, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[107, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[107, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[108, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[108, 4, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[109, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[109, 4, 1, "", "forward"], [109, 3, 1, "", "nb_inputs"], [109, 3, 1, "", "nb_outputs"]], "graphnet.models.gnn.grit": [[110, 1, 1, "", "GRIT"]], "graphnet.models.gnn.grit.GRIT": [[110, 4, 1, "", "forward"]], "graphnet.models.gnn.icemix": [[111, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[111, 4, 1, "", "forward"], [111, 4, 1, "", "no_weight_decay"]], "graphnet.models.gnn.particlenet": [[112, 1, 1, "", "ParticleNeT"]], "graphnet.models.gnn.particlenet.ParticleNeT": [[112, 4, 1, "", "forward"]], "graphnet.models.graphs": [[114, 0, 0, "-", "edges"], [116, 0, 0, "-", "nodes"]], "graphnet.models.graphs.edges": [[115, 0, 0, "-", "minkowski"]], "graphnet.models.model": [[117, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[117, 4, 1, "", "extra_repr"], [117, 4, 1, "", "extra_repr_recursive"], [117, 4, 1, "", "from_config"], [117, 4, 1, "", "load"], [117, 4, 1, "", "load_state_dict"], [117, 4, 1, "", "save"], [117, 4, 1, "", "save_state_dict"], [117, 4, 1, "", "set_verbose_print_recursively"], [117, 2, 1, "", "verbose_print"]], "graphnet.models.normalizing_flow": [[118, 1, 1, "", "NormalizingFlow"]], "graphnet.models.normalizing_flow.NormalizingFlow": [[118, 4, 1, "", "forward"], [118, 4, 1, "", "shared_step"], [118, 4, 1, "", "validate_tasks"]], "graphnet.models.rnn": [[120, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[120, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[120, 4, 1, "", "clean_up_data_object"], [120, 4, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[121, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[121, 4, 1, "", "load_state_dict"], [121, 4, 1, "", "on_train_end"], [121, 4, 1, "", "optimizer_step"], [121, 4, 1, "", "training_step"], [121, 4, 1, "", "validation_step"]], "graphnet.models.standard_model": [[122, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[122, 4, 1, "", "compute_loss"], [122, 4, 1, "", "forward"], [122, 4, 1, "", "shared_step"], [122, 4, 1, "", "validate_tasks"]], "graphnet.models.task": [[124, 0, 0, "-", "classification"], [125, 0, 0, "-", "reconstruction"], [126, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[124, 1, 1, "", "BinaryClassificationTask"], [124, 1, 1, "", "BinaryClassificationTaskLogits"], [124, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[124, 2, 1, "", "default_prediction_labels"], [124, 2, 1, "", "default_target_labels"], [124, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[124, 2, 1, "", "default_prediction_labels"], [124, 2, 1, "", "default_target_labels"], [124, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[125, 1, 1, "", "AzimuthReconstruction"], [125, 1, 1, "", "AzimuthReconstructionWithKappa"], [125, 1, 1, "", "DirectionReconstructionWithKappa"], [125, 1, 1, "", "EnergyReconstruction"], [125, 1, 1, "", "EnergyReconstructionWithPower"], [125, 1, 1, "", "EnergyReconstructionWithUncertainty"], [125, 1, 1, "", "EnergyTCReconstruction"], [125, 1, 1, "", "InelasticityReconstruction"], [125, 1, 1, "", "PositionReconstruction"], [125, 1, 1, "", "TimeReconstruction"], [125, 1, 1, "", "VertexReconstruction"], [125, 1, 1, "", "VisibleInelasticityReconstruction"], [125, 1, 1, "", "ZenithReconstruction"], [125, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[126, 1, 1, "", "IdentityTask"], [126, 1, 1, "", "LearnedTask"], [126, 1, 1, "", "StandardFlowTask"], [126, 1, 1, "", "StandardLearnedTask"], [126, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[126, 3, 1, "", "default_prediction_labels"], [126, 3, 1, "", "default_target_labels"], [126, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[126, 4, 1, "", "compute_loss"], [126, 4, 1, "", "forward"], [126, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[126, 3, 1, "", "default_prediction_labels"], [126, 4, 1, "", "forward"], [126, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[126, 4, 1, "", "compute_loss"], [126, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[126, 3, 1, "", "default_prediction_labels"], [126, 3, 1, "", "default_target_labels"], [126, 4, 1, "", "inference"], [126, 3, 1, "", "nb_inputs"], [126, 4, 1, "", "train_eval"]], "graphnet.models.transformer": [[128, 0, 0, "-", "iseecube"]], "graphnet.models.transformer.iseecube": [[128, 1, 1, "", "ISeeCube"]], "graphnet.models.transformer.iseecube.ISeeCube": [[128, 4, 1, "", "forward"]], "graphnet.models.utils": [[129, 5, 1, "", "add_full_rrwp"], [129, 5, 1, "", "array_to_sequence"], [129, 5, 1, "", "calculate_distance_matrix"], [129, 5, 1, "", "calculate_xyzt_homophily"], [129, 5, 1, "", "full_edge_index"], [129, 5, 1, "", "get_fields"], [129, 5, 1, "", "get_rw_landing_probs"], [129, 5, 1, "", "knn_graph_batch"]], "graphnet.training": [[131, 0, 0, "-", "callbacks"], [132, 0, 0, "-", "labels"], [133, 0, 0, "-", "loss_functions"], [134, 0, 0, "-", "utils"], [135, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[131, 1, 1, "", "GraphnetEarlyStopping"], [131, 1, 1, "", "PiecewiseLinearLR"], [131, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[131, 4, 1, "", "on_fit_end"], [131, 4, 1, "", "on_train_epoch_end"], [131, 4, 1, "", "on_validation_end"], [131, 4, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[131, 4, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[131, 4, 1, "", "get_metrics"], [131, 4, 1, "", "init_predict_tqdm"], [131, 4, 1, "", "init_test_tqdm"], [131, 4, 1, "", "init_train_tqdm"], [131, 4, 1, "", "init_validation_tqdm"], [131, 4, 1, "", "on_train_epoch_end"], [131, 4, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[132, 1, 1, "", "Direction"], [132, 1, 1, "", "Label"], [132, 1, 1, "", "Track"]], "graphnet.training.labels.Label": [[132, 3, 1, "", "key"]], "graphnet.training.loss_functions": [[133, 1, 1, "", "BinaryCrossEntropyLoss"], [133, 1, 1, "", "CrossEntropyLoss"], [133, 1, 1, "", "EnsembleLoss"], [133, 1, 1, "", "EuclideanDistanceLoss"], [133, 1, 1, "", "LogCMK"], [133, 1, 1, "", "LogCoshLoss"], [133, 1, 1, "", "LossFunction"], [133, 1, 1, "", "MAELoss"], [133, 1, 1, "", "MSELoss"], [133, 1, 1, "", "RMSELoss"], [133, 1, 1, "", "RMSEVonMisesFisher3DLoss"], [133, 1, 1, "", "VonMisesFisher2DLoss"], [133, 1, 1, "", "VonMisesFisher3DLoss"], [133, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[133, 4, 1, "", "backward"], [133, 4, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[133, 4, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[133, 4, 1, "", "log_cmk"], [133, 4, 1, "", "log_cmk_approx"], [133, 4, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[134, 5, 1, "", "collate_fn"], [134, 1, 1, "", "collator_sequence_buckleting"], [134, 5, 1, "", "get_predictions"], [134, 5, 1, "", "make_dataloader"], [134, 5, 1, "", "make_train_validation_dataloader"], [134, 5, 1, "", "save_results"], [134, 5, 1, "", "save_selection"]], "graphnet.training.weight_fitting": [[135, 1, 1, "", "BjoernLow"], [135, 1, 1, "", "Uniform"], [135, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[135, 4, 1, "", "fit"]], "graphnet.utilities": [[137, 0, 0, "-", "argparse"], [138, 0, 0, "-", "config"], [145, 0, 0, "-", "decorators"], [146, 0, 0, "-", "deprecation_tools"], [147, 0, 0, "-", "filesys"], [148, 0, 0, "-", "imports"], [149, 0, 0, "-", "logging"], [150, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[137, 1, 1, "", "ArgumentParser"], [137, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[137, 2, 1, "", "standard_arguments"], [137, 4, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[137, 4, 1, "", "contains"], [137, 4, 1, "", "pop_default"]], "graphnet.utilities.config": [[139, 0, 0, "-", "base_config"], [140, 0, 0, "-", "configurable"], [141, 0, 0, "-", "dataset_config"], [142, 0, 0, "-", "model_config"], [143, 0, 0, "-", "parsing"], [144, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[139, 1, 1, "", "BaseConfig"], [139, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[139, 4, 1, "", "as_dict"], [139, 4, 1, "", "dump"], [139, 4, 1, "", "load"], [139, 2, 1, "", "model_config"]], "graphnet.utilities.config.configurable": [[140, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[140, 3, 1, "", "config"], [140, 4, 1, "", "from_config"], [140, 4, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[141, 1, 1, "", "DatasetConfig"], [141, 1, 1, "", "DatasetConfigSaverABCMeta"], [141, 1, 1, "", "DatasetConfigSaverMeta"], [141, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[141, 4, 1, "", "as_dict"], [141, 2, 1, "", "data_representation"], [141, 2, 1, "", "features"], [141, 2, 1, "", "graph_definition"], [141, 2, 1, "", "index_column"], [141, 2, 1, "", "labels"], [141, 2, 1, "", "loss_weight_column"], [141, 2, 1, "", "loss_weight_default_value"], [141, 2, 1, "", "loss_weight_table"], [141, 2, 1, "", "model_config"], [141, 2, 1, "", "node_truth"], [141, 2, 1, "", "node_truth_table"], [141, 2, 1, "", "path"], [141, 2, 1, "", "pulsemaps"], [141, 2, 1, "", "seed"], [141, 2, 1, "", "selection"], [141, 2, 1, "", "string_selection"], [141, 2, 1, "", "truth"], [141, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[142, 1, 1, "", "ModelConfig"], [142, 1, 1, "", "ModelConfigSaverABC"], [142, 1, 1, "", "ModelConfigSaverMeta"], [142, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[142, 2, 1, "", "arguments"], [142, 4, 1, "", "as_dict"], [142, 2, 1, "", "class_name"], [142, 2, 1, "", "model_config"]], "graphnet.utilities.config.parsing": [[143, 5, 1, "", "get_all_grapnet_classes"], [143, 5, 1, "", "get_graphnet_classes"], [143, 5, 1, "", "is_graphnet_class"], [143, 5, 1, "", "is_graphnet_module"], [143, 5, 1, "", "list_all_submodules"], [143, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[144, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[144, 2, 1, "", "dataloader"], [144, 2, 1, "", "early_stopping_patience"], [144, 2, 1, "", "fit"], [144, 2, 1, "", "model_config"], [144, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[146, 5, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[147, 5, 1, "", "find_i3_files"], [147, 5, 1, "", "has_extension"], [147, 5, 1, "", "is_gcd_file"], [147, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[148, 5, 1, "", "has_icecube_package"], [148, 5, 1, "", "has_jammy_flows_package"], [148, 5, 1, "", "has_torch_package"], [148, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[149, 1, 1, "", "Logger"], [149, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[149, 4, 1, "", "critical"], [149, 4, 1, "", "debug"], [149, 4, 1, "", "error"], [149, 3, 1, "", "file_handlers"], [149, 3, 1, "", "handlers"], [149, 4, 1, "", "info"], [149, 4, 1, "", "setLevel"], [149, 3, 1, "", "stream_handlers"], [149, 4, 1, "", "warning"], [149, 4, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[149, 4, 1, "", "filter"], [149, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[150, 5, 1, "", "eps_like"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:exception"}, "terms": {"": [0, 7, 8, 9, 11, 13, 16, 34, 45, 47, 49, 52, 53, 55, 62, 64, 70, 83, 87, 92, 98, 102, 105, 106, 112, 118, 126, 129, 131, 135, 137, 141, 142, 149, 150, 153, 154, 155, 156, 158, 159, 160], "0": [9, 11, 13, 16, 31, 45, 47, 50, 55, 60, 75, 81, 83, 84, 85, 90, 91, 93, 96, 104, 105, 106, 108, 110, 112, 120, 126, 129, 132, 133, 134, 141, 154, 155, 157, 158, 160], "000": 154, "001": [155, 160], "01": [155, 160], "0221": 155, "02_data": 155, "03042": 107, "03762": 83, "04616": 133, "04_ensemble_dataset": 155, "05": 133, "06": 152, "06166": 90, "08570": 112, "0e04": 158, "0e4": 158, "1": [0, 7, 9, 11, 13, 14, 19, 34, 45, 47, 55, 60, 63, 66, 70, 73, 76, 81, 84, 85, 90, 91, 93, 96, 104, 106, 108, 110, 111, 112, 120, 124, 125, 126, 129, 131, 132, 133, 134, 135, 141, 153, 154, 155, 156, 157, 159, 160], "10": [9, 66, 95, 96, 99, 100, 101, 110, 137, 154, 155, 158, 160], "100": 154, "1000": [126, 154, 155], "10000": [11, 13, 16, 60, 83], "1088": 155, "10th": 96, "11": [155, 157], "12": [60, 111, 128, 141, 154, 155], "120": 155, "128": [83, 105, 106, 108, 112, 137, 154, 155, 160], "13": 60, "14": [60, 141, 154, 155], "1536": 128, "15674": 83, "16": [14, 60, 83, 104, 112, 128, 141, 154, 155, 160], "17": [14, 155], "1706": 83, "1748": 155, "17589": 110, "1809": 90, "1812": 133, "1902": 112, "192": 111, "196": 128, "1e6": 126, "2": [9, 11, 16, 34, 45, 55, 84, 85, 90, 93, 96, 104, 106, 108, 110, 112, 120, 125, 129, 133, 141, 154, 155, 157, 160], "20": [11, 13, 16, 60, 149, 155, 157, 158, 160], "200": [154, 158], "200000": 63, "2018": 152, "2019": 133, "2020": [0, 156, 159], "2023": 14, "21": [110, 152, 154, 155], "2209": 107, "2305": 110, "2310": 83, "256": [106, 108, 112, 128], "26": 154, "2d": [129, 133], "2nd": [14, 83, 111], "3": [85, 91, 96, 104, 105, 108, 120, 125, 128, 129, 133, 152, 155, 157, 158], "30": 158, "300": [154, 158], "32": [14, 83, 111, 128], "336": [106, 108], "384": [83, 111, 128], "39": [0, 156, 159], "3d": [125, 133], "4": [14, 84, 96, 107, 111, 125, 155, 158, 160], "40": 158, "400": 64, "42": 9, "5": [11, 13, 16, 60, 84, 96, 104, 110, 120, 133, 137, 153, 154, 155, 157, 158, 160], "50": [95, 96, 137, 158], "500": [96, 158], "50000": [60, 141, 154, 155], "5001": 154, "50th": 96, "59": 157, "6": [83, 85, 111, 128], "64": [104, 112], "647": [11, 16], "7": [75, 85], "700": 133, "768": 95, "8": [84, 85, 93, 104, 106, 108, 110, 120, 129, 133, 134, 152, 154, 155, 157, 160], "80": [155, 160], "86": [22, 99], "890778": [0, 156, 159], "9": 9, "90": [95, 96], "90th": 96, "A": [5, 7, 9, 11, 14, 36, 49, 50, 51, 52, 53, 59, 64, 66, 68, 70, 71, 75, 76, 85, 87, 92, 93, 96, 98, 99, 100, 101, 102, 117, 118, 122, 124, 126, 129, 133, 135, 153, 154, 155, 158, 160], "AND": [14, 133], "AS": [14, 133], "AT": [11, 16], "As": [106, 112, 160], "BE": [14, 133], "BUT": [14, 133], "But": 160, "By": [0, 45, 47, 50, 55, 126, 154, 155, 156, 159, 160], "FOR": [14, 133], "For": [14, 37, 95, 131, 154, 155, 160], "IN": [14, 133], "If": [5, 11, 13, 14, 21, 23, 31, 36, 64, 66, 67, 68, 83, 84, 87, 92, 95, 96, 106, 111, 112, 117, 126, 131, 133, 135, 152, 153, 155, 160], "In": [45, 47, 49, 50, 55, 62, 129, 141, 142, 153, 155, 157], "It": [1, 5, 34, 59, 75, 83, 96, 124, 126, 152, 154, 155, 160], "NO": [14, 133], "NOT": [14, 59, 133, 155], "No": [0, 155, 156, 159], "OF": [14, 133], "ONE": 66, "OR": [14, 133], "On": 5, "One": 155, "Or": [147, 154], "Such": 59, "THE": [14, 133], "TO": [14, 133], "That": [11, 13, 16, 106, 112, 125, 132, 155, 160], "The": [0, 7, 9, 11, 13, 14, 16, 18, 34, 36, 37, 45, 47, 55, 59, 62, 63, 64, 70, 71, 73, 75, 76, 77, 81, 83, 84, 85, 87, 90, 92, 93, 96, 104, 106, 108, 111, 112, 118, 120, 124, 125, 126, 128, 129, 131, 132, 133, 146, 153, 154, 156, 158, 159], "Then": [5, 152], "There": [155, 160], "These": [0, 49, 62, 64, 92, 152, 154, 155, 156, 158, 159, 160], "To": [154, 155, 157, 158, 160], "WITH": [14, 133], "Will": [5, 66, 67, 68, 70, 73, 75, 76, 77, 90, 153], "With": [155, 158, 160], "_": 155, "__": [34, 37, 155], "_____________________": [14, 133], "__call__": [19, 21, 49, 71, 153, 154, 155, 158], "__init__": [141, 142, 153, 154, 155, 160], "_accepted_extractor": [153, 158], "_accepted_file_extens": [153, 158], "_and_": [106, 112], "_charge_sum": 96, "_charge_weight": 96, "_cluster_nam": 96, "_column_nam": 153, "_construct_edg": 90, "_count": 96, "_definition_": 155, "_extractor": [153, 158], "_extractor_nam": [153, 158], "_file_extens": 153, "_file_hash": 5, "_fit_weight": 135, "_forward": 160, "_get_dir_nam": 5, "_indic": [11, 13], "_layer": 160, "_lrschedul": 131, "_may_": [11, 13], "_merge_datafram": 153, "_padded_x": 96, "_pred": 126, "_save_fil": 153, "_sensor_tim": 158, "_sensor_xyz": 158, "_tabl": 153, "_task": [102, 118, 122], "_verify_column": 153, "_x_": 155, "_zipped_fil": 5, "a__b": 34, "ab": [60, 110, 112, 133, 141, 154, 155], "abc": [7, 11, 19, 49, 62, 70, 117, 132, 135, 140, 141, 142], "abcmeta": [141, 142], "abil": 154, "abl": [34, 95, 118, 153, 155, 157, 158, 160], "about": [117, 154, 155, 158], "abov": [14, 133, 135, 154, 155, 158, 160], "abs_p": 93, "absolut": [84, 93, 110, 129, 133], "absopt": 95, "absorpt": 96, "abstract": [1, 5, 11, 62, 87, 92, 98, 109, 126, 140, 155], "abstractmethod": 154, "acceler": 1, "accept": [49, 152, 160], "accepted_extractor": [49, 153], "accepted_file_extens": [49, 153], "access": [93, 132, 154], "accompani": [45, 47, 50, 55, 155], "accord": [81, 85, 87, 90, 92, 93, 96, 133], "achiev": 157, "achitectur": 160, "across": [1, 2, 11, 13, 16, 37, 56, 70, 73, 76, 85, 102, 122, 129, 133, 136, 137, 138, 149, 158], "act": [126, 133, 155, 160], "action": [14, 133], "activ": [84, 95, 102, 104, 106, 110, 112, 120, 126, 152], "activation_lay": [106, 112], "actual": [155, 160], "ad": [7, 11, 13, 16, 22, 45, 47, 55, 83, 92, 95, 96, 106, 111], "adam": [118, 155, 160], "adapt": [110, 155, 160], "add": [11, 83, 84, 93, 96, 106, 110, 112, 129, 137, 146, 152, 155, 158], "add_batchnorm_lay": 112, "add_charge_threshold_summari": 96, "add_count": [95, 96], "add_full_rrwp": [80, 129], "add_global_variables_after_pool": [106, 155, 160], "add_ice_properti": 95, "add_ident": 129, "add_inactive_sensor": [87, 92], "add_label": [11, 154, 155], "add_mean": 96, "add_node_attr_as_self_loop": [83, 110], "add_norm_lay": 106, "add_percentile_summari": 96, "add_static_featur": 92, "add_std": 96, "add_sum_charg": 96, "add_to_databas": 135, "addit": [7, 49, 62, 81, 84, 93, 96, 102, 133, 135, 153, 155, 160], "additional_attribut": [102, 134, 155, 160], "address": 160, "adher": [152, 160], "adjac": [98, 129], "adjust": 160, "advanc": [1, 85], "after": [9, 64, 84, 104, 106, 108, 110, 112, 131, 137, 141, 154, 155, 160], "again": [155, 160], "against": 5, "aggr": 84, "aggreg": [84, 85, 96], "agnost": [0, 156, 159, 160], "agreement": [0, 152, 156, 159], "ai": 155, "aim": [0, 1, 152, 155, 156, 159], "algorithm": 26, "all": [1, 5, 11, 13, 14, 16, 18, 19, 21, 23, 36, 59, 64, 66, 67, 68, 75, 83, 84, 85, 87, 91, 92, 96, 98, 106, 109, 112, 117, 126, 133, 135, 139, 140, 141, 142, 143, 144, 149, 152, 153, 154, 155, 158, 160], "allow": [0, 5, 39, 69, 72, 80, 85, 131, 139, 144, 154, 155, 156, 159, 160], "almost": 129, "along": [96, 155, 160], "alongsid": [155, 160], "alreadi": 59, "also": [7, 11, 13, 16, 36, 60, 104, 141, 153, 154, 155, 158, 160], "alter": [92, 96], "altern": [106, 133, 152], "alwai": 134, "amount": 104, "an": [0, 14, 19, 37, 45, 47, 50, 55, 60, 72, 76, 87, 92, 93, 110, 120, 121, 133, 147, 149, 152, 153, 155, 156, 157, 158, 159, 160], "anaconda": 157, "analys": [69, 155], "analysi": [70, 76], "angl": [125, 132, 155, 160], "ani": [6, 7, 8, 9, 11, 13, 14, 16, 34, 35, 36, 37, 49, 51, 52, 53, 62, 64, 75, 81, 84, 85, 87, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 133, 135, 137, 139, 140, 141, 142, 143, 144, 149, 154, 155, 160], "anoth": [14, 141, 142, 154, 155], "anyth": 152, "api": [151, 153, 155], "appear": [70, 73, 76, 154, 155], "append": [87, 92], "appli": [7, 11, 13, 16, 45, 47, 48, 49, 55, 70, 73, 76, 83, 84, 85, 96, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 120, 122, 124, 126, 128, 133, 143, 153, 154, 155], "applic": [34, 154, 155, 160], "apply_norm": 83, "appropri": [59, 126, 155], "approx": 133, "approxim": 64, "ar": [0, 1, 4, 5, 11, 13, 14, 16, 21, 23, 31, 36, 37, 49, 60, 62, 63, 64, 70, 75, 76, 84, 85, 88, 89, 90, 92, 93, 94, 95, 96, 104, 106, 108, 112, 120, 124, 129, 133, 135, 141, 142, 152, 153, 154, 155, 156, 158, 159, 160], "arbitrari": [0, 156, 159], "arca": 101, "arca115": [97, 101], "architectur": [1, 105, 106, 107, 108, 112, 118, 120, 128, 155, 160], "archiv": 134, "area": 1, "arg": [11, 13, 16, 18, 36, 81, 87, 90, 91, 92, 93, 95, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 120, 121, 122, 124, 125, 126, 128, 133, 137, 139, 149, 153, 158], "argpars": [1, 136], "argument": [5, 7, 9, 14, 63, 66, 67, 68, 111, 118, 131, 135, 137, 139, 141, 142, 144, 154, 155, 158, 160], "argumentpars": [136, 137], "aris": [14, 133], "arrai": [19, 31, 34, 95, 96, 129, 153, 154, 155, 158], "array_to_sequ": [80, 129], "arriv": 154, "art": [0, 156, 159], "articl": 155, "artifact": [155, 160], "arxiv": [83, 90, 110, 112, 133], "as_dict": [139, 141, 142, 155, 160], "assert": [153, 154], "assertionerror": 153, "assign": [7, 11, 13, 16, 81, 85, 90, 93, 129, 152, 153], "associ": [14, 75, 77, 87, 92, 96, 125, 133, 153, 154, 155, 158, 160], "assort": 150, "assum": [5, 75, 83, 87, 92, 96, 98, 126, 129], "atmospher": 154, "attach": 59, "attach_index": [56, 59], "attempt": [21, 31, 155], "attent": [83, 84, 110, 111, 128], "attention_rel": [82, 84], "attn_activ": [84, 110], "attn_bia": 84, "attn_clamp": [84, 110], "attn_drop": 84, "attn_dropout": [84, 110], "attn_edge_enh": 84, "attn_head_dim": 84, "attn_mask": 84, "attr": [83, 110], "attr_name_ab": 129, "attr_name_rel": 129, "attribut": [5, 11, 13, 16, 81, 83, 90, 92, 126, 154, 155, 160], "attributecoarsen": [80, 81], "author": [14, 105, 107, 110, 133], "auto": 126, "autom": 152, "automat": [23, 63, 83, 87, 92, 96, 133, 152, 153, 155, 158], "automatic_log_bin": 135, "auxiliari": [4, 83, 155, 160], "avail": [5, 7, 23, 66, 67, 68, 124, 125, 126, 148, 153, 154, 155, 157, 158, 160], "available_backend": 5, "available_t": 153, "averag": [85, 121, 133], "avg": 81, "avg_pool": 81, "avg_pool_x": 81, "avoid": [13, 149, 152], "awai": [1, 155], "awtd": 4, "azimiuth": 132, "azimuth": [4, 125, 132], "azimuth_kappa": 125, "azimuth_kei": 132, "azimuth_pr": 125, "azimuthreconstruct": [123, 125], "azimuthreconstructionwithkappa": [123, 125], "b": [34, 81, 85, 129, 155, 158, 160], "backbon": [118, 155], "backend": [5, 12, 15, 61, 63, 66, 68, 158], "backward": [96, 133], "baikal": 66, "baikalgvd8": [97, 101], "baikalgvdsmal": [65, 66], "bar": 131, "base": [0, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 60, 62, 63, 64, 66, 67, 68, 70, 71, 73, 75, 76, 77, 79, 81, 83, 84, 87, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 120, 121, 122, 124, 125, 126, 128, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 144, 148, 149, 153, 154, 155, 156, 159, 160], "base_config": [136, 138], "baseclass": [70, 76], "baseconfig": [138, 139, 140, 141, 142, 144], "basemodel": [139, 141, 142], "basi": 160, "basic": [1, 86, 155], "batch": [0, 8, 13, 14, 63, 81, 84, 85, 102, 112, 118, 120, 122, 129, 134, 137, 154, 156, 159], "batch_idx": [102, 118, 121, 122, 129], "batch_norm_momentum": 84, "batch_norm_runn": 84, "batch_siz": [8, 9, 14, 129, 134, 154, 155, 160], "batch_split": 134, "batchnorm": [83, 84, 110], "batchnorm1d": [83, 84, 110], "batchsampl": 14, "becaus": [58, 155, 160], "been": [5, 73, 75, 133, 152, 160], "befor": [11, 13, 91, 106, 120, 126, 131], "behavior": 153, "behaviour": 131, "behind": [155, 160], "being": [21, 31, 75, 83, 124, 126, 154, 155, 160], "beitv2": 84, "belong": 129, "below": [5, 60, 95, 135, 152, 153, 155, 156, 158, 159, 160], "benchmark": [5, 129], "besid": 154, "bessel": 133, "best": [0, 131, 152, 156, 159], "better": 152, "between": [39, 66, 83, 86, 88, 89, 90, 91, 94, 102, 118, 122, 126, 129, 131, 133, 135, 141, 142, 155, 160], "bia": [83, 84, 128], "bias": [110, 155, 160], "big": [155, 160], "biject": 153, "bin": [14, 135], "binari": [122, 124, 133, 160], "binaryclassificationtask": [123, 124, 155, 160], "binaryclassificationtasklogit": [123, 124], "binarycrossentropyloss": [130, 133], "bjoernlow": [130, 135], "black": 152, "blob": [14, 83, 84, 110, 129, 133, 155], "block": [0, 1, 82, 84, 112, 155, 156, 159], "block_rel": [82, 84], "boilerpl": 160, "bool": [8, 14, 35, 36, 37, 59, 60, 62, 64, 75, 83, 84, 87, 92, 93, 95, 96, 102, 104, 106, 108, 110, 111, 112, 117, 122, 128, 129, 131, 133, 134, 135, 137, 143, 146, 147, 148, 149], "boost": 37, "border": 31, "both": [0, 23, 118, 122, 126, 155, 156, 158, 159, 160], "bottleneck": 14, "boundari": 31, "box": [153, 155, 160], "branch": 152, "break_cyclic_recurs": [33, 37], "broken": [45, 47, 50, 55], "bucket": [14, 128, 134], "bucket_width": 14, "bug": [152, 155], "build": [0, 1, 80, 90, 91, 95, 96, 98, 117, 118, 139, 141, 142, 155, 156, 159, 160], "built": [0, 80, 87, 92, 118, 154, 155, 156, 158, 159, 160], "c": [14, 21, 31, 34, 85, 91, 133, 155], "c_": 133, "cach": 13, "cache_s": 13, "calcul": [75, 83, 84, 90, 93, 95, 96, 102, 110, 118, 122, 129, 132, 133, 154, 155, 160], "calculate_distance_matrix": [80, 129], "calculate_xyzt_homophili": [80, 129], "calibr": [35, 37], "call": [7, 14, 23, 37, 83, 85, 126, 131, 135, 149, 153, 155, 158, 160], "callabl": [8, 11, 19, 37, 84, 85, 87, 92, 98, 99, 100, 101, 121, 126, 134, 135, 139, 141, 142, 143, 148, 158], "callback": [1, 102, 130, 155, 160], "can": [0, 1, 5, 9, 11, 13, 14, 16, 19, 23, 26, 67, 75, 83, 85, 92, 93, 118, 135, 137, 139, 141, 142, 152, 153, 154, 155, 156, 158, 159, 160], "cannot": [37, 120, 135, 139, 144], "cap": 135, "capabl": [0, 122, 156, 159], "captur": [155, 160], "care": 154, "carlo": 35, "cascad": 125, "cascadefilter_13": 4, "case": [11, 13, 16, 23, 45, 47, 50, 55, 75, 85, 96, 126, 153, 154, 155, 157, 160], "cast": [23, 37], "cast_object_to_pure_python": [33, 37], "cast_pulse_series_to_pure_python": [33, 37], "caus": 155, "caveat": [155, 160], "cc": 132, "cd": 157, "center": 90, "centr": 90, "central": [155, 157], "certain": 155, "cfg": 11, "cframe": [21, 31], "chain": [0, 1, 69, 72, 80, 102, 118, 122, 133, 156, 157, 159], "chang": [133, 152, 155, 160], "charg": [4, 14, 36, 83, 95, 96, 104, 120, 133, 154, 155, 160], "charge_column": 95, "charge_index": 96, "chargefilt": [33, 36], "check": [8, 35, 36, 37, 49, 59, 95, 137, 147, 148, 152, 158], "checkpoint": 155, "checkpointing_bas": 155, "chenli2049": 128, "cherenkov": [95, 96, 155, 158, 160], "choic": [154, 155, 160], "choos": [155, 160], "chosen": [90, 96, 149, 154], "chunk": [13, 14, 153], "chunk_siz": 13, "chunks_per_seg": 14, "citat": 5, "cite": 5, "ckpt": [155, 160], "ckpt_path": 102, "claim": [14, 133], "clamp": [84, 110], "clash": 149, "class": [4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 39, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 60, 62, 63, 64, 66, 67, 68, 70, 71, 73, 75, 76, 77, 81, 83, 84, 87, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 120, 121, 122, 124, 125, 126, 128, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 149, 152, 153, 154], "class_nam": [11, 36, 49, 51, 52, 53, 62, 142, 149, 154, 155, 160], "classif": [1, 80, 122, 123, 126, 133, 155, 160], "classifi": [124, 154, 155, 160], "classmethod": [8, 11, 117, 133, 139, 155, 160], "classvar": [139, 141, 142, 144], "clean": [75, 152, 157], "clean_up_data_object": 120, "cleaning_modul": [69, 74], "cleanup": 9, "clear": [149, 154], "cli": 137, "clone": 157, "close": 9, "closest": 131, "cloud": [155, 160], "cls_tocken": 111, "cluster": [5, 81, 84, 85, 95, 96, 104, 106, 108, 112, 120], "cluster_and_pad": [88, 96], "cluster_class": 96, "cluster_column": 96, "cluster_index": 85, "cluster_indic": 96, "cluster_on": [95, 96], "cluster_summarize_with_percentil": [88, 96], "clustered_x": 96, "cnn": [155, 160], "coarsen": [1, 80, 85], "code": [0, 31, 45, 55, 59, 83, 84, 87, 92, 110, 129, 141, 142, 153, 154, 155, 156, 158, 159, 160], "coincid": 95, "col": 93, "collabor": [1, 67, 155, 160], "collate_fn": [3, 8, 130, 134], "collator_sequence_bucklet": [130, 134], "collect": [11, 20, 33, 72, 133, 150, 155, 160], "column": [7, 11, 13, 16, 19, 41, 43, 45, 47, 55, 59, 63, 64, 71, 77, 79, 83, 87, 90, 92, 93, 95, 96, 98, 102, 104, 120, 124, 125, 126, 129, 133, 135, 153, 154, 155, 158, 160], "column_nam": [41, 153], "column_offset": 96, "columnmissingexcept": [11, 13, 78, 79], "com": [11, 14, 16, 83, 84, 110, 111, 118, 128, 129, 133, 155, 157], "combin": [18, 34, 47, 104, 122, 133, 141, 160], "combine_extractor": [3, 17], "combinedextractor": [17, 18], "come": [5, 102, 126, 153, 154, 155, 160], "command": 137, "comment": 5, "commit": 152, "common": [0, 1, 133, 141, 142, 145, 148, 154, 155, 156, 159], "compar": [155, 160], "comparison": [26, 133], "compat": [49, 60, 102, 118, 122, 126, 153, 154, 155, 160], "competit": [83, 84, 99, 108, 111], "complementari": 129, "complet": [0, 14, 80, 155, 156, 157, 159, 160], "complex": [0, 80, 155, 156, 159], "compon": [0, 1, 80, 83, 84, 85, 102, 117, 118, 122, 155, 156, 159, 160], "compos": [155, 160], "composit": 149, "comprehens": 155, "compress": [5, 154], "compris": [0, 156, 159], "comput": [71, 84, 91, 96, 102, 122, 126, 129, 133, 154, 155], "compute_loss": [102, 122, 126], "compute_minkowski_distance_mat": [89, 91], "con": [155, 160], "concatdataset": 11, "concaten": [11, 34, 106], "concept": 152, "conceptu": [153, 155], "concret": 155, "condit": [14, 118, 126, 133], "condition_on": 118, "confid": 155, "config": [1, 8, 60, 131, 133, 136, 137, 139, 140, 141, 142, 143, 144, 154, 155, 160], "config_dir": [155, 160], "configdict": [139, 141, 142, 144], "configur": [0, 1, 9, 11, 46, 47, 71, 72, 80, 102, 117, 136, 138, 139, 141, 142, 144, 149, 153, 155, 156, 159, 160], "configure_optim": 102, "conflict": 155, "conform": [139, 141, 142, 144], "conjunct": [19, 126], "conn": 155, "connect": [0, 9, 14, 83, 84, 90, 91, 92, 95, 110, 133, 154, 155, 156, 159], "consequ": 117, "consid": [75, 104, 154, 155, 158], "consist": [83, 137, 149, 152, 155, 160], "consortium": [0, 156, 159], "constant": [1, 3, 126, 129, 151, 154, 155, 160], "constitut": [63, 154], "constraint": [102, 155], "construct": [5, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 41, 43, 49, 51, 52, 53, 60, 62, 63, 64, 66, 67, 68, 71, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 117, 120, 121, 122, 124, 125, 126, 128, 131, 132, 133, 134, 135, 137, 140, 141, 142, 149, 153, 154, 155, 160], "constructor": [153, 154, 155], "consult": 160, "consum": 155, "consumpt": 154, "conta": 14, "contain": [0, 5, 6, 7, 11, 13, 14, 16, 17, 18, 21, 34, 35, 38, 39, 40, 43, 45, 47, 49, 50, 51, 55, 59, 62, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 77, 79, 87, 88, 89, 91, 92, 93, 94, 96, 102, 106, 112, 117, 118, 122, 126, 129, 133, 135, 137, 153, 154, 155, 156, 158, 159, 160], "containeris": 1, "content": [153, 160], "context": 68, "continu": [0, 133, 155, 156, 159], "contract": [14, 133], "contribut": [0, 133, 155, 156, 159], "contributor": 152, "conveni": [1, 152, 155, 160], "convent": [45, 47, 50, 55], "convers": [7, 38, 39, 43, 45, 55, 95, 154, 155, 158], "convert": [0, 1, 3, 5, 7, 13, 21, 31, 34, 36, 45, 46, 47, 55, 57, 63, 65, 129, 153, 154, 155, 156, 157, 158, 159], "converteddataset": 5, "convex": 31, "convnet": [80, 103, 155], "convolut": [84, 105, 106, 107, 108, 112], "coo": 154, "coordin": [31, 91, 95, 96, 98, 129, 155], "copi": [14, 133, 154], "copyright": [14, 133], "core": 109, "correct": [129, 133], "correpond": 58, "correspond": [11, 13, 16, 34, 37, 58, 87, 92, 93, 96, 106, 112, 135, 147, 154, 155, 158, 160], "cosh": 133, "could": [152, 155, 160], "count": 96, "counterpart": 154, "cover": 60, "cpu": [7, 14, 45, 47, 55, 71], "creat": [5, 9, 14, 59, 87, 92, 93, 95, 96, 139, 140, 144, 152, 154, 160], "create_t": [56, 59], "create_table_and_save_to_sql": [56, 59], "creator": 5, "critic": [149, 155, 158], "cross": 133, "crossentropyloss": [130, 133], "csv": [134, 141, 154, 155, 158, 160], "ctx": 133, "cuda": 157, "cumul": 96, "curat": 5, "curated_datamodul": [1, 3], "curateddataset": [3, 5, 66, 68], "curi": [0, 156, 159], "current": [60, 120, 131, 152, 155], "curv": 135, "custom": [11, 49, 78, 87, 92, 131, 160], "custom_label_funct": [87, 92], "customdomcoarsen": [80, 81], "customis": 131, "cut": 134, "d": [34, 87, 91, 92, 95, 129, 152, 158], "damag": [14, 133], "data": [0, 1, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 81, 83, 84, 85, 86, 87, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 120, 121, 122, 126, 128, 129, 132, 134, 137, 139, 141, 144, 148, 151, 154, 155, 156, 159, 160], "data_path": [87, 92], "data_rep_cfg": 11, "data_represent": [1, 5, 11, 13, 16, 66, 68, 80, 90, 91, 92, 93, 95, 96, 113, 114, 115, 116, 141], "data_sourc": 14, "databas": [5, 16, 59, 64, 135, 154, 155], "database_exist": [56, 59], "database_indic": 134, "database_nam": 64, "database_path": [59, 135], "database_table_exist": [56, 59], "dataclass": [1, 3, 35], "dataconfig": [141, 154], "dataconvert": [1, 3, 46, 62, 63, 64, 155, 158], "dataformat": [61, 64], "datafram": [59, 60, 62, 98, 102, 134, 135, 153, 155, 158, 160], "dataload": [1, 3, 5, 9, 13, 66, 67, 68, 92, 102, 134, 144, 154, 155, 160], "datamodul": [1, 3, 5], "datarepresent": [5, 11, 13, 16, 66, 68, 86, 87, 92, 118], "dataset": [1, 3, 5, 8, 9, 12, 13, 14, 15, 16, 25, 60, 63, 66, 67, 68, 79, 87, 92, 104, 120, 137, 141, 151, 158, 160], "dataset_1": [154, 155], "dataset_2": [154, 155], "dataset_3": [154, 155], "dataset_arg": 9, "dataset_config": [136, 138, 155, 160], "dataset_config_path": [155, 160], "dataset_dir": 5, "dataset_refer": 9, "datasetconfig": [8, 11, 60, 138, 141, 154, 160], "datasetconfigsav": 141, "datasetconfigsaverabcmeta": [138, 141], "datasetconfigsavermeta": [138, 141], "db": [64, 134, 135, 154, 155], "db_count_norm": 135, "dbang_decay_length": 4, "ddp": [155, 160], "de": 34, "deactiv": [102, 126], "deal": [14, 133], "debug": [149, 155], "decai": 111, "decor": [1, 136, 148], "dedic": 152, "deem": 37, "deep": [0, 5, 62, 64, 84, 108, 111, 153, 155, 156, 157, 158, 159, 160], "deepcopi": 146, "deepcor": [4, 22, 99], "deepcorefilter_13": 4, "deepic": [103, 111], "def": [153, 154, 155, 158, 160], "default": [5, 7, 9, 11, 13, 14, 16, 19, 21, 22, 23, 31, 34, 36, 43, 45, 47, 50, 55, 59, 63, 64, 66, 67, 68, 70, 71, 73, 75, 76, 77, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 117, 118, 120, 126, 128, 129, 131, 132, 133, 135, 137, 139, 147, 154, 155], "default_prediction_label": [124, 125, 126, 160], "default_target_label": [124, 125, 126, 160], "default_typ": 59, "defin": [5, 11, 13, 16, 31, 60, 66, 67, 68, 71, 75, 77, 85, 86, 87, 88, 89, 90, 92, 94, 96, 118, 134, 141, 154, 155, 158, 160], "definit": [90, 92, 93, 95, 117, 126, 152, 155, 160], "deg": 93, "deg_scal": 84, "degre": [84, 93], "deleg": 149, "deliv": 102, "demo_ic": 101, "demo_wat": 101, "denot": [19, 131, 132, 153, 158], "dens": 85, "depend": [0, 83, 153, 154, 155, 156, 159, 160], "deploi": [0, 1, 69, 71, 155, 156, 157, 159], "deploy": [0, 1, 71, 73, 74, 75, 76, 77, 92, 151, 155, 156, 158, 159, 160], "deployment_modul": [1, 69], "deploymentmodul": [69, 70, 71, 73, 76, 77], "deprec": [5, 11, 13, 16, 44, 45, 54, 55, 66, 68, 73, 113, 114, 115, 116, 146], "deprecated_method": [3, 44, 54, 69, 72], "deprecation_tool": [1, 136], "depth": [84, 96, 111, 128], "depth_rel": 111, "describ": [5, 152, 155], "descript": [5, 117, 137], "design": [1, 155, 158], "desir": [135, 147], "detail": [1, 5, 104, 117, 118, 126, 131, 154, 155, 157, 158, 160], "detector": [0, 1, 31, 72, 80, 87, 92, 93, 95, 99, 100, 101, 154, 155, 156, 159, 160], "detector_respons": 155, "determin": [70, 73, 76, 104], "develop": [0, 1, 152, 154, 155, 156, 157, 158, 159, 160], "deviat": [87, 92, 93, 96], "devic": 71, "df": [59, 153], "dfg": [0, 156, 159], "diagon": 129, "dict": [5, 8, 9, 11, 13, 16, 23, 34, 37, 59, 71, 87, 92, 93, 95, 98, 99, 100, 101, 102, 111, 117, 118, 121, 131, 134, 137, 139, 141, 142, 143, 144, 146, 153, 154, 155, 158], "dictionari": [11, 13, 16, 19, 34, 35, 37, 49, 59, 87, 92, 93, 117, 139, 141, 142, 144, 153, 158], "did": 14, "differ": [0, 11, 13, 16, 19, 21, 39, 40, 41, 43, 49, 50, 51, 72, 86, 93, 134, 152, 153, 154, 155, 156, 158, 159, 160], "difficult": 154, "diffier": [155, 160], "digit": 83, "dim": [83, 84], "dim_emb": 83, "dim_in": [83, 84], "dim_out": 84, "dimenion": [106, 108, 112], "dimens": [83, 84, 96, 99, 100, 101, 104, 105, 106, 108, 110, 111, 112, 120, 126, 128, 129, 133, 158, 160], "dimension": [83, 84, 129, 154, 160], "dir": 147, "dir_with_fil": [153, 158], "dir_x_pr": 125, "dir_y_pr": 125, "dir_z_pr": 125, "direct": [96, 108, 124, 125, 126, 130, 132, 154, 158], "direction_kappa": 125, "directionreconstructionwithkappa": [123, 125, 155, 160], "directli": [0, 106, 112, 153, 155, 156, 158, 159, 160], "directori": [5, 7, 45, 47, 49, 50, 51, 52, 53, 55, 62, 63, 66, 67, 68, 131, 147, 153, 155, 160], "dirti": 155, "discard_empty_ev": 75, "disco": 129, "disconnect": 154, "discuss": 152, "disk": [153, 154, 155], "distanc": [31, 90, 91, 93, 129], "distance_as_edge_featur": 93, "distribut": [14, 85, 106, 118, 125, 129, 133, 135, 157, 160], "distribution_strategi": 102, "ditto": 133, "diverg": 133, "divid": [70, 73, 76, 96, 126], "dk": 5, "dl": [155, 160], "dnn": [25, 32], "do": [0, 5, 14, 71, 75, 133, 141, 142, 152, 154, 155, 156, 159, 160], "do_shuffl": [3, 8], "doc": 155, "docformatt": 152, "docker": 1, "docstr": 152, "document": [14, 118, 133, 158, 160], "doe": [37, 124, 126, 142, 153, 154, 155, 160], "doesn": 59, "dom": [8, 11, 13, 16, 81, 85, 95, 96, 104, 120, 134, 155, 160], "dom_i": [4, 95, 99], "dom_numb": 4, "dom_tim": [4, 95], "dom_typ": 4, "dom_x": [4, 95, 99], "dom_z": [4, 95, 99], "domain": [0, 1, 3, 69, 155, 156, 159], "domandtimewindowcoarsen": [80, 81], "domcoarsen": [80, 81], "don": [131, 153], "done": [23, 85, 149, 152, 153, 155, 158], "dot": 84, "download": [5, 66, 67, 68, 157], "download_dir": [5, 66, 67, 68], "downsid": 154, "draw": 14, "drawn": [88, 89, 93, 94, 155, 160], "drhb": [14, 111], "drop": [14, 84, 105], "drop_last": 14, "drop_path": 84, "drop_prob": 84, "dropout": [84, 104, 110, 112, 120], "dropout_prob": 84, "dropout_ratio": 105, "dropout_readout": 112, "droppath": [82, 84], "droput": 84, "dtype": [11, 13, 16, 87, 92, 93, 150, 154, 155, 160], "due": [154, 155, 160], "dummy_pid": [154, 155], "dump": [139, 141, 142, 153, 154, 155], "duplciat": 131, "duplic": 95, "dure": [84, 92, 111, 126, 131, 158], "dynam": [23, 84, 106, 107, 108, 112, 155, 160], "dynedg": [75, 77, 80, 103, 107, 108, 111, 112, 155, 160], "dynedge_arg": 111, "dynedge_jinst": [80, 103], "dynedge_kaggle_tito": [80, 103], "dynedge_layer_s": [106, 112, 155, 160], "dynedgeconv": [82, 84, 106, 112], "dynedgejinst": [103, 107], "dynedgetito": [103, 104, 108], "dyntran": [82, 84, 104, 108], "dyntrans1": 84, "dyntrans_layer_s": [104, 108], "e": [1, 5, 8, 9, 11, 13, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 37, 39, 43, 59, 60, 64, 71, 75, 77, 81, 83, 84, 85, 87, 90, 92, 93, 95, 96, 98, 99, 100, 101, 105, 109, 110, 117, 118, 121, 122, 124, 125, 126, 129, 131, 132, 133, 135, 139, 149, 152, 153, 154, 155, 157, 160], "each": [5, 14, 23, 34, 37, 58, 59, 63, 64, 70, 71, 73, 76, 81, 83, 84, 85, 87, 90, 92, 93, 95, 96, 99, 100, 101, 104, 106, 108, 112, 120, 124, 126, 129, 131, 133, 134, 147, 153, 154, 155, 158, 160], "earli": [131, 137], "early_stopping_pati": [102, 144], "earlystop": 131, "easi": [0, 153, 154, 155, 156, 159, 160], "easili": [1, 155, 160], "easy_model": [1, 80], "easysyntax": [80, 102, 118, 122], "ed": 133, "edg": [80, 83, 84, 85, 86, 88, 91, 92, 93, 94, 95, 106, 107, 108, 110, 112, 113, 115, 129, 154, 155, 160], "edge_attr": [154, 155], "edge_definit": [92, 93], "edge_enh": [84, 110], "edge_index": [81, 84, 129, 154, 155], "edge_weight": 129, "edgeconv": 84, "edgeconvtito": [82, 84], "edgedefinit": [88, 89, 90, 91, 92, 93, 94, 155, 160], "edgelessgraph": [88, 93], "edu": 67, "effect": [131, 152, 155, 160], "effici": 14, "effort": [152, 154, 158], "either": [0, 5, 9, 11, 16, 21, 31, 66, 68, 84, 110, 133, 153, 155, 156, 159], "elast": 4, "element": [11, 13, 19, 34, 37, 102, 118, 122, 129, 134, 143, 153, 155, 158], "elementwis": 133, "elimin": 75, "els": [75, 132, 153, 158], "ema": 121, "emb_dim": 83, "embed": [80, 82, 104, 111, 120, 124, 126, 128], "embedding_dim": [104, 120], "empti": 75, "en": 155, "enabl": [0, 3, 95, 102, 156, 159], "enable_edge_transform": [84, 110], "encod": [83, 93, 110, 129, 132], "encount": 155, "encourag": [152, 155], "end": [0, 1, 5, 14, 96, 131, 155, 156, 159], "energi": [4, 125, 126, 135, 154, 155, 158], "energy_cascad": [4, 125], "energy_cascade_pr": 125, "energy_pr": 125, "energy_reco": 77, "energy_sigma": 125, "energy_track": [4, 125], "energy_track_pr": 125, "energyreconstruct": [123, 125, 155, 160], "energyreconstructionwithpow": [123, 125], "energyreconstructionwithuncertainti": [123, 125, 155], "energytcreconstruct": [123, 125], "engin": [0, 156, 159], "enough": 117, "ensemble_dataset": [154, 155], "ensembledataset": [10, 11, 141, 154, 155], "ensembleloss": [130, 133], "ensur": [37, 58, 133, 149, 152, 160], "entir": [11, 13, 117, 153, 155, 160], "entiti": [155, 160], "entri": [75, 77, 106, 112, 129, 137, 158], "entropi": 133, "enum": 37, "env": 157, "environ": [50, 157], "ep": [150, 155, 160], "epoch": [121, 131, 137], "eps_lik": [136, 150], "equival": [37, 155, 160], "erda": [5, 66], "erdahost": 68, "erdahosteddataset": [3, 5, 66, 68], "error": [133, 149, 152, 153, 155], "especi": 75, "establish": 160, "estim": 129, "etc": [0, 14, 133, 149, 154, 155, 156, 158, 159], "eth": 129, "euclidean": [90, 129, 152], "euclideandistanceloss": [130, 133], "euclideanedg": [89, 90], "european": [0, 156, 159], "eval": [117, 157], "evalu": [5, 118, 126], "even": 58, "event": [0, 1, 5, 7, 9, 11, 13, 14, 16, 18, 28, 31, 43, 45, 47, 55, 59, 60, 63, 64, 66, 67, 68, 75, 83, 85, 87, 92, 95, 96, 104, 122, 126, 128, 129, 132, 133, 134, 135, 141, 153, 155, 156, 158, 159, 160], "event_no": [7, 11, 13, 16, 45, 47, 55, 59, 60, 63, 64, 135, 141, 154, 155, 160], "event_tim": 4, "event_truth": 5, "eventid": 4, "events_per_batch": 63, "everi": [112, 118, 153, 155, 158], "everyth": [155, 160], "everytim": 152, "exact": [107, 133, 160], "exactli": [129, 133, 149, 154], "exampl": [7, 14, 34, 60, 81, 85, 96, 118, 129, 133, 141, 142, 153, 154, 157], "example_energy_reconstruction_model": [137, 155, 160], "exce": 135, "exceed": 64, "except": [1, 151, 153], "exclud": [19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "exclude_kei": 23, "excluding_valu": 129, "execut": 59, "exist": [0, 11, 13, 16, 59, 80, 118, 132, 141, 154, 155, 156, 159, 160], "exist_ok": [155, 160], "expand": [0, 155, 156, 159], "expans": 111, "expect": [59, 60, 62, 75, 77, 87, 92, 95, 154, 155, 160], "expects_merged_datafram": 62, "experi": [0, 1, 5, 6, 7, 48, 49, 71, 130, 153, 155, 156, 159], "experiment": 160, "expert": 1, "explain": 155, "explicitli": [134, 139, 144], "exponenti": 133, "export": [153, 154, 155, 158, 160], "expos": 1, "express": [14, 117, 133], "extend": [0, 1, 31, 153, 154, 156, 159], "extend_boundari": 31, "extens": [1, 5, 49, 62, 147], "extern": [154, 155], "extra": [84, 93, 160], "extra_repr": [84, 117], "extra_repr_recurs": 117, "extracor_nam": 49, "extract": [7, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 39, 41, 42, 43, 58, 75, 77, 126, 129, 153, 155, 158], "extractor": [1, 3, 7, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 55, 75, 77], "extractor_nam": [18, 19, 21, 23, 26, 39, 41, 43, 153, 158], "f": [85, 153, 155, 160], "f1": 85, "f2": 85, "f_absorpt": 96, "f_scatter": 96, "factor": [84, 96, 129, 131, 133, 155, 160], "fail": 18, "fals": [14, 36, 64, 75, 83, 84, 87, 92, 93, 95, 106, 110, 111, 112, 117, 128, 129, 131, 133, 135, 155, 160], "fanci": 155, "fashion": 1, "fast": [0, 154, 155, 156, 159], "faster": [0, 153, 154, 156, 159], "favorit": 157, "favourit": 155, "fbeezabg5a": 5, "fc": [84, 85], "featur": [1, 3, 4, 5, 11, 13, 16, 21, 22, 64, 66, 67, 68, 75, 77, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 111, 112, 120, 124, 128, 129, 134, 141, 152, 154, 155, 158, 160], "feature_idx": 96, "feature_map": [98, 99, 100, 101, 158], "feature_nam": 96, "features_subset": [84, 104, 106, 108, 112, 120, 155, 160], "feedforward": 84, "feel": 155, "fetch": 137, "few": [0, 80, 152, 153, 154, 155, 156, 159, 160], "fiber_id": 100, "field": [93, 118, 129, 132, 139, 144, 146, 153, 154, 155, 158], "figur": 0, "file": [0, 1, 3, 5, 7, 11, 13, 14, 16, 18, 19, 21, 31, 34, 36, 39, 40, 41, 42, 43, 45, 47, 49, 50, 51, 52, 53, 55, 57, 58, 62, 63, 64, 70, 71, 73, 75, 76, 77, 87, 92, 117, 131, 133, 134, 137, 138, 139, 140, 141, 142, 147, 149, 153, 154, 155, 156, 157, 158, 159, 160], "file_extens": 62, "file_handl": 149, "file_loc": 67, "file_path": [134, 153, 158], "file_read": [7, 153, 158], "filehandl": 149, "filenam": 147, "fileread": [19, 49], "files_list": 58, "filesi": [1, 136], "fill": [5, 14, 83], "fill_valu": [83, 110], "filter": [36, 45, 47, 50, 55, 149, 158], "filter_ani": 36, "filter_nam": 36, "filtermask": 36, "final": [0, 7, 85, 131, 141, 154, 155, 156, 159], "find": [21, 31, 91, 147, 154, 155, 158, 160], "find_fil": [49, 50, 51, 52, 53, 153], "find_i3_fil": [136, 147], "first": [83, 91, 95, 104, 120, 131, 134, 152, 155, 158], "fisher": 133, "fit": [9, 14, 102, 133, 135, 144, 155, 160], "fit_weight": 135, "five": [93, 154], "fix": [60, 155], "flag": [22, 75], "flake8": 152, "flatten": 34, "flatten_nested_dictionari": [33, 34], "flexibil": 160, "flexibl": 60, "float": [11, 13, 16, 31, 36, 75, 83, 84, 87, 90, 91, 92, 93, 95, 96, 102, 104, 105, 110, 112, 120, 126, 131, 133, 134, 135, 141, 154], "float32": [11, 13, 16, 87, 92, 93], "float64": 133, "flow": [118, 126, 160], "flow_lay": [118, 126], "flowchart": [0, 156, 159], "fly": [154, 155], "fn": [11, 37, 139, 143], "fn_kwarg": 143, "folder": [45, 47, 50, 51, 52, 53, 55, 70, 153], "folk": 155, "follow": [14, 102, 106, 112, 118, 122, 133, 135, 152, 153, 154, 155], "fork": 152, "form": [0, 19, 80, 110, 124, 139, 144, 153, 154, 156, 159, 160], "format": [0, 1, 3, 5, 7, 11, 34, 38, 39, 49, 51, 62, 63, 64, 83, 117, 120, 141, 152, 153, 154, 155, 156, 157, 158, 159, 160], "forward": [81, 83, 84, 87, 90, 92, 93, 95, 98, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 120, 122, 126, 128, 133, 160], "found": [37, 45, 47, 50, 55, 63, 67, 96, 133, 154, 155], "four": 83, "fourier": 83, "fourierencod": [82, 83, 111, 128], "fraction": [105, 120, 134], "frame": [20, 21, 23, 31, 33, 36, 37, 77], "frame_is_montecarlo": [33, 35], "frame_is_nois": [33, 35], "framework": [0, 155, 156, 159], "free": [0, 14, 133, 155, 156, 159], "freeli": 155, "frequenc": 83, "friendli": [0, 62, 64, 153, 155, 156, 157, 159], "from": [0, 1, 5, 7, 8, 9, 11, 13, 14, 16, 19, 20, 21, 22, 23, 25, 26, 28, 31, 34, 35, 36, 37, 39, 41, 42, 43, 49, 50, 52, 53, 57, 62, 64, 66, 67, 68, 83, 85, 87, 90, 92, 93, 95, 96, 98, 99, 100, 101, 108, 111, 117, 118, 121, 124, 125, 126, 129, 131, 132, 133, 139, 140, 142, 144, 149, 152, 153, 154, 155, 156, 158, 159, 160], "from_config": [11, 117, 140, 141, 142, 154, 155, 160], "from_dataset_config": [8, 155, 160], "full": [63, 129, 155, 160], "full_edge_index": [80, 129], "fulli": [83, 110, 153, 155, 160], "func": [19, 155], "function": [0, 7, 8, 11, 14, 21, 37, 39, 43, 58, 59, 75, 77, 81, 84, 85, 87, 92, 96, 98, 99, 100, 101, 106, 110, 112, 117, 118, 126, 129, 133, 134, 136, 141, 142, 143, 146, 147, 148, 150, 154, 156, 158, 159, 160], "fund": [0, 156, 159], "furnish": [14, 133], "further": [75, 96], "furthermor": 120, "g": [1, 5, 11, 13, 16, 18, 19, 21, 31, 34, 37, 59, 60, 64, 75, 77, 84, 85, 87, 92, 95, 96, 110, 126, 129, 133, 135, 149, 152, 154, 155, 157, 160], "galatict": 24, "gamma_1": 84, "gamma_2": 84, "gather": [14, 96], "gather_cluster_sequ": [88, 96], "gather_len_matched_bucket": [10, 14], "gaussian": 129, "gcd": [18, 21, 31, 35, 45, 47, 50, 55, 58, 73, 75, 76, 77, 147], "gcd_dict": [35, 37], "gcd_file": [6, 18, 21, 31, 73, 75, 76, 77], "gcd_list": [58, 147], "gcd_rescu": [45, 47, 50, 55, 147], "gcd_shuffl": 58, "gelu": 84, "gener": [0, 5, 9, 11, 13, 14, 16, 23, 36, 49, 62, 64, 66, 70, 75, 76, 77, 83, 87, 88, 89, 92, 93, 94, 96, 124, 133, 135, 154, 155, 156, 158, 159, 160], "geometr": 155, "geometri": [66, 87, 92, 98, 160], "geometry_t": [98, 99, 100, 101, 158], "geometry_table_path": [99, 100, 101, 158], "germani": [0, 156, 159], "get": [19, 35, 59, 96, 98, 131, 134, 155, 160], "get_all_argument_valu": [138, 139], "get_all_grapnet_class": [138, 143], "get_field": [80, 129], "get_graphnet_class": [138, 143], "get_lr": 131, "get_map_funct": 7, "get_member_vari": [33, 37], "get_metr": 131, "get_om_keys_and_pulseseri": [33, 35], "get_predict": [130, 134], "get_primary_kei": [56, 59], "get_rw_landing_prob": [80, 129], "gev": 66, "gframe": [21, 31], "gggt": [118, 126], "git": 157, "github": [11, 14, 16, 83, 84, 110, 111, 118, 126, 128, 129, 133, 155, 157], "given": [5, 11, 14, 16, 21, 31, 64, 66, 67, 68, 83, 85, 90, 126, 129, 133, 135, 137, 154, 158], "glob": 153, "global": [2, 4, 104, 106, 108, 112, 117, 155], "global_index": 7, "global_pooling_schem": [104, 106, 108, 112, 155, 160], "gnlabelcascadeenergydeposit": 4, "gnlabelcascadeenergydepositedprimari": 4, "gnlabelenergydepositedprimari": 4, "gnlabelenergydepositedtot": 4, "gnlabelenergyprimari": 4, "gnlabelhighestedaughterdist": 4, "gnlabelhighestedaughterefract": 4, "gnlabelhighesteiniceparticledist": 4, "gnlabelhighesteiniceparticleefract": 4, "gnlabelhighesteiniceparticleeonentr": 4, "gnlabelhighesteiniceparticleischild": 4, "gnlabeltrackenergydeposit": 4, "gnlabeltrackenergydepositedprimari": 4, "gnlabeltrackenergyonentr": 4, "gnlabeltrackenergyonentranceprimari": 4, "gnn": [1, 72, 80, 104, 105, 106, 107, 108, 110, 111, 112, 118, 120, 128, 155, 160], "go": [14, 152, 155], "googl": 152, "got": 153, "gpu": [102, 137, 155, 157, 160], "grab": 126, "grad_output": 133, "gradient_clip_v": 102, "grant": [0, 14, 133, 156, 159], "graph": [0, 1, 5, 8, 11, 13, 16, 66, 68, 80, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 98, 110, 114, 115, 116, 120, 129, 132, 134, 152, 154, 155, 156, 159, 160], "graph_definit": [5, 11, 13, 16, 66, 67, 68, 86, 88, 118, 134, 141, 154, 155, 160], "graph_definiton": 154, "graphdefinit": [5, 11, 13, 16, 66, 67, 68, 86, 87, 88, 89, 92, 93, 94, 118, 134, 152, 154, 155], "graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160], "graphnet_file_read": [3, 48, 153, 158], "graphnet_model": 131, "graphnet_modul": 73, "graphnet_writ": [3, 61], "graphnetdatamodul": [3, 5, 9], "graphnetearlystop": [130, 131], "graphnetfileread": [7, 48, 49, 50, 51, 52, 53, 153], "graphnetfilesavemethod": [62, 64], "graphneti3deploy": [72, 73], "graphnetwrit": [7, 61, 62, 63, 64, 153], "grapnet": [143, 155], "greatli": [155, 160], "grit": [80, 83, 84, 103, 129], "grit_lay": 84, "grit_model": 110, "gritsparsemha": [82, 84], "grittransformerlay": [82, 84], "group": [0, 14, 85, 155, 156, 159], "group_bi": [82, 85], "group_pulses_to_dom": [82, 85], "group_pulses_to_pmt": [82, 85], "groupbi": 85, "guarante": [155, 160], "guid": 152, "guidelin": 152, "gvd": [66, 101], "gz": 5, "h5": [41, 52, 153], "h5_extractor": [17, 40], "h5extractor": [7, 40, 41, 49, 153], "h5hitextractor": [40, 41, 153], "h5py": 153, "h5truthextractor": [40, 41, 153], "ha": [0, 5, 37, 59, 73, 75, 96, 105, 133, 147, 153, 154, 155, 156, 157, 158, 159, 160], "had": 158, "hadron": 125, "hand": [23, 154, 155], "handi": 58, "handl": [23, 133, 137, 146, 149, 153, 154, 155], "handler": 149, "happen": [96, 135, 154, 158], "hard": [31, 95], "has_extens": [136, 147], "has_icecube_packag": [136, 148], "has_jammy_flows_packag": [136, 148], "has_torch_packag": [136, 148], "have": [1, 5, 13, 23, 45, 47, 50, 55, 59, 60, 64, 85, 87, 92, 96, 111, 126, 152, 154, 155, 158, 160], "head": [84, 104, 108, 110, 111, 126, 128, 160], "head_dim": 84, "head_siz": 111, "heavi": 153, "height": 129, "help": [75, 77, 137, 152, 154, 155, 158, 160], "here": [87, 92, 152, 154, 155, 157, 158, 160], "herebi": [14, 133], "hidden": [83, 84, 104, 106, 107, 110, 112, 120], "hidden_dim": [110, 111, 128], "hidden_featur": 84, "hidden_s": [120, 124, 125, 126, 155, 160], "high": [0, 155, 156, 159], "higher": 154, "highest_protocol": 153, "hint": 152, "hit": [8, 134, 154, 155, 158], "hitdata": 41, "hlc": [4, 95], "hlc_name": 95, "hold": [87, 92, 96, 153, 158, 160], "holder": [14, 133], "home": [99, 100, 101, 137, 153, 158], "homogenized_qtot": [4, 36], "homophili": 129, "hook": 152, "horizon": [0, 156, 159], "host": [5, 66, 67, 158], "how": [5, 14, 88, 89, 94, 153, 155, 160], "howev": [45, 47, 50, 55, 154, 155], "html": [118, 126, 155], "http": [5, 11, 14, 16, 67, 83, 84, 90, 110, 111, 112, 118, 126, 128, 129, 133, 152, 155, 157], "hull": 31, "human": 155, "hybrid": 24, "hyperparamet": [142, 155, 160], "i": [0, 1, 5, 9, 11, 13, 14, 16, 18, 19, 21, 23, 31, 34, 35, 36, 37, 39, 41, 43, 45, 47, 50, 55, 58, 59, 60, 63, 64, 67, 70, 73, 75, 76, 77, 81, 83, 84, 85, 87, 90, 92, 93, 95, 96, 105, 106, 110, 111, 112, 118, 120, 122, 125, 126, 129, 131, 132, 133, 134, 135, 137, 139, 142, 143, 144, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160], "i3": [1, 21, 31, 35, 36, 37, 45, 47, 50, 55, 58, 70, 75, 77, 147, 155, 157], "i3_fil": [6, 18, 21, 31], "i3_filt": [20, 33, 45, 47, 50, 55], "i3_list": [58, 147], "i3_shuffl": 58, "i3calibr": 35, "i3deploy": [6, 69, 73, 74], "i3extractor": [7, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 45, 47, 49, 55], "i3featureextractor": [4, 17, 20, 75, 77], "i3featureextractoricecube86": [20, 22], "i3featureextractoricecubedeepcor": [20, 22], "i3featureextractoricecubeupgrad": [20, 22], "i3fileset": [3, 6, 49, 50], "i3filt": [33, 36, 45, 47, 50, 55], "i3filtermask": [33, 36], "i3fram": [20, 23, 35, 37, 75, 77], "i3galacticplanehybridrecoextractor": [20, 24], "i3genericextractor": [17, 20], "i3hybridrecoextractor": [17, 20], "i3inferencemodul": [73, 74, 75, 76, 77], "i3mctre": 31, "i3modul": [1, 69, 71, 73], "i3ntmuonlabelextractor": [20, 25], "i3ntmuonlabelsextractor": [17, 20], "i3particl": 26, "i3particleextractor": [17, 20], "i3pisaextractor": [17, 20], "i3pulsecleanermodul": [74, 75], "i3pulsenoisetruthflagicecubeupgrad": [20, 22], "i3quesoextractor": [17, 20], "i3read": [3, 45, 47, 48, 55], "i3retroextractor": [17, 20], "i3splinempeextractor": [17, 20], "i3splinempeicextractor": [20, 30], "i3toparquetconvert": [45, 46, 47], "i3tosqliteconvert": [46, 47, 55], "i3truthextractor": [4, 17, 20], "i3tumextractor": [17, 20], "ic": [95, 108, 111], "ice_arg": 95, "ice_transpar": [88, 96], "icecub": [1, 3, 5, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 45, 47, 50, 55, 67, 69, 72, 75, 76, 77, 80, 84, 95, 96, 97, 108, 111, 148, 155, 160], "icecube86": [4, 97, 99, 101], "icecube86prometheu": [97, 101], "icecube_deepcor": 101, "icecube_gen2": 101, "icecube_upgrad": [99, 101], "icecubedeepcor": [97, 99], "icecubedeepcore8": [97, 101], "icecubegen2": [97, 101], "icecubehosteddataset": [3, 5, 67], "icecubekaggl": [97, 99], "icecubeupgrad": [97, 99], "icecubeupgrade7": [97, 101], "icedemo81": [97, 101], "icemix": [80, 103], "icemixnod": [94, 95], "icetrai": [35, 37, 45, 47, 50, 55, 71, 72, 148, 157], "icetray_verbos": [45, 47, 50, 55], "id": [5, 7, 9, 13, 45, 47, 55, 64, 87, 92, 98, 134, 153, 154, 155, 158], "id_column": 95, "ideal": 160, "ident": [85, 93, 98, 99, 100, 101, 126, 129], "identifi": [7, 11, 13, 16, 31, 95, 96, 129, 141, 142, 158], "identify_indic": [88, 96], "identitytask": [123, 124, 126], "ie": 104, "ignor": [11, 13, 16, 37, 63, 129], "illustr": [0, 152, 153, 156, 159], "imag": [0, 1, 152, 155, 156, 159, 160], "impact": 111, "implement": [1, 5, 14, 19, 21, 49, 62, 71, 76, 84, 90, 104, 105, 106, 107, 108, 110, 111, 112, 120, 128, 129, 133, 152, 153, 155, 160], "impli": [14, 133], "import": [0, 1, 5, 59, 80, 113, 114, 115, 116, 136, 153, 154, 155, 156, 158, 159, 160], "impos": [11, 13, 102], "improv": [0, 1, 137, 155, 156, 159, 160], "in_dim": 84, "in_featur": 84, "inaccur": 96, "inact": [87, 92], "includ": [1, 5, 13, 14, 66, 67, 68, 84, 95, 102, 133, 139, 152, 154, 155, 158, 160], "include_dynedg": 111, "incom": 93, "incompat": 155, "incomplet": 14, "incorpor": 83, "increas": [0, 131, 156, 159], "indent": 117, "independ": [70, 73, 76, 153], "index": [1, 7, 11, 13, 16, 37, 59, 63, 64, 67, 85, 91, 96, 98, 104, 120, 129, 131, 154, 155, 160], "index_column": [7, 11, 13, 16, 45, 47, 55, 59, 60, 63, 64, 134, 135, 141, 154, 155], "indic": [14, 60, 79, 85, 91, 93, 96, 104, 120, 126, 129, 131, 133, 137, 152, 155, 160], "indicesfor": 35, "indici": [11, 13, 16, 35, 60], "individu": [0, 11, 13, 16, 85, 106, 129, 154, 156, 159, 160], "induct": 110, "industri": [0, 3, 156, 159], "inelast": [4, 125], "inelasticity_pr": 125, "inelasticityreconstruct": [123, 125], "inf": 129, "infer": [0, 1, 64, 69, 71, 72, 75, 77, 102, 126, 155, 156, 159], "inference_modul": [69, 74], "info": [149, 155], "inform": [5, 11, 13, 16, 18, 19, 21, 23, 31, 39, 41, 43, 66, 67, 68, 87, 92, 95, 96, 117, 153, 154, 155, 158, 160], "ingest": [0, 1, 3, 97, 156, 159], "inherit": [5, 19, 21, 37, 49, 62, 95, 98, 133, 149, 153, 154, 155, 160], "init_fn": [141, 142], "init_global_index": [3, 7], "init_predict_tqdm": 131, "init_test_tqdm": 131, "init_train_tqdm": 131, "init_validation_tqdm": 131, "init_valu": 84, "initi": [7, 36, 50, 64, 70, 73, 76, 84, 87, 91, 96, 104, 111], "initial_st": 43, "initialis": [142, 155, 160], "injection_azimuth": [4, 154, 155], "injection_bjorkeni": [4, 154, 155], "injection_bjorkenx": [4, 154, 155], "injection_column_depth": [4, 154, 155], "injection_energi": [4, 154, 155], "injection_interaction_typ": [4, 154, 155], "injection_position_i": [4, 154, 155], "injection_position_x": [4, 154, 155], "injection_position_z": [4, 154, 155], "injection_typ": [4, 154, 155], "injection_zenith": [4, 154, 155, 160], "innov": [0, 156, 159], "inptut": 96, "input": [5, 7, 11, 13, 16, 45, 47, 49, 50, 55, 62, 66, 67, 68, 70, 73, 75, 76, 77, 83, 84, 87, 92, 93, 95, 96, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 120, 124, 126, 128, 129, 139, 144, 146, 147, 153, 154, 155, 158, 160], "input_dim": [84, 160], "input_dir": [153, 158], "input_featur": [87, 92, 93, 98], "input_feature_nam": [87, 92, 93, 95, 98], "input_fil": [49, 70], "input_nam": 96, "ins": 98, "insert": 96, "insid": 154, "inspect": [155, 160], "inspir": [112, 129], "instal": [152, 155], "instanc": [11, 19, 21, 31, 37, 39, 41, 43, 45, 47, 50, 55, 87, 92, 117, 132, 134, 140, 142, 153, 154, 155, 160], "instanti": [7, 9, 142, 153, 154, 158], "instead": [5, 11, 13, 16, 21, 31, 45, 47, 50, 55, 66, 68, 73, 118, 133, 155, 160], "int": [5, 7, 8, 9, 11, 13, 14, 16, 25, 28, 36, 45, 47, 49, 50, 51, 52, 53, 55, 60, 62, 63, 64, 67, 70, 73, 76, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 133, 134, 135, 137, 141, 144, 149, 153, 160], "integ": [59, 104, 106, 107, 112, 133, 154, 155], "integer_primary_kei": 59, "integr": 160, "intend": [104, 120, 155], "interact": [125, 132, 154, 155], "interaction_kei": 132, "interaction_tim": [4, 125], "interaction_time_pr": 125, "interaction_typ": [4, 132], "interchang": [155, 160], "interfac": [0, 141, 142, 155, 156, 157, 158, 159], "interim": [7, 61, 62, 63, 64, 153], "intermedi": [0, 1, 3, 7, 11, 105, 155, 156, 159], "intern": [3, 17, 39, 47, 51], "internal_parquet_read": [3, 48], "interpol": [96, 131], "interpret": 124, "interv": [83, 155, 160], "intract": 154, "introduc": 155, "introduct": [118, 126], "intuit": [149, 160], "invers": 126, "invert": 126, "involv": 60, "io": [118, 126, 152, 155], "iop": 155, "iopscienc": 155, "is_bad_dom": 4, "is_boost_class": [33, 37], "is_boost_enum": [33, 37], "is_bright_dom": 4, "is_errata_dom": 4, "is_gcd_fil": [136, 147], "is_graphnet_class": [138, 143], "is_graphnet_modul": [138, 143], "is_i3_fil": [136, 147], "is_icecube_class": [33, 37], "is_method": [33, 37], "is_saturated_dom": 4, "is_typ": [33, 37], "iseecub": [80, 127], "isinst": 153, "isn": 37, "isol": 93, "issu": [11, 16, 155, 160], "iter": 11, "its": [37, 120, 154, 155, 160], "itself": [37, 126, 153, 155, 160], "iv": 133, "jammy_flow": [118, 126, 148], "job": 158, "join": [153, 155], "json": [34, 141, 154, 155], "just": [5, 85, 153, 154, 155, 160], "k": [84, 90, 93, 104, 106, 108, 112, 120, 129, 133], "kaggl": [4, 83, 84, 99, 108, 111], "kappa": [125, 133], "kappa_switch": 133, "karg": [117, 121], "keep": [19, 21, 36, 39, 41, 43, 95, 153], "kei": [11, 19, 22, 23, 31, 34, 35, 37, 59, 64, 84, 85, 95, 132, 141, 142, 153, 154, 155, 158], "kept": 36, "key_padding_mask": 84, "keyword": [7, 131, 139, 144], "kind": [14, 133, 158], "km3net": [155, 160], "knn": 93, "knn_graph_batch": [80, 129], "knndistanceedg": [89, 90], "knnedg": [89, 90], "knngraph": [88, 93, 154, 155, 160], "knngraphrrwp": [88, 93], "knngraphrws": [88, 93], "know": 158, "known": 85, "kstep": [110, 129], "kv": 84, "kwarg": [7, 8, 11, 13, 16, 36, 49, 51, 52, 53, 62, 81, 84, 87, 90, 91, 92, 93, 95, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 120, 121, 122, 124, 125, 126, 128, 131, 133, 135, 139, 141, 142, 149], "l": [84, 96, 129], "l3_oscnext_bool": 4, "l4_oscnext_bool": 4, "l5_oscnext_bool": 4, "l6_oscnext_bool": 4, "l7_oscnext_bool": 4, "label": [1, 11, 13, 16, 25, 28, 87, 92, 102, 105, 122, 126, 130, 134, 141], "lai": 155, "lambda": [117, 155, 160], "land": [129, 155], "larg": [0, 104, 133, 154, 156, 159], "larger": 153, "largest": 96, "last": [14, 106, 112, 120, 124, 125, 126, 131, 134, 160], "last_epoch": 131, "lastli": 158, "latent": [83, 104, 106, 108, 111, 112, 118, 120, 124, 125, 126, 128, 160], "latest": 155, "launch": [11, 16], "layer": [0, 80, 82, 83, 85, 104, 105, 106, 107, 108, 110, 111, 112, 118, 120, 124, 125, 126, 156, 159], "layer_s": 84, "layer_size_scal": 107, "layernorm": [84, 110], "ldot": [81, 85], "lead": [154, 155], "learn": [0, 1, 5, 62, 64, 75, 77, 118, 122, 124, 126, 131, 153, 155, 156, 157, 158, 159, 160], "learnabl": [84, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 126, 128, 160], "learnedtask": [123, 126], "least": [13, 152, 154, 155], "leav": 131, "len": [11, 13, 96, 129, 153, 154], "length": [11, 13, 14, 37, 95, 96, 129, 131], "lenmatchbatchsampl": [10, 14], "less": [8, 134, 155, 160], "let": [155, 158, 160], "level": [0, 5, 11, 13, 16, 18, 31, 36, 43, 45, 47, 49, 50, 51, 52, 53, 55, 59, 62, 63, 66, 67, 68, 81, 85, 111, 122, 149, 154, 155, 156, 158, 159], "leverag": 1, "lex_sort": [88, 96], "liabil": [14, 133], "liabl": [14, 133], "liamma": [83, 84, 110, 129], "lib": [99, 100, 101, 137], "licens": [14, 133], "lift": 153, "light": 91, "lightn": [9, 131, 155, 160], "lightningdatamodul": 9, "lightningmodul": [83, 84, 117, 131, 149, 155, 160], "liheng": 110, "like": [14, 19, 37, 85, 91, 118, 126, 129, 133, 150, 152, 154, 155, 157, 160], "limit": [14, 36, 95, 133], "line": [131, 137, 153, 154, 158], "linear": [83, 84, 96, 106, 112, 160], "linearedgeencod": [82, 83], "linearli": 131, "linearnodeencod": [82, 83], "liquid": 100, "liquido": [3, 4, 17, 41, 52, 80, 97, 153], "liquido_read": [3, 48], "liquido_v1": [97, 100], "liquidoread": [48, 52, 153], "list": [5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 58, 59, 60, 62, 63, 64, 66, 67, 68, 70, 71, 73, 75, 76, 77, 81, 84, 85, 87, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 106, 108, 112, 117, 118, 120, 121, 122, 126, 129, 131, 133, 134, 135, 141, 143, 144, 147, 149, 153, 154, 158], "list_all_submodul": [138, 143], "ljvmiranda921": 152, "load": [0, 8, 11, 58, 71, 117, 121, 139, 141, 154, 155, 156, 158, 159], "load_from_checkpoint": [155, 160], "load_modul": [10, 11, 117], "load_state_dict": [117, 121, 155, 160], "loaded_model": [155, 160], "local": [81, 95, 99, 100, 101, 137, 155, 157, 160], "locat": 96, "lock": 13, "log": [0, 1, 125, 130, 131, 133, 136, 154, 155, 156, 159, 160], "log10": [126, 135, 155, 160], "log_cmk": 133, "log_cmk_approx": 133, "log_cmk_exact": 133, "log_every_n_step": [102, 155, 160], "log_fold": [36, 49, 51, 52, 53, 62, 149], "log_model": [155, 160], "logcmk": [130, 133], "logcoshloss": [130, 133, 155, 160], "logger": [7, 9, 11, 14, 19, 36, 49, 51, 52, 53, 60, 62, 70, 71, 90, 102, 117, 132, 135, 136, 149, 155, 160], "loggeradapt": 149, "logic": 154, "logit": [124, 133, 160], "logrecord": 149, "long": 154, "longer": 95, "longev": [0, 156, 159], "longtensor": [81, 85, 129], "look": [23, 154, 155], "lookup": 143, "loop": [83, 129, 155, 160], "loss": [11, 13, 16, 87, 92, 102, 118, 122, 126, 131, 133, 137, 155, 160], "loss_factor": 133, "loss_funct": [1, 126, 130, 155, 160], "loss_weight": [87, 92, 126, 155, 160], "loss_weight_column": [11, 13, 16, 87, 92, 134, 141], "loss_weight_default_valu": [11, 13, 16, 87, 92, 141], "loss_weight_t": [11, 13, 16, 134, 141], "lossfunct": [126, 130, 133, 155], "lot": 152, "lower": [0, 36, 155, 156, 159], "lr": [155, 160], "m": [91, 96, 133], "ma": 110, "machin": 1, "made": [155, 160], "maeloss": [130, 133], "magnitud": [0, 156, 159], "mai": [49, 60, 71, 95, 126, 154, 155, 157, 160], "main": [1, 14, 83, 84, 103, 110, 129, 152, 155], "mainli": 37, "major": [122, 126], "make": [0, 7, 95, 135, 141, 142, 152, 153, 154, 155, 156, 158, 159, 160], "make_dataload": [130, 134], "make_train_validation_dataload": [130, 134], "makedir": [155, 160], "manag": [0, 130, 153, 155, 156, 159], "mandatori": 83, "mangl": 37, "mani": [64, 153, 155, 160], "manipul": [34, 88, 89, 94], "map": [7, 11, 13, 16, 22, 23, 59, 87, 92, 93, 99, 100, 101, 126, 155, 158, 160], "mari": [0, 156, 159], "martin": 105, "mask": [14, 87, 92, 129], "masked_entri": 129, "master": 133, "match": [14, 49, 87, 92, 135, 147, 150, 153], "math": [1, 84, 136], "mathbb": 85, "mathbf": [81, 85], "matic": 126, "matric": [84, 129], "matrix": [84, 85, 90, 91, 96, 110, 129, 133, 154], "max": [81, 84, 106, 108, 112, 133, 135, 137, 155, 160], "max_activ": 95, "max_epoch": [102, 155, 160], "max_length": 95, "max_pool": [81, 85], "max_pool_x": [81, 85], "max_puls": 95, "max_rel_po": 128, "max_table_s": [47, 64], "max_weight": 135, "maximum": [47, 64, 85, 95, 96, 126, 128, 137], "mc": [23, 59], "mc_truth": [19, 43, 154, 155], "mclabelbgmuonmcp": 4, "mclabelbgmuonmcpecharg": 4, "mclabelclassif": 4, "mclabelcoincidentmuon": 4, "mctree": [31, 35], "md": 155, "mean": [0, 11, 13, 16, 80, 84, 96, 106, 108, 110, 112, 129, 133, 142, 153, 154, 155, 156, 159, 160], "meaning": 83, "meant": [153, 155, 160], "measur": [95, 96, 129, 155, 158], "mechan": 84, "meet": 126, "member": [21, 23, 31, 37, 49, 95, 141, 142, 149, 153, 158], "memori": [13, 154], "mention": 155, "merchant": [14, 133], "merg": [7, 14, 62, 63, 64, 133, 153, 154, 158], "merge_fil": [7, 62, 63, 64, 153, 158], "merged_database_nam": 64, "messag": [84, 110, 131, 149, 155], "messagepass": 84, "metaclass": [141, 142], "metaproject": 157, "meter": 155, "meth": 155, "method": [5, 7, 9, 11, 13, 14, 16, 19, 21, 31, 33, 34, 35, 37, 44, 45, 49, 54, 55, 62, 63, 64, 66, 67, 68, 71, 73, 84, 85, 96, 98, 110, 111, 125, 133, 135, 153, 155, 160], "metric": [91, 104, 106, 108, 112, 120, 131, 155, 160], "mha": [84, 110], "might": [154, 155, 160], "mileston": [131, 155, 160], "million": [64, 66], "min": [81, 85, 106, 108, 112, 135, 155, 160], "min_charg": 36, "min_pool": [81, 82, 85], "min_pool_x": [81, 82, 85], "mind": 155, "minh": 105, "mini": 134, "minim": [102, 118, 154, 155, 158, 160], "minimum": [36, 95, 126], "minkowski": [88, 89, 113, 114], "minkowskiknnedg": [89, 91], "minu": 133, "mise": 133, "miss": 79, "mit": [14, 133], "mix": 18, "ml": [0, 1, 156, 159], "mlp": [82, 83, 84, 106, 111, 112, 128, 160], "mlp_dim": [83, 128], "mlp_ratio": [84, 111], "mode": [102, 126], "model": [0, 1, 5, 69, 71, 72, 75, 77, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 137, 139, 141, 142, 144, 151, 153, 154, 156, 157, 158, 159], "model_config": [71, 75, 77, 136, 138, 139, 141, 144, 155, 160], "model_config_path": [155, 160], "model_nam": [75, 77], "modelconfig": [71, 75, 77, 117, 138, 141, 142], "modelconfigsav": 142, "modelconfigsaverabc": [138, 142], "modelconfigsavermeta": [138, 142], "modif": [155, 160], "modifi": [14, 133, 155, 160], "modul": [0, 3, 6, 7, 11, 17, 18, 37, 38, 40, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 61, 62, 64, 67, 69, 70, 72, 73, 74, 75, 76, 79, 80, 83, 84, 86, 88, 89, 91, 92, 93, 94, 97, 103, 110, 117, 119, 123, 127, 130, 136, 138, 141, 142, 143, 144, 148, 153, 155, 156, 159, 160], "modular": [0, 80, 153, 155, 156, 159, 160], "moduletyp": 143, "momentum": 84, "mont": 35, "more": [1, 11, 13, 14, 58, 59, 67, 104, 117, 141, 142, 149, 154, 155, 160], "most": [0, 1, 60, 91, 126, 153, 156, 158, 159, 160], "move": [113, 114, 115, 116], "mryab": 133, "mseloss": [130, 133], "msg": 149, "mulitpli": 133, "multi": [84, 106, 112, 122], "multiclassclassificationtask": [123, 124, 155], "multiheadattent": [14, 84], "multiindex": 158, "multipl": [11, 13, 16, 18, 83, 96, 131, 133, 141, 149, 160], "multipli": [84, 131], "multiprocess": [7, 14, 45, 47, 55, 153], "multiprocessing_context": [13, 14], "muon": [25, 154, 160], "muonfilter_13": 4, "must": [13, 18, 49, 50, 59, 62, 81, 84, 131, 133, 135, 152, 153, 154, 155, 158], "my": [154, 155, 158], "my_custom_label": [154, 155], "my_databas": 64, "my_fil": [153, 158], "my_geometry_t": 158, "my_outdir": [153, 158], "my_tabl": 158, "mycustomlabel": [154, 155], "mydetector": 158, "myexperi": 158, "myextractor": 158, "mygraphnetmodel": 160, "mymodel": 160, "mypi": 152, "mypicklewrit": 153, "myread": 158, "n": [14, 19, 81, 85, 91, 129, 133, 154, 155, 158], "n_1": 85, "n_b": 85, "n_cluster": 96, "n_event": [153, 158], "n_featur": [83, 111, 128], "n_freq": 83, "n_head": [84, 104, 108, 110], "n_layer": 110, "n_pmt": 96, "n_puls": [95, 158], "n_rel": 111, "n_worker": [70, 73, 76], "name": [4, 5, 7, 8, 11, 13, 16, 18, 19, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 41, 43, 45, 47, 49, 51, 52, 53, 55, 59, 62, 63, 64, 71, 75, 77, 83, 87, 92, 93, 95, 96, 98, 99, 100, 101, 118, 120, 126, 129, 132, 135, 137, 139, 141, 142, 143, 144, 149, 152, 153, 154, 155, 158, 160], "namespac": [4, 117, 141, 142], "nan": 96, "narg": 137, "nb_dom": 129, "nb_file": 7, "nb_input": [104, 105, 106, 107, 108, 109, 110, 112, 120, 124, 125, 126, 155, 160], "nb_intermedi": 105, "nb_nearest_neighbour": [90, 91, 93, 154, 155, 160], "nb_neighbor": 84, "nb_neighbour": [104, 106, 108, 112, 120, 155, 160], "nb_output": [87, 95, 105, 107, 109, 110, 124, 125, 126, 155, 160], "nb_repeats_allow": 149, "ndarrai": [11, 13, 31, 87, 92, 93, 96, 135, 153], "nearest": [90, 91, 93, 104, 106, 108, 112, 120, 129, 155, 160], "nearli": 160, "necessari": [0, 9, 34, 152, 156, 159], "need": [0, 5, 9, 34, 64, 80, 83, 117, 120, 133, 146, 153, 154, 155, 156, 157, 158, 159, 160], "negat": 85, "neighbour": [84, 90, 91, 93, 104, 106, 108, 112, 120, 129, 155, 160], "nest": 34, "nester": 34, "network": [1, 84, 105, 110, 119, 160], "neural": [1, 119, 160], "neutrino": [0, 1, 21, 43, 50, 84, 96, 108, 111, 128, 154, 155, 156, 158, 159, 160], "new": [0, 1, 18, 84, 139, 144, 152, 153, 155, 156, 159, 160], "new_phras": 146, "nfdi": [0, 156, 159], "nn": [0, 80, 83, 84, 90, 93, 110, 156, 159, 160], "no_weight_decai": 111, "node": [11, 13, 16, 80, 81, 83, 84, 85, 86, 88, 89, 90, 92, 93, 104, 105, 106, 108, 110, 112, 113, 120, 129, 154, 155, 160], "node_definit": [92, 93, 154, 155, 160], "node_feature_nam": [95, 154, 155, 160], "node_level": 134, "node_rnn": [80, 104, 119], "node_truth": [11, 13, 16, 134, 141], "node_truth_t": [11, 13, 16, 134, 141, 155], "nodeasdomtimeseri": [94, 95], "nodedefinit": [92, 93, 94, 95, 155, 160], "nodesaspuls": [92, 94, 95, 154, 155, 160], "nodetimernn": 120, "nois": [22, 35, 75, 155], "non": [9, 34, 37, 59, 93, 104, 126, 133, 155], "none": [5, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 45, 47, 49, 50, 51, 52, 53, 55, 59, 60, 62, 63, 64, 66, 67, 68, 70, 71, 77, 84, 85, 87, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 106, 108, 111, 112, 117, 118, 120, 121, 122, 126, 129, 131, 133, 134, 135, 137, 139, 140, 141, 143, 147, 149, 153, 154, 155, 158, 160], "noninfring": [14, 133], "nope": 110, "norm": [84, 110], "norm_edg": [84, 110], "norm_lay": [83, 84], "normal": [83, 84, 96, 106, 110, 112, 118, 126, 158], "normalizing_flow": [1, 80], "normalizingflow": [80, 118, 126], "northeren": 25, "note": [5, 11, 13, 16, 50, 63, 64, 66, 68, 96, 142, 155], "notebook": 152, "notic": [14, 64, 129, 133], "notimplementederror": 153, "now": [155, 158, 160], "np": [135, 153], "null": [36, 59, 154, 155, 160], "nullspliti3filt": [33, 36, 45, 47, 50, 55], "num": [93, 137], "num_class": 133, "num_edg": 154, "num_edge_featur": 154, "num_featur": 154, "num_head": [84, 128], "num_lay": [120, 128], "num_nod": [129, 154], "num_puls": 95, "num_register_token": 128, "num_row": [87, 92, 154], "num_sampl": 14, "num_work": [7, 8, 9, 14, 47, 63, 134, 153, 154, 155, 158, 160], "number": [0, 5, 7, 11, 13, 14, 16, 19, 45, 47, 55, 60, 63, 64, 70, 73, 76, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 124, 125, 126, 128, 129, 131, 134, 135, 137, 153, 154, 155, 156, 158, 159], "numer": [126, 158], "numpi": 96, "numu": 132, "numucc": 132, "o": [0, 100, 126, 153, 155, 156, 157, 159, 160], "obj": [34, 37, 143], "object": [4, 6, 11, 13, 14, 16, 23, 34, 37, 81, 85, 87, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 133, 134, 137, 149, 154, 155, 160], "observ": 158, "observatori": [21, 50], "obtain": [14, 85, 93, 133], "occur": [8, 134], "oerso": 107, "offer": 154, "offset": [95, 96], "ofintern": 38, "often": 154, "old": 83, "old_phras": 146, "om": [35, 37], "omit": 160, "on_fit_end": 131, "on_train_end": 121, "on_train_epoch_end": 131, "on_train_epoch_start": 131, "on_validation_end": 131, "onc": [149, 155, 157], "one": [11, 13, 21, 31, 59, 75, 85, 141, 142, 147, 152, 153, 154, 155, 158, 160], "ones": [96, 121], "onli": [0, 1, 11, 13, 16, 36, 64, 80, 85, 95, 96, 104, 126, 135, 139, 142, 144, 148, 153, 154, 155, 156, 158, 159, 160], "onlinel2filter_17": 4, "open": [0, 49, 152, 153, 154, 155, 156, 157, 158, 159], "opensciencegrid": 157, "oper": [14, 81, 84, 103, 106], "oppos": 154, "optic": [37, 96], "optim": [102, 118, 121, 131, 155, 160], "optimis": [0, 1, 155, 156, 159, 160], "optimizer_class": [118, 155, 160], "optimizer_closur": 121, "optimizer_kwarg": [118, 155, 160], "optimizer_step": 121, "optimzi": 118, "option": [5, 7, 9, 11, 13, 14, 16, 21, 31, 47, 59, 64, 66, 67, 68, 71, 77, 83, 84, 85, 87, 91, 92, 93, 95, 96, 98, 99, 100, 101, 104, 106, 108, 111, 112, 117, 118, 120, 126, 129, 131, 133, 135, 136, 137, 139, 141, 147, 153, 154, 155, 158, 160], "orca": 101, "orca150": [97, 101, 160], "orca150superdens": [97, 101], "orca_150": 101, "order": [0, 34, 49, 70, 73, 76, 81, 95, 129, 133, 155, 156, 159], "ordinari": 160, "ordinarili": 158, "org": [90, 110, 112, 133, 155, 157], "orient": [0, 80, 156, 159], "origin": [14, 64, 83, 84, 92, 110, 111, 129, 154, 160], "ot": 133, "other": [14, 26, 59, 90, 133, 152, 154, 155, 160], "otherwis": [14, 37, 133], "our": [155, 158], "out": [5, 11, 13, 14, 106, 123, 133, 149, 152, 153, 154, 155, 158, 160], "out_dim": [83, 84], "out_featur": 84, "outdir": [7, 45, 47, 55, 153, 155, 158, 160], "outer": 34, "outlin": [158, 160], "output": [19, 64, 70, 71, 83, 84, 87, 92, 95, 96, 102, 104, 105, 106, 107, 109, 110, 112, 120, 124, 125, 126, 135, 141, 142, 153, 158, 160], "output_dim": [83, 160], "output_dir": [7, 62, 63, 64, 153], "output_feature_nam": 87, "output_fil": 7, "output_file_path": 153, "output_fold": [6, 70], "outsid": [68, 152], "over": [91, 95, 153, 154], "overal": 133, "overhead": 158, "overlap": 64, "overrid": [9, 131], "overridden": 95, "overview": [0, 156, 159], "overwrit": [71, 83, 131], "overwrite_old_attr": 83, "overwritten": [49, 137, 139], "own": [152, 155], "ownership": 152, "p": [35, 66, 133, 153], "p11003": 155, "packag": [0, 1, 58, 126, 143, 147, 148, 152, 155, 156, 159, 160], "pad": [83, 87, 92, 96, 110, 129], "pad_to_full_graph": [83, 110], "padding_valu": [25, 28, 129], "pair": [21, 31, 45, 47, 50, 55, 83, 84, 110], "pairwis": [91, 129], "pairwise_shuffl": [56, 58], "panda": [60, 135, 153, 155, 158, 160], "paper": [110, 133], "paradigm": [155, 160], "parallel": [7, 45, 47, 55, 153, 158], "param": [14, 39, 41, 43, 129], "paramet": [5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 58, 59, 60, 62, 63, 64, 66, 67, 68, 70, 71, 73, 75, 76, 77, 81, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150], "parent": [34, 155], "parent_kei": 34, "parquet": [1, 3, 5, 10, 13, 39, 42, 43, 45, 47, 51, 53, 55, 57, 63, 66, 68, 99, 100, 101, 153, 154, 155, 158], "parquet_dataset": [10, 12, 154], "parquet_extractor": [17, 38], "parquet_to_sqlit": [3, 56], "parquet_writ": [3, 61], "parquetdataconvert": [44, 45], "parquetdataset": [9, 12, 13, 153, 155], "parquetextractor": [7, 38, 39, 41, 47, 49], "parquetread": [48, 51], "parquettosqliteconvert": [46, 47], "parquetwrit": [13, 39, 47, 61, 63, 153, 154, 158], "pars": [23, 136, 137, 138, 139, 144, 153], "parse_data_represent": [10, 11], "parse_label": [10, 11], "part": [72, 153, 155, 157, 158], "particl": [31, 59, 132, 154, 155, 158], "particlenet": [80, 103], "particular": [14, 133, 152], "particularli": [154, 155, 160], "partit": 64, "partli": [0, 156, 159], "pass": [7, 11, 16, 83, 84, 92, 93, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 120, 122, 126, 128, 131, 133, 135, 152, 153, 154, 155, 158, 160], "password": 67, "path": [5, 11, 13, 16, 21, 31, 45, 47, 49, 50, 51, 52, 53, 55, 58, 59, 64, 70, 73, 75, 76, 77, 84, 87, 92, 117, 121, 129, 131, 134, 137, 139, 140, 141, 147, 153, 154, 155, 158, 160], "path_to_arrai": 158, "path_to_geometry_t": 158, "patienc": 137, "pd": [153, 155, 158], "pdf": [90, 118], "pdg": 132, "pe": 129, "pe_nam": 83, "penal": 133, "peopl": [155, 160], "pep257": 152, "pep8": 152, "per": [11, 13, 16, 23, 59, 84, 85, 104, 120, 126, 133, 135, 154, 155], "percentil": [95, 96], "percentileclust": [94, 95], "perceptron": [84, 106, 112], "perform": [0, 9, 81, 83, 84, 85, 95, 102, 103, 104, 106, 108, 112, 118, 120, 121, 122, 124, 126, 134, 155, 156, 159, 160], "permiss": [14, 133], "permit": [14, 133], "persistent_work": [8, 134], "person": [5, 14, 133], "perturb": [87, 92, 93], "perturbation_dict": [87, 92, 93], "pframe": [45, 47, 50, 55], "philip": 110, "philosophi": [155, 160], "photon": [43, 154, 155], "php": 67, "phrase": 146, "phyic": 1, "physic": [0, 1, 21, 35, 37, 69, 75, 77, 80, 123, 126, 154, 155, 156, 159, 160], "physicist": [0, 1, 155, 156, 159], "physicst": 1, "pick": 154, "pickl": [153, 155, 158, 160], "pid": [4, 60, 132, 141, 154], "pid_kei": 132, "piecewiselinearlr": [130, 131, 155, 160], "pip": [152, 157], "pisa": 27, "place": [14, 83, 111, 146, 152], "plai": 1, "plane": [24, 133], "pleas": [73, 153, 154, 155, 158], "plot": 154, "plug": 1, "pmt": [85, 96, 154, 155], "pmt_area": 4, "pmt_dir_i": 4, "pmt_dir_x": 4, "pmt_dir_z": 4, "pmt_number": 4, "point": [5, 30, 118, 132, 133, 134, 155, 158, 160], "pole": 108, "pone": 101, "pone_triangl": 101, "ponesmal": [65, 66], "ponetriangl": [97, 101], "pool": [7, 80, 81, 82, 84, 104, 106, 108, 110, 112], "pop_default": 137, "popular": 160, "port": 155, "portabl": [0, 155, 156, 159, 160], "portion": [14, 133], "pos_x": 155, "posit": [75, 83, 84, 85, 93, 96, 110, 111, 125, 128, 129, 139, 144, 154, 158], "position_encod": 110, "position_i": 4, "position_x": 4, "position_x_pr": 125, "position_y_pr": 125, "position_z": 4, "position_z_pr": 125, "positionreconstruct": [123, 125], "possibl": [0, 34, 64, 152, 156, 158, 159], "post": [104, 106, 108, 112], "post_processing_layer_s": [104, 106, 108, 155, 160], "posterior": 118, "pow": [155, 160], "power": [153, 155, 160], "pr": 120, "practic": [0, 152, 156, 159], "pre": [0, 5, 46, 47, 65, 87, 92, 98, 132, 152, 154, 155, 156, 159, 160], "pre_configur": [1, 3, 47], "precis": 133, "precommit": 152, "preconfigur": 47, "pred": [102, 122, 126], "pred_head_activ": 110, "pred_head_lay": 110, "pred_head_pool": 110, "predict": [0, 9, 26, 30, 32, 75, 77, 84, 102, 105, 110, 111, 118, 122, 124, 126, 133, 134, 155, 156, 159, 160], "predict_as_datafram": [102, 155, 160], "prediction_column": [71, 77, 102, 134], "prediction_kei": 133, "prediction_label": [102, 126, 155, 160], "prefer": 91, "prefetch_factor": 8, "prepar": [0, 5, 9, 133, 154, 156, 159], "prepare_data": [5, 9], "preprocess": 155, "present": [11, 13, 21, 31, 36, 129, 137, 147, 148, 154, 160], "previou": [131, 155, 160], "primari": [59, 64, 154, 155], "primary_hadron_1_direction_phi": [4, 154, 155], "primary_hadron_1_direction_theta": [4, 154, 155], "primary_hadron_1_energi": [4, 154, 155], "primary_hadron_1_position_i": [4, 154, 155], "primary_hadron_1_position_x": [4, 154, 155], "primary_hadron_1_position_z": [4, 154, 155], "primary_hadron_1_typ": [4, 154, 155], "primary_key_rescu": 64, "primary_lepton_1_direction_phi": [4, 154, 155], "primary_lepton_1_direction_theta": [4, 154, 155], "primary_lepton_1_energi": [4, 154, 155], "primary_lepton_1_position_i": [4, 154, 155], "primary_lepton_1_position_x": [4, 154, 155], "primary_lepton_1_position_z": [4, 154, 155], "primary_lepton_1_typ": [4, 154, 155], "principl": [1, 155], "print": [5, 117, 131, 149], "prior": 154, "prioriti": 152, "privat": 135, "pro": [155, 160], "prob": 129, "probabl": [83, 84, 93, 110, 129, 133, 160], "problem": [0, 90, 152, 154, 155, 156, 159, 160], "procedur": 9, "proceedur": 64, "process": [1, 7, 14, 45, 47, 55, 64, 75, 83, 98, 104, 106, 108, 112, 152, 153, 155, 160], "process_posit": 131, "produc": [5, 49, 83, 118, 122, 132, 135, 154, 155], "product": [8, 84, 134], "programm": [0, 156, 159], "progress": 131, "progressbar": [130, 131, 155, 160], "proj_drop": 84, "project": [0, 53, 84, 152, 155, 156, 159, 160], "prometheu": [3, 4, 17, 43, 53, 66, 80, 97, 154, 155, 160], "prometheus_dataset": [1, 65], "prometheus_extractor": [17, 42], "prometheus_read": [3, 48], "prometheusextractor": [7, 42, 43, 49], "prometheusfeatureextractor": [42, 43], "prometheusread": [48, 53], "prometheustruthextractor": [42, 43], "prompt": 155, "prone": 155, "proof": [155, 160], "properti": [5, 9, 11, 13, 14, 19, 26, 37, 49, 62, 85, 87, 95, 96, 98, 102, 109, 126, 132, 140, 149, 153], "propos": 84, "protocol": 153, "prototyp": 100, "proven": [19, 21, 39, 41, 43, 153], "provid": [0, 1, 7, 11, 13, 14, 16, 75, 80, 87, 92, 111, 117, 118, 133, 152, 153, 154, 155, 156, 159, 160], "pth": [155, 160], "public": [66, 98, 135], "publicprometheusdataset": [65, 66], "publish": [14, 133, 155, 160], "puls": [5, 11, 13, 16, 18, 22, 23, 35, 37, 43, 59, 75, 81, 85, 87, 92, 95, 96, 111, 122, 128, 129, 154, 155, 158, 160], "pulse_truth": 5, "pulsemap": [5, 11, 13, 16, 22, 66, 67, 68, 75, 77, 134, 141, 154, 155], "pulsemap_extractor": [75, 77], "pulseseri": 35, "pulsmap": [75, 77], "punch4nfdi": [0, 156, 159], "pure": [7, 19, 20, 23, 37], "purpos": [0, 14, 80, 133, 156, 158, 159], "put": [64, 155, 160], "py": [14, 83, 84, 110, 129, 133, 155], "py3": 157, "pydant": [139, 141, 142, 144], "pydantic_cor": [139, 144], "pydocstyl": 152, "pyg": [129, 154, 155, 160], "pylint": 152, "python": [0, 1, 7, 19, 20, 23, 34, 37, 152, 155, 156, 157, 159, 160], "python3": [99, 100, 101, 137], "pytorch": [16, 131, 155, 157, 160], "pytorch_lightn": [102, 131, 149, 155, 160], "pytorchlightn": 155, "q": 84, "qk_scale": 84, "qkv_bia": 84, "qualiti": [0, 155, 156, 159], "quantiti": [27, 126, 129, 155], "queri": [11, 13, 16, 59, 60, 64, 84, 154, 155], "query_databas": [56, 59], "query_t": [11, 13, 16, 154], "queso": 28, "question": 155, "quick": [96, 155], "r": [85, 90, 153, 155, 157, 158], "radial": 90, "radialedg": [89, 90], "radiat": [95, 96, 155, 160], "radiu": [90, 155], "rais": [11, 13, 21, 23, 31, 117, 118, 139, 144, 153], "random": [3, 11, 13, 16, 56, 60, 63, 83, 93, 95, 110, 129, 141, 154, 155], "randomchunksampl": [10, 14], "randomli": [14, 60, 87, 92, 93, 142, 155, 160], "rang": [14, 126, 156, 158, 159, 160], "rare": 153, "rasmu": [0, 107, 156, 159], "rate": [118, 131], "rather": [126, 149, 155, 160], "ratio": [9, 84, 111], "raw": [0, 95, 96, 154, 155, 156, 158, 159, 160], "rde": 4, "re": [140, 154, 155, 158, 160], "reach": [154, 158], "read": [0, 3, 7, 11, 13, 16, 34, 48, 50, 51, 52, 53, 98, 106, 123, 153, 154, 155, 156, 158, 159], "read_csv": 158, "read_sql": 155, "readabl": 155, "reader": [1, 3, 47, 49, 50, 51, 52, 53, 158], "readi": [65, 158, 160], "readm": 155, "readout": [104, 106, 108, 112], "readout_layer_s": [104, 106, 108, 112, 155, 160], "readthedoc": 155, "receiv": [0, 156, 159, 160], "reciev": [62, 153, 158, 160], "recommend": [155, 157, 158, 160], "reconstruct": [0, 1, 22, 24, 25, 29, 30, 32, 69, 72, 80, 108, 120, 123, 126, 154, 155, 156, 159], "record": [36, 149], "recov": 126, "recreat": [154, 155, 160], "recurr": 119, "recurs": [23, 37, 45, 47, 49, 50, 55, 117, 143, 147], "reduc": [155, 160], "reduce_opt": 81, "refer": [9, 101, 118, 141, 154, 155, 158, 160], "refresh_r": 131, "regardless": [154, 155, 160], "regist": 128, "regress": 122, "regular": [37, 84, 155, 160], "rel": [83, 84, 93, 111, 128, 129], "rel_pos_bia": 84, "rel_pos_bucket": 128, "relat": [58, 147, 158], "relev": [1, 37, 58, 147, 152], "reli": [50, 118], "reload": 160, "relu": [84, 110, 112], "remain": 154, "remaining_batch": 14, "remov": [8, 11, 16, 45, 55, 64, 87, 92, 134, 137, 158], "remove_origin": 64, "renam": [73, 146], "rename_state_dict_entri": [136, 146], "repeat": [87, 92, 149], "repeat_label": [87, 92], "repeatfilt": [136, 149], "replac": [98, 99, 100, 101, 146], "replace_with_ident": [98, 99, 100, 101], "repo": 152, "repositori": 152, "repres": [85, 86, 87, 92, 93, 95, 96, 104, 129, 139, 141, 142, 153, 154, 155, 158, 160], "represent": [5, 11, 13, 16, 37, 66, 67, 68, 83, 84, 85, 87, 93, 117, 118, 120, 129, 154, 155, 158, 160], "reproduc": [141, 142, 160], "repurpos": 160, "requir": [0, 21, 27, 36, 39, 43, 59, 67, 95, 124, 126, 133, 152, 153, 154, 155, 156, 157, 158, 159, 160], "requires_icecub": [136, 148], "research": [0, 155, 156, 159], "reset": [64, 84], "reset_integer_primary_kei": 64, "reset_paramet": 84, "residu": 84, "resolv": [11, 13, 16, 60], "respect": [134, 155, 158], "respons": [154, 155], "restrict": [14, 126, 133, 160], "result": [5, 14, 59, 63, 85, 93, 96, 131, 133, 134, 143, 155, 158, 160], "retriev": [98, 153, 154], "retro": 29, "return": [5, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 31, 34, 35, 37, 49, 50, 51, 52, 53, 58, 59, 60, 62, 63, 64, 70, 81, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 153, 154, 155, 158, 160], "return_discard": 37, "return_el": 133, "reusabl": [0, 156, 159], "reuseabl": [155, 160], "review": 152, "rezero": 84, "rhel_7_x86_64": 157, "right": [14, 133, 155], "rmse": 133, "rmseloss": [130, 133], "rmsevonmisesfisher3dloss": [130, 133], "rng": 58, "rnn": [1, 80, 104, 120], "rnn_dropout": 104, "rnn_dynedg": 104, "rnn_hidden_s": 104, "rnn_layer": 104, "rnn_tito": [80, 103], "role": 160, "root": 133, "roughli": 154, "row": [59, 64, 87, 92, 93, 96, 129, 154, 155, 158, 160], "rrwp": [83, 93, 129], "rrwp_encod": [83, 129], "rrwp_index": 93, "rrwp_val": 93, "rrwplinearedgeencod": [82, 83], "rrwplinearnodeencod": [82, 83], "run": [1, 14, 50, 70, 72, 73, 76, 84, 153, 155, 157, 158, 160], "run_id": 67, "run_sql_cod": [56, 59], "runid": [4, 67], "runner": [99, 100, 101, 137], "runtim": [132, 157], "runtimeerror": [21, 31], "rw": 129, "rwse": 93, "rwselinearedgeencod": 83, "rwselinearnodeencod": [82, 83], "ryabinin": 133, "sai": [155, 160], "same": [18, 37, 59, 64, 81, 85, 96, 124, 129, 131, 143, 149, 154, 155, 160], "sampl": [14, 60, 84, 87, 92, 93, 95, 155, 160], "sample_puls": 95, "sampler": [3, 10], "san": 84, "san_graph": 84, "sangraphhead": [82, 84], "satisfi": [0, 153, 156, 159], "save": [7, 19, 21, 34, 39, 41, 43, 45, 47, 55, 59, 61, 62, 64, 117, 131, 133, 134, 135, 139, 140, 141, 142, 153, 155, 158], "save_config": [140, 155, 160], "save_dataset_config": [138, 141], "save_dir": [131, 155, 160], "save_fil": [62, 153], "save_method": [7, 153, 158], "save_model_config": [138, 142], "save_result": [130, 134], "save_select": [130, 134], "save_state_dict": [117, 155, 160], "save_to_sql": [56, 59], "scalabl": 154, "scalar": [11, 13, 19, 129, 133], "scale": [83, 84, 87, 91, 92, 95, 96, 107, 111, 126, 128, 133, 154, 160], "scaled_emb": [111, 128], "scatter": [95, 96], "schedul": 118, "scheduler_class": [118, 155, 160], "scheduler_config": [118, 155, 160], "scheduler_kwarg": [118, 155, 160], "schema": 155, "scheme": [104, 106, 108, 112, 153], "scientif": [0, 1, 156, 159], "scope": 152, "score": [84, 110], "script": [155, 160], "search": [45, 47, 49, 50, 51, 52, 53, 55, 147, 153], "sec": 133, "second": 91, "section": 155, "see": [11, 16, 83, 90, 92, 104, 118, 126, 131, 152, 154, 155, 157], "seed": [9, 11, 13, 16, 60, 87, 92, 93, 134, 141, 154, 155], "seen": 83, "select": [5, 8, 9, 11, 13, 14, 16, 28, 36, 60, 95, 134, 135, 141, 152, 155, 158], "selection_nam": 8, "self": [11, 13, 83, 92, 102, 110, 118, 122, 129, 139, 144, 153, 154, 155, 158, 160], "sell": [14, 133], "send": 126, "sensor": [87, 92, 96, 98, 154, 155, 158, 160], "sensor_i": 158, "sensor_id": [99, 101, 158], "sensor_id_column": [99, 100, 101, 158], "sensor_index_nam": 98, "sensor_mask": [87, 92], "sensor_pos_i": [4, 101, 154, 155, 160], "sensor_pos_x": [4, 101, 154, 155, 160], "sensor_pos_z": [4, 101, 154, 155, 160], "sensor_position_nam": 98, "sensor_string_id": 101, "sensor_tim": 158, "sensor_x": [154, 158], "sensor_z": 158, "separ": [34, 91, 131, 155, 157], "seper": [120, 154], "seq_length": [83, 111, 128, 129], "sequenc": [14, 70, 73, 76, 83, 84, 96, 129, 134, 155, 160], "sequenti": [11, 13], "sequential_index": [11, 13, 16], "seri": [11, 13, 16, 22, 23, 35, 37, 59, 75, 95, 104, 120, 154, 155, 160], "serial": [153, 154], "serialis": [33, 34, 155, 160], "serv": 154, "server": 67, "session": [141, 142, 154, 155, 160], "set": [3, 6, 9, 13, 18, 21, 23, 31, 45, 47, 49, 50, 55, 62, 83, 84, 95, 96, 111, 117, 126, 132, 134, 152, 153, 155, 158, 160], "set_extractor": 49, "set_gcd": [18, 21, 31], "set_index": 158, "set_number_of_input": 95, "set_output_feature_nam": 95, "set_verbose_print_recurs": 117, "setlevel": 149, "setup": [9, 131, 157], "setuptool": 157, "sever": [155, 160], "sh": 157, "shall": [14, 133], "shape": [19, 87, 91, 92, 95, 129, 133, 153, 154], "share": [102, 118, 122, 155, 160], "share_redirect": 5, "shared_step": [102, 118, 122], "sharelink": 5, "shell": 157, "shortest": 129, "should": [5, 8, 11, 13, 16, 19, 21, 34, 60, 68, 71, 84, 85, 87, 92, 93, 98, 99, 100, 101, 104, 111, 120, 129, 133, 134, 139, 141, 142, 144, 152, 153, 154, 155, 157, 158, 160], "show": [60, 131, 155], "shown": 155, "shuffl": [8, 9, 58, 63, 134, 154], "shutdown": 9, "sid": 5, "sigmoid": 160, "sign": 133, "signal": [75, 160], "signatur": [23, 37], "signific": 154, "significantli": 154, "signup": 155, "similar": [14, 23, 37, 95, 155, 160], "similarli": [37, 153, 154, 155, 160], "simpl": [0, 80, 102, 155, 156, 159, 160], "simplecoarsen": 81, "simplest": [155, 160], "simpli": [155, 160], "simul": [35, 43, 53, 66, 67, 75, 155, 158], "sinc": [14, 75, 133, 155], "singl": [5, 11, 18, 62, 64, 85, 96, 106, 112, 132, 135, 141, 142, 153, 154, 155, 158, 160], "single_event_as_arrai": 96, "sinusoid": [83, 111, 128], "sinusoidalposemb": [82, 83], "sipm_i": [4, 100], "sipm_id": 100, "sipm_x": [4, 100], "sipm_z": [4, 100], "situat": 152, "size": [13, 14, 47, 64, 83, 84, 85, 104, 106, 107, 108, 110, 111, 112, 129, 137, 154], "skip": [36, 106, 112, 155], "skip_readout": [106, 112], "sklearn": [155, 160], "sk\u0142odowska": [0, 156, 159], "slack": 155, "slice": [84, 106, 112], "slower": 64, "small": [133, 154, 155, 160], "smaller": [62, 153], "smooth": 152, "snippet": [155, 160], "snowstorm": [4, 67], "snowstorm_dataset": [1, 65], "snowstorm_mc": 67, "snowstormdataset": [65, 67], "so": [14, 133, 154, 155, 157, 158, 160], "soft": 83, "softmax": 133, "softwar": [0, 14, 50, 133, 156, 159], "solut": [83, 84, 108, 111, 152], "solv": [1, 152, 160], "some": [11, 13, 14, 16, 45, 47, 50, 55, 87, 92, 96, 154, 155], "someth": [155, 160], "somewhat": 155, "sort": [92, 96], "sort_bi": 92, "sota": 5, "sourc": [0, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 58, 59, 60, 62, 63, 64, 66, 67, 68, 70, 71, 73, 75, 76, 77, 79, 81, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 154, 155, 156, 159], "south": 108, "space": [83, 90, 91, 126, 129, 135], "space_coord": 91, "space_dim": 129, "spacetim": 83, "spacetimeencod": [82, 83], "spars": 129, "sparsetensor": 84, "spatial": 96, "spawn": [13, 14], "spd": 129, "special": [23, 75, 120, 129], "specialis": [155, 160], "specif": [0, 1, 3, 5, 6, 7, 11, 13, 16, 17, 19, 22, 37, 48, 49, 50, 59, 64, 69, 71, 74, 76, 79, 81, 85, 87, 90, 92, 95, 97, 98, 99, 100, 101, 103, 104, 109, 119, 123, 124, 125, 126, 127, 129, 133, 152, 153, 154, 155, 156, 158, 159, 160], "specifi": [11, 13, 14, 16, 19, 60, 81, 96, 118, 126, 131, 154, 155, 158, 160], "speed": [75, 91, 154], "sphere": 90, "spite": 133, "splinemp": 30, "split": [0, 9, 36, 64, 81, 156, 159], "split_se": 9, "splitinicepuls": 59, "sql": 135, "sqlite": [1, 3, 5, 9, 10, 16, 47, 55, 57, 59, 64, 66, 68, 154, 155], "sqlite3": 155, "sqlite_dataset": [10, 15, 154], "sqlite_util": [3, 56], "sqlite_writ": [3, 61], "sqlitedataconvert": [54, 55], "sqlitedatas": 154, "sqlitedataset": [9, 15, 16, 153], "sqlitewrit": [61, 64, 153, 154], "squar": 133, "src": [14, 155], "stabl": [125, 126], "stage": [9, 131], "stai": 129, "standalon": 120, "standard": [0, 3, 4, 36, 60, 71, 87, 92, 93, 95, 96, 99, 100, 101, 104, 118, 121, 122, 126, 137, 152, 155, 156, 158, 159, 160], "standard_argu": 137, "standard_averaged_model": [1, 80], "standard_model": [1, 80, 155], "standardaveragedmodel": [80, 121], "standardaveragemodel": 121, "standardflowtask": [123, 126], "standardis": 97, "standardlearnedtask": [123, 124, 125, 126, 160], "standardmodel": [80, 102, 121, 122], "start": [14, 31, 84, 152, 155, 158, 160], "stat": 84, "state": [0, 71, 104, 120, 146, 156, 159], "state_dict": [71, 75, 77, 117, 121, 146, 155], "static": [92, 133, 152], "statist": 96, "std": 85, "std_pool": [82, 85], "std_pool_x": [82, 85], "stdout": 131, "step": [93, 102, 110, 118, 121, 122, 129, 131, 155, 158, 160], "still": 141, "stochast": 84, "stop": [31, 131, 137], "stopped_muon": 4, "store": [5, 11, 13, 16, 59, 62, 63, 64, 132, 153, 154, 155, 158, 160], "str": [5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 58, 59, 60, 62, 63, 64, 66, 67, 68, 70, 71, 73, 75, 76, 77, 83, 84, 85, 87, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 106, 108, 110, 111, 112, 117, 118, 121, 126, 129, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 144, 146, 147, 149, 153, 158], "straightforward": 154, "strategi": [155, 160], "stream": 36, "stream_handl": 149, "streamhandl": 149, "streamlin": 1, "string": [4, 5, 11, 13, 16, 34, 60, 85, 87, 92, 98, 99, 117, 118, 126, 139, 155, 158, 160], "string_id": 158, "string_id_column": [99, 100, 101, 158], "string_index_nam": 98, "string_mask": [87, 92], "string_select": [11, 13, 16, 134, 141], "string_selection_resolv": [3, 56], "stringselectionresolv": [56, 60], "strongli": [155, 160], "structur": [83, 86, 93, 102, 143, 153, 154, 155, 160], "style": 152, "sub": 155, "subclass": [0, 5, 80, 102, 153, 154, 155, 156, 159, 160], "subev": 36, "subeventid": 4, "subeventstreami3filt": [33, 36], "subfold": [45, 47, 50, 55], "subject": [14, 111, 133], "sublicens": [14, 133], "submit": 111, "submodul": [1, 3, 10, 12, 15, 17, 20, 33, 38, 40, 42, 44, 46, 48, 54, 56, 61, 65, 69, 72, 74, 78, 80, 82, 86, 88, 89, 94, 97, 103, 119, 123, 127, 130, 136, 138, 143], "subpackag": [1, 3, 10, 17, 20, 69, 80, 86, 88, 113, 114, 136], "subrunid": 4, "subsampl": [63, 154], "subsequ": 155, "subset": [11, 13, 16, 84, 104, 106, 108, 112, 120, 155], "substanti": [14, 133], "suggest": [102, 133, 155], "suit": [0, 118, 126, 155, 156, 159], "suitabl": [1, 158], "sum": [81, 85, 96, 102, 106, 108, 112, 122, 135, 155, 160], "sum_pool": [81, 82, 85], "sum_pool_and_distribut": [82, 85], "sum_pool_x": [81, 82, 85], "summar": [75, 77, 95, 96], "summari": [95, 96], "summaris": [155, 160], "summariz": 160, "summarization_indic": 96, "super": [153, 154, 155, 160], "supervis": [122, 126, 160], "support": [0, 7, 37, 126, 152, 153, 154, 155, 156, 159], "suppos": [5, 96, 154, 158], "sure": [152, 153], "swa": 121, "swapabl": 155, "switch": [133, 155, 160], "synchron": 7, "syntax": [60, 102, 133, 154, 155], "system": [147, 155, 160], "t": [4, 37, 59, 131, 133, 153, 154, 155, 158, 160], "t_co": 8, "tabl": [5, 11, 13, 16, 18, 19, 21, 36, 39, 41, 43, 47, 49, 59, 63, 64, 87, 92, 98, 135, 153, 154, 155], "table_nam": [36, 43, 59], "table_without_index": 158, "tablefilt": [33, 36], "tackl": 160, "tag": [134, 152], "take": [37, 85, 96, 120, 152, 154], "talk": 155, "tar": 5, "target": [102, 118, 124, 126, 133, 144, 155, 160], "target_label": [102, 118, 126, 155, 160], "target_norm": 126, "target_pr": [124, 160], "task": [0, 1, 9, 80, 84, 102, 122, 124, 125, 133, 152, 155, 156, 159], "team": [11, 16, 152, 154, 155, 157, 158, 160], "teardown": 9, "technic": [0, 156, 158, 159], "techniqu": [0, 156, 159, 160], "telescop": [0, 1, 155, 156, 158, 159, 160], "tend": 64, "tensor": [11, 13, 16, 71, 81, 83, 84, 85, 91, 93, 95, 96, 98, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 120, 121, 122, 126, 128, 129, 133, 146, 150, 154, 155, 158, 160], "term": [84, 133, 160], "termin": 155, "test": [5, 9, 60, 66, 67, 68, 126, 134, 141, 148, 152, 154, 155, 160], "test_dataload": 9, "test_dataloader_kwarg": [5, 9, 66, 67, 68], "test_dataset": [1, 65], "test_funct": 148, "test_select": [9, 141, 154, 155], "test_siz": 134, "testdataset": [65, 68], "tev": 66, "than": [0, 8, 95, 126, 134, 149, 154, 155, 156, 159, 160], "thei": [70, 73, 76, 95, 153, 154, 155, 160], "them": [0, 1, 34, 71, 80, 86, 106, 126, 154, 155, 156, 158, 159, 160], "themselv": [1, 141, 142, 155, 160], "theo": 84, "therebi": [1, 141, 142, 155, 160], "therefor": [34, 50, 64, 153, 154, 155, 158, 160], "thi": [0, 3, 5, 7, 9, 11, 13, 14, 16, 18, 19, 21, 23, 36, 37, 39, 41, 43, 45, 47, 49, 50, 55, 58, 59, 63, 64, 67, 68, 72, 75, 80, 83, 85, 87, 91, 92, 93, 95, 96, 102, 104, 106, 111, 112, 118, 120, 122, 124, 125, 126, 129, 131, 133, 134, 135, 139, 141, 142, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160], "thing": 155, "thoglu": [118, 126], "those": [21, 31, 129, 154, 155], "thread": 13, "three": [96, 112, 133, 160], "threshold": [0, 75, 156, 159], "through": [0, 96, 124, 125, 126, 133, 153, 155, 156, 159, 160], "throw": 153, "thu": [142, 160], "ti": 154, "time": [0, 4, 59, 81, 83, 85, 91, 95, 96, 104, 120, 125, 129, 135, 149, 154, 155, 156, 158, 159], "time_column": 95, "time_coord": 91, "time_lik": 91, "time_like_weight": 91, "time_series_column": [104, 120], "time_window": 81, "timereconstruct": [123, 125], "tini": 155, "tito": [84, 104, 108], "to_config": 160, "to_csv": [155, 160], "to_dense_adj": 129, "to_parquet": 158, "todo": 155, "togeth": [0, 14, 80, 90, 133, 156, 159], "token": 128, "too": [155, 160], "tool": [0, 1, 156, 159], "top": 160, "torch": [0, 11, 13, 16, 80, 83, 84, 87, 92, 93, 110, 117, 118, 148, 154, 155, 156, 157, 158, 159, 160], "torch_cpu": 157, "torch_geometr": [85, 129, 154, 155, 160], "torch_lightn": 160, "tort": [14, 133], "total": [96, 129, 134, 135, 154, 155, 158], "total_energi": [4, 154, 155, 160], "tqdmprogressbar": 131, "track": [0, 19, 21, 25, 39, 41, 43, 66, 84, 125, 130, 132, 152, 153, 155, 156, 159], "track_length": 4, "tradit": [0, 156, 159], "train": [0, 1, 5, 7, 9, 10, 60, 65, 66, 67, 68, 69, 75, 84, 92, 102, 111, 118, 121, 122, 129, 131, 132, 133, 134, 135, 137, 141, 142, 144, 151, 153, 154, 155, 156, 158, 159], "train_batch": [102, 121], "train_dataload": [9, 102, 155, 160], "train_dataloader_kwarg": [5, 9, 66, 67, 68], "train_ev": 126, "train_select": [141, 154, 155], "train_val_split": 9, "trainabl": 142, "trainer": [102, 131, 134, 155, 160], "trainer_kwarg": 102, "training_config": [136, 138, 155, 160], "training_example_data_sqlit": [137, 154, 155, 160], "training_step": [102, 121], "trainingconfig": [138, 144, 155, 160], "transform": [1, 80, 84, 85, 108, 110, 111, 120, 126, 128, 129, 135, 155, 160], "transform_infer": [126, 155, 160], "transform_prediction_and_target": [126, 155, 160], "transform_support": [126, 155, 160], "transform_target": [126, 155, 160], "transit": 146, "transpar": [141, 142, 152, 155, 160], "transpos": 34, "transpose_list_of_dict": [33, 34], "traverse_and_appli": [138, 143], "treat": [104, 120], "tree": [23, 155], "tri": [23, 37], "triangl": 101, "trident": [66, 101], "trident1211": [97, 101], "tridentsmal": [65, 66], "trigger": [23, 154, 155, 160], "trivial": [37, 126], "true": [36, 59, 64, 75, 83, 84, 87, 92, 95, 104, 106, 108, 110, 111, 112, 117, 129, 131, 133, 135, 147, 153, 154, 155, 160], "trust": [117, 155, 160], "truth": [3, 4, 5, 11, 13, 16, 22, 31, 43, 59, 63, 66, 67, 68, 87, 92, 126, 134, 135, 141, 154, 158, 160], "truth_dict": [87, 92], "truth_label": 154, "truth_tabl": [5, 11, 13, 16, 63, 134, 135, 141, 154, 155], "truthdata": 41, "try": [37, 153], "tum": [25, 32], "tupl": [7, 11, 13, 14, 16, 35, 37, 59, 84, 96, 104, 106, 108, 112, 126, 129, 134, 137, 146], "turn": [96, 152], "tutorial_output": [155, 160], "two": [8, 106, 131, 133, 134, 153, 154, 155, 158], "txt": 157, "type": [0, 5, 7, 8, 9, 11, 13, 14, 16, 18, 19, 20, 21, 31, 33, 34, 35, 41, 43, 49, 50, 51, 52, 53, 58, 59, 60, 62, 63, 64, 70, 81, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159], "typic": [0, 34, 120, 154, 156, 158, 159], "u": [154, 158], "ultra": 154, "unaccur": 133, "unambigu": [141, 142], "unbatch_edge_index": [80, 81], "uncertainti": [125, 155, 160], "uncompress": 154, "under": [0, 155, 156, 158, 159, 160], "unfamiliar": 160, "uniform": [130, 135], "uniformweightfitt": 135, "uninstanti": [84, 110], "union": [0, 7, 8, 9, 11, 13, 16, 23, 34, 37, 45, 47, 49, 50, 51, 52, 53, 55, 70, 71, 73, 75, 76, 77, 81, 84, 85, 87, 92, 93, 96, 102, 104, 106, 112, 118, 122, 126, 141, 144, 147, 153, 156, 158, 159], "uniqu": [11, 13, 16, 59, 95, 96, 129, 141, 155, 158, 160], "unit": [0, 7, 68, 91, 148, 152, 156, 159], "univers": 108, "unlik": 154, "unscal": 160, "untransform": 124, "unzip": 5, "up": [0, 5, 75, 152, 156, 159], "updat": [84, 110, 112, 120, 121, 129, 131, 155, 157, 160], "update_edg": [84, 110], "upgrad": [4, 22, 99, 155, 157], "upon": [118, 160], "us": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 31, 33, 34, 39, 41, 43, 45, 47, 49, 50, 54, 55, 56, 59, 60, 62, 63, 64, 66, 67, 68, 69, 71, 73, 75, 77, 80, 83, 84, 85, 87, 90, 92, 93, 95, 96, 98, 102, 104, 106, 107, 108, 110, 111, 112, 117, 118, 120, 123, 124, 125, 126, 128, 129, 131, 132, 133, 135, 136, 137, 138, 141, 142, 143, 148, 149, 152, 153, 156, 157, 158, 159], "usabl": [0, 156, 159], "usag": [118, 126, 137], "use_bia": [83, 84], "use_cach": 60, "use_global_featur": [104, 108], "use_post_processing_lay": [104, 108], "user": [0, 5, 80, 102, 131, 154, 155, 156, 157, 159, 160], "usernam": 67, "usual": 154, "util": [1, 3, 17, 20, 34, 35, 36, 37, 57, 58, 59, 60, 80, 86, 88, 130, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 154, 155, 157, 160], "v": 84, "v1": 157, "v4": 157, "val_batch": [102, 121], "val_dataload": [9, 102], "valid": [5, 9, 37, 60, 66, 67, 68, 102, 118, 121, 122, 126, 131, 133, 137, 139, 144, 154, 155, 160], "validate_fil": 49, "validate_task": [102, 118, 122], "validation_dataloader_kwarg": [5, 9, 66, 67, 68], "validation_step": [102, 121], "validationerror": [139, 144], "valu": [11, 13, 16, 31, 34, 59, 64, 83, 84, 85, 87, 90, 91, 92, 93, 96, 110, 112, 126, 129, 132, 133, 137, 139, 160], "valueerror": [23, 117, 118], "var": 125, "var1": 19, "var_n": 19, "variabl": [19, 21, 23, 31, 37, 49, 95, 96, 106, 129, 135, 149, 153, 158, 160], "varieti": 155, "variou": [1, 61, 72, 155], "vast": [122, 126], "vector": [81, 84, 85, 129, 133, 153, 160], "verbos": [45, 47, 50, 55, 102, 122, 131], "verbose_print": 117, "veri": [60, 154, 155, 160], "verifi": [102, 118, 122], "versa": 131, "version": [85, 96, 126, 131, 152, 155, 160], "vertex": [125, 155], "vertex_i": 4, "vertex_x": 4, "vertex_z": 4, "vertexreconstruct": [123, 125], "via": 93, "viabl": 158, "vice": 131, "virtual": 157, "visibl": 125, "visible_energi": 4, "visible_inelast": [4, 125], "visible_inelasticity_pr": 125, "visibleinelasticityreconstruct": [123, 125], "visit": 158, "vmf": 125, "vmf_loss": 133, "vmfs_factor": 133, "volum": 31, "von": 133, "vonmisesfisher2dloss": [130, 133, 155, 160], "vonmisesfisher3dloss": [130, 133], "vonmisesfisherloss": [130, 133], "w": [155, 160], "wa": [0, 7, 111, 154, 155, 156, 158, 159, 160], "wai": [14, 37, 60, 122, 152, 155, 158, 160], "walk": [83, 93, 110, 129], "walk_length": [93, 129], "wandb": [155, 160], "wandb_dir": [155, 160], "wandb_logg": [155, 160], "wandblogg": [155, 160], "want": [154, 155, 157, 158, 160], "warn": [149, 155], "warning_onc": [149, 155], "warranti": [14, 133], "waterdemo81": [97, 101], "wb": 153, "we": [34, 37, 60, 96, 118, 152, 155, 157, 158, 160], "weigel": 110, "weight": [11, 13, 16, 75, 77, 84, 87, 92, 96, 110, 111, 126, 129, 133, 135, 142, 155, 160], "weight_fit": [1, 130], "weight_nam": 135, "weightfitt": [130, 135], "well": [86, 152, 155, 160], "were": 64, "wether": 112, "what": [1, 83, 92, 152, 155, 160], "whatev": 155, "wheel": 157, "when": [0, 11, 13, 14, 16, 34, 36, 59, 64, 75, 84, 104, 106, 108, 112, 120, 132, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160], "whenev": 157, "where": [5, 19, 45, 47, 50, 55, 87, 92, 93, 95, 96, 120, 129, 132, 153, 154, 155, 158, 160], "wherea": [135, 154], "whether": [8, 14, 35, 37, 59, 83, 84, 104, 106, 108, 111, 112, 117, 128, 133, 143, 147, 148, 155], "which": [0, 5, 11, 13, 16, 19, 21, 22, 31, 35, 39, 41, 43, 60, 62, 64, 70, 72, 73, 76, 81, 85, 87, 92, 93, 96, 106, 112, 117, 118, 124, 126, 129, 133, 134, 137, 153, 154, 155, 156, 159, 160], "while": [0, 23, 102, 129, 131, 152, 154, 156, 159], "who": [5, 146, 155, 160], "whom": [14, 133], "whose": 75, "wide": [14, 118, 160], "width": [4, 14], "wiki": 67, "willing": [154, 158], "window": [81, 154, 155], "wisc": 67, "wise": [84, 85], "wish": [0, 70, 152, 156, 159], "with_standard_argu": 137, "within": [31, 81, 84, 85, 90, 106, 112, 155, 160], "without": [1, 14, 90, 93, 95, 110, 133, 154, 157], "work": [0, 4, 35, 104, 152, 153, 154, 155, 156, 159, 160], "worker": [6, 7, 14, 45, 55, 58, 63, 70, 73, 76, 137, 149], "workflow": [0, 156, 159], "would": [152, 154, 155, 158, 160], "wrap": [131, 141, 142], "write": [63, 75, 77, 153, 155, 160], "writer": [1, 3, 47, 62, 63, 64, 158], "written": [47, 70, 153], "wrt": 126, "www": 155, "x": [4, 31, 83, 84, 85, 91, 95, 96, 99, 110, 120, 126, 129, 133, 135, 154, 155, 158, 160], "x8": 154, "x_i": 84, "x_j": 84, "x_low": 135, "xyz": [95, 96, 98, 99, 100, 101, 154, 158], "xyz_coord": 129, "xyzt": 129, "y": [4, 31, 83, 91, 99, 129], "yaml": [139, 140, 155], "yet": 96, "yield": [0, 106, 112, 133, 156, 159], "yml": [60, 137, 141, 142, 154, 155, 160], "you": [64, 70, 83, 118, 141, 142, 152, 154, 155, 157, 158, 160], "your": [93, 118, 152, 153, 154, 155, 157], "yourself": 152, "z": [4, 31, 83, 91, 95, 96, 99, 129], "z_name": 95, "z_offset": [95, 96], "z_scale": [95, 96], "zenith": [4, 125, 132, 155, 160], "zenith_kappa": 125, "zenith_kei": 132, "zenith_pr": 125, "zenithreconstruct": [123, 125], "zenithreconstructionwithkappa": [123, 125, 155, 160], "zero": 93, "\u00f8rs\u00f8e": [0, 156, 159]}, "titles": ["Usage", "API", "constants", "data", "constants", "curated_datamodule", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "samplers", "sqlite", "sqlite_dataset", "extractors", "combine_extractors", "extractor", "icecube", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "internal", "parquet_extractor", "liquido", "h5_extractor", "prometheus", "prometheus_extractor", "parquet", "deprecated_methods", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "internal_parquet_reader", "liquido_reader", "prometheus_reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "datasets", "prometheus_datasets", "snowstorm_dataset", "test_dataset", "deployment", "deployer", "deployment_module", "i3modules", "deprecated_methods", "icecube", "cleaning_module", "i3deployer", "inference_module", "exceptions", "exceptions", "models", "coarsening", "components", "embedding", "layers", "pool", "data_representation", "data_representation", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "detector", "detector", "icecube", "liquido", "prometheus", "easy_model", "gnn", "RNN_tito", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "grit", "icemix", "particlenet", "graphs", "edges", "minkowski", "nodes", "model", "normalizing_flow", "rnn", "node_rnn", "standard_averaged_model", "standard_model", "task", "classification", "reconstruction", "task", "transformer", "iseecube", "utils", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contributing To GraphNeT", "Data Conversion in GraphNeT", "Datasets In GraphNeT", "GraphNeT tutorial", "GraphNeT", "Installation", "Integrating New Experiments into GraphNeT", "GraphNeT", "Models In GraphNeT", "&lt;no title&gt;"], "titleterms": {"1": 158, "2": 158, "In": [154, 160], "The": [155, 160], "To": 152, "acknowledg": 0, "ad": [154, 155, 158, 160], "advanc": 155, "api": 1, "appendix": 155, "appli": 158, "argpars": 137, "backbon": 160, "base_config": 139, "befor": 158, "callback": 131, "checkpoint": 160, "choos": 154, "class": [155, 158, 160], "classif": 124, "cleaning_modul": 75, "coarsen": 81, "code": 152, "collect": 34, "combin": [154, 155], "combine_extractor": 18, "compon": 82, "config": 138, "configur": 140, "constant": [2, 4], "content": 155, "contribut": 152, "convent": 152, "convers": 153, "convnet": 105, "creat": 155, "curated_datamodul": 5, "custom": [154, 155], "cvmf": 157, "data": [3, 153, 158], "data_represent": [86, 87], "dataclass": 6, "dataconfig": 155, "dataconvert": [7, 47, 153], "dataload": 8, "datamodul": 9, "dataset": [10, 11, 65, 154, 155], "dataset_config": 141, "datasetconfig": 155, "decor": 145, "deploy": [69, 70], "deployment_modul": 71, "deprecated_method": [45, 55, 73], "deprecation_tool": 146, "detector": [97, 98, 158], "dynedg": 106, "dynedge_jinst": 107, "dynedge_kaggle_tito": 108, "easy_model": 102, "edg": [89, 90, 114], "embed": 83, "energi": 160, "event": 154, "exampl": [155, 158, 160], "except": [78, 79], "experi": [158, 160], "extractor": [17, 19, 153, 158], "filesi": 147, "frame": 35, "function": 155, "geometri": 158, "github": 152, "gnn": [103, 109], "graph": [88, 93, 113], "graph_definit": 92, "graphdefinit": 160, "graphnet": 155, "graphnet_file_read": 49, "graphnet_writ": 62, "graphnetfileread": 158, "graphnetgraphnet": [152, 153, 154, 156, 158, 159, 160], "grit": 110, "h5_extractor": 41, "i3_filt": 36, "i3deploy": 76, "i3extractor": 21, "i3featureextractor": 22, "i3genericextractor": 23, "i3hybridrecoextractor": 24, "i3modul": 72, "i3ntmuonlabelsextractor": 25, "i3particleextractor": 26, "i3pisaextractor": 27, "i3quesoextractor": 28, "i3read": 50, "i3retroextractor": 29, "i3splinempeextractor": 30, "i3truthextractor": 31, "i3tumextractor": 32, "icecub": [20, 74, 99, 157], "icemix": 111, "implement": [154, 158], "import": 148, "index": 158, "inference_modul": 77, "instal": 157, "instanti": 160, "integr": 158, "intern": 38, "internal_parquet_read": 51, "introduct": 155, "iseecub": 128, "issu": 152, "label": [132, 154, 155], "layer": 84, "liquido": [40, 100], "liquido_read": 52, "load": 160, "log": 149, "loss_funct": 133, "math": 150, "minkowski": [91, 115], "model": [80, 117, 155, 160], "model_config": 142, "modelconfig": [155, 160], "multi": 158, "multipl": [154, 155], "new": [154, 158], "node": [94, 95, 116], "node_rnn": 120, "normalizing_flow": 118, "overview": 155, "own": [158, 160], "parquet": [12, 44], "parquet_dataset": 13, "parquet_extractor": 39, "parquet_to_sqlit": 57, "parquet_writ": 63, "parquetdataset": 154, "pars": 143, "particlenet": 112, "pool": 85, "pre_configur": 46, "prometheu": [42, 101], "prometheus_dataset": 66, "prometheus_extractor": 43, "prometheus_read": 53, "pull": 152, "qualiti": 152, "quick": 157, "random": 58, "reader": [48, 153], "reconstruct": [125, 160], "reproduc": 155, "request": 152, "rnn": 119, "rnn_tito": 104, "sampler": 14, "save": 160, "select": 154, "snowstorm_dataset": 67, "sqlite": [15, 54], "sqlite_dataset": 16, "sqlite_util": 59, "sqlite_writ": 64, "sqlitedataset": [154, 155], "src": 151, "standard_averaged_model": 121, "standard_model": 122, "standardmodel": [155, 160], "start": 157, "state_dict": 160, "string_selection_resolv": 60, "subset": 154, "support": 158, "syntax": 160, "tabl": 158, "task": [123, 126, 160], "test_dataset": 68, "track": 160, "train": [130, 160], "training_config": 144, "transform": 127, "truth": 155, "tutori": 155, "type": 37, "us": [154, 155, 160], "usag": 0, "util": [33, 56, 96, 129, 134, 136], "v": 154, "weight_fit": 135, "write": 158, "writer": [61, 153], "your": [158, 160]}})