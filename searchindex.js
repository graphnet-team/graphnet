Search.setIndex({"alltitles": {"1) Adding Support for Your Data": [[160, "adding-support-for-your-data"]], "2) Implementing a Detector Class": [[160, "implementing-a-detector-class"]], "API": [[1, null]], "Acknowledgements": [[0, "acknowledgements"]], "Adding Your Own Model": [[162, "adding-your-own-model"]], "Adding custom Labels": [[156, "adding-custom-labels"]], "Adding custom truth labels": [[157, "adding-custom-truth-labels"]], "Advanced Functionality in SQLiteDataset": [[157, "advanced-functionality-in-sqlitedataset"]], "Appendix": [[157, "appendix"]], "Choosing a subset of events using selection": [[156, "choosing-a-subset-of-events-using-selection"]], "Code quality": [[154, "code-quality"]], "Combining Multiple Datasets": [[156, "combining-multiple-datasets"], [157, "combining-multiple-datasets"]], "Contents": [[157, "contents"]], "Contributing To GraphNeTgraphnet": [[154, null]], "Conventions": [[154, "conventions"]], "Creating reproducible Datasets using DatasetConfig": [[157, "creating-reproducible-datasets-using-datasetconfig"]], "Creating reproducible Models using ModelConfig": [[157, "creating-reproducible-models-using-modelconfig"]], "Data Conversion in GraphNeTgraphnet": [[155, null]], "DataConverter": [[155, "dataconverter"]], "Dataset": [[156, "dataset"]], "Datasets In GraphNeTgraphnet": [[156, null]], "Example DataConfig": [[157, "example-dataconfig"]], "Example ModelConfig": [[157, "example-modelconfig"]], "Example of geometry table before applying multi-index": [[160, "id1"]], "Example: Energy Reconstruction using ModelConfig": [[162, "example-energy-reconstruction-using-modelconfig"]], "Experiment Tracking": [[162, "experiment-tracking"]], "Extractors": [[155, "extractors"]], "GitHub issues": [[154, "github-issues"]], "GraphDefinition, backbone & Task": [[162, "graphdefinition-backbone-task"]], "GraphNeT tutorial": [[157, null]], "GraphNeTgraphnet": [[158, null], [161, null]], "Implementing a new Dataset": [[156, "implementing-a-new-dataset"]], "Installation": [[159, null]], "Installation in CVMFS (IceCube)": [[159, "installation-in-cvmfs-icecube"]], "Instantiating a StandardModel": [[162, "instantiating-a-standardmodel"]], "Integrating New Experiments into GraphNeTgraphnet": [[160, null]], "Introduction": [[157, "introduction"]], "Model.save": [[162, "model-save"]], "ModelConfig and state_dict": [[162, "modelconfig-and-state-dict"]], "Models In GraphNeTgraphnet": [[162, null]], "Overview of GraphNeT": [[157, "overview-of-graphnet"]], "Pull requests": [[154, "pull-requests"]], "Quick Start": [[159, "quick-start"]], "RNN_tito": [[106, null]], "Readers": [[155, "readers"]], "SQLiteDataset & ParquetDataset": [[156, "sqlitedataset-parquetdataset"]], "SQLiteDataset vs. ParquetDataset": [[156, "sqlitedataset-vs-parquetdataset"]], "Saving, loading, and checkpointing Models": [[162, "saving-loading-and-checkpointing-models"]], "The Model class": [[157, "the-model-class"], [162, "the-model-class"]], "The StandardModel class": [[157, "the-standardmodel-class"], [162, "the-standardmodel-class"]], "Training Syntax for StandardModel": [[162, "training-syntax-for-standardmodel"]], "Usage": [[0, null]], "Using checkpoints": [[162, "using-checkpoints"]], "Writers": [[155, "writers"]], "Writing your own Extractor and GraphNeTFileReader": [[160, "writing-your-own-extractor-and-graphnetfilereader"]], "argparse": [[139, null]], "base_config": [[141, null]], "callbacks": [[133, null]], "classification": [[126, null]], "cleaning_module": [[77, null]], "coarsening": [[83, null]], "collections": [[36, null]], "combine_extractors": [[18, null]], "components": [[84, null]], "config": [[140, null]], "configurable": [[142, null]], "constants": [[2, null], [4, null]], "convnet": [[107, null]], "curated_datamodule": [[5, null]], "data": [[3, null]], "data_representation": [[88, null], [89, null]], "dataclasses": [[6, null]], "dataconverter": [[7, null]], "dataconverters": [[49, null]], "dataloader": [[8, null]], "datamodule": [[9, null]], "dataset": [[10, null], [11, null]], "dataset_config": [[143, null]], "datasets": [[67, null]], "decorators": [[147, null]], "deployer": [[72, null]], "deployment": [[71, null]], "deployment_module": [[73, null]], "deprecated_methods": [[47, null], [57, null], [75, null]], "deprecation_tools": [[148, null]], "detector": [[99, null], [100, null]], "dynedge": [[108, null]], "dynedge_jinst": [[109, null]], "dynedge_kaggle_tito": [[110, null]], "easy_model": [[104, null]], "edges": [[91, null], [92, null], [116, null]], "embedding": [[85, null]], "exceptions": [[80, null], [81, null]], "extractor": [[19, null]], "extractors": [[17, null]], "filesys": [[149, null]], "frames": [[37, null]], "gnn": [[105, null], [111, null]], "graph_definition": [[94, null]], "graphnet_file_reader": [[51, null]], "graphnet_writer": [[64, null]], "graphs": [[90, null], [95, null], [115, null]], "grit": [[112, null]], "h5_extractor": [[43, null]], "i3_filters": [[38, null]], "i3deployer": [[78, null]], "i3dictvalueextractor": [[21, null]], "i3extractor": [[22, null]], "i3featureextractor": [[23, null]], "i3filtermapextractor": [[24, null]], "i3genericextractor": [[25, null]], "i3hybridrecoextractor": [[26, null]], "i3modules": [[74, null]], "i3ntmuonlabelsextractor": [[27, null]], "i3particleextractor": [[28, null]], "i3pisaextractor": [[29, null]], "i3quesoextractor": [[30, null]], "i3reader": [[52, null]], "i3retroextractor": [[31, null]], "i3splinempeextractor": [[32, null]], "i3truthextractor": [[33, null]], "i3tumextractor": [[34, null]], "icecube": [[20, null], [76, null], [101, null]], "icemix": [[113, null]], "imports": [[150, null]], "inference_module": [[79, null]], "internal": [[40, null]], "internal_parquet_reader": [[53, null]], "iseecube": [[130, null]], "labels": [[134, null]], "layers": [[86, null]], "liquido": [[42, null], [102, null]], "liquido_reader": [[54, null]], "logging": [[151, null]], "loss_functions": [[135, null]], "maths": [[152, null]], "minkowski": [[93, null], [117, null]], "model": [[119, null]], "model_config": [[144, null]], "models": [[82, null]], "node_rnn": [[122, null]], "nodes": [[96, null], [97, null], [118, null]], "normalizing_flow": [[120, null]], "parquet": [[12, null], [46, null]], "parquet_dataset": [[13, null]], "parquet_extractor": [[41, null]], "parquet_to_sqlite": [[59, null]], "parquet_writer": [[65, null]], "parsing": [[145, null]], "particlenet": [[114, null]], "pool": [[87, null]], "pre_configured": [[48, null]], "prometheus": [[44, null], [103, null]], "prometheus_datasets": [[68, null]], "prometheus_extractor": [[45, null]], "prometheus_reader": [[55, null]], "random": [[60, null]], "readers": [[50, null]], "reconstruction": [[127, null]], "rnn": [[121, null]], "samplers": [[14, null]], "snowstorm_dataset": [[69, null]], "sqlite": [[15, null], [56, null]], "sqlite_dataset": [[16, null]], "sqlite_utilities": [[61, null]], "sqlite_writer": [[66, null]], "src": [[153, null]], "standard_averaged_model": [[123, null]], "standard_model": [[124, null]], "string_selection_resolver": [[62, null]], "task": [[125, null], [128, null]], "test_dataset": [[70, null]], "training": [[132, null]], "training_config": [[146, null]], "transformer": [[129, null]], "types": [[39, null]], "utilities": [[35, null], [58, null], [138, null]], "utils": [[98, null], [131, null], [136, null]], "weight_fitting": [[137, null]], "writers": [[63, null]]}, "docnames": ["about/about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.curated_datamodule", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.samplers", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.combine_extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3dictvalueextractor", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3filtermapextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.extractors.liquido", "api/graphnet.data.extractors.liquido.h5_extractor", "api/graphnet.data.extractors.prometheus", "api/graphnet.data.extractors.prometheus.prometheus_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.readers.liquido_reader", "api/graphnet.data.readers.prometheus_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.datasets", "api/graphnet.datasets.prometheus_datasets", "api/graphnet.datasets.snowstorm_dataset", "api/graphnet.datasets.test_dataset", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.data_representation", "api/graphnet.models.data_representation.data_representation", "api/graphnet.models.data_representation.graphs", "api/graphnet.models.data_representation.graphs.edges", "api/graphnet.models.data_representation.graphs.edges.edges", "api/graphnet.models.data_representation.graphs.edges.minkowski", "api/graphnet.models.data_representation.graphs.graph_definition", "api/graphnet.models.data_representation.graphs.graphs", "api/graphnet.models.data_representation.graphs.nodes", "api/graphnet.models.data_representation.graphs.nodes.nodes", "api/graphnet.models.data_representation.graphs.utils", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.liquido", "api/graphnet.models.detector.prometheus", "api/graphnet.models.easy_model", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.grit", "api/graphnet.models.gnn.icemix", "api/graphnet.models.gnn.particlenet", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.nodes", "api/graphnet.models.model", "api/graphnet.models.normalizing_flow", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.transformer", "api/graphnet.models.transformer.iseecube", "api/graphnet.models.utils", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute/contribute", "data_conversion/data_conversion", "datasets/datasets", "getting_started/getting_started", "index", "installation/install", "integration/integration", "intro/intro", "models/models", "substitutions"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["about/about.rst", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.curated_datamodule.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.samplers.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.combine_extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3dictvalueextractor.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3filtermapextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.extractors.liquido.rst", "api/graphnet.data.extractors.liquido.h5_extractor.rst", "api/graphnet.data.extractors.prometheus.rst", "api/graphnet.data.extractors.prometheus.prometheus_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.readers.liquido_reader.rst", "api/graphnet.data.readers.prometheus_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.datasets.rst", "api/graphnet.datasets.prometheus_datasets.rst", "api/graphnet.datasets.snowstorm_dataset.rst", "api/graphnet.datasets.test_dataset.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.data_representation.rst", "api/graphnet.models.data_representation.data_representation.rst", "api/graphnet.models.data_representation.graphs.rst", "api/graphnet.models.data_representation.graphs.edges.rst", "api/graphnet.models.data_representation.graphs.edges.edges.rst", "api/graphnet.models.data_representation.graphs.edges.minkowski.rst", "api/graphnet.models.data_representation.graphs.graph_definition.rst", "api/graphnet.models.data_representation.graphs.graphs.rst", "api/graphnet.models.data_representation.graphs.nodes.rst", "api/graphnet.models.data_representation.graphs.nodes.nodes.rst", "api/graphnet.models.data_representation.graphs.utils.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.liquido.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.easy_model.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.grit.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.gnn.particlenet.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.model.rst", "api/graphnet.models.normalizing_flow.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.transformer.rst", "api/graphnet.models.transformer.iseecube.rst", "api/graphnet.models.utils.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute/contribute.rst", "data_conversion/data_conversion.rst", "datasets/datasets.rst", "getting_started/getting_started.md", "index.rst", "installation/install.rst", "integration/integration.rst", "intro/intro.rst", "models/models.rst", "substitutions.rst"], "indexentries": {"accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[51, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors", false]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[51, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions", false]], "add_accumulated_value_after_t() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[98, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_accumulated_value_after_t", false]], "add_charge_threshold_summary() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[98, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_charge_threshold_summary", false]], "add_counts() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[98, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_counts", false]], "add_full_rrwp() (in module graphnet.models.utils)": [[131, "graphnet.models.utils.add_full_rrwp", false]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[11, "graphnet.data.dataset.dataset.Dataset.add_label", false]], "add_mean() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[98, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_mean", false]], "add_percentile_summary() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[98, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_percentile_summary", false]], "add_spread() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[98, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_spread", false]], "add_std() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[98, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_std", false]], "add_sum_charge() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[98, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_sum_charge", false]], "add_time_first_pulse() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[98, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.add_time_first_pulse", false]], "arca115 (class in graphnet.models.detector.prometheus)": [[103, "graphnet.models.detector.prometheus.ARCA115", false]], "argumentparser (class in graphnet.utilities.argparse)": [[139, "graphnet.utilities.argparse.ArgumentParser", false]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[144, "graphnet.utilities.config.model_config.ModelConfig.arguments", false]], "array_to_sequence() (in module graphnet.models.utils)": [[131, "graphnet.models.utils.array_to_sequence", false]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[141, "graphnet.utilities.config.base_config.BaseConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[144, "graphnet.utilities.config.model_config.ModelConfig.as_dict", false]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[61, "graphnet.data.utilities.sqlite_utilities.attach_index", false]], "attention_rel (class in graphnet.models.components.layers)": [[86, "graphnet.models.components.layers.Attention_rel", false]], "attributecoarsening (class in graphnet.models.coarsening)": [[83, "graphnet.models.coarsening.AttributeCoarsening", false]], "available_backends (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.available_backends", false]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[127, "graphnet.models.task.reconstruction.AzimuthReconstruction", false]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[127, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa", false]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[135, "graphnet.training.loss_functions.LogCMK.backward", false]], "baikalgvd8 (class in graphnet.models.detector.prometheus)": [[103, "graphnet.models.detector.prometheus.BaikalGVD8", false]], "baikalgvdsmall (class in graphnet.datasets.prometheus_datasets)": [[68, "graphnet.datasets.prometheus_datasets.BaikalGVDSmall", false]], "baseconfig (class in graphnet.utilities.config.base_config)": [[141, "graphnet.utilities.config.base_config.BaseConfig", false]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[126, "graphnet.models.task.classification.BinaryClassificationTask", false]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[126, "graphnet.models.task.classification.BinaryClassificationTaskLogits", false]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[135, "graphnet.training.loss_functions.BinaryCrossEntropyLoss", false]], "bjoernlow (class in graphnet.training.weight_fitting)": [[137, "graphnet.training.weight_fitting.BjoernLow", false]], "block (class in graphnet.models.components.layers)": [[86, "graphnet.models.components.layers.Block", false]], "block_rel (class in graphnet.models.components.layers)": [[86, "graphnet.models.components.layers.Block_rel", false]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[39, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion", false]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[131, "graphnet.models.utils.calculate_distance_matrix", false]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[131, "graphnet.models.utils.calculate_xyzt_homophily", false]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[39, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python", false]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[39, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python", false]], "chargefilter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[38, "graphnet.data.extractors.icecube.utilities.i3_filters.ChargeFilter", false]], "chunk_sizes (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset property)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.chunk_sizes", false]], "chunks (graphnet.data.dataset.samplers.randomchunksampler property)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler.chunks", false]], "citation (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.citation", false]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[144, "graphnet.utilities.config.model_config.ModelConfig.class_name", false]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[122, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object", false]], "cluster_and_pad (class in graphnet.models.data_representation.graphs.utils)": [[98, "graphnet.models.data_representation.graphs.utils.cluster_and_pad", false]], "cluster_summarize_with_percentiles() (in module graphnet.models.data_representation.graphs.utils)": [[98, "graphnet.models.data_representation.graphs.utils.cluster_summarize_with_percentiles", false]], "clustersummaryfeatures (class in graphnet.models.data_representation.graphs.nodes.nodes)": [[97, "graphnet.models.data_representation.graphs.nodes.nodes.ClusterSummaryFeatures", false]], "coarsening (class in graphnet.models.coarsening)": [[83, "graphnet.models.coarsening.Coarsening", false]], "collate_fn() (in module graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.collate_fn", false]], "collate_fn() (in module graphnet.training.utils)": [[136, "graphnet.training.utils.collate_fn", false]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[136, "graphnet.training.utils.collator_sequence_buckleting", false]], "columnmissingexception": [[81, "graphnet.exceptions.exceptions.ColumnMissingException", false]], "combinedextractor (class in graphnet.data.extractors.combine_extractors)": [[18, "graphnet.data.extractors.combine_extractors.CombinedExtractor", false]], "comments (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.comments", false]], "compute_loss() (graphnet.models.easy_model.easysyntax method)": [[104, "graphnet.models.easy_model.EasySyntax.compute_loss", false]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[124, "graphnet.models.standard_model.StandardModel.compute_loss", false]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[128, "graphnet.models.task.task.LearnedTask.compute_loss", false]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[128, "graphnet.models.task.task.StandardLearnedTask.compute_loss", false]], "compute_minkowski_distance_mat() (in module graphnet.models.data_representation.graphs.edges.minkowski)": [[93, "graphnet.models.data_representation.graphs.edges.minkowski.compute_minkowski_distance_mat", false]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[11, "graphnet.data.dataset.dataset.Dataset.concatenate", false]], "config (graphnet.utilities.config.configurable.configurable property)": [[142, "graphnet.utilities.config.configurable.Configurable.config", false]], "configurable (class in graphnet.utilities.config.configurable)": [[142, "graphnet.utilities.config.configurable.Configurable", false]], "configure_optimizers() (graphnet.models.easy_model.easysyntax method)": [[104, "graphnet.models.easy_model.EasySyntax.configure_optimizers", false]], "contains() (graphnet.utilities.argparse.options method)": [[139, "graphnet.utilities.argparse.Options.contains", false]], "convnet (class in graphnet.models.gnn.convnet)": [[107, "graphnet.models.gnn.convnet.ConvNet", false]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[61, "graphnet.data.utilities.sqlite_utilities.create_table", false]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[61, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql", false]], "creator (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.creator", false]], "critical() (graphnet.utilities.logging.logger method)": [[151, "graphnet.utilities.logging.Logger.critical", false]], "crossentropyloss (class in graphnet.training.loss_functions)": [[135, "graphnet.training.loss_functions.CrossEntropyLoss", false]], "curateddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.CuratedDataset", false]], "customdomcoarsening (class in graphnet.models.coarsening)": [[83, "graphnet.models.coarsening.CustomDOMCoarsening", false]], "data_representation (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.data_representation", false]], "data_source (graphnet.data.dataset.samplers.randomchunksampler property)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler.data_source", false]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[61, "graphnet.data.utilities.sqlite_utilities.database_exists", false]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[61, "graphnet.data.utilities.sqlite_utilities.database_table_exists", false]], "dataconverter (class in graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.DataConverter", false]], "dataloader (class in graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.DataLoader", false]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[146, "graphnet.utilities.config.training_config.TrainingConfig.dataloader", false]], "datarepresentation (class in graphnet.models.data_representation.data_representation)": [[89, "graphnet.models.data_representation.data_representation.DataRepresentation", false]], "dataset (class in graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.Dataset", false]], "dataset_dir (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.dataset_dir", false]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig", false]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta", false]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta", false]], "debug() (graphnet.utilities.logging.logger method)": [[151, "graphnet.utilities.logging.Logger.debug", false]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE", false]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE", false]], "deepice (class in graphnet.models.gnn.icemix)": [[113, "graphnet.models.gnn.icemix.DeepIce", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[126, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[126, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[127, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[127, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[127, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[127, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[127, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[127, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[128, "graphnet.models.task.task.IdentityTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.standardflowtask property)": [[128, "graphnet.models.task.task.StandardFlowTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.task property)": [[128, "graphnet.models.task.task.Task.default_prediction_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[126, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[126, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[127, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[127, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[127, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[127, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[127, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[127, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[128, "graphnet.models.task.task.IdentityTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.task property)": [[128, "graphnet.models.task.task.Task.default_target_labels", false]], "deployer (class in graphnet.deployment.deployer)": [[72, "graphnet.deployment.deployer.Deployer", false]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[73, "graphnet.deployment.deployment_module.DeploymentModule", false]], "description() (graphnet.data.curated_datamodule.curateddataset method)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.description", false]], "detector (class in graphnet.models.detector.detector)": [[100, "graphnet.models.detector.detector.Detector", false]], "direction (class in graphnet.training.labels)": [[134, "graphnet.training.labels.Direction", false]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[127, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa", false]], "do_shuffle() (in module graphnet.data.dataloader)": [[8, "graphnet.data.dataloader.do_shuffle", false]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[83, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening", false]], "domcoarsening (class in graphnet.models.coarsening)": [[83, "graphnet.models.coarsening.DOMCoarsening", false]], "droppath (class in graphnet.models.components.layers)": [[86, "graphnet.models.components.layers.DropPath", false]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[141, "graphnet.utilities.config.base_config.BaseConfig.dump", false]], "dynedge (class in graphnet.models.gnn.dynedge)": [[108, "graphnet.models.gnn.dynedge.DynEdge", false]], "dynedgeconv (class in graphnet.models.components.layers)": [[86, "graphnet.models.components.layers.DynEdgeConv", false]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[109, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST", false]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[110, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO", false]], "dyntrans (class in graphnet.models.components.layers)": [[86, "graphnet.models.components.layers.DynTrans", false]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[146, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience", false]], "easysyntax (class in graphnet.models.easy_model)": [[104, "graphnet.models.easy_model.EasySyntax", false]], "edgeconvtito (class in graphnet.models.components.layers)": [[86, "graphnet.models.components.layers.EdgeConvTito", false]], "edgedefinition (class in graphnet.models.data_representation.graphs.edges.edges)": [[92, "graphnet.models.data_representation.graphs.edges.edges.EdgeDefinition", false]], "edgelessgraph (class in graphnet.models.data_representation.graphs.graphs)": [[95, "graphnet.models.data_representation.graphs.graphs.EdgelessGraph", false]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[127, "graphnet.models.task.reconstruction.EnergyReconstruction", false]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[127, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower", false]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[127, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty", false]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[127, "graphnet.models.task.reconstruction.EnergyTCReconstruction", false]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.EnsembleDataset", false]], "ensembleloss (class in graphnet.training.loss_functions)": [[135, "graphnet.training.loss_functions.EnsembleLoss", false]], "eps_like() (in module graphnet.utilities.maths)": [[152, "graphnet.utilities.maths.eps_like", false]], "erdahosteddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.ERDAHostedDataset", false]], "error() (graphnet.utilities.logging.logger method)": [[151, "graphnet.utilities.logging.Logger.error", false]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[135, "graphnet.training.loss_functions.EuclideanDistanceLoss", false]], "euclideanedges (class in graphnet.models.data_representation.graphs.edges.edges)": [[92, "graphnet.models.data_representation.graphs.edges.edges.EuclideanEdges", false]], "event_truth (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.event_truth", false]], "events (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.events", false]], "exclude() (graphnet.data.extractors.extractor.extractor method)": [[19, "graphnet.data.extractors.extractor.Extractor.exclude", false]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[64, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes", false]], "experiment (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.experiment", false]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[86, "graphnet.models.components.layers.DropPath.extra_repr", false]], "extra_repr() (graphnet.models.model.model method)": [[119, "graphnet.models.model.Model.extra_repr", false]], "extra_repr_recursive() (graphnet.models.model.model method)": [[119, "graphnet.models.model.Model.extra_repr_recursive", false]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[51, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names", false]], "extractor (class in graphnet.data.extractors.extractor)": [[19, "graphnet.data.extractors.extractor.Extractor", false]], "feature_map() (graphnet.models.detector.detector.detector method)": [[100, "graphnet.models.detector.detector.Detector.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[101, "graphnet.models.detector.icecube.IceCube86.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[101, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[101, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[101, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map", false]], "feature_map() (graphnet.models.detector.liquido.liquido_v1 method)": [[102, "graphnet.models.detector.liquido.LiquidO_v1.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.arca115 method)": [[103, "graphnet.models.detector.prometheus.ARCA115.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.baikalgvd8 method)": [[103, "graphnet.models.detector.prometheus.BaikalGVD8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecube86prometheus method)": [[103, "graphnet.models.detector.prometheus.IceCube86Prometheus.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubedeepcore8 method)": [[103, "graphnet.models.detector.prometheus.IceCubeDeepCore8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubegen2 method)": [[103, "graphnet.models.detector.prometheus.IceCubeGen2.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubeupgrade7 method)": [[103, "graphnet.models.detector.prometheus.IceCubeUpgrade7.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icedemo81 method)": [[103, "graphnet.models.detector.prometheus.IceDemo81.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[103, "graphnet.models.detector.prometheus.ORCA150.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150superdense method)": [[103, "graphnet.models.detector.prometheus.ORCA150SuperDense.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.ponetriangle method)": [[103, "graphnet.models.detector.prometheus.PONETriangle.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.trident1211 method)": [[103, "graphnet.models.detector.prometheus.TRIDENT1211.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.waterdemo81 method)": [[103, "graphnet.models.detector.prometheus.WaterDemo81.feature_map", false]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES", false]], "features (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.features", false]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.features", false]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[64, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension", false]], "file_handlers (graphnet.utilities.logging.logger property)": [[151, "graphnet.utilities.logging.Logger.file_handlers", false]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[151, "graphnet.utilities.logging.RepeatFilter.filter", false]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[51, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files", false]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[52, "graphnet.data.readers.i3reader.I3Reader.find_files", false]], "find_files() (graphnet.data.readers.internal_parquet_reader.parquetreader method)": [[53, "graphnet.data.readers.internal_parquet_reader.ParquetReader.find_files", false]], "find_files() (graphnet.data.readers.liquido_reader.liquidoreader method)": [[54, "graphnet.data.readers.liquido_reader.LiquidOReader.find_files", false]], "find_files() (graphnet.data.readers.prometheus_reader.prometheusreader method)": [[55, "graphnet.data.readers.prometheus_reader.PrometheusReader.find_files", false]], "find_i3_files() (in module graphnet.utilities.filesys)": [[149, "graphnet.utilities.filesys.find_i3_files", false]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[146, "graphnet.utilities.config.training_config.TrainingConfig.fit", false]], "fit() (graphnet.models.easy_model.easysyntax method)": [[104, "graphnet.models.easy_model.EasySyntax.fit", false]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[137, "graphnet.training.weight_fitting.WeightFitter.fit", false]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[36, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary", false]], "forward() (graphnet.models.coarsening.coarsening method)": [[83, "graphnet.models.coarsening.Coarsening.forward", false]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[85, "graphnet.models.components.embedding.FourierEncoder.forward", false]], "forward() (graphnet.models.components.embedding.linearedgeencoder method)": [[85, "graphnet.models.components.embedding.LinearEdgeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.linearnodeencoder method)": [[85, "graphnet.models.components.embedding.LinearNodeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.rrwplinearedgeencoder method)": [[85, "graphnet.models.components.embedding.RRWPLinearEdgeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.rrwplinearnodeencoder method)": [[85, "graphnet.models.components.embedding.RRWPLinearNodeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.rwselinearnodeencoder method)": [[85, "graphnet.models.components.embedding.RWSELinearNodeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[85, "graphnet.models.components.embedding.SinusoidalPosEmb.forward", false]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[85, "graphnet.models.components.embedding.SpacetimeEncoder.forward", false]], "forward() (graphnet.models.components.layers.attention_rel method)": [[86, "graphnet.models.components.layers.Attention_rel.forward", false]], "forward() (graphnet.models.components.layers.block method)": [[86, "graphnet.models.components.layers.Block.forward", false]], "forward() (graphnet.models.components.layers.block_rel method)": [[86, "graphnet.models.components.layers.Block_rel.forward", false]], "forward() (graphnet.models.components.layers.droppath method)": [[86, "graphnet.models.components.layers.DropPath.forward", false]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[86, "graphnet.models.components.layers.DynEdgeConv.forward", false]], "forward() (graphnet.models.components.layers.dyntrans method)": [[86, "graphnet.models.components.layers.DynTrans.forward", false]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[86, "graphnet.models.components.layers.EdgeConvTito.forward", false]], "forward() (graphnet.models.components.layers.gritsparsemha method)": [[86, "graphnet.models.components.layers.GritSparseMHA.forward", false]], "forward() (graphnet.models.components.layers.grittransformerlayer method)": [[86, "graphnet.models.components.layers.GritTransformerLayer.forward", false]], "forward() (graphnet.models.components.layers.mlp method)": [[86, "graphnet.models.components.layers.Mlp.forward", false]], "forward() (graphnet.models.components.layers.sangraphhead method)": [[86, "graphnet.models.components.layers.SANGraphHead.forward", false]], "forward() (graphnet.models.data_representation.data_representation.datarepresentation method)": [[89, "graphnet.models.data_representation.data_representation.DataRepresentation.forward", false]], "forward() (graphnet.models.data_representation.graphs.edges.edges.edgedefinition method)": [[92, "graphnet.models.data_representation.graphs.edges.edges.EdgeDefinition.forward", false]], "forward() (graphnet.models.data_representation.graphs.graph_definition.graphdefinition method)": [[94, "graphnet.models.data_representation.graphs.graph_definition.GraphDefinition.forward", false]], "forward() (graphnet.models.data_representation.graphs.graphs.knngraphrrwp method)": [[95, "graphnet.models.data_representation.graphs.graphs.KNNGraphRRWP.forward", false]], "forward() (graphnet.models.data_representation.graphs.graphs.knngraphrwse method)": [[95, "graphnet.models.data_representation.graphs.graphs.KNNGraphRWSE.forward", false]], "forward() (graphnet.models.data_representation.graphs.nodes.nodes.nodedefinition method)": [[97, "graphnet.models.data_representation.graphs.nodes.nodes.NodeDefinition.forward", false]], "forward() (graphnet.models.detector.detector.detector method)": [[100, "graphnet.models.detector.detector.Detector.forward", false]], "forward() (graphnet.models.easy_model.easysyntax method)": [[104, "graphnet.models.easy_model.EasySyntax.forward", false]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[107, "graphnet.models.gnn.convnet.ConvNet.forward", false]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[108, "graphnet.models.gnn.dynedge.DynEdge.forward", false]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[109, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward", false]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[110, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward", false]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[111, "graphnet.models.gnn.gnn.GNN.forward", false]], "forward() (graphnet.models.gnn.grit.grit method)": [[112, "graphnet.models.gnn.grit.GRIT.forward", false]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[113, "graphnet.models.gnn.icemix.DeepIce.forward", false]], "forward() (graphnet.models.gnn.particlenet.particlenet method)": [[114, "graphnet.models.gnn.particlenet.ParticleNeT.forward", false]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[106, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward", false]], "forward() (graphnet.models.normalizing_flow.normalizingflow method)": [[120, "graphnet.models.normalizing_flow.NormalizingFlow.forward", false]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[122, "graphnet.models.rnn.node_rnn.Node_RNN.forward", false]], "forward() (graphnet.models.standard_model.standardmodel method)": [[124, "graphnet.models.standard_model.StandardModel.forward", false]], "forward() (graphnet.models.task.task.learnedtask method)": [[128, "graphnet.models.task.task.LearnedTask.forward", false]], "forward() (graphnet.models.task.task.standardflowtask method)": [[128, "graphnet.models.task.task.StandardFlowTask.forward", false]], "forward() (graphnet.models.transformer.iseecube.iseecube method)": [[130, "graphnet.models.transformer.iseecube.ISeeCube.forward", false]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[135, "graphnet.training.loss_functions.LogCMK.forward", false]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[135, "graphnet.training.loss_functions.LossFunction.forward", false]], "fourierencoder (class in graphnet.models.components.embedding)": [[85, "graphnet.models.components.embedding.FourierEncoder", false]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[37, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo", false]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[37, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise", false]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[11, "graphnet.data.dataset.dataset.Dataset.from_config", false]], "from_config() (graphnet.models.model.model class method)": [[119, "graphnet.models.model.Model.from_config", false]], "from_config() (graphnet.utilities.config.configurable.configurable method)": [[142, "graphnet.utilities.config.configurable.Configurable.from_config", false]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[8, "graphnet.data.dataloader.DataLoader.from_dataset_config", false]], "full_edge_index() (in module graphnet.models.utils)": [[131, "graphnet.models.utils.full_edge_index", false]], "gather_cluster_sequence() (in module graphnet.models.data_representation.graphs.utils)": [[98, "graphnet.models.data_representation.graphs.utils.gather_cluster_sequence", false]], "gather_len_matched_buckets() (in module graphnet.data.dataset.samplers)": [[14, "graphnet.data.dataset.samplers.gather_len_matched_buckets", false]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.gcd_file", false]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.gcd_file", false]], "geometry_table (graphnet.models.detector.detector.detector property)": [[100, "graphnet.models.detector.detector.Detector.geometry_table", false]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[101, "graphnet.models.detector.icecube.IceCube86.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubekaggle attribute)": [[101, "graphnet.models.detector.icecube.IceCubeKaggle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[101, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.liquido.liquido_v1 attribute)": [[102, "graphnet.models.detector.liquido.LiquidO_v1.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.arca115 attribute)": [[103, "graphnet.models.detector.prometheus.ARCA115.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[103, "graphnet.models.detector.prometheus.BaikalGVD8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[103, "graphnet.models.detector.prometheus.IceCube86Prometheus.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[103, "graphnet.models.detector.prometheus.IceCubeDeepCore8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[103, "graphnet.models.detector.prometheus.IceCubeGen2.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[103, "graphnet.models.detector.prometheus.IceCubeUpgrade7.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icedemo81 attribute)": [[103, "graphnet.models.detector.prometheus.IceDemo81.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[103, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150superdense attribute)": [[103, "graphnet.models.detector.prometheus.ORCA150SuperDense.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.ponetriangle attribute)": [[103, "graphnet.models.detector.prometheus.PONETriangle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.trident1211 attribute)": [[103, "graphnet.models.detector.prometheus.TRIDENT1211.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[103, "graphnet.models.detector.prometheus.WaterDemo81.geometry_table_path", false]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[141, "graphnet.utilities.config.base_config.get_all_argument_values", false]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[145, "graphnet.utilities.config.parsing.get_all_grapnet_classes", false]], "get_fields() (in module graphnet.models.utils)": [[131, "graphnet.models.utils.get_fields", false]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[145, "graphnet.utilities.config.parsing.get_graphnet_classes", false]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[133, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr", false]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.get_map_function", false]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[39, "graphnet.data.extractors.icecube.utilities.types.get_member_variables", false]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[133, "graphnet.training.callbacks.ProgressBar.get_metrics", false]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[37, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries", false]], "get_predictions() (in module graphnet.training.utils)": [[136, "graphnet.training.utils.get_predictions", false]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[61, "graphnet.data.utilities.sqlite_utilities.get_primary_keys", false]], "get_rw_landing_probs() (in module graphnet.models.utils)": [[131, "graphnet.models.utils.get_rw_landing_probs", false]], "gnn (class in graphnet.models.gnn.gnn)": [[111, "graphnet.models.gnn.gnn.GNN", false]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition", false]], "graphdefinition (class in graphnet.models.data_representation.graphs.graph_definition)": [[94, "graphnet.models.data_representation.graphs.graph_definition.GraphDefinition", false]], "graphnet": [[1, "module-graphnet", false]], "graphnet.constants": [[2, "module-graphnet.constants", false]], "graphnet.data": [[3, "module-graphnet.data", false]], "graphnet.data.constants": [[4, "module-graphnet.data.constants", false]], "graphnet.data.curated_datamodule": [[5, "module-graphnet.data.curated_datamodule", false]], "graphnet.data.dataclasses": [[6, "module-graphnet.data.dataclasses", false]], "graphnet.data.dataconverter": [[7, "module-graphnet.data.dataconverter", false]], "graphnet.data.dataloader": [[8, "module-graphnet.data.dataloader", false]], "graphnet.data.datamodule": [[9, "module-graphnet.data.datamodule", false]], "graphnet.data.dataset": [[10, "module-graphnet.data.dataset", false]], "graphnet.data.dataset.dataset": [[11, "module-graphnet.data.dataset.dataset", false]], "graphnet.data.dataset.parquet": [[12, "module-graphnet.data.dataset.parquet", false]], "graphnet.data.dataset.parquet.parquet_dataset": [[13, "module-graphnet.data.dataset.parquet.parquet_dataset", false]], "graphnet.data.dataset.samplers": [[14, "module-graphnet.data.dataset.samplers", false]], "graphnet.data.dataset.sqlite": [[15, "module-graphnet.data.dataset.sqlite", false]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[16, "module-graphnet.data.dataset.sqlite.sqlite_dataset", false]], "graphnet.data.extractors": [[17, "module-graphnet.data.extractors", false]], "graphnet.data.extractors.combine_extractors": [[18, "module-graphnet.data.extractors.combine_extractors", false]], "graphnet.data.extractors.extractor": [[19, "module-graphnet.data.extractors.extractor", false]], "graphnet.data.extractors.icecube": [[20, "module-graphnet.data.extractors.icecube", false]], "graphnet.data.extractors.icecube.i3dictvalueextractor": [[21, "module-graphnet.data.extractors.icecube.i3dictvalueextractor", false]], "graphnet.data.extractors.icecube.i3extractor": [[22, "module-graphnet.data.extractors.icecube.i3extractor", false]], "graphnet.data.extractors.icecube.i3featureextractor": [[23, "module-graphnet.data.extractors.icecube.i3featureextractor", false]], "graphnet.data.extractors.icecube.i3filtermapextractor": [[24, "module-graphnet.data.extractors.icecube.i3filtermapextractor", false]], "graphnet.data.extractors.icecube.i3genericextractor": [[25, "module-graphnet.data.extractors.icecube.i3genericextractor", false]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[26, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[27, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false]], "graphnet.data.extractors.icecube.i3particleextractor": [[28, "module-graphnet.data.extractors.icecube.i3particleextractor", false]], "graphnet.data.extractors.icecube.i3pisaextractor": [[29, "module-graphnet.data.extractors.icecube.i3pisaextractor", false]], "graphnet.data.extractors.icecube.i3quesoextractor": [[30, "module-graphnet.data.extractors.icecube.i3quesoextractor", false]], "graphnet.data.extractors.icecube.i3retroextractor": [[31, "module-graphnet.data.extractors.icecube.i3retroextractor", false]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[32, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false]], "graphnet.data.extractors.icecube.i3truthextractor": [[33, "module-graphnet.data.extractors.icecube.i3truthextractor", false]], "graphnet.data.extractors.icecube.i3tumextractor": [[34, "module-graphnet.data.extractors.icecube.i3tumextractor", false]], "graphnet.data.extractors.icecube.utilities": [[35, "module-graphnet.data.extractors.icecube.utilities", false]], "graphnet.data.extractors.icecube.utilities.collections": [[36, "module-graphnet.data.extractors.icecube.utilities.collections", false]], "graphnet.data.extractors.icecube.utilities.frames": [[37, "module-graphnet.data.extractors.icecube.utilities.frames", false]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[38, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false]], "graphnet.data.extractors.icecube.utilities.types": [[39, "module-graphnet.data.extractors.icecube.utilities.types", false]], "graphnet.data.extractors.internal": [[40, "module-graphnet.data.extractors.internal", false]], "graphnet.data.extractors.internal.parquet_extractor": [[41, "module-graphnet.data.extractors.internal.parquet_extractor", false]], "graphnet.data.extractors.liquido": [[42, "module-graphnet.data.extractors.liquido", false]], "graphnet.data.extractors.liquido.h5_extractor": [[43, "module-graphnet.data.extractors.liquido.h5_extractor", false]], "graphnet.data.extractors.prometheus": [[44, "module-graphnet.data.extractors.prometheus", false]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[45, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false]], "graphnet.data.parquet": [[46, "module-graphnet.data.parquet", false]], "graphnet.data.parquet.deprecated_methods": [[47, "module-graphnet.data.parquet.deprecated_methods", false]], "graphnet.data.pre_configured": [[48, "module-graphnet.data.pre_configured", false]], "graphnet.data.pre_configured.dataconverters": [[49, "module-graphnet.data.pre_configured.dataconverters", false]], "graphnet.data.readers": [[50, "module-graphnet.data.readers", false]], "graphnet.data.readers.graphnet_file_reader": [[51, "module-graphnet.data.readers.graphnet_file_reader", false]], "graphnet.data.readers.i3reader": [[52, "module-graphnet.data.readers.i3reader", false]], "graphnet.data.readers.internal_parquet_reader": [[53, "module-graphnet.data.readers.internal_parquet_reader", false]], "graphnet.data.readers.liquido_reader": [[54, "module-graphnet.data.readers.liquido_reader", false]], "graphnet.data.readers.prometheus_reader": [[55, "module-graphnet.data.readers.prometheus_reader", false]], "graphnet.data.sqlite": [[56, "module-graphnet.data.sqlite", false]], "graphnet.data.sqlite.deprecated_methods": [[57, "module-graphnet.data.sqlite.deprecated_methods", false]], "graphnet.data.utilities": [[58, "module-graphnet.data.utilities", false]], "graphnet.data.utilities.parquet_to_sqlite": [[59, "module-graphnet.data.utilities.parquet_to_sqlite", false]], "graphnet.data.utilities.random": [[60, "module-graphnet.data.utilities.random", false]], "graphnet.data.utilities.sqlite_utilities": [[61, "module-graphnet.data.utilities.sqlite_utilities", false]], "graphnet.data.utilities.string_selection_resolver": [[62, "module-graphnet.data.utilities.string_selection_resolver", false]], "graphnet.data.writers": [[63, "module-graphnet.data.writers", false]], "graphnet.data.writers.graphnet_writer": [[64, "module-graphnet.data.writers.graphnet_writer", false]], "graphnet.data.writers.parquet_writer": [[65, "module-graphnet.data.writers.parquet_writer", false]], "graphnet.data.writers.sqlite_writer": [[66, "module-graphnet.data.writers.sqlite_writer", false]], "graphnet.datasets": [[67, "module-graphnet.datasets", false]], "graphnet.datasets.prometheus_datasets": [[68, "module-graphnet.datasets.prometheus_datasets", false]], "graphnet.datasets.snowstorm_dataset": [[69, "module-graphnet.datasets.snowstorm_dataset", false]], "graphnet.datasets.test_dataset": [[70, "module-graphnet.datasets.test_dataset", false]], "graphnet.deployment": [[71, "module-graphnet.deployment", false]], "graphnet.deployment.deployer": [[72, "module-graphnet.deployment.deployer", false]], "graphnet.deployment.deployment_module": [[73, "module-graphnet.deployment.deployment_module", false]], "graphnet.deployment.i3modules": [[74, "module-graphnet.deployment.i3modules", false]], "graphnet.deployment.i3modules.deprecated_methods": [[75, "module-graphnet.deployment.i3modules.deprecated_methods", false]], "graphnet.deployment.icecube": [[76, "module-graphnet.deployment.icecube", false]], "graphnet.deployment.icecube.cleaning_module": [[77, "module-graphnet.deployment.icecube.cleaning_module", false]], "graphnet.deployment.icecube.i3deployer": [[78, "module-graphnet.deployment.icecube.i3deployer", false]], "graphnet.deployment.icecube.inference_module": [[79, "module-graphnet.deployment.icecube.inference_module", false]], "graphnet.exceptions": [[80, "module-graphnet.exceptions", false]], "graphnet.exceptions.exceptions": [[81, "module-graphnet.exceptions.exceptions", false]], "graphnet.models": [[82, "module-graphnet.models", false]], "graphnet.models.coarsening": [[83, "module-graphnet.models.coarsening", false]], "graphnet.models.components": [[84, "module-graphnet.models.components", false]], "graphnet.models.components.embedding": [[85, "module-graphnet.models.components.embedding", false]], "graphnet.models.components.layers": [[86, "module-graphnet.models.components.layers", false]], "graphnet.models.components.pool": [[87, "module-graphnet.models.components.pool", false]], "graphnet.models.data_representation": [[88, "module-graphnet.models.data_representation", false]], "graphnet.models.data_representation.data_representation": [[89, "module-graphnet.models.data_representation.data_representation", false]], "graphnet.models.data_representation.graphs": [[90, "module-graphnet.models.data_representation.graphs", false]], "graphnet.models.data_representation.graphs.edges": [[91, "module-graphnet.models.data_representation.graphs.edges", false]], "graphnet.models.data_representation.graphs.edges.edges": [[92, "module-graphnet.models.data_representation.graphs.edges.edges", false]], "graphnet.models.data_representation.graphs.edges.minkowski": [[93, "module-graphnet.models.data_representation.graphs.edges.minkowski", false]], "graphnet.models.data_representation.graphs.graph_definition": [[94, "module-graphnet.models.data_representation.graphs.graph_definition", false]], "graphnet.models.data_representation.graphs.graphs": [[95, "module-graphnet.models.data_representation.graphs.graphs", false]], "graphnet.models.data_representation.graphs.nodes": [[96, "module-graphnet.models.data_representation.graphs.nodes", false]], "graphnet.models.data_representation.graphs.nodes.nodes": [[97, "module-graphnet.models.data_representation.graphs.nodes.nodes", false]], "graphnet.models.data_representation.graphs.utils": [[98, "module-graphnet.models.data_representation.graphs.utils", false]], "graphnet.models.detector": [[99, "module-graphnet.models.detector", false]], "graphnet.models.detector.detector": [[100, "module-graphnet.models.detector.detector", false]], "graphnet.models.detector.icecube": [[101, "module-graphnet.models.detector.icecube", false]], "graphnet.models.detector.liquido": [[102, "module-graphnet.models.detector.liquido", false]], "graphnet.models.detector.prometheus": [[103, "module-graphnet.models.detector.prometheus", false]], "graphnet.models.easy_model": [[104, "module-graphnet.models.easy_model", false]], "graphnet.models.gnn": [[105, "module-graphnet.models.gnn", false]], "graphnet.models.gnn.convnet": [[107, "module-graphnet.models.gnn.convnet", false]], "graphnet.models.gnn.dynedge": [[108, "module-graphnet.models.gnn.dynedge", false]], "graphnet.models.gnn.dynedge_jinst": [[109, "module-graphnet.models.gnn.dynedge_jinst", false]], "graphnet.models.gnn.dynedge_kaggle_tito": [[110, "module-graphnet.models.gnn.dynedge_kaggle_tito", false]], "graphnet.models.gnn.gnn": [[111, "module-graphnet.models.gnn.gnn", false]], "graphnet.models.gnn.grit": [[112, "module-graphnet.models.gnn.grit", false]], "graphnet.models.gnn.icemix": [[113, "module-graphnet.models.gnn.icemix", false]], "graphnet.models.gnn.particlenet": [[114, "module-graphnet.models.gnn.particlenet", false]], "graphnet.models.gnn.rnn_tito": [[106, "module-graphnet.models.gnn.RNN_tito", false]], "graphnet.models.graphs": [[115, "module-graphnet.models.graphs", false]], "graphnet.models.graphs.edges": [[116, "module-graphnet.models.graphs.edges", false]], "graphnet.models.graphs.edges.minkowski": [[117, "module-graphnet.models.graphs.edges.minkowski", false]], "graphnet.models.graphs.nodes": [[118, "module-graphnet.models.graphs.nodes", false]], "graphnet.models.model": [[119, "module-graphnet.models.model", false]], "graphnet.models.normalizing_flow": [[120, "module-graphnet.models.normalizing_flow", false]], "graphnet.models.rnn": [[121, "module-graphnet.models.rnn", false]], "graphnet.models.rnn.node_rnn": [[122, "module-graphnet.models.rnn.node_rnn", false]], "graphnet.models.standard_averaged_model": [[123, "module-graphnet.models.standard_averaged_model", false]], "graphnet.models.standard_model": [[124, "module-graphnet.models.standard_model", false]], "graphnet.models.task": [[125, "module-graphnet.models.task", false]], "graphnet.models.task.classification": [[126, "module-graphnet.models.task.classification", false]], "graphnet.models.task.reconstruction": [[127, "module-graphnet.models.task.reconstruction", false]], "graphnet.models.task.task": [[128, "module-graphnet.models.task.task", false]], "graphnet.models.transformer": [[129, "module-graphnet.models.transformer", false]], "graphnet.models.transformer.iseecube": [[130, "module-graphnet.models.transformer.iseecube", false]], "graphnet.models.utils": [[131, "module-graphnet.models.utils", false]], "graphnet.training": [[132, "module-graphnet.training", false]], "graphnet.training.callbacks": [[133, "module-graphnet.training.callbacks", false]], "graphnet.training.labels": [[134, "module-graphnet.training.labels", false]], "graphnet.training.loss_functions": [[135, "module-graphnet.training.loss_functions", false]], "graphnet.training.utils": [[136, "module-graphnet.training.utils", false]], "graphnet.training.weight_fitting": [[137, "module-graphnet.training.weight_fitting", false]], "graphnet.utilities": [[138, "module-graphnet.utilities", false]], "graphnet.utilities.argparse": [[139, "module-graphnet.utilities.argparse", false]], "graphnet.utilities.config": [[140, "module-graphnet.utilities.config", false]], "graphnet.utilities.config.base_config": [[141, "module-graphnet.utilities.config.base_config", false]], "graphnet.utilities.config.configurable": [[142, "module-graphnet.utilities.config.configurable", false]], "graphnet.utilities.config.dataset_config": [[143, "module-graphnet.utilities.config.dataset_config", false]], "graphnet.utilities.config.model_config": [[144, "module-graphnet.utilities.config.model_config", false]], "graphnet.utilities.config.parsing": [[145, "module-graphnet.utilities.config.parsing", false]], "graphnet.utilities.config.training_config": [[146, "module-graphnet.utilities.config.training_config", false]], "graphnet.utilities.decorators": [[147, "module-graphnet.utilities.decorators", false]], "graphnet.utilities.deprecation_tools": [[148, "module-graphnet.utilities.deprecation_tools", false]], "graphnet.utilities.filesys": [[149, "module-graphnet.utilities.filesys", false]], "graphnet.utilities.imports": [[150, "module-graphnet.utilities.imports", false]], "graphnet.utilities.logging": [[151, "module-graphnet.utilities.logging", false]], "graphnet.utilities.maths": [[152, "module-graphnet.utilities.maths", false]], "graphnetdatamodule (class in graphnet.data.datamodule)": [[9, "graphnet.data.datamodule.GraphNeTDataModule", false]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[133, "graphnet.training.callbacks.GraphnetEarlyStopping", false]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[51, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader", false]], "graphneti3deployer (class in graphnet.deployment.i3modules.deprecated_methods)": [[75, "graphnet.deployment.i3modules.deprecated_methods.GraphNeTI3Deployer", false]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[64, "graphnet.data.writers.graphnet_writer.GraphNeTWriter", false]], "grit (class in graphnet.models.gnn.grit)": [[112, "graphnet.models.gnn.grit.GRIT", false]], "gritsparsemha (class in graphnet.models.components.layers)": [[86, "graphnet.models.components.layers.GritSparseMHA", false]], "grittransformerlayer (class in graphnet.models.components.layers)": [[86, "graphnet.models.components.layers.GritTransformerLayer", false]], "group_by() (in module graphnet.models.components.pool)": [[87, "graphnet.models.components.pool.group_by", false]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[87, "graphnet.models.components.pool.group_pulses_to_dom", false]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[87, "graphnet.models.components.pool.group_pulses_to_pmt", false]], "h5extractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[43, "graphnet.data.extractors.liquido.h5_extractor.H5Extractor", false]], "h5hitextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[43, "graphnet.data.extractors.liquido.h5_extractor.H5HitExtractor", false]], "h5truthextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[43, "graphnet.data.extractors.liquido.h5_extractor.H5TruthExtractor", false]], "handlers (graphnet.utilities.logging.logger property)": [[151, "graphnet.utilities.logging.Logger.handlers", false]], "has_extension() (in module graphnet.utilities.filesys)": [[149, "graphnet.utilities.filesys.has_extension", false]], "has_icecube_package() (in module graphnet.utilities.imports)": [[150, "graphnet.utilities.imports.has_icecube_package", false]], "has_jammy_flows_package() (in module graphnet.utilities.imports)": [[150, "graphnet.utilities.imports.has_jammy_flows_package", false]], "has_torch_package() (in module graphnet.utilities.imports)": [[150, "graphnet.utilities.imports.has_torch_package", false]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.i3_file", false]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.i3_files", false]], "i3deployer (class in graphnet.deployment.icecube.i3deployer)": [[78, "graphnet.deployment.icecube.i3deployer.I3Deployer", false]], "i3dictvalueextractor (class in graphnet.data.extractors.icecube.i3dictvalueextractor)": [[21, "graphnet.data.extractors.icecube.i3dictvalueextractor.I3DictValueExtractor", false]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[22, "graphnet.data.extractors.icecube.i3extractor.I3Extractor", false]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[23, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor", false]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[23, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86", false]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[23, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore", false]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[23, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade", false]], "i3fileset (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.I3FileSet", false]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[38, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter", false]], "i3filtermapextractor (class in graphnet.data.extractors.icecube.i3filtermapextractor)": [[24, "graphnet.data.extractors.icecube.i3filtermapextractor.I3FilterMapExtractor", false]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[38, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask", false]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[26, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor", false]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[25, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor", false]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[79, "graphnet.deployment.icecube.inference_module.I3InferenceModule", false]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[27, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor", false]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[28, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor", false]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[29, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor", false]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[77, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule", false]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[23, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade", false]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[30, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor", false]], "i3reader (class in graphnet.data.readers.i3reader)": [[52, "graphnet.data.readers.i3reader.I3Reader", false]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[31, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor", false]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[32, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor", false]], "i3toparquetconverter (class in graphnet.data.pre_configured.dataconverters)": [[49, "graphnet.data.pre_configured.dataconverters.I3ToParquetConverter", false]], "i3tosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[49, "graphnet.data.pre_configured.dataconverters.I3ToSQLiteConverter", false]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[33, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor", false]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[34, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor", false]], "ice_transparency() (in module graphnet.models.data_representation.graphs.utils)": [[98, "graphnet.models.data_representation.graphs.utils.ice_transparency", false]], "icecube86 (class in graphnet.models.detector.icecube)": [[101, "graphnet.models.detector.icecube.IceCube86", false]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86", false]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86", false]], "icecube86prometheus (class in graphnet.models.detector.prometheus)": [[103, "graphnet.models.detector.prometheus.IceCube86Prometheus", false]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[101, "graphnet.models.detector.icecube.IceCubeDeepCore", false]], "icecubedeepcore8 (class in graphnet.models.detector.prometheus)": [[103, "graphnet.models.detector.prometheus.IceCubeDeepCore8", false]], "icecubegen2 (class in graphnet.models.detector.prometheus)": [[103, "graphnet.models.detector.prometheus.IceCubeGen2", false]], "icecubehosteddataset (class in graphnet.data.curated_datamodule)": [[5, "graphnet.data.curated_datamodule.IceCubeHostedDataset", false]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[101, "graphnet.models.detector.icecube.IceCubeKaggle", false]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[101, "graphnet.models.detector.icecube.IceCubeUpgrade", false]], "icecubeupgrade7 (class in graphnet.models.detector.prometheus)": [[103, "graphnet.models.detector.prometheus.IceCubeUpgrade7", false]], "icedemo81 (class in graphnet.models.detector.prometheus)": [[103, "graphnet.models.detector.prometheus.IceDemo81", false]], "icemixnodes (class in graphnet.models.data_representation.graphs.nodes.nodes)": [[97, "graphnet.models.data_representation.graphs.nodes.nodes.IceMixNodes", false]], "identify_indices() (in module graphnet.models.data_representation.graphs.utils)": [[98, "graphnet.models.data_representation.graphs.utils.identify_indices", false]], "identitytask (class in graphnet.models.task.task)": [[128, "graphnet.models.task.task.IdentityTask", false]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column", false]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[127, "graphnet.models.task.reconstruction.InelasticityReconstruction", false]], "inference() (graphnet.models.easy_model.easysyntax method)": [[104, "graphnet.models.easy_model.EasySyntax.inference", false]], "inference() (graphnet.models.task.task.task method)": [[128, "graphnet.models.task.task.Task.inference", false]], "info() (graphnet.utilities.logging.logger method)": [[151, "graphnet.utilities.logging.Logger.info", false]], "init_global_index() (in module graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.init_global_index", false]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[133, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm", false]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[133, "graphnet.training.callbacks.ProgressBar.init_test_tqdm", false]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[133, "graphnet.training.callbacks.ProgressBar.init_train_tqdm", false]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[133, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm", false]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[39, "graphnet.data.extractors.icecube.utilities.types.is_boost_class", false]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[39, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum", false]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[149, "graphnet.utilities.filesys.is_gcd_file", false]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[145, "graphnet.utilities.config.parsing.is_graphnet_class", false]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[145, "graphnet.utilities.config.parsing.is_graphnet_module", false]], "is_i3_file() (in module graphnet.utilities.filesys)": [[149, "graphnet.utilities.filesys.is_i3_file", false]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[39, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class", false]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[39, "graphnet.data.extractors.icecube.utilities.types.is_method", false]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[39, "graphnet.data.extractors.icecube.utilities.types.is_type", false]], "iseecube (class in graphnet.models.transformer.iseecube)": [[130, "graphnet.models.transformer.iseecube.ISeeCube", false]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE", false]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE", false]], "key (graphnet.training.labels.label property)": [[134, "graphnet.training.labels.Label.key", false]], "knn_graph_batch() (in module graphnet.models.utils)": [[131, "graphnet.models.utils.knn_graph_batch", false]], "knndistanceedges (class in graphnet.models.data_representation.graphs.edges.edges)": [[92, "graphnet.models.data_representation.graphs.edges.edges.KNNDistanceEdges", false]], "knnedges (class in graphnet.models.data_representation.graphs.edges.edges)": [[92, "graphnet.models.data_representation.graphs.edges.edges.KNNEdges", false]], "knngraph (class in graphnet.models.data_representation.graphs.graphs)": [[95, "graphnet.models.data_representation.graphs.graphs.KNNGraph", false]], "knngraphrrwp (class in graphnet.models.data_representation.graphs.graphs)": [[95, "graphnet.models.data_representation.graphs.graphs.KNNGraphRRWP", false]], "knngraphrwse (class in graphnet.models.data_representation.graphs.graphs)": [[95, "graphnet.models.data_representation.graphs.graphs.KNNGraphRWSE", false]], "label (class in graphnet.training.labels)": [[134, "graphnet.training.labels.Label", false]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.labels", false]], "learnedtask (class in graphnet.models.task.task)": [[128, "graphnet.models.task.task.LearnedTask", false]], "lenmatchbatchsampler (class in graphnet.data.dataset.samplers)": [[14, "graphnet.data.dataset.samplers.LenMatchBatchSampler", false]], "lex_sort() (in module graphnet.models.data_representation.graphs.utils)": [[98, "graphnet.models.data_representation.graphs.utils.lex_sort", false]], "linearedgeencoder (class in graphnet.models.components.embedding)": [[85, "graphnet.models.components.embedding.LinearEdgeEncoder", false]], "linearnodeencoder (class in graphnet.models.components.embedding)": [[85, "graphnet.models.components.embedding.LinearNodeEncoder", false]], "liquido (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.LIQUIDO", false]], "liquido (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.LIQUIDO", false]], "liquido_v1 (class in graphnet.models.detector.liquido)": [[102, "graphnet.models.detector.liquido.LiquidO_v1", false]], "liquidoreader (class in graphnet.data.readers.liquido_reader)": [[54, "graphnet.data.readers.liquido_reader.LiquidOReader", false]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[145, "graphnet.utilities.config.parsing.list_all_submodules", false]], "load() (graphnet.models.model.model class method)": [[119, "graphnet.models.model.Model.load", false]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[141, "graphnet.utilities.config.base_config.BaseConfig.load", false]], "load_module() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.load_module", false]], "load_state_dict() (graphnet.models.model.model method)": [[119, "graphnet.models.model.Model.load_state_dict", false]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[123, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict", false]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[135, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk", false]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[135, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx", false]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[135, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact", false]], "logcmk (class in graphnet.training.loss_functions)": [[135, "graphnet.training.loss_functions.LogCMK", false]], "logcoshloss (class in graphnet.training.loss_functions)": [[135, "graphnet.training.loss_functions.LogCoshLoss", false]], "logger (class in graphnet.utilities.logging)": [[151, "graphnet.utilities.logging.Logger", false]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column", false]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value", false]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table", false]], "lossfunction (class in graphnet.training.loss_functions)": [[135, "graphnet.training.loss_functions.LossFunction", false]], "maeloss (class in graphnet.training.loss_functions)": [[135, "graphnet.training.loss_functions.MAELoss", false]], "make_dataloader() (in module graphnet.training.utils)": [[136, "graphnet.training.utils.make_dataloader", false]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[136, "graphnet.training.utils.make_train_validation_dataloader", false]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.merge_files", false]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[64, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files", false]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[65, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files", false]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[66, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files", false]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[86, "graphnet.models.components.layers.EdgeConvTito.message", false]], "min_pool() (in module graphnet.models.components.pool)": [[87, "graphnet.models.components.pool.min_pool", false]], "min_pool_x() (in module graphnet.models.components.pool)": [[87, "graphnet.models.components.pool.min_pool_x", false]], "minkowskiknnedges (class in graphnet.models.data_representation.graphs.edges.minkowski)": [[93, "graphnet.models.data_representation.graphs.edges.minkowski.MinkowskiKNNEdges", false]], "mlp (class in graphnet.models.components.layers)": [[86, "graphnet.models.components.layers.Mlp", false]], "model (class in graphnet.models.model)": [[119, "graphnet.models.model.Model", false]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[141, "graphnet.utilities.config.base_config.BaseConfig.model_config", false]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config", false]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[144, "graphnet.utilities.config.model_config.ModelConfig.model_config", false]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[146, "graphnet.utilities.config.training_config.TrainingConfig.model_config", false]], "modelconfig (class in graphnet.utilities.config.model_config)": [[144, "graphnet.utilities.config.model_config.ModelConfig", false]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[144, "graphnet.utilities.config.model_config.ModelConfigSaverABC", false]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[144, "graphnet.utilities.config.model_config.ModelConfigSaverMeta", false]], "module": [[1, "module-graphnet", false], [2, "module-graphnet.constants", false], [3, "module-graphnet.data", false], [4, "module-graphnet.data.constants", false], [5, "module-graphnet.data.curated_datamodule", false], [6, "module-graphnet.data.dataclasses", false], [7, "module-graphnet.data.dataconverter", false], [8, "module-graphnet.data.dataloader", false], [9, "module-graphnet.data.datamodule", false], [10, "module-graphnet.data.dataset", false], [11, "module-graphnet.data.dataset.dataset", false], [12, "module-graphnet.data.dataset.parquet", false], [13, "module-graphnet.data.dataset.parquet.parquet_dataset", false], [14, "module-graphnet.data.dataset.samplers", false], [15, "module-graphnet.data.dataset.sqlite", false], [16, "module-graphnet.data.dataset.sqlite.sqlite_dataset", false], [17, "module-graphnet.data.extractors", false], [18, "module-graphnet.data.extractors.combine_extractors", false], [19, "module-graphnet.data.extractors.extractor", false], [20, "module-graphnet.data.extractors.icecube", false], [21, "module-graphnet.data.extractors.icecube.i3dictvalueextractor", false], [22, "module-graphnet.data.extractors.icecube.i3extractor", false], [23, "module-graphnet.data.extractors.icecube.i3featureextractor", false], [24, "module-graphnet.data.extractors.icecube.i3filtermapextractor", false], [25, "module-graphnet.data.extractors.icecube.i3genericextractor", false], [26, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false], [27, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false], [28, "module-graphnet.data.extractors.icecube.i3particleextractor", false], [29, "module-graphnet.data.extractors.icecube.i3pisaextractor", false], [30, "module-graphnet.data.extractors.icecube.i3quesoextractor", false], [31, "module-graphnet.data.extractors.icecube.i3retroextractor", false], [32, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false], [33, "module-graphnet.data.extractors.icecube.i3truthextractor", false], [34, "module-graphnet.data.extractors.icecube.i3tumextractor", false], [35, "module-graphnet.data.extractors.icecube.utilities", false], [36, "module-graphnet.data.extractors.icecube.utilities.collections", false], [37, "module-graphnet.data.extractors.icecube.utilities.frames", false], [38, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false], [39, "module-graphnet.data.extractors.icecube.utilities.types", false], [40, "module-graphnet.data.extractors.internal", false], [41, "module-graphnet.data.extractors.internal.parquet_extractor", false], [42, "module-graphnet.data.extractors.liquido", false], [43, "module-graphnet.data.extractors.liquido.h5_extractor", false], [44, "module-graphnet.data.extractors.prometheus", false], [45, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false], [46, "module-graphnet.data.parquet", false], [47, "module-graphnet.data.parquet.deprecated_methods", false], [48, "module-graphnet.data.pre_configured", false], [49, "module-graphnet.data.pre_configured.dataconverters", false], [50, "module-graphnet.data.readers", false], [51, "module-graphnet.data.readers.graphnet_file_reader", false], [52, "module-graphnet.data.readers.i3reader", false], [53, "module-graphnet.data.readers.internal_parquet_reader", false], [54, "module-graphnet.data.readers.liquido_reader", false], [55, "module-graphnet.data.readers.prometheus_reader", false], [56, "module-graphnet.data.sqlite", false], [57, "module-graphnet.data.sqlite.deprecated_methods", false], [58, "module-graphnet.data.utilities", false], [59, "module-graphnet.data.utilities.parquet_to_sqlite", false], [60, "module-graphnet.data.utilities.random", false], [61, "module-graphnet.data.utilities.sqlite_utilities", false], [62, "module-graphnet.data.utilities.string_selection_resolver", false], [63, "module-graphnet.data.writers", false], [64, "module-graphnet.data.writers.graphnet_writer", false], [65, "module-graphnet.data.writers.parquet_writer", false], [66, "module-graphnet.data.writers.sqlite_writer", false], [67, "module-graphnet.datasets", false], [68, "module-graphnet.datasets.prometheus_datasets", false], [69, "module-graphnet.datasets.snowstorm_dataset", false], [70, "module-graphnet.datasets.test_dataset", false], [71, "module-graphnet.deployment", false], [72, "module-graphnet.deployment.deployer", false], [73, "module-graphnet.deployment.deployment_module", false], [74, "module-graphnet.deployment.i3modules", false], [75, "module-graphnet.deployment.i3modules.deprecated_methods", false], [76, "module-graphnet.deployment.icecube", false], [77, "module-graphnet.deployment.icecube.cleaning_module", false], [78, "module-graphnet.deployment.icecube.i3deployer", false], [79, "module-graphnet.deployment.icecube.inference_module", false], [80, "module-graphnet.exceptions", false], [81, "module-graphnet.exceptions.exceptions", false], [82, "module-graphnet.models", false], [83, "module-graphnet.models.coarsening", false], [84, "module-graphnet.models.components", false], [85, "module-graphnet.models.components.embedding", false], [86, "module-graphnet.models.components.layers", false], [87, "module-graphnet.models.components.pool", false], [88, "module-graphnet.models.data_representation", false], [89, "module-graphnet.models.data_representation.data_representation", false], [90, "module-graphnet.models.data_representation.graphs", false], [91, "module-graphnet.models.data_representation.graphs.edges", false], [92, "module-graphnet.models.data_representation.graphs.edges.edges", false], [93, "module-graphnet.models.data_representation.graphs.edges.minkowski", false], [94, "module-graphnet.models.data_representation.graphs.graph_definition", false], [95, "module-graphnet.models.data_representation.graphs.graphs", false], [96, "module-graphnet.models.data_representation.graphs.nodes", false], [97, "module-graphnet.models.data_representation.graphs.nodes.nodes", false], [98, "module-graphnet.models.data_representation.graphs.utils", false], [99, "module-graphnet.models.detector", false], [100, "module-graphnet.models.detector.detector", false], [101, "module-graphnet.models.detector.icecube", false], [102, "module-graphnet.models.detector.liquido", false], [103, "module-graphnet.models.detector.prometheus", false], [104, "module-graphnet.models.easy_model", false], [105, "module-graphnet.models.gnn", false], [106, "module-graphnet.models.gnn.RNN_tito", false], [107, "module-graphnet.models.gnn.convnet", false], [108, "module-graphnet.models.gnn.dynedge", false], [109, "module-graphnet.models.gnn.dynedge_jinst", false], [110, "module-graphnet.models.gnn.dynedge_kaggle_tito", false], [111, "module-graphnet.models.gnn.gnn", false], [112, "module-graphnet.models.gnn.grit", false], [113, "module-graphnet.models.gnn.icemix", false], [114, "module-graphnet.models.gnn.particlenet", false], [115, "module-graphnet.models.graphs", false], [116, "module-graphnet.models.graphs.edges", false], [117, "module-graphnet.models.graphs.edges.minkowski", false], [118, "module-graphnet.models.graphs.nodes", false], [119, "module-graphnet.models.model", false], [120, "module-graphnet.models.normalizing_flow", false], [121, "module-graphnet.models.rnn", false], [122, "module-graphnet.models.rnn.node_rnn", false], [123, "module-graphnet.models.standard_averaged_model", false], [124, "module-graphnet.models.standard_model", false], [125, "module-graphnet.models.task", false], [126, "module-graphnet.models.task.classification", false], [127, "module-graphnet.models.task.reconstruction", false], [128, "module-graphnet.models.task.task", false], [129, "module-graphnet.models.transformer", false], [130, "module-graphnet.models.transformer.iseecube", false], [131, "module-graphnet.models.utils", false], [132, "module-graphnet.training", false], [133, "module-graphnet.training.callbacks", false], [134, "module-graphnet.training.labels", false], [135, "module-graphnet.training.loss_functions", false], [136, "module-graphnet.training.utils", false], [137, "module-graphnet.training.weight_fitting", false], [138, "module-graphnet.utilities", false], [139, "module-graphnet.utilities.argparse", false], [140, "module-graphnet.utilities.config", false], [141, "module-graphnet.utilities.config.base_config", false], [142, "module-graphnet.utilities.config.configurable", false], [143, "module-graphnet.utilities.config.dataset_config", false], [144, "module-graphnet.utilities.config.model_config", false], [145, "module-graphnet.utilities.config.parsing", false], [146, "module-graphnet.utilities.config.training_config", false], [147, "module-graphnet.utilities.decorators", false], [148, "module-graphnet.utilities.deprecation_tools", false], [149, "module-graphnet.utilities.filesys", false], [150, "module-graphnet.utilities.imports", false], [151, "module-graphnet.utilities.logging", false], [152, "module-graphnet.utilities.maths", false]], "modules (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.modules", false]], "mseloss (class in graphnet.training.loss_functions)": [[135, "graphnet.training.loss_functions.MSELoss", false]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[126, "graphnet.models.task.classification.MulticlassClassificationTask", false]], "name (graphnet.data.extractors.extractor.extractor property)": [[19, "graphnet.data.extractors.extractor.Extractor.name", false]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[111, "graphnet.models.gnn.gnn.GNN.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[126, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[126, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[127, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[127, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[127, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[127, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[127, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[127, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[127, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[128, "graphnet.models.task.task.IdentityTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[128, "graphnet.models.task.task.LearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[128, "graphnet.models.task.task.StandardLearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.task property)": [[128, "graphnet.models.task.task.Task.nb_inputs", false]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[128, "graphnet.models.task.task.StandardFlowTask.nb_inputs", false]], "nb_outputs (graphnet.models.data_representation.data_representation.datarepresentation property)": [[89, "graphnet.models.data_representation.data_representation.DataRepresentation.nb_outputs", false]], "nb_outputs (graphnet.models.data_representation.graphs.nodes.nodes.nodedefinition property)": [[97, "graphnet.models.data_representation.graphs.nodes.nodes.NodeDefinition.nb_outputs", false]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[111, "graphnet.models.gnn.gnn.GNN.nb_outputs", false]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[151, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed", false]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[113, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay", false]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[122, "graphnet.models.rnn.node_rnn.Node_RNN", false]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth", false]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table", false]], "nodeasdomtimeseries (class in graphnet.models.data_representation.graphs.nodes.nodes)": [[97, "graphnet.models.data_representation.graphs.nodes.nodes.NodeAsDOMTimeSeries", false]], "nodedefinition (class in graphnet.models.data_representation.graphs.nodes.nodes)": [[97, "graphnet.models.data_representation.graphs.nodes.nodes.NodeDefinition", false]], "nodesaspulses (class in graphnet.models.data_representation.graphs.nodes.nodes)": [[97, "graphnet.models.data_representation.graphs.nodes.nodes.NodesAsPulses", false]], "normalizingflow (class in graphnet.models.normalizing_flow)": [[120, "graphnet.models.normalizing_flow.NormalizingFlow", false]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[38, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter", false]], "num_samples (graphnet.data.dataset.samplers.randomchunksampler property)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler.num_samples", false]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[133, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end", false]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[123, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[133, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[133, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end", false]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[133, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start", false]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[133, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end", false]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[123, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step", false]], "options (class in graphnet.utilities.argparse)": [[139, "graphnet.utilities.argparse.Options", false]], "orca150 (class in graphnet.models.detector.prometheus)": [[103, "graphnet.models.detector.prometheus.ORCA150", false]], "orca150superdense (class in graphnet.models.detector.prometheus)": [[103, "graphnet.models.detector.prometheus.ORCA150SuperDense", false]], "output_feature_names (graphnet.models.data_representation.data_representation.datarepresentation property)": [[89, "graphnet.models.data_representation.data_representation.DataRepresentation.output_feature_names", false]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.output_folder", false]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[60, "graphnet.data.utilities.random.pairwise_shuffle", false]], "parquetdataconverter (class in graphnet.data.parquet.deprecated_methods)": [[47, "graphnet.data.parquet.deprecated_methods.ParquetDataConverter", false]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset", false]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[41, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor", false]], "parquetreader (class in graphnet.data.readers.internal_parquet_reader)": [[53, "graphnet.data.readers.internal_parquet_reader.ParquetReader", false]], "parquettosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[49, "graphnet.data.pre_configured.dataconverters.ParquetToSQLiteConverter", false]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[65, "graphnet.data.writers.parquet_writer.ParquetWriter", false]], "parse_data_representation() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.parse_data_representation", false]], "parse_labels() (in module graphnet.data.dataset.dataset)": [[11, "graphnet.data.dataset.dataset.parse_labels", false]], "particlenet (class in graphnet.models.gnn.particlenet)": [[114, "graphnet.models.gnn.particlenet.ParticleNeT", false]], "path (graphnet.data.dataset.dataset.dataset property)": [[11, "graphnet.data.dataset.dataset.Dataset.path", false]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.path", false]], "percentileclusters (class in graphnet.models.data_representation.graphs.nodes.nodes)": [[97, "graphnet.models.data_representation.graphs.nodes.nodes.PercentileClusters", false]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[133, "graphnet.training.callbacks.PiecewiseLinearLR", false]], "ponesmall (class in graphnet.datasets.prometheus_datasets)": [[68, "graphnet.datasets.prometheus_datasets.PONESmall", false]], "ponetriangle (class in graphnet.models.detector.prometheus)": [[103, "graphnet.models.detector.prometheus.PONETriangle", false]], "pop_default() (graphnet.utilities.argparse.options method)": [[139, "graphnet.utilities.argparse.Options.pop_default", false]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[127, "graphnet.models.task.reconstruction.PositionReconstruction", false]], "predict() (graphnet.models.easy_model.easysyntax method)": [[104, "graphnet.models.easy_model.EasySyntax.predict", false]], "predict_as_dataframe() (graphnet.models.easy_model.easysyntax method)": [[104, "graphnet.models.easy_model.EasySyntax.predict_as_dataframe", false]], "prediction_labels (graphnet.models.easy_model.easysyntax property)": [[104, "graphnet.models.easy_model.EasySyntax.prediction_labels", false]], "prepare_data() (graphnet.data.curated_datamodule.curateddataset method)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.prepare_data", false]], "prepare_data() (graphnet.data.curated_datamodule.erdahosteddataset method)": [[5, "graphnet.data.curated_datamodule.ERDAHostedDataset.prepare_data", false]], "prepare_data() (graphnet.data.curated_datamodule.icecubehosteddataset method)": [[5, "graphnet.data.curated_datamodule.IceCubeHostedDataset.prepare_data", false]], "prepare_data() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.prepare_data", false]], "progressbar (class in graphnet.training.callbacks)": [[133, "graphnet.training.callbacks.ProgressBar", false]], "prometheus (class in graphnet.models.detector.prometheus)": [[103, "graphnet.models.detector.prometheus.Prometheus", false]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS", false]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS", false]], "prometheusextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[45, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusExtractor", false]], "prometheusfeatureextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[45, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusFeatureExtractor", false]], "prometheusreader (class in graphnet.data.readers.prometheus_reader)": [[55, "graphnet.data.readers.prometheus_reader.PrometheusReader", false]], "prometheustruthextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[45, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusTruthExtractor", false]], "publicprometheusdataset (class in graphnet.datasets.prometheus_datasets)": [[68, "graphnet.datasets.prometheus_datasets.PublicPrometheusDataset", false]], "pulse_truth (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.pulse_truth", false]], "pulsemaps (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.pulsemaps", false]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps", false]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[61, "graphnet.data.utilities.sqlite_utilities.query_database", false]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[11, "graphnet.data.dataset.dataset.Dataset.query_table", false]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[13, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table", false]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[16, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table", false]], "radialedges (class in graphnet.models.data_representation.graphs.edges.edges)": [[92, "graphnet.models.data_representation.graphs.edges.edges.RadialEdges", false]], "randomchunksampler (class in graphnet.data.dataset.samplers)": [[14, "graphnet.data.dataset.samplers.RandomChunkSampler", false]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[83, "graphnet.models.coarsening.Coarsening.reduce_options", false]], "reference_time() (graphnet.models.data_representation.graphs.utils.cluster_and_pad method)": [[98, "graphnet.models.data_representation.graphs.utils.cluster_and_pad.reference_time", false]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[148, "graphnet.utilities.deprecation_tools.rename_state_dict_entries", false]], "repeatfilter (class in graphnet.utilities.logging)": [[151, "graphnet.utilities.logging.RepeatFilter", false]], "requires_icecube() (in module graphnet.utilities.imports)": [[150, "graphnet.utilities.imports.requires_icecube", false]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[86, "graphnet.models.components.layers.EdgeConvTito.reset_parameters", false]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[62, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve", false]], "rmseloss (class in graphnet.training.loss_functions)": [[135, "graphnet.training.loss_functions.RMSELoss", false]], "rmsevonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[135, "graphnet.training.loss_functions.RMSEVonMisesFisher3DLoss", false]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[106, "graphnet.models.gnn.RNN_tito.RNN_TITO", false]], "rrwplinearedgeencoder (class in graphnet.models.components.embedding)": [[85, "graphnet.models.components.embedding.RRWPLinearEdgeEncoder", false]], "rrwplinearnodeencoder (class in graphnet.models.components.embedding)": [[85, "graphnet.models.components.embedding.RRWPLinearNodeEncoder", false]], "run() (graphnet.deployment.deployer.deployer method)": [[72, "graphnet.deployment.deployer.Deployer.run", false]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[61, "graphnet.data.utilities.sqlite_utilities.run_sql_code", false]], "rwselinearnodeencoder (class in graphnet.models.components.embedding)": [[85, "graphnet.models.components.embedding.RWSELinearNodeEncoder", false]], "sangraphhead (class in graphnet.models.components.layers)": [[86, "graphnet.models.components.layers.SANGraphHead", false]], "save() (graphnet.models.model.model method)": [[119, "graphnet.models.model.Model.save", false]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[142, "graphnet.utilities.config.configurable.Configurable.save_config", false]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[143, "graphnet.utilities.config.dataset_config.save_dataset_config", false]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[144, "graphnet.utilities.config.model_config.save_model_config", false]], "save_results() (in module graphnet.training.utils)": [[136, "graphnet.training.utils.save_results", false]], "save_selection() (in module graphnet.training.utils)": [[136, "graphnet.training.utils.save_selection", false]], "save_state_dict() (graphnet.models.model.model method)": [[119, "graphnet.models.model.Model.save_state_dict", false]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[61, "graphnet.data.utilities.sqlite_utilities.save_to_sql", false]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.seed", false]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.selection", false]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[101, "graphnet.models.detector.icecube.IceCube86.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[101, "graphnet.models.detector.icecube.IceCubeKaggle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[101, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[102, "graphnet.models.detector.liquido.LiquidO_v1.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[103, "graphnet.models.detector.prometheus.ARCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[103, "graphnet.models.detector.prometheus.BaikalGVD8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[103, "graphnet.models.detector.prometheus.IceCube86Prometheus.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[103, "graphnet.models.detector.prometheus.IceCubeDeepCore8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[103, "graphnet.models.detector.prometheus.IceCubeGen2.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[103, "graphnet.models.detector.prometheus.IceCubeUpgrade7.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[103, "graphnet.models.detector.prometheus.IceDemo81.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[103, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[103, "graphnet.models.detector.prometheus.ORCA150SuperDense.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[103, "graphnet.models.detector.prometheus.PONETriangle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[103, "graphnet.models.detector.prometheus.TRIDENT1211.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[103, "graphnet.models.detector.prometheus.WaterDemo81.sensor_id_column", false]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[100, "graphnet.models.detector.detector.Detector.sensor_index_name", false]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[100, "graphnet.models.detector.detector.Detector.sensor_position_names", false]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[36, "graphnet.data.extractors.icecube.utilities.collections.serialise", false]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[51, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors", false]], "set_gcd() (graphnet.data.extractors.combine_extractors.combinedextractor method)": [[18, "graphnet.data.extractors.combine_extractors.CombinedExtractor.set_gcd", false]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[22, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd", false]], "set_gcd() (graphnet.data.extractors.icecube.i3truthextractor.i3truthextractor method)": [[33, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor.set_gcd", false]], "set_indices() (graphnet.models.data_representation.graphs.nodes.nodes.clustersummaryfeatures method)": [[97, "graphnet.models.data_representation.graphs.nodes.nodes.ClusterSummaryFeatures.set_indices", false]], "set_number_of_inputs() (graphnet.models.data_representation.graphs.nodes.nodes.nodedefinition method)": [[97, "graphnet.models.data_representation.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs", false]], "set_output_feature_names() (graphnet.models.data_representation.graphs.nodes.nodes.nodedefinition method)": [[97, "graphnet.models.data_representation.graphs.nodes.nodes.NodeDefinition.set_output_feature_names", false]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[119, "graphnet.models.model.Model.set_verbose_print_recursively", false]], "setlevel() (graphnet.utilities.logging.logger method)": [[151, "graphnet.utilities.logging.Logger.setLevel", false]], "settings (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.Settings", false]], "setup() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.setup", false]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[133, "graphnet.training.callbacks.GraphnetEarlyStopping.setup", false]], "shared_step() (graphnet.models.easy_model.easysyntax method)": [[104, "graphnet.models.easy_model.EasySyntax.shared_step", false]], "shared_step() (graphnet.models.normalizing_flow.normalizingflow method)": [[120, "graphnet.models.normalizing_flow.NormalizingFlow.shared_step", false]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[124, "graphnet.models.standard_model.StandardModel.shared_step", false]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[85, "graphnet.models.components.embedding.SinusoidalPosEmb", false]], "snowstorm (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.SNOWSTORM", false]], "snowstorm (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.SNOWSTORM", false]], "snowstormdataset (class in graphnet.datasets.snowstorm_dataset)": [[69, "graphnet.datasets.snowstorm_dataset.SnowStormDataset", false]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[85, "graphnet.models.components.embedding.SpacetimeEncoder", false]], "sqlitedataconverter (class in graphnet.data.sqlite.deprecated_methods)": [[57, "graphnet.data.sqlite.deprecated_methods.SQLiteDataConverter", false]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[16, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset", false]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[66, "graphnet.data.writers.sqlite_writer.SQLiteWriter", false]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[139, "graphnet.utilities.argparse.ArgumentParser.standard_arguments", false]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[123, "graphnet.models.standard_averaged_model.StandardAveragedModel", false]], "standardflowtask (class in graphnet.models.task.task)": [[128, "graphnet.models.task.task.StandardFlowTask", false]], "standardlearnedtask (class in graphnet.models.task.task)": [[128, "graphnet.models.task.task.StandardLearnedTask", false]], "standardmodel (class in graphnet.models.standard_model)": [[124, "graphnet.models.standard_model.StandardModel", false]], "std_pool() (in module graphnet.models.components.pool)": [[87, "graphnet.models.components.pool.std_pool", false]], "std_pool_x() (in module graphnet.models.components.pool)": [[87, "graphnet.models.components.pool.std_pool_x", false]], "stream_handlers (graphnet.utilities.logging.logger property)": [[151, "graphnet.utilities.logging.Logger.stream_handlers", false]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[101, "graphnet.models.detector.icecube.IceCube86.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[101, "graphnet.models.detector.icecube.IceCubeKaggle.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[101, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column", false]], "string_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[102, "graphnet.models.detector.liquido.LiquidO_v1.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[103, "graphnet.models.detector.prometheus.ARCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[103, "graphnet.models.detector.prometheus.BaikalGVD8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[103, "graphnet.models.detector.prometheus.IceCube86Prometheus.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[103, "graphnet.models.detector.prometheus.IceCubeDeepCore8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[103, "graphnet.models.detector.prometheus.IceCubeGen2.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[103, "graphnet.models.detector.prometheus.IceCubeUpgrade7.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[103, "graphnet.models.detector.prometheus.IceDemo81.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[103, "graphnet.models.detector.prometheus.ORCA150.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[103, "graphnet.models.detector.prometheus.ORCA150SuperDense.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[103, "graphnet.models.detector.prometheus.PONETriangle.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[103, "graphnet.models.detector.prometheus.TRIDENT1211.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[103, "graphnet.models.detector.prometheus.WaterDemo81.string_id_column", false]], "string_index_name (graphnet.models.detector.detector.detector property)": [[100, "graphnet.models.detector.detector.Detector.string_index_name", false]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection", false]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[62, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver", false]], "subeventstreami3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[38, "graphnet.data.extractors.icecube.utilities.i3_filters.SubEventStreamI3Filter", false]], "sum_pool() (in module graphnet.models.components.pool)": [[87, "graphnet.models.components.pool.sum_pool", false]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[87, "graphnet.models.components.pool.sum_pool_and_distribute", false]], "sum_pool_x() (in module graphnet.models.components.pool)": [[87, "graphnet.models.components.pool.sum_pool_x", false]], "tablefilter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[38, "graphnet.data.extractors.icecube.utilities.i3_filters.TableFilter", false]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[146, "graphnet.utilities.config.training_config.TrainingConfig.target", false]], "target_labels (graphnet.models.easy_model.easysyntax property)": [[104, "graphnet.models.easy_model.EasySyntax.target_labels", false]], "task (class in graphnet.models.task.task)": [[128, "graphnet.models.task.task.Task", false]], "teardown() (graphnet.data.datamodule.graphnetdatamodule method)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.teardown", false]], "test_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.test_dataloader", false]], "testdataset (class in graphnet.datasets.test_dataset)": [[70, "graphnet.datasets.test_dataset.TestDataset", false]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[127, "graphnet.models.task.reconstruction.TimeReconstruction", false]], "track (class in graphnet.training.labels)": [[134, "graphnet.training.labels.Track", false]], "train() (graphnet.models.easy_model.easysyntax method)": [[104, "graphnet.models.easy_model.EasySyntax.train", false]], "train_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.train_dataloader", false]], "train_eval() (graphnet.models.task.task.task method)": [[128, "graphnet.models.task.task.Task.train_eval", false]], "training_step() (graphnet.models.easy_model.easysyntax method)": [[104, "graphnet.models.easy_model.EasySyntax.training_step", false]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[123, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step", false]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[146, "graphnet.utilities.config.training_config.TrainingConfig", false]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[36, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts", false]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[145, "graphnet.utilities.config.parsing.traverse_and_apply", false]], "trident1211 (class in graphnet.models.detector.prometheus)": [[103, "graphnet.models.detector.prometheus.TRIDENT1211", false]], "tridentsmall (class in graphnet.datasets.prometheus_datasets)": [[68, "graphnet.datasets.prometheus_datasets.TRIDENTSmall", false]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH", false]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.truth", false]], "truth_table (graphnet.data.curated_datamodule.curateddataset property)": [[5, "graphnet.data.curated_datamodule.CuratedDataset.truth_table", false]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[11, "graphnet.data.dataset.dataset.Dataset.truth_table", false]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[143, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table", false]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[83, "graphnet.models.coarsening.unbatch_edge_index", false]], "uniform (class in graphnet.training.weight_fitting)": [[137, "graphnet.training.weight_fitting.Uniform", false]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE", false]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE", false]], "val_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[9, "graphnet.data.datamodule.GraphNeTDataModule.val_dataloader", false]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[51, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files", false]], "validate_tasks() (graphnet.models.easy_model.easysyntax method)": [[104, "graphnet.models.easy_model.EasySyntax.validate_tasks", false]], "validate_tasks() (graphnet.models.normalizing_flow.normalizingflow method)": [[120, "graphnet.models.normalizing_flow.NormalizingFlow.validate_tasks", false]], "validate_tasks() (graphnet.models.standard_model.standardmodel method)": [[124, "graphnet.models.standard_model.StandardModel.validate_tasks", false]], "validation_step() (graphnet.models.easy_model.easysyntax method)": [[104, "graphnet.models.easy_model.EasySyntax.validation_step", false]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[123, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step", false]], "verbose_print (graphnet.models.model.model attribute)": [[119, "graphnet.models.model.Model.verbose_print", false]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[127, "graphnet.models.task.reconstruction.VertexReconstruction", false]], "visibleinelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[127, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction", false]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[135, "graphnet.training.loss_functions.VonMisesFisher2DLoss", false]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[135, "graphnet.training.loss_functions.VonMisesFisher3DLoss", false]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[135, "graphnet.training.loss_functions.VonMisesFisherLoss", false]], "warning() (graphnet.utilities.logging.logger method)": [[151, "graphnet.utilities.logging.Logger.warning", false]], "warning_once() (graphnet.utilities.logging.logger method)": [[151, "graphnet.utilities.logging.Logger.warning_once", false]], "waterdemo81 (class in graphnet.models.detector.prometheus)": [[103, "graphnet.models.detector.prometheus.WaterDemo81", false]], "weighted_median() (in module graphnet.models.data_representation.graphs.utils)": [[98, "graphnet.models.data_representation.graphs.utils.weighted_median", false]], "weightfitter (class in graphnet.training.weight_fitting)": [[137, "graphnet.training.weight_fitting.WeightFitter", false]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[139, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments", false]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[101, "graphnet.models.detector.icecube.IceCube86.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubekaggle attribute)": [[101, "graphnet.models.detector.icecube.IceCubeKaggle.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[101, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz", false]], "xyz (graphnet.models.detector.liquido.liquido_v1 attribute)": [[102, "graphnet.models.detector.liquido.LiquidO_v1.xyz", false]], "xyz (graphnet.models.detector.prometheus.arca115 attribute)": [[103, "graphnet.models.detector.prometheus.ARCA115.xyz", false]], "xyz (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[103, "graphnet.models.detector.prometheus.BaikalGVD8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[103, "graphnet.models.detector.prometheus.IceCube86Prometheus.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[103, "graphnet.models.detector.prometheus.IceCubeDeepCore8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[103, "graphnet.models.detector.prometheus.IceCubeGen2.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[103, "graphnet.models.detector.prometheus.IceCubeUpgrade7.xyz", false]], "xyz (graphnet.models.detector.prometheus.icedemo81 attribute)": [[103, "graphnet.models.detector.prometheus.IceDemo81.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[103, "graphnet.models.detector.prometheus.ORCA150.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150superdense attribute)": [[103, "graphnet.models.detector.prometheus.ORCA150SuperDense.xyz", false]], "xyz (graphnet.models.detector.prometheus.ponetriangle attribute)": [[103, "graphnet.models.detector.prometheus.PONETriangle.xyz", false]], "xyz (graphnet.models.detector.prometheus.trident1211 attribute)": [[103, "graphnet.models.detector.prometheus.TRIDENT1211.xyz", false]], "xyz (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[103, "graphnet.models.detector.prometheus.WaterDemo81.xyz", false]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[127, "graphnet.models.task.reconstruction.ZenithReconstruction", false]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[127, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa", false]]}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [67, 0, 0, "-", "datasets"], [71, 0, 0, "-", "deployment"], [80, 0, 0, "-", "exceptions"], [82, 0, 0, "-", "models"], [132, 0, 0, "-", "training"], [138, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "curated_datamodule"], [6, 0, 0, "-", "dataclasses"], [7, 0, 0, "-", "dataconverter"], [8, 0, 0, "-", "dataloader"], [9, 0, 0, "-", "datamodule"], [10, 0, 0, "-", "dataset"], [17, 0, 0, "-", "extractors"], [46, 0, 0, "-", "parquet"], [48, 0, 0, "-", "pre_configured"], [50, 0, 0, "-", "readers"], [56, 0, 0, "-", "sqlite"], [58, 0, 0, "-", "utilities"], [63, 0, 0, "-", "writers"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "SNOWSTORM"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "SNOWSTORM"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.curated_datamodule": [[5, 1, 1, "", "CuratedDataset"], [5, 1, 1, "", "ERDAHostedDataset"], [5, 1, 1, "", "IceCubeHostedDataset"]], "graphnet.data.curated_datamodule.CuratedDataset": [[5, 3, 1, "", "available_backends"], [5, 3, 1, "", "citation"], [5, 3, 1, "", "comments"], [5, 3, 1, "", "creator"], [5, 3, 1, "", "dataset_dir"], [5, 4, 1, "", "description"], [5, 3, 1, "", "event_truth"], [5, 3, 1, "", "events"], [5, 3, 1, "", "experiment"], [5, 3, 1, "", "features"], [5, 4, 1, "", "prepare_data"], [5, 3, 1, "", "pulse_truth"], [5, 3, 1, "", "pulsemaps"], [5, 3, 1, "", "truth_table"]], "graphnet.data.curated_datamodule.ERDAHostedDataset": [[5, 4, 1, "", "prepare_data"]], "graphnet.data.curated_datamodule.IceCubeHostedDataset": [[5, 4, 1, "", "prepare_data"]], "graphnet.data.dataclasses": [[6, 1, 1, "", "I3FileSet"], [6, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_files"], [6, 2, 1, "", "modules"], [6, 2, 1, "", "output_folder"]], "graphnet.data.dataconverter": [[7, 1, 1, "", "DataConverter"], [7, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[7, 4, 1, "", "get_map_function"], [7, 4, 1, "", "merge_files"]], "graphnet.data.dataloader": [[8, 1, 1, "", "DataLoader"], [8, 5, 1, "", "collate_fn"], [8, 5, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[8, 4, 1, "", "from_dataset_config"]], "graphnet.data.datamodule": [[9, 1, 1, "", "GraphNeTDataModule"]], "graphnet.data.datamodule.GraphNeTDataModule": [[9, 4, 1, "", "prepare_data"], [9, 4, 1, "", "setup"], [9, 4, 1, "", "teardown"], [9, 3, 1, "", "test_dataloader"], [9, 3, 1, "", "train_dataloader"], [9, 3, 1, "", "val_dataloader"]], "graphnet.data.dataset": [[11, 0, 0, "-", "dataset"], [12, 0, 0, "-", "parquet"], [14, 0, 0, "-", "samplers"], [15, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[11, 1, 1, "", "Dataset"], [11, 1, 1, "", "EnsembleDataset"], [11, 5, 1, "", "load_module"], [11, 5, 1, "", "parse_data_representation"], [11, 5, 1, "", "parse_labels"]], "graphnet.data.dataset.dataset.Dataset": [[11, 4, 1, "", "add_label"], [11, 4, 1, "", "concatenate"], [11, 4, 1, "", "from_config"], [11, 3, 1, "", "path"], [11, 4, 1, "", "query_table"], [11, 3, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[13, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[13, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[13, 3, 1, "", "chunk_sizes"], [13, 4, 1, "", "query_table"]], "graphnet.data.dataset.samplers": [[14, 1, 1, "", "LenMatchBatchSampler"], [14, 1, 1, "", "RandomChunkSampler"], [14, 5, 1, "", "gather_len_matched_buckets"]], "graphnet.data.dataset.samplers.RandomChunkSampler": [[14, 3, 1, "", "chunks"], [14, 3, 1, "", "data_source"], [14, 3, 1, "", "num_samples"]], "graphnet.data.dataset.sqlite": [[16, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[16, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[16, 4, 1, "", "query_table"]], "graphnet.data.extractors": [[18, 0, 0, "-", "combine_extractors"], [19, 0, 0, "-", "extractor"], [20, 0, 0, "-", "icecube"], [40, 0, 0, "-", "internal"], [42, 0, 0, "-", "liquido"], [44, 0, 0, "-", "prometheus"]], "graphnet.data.extractors.combine_extractors": [[18, 1, 1, "", "CombinedExtractor"]], "graphnet.data.extractors.combine_extractors.CombinedExtractor": [[18, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.extractor": [[19, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[19, 4, 1, "", "exclude"], [19, 3, 1, "", "name"]], "graphnet.data.extractors.icecube": [[21, 0, 0, "-", "i3dictvalueextractor"], [22, 0, 0, "-", "i3extractor"], [23, 0, 0, "-", "i3featureextractor"], [24, 0, 0, "-", "i3filtermapextractor"], [25, 0, 0, "-", "i3genericextractor"], [26, 0, 0, "-", "i3hybridrecoextractor"], [27, 0, 0, "-", "i3ntmuonlabelsextractor"], [28, 0, 0, "-", "i3particleextractor"], [29, 0, 0, "-", "i3pisaextractor"], [30, 0, 0, "-", "i3quesoextractor"], [31, 0, 0, "-", "i3retroextractor"], [32, 0, 0, "-", "i3splinempeextractor"], [33, 0, 0, "-", "i3truthextractor"], [34, 0, 0, "-", "i3tumextractor"], [35, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3dictvalueextractor": [[21, 1, 1, "", "I3DictValueExtractor"]], "graphnet.data.extractors.icecube.i3extractor": [[22, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[22, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[23, 1, 1, "", "I3FeatureExtractor"], [23, 1, 1, "", "I3FeatureExtractorIceCube86"], [23, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [23, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [23, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3filtermapextractor": [[24, 1, 1, "", "I3FilterMapExtractor"]], "graphnet.data.extractors.icecube.i3genericextractor": [[25, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[26, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[27, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[28, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[29, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[30, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[31, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[32, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[33, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor": [[33, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3tumextractor": [[34, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[36, 0, 0, "-", "collections"], [37, 0, 0, "-", "frames"], [38, 0, 0, "-", "i3_filters"], [39, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[36, 5, 1, "", "flatten_nested_dictionary"], [36, 5, 1, "", "serialise"], [36, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[37, 5, 1, "", "frame_is_montecarlo"], [37, 5, 1, "", "frame_is_noise"], [37, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[38, 1, 1, "", "ChargeFilter"], [38, 1, 1, "", "I3Filter"], [38, 1, 1, "", "I3FilterMask"], [38, 1, 1, "", "NullSplitI3Filter"], [38, 1, 1, "", "SubEventStreamI3Filter"], [38, 1, 1, "", "TableFilter"]], "graphnet.data.extractors.icecube.utilities.types": [[39, 5, 1, "", "break_cyclic_recursion"], [39, 5, 1, "", "cast_object_to_pure_python"], [39, 5, 1, "", "cast_pulse_series_to_pure_python"], [39, 5, 1, "", "get_member_variables"], [39, 5, 1, "", "is_boost_class"], [39, 5, 1, "", "is_boost_enum"], [39, 5, 1, "", "is_icecube_class"], [39, 5, 1, "", "is_method"], [39, 5, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[41, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[41, 1, 1, "", "ParquetExtractor"]], "graphnet.data.extractors.liquido": [[43, 0, 0, "-", "h5_extractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[43, 1, 1, "", "H5Extractor"], [43, 1, 1, "", "H5HitExtractor"], [43, 1, 1, "", "H5TruthExtractor"]], "graphnet.data.extractors.prometheus": [[45, 0, 0, "-", "prometheus_extractor"]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[45, 1, 1, "", "PrometheusExtractor"], [45, 1, 1, "", "PrometheusFeatureExtractor"], [45, 1, 1, "", "PrometheusTruthExtractor"]], "graphnet.data.parquet": [[47, 0, 0, "-", "deprecated_methods"]], "graphnet.data.parquet.deprecated_methods": [[47, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.pre_configured": [[49, 0, 0, "-", "dataconverters"]], "graphnet.data.pre_configured.dataconverters": [[49, 1, 1, "", "I3ToParquetConverter"], [49, 1, 1, "", "I3ToSQLiteConverter"], [49, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.readers": [[51, 0, 0, "-", "graphnet_file_reader"], [52, 0, 0, "-", "i3reader"], [53, 0, 0, "-", "internal_parquet_reader"], [54, 0, 0, "-", "liquido_reader"], [55, 0, 0, "-", "prometheus_reader"]], "graphnet.data.readers.graphnet_file_reader": [[51, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[51, 3, 1, "", "accepted_extractors"], [51, 3, 1, "", "accepted_file_extensions"], [51, 3, 1, "", "extracor_names"], [51, 4, 1, "", "find_files"], [51, 4, 1, "", "set_extractors"], [51, 4, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[52, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[52, 4, 1, "", "find_files"]], "graphnet.data.readers.internal_parquet_reader": [[53, 1, 1, "", "ParquetReader"]], "graphnet.data.readers.internal_parquet_reader.ParquetReader": [[53, 4, 1, "", "find_files"]], "graphnet.data.readers.liquido_reader": [[54, 1, 1, "", "LiquidOReader"]], "graphnet.data.readers.liquido_reader.LiquidOReader": [[54, 4, 1, "", "find_files"]], "graphnet.data.readers.prometheus_reader": [[55, 1, 1, "", "PrometheusReader"]], "graphnet.data.readers.prometheus_reader.PrometheusReader": [[55, 4, 1, "", "find_files"]], "graphnet.data.sqlite": [[57, 0, 0, "-", "deprecated_methods"]], "graphnet.data.sqlite.deprecated_methods": [[57, 1, 1, "", "SQLiteDataConverter"]], "graphnet.data.utilities": [[59, 0, 0, "-", "parquet_to_sqlite"], [60, 0, 0, "-", "random"], [61, 0, 0, "-", "sqlite_utilities"], [62, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.random": [[60, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[61, 5, 1, "", "attach_index"], [61, 5, 1, "", "create_table"], [61, 5, 1, "", "create_table_and_save_to_sql"], [61, 5, 1, "", "database_exists"], [61, 5, 1, "", "database_table_exists"], [61, 5, 1, "", "get_primary_keys"], [61, 5, 1, "", "query_database"], [61, 5, 1, "", "run_sql_code"], [61, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[62, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[62, 4, 1, "", "resolve"]], "graphnet.data.writers": [[64, 0, 0, "-", "graphnet_writer"], [65, 0, 0, "-", "parquet_writer"], [66, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[64, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[64, 3, 1, "", "expects_merged_dataframes"], [64, 3, 1, "", "file_extension"], [64, 4, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[65, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[65, 4, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[66, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[66, 4, 1, "", "merge_files"]], "graphnet.datasets": [[68, 0, 0, "-", "prometheus_datasets"], [69, 0, 0, "-", "snowstorm_dataset"], [70, 0, 0, "-", "test_dataset"]], "graphnet.datasets.prometheus_datasets": [[68, 1, 1, "", "BaikalGVDSmall"], [68, 1, 1, "", "PONESmall"], [68, 1, 1, "", "PublicPrometheusDataset"], [68, 1, 1, "", "TRIDENTSmall"]], "graphnet.datasets.snowstorm_dataset": [[69, 1, 1, "", "SnowStormDataset"]], "graphnet.datasets.test_dataset": [[70, 1, 1, "", "TestDataset"]], "graphnet.deployment": [[72, 0, 0, "-", "deployer"], [73, 0, 0, "-", "deployment_module"], [74, 0, 0, "-", "i3modules"], [76, 0, 0, "-", "icecube"]], "graphnet.deployment.deployer": [[72, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[72, 4, 1, "", "run"]], "graphnet.deployment.deployment_module": [[73, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.i3modules": [[75, 0, 0, "-", "deprecated_methods"]], "graphnet.deployment.i3modules.deprecated_methods": [[75, 1, 1, "", "GraphNeTI3Deployer"]], "graphnet.deployment.icecube": [[77, 0, 0, "-", "cleaning_module"], [78, 0, 0, "-", "i3deployer"], [79, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[77, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.i3deployer": [[78, 1, 1, "", "I3Deployer"]], "graphnet.deployment.icecube.inference_module": [[79, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[81, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[81, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[83, 0, 0, "-", "coarsening"], [84, 0, 0, "-", "components"], [88, 0, 0, "-", "data_representation"], [99, 0, 0, "-", "detector"], [104, 0, 0, "-", "easy_model"], [105, 0, 0, "-", "gnn"], [115, 0, 0, "-", "graphs"], [119, 0, 0, "-", "model"], [120, 0, 0, "-", "normalizing_flow"], [121, 0, 0, "-", "rnn"], [123, 0, 0, "-", "standard_averaged_model"], [124, 0, 0, "-", "standard_model"], [125, 0, 0, "-", "task"], [129, 0, 0, "-", "transformer"], [131, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[83, 1, 1, "", "AttributeCoarsening"], [83, 1, 1, "", "Coarsening"], [83, 1, 1, "", "CustomDOMCoarsening"], [83, 1, 1, "", "DOMAndTimeWindowCoarsening"], [83, 1, 1, "", "DOMCoarsening"], [83, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[83, 4, 1, "", "forward"], [83, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[85, 0, 0, "-", "embedding"], [86, 0, 0, "-", "layers"], [87, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[85, 1, 1, "", "FourierEncoder"], [85, 1, 1, "", "LinearEdgeEncoder"], [85, 1, 1, "", "LinearNodeEncoder"], [85, 1, 1, "", "RRWPLinearEdgeEncoder"], [85, 1, 1, "", "RRWPLinearNodeEncoder"], [85, 1, 1, "", "RWSELinearNodeEncoder"], [85, 1, 1, "", "SinusoidalPosEmb"], [85, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[85, 4, 1, "", "forward"]], "graphnet.models.components.embedding.LinearEdgeEncoder": [[85, 4, 1, "", "forward"]], "graphnet.models.components.embedding.LinearNodeEncoder": [[85, 4, 1, "", "forward"]], "graphnet.models.components.embedding.RRWPLinearEdgeEncoder": [[85, 4, 1, "", "forward"]], "graphnet.models.components.embedding.RRWPLinearNodeEncoder": [[85, 4, 1, "", "forward"]], "graphnet.models.components.embedding.RWSELinearNodeEncoder": [[85, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[85, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[85, 4, 1, "", "forward"]], "graphnet.models.components.layers": [[86, 1, 1, "", "Attention_rel"], [86, 1, 1, "", "Block"], [86, 1, 1, "", "Block_rel"], [86, 1, 1, "", "DropPath"], [86, 1, 1, "", "DynEdgeConv"], [86, 1, 1, "", "DynTrans"], [86, 1, 1, "", "EdgeConvTito"], [86, 1, 1, "", "GritSparseMHA"], [86, 1, 1, "", "GritTransformerLayer"], [86, 1, 1, "", "Mlp"], [86, 1, 1, "", "SANGraphHead"]], "graphnet.models.components.layers.Attention_rel": [[86, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[86, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[86, 4, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[86, 4, 1, "", "extra_repr"], [86, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[86, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[86, 4, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[86, 4, 1, "", "forward"], [86, 4, 1, "", "message"], [86, 4, 1, "", "reset_parameters"]], "graphnet.models.components.layers.GritSparseMHA": [[86, 4, 1, "", "forward"]], "graphnet.models.components.layers.GritTransformerLayer": [[86, 4, 1, "", "forward"]], "graphnet.models.components.layers.Mlp": [[86, 4, 1, "", "forward"]], "graphnet.models.components.layers.SANGraphHead": [[86, 4, 1, "", "forward"]], "graphnet.models.components.pool": [[87, 5, 1, "", "group_by"], [87, 5, 1, "", "group_pulses_to_dom"], [87, 5, 1, "", "group_pulses_to_pmt"], [87, 5, 1, "", "min_pool"], [87, 5, 1, "", "min_pool_x"], [87, 5, 1, "", "std_pool"], [87, 5, 1, "", "std_pool_x"], [87, 5, 1, "", "sum_pool"], [87, 5, 1, "", "sum_pool_and_distribute"], [87, 5, 1, "", "sum_pool_x"]], "graphnet.models.data_representation": [[89, 0, 0, "-", "data_representation"], [90, 0, 0, "-", "graphs"]], "graphnet.models.data_representation.data_representation": [[89, 1, 1, "", "DataRepresentation"]], "graphnet.models.data_representation.data_representation.DataRepresentation": [[89, 4, 1, "", "forward"], [89, 3, 1, "", "nb_outputs"], [89, 3, 1, "", "output_feature_names"]], "graphnet.models.data_representation.graphs": [[91, 0, 0, "-", "edges"], [94, 0, 0, "-", "graph_definition"], [95, 0, 0, "-", "graphs"], [96, 0, 0, "-", "nodes"], [98, 0, 0, "-", "utils"]], "graphnet.models.data_representation.graphs.edges": [[92, 0, 0, "-", "edges"], [93, 0, 0, "-", "minkowski"]], "graphnet.models.data_representation.graphs.edges.edges": [[92, 1, 1, "", "EdgeDefinition"], [92, 1, 1, "", "EuclideanEdges"], [92, 1, 1, "", "KNNDistanceEdges"], [92, 1, 1, "", "KNNEdges"], [92, 1, 1, "", "RadialEdges"]], "graphnet.models.data_representation.graphs.edges.edges.EdgeDefinition": [[92, 4, 1, "", "forward"]], "graphnet.models.data_representation.graphs.edges.minkowski": [[93, 1, 1, "", "MinkowskiKNNEdges"], [93, 5, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.data_representation.graphs.graph_definition": [[94, 1, 1, "", "GraphDefinition"]], "graphnet.models.data_representation.graphs.graph_definition.GraphDefinition": [[94, 4, 1, "", "forward"]], "graphnet.models.data_representation.graphs.graphs": [[95, 1, 1, "", "EdgelessGraph"], [95, 1, 1, "", "KNNGraph"], [95, 1, 1, "", "KNNGraphRRWP"], [95, 1, 1, "", "KNNGraphRWSE"]], "graphnet.models.data_representation.graphs.graphs.KNNGraphRRWP": [[95, 4, 1, "", "forward"]], "graphnet.models.data_representation.graphs.graphs.KNNGraphRWSE": [[95, 4, 1, "", "forward"]], "graphnet.models.data_representation.graphs.nodes": [[97, 0, 0, "-", "nodes"]], "graphnet.models.data_representation.graphs.nodes.nodes": [[97, 1, 1, "", "ClusterSummaryFeatures"], [97, 1, 1, "", "IceMixNodes"], [97, 1, 1, "", "NodeAsDOMTimeSeries"], [97, 1, 1, "", "NodeDefinition"], [97, 1, 1, "", "NodesAsPulses"], [97, 1, 1, "", "PercentileClusters"]], "graphnet.models.data_representation.graphs.nodes.nodes.ClusterSummaryFeatures": [[97, 4, 1, "", "set_indices"]], "graphnet.models.data_representation.graphs.nodes.nodes.NodeDefinition": [[97, 4, 1, "", "forward"], [97, 3, 1, "", "nb_outputs"], [97, 4, 1, "", "set_number_of_inputs"], [97, 4, 1, "", "set_output_feature_names"]], "graphnet.models.data_representation.graphs.utils": [[98, 1, 1, "", "cluster_and_pad"], [98, 5, 1, "", "cluster_summarize_with_percentiles"], [98, 5, 1, "", "gather_cluster_sequence"], [98, 5, 1, "", "ice_transparency"], [98, 5, 1, "", "identify_indices"], [98, 5, 1, "", "lex_sort"], [98, 5, 1, "", "weighted_median"]], "graphnet.models.data_representation.graphs.utils.cluster_and_pad": [[98, 4, 1, "", "add_accumulated_value_after_t"], [98, 4, 1, "", "add_charge_threshold_summary"], [98, 4, 1, "", "add_counts"], [98, 4, 1, "", "add_mean"], [98, 4, 1, "", "add_percentile_summary"], [98, 4, 1, "", "add_spread"], [98, 4, 1, "", "add_std"], [98, 4, 1, "", "add_sum_charge"], [98, 4, 1, "", "add_time_first_pulse"], [98, 4, 1, "", "reference_time"]], "graphnet.models.detector": [[100, 0, 0, "-", "detector"], [101, 0, 0, "-", "icecube"], [102, 0, 0, "-", "liquido"], [103, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[100, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[100, 4, 1, "", "feature_map"], [100, 4, 1, "", "forward"], [100, 3, 1, "", "geometry_table"], [100, 3, 1, "", "sensor_index_name"], [100, 3, 1, "", "sensor_position_names"], [100, 3, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[101, 1, 1, "", "IceCube86"], [101, 1, 1, "", "IceCubeDeepCore"], [101, 1, 1, "", "IceCubeKaggle"], [101, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[101, 4, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.detector.liquido": [[102, 1, 1, "", "LiquidO_v1"]], "graphnet.models.detector.liquido.LiquidO_v1": [[102, 4, 1, "", "feature_map"], [102, 2, 1, "", "geometry_table_path"], [102, 2, 1, "", "sensor_id_column"], [102, 2, 1, "", "string_id_column"], [102, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[103, 1, 1, "", "ARCA115"], [103, 1, 1, "", "BaikalGVD8"], [103, 1, 1, "", "IceCube86Prometheus"], [103, 1, 1, "", "IceCubeDeepCore8"], [103, 1, 1, "", "IceCubeGen2"], [103, 1, 1, "", "IceCubeUpgrade7"], [103, 1, 1, "", "IceDemo81"], [103, 1, 1, "", "ORCA150"], [103, 1, 1, "", "ORCA150SuperDense"], [103, 1, 1, "", "PONETriangle"], [103, 1, 1, "", "Prometheus"], [103, 1, 1, "", "TRIDENT1211"], [103, 1, 1, "", "WaterDemo81"]], "graphnet.models.detector.prometheus.ARCA115": [[103, 4, 1, "", "feature_map"], [103, 2, 1, "", "geometry_table_path"], [103, 2, 1, "", "sensor_id_column"], [103, 2, 1, "", "string_id_column"], [103, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.BaikalGVD8": [[103, 4, 1, "", "feature_map"], [103, 2, 1, "", "geometry_table_path"], [103, 2, 1, "", "sensor_id_column"], [103, 2, 1, "", "string_id_column"], [103, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCube86Prometheus": [[103, 4, 1, "", "feature_map"], [103, 2, 1, "", "geometry_table_path"], [103, 2, 1, "", "sensor_id_column"], [103, 2, 1, "", "string_id_column"], [103, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeDeepCore8": [[103, 4, 1, "", "feature_map"], [103, 2, 1, "", "geometry_table_path"], [103, 2, 1, "", "sensor_id_column"], [103, 2, 1, "", "string_id_column"], [103, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeGen2": [[103, 4, 1, "", "feature_map"], [103, 2, 1, "", "geometry_table_path"], [103, 2, 1, "", "sensor_id_column"], [103, 2, 1, "", "string_id_column"], [103, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeUpgrade7": [[103, 4, 1, "", "feature_map"], [103, 2, 1, "", "geometry_table_path"], [103, 2, 1, "", "sensor_id_column"], [103, 2, 1, "", "string_id_column"], [103, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceDemo81": [[103, 4, 1, "", "feature_map"], [103, 2, 1, "", "geometry_table_path"], [103, 2, 1, "", "sensor_id_column"], [103, 2, 1, "", "string_id_column"], [103, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150": [[103, 4, 1, "", "feature_map"], [103, 2, 1, "", "geometry_table_path"], [103, 2, 1, "", "sensor_id_column"], [103, 2, 1, "", "string_id_column"], [103, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150SuperDense": [[103, 4, 1, "", "feature_map"], [103, 2, 1, "", "geometry_table_path"], [103, 2, 1, "", "sensor_id_column"], [103, 2, 1, "", "string_id_column"], [103, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.PONETriangle": [[103, 4, 1, "", "feature_map"], [103, 2, 1, "", "geometry_table_path"], [103, 2, 1, "", "sensor_id_column"], [103, 2, 1, "", "string_id_column"], [103, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.TRIDENT1211": [[103, 4, 1, "", "feature_map"], [103, 2, 1, "", "geometry_table_path"], [103, 2, 1, "", "sensor_id_column"], [103, 2, 1, "", "string_id_column"], [103, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.WaterDemo81": [[103, 4, 1, "", "feature_map"], [103, 2, 1, "", "geometry_table_path"], [103, 2, 1, "", "sensor_id_column"], [103, 2, 1, "", "string_id_column"], [103, 2, 1, "", "xyz"]], "graphnet.models.easy_model": [[104, 1, 1, "", "EasySyntax"]], "graphnet.models.easy_model.EasySyntax": [[104, 4, 1, "", "compute_loss"], [104, 4, 1, "", "configure_optimizers"], [104, 4, 1, "", "fit"], [104, 4, 1, "", "forward"], [104, 4, 1, "", "inference"], [104, 4, 1, "", "predict"], [104, 4, 1, "", "predict_as_dataframe"], [104, 3, 1, "", "prediction_labels"], [104, 4, 1, "", "shared_step"], [104, 3, 1, "", "target_labels"], [104, 4, 1, "", "train"], [104, 4, 1, "", "training_step"], [104, 4, 1, "", "validate_tasks"], [104, 4, 1, "", "validation_step"]], "graphnet.models.gnn": [[106, 0, 0, "-", "RNN_tito"], [107, 0, 0, "-", "convnet"], [108, 0, 0, "-", "dynedge"], [109, 0, 0, "-", "dynedge_jinst"], [110, 0, 0, "-", "dynedge_kaggle_tito"], [111, 0, 0, "-", "gnn"], [112, 0, 0, "-", "grit"], [113, 0, 0, "-", "icemix"], [114, 0, 0, "-", "particlenet"]], "graphnet.models.gnn.RNN_tito": [[106, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[106, 4, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[107, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[107, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[108, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[108, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[109, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[109, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[110, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[110, 4, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[111, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[111, 4, 1, "", "forward"], [111, 3, 1, "", "nb_inputs"], [111, 3, 1, "", "nb_outputs"]], "graphnet.models.gnn.grit": [[112, 1, 1, "", "GRIT"]], "graphnet.models.gnn.grit.GRIT": [[112, 4, 1, "", "forward"]], "graphnet.models.gnn.icemix": [[113, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[113, 4, 1, "", "forward"], [113, 4, 1, "", "no_weight_decay"]], "graphnet.models.gnn.particlenet": [[114, 1, 1, "", "ParticleNeT"]], "graphnet.models.gnn.particlenet.ParticleNeT": [[114, 4, 1, "", "forward"]], "graphnet.models.graphs": [[116, 0, 0, "-", "edges"], [118, 0, 0, "-", "nodes"]], "graphnet.models.graphs.edges": [[117, 0, 0, "-", "minkowski"]], "graphnet.models.model": [[119, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[119, 4, 1, "", "extra_repr"], [119, 4, 1, "", "extra_repr_recursive"], [119, 4, 1, "", "from_config"], [119, 4, 1, "", "load"], [119, 4, 1, "", "load_state_dict"], [119, 4, 1, "", "save"], [119, 4, 1, "", "save_state_dict"], [119, 4, 1, "", "set_verbose_print_recursively"], [119, 2, 1, "", "verbose_print"]], "graphnet.models.normalizing_flow": [[120, 1, 1, "", "NormalizingFlow"]], "graphnet.models.normalizing_flow.NormalizingFlow": [[120, 4, 1, "", "forward"], [120, 4, 1, "", "shared_step"], [120, 4, 1, "", "validate_tasks"]], "graphnet.models.rnn": [[122, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[122, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[122, 4, 1, "", "clean_up_data_object"], [122, 4, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[123, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[123, 4, 1, "", "load_state_dict"], [123, 4, 1, "", "on_train_end"], [123, 4, 1, "", "optimizer_step"], [123, 4, 1, "", "training_step"], [123, 4, 1, "", "validation_step"]], "graphnet.models.standard_model": [[124, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[124, 4, 1, "", "compute_loss"], [124, 4, 1, "", "forward"], [124, 4, 1, "", "shared_step"], [124, 4, 1, "", "validate_tasks"]], "graphnet.models.task": [[126, 0, 0, "-", "classification"], [127, 0, 0, "-", "reconstruction"], [128, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[126, 1, 1, "", "BinaryClassificationTask"], [126, 1, 1, "", "BinaryClassificationTaskLogits"], [126, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[127, 1, 1, "", "AzimuthReconstruction"], [127, 1, 1, "", "AzimuthReconstructionWithKappa"], [127, 1, 1, "", "DirectionReconstructionWithKappa"], [127, 1, 1, "", "EnergyReconstruction"], [127, 1, 1, "", "EnergyReconstructionWithPower"], [127, 1, 1, "", "EnergyReconstructionWithUncertainty"], [127, 1, 1, "", "EnergyTCReconstruction"], [127, 1, 1, "", "InelasticityReconstruction"], [127, 1, 1, "", "PositionReconstruction"], [127, 1, 1, "", "TimeReconstruction"], [127, 1, 1, "", "VertexReconstruction"], [127, 1, 1, "", "VisibleInelasticityReconstruction"], [127, 1, 1, "", "ZenithReconstruction"], [127, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[127, 2, 1, "", "default_prediction_labels"], [127, 2, 1, "", "default_target_labels"], [127, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[127, 2, 1, "", "default_prediction_labels"], [127, 2, 1, "", "default_target_labels"], [127, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[127, 2, 1, "", "default_prediction_labels"], [127, 2, 1, "", "default_target_labels"], [127, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[127, 2, 1, "", "default_prediction_labels"], [127, 2, 1, "", "default_target_labels"], [127, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[127, 2, 1, "", "default_prediction_labels"], [127, 2, 1, "", "default_target_labels"], [127, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[127, 2, 1, "", "default_prediction_labels"], [127, 2, 1, "", "default_target_labels"], [127, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[127, 2, 1, "", "default_prediction_labels"], [127, 2, 1, "", "default_target_labels"], [127, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[127, 2, 1, "", "default_prediction_labels"], [127, 2, 1, "", "default_target_labels"], [127, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[127, 2, 1, "", "default_prediction_labels"], [127, 2, 1, "", "default_target_labels"], [127, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[127, 2, 1, "", "default_prediction_labels"], [127, 2, 1, "", "default_target_labels"], [127, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[127, 2, 1, "", "default_prediction_labels"], [127, 2, 1, "", "default_target_labels"], [127, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction": [[127, 2, 1, "", "default_prediction_labels"], [127, 2, 1, "", "default_target_labels"], [127, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[127, 2, 1, "", "default_prediction_labels"], [127, 2, 1, "", "default_target_labels"], [127, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[127, 2, 1, "", "default_prediction_labels"], [127, 2, 1, "", "default_target_labels"], [127, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[128, 1, 1, "", "IdentityTask"], [128, 1, 1, "", "LearnedTask"], [128, 1, 1, "", "StandardFlowTask"], [128, 1, 1, "", "StandardLearnedTask"], [128, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[128, 3, 1, "", "default_prediction_labels"], [128, 3, 1, "", "default_target_labels"], [128, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[128, 4, 1, "", "compute_loss"], [128, 4, 1, "", "forward"], [128, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[128, 3, 1, "", "default_prediction_labels"], [128, 4, 1, "", "forward"], [128, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[128, 4, 1, "", "compute_loss"], [128, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[128, 3, 1, "", "default_prediction_labels"], [128, 3, 1, "", "default_target_labels"], [128, 4, 1, "", "inference"], [128, 3, 1, "", "nb_inputs"], [128, 4, 1, "", "train_eval"]], "graphnet.models.transformer": [[130, 0, 0, "-", "iseecube"]], "graphnet.models.transformer.iseecube": [[130, 1, 1, "", "ISeeCube"]], "graphnet.models.transformer.iseecube.ISeeCube": [[130, 4, 1, "", "forward"]], "graphnet.models.utils": [[131, 5, 1, "", "add_full_rrwp"], [131, 5, 1, "", "array_to_sequence"], [131, 5, 1, "", "calculate_distance_matrix"], [131, 5, 1, "", "calculate_xyzt_homophily"], [131, 5, 1, "", "full_edge_index"], [131, 5, 1, "", "get_fields"], [131, 5, 1, "", "get_rw_landing_probs"], [131, 5, 1, "", "knn_graph_batch"]], "graphnet.training": [[133, 0, 0, "-", "callbacks"], [134, 0, 0, "-", "labels"], [135, 0, 0, "-", "loss_functions"], [136, 0, 0, "-", "utils"], [137, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[133, 1, 1, "", "GraphnetEarlyStopping"], [133, 1, 1, "", "PiecewiseLinearLR"], [133, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[133, 4, 1, "", "on_fit_end"], [133, 4, 1, "", "on_train_epoch_end"], [133, 4, 1, "", "on_validation_end"], [133, 4, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[133, 4, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[133, 4, 1, "", "get_metrics"], [133, 4, 1, "", "init_predict_tqdm"], [133, 4, 1, "", "init_test_tqdm"], [133, 4, 1, "", "init_train_tqdm"], [133, 4, 1, "", "init_validation_tqdm"], [133, 4, 1, "", "on_train_epoch_end"], [133, 4, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[134, 1, 1, "", "Direction"], [134, 1, 1, "", "Label"], [134, 1, 1, "", "Track"]], "graphnet.training.labels.Label": [[134, 3, 1, "", "key"]], "graphnet.training.loss_functions": [[135, 1, 1, "", "BinaryCrossEntropyLoss"], [135, 1, 1, "", "CrossEntropyLoss"], [135, 1, 1, "", "EnsembleLoss"], [135, 1, 1, "", "EuclideanDistanceLoss"], [135, 1, 1, "", "LogCMK"], [135, 1, 1, "", "LogCoshLoss"], [135, 1, 1, "", "LossFunction"], [135, 1, 1, "", "MAELoss"], [135, 1, 1, "", "MSELoss"], [135, 1, 1, "", "RMSELoss"], [135, 1, 1, "", "RMSEVonMisesFisher3DLoss"], [135, 1, 1, "", "VonMisesFisher2DLoss"], [135, 1, 1, "", "VonMisesFisher3DLoss"], [135, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[135, 4, 1, "", "backward"], [135, 4, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[135, 4, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[135, 4, 1, "", "log_cmk"], [135, 4, 1, "", "log_cmk_approx"], [135, 4, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[136, 5, 1, "", "collate_fn"], [136, 1, 1, "", "collator_sequence_buckleting"], [136, 5, 1, "", "get_predictions"], [136, 5, 1, "", "make_dataloader"], [136, 5, 1, "", "make_train_validation_dataloader"], [136, 5, 1, "", "save_results"], [136, 5, 1, "", "save_selection"]], "graphnet.training.weight_fitting": [[137, 1, 1, "", "BjoernLow"], [137, 1, 1, "", "Uniform"], [137, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[137, 4, 1, "", "fit"]], "graphnet.utilities": [[139, 0, 0, "-", "argparse"], [140, 0, 0, "-", "config"], [147, 0, 0, "-", "decorators"], [148, 0, 0, "-", "deprecation_tools"], [149, 0, 0, "-", "filesys"], [150, 0, 0, "-", "imports"], [151, 0, 0, "-", "logging"], [152, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[139, 1, 1, "", "ArgumentParser"], [139, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[139, 2, 1, "", "standard_arguments"], [139, 4, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[139, 4, 1, "", "contains"], [139, 4, 1, "", "pop_default"]], "graphnet.utilities.config": [[141, 0, 0, "-", "base_config"], [142, 0, 0, "-", "configurable"], [143, 0, 0, "-", "dataset_config"], [144, 0, 0, "-", "model_config"], [145, 0, 0, "-", "parsing"], [146, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[141, 1, 1, "", "BaseConfig"], [141, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[141, 4, 1, "", "as_dict"], [141, 4, 1, "", "dump"], [141, 4, 1, "", "load"], [141, 2, 1, "", "model_config"]], "graphnet.utilities.config.configurable": [[142, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[142, 3, 1, "", "config"], [142, 4, 1, "", "from_config"], [142, 4, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[143, 1, 1, "", "DatasetConfig"], [143, 1, 1, "", "DatasetConfigSaverABCMeta"], [143, 1, 1, "", "DatasetConfigSaverMeta"], [143, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[143, 4, 1, "", "as_dict"], [143, 2, 1, "", "data_representation"], [143, 2, 1, "", "features"], [143, 2, 1, "", "graph_definition"], [143, 2, 1, "", "index_column"], [143, 2, 1, "", "labels"], [143, 2, 1, "", "loss_weight_column"], [143, 2, 1, "", "loss_weight_default_value"], [143, 2, 1, "", "loss_weight_table"], [143, 2, 1, "", "model_config"], [143, 2, 1, "", "node_truth"], [143, 2, 1, "", "node_truth_table"], [143, 2, 1, "", "path"], [143, 2, 1, "", "pulsemaps"], [143, 2, 1, "", "seed"], [143, 2, 1, "", "selection"], [143, 2, 1, "", "string_selection"], [143, 2, 1, "", "truth"], [143, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[144, 1, 1, "", "ModelConfig"], [144, 1, 1, "", "ModelConfigSaverABC"], [144, 1, 1, "", "ModelConfigSaverMeta"], [144, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[144, 2, 1, "", "arguments"], [144, 4, 1, "", "as_dict"], [144, 2, 1, "", "class_name"], [144, 2, 1, "", "model_config"]], "graphnet.utilities.config.parsing": [[145, 5, 1, "", "get_all_grapnet_classes"], [145, 5, 1, "", "get_graphnet_classes"], [145, 5, 1, "", "is_graphnet_class"], [145, 5, 1, "", "is_graphnet_module"], [145, 5, 1, "", "list_all_submodules"], [145, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[146, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[146, 2, 1, "", "dataloader"], [146, 2, 1, "", "early_stopping_patience"], [146, 2, 1, "", "fit"], [146, 2, 1, "", "model_config"], [146, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[148, 5, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[149, 5, 1, "", "find_i3_files"], [149, 5, 1, "", "has_extension"], [149, 5, 1, "", "is_gcd_file"], [149, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[150, 5, 1, "", "has_icecube_package"], [150, 5, 1, "", "has_jammy_flows_package"], [150, 5, 1, "", "has_torch_package"], [150, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[151, 1, 1, "", "Logger"], [151, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[151, 4, 1, "", "critical"], [151, 4, 1, "", "debug"], [151, 4, 1, "", "error"], [151, 3, 1, "", "file_handlers"], [151, 3, 1, "", "handlers"], [151, 4, 1, "", "info"], [151, 4, 1, "", "setLevel"], [151, 3, 1, "", "stream_handlers"], [151, 4, 1, "", "warning"], [151, 4, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[151, 4, 1, "", "filter"], [151, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[152, 5, 1, "", "eps_like"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:exception"}, "terms": {"": [0, 7, 8, 9, 11, 13, 16, 36, 47, 49, 51, 54, 55, 57, 64, 66, 72, 85, 89, 94, 100, 104, 107, 108, 114, 120, 128, 131, 133, 137, 139, 143, 144, 151, 152, 155, 156, 157, 158, 160, 161, 162], "0": [9, 11, 13, 16, 33, 47, 49, 52, 57, 62, 77, 83, 85, 86, 87, 92, 93, 95, 97, 98, 106, 107, 108, 110, 112, 114, 122, 128, 131, 134, 135, 136, 143, 156, 157, 159, 160, 162], "000": 156, "001": [97, 157, 162], "01": [157, 162], "0221": 157, "02_data": 157, "03042": 109, "03762": 85, "04616": 135, "04_ensemble_dataset": 157, "05": 135, "06": 154, "06166": 92, "08570": 114, "0e04": 160, "0e4": 160, "1": [0, 7, 9, 11, 13, 14, 19, 36, 47, 49, 57, 62, 65, 68, 72, 75, 78, 83, 86, 87, 92, 93, 95, 97, 98, 106, 108, 110, 112, 113, 114, 122, 126, 127, 128, 131, 133, 134, 135, 136, 137, 143, 155, 156, 157, 158, 159, 161, 162], "10": [9, 68, 97, 98, 101, 102, 103, 112, 139, 156, 157, 160, 162], "100": [97, 156], "1000": [128, 156, 157], "10000": [11, 13, 16, 62, 85], "1088": 157, "10th": 98, "11": [97, 157, 159], "12": [62, 113, 130, 143, 156, 157], "120": 157, "128": [85, 107, 108, 110, 114, 139, 156, 157, 162], "13": 62, "14": [62, 143, 156, 157], "15": 97, "1536": 130, "15674": 85, "1584755": 97, "16": [14, 62, 85, 106, 114, 130, 143, 156, 157, 162], "17": [14, 157], "1706": 85, "1748": 157, "17589": 112, "1809": 92, "1812": 135, "1902": 114, "192": 113, "196": 130, "1e6": 128, "2": [9, 11, 16, 36, 47, 57, 86, 87, 92, 95, 98, 106, 108, 110, 112, 114, 122, 127, 131, 135, 143, 156, 157, 159, 162], "20": [11, 13, 16, 62, 97, 151, 157, 159, 160, 162], "200": [156, 160], "200000": 65, "2018": 154, "2019": 135, "2020": [0, 158, 161], "2023": 14, "21": [112, 154, 156, 157], "2209": 109, "2305": 112, "2310": 85, "256": [108, 110, 114, 130], "26": 156, "2d": [131, 135], "2nd": [14, 85, 113], "3": [87, 93, 97, 98, 106, 107, 110, 122, 127, 130, 131, 135, 154, 157, 159, 160], "30": 160, "300": [156, 160], "32": [14, 85, 113, 130], "336": [108, 110], "384": [85, 113, 130], "39": [0, 158, 161], "3d": [127, 135], "4": [14, 86, 98, 109, 113, 127, 157, 160, 162], "40": 160, "400": 66, "42": 9, "5": [11, 13, 16, 62, 86, 97, 98, 106, 112, 122, 135, 139, 155, 156, 157, 159, 160, 162], "50": [97, 98, 139, 160], "500": [98, 160], "50000": [62, 143, 156, 157], "5001": 156, "50th": 98, "59": 159, "6": [85, 87, 113, 130], "64": [106, 114], "647": [11, 16], "7": [77, 87], "700": 135, "768": 97, "8": [86, 87, 95, 106, 108, 110, 112, 122, 131, 135, 136, 154, 156, 157, 159, 162], "80": [97, 157, 162], "86": [23, 101], "890778": [0, 158, 161], "9": 9, "90": [97, 98], "90th": 98, "A": [5, 7, 9, 11, 14, 38, 51, 52, 53, 54, 55, 61, 66, 68, 70, 72, 73, 77, 78, 87, 89, 94, 95, 98, 100, 101, 102, 103, 104, 119, 120, 124, 126, 128, 131, 135, 137, 155, 156, 157, 160, 162], "AND": [14, 135], "AS": [14, 135], "AT": [11, 16], "As": [108, 114, 162], "BE": [14, 135], "BUT": [14, 135], "But": 162, "By": [0, 47, 49, 52, 57, 128, 156, 157, 158, 161, 162], "FOR": [14, 135], "For": [14, 39, 97, 133, 156, 157, 162], "IN": [14, 135], "If": [5, 11, 13, 14, 22, 25, 33, 38, 66, 68, 69, 70, 85, 86, 89, 94, 97, 98, 108, 113, 114, 119, 128, 133, 135, 137, 154, 155, 157, 162], "In": [47, 49, 51, 52, 57, 64, 131, 143, 144, 155, 157, 159], "It": [1, 5, 36, 61, 77, 85, 98, 126, 128, 154, 156, 157, 162], "NO": [14, 135], "NOT": [14, 61, 135, 157], "No": [0, 157, 158, 161], "OF": [14, 135], "ONE": 68, "OR": [14, 135], "On": 5, "One": 157, "Or": [149, 156], "Such": 61, "THE": [14, 135], "TO": [14, 135], "That": [11, 13, 16, 108, 114, 127, 134, 157, 162], "The": [0, 7, 9, 11, 13, 14, 16, 18, 36, 38, 39, 47, 49, 57, 61, 64, 65, 66, 72, 73, 75, 77, 78, 79, 83, 85, 86, 87, 89, 92, 94, 95, 98, 106, 108, 110, 113, 114, 120, 122, 126, 127, 128, 130, 131, 133, 134, 135, 148, 155, 156, 158, 160, 161], "Then": [5, 154], "There": [157, 162], "These": [0, 51, 64, 66, 94, 154, 156, 157, 158, 160, 161, 162], "To": [156, 157, 159, 160, 162], "WITH": [14, 135], "Will": [5, 68, 69, 70, 72, 75, 77, 78, 79, 92, 97, 155], "With": [157, 160, 162], "_": 157, "__": [36, 39, 157], "_____________________": [14, 135], "__call__": [19, 22, 51, 73, 155, 156, 157, 160], "__init__": [143, 144, 155, 156, 157, 162], "_accepted_extractor": [155, 160], "_accepted_file_extens": [155, 160], "_and_": [108, 114], "_charge_sum": 98, "_charge_weight": 98, "_cluster_nam": 98, "_column_nam": 155, "_construct_edg": 92, "_count": 98, "_definition_": 157, "_extractor": [155, 160], "_extractor_nam": [155, 160], "_file_extens": 155, "_file_hash": 5, "_fit_weight": 137, "_forward": 162, "_get_dir_nam": 5, "_indic": [11, 13], "_layer": 162, "_lrschedul": 133, "_may_": [11, 13], "_merge_datafram": 155, "_padded_x": 98, "_pred": 128, "_save_fil": 155, "_sensor_tim": 160, "_sensor_xyz": 160, "_tabl": 155, "_task": [104, 120, 124], "_verify_column": 155, "_x_": 157, "_zipped_fil": 5, "a__b": 36, "ab": [62, 112, 114, 135, 143, 156, 157], "abc": [7, 11, 19, 51, 64, 72, 119, 134, 137, 142, 143, 144], "abcmeta": [143, 144], "abil": 156, "abl": [36, 97, 120, 155, 157, 159, 160, 162], "about": [119, 156, 157, 160], "abov": [14, 135, 137, 156, 157, 160, 162], "abs_p": 95, "absolut": [86, 95, 112, 131, 135], "absopt": 97, "absorpt": 98, "abstract": [1, 5, 11, 64, 89, 94, 100, 111, 128, 142, 157], "abstractmethod": 156, "acceler": 1, "accept": [51, 154, 162], "accepted_extractor": [51, 155], "accepted_file_extens": [51, 155], "access": [95, 134, 156], "accompani": [47, 49, 52, 57, 157], "accord": [83, 87, 89, 92, 94, 95, 98, 135], "accumul": [97, 98], "achiev": 159, "achitectur": 162, "across": [1, 2, 11, 13, 16, 39, 58, 72, 75, 78, 87, 104, 124, 131, 135, 138, 139, 140, 151, 160], "act": [128, 135, 157, 162], "action": [14, 135], "activ": [86, 97, 104, 106, 108, 112, 114, 122, 128, 154], "activation_lay": [108, 114], "actual": [157, 162], "ad": [7, 11, 13, 16, 23, 47, 49, 57, 85, 94, 97, 98, 108, 113], "adam": [120, 157, 162], "adapt": [112, 157, 162], "add": [11, 85, 86, 95, 98, 108, 112, 114, 131, 139, 148, 154, 157, 160], "add_accumulated_value_after_t": 98, "add_batchnorm_lay": 114, "add_charge_threshold_summari": 98, "add_count": [97, 98], "add_full_rrwp": [82, 131], "add_global_variables_after_pool": [108, 157, 162], "add_ice_properti": 97, "add_ident": 131, "add_inactive_sensor": [89, 94], "add_label": [11, 156, 157], "add_mean": 98, "add_node_attr_as_self_loop": [85, 112], "add_norm_lay": 108, "add_percentile_summari": 98, "add_spread": 98, "add_static_featur": 94, "add_std": 98, "add_sum_charg": 98, "add_time_first_puls": 98, "add_to_databas": 137, "addit": [7, 51, 64, 83, 86, 95, 98, 104, 135, 137, 155, 157, 162], "additional_attribut": [104, 136, 157, 162], "address": 162, "adher": [154, 162], "adjac": [100, 131], "adjust": 162, "advanc": [1, 87], "after": [9, 66, 86, 97, 98, 106, 108, 110, 112, 114, 133, 139, 143, 156, 157, 162], "again": [157, 162], "against": 5, "aggr": 86, "aggreg": [86, 87, 98], "agnost": [0, 158, 161, 162], "agreement": [0, 154, 158, 161], "ai": 157, "aim": [0, 1, 154, 157, 158, 161], "algorithm": 28, "all": [1, 5, 11, 13, 14, 16, 18, 19, 22, 25, 38, 61, 66, 68, 69, 70, 77, 85, 86, 87, 89, 93, 94, 98, 100, 108, 111, 114, 119, 128, 135, 137, 141, 142, 143, 144, 145, 146, 151, 154, 155, 156, 157, 160, 162], "allow": [0, 5, 41, 71, 74, 82, 87, 133, 141, 146, 156, 157, 158, 161, 162], "almost": 131, "along": [98, 157, 162], "alongsid": [157, 162], "alreadi": [61, 97], "also": [7, 11, 13, 16, 38, 62, 98, 106, 143, 155, 156, 157, 160, 162], "alter": [94, 98], "altern": [108, 135, 154], "alwai": 136, "amount": 106, "an": [0, 14, 19, 21, 39, 47, 49, 52, 57, 62, 74, 78, 89, 94, 95, 112, 122, 123, 135, 149, 151, 154, 155, 157, 158, 159, 160, 161, 162], "anaconda": 159, "analys": [71, 157], "analysi": [72, 78], "angl": [127, 134, 157, 162], "ani": [6, 7, 8, 9, 11, 13, 14, 16, 36, 37, 38, 39, 51, 53, 54, 55, 64, 66, 77, 83, 86, 87, 89, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 122, 123, 124, 126, 127, 128, 130, 131, 133, 135, 137, 139, 141, 142, 143, 144, 145, 146, 151, 156, 157, 162], "anoth": [14, 143, 144, 156, 157], "anyth": 154, "api": [153, 155, 157], "appear": [72, 75, 78, 156, 157], "append": [89, 94], "appli": [7, 11, 13, 16, 47, 49, 50, 51, 57, 72, 75, 78, 85, 86, 87, 98, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 122, 124, 126, 128, 130, 135, 145, 155, 156, 157], "applic": [36, 156, 157, 162], "apply_norm": 85, "appropri": [61, 128, 157], "approx": 135, "approxim": 66, "ar": [0, 1, 4, 5, 11, 13, 14, 16, 22, 25, 33, 38, 39, 51, 62, 64, 65, 66, 72, 77, 78, 86, 87, 90, 91, 92, 94, 95, 96, 97, 98, 106, 108, 110, 114, 122, 126, 131, 135, 137, 143, 144, 154, 155, 156, 157, 158, 160, 161, 162], "arbitrari": [0, 158, 161], "arca": 103, "arca115": [99, 103], "architectur": [1, 107, 108, 109, 110, 114, 120, 122, 130, 157, 162], "archiv": 136, "area": 1, "arg": [11, 13, 16, 18, 38, 83, 89, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 122, 123, 124, 126, 127, 128, 130, 135, 139, 141, 151, 155, 160], "argpars": [1, 138], "argument": [5, 7, 9, 14, 65, 68, 69, 70, 113, 120, 133, 137, 139, 141, 143, 144, 146, 156, 157, 160, 162], "argumentpars": [138, 139], "aris": [14, 135], "arrai": [19, 33, 36, 97, 98, 131, 155, 156, 157, 160], "array_to_sequ": [82, 131], "arriv": 156, "art": [0, 158, 161], "articl": 157, "artifact": [157, 162], "arxiv": [85, 92, 112, 114, 135], "as_dict": [141, 143, 144, 157, 162], "assert": [155, 156], "assertionerror": 155, "assign": [7, 11, 13, 16, 83, 87, 92, 95, 131, 154, 155], "associ": [14, 77, 79, 89, 94, 98, 127, 135, 155, 156, 157, 160, 162], "assort": 152, "assum": [5, 77, 85, 89, 94, 98, 100, 128, 131], "atmospher": 156, "attach": 61, "attach_index": [58, 61], "attempt": [22, 33, 157], "attent": [85, 86, 112, 113, 130], "attention_rel": [84, 86], "attn_activ": [86, 112], "attn_bia": 86, "attn_clamp": [86, 112], "attn_drop": 86, "attn_dropout": [86, 112], "attn_edge_enh": 86, "attn_head_dim": 86, "attn_mask": 86, "attr": [85, 112], "attr_name_ab": 131, "attr_name_rel": 131, "attribut": [5, 11, 13, 16, 83, 85, 92, 94, 128, 156, 157, 162], "attributecoarsen": [82, 83], "author": [14, 107, 109, 112, 135], "auto": 128, "autom": 154, "automat": [25, 65, 85, 89, 94, 98, 135, 154, 155, 157, 160], "automatic_log_bin": 137, "auxiliari": [4, 85, 157, 162], "avail": [5, 7, 25, 68, 69, 70, 126, 127, 128, 150, 155, 156, 157, 159, 160, 162], "available_backend": 5, "available_t": 155, "averag": [87, 123, 135], "avg": 83, "avg_pool": 83, "avg_pool_x": 83, "avoid": [13, 97, 151, 154], "awai": [1, 157], "awar": 98, "awtd": 4, "azimiuth": 134, "azimuth": [4, 127, 134], "azimuth_kappa": 127, "azimuth_kei": 134, "azimuth_pr": 127, "azimuthreconstruct": [125, 127], "azimuthreconstructionwithkappa": [125, 127], "b": [36, 83, 87, 131, 157, 160, 162], "backbon": [120, 157], "backend": [5, 12, 15, 63, 65, 68, 70, 160], "backward": [98, 135], "baikal": 68, "baikalgvd8": [99, 103], "baikalgvdsmal": [67, 68], "bar": 133, "base": [0, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 41, 43, 45, 47, 49, 51, 52, 53, 54, 55, 57, 62, 64, 65, 66, 68, 69, 70, 72, 73, 75, 77, 78, 79, 81, 83, 85, 86, 89, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 122, 123, 124, 126, 127, 128, 130, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 146, 150, 151, 155, 156, 157, 158, 161, 162], "base_config": [138, 140], "baseclass": [72, 78], "baseconfig": [140, 141, 142, 143, 144, 146], "basemodel": [141, 143, 144], "basi": 162, "basic": [1, 88, 157], "batch": [0, 8, 13, 14, 65, 83, 86, 87, 104, 114, 120, 122, 124, 131, 136, 139, 156, 158, 161], "batch_idx": [104, 120, 123, 124, 131], "batch_norm_momentum": 86, "batch_norm_runn": 86, "batch_siz": [8, 9, 14, 131, 136, 156, 157, 162], "batch_split": 136, "batchnorm": [85, 86, 112], "batchnorm1d": [85, 86, 112], "batchsampl": 14, "becaus": [60, 157, 162], "been": [5, 75, 77, 135, 154, 162], "befor": [11, 13, 93, 108, 122, 128, 133], "behavior": 155, "behaviour": 133, "behind": [157, 162], "being": [22, 33, 77, 85, 126, 128, 156, 157, 162], "beitv2": 86, "belong": 131, "below": [5, 62, 97, 137, 154, 155, 157, 158, 160, 161, 162], "benchmark": [5, 131], "besid": 156, "bessel": 135, "best": [0, 133, 154, 158, 161], "better": 154, "between": [41, 68, 85, 88, 90, 91, 92, 93, 96, 104, 120, 124, 128, 131, 133, 135, 137, 143, 144, 157, 162], "bia": [85, 86, 130], "bias": [112, 157, 162], "big": [157, 162], "biject": 155, "bin": [14, 137], "binari": [124, 126, 135, 162], "binaryclassificationtask": [125, 126, 157, 162], "binaryclassificationtasklogit": [125, 126], "binarycrossentropyloss": [132, 135], "bjoernlow": [132, 137], "black": 154, "blob": [14, 85, 86, 112, 131, 135, 157], "block": [0, 1, 84, 86, 114, 157, 158, 161], "block_rel": [84, 86], "boilerpl": 162, "bool": [8, 14, 37, 38, 39, 61, 62, 64, 66, 77, 85, 86, 89, 94, 95, 97, 98, 104, 106, 108, 110, 112, 113, 114, 119, 124, 130, 131, 133, 135, 136, 137, 139, 145, 148, 149, 150, 151], "boolean": 24, "boost": 39, "border": 33, "both": [0, 25, 120, 124, 128, 157, 158, 160, 161, 162], "bottleneck": 14, "boundari": 33, "box": [155, 157, 162], "branch": 154, "break_cyclic_recurs": [35, 39], "broken": [47, 49, 52, 57], "bucket": [14, 130, 136], "bucket_width": 14, "bug": [154, 157], "build": [0, 1, 82, 92, 93, 97, 98, 100, 119, 120, 141, 143, 144, 157, 158, 161, 162], "built": [0, 82, 89, 94, 120, 156, 157, 158, 160, 161, 162], "c": [14, 22, 33, 36, 87, 93, 135, 157], "c_": 135, "cach": 13, "cache_s": 13, "calcul": [77, 85, 86, 92, 95, 97, 98, 104, 112, 120, 124, 131, 134, 135, 156, 157, 162], "calculate_distance_matrix": [82, 131], "calculate_xyzt_homophili": [82, 131], "calibr": [37, 39], "call": [7, 14, 25, 39, 85, 87, 128, 133, 137, 151, 155, 157, 160, 162], "callabl": [8, 11, 19, 39, 86, 87, 89, 94, 100, 101, 102, 103, 123, 128, 136, 137, 141, 143, 144, 145, 150, 160], "callback": [1, 104, 132, 157, 162], "can": [0, 1, 5, 9, 11, 13, 14, 16, 19, 25, 28, 69, 77, 85, 87, 94, 95, 97, 120, 137, 139, 141, 143, 144, 154, 155, 156, 157, 158, 160, 161, 162], "cannot": [39, 122, 137, 141, 146], "cap": 137, "capabl": [0, 124, 158, 161], "captur": [157, 162], "care": 156, "carlo": 37, "cascad": 127, "cascadefilter_13": 4, "case": [11, 13, 16, 25, 47, 49, 52, 57, 77, 87, 98, 128, 155, 156, 157, 159, 162], "cast": [25, 39], "cast_object_to_pure_python": [35, 39], "cast_pulse_series_to_pure_python": [35, 39], "caus": 157, "caveat": [157, 162], "cc": 134, "cd": 159, "center": 92, "centr": 92, "central": [157, 159], "certain": [98, 157], "cfg": 11, "cframe": [22, 33], "chain": [0, 1, 71, 74, 82, 104, 120, 124, 135, 158, 159, 161], "chang": [135, 154, 157, 162], "chapter": 97, "charg": [4, 14, 38, 85, 97, 98, 106, 122, 135, 156, 157, 162], "charge_after_": 97, "charge_after_t": 97, "charge_column": 97, "charge_index": 98, "charge_label": 97, "charge_standard": 97, "chargefilt": [35, 38], "check": [8, 37, 38, 39, 51, 61, 97, 139, 149, 150, 154, 160], "checkpoint": 157, "checkpointing_bas": 157, "chenli2049": 130, "cherenkov": [97, 98, 157, 160, 162], "choic": [156, 157, 162], "choos": [157, 162], "chosen": [92, 98, 151, 156], "chunk": [13, 14, 155], "chunk_siz": 13, "chunks_per_seg": 14, "citat": 5, "cite": 5, "ckpt": [157, 162], "ckpt_path": 104, "claim": [14, 135], "clamp": [86, 112], "clash": 151, "class": [4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 43, 45, 47, 49, 51, 52, 53, 54, 55, 57, 62, 64, 65, 66, 68, 69, 70, 72, 73, 75, 77, 78, 79, 83, 85, 86, 89, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 122, 123, 124, 126, 127, 128, 130, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 151, 154, 155, 156], "class_nam": [11, 38, 51, 53, 54, 55, 64, 144, 151, 156, 157, 162], "classif": [1, 82, 124, 125, 128, 135, 157, 162], "classifi": [126, 156, 157, 162], "classmethod": [8, 11, 119, 135, 141, 157, 162], "classvar": [141, 143, 144, 146], "clean": [77, 154, 159], "clean_up_data_object": 122, "cleaning_modul": [71, 76], "cleanup": 9, "clear": [151, 156], "cli": 139, "clone": 159, "close": 9, "closest": 133, "cloud": [157, 162], "cls_tocken": 113, "cluster": [5, 83, 86, 87, 97, 98, 106, 108, 110, 114, 122], "cluster_and_pad": [90, 98], "cluster_class": 98, "cluster_column": 98, "cluster_index": 87, "cluster_indic": 98, "cluster_on": [97, 98], "cluster_summarize_with_percentil": [90, 98], "clustered_x": 98, "clustersummaryfeatur": [96, 97], "cnn": [157, 162], "coarsen": [1, 82, 87], "code": [0, 33, 47, 57, 61, 85, 86, 89, 94, 112, 131, 143, 144, 155, 156, 157, 158, 160, 161, 162], "coincid": 97, "col": 95, "collabor": [1, 69, 157, 162], "collate_fn": [3, 8, 132, 136], "collator_sequence_bucklet": [132, 136], "collect": [11, 20, 35, 74, 97, 135, 152, 157, 162], "column": [7, 11, 13, 16, 19, 43, 45, 47, 49, 57, 61, 65, 66, 73, 79, 81, 85, 89, 92, 94, 95, 97, 98, 100, 104, 106, 122, 126, 127, 128, 131, 135, 137, 155, 156, 157, 160, 162], "column_nam": [43, 155], "column_offset": 98, "columnmissingexcept": [11, 13, 80, 81], "com": [11, 14, 16, 85, 86, 112, 113, 120, 130, 131, 135, 157, 159], "combin": [18, 36, 49, 106, 124, 135, 143, 162], "combine_extractor": [3, 17], "combinedextractor": [17, 18], "come": [5, 104, 128, 155, 156, 157, 162], "command": 139, "comment": 5, "commit": 154, "common": [0, 1, 135, 143, 144, 147, 150, 156, 157, 158, 161], "compar": [157, 162], "comparison": [28, 135], "compat": [51, 62, 104, 120, 124, 128, 155, 156, 157, 162], "competit": [85, 86, 101, 110, 113], "complementari": 131, "complet": [0, 14, 82, 157, 158, 159, 161, 162], "complex": [0, 82, 157, 158, 161], "compon": [0, 1, 82, 85, 86, 87, 104, 119, 120, 124, 157, 158, 161, 162], "compos": [157, 162], "composit": 151, "comprehens": 157, "compress": [5, 156], "compris": [0, 158, 161], "comput": [73, 86, 93, 98, 104, 124, 128, 131, 135, 156, 157], "compute_loss": [104, 124, 128], "compute_minkowski_distance_mat": [91, 93], "con": [157, 162], "concatdataset": 11, "concaten": [11, 36, 108], "concept": 154, "conceptu": [155, 157], "concret": 157, "condit": [14, 24, 120, 128, 135], "condition_on": 120, "confid": 157, "config": [1, 8, 62, 133, 135, 138, 139, 141, 142, 143, 144, 145, 146, 156, 157, 162], "config_dir": [157, 162], "configdict": [141, 143, 144, 146], "configur": [0, 1, 9, 11, 48, 49, 73, 74, 82, 104, 119, 138, 140, 141, 143, 144, 146, 151, 155, 157, 158, 161, 162], "configure_optim": 104, "conflict": 157, "conform": [141, 143, 144, 146], "conjunct": [19, 128], "conn": 157, "connect": [0, 9, 14, 85, 86, 92, 93, 94, 97, 112, 135, 156, 157, 158, 161], "consequ": 119, "consid": [77, 106, 156, 157, 160], "consist": [85, 139, 151, 154, 157, 162], "consortium": [0, 158, 161], "constant": [1, 3, 128, 131, 153, 156, 157, 162], "constitut": [65, 156], "constraint": [104, 157], "construct": [5, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 41, 43, 45, 51, 53, 54, 55, 62, 64, 65, 66, 68, 69, 70, 73, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 119, 122, 123, 124, 126, 127, 128, 130, 133, 134, 135, 136, 137, 139, 142, 143, 144, 151, 155, 156, 157, 162], "constructor": [155, 156, 157], "consult": 162, "consum": 157, "consumpt": 156, "conta": 14, "contain": [0, 5, 6, 7, 11, 13, 14, 16, 17, 18, 22, 36, 37, 40, 41, 42, 45, 47, 49, 51, 52, 53, 57, 61, 64, 65, 66, 67, 68, 72, 73, 74, 75, 77, 78, 79, 81, 89, 90, 91, 93, 94, 95, 96, 98, 104, 108, 114, 119, 120, 124, 128, 131, 135, 137, 139, 155, 156, 157, 158, 160, 161, 162], "containeris": 1, "content": [155, 162], "context": 70, "continu": [0, 135, 157, 158, 161], "contract": [14, 135], "contribut": [0, 135, 157, 158, 161], "contributor": 154, "conveni": [1, 154, 157, 162], "convent": [47, 49, 52, 57], "convers": [7, 40, 41, 45, 47, 57, 97, 156, 157, 160], "convert": [0, 1, 3, 5, 7, 13, 22, 33, 36, 38, 47, 48, 49, 57, 59, 65, 67, 131, 155, 156, 157, 158, 159, 160, 161], "converteddataset": 5, "convex": 33, "convnet": [82, 105, 157], "convolut": [86, 107, 108, 109, 110, 114], "coo": 156, "coordin": [33, 93, 97, 98, 100, 131, 157], "copi": [14, 135, 156], "copyright": [14, 135], "core": 111, "correct": [131, 135], "correpond": 60, "correspond": [11, 13, 16, 36, 39, 60, 89, 94, 95, 98, 108, 114, 137, 149, 156, 157, 160, 162], "cosh": 135, "could": [154, 157, 162], "count": [97, 98], "counterpart": 156, "cover": 62, "cpu": [7, 14, 47, 49, 57, 73], "creat": [5, 9, 14, 61, 89, 94, 95, 97, 98, 141, 142, 146, 154, 156, 162], "create_t": [58, 61], "create_table_and_save_to_sql": [58, 61], "creator": 5, "critic": [151, 157, 160], "cross": 135, "crossentropyloss": [132, 135], "csv": [136, 143, 156, 157, 160, 162], "ctx": 135, "cuda": 159, "cumul": 98, "curat": 5, "curated_datamodul": [1, 3], "curateddataset": [3, 5, 68, 70], "curi": [0, 158, 161], "current": [62, 122, 133, 154, 157], "curv": 137, "custom": [11, 51, 80, 89, 94, 133, 162], "custom_label_funct": [89, 94], "customdomcoarsen": [82, 83], "customis": 133, "cut": 136, "d": [36, 89, 93, 94, 97, 131, 154, 160], "damag": [14, 135], "data": [0, 1, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 83, 85, 86, 87, 88, 89, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 122, 123, 124, 128, 130, 131, 134, 136, 139, 141, 143, 146, 150, 153, 156, 157, 158, 161, 162], "data_path": [89, 94], "data_rep_cfg": 11, "data_represent": [1, 5, 11, 13, 16, 68, 70, 82, 92, 93, 94, 95, 97, 98, 115, 116, 117, 118, 143], "data_sourc": 14, "databas": [5, 16, 61, 66, 137, 156, 157], "database_exist": [58, 61], "database_indic": 136, "database_nam": 66, "database_path": [61, 137], "database_table_exist": [58, 61], "dataclass": [1, 3, 37], "dataconfig": [143, 156], "dataconvert": [1, 3, 48, 64, 65, 66, 157, 160], "dataformat": [63, 66], "datafram": [61, 62, 64, 100, 104, 136, 137, 155, 157, 160, 162], "dataload": [1, 3, 5, 9, 13, 68, 69, 70, 94, 104, 136, 146, 156, 157, 162], "datamodul": [1, 3, 5], "datarepresent": [5, 11, 13, 16, 68, 70, 88, 89, 94, 120], "dataset": [1, 3, 5, 8, 9, 12, 13, 14, 15, 16, 27, 62, 65, 68, 69, 70, 81, 89, 94, 106, 122, 139, 143, 153, 160, 162], "dataset_1": [156, 157], "dataset_2": [156, 157], "dataset_3": [156, 157], "dataset_arg": 9, "dataset_config": [138, 140, 157, 162], "dataset_config_path": [157, 162], "dataset_dir": 5, "dataset_refer": 9, "datasetconfig": [8, 11, 62, 140, 143, 156, 162], "datasetconfigsav": 143, "datasetconfigsaverabcmeta": [140, 143], "datasetconfigsavermeta": [140, 143], "db": [66, 136, 137, 156, 157], "db_count_norm": 137, "dbang_decay_length": 4, "ddp": [157, 162], "de": [36, 97], "deactiv": [104, 128], "deal": [14, 135], "debug": [151, 157], "decai": 113, "decor": [1, 138, 150], "dedic": 154, "deem": 39, "deep": [0, 5, 64, 66, 86, 110, 113, 155, 157, 158, 159, 160, 161, 162], "deepcopi": 148, "deepcor": [4, 23, 101], "deepcorefilter_13": 4, "deepic": [105, 113], "def": [155, 156, 157, 160, 162], "default": [5, 7, 9, 11, 13, 14, 16, 19, 21, 22, 23, 25, 33, 36, 38, 45, 47, 49, 52, 57, 61, 65, 66, 68, 69, 70, 72, 73, 75, 77, 78, 79, 85, 86, 87, 89, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 106, 107, 108, 109, 110, 112, 113, 114, 119, 120, 122, 128, 130, 131, 133, 134, 135, 137, 139, 141, 149, 156, 157], "default_prediction_label": [126, 127, 128, 162], "default_target_label": [126, 127, 128, 162], "default_typ": 61, "defin": [5, 11, 13, 16, 33, 62, 68, 69, 70, 73, 77, 79, 87, 88, 89, 90, 91, 92, 94, 96, 98, 120, 136, 143, 156, 157, 160, 162], "definit": [92, 94, 95, 97, 119, 128, 154, 157, 162], "deg": 95, "deg_scal": 86, "degre": [86, 95], "deleg": 151, "deliv": 104, "demo_ic": 103, "demo_wat": 103, "denot": [19, 133, 134, 155, 160], "dens": 87, "depend": [0, 85, 155, 156, 157, 158, 161, 162], "deploi": [0, 1, 71, 73, 157, 158, 159, 161], "deploy": [0, 1, 73, 75, 76, 77, 78, 79, 94, 153, 157, 158, 160, 161, 162], "deployment_modul": [1, 71], "deploymentmodul": [71, 72, 73, 75, 78, 79], "deprec": [5, 11, 13, 16, 46, 47, 56, 57, 68, 70, 75, 115, 116, 117, 118, 148], "deprecated_method": [3, 46, 56, 71, 74], "deprecation_tool": [1, 138], "depth": [86, 98, 113, 130], "depth_rel": 113, "describ": [5, 154, 157], "descript": [5, 119, 139], "design": [1, 157, 160], "desir": [137, 149], "detail": [1, 5, 97, 106, 119, 120, 128, 133, 156, 157, 159, 160, 162], "detector": [0, 1, 33, 74, 82, 89, 94, 95, 97, 101, 102, 103, 156, 157, 158, 161, 162], "detector_respons": 157, "determin": [72, 75, 78, 106], "develop": [0, 1, 97, 154, 156, 157, 158, 159, 160, 161, 162], "deviat": [89, 94, 95, 98], "devic": 73, "df": [61, 155], "dfg": [0, 158, 161], "diagon": 131, "dict": [5, 8, 9, 11, 13, 16, 21, 25, 36, 39, 61, 73, 89, 94, 95, 97, 100, 101, 102, 103, 104, 113, 119, 120, 123, 133, 136, 139, 141, 143, 144, 145, 146, 148, 155, 156, 157, 160], "dictionari": [11, 13, 16, 19, 21, 36, 37, 39, 51, 61, 89, 94, 95, 119, 141, 143, 144, 146, 155, 160], "did": 14, "differ": [0, 11, 13, 16, 19, 22, 41, 42, 43, 45, 51, 52, 53, 74, 88, 95, 136, 154, 155, 156, 157, 158, 160, 161, 162], "difficult": 156, "diffier": [157, 162], "digit": 85, "dim": [85, 86], "dim_emb": 85, "dim_in": [85, 86], "dim_out": 86, "dimenion": [108, 110, 114], "dimens": [85, 86, 98, 101, 102, 103, 106, 107, 108, 110, 112, 113, 114, 122, 128, 130, 131, 135, 160, 162], "dimension": [85, 86, 131, 156, 162], "dir": 149, "dir_with_fil": [155, 160], "dir_x_pr": 127, "dir_y_pr": 127, "dir_z_pr": 127, "direct": [98, 110, 126, 127, 128, 132, 134, 156, 160], "direction_kappa": 127, "directionreconstructionwithkappa": [125, 127, 157, 162], "directli": [0, 108, 114, 155, 157, 158, 160, 161, 162], "directori": [5, 7, 47, 49, 51, 52, 53, 54, 55, 57, 64, 65, 68, 69, 70, 133, 149, 155, 157, 162], "dirti": 157, "discard_empty_ev": 77, "disco": 131, "disconnect": 156, "discuss": 154, "disk": [155, 156, 157], "distanc": [33, 92, 93, 95, 131], "distance_as_edge_featur": 95, "distribut": [14, 87, 108, 120, 127, 131, 135, 137, 159, 162], "distribution_strategi": 104, "ditto": 135, "diverg": 135, "divid": [72, 75, 78, 128], "dk": 5, "dl": [157, 162], "dnn": [27, 34], "do": [0, 5, 14, 73, 77, 135, 143, 144, 154, 156, 157, 158, 161, 162], "do_shuffl": [3, 8], "doc": 157, "docformatt": 154, "docker": 1, "docstr": 154, "document": [14, 120, 135, 160, 162], "doe": [39, 126, 128, 144, 155, 156, 157, 162], "doesn": 61, "dom": [8, 11, 13, 16, 83, 87, 97, 98, 106, 122, 136, 157, 162], "dom_i": [4, 97, 101], "dom_numb": 4, "dom_tim": [4, 97], "dom_typ": 4, "dom_x": [4, 97, 101], "dom_z": [4, 97, 101], "domain": [0, 1, 3, 71, 157, 158, 161], "domandtimewindowcoarsen": [82, 83], "domcoarsen": [82, 83], "don": [133, 155], "done": [25, 87, 151, 154, 155, 157, 160], "dot": 86, "doubl": 97, "download": [5, 68, 69, 70, 159], "download_dir": [5, 68, 69, 70], "downsid": 156, "draw": 14, "drawn": [90, 91, 95, 96, 157, 162], "drhb": [14, 113], "drop": [14, 86, 107], "drop_last": 14, "drop_path": 86, "drop_prob": 86, "dropout": [86, 106, 112, 114, 122], "dropout_prob": 86, "dropout_ratio": 107, "dropout_readout": 114, "droppath": [84, 86], "droput": 86, "dtype": [11, 13, 16, 89, 94, 95, 152, 156, 157, 162], "due": [156, 157, 162], "dummy_pid": [156, 157], "dump": [141, 143, 144, 155, 156, 157], "duplciat": 133, "duplic": 97, "dure": [86, 94, 113, 128, 133, 160], "dynam": [25, 86, 108, 109, 110, 114, 157, 162], "dynedg": [77, 79, 82, 105, 109, 110, 113, 114, 157, 162], "dynedge_arg": 113, "dynedge_jinst": [82, 105], "dynedge_kaggle_tito": [82, 105], "dynedge_layer_s": [108, 114, 157, 162], "dynedgeconv": [84, 86, 108, 114], "dynedgejinst": [105, 109], "dynedgetito": [105, 106, 110], "dyntran": [84, 86, 106, 110], "dyntrans1": 86, "dyntrans_layer_s": [106, 110], "e": [1, 5, 8, 9, 11, 13, 16, 18, 19, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 39, 41, 45, 61, 62, 66, 73, 77, 79, 83, 85, 86, 87, 89, 92, 94, 95, 97, 98, 100, 101, 102, 103, 107, 111, 112, 119, 120, 123, 124, 126, 127, 128, 131, 133, 134, 135, 137, 141, 151, 154, 155, 156, 157, 159, 162], "each": [5, 14, 25, 36, 39, 60, 61, 65, 66, 72, 73, 75, 78, 83, 85, 86, 87, 89, 92, 94, 95, 97, 98, 101, 102, 103, 106, 108, 110, 114, 122, 126, 128, 131, 133, 135, 136, 149, 155, 156, 157, 160, 162], "earli": [133, 139], "early_stopping_pati": [104, 146], "earlystop": 133, "easi": [0, 155, 156, 157, 158, 161, 162], "easili": [1, 157, 162], "easy_model": [1, 82], "easysyntax": [82, 104, 120, 124], "ed": 135, "edg": [82, 85, 86, 87, 88, 90, 93, 94, 95, 96, 97, 108, 109, 110, 112, 114, 115, 117, 131, 156, 157, 162], "edge_attr": [156, 157], "edge_definit": [94, 95], "edge_enh": [86, 112], "edge_index": [83, 86, 131, 156, 157], "edge_weight": 131, "edgeconv": 86, "edgeconvtito": [84, 86], "edgedefinit": [90, 91, 92, 93, 94, 95, 96, 157, 162], "edgelessgraph": [90, 95], "edu": 69, "effect": [133, 154, 157, 162], "effici": 14, "effort": [154, 156, 160], "either": [0, 5, 9, 11, 16, 22, 33, 68, 70, 86, 97, 112, 135, 155, 157, 158, 161], "elast": 4, "element": [11, 13, 19, 36, 39, 104, 120, 124, 131, 136, 145, 155, 157, 160], "elementwis": 135, "elimin": 77, "els": [77, 134, 155, 160], "ema": 123, "emb_dim": 85, "embed": [82, 84, 106, 113, 122, 126, 128, 130], "embedding_dim": [106, 122], "empti": 77, "en": 157, "enabl": [0, 3, 97, 104, 158, 161], "enable_edge_transform": [86, 112], "encod": [85, 95, 112, 131, 134], "encount": 157, "encourag": [154, 157], "end": [0, 1, 5, 14, 98, 133, 157, 158, 161], "energi": [4, 127, 128, 137, 156, 157, 160], "energy_cascad": [4, 127], "energy_cascade_pr": 127, "energy_pr": 127, "energy_reco": 79, "energy_sigma": 127, "energy_track": [4, 127], "energy_track_pr": 127, "energyreconstruct": [125, 127, 157, 162], "energyreconstructionwithpow": [125, 127], "energyreconstructionwithuncertainti": [125, 127, 157], "energytcreconstruct": [125, 127], "engin": [0, 158, 161], "enough": 119, "ensemble_dataset": [156, 157], "ensembledataset": [10, 11, 143, 156, 157], "ensembleloss": [132, 135], "ensur": [39, 60, 135, 151, 154, 162], "entir": [11, 13, 119, 155, 157, 162], "entiti": [157, 162], "entri": [77, 79, 108, 114, 131, 139, 160], "entropi": 135, "enum": 39, "env": 159, "environ": [52, 159], "ep": [152, 157, 162], "epoch": [123, 133, 139], "eps_lik": [138, 152], "equival": [39, 157, 162], "erda": [5, 68], "erdahost": 70, "erdahosteddataset": [3, 5, 68, 70], "error": [135, 151, 154, 155, 157], "especi": 77, "establish": 162, "estim": 131, "etc": [0, 14, 135, 151, 156, 157, 158, 160, 161], "eth": 131, "euclidean": [92, 131, 154], "euclideandistanceloss": [132, 135], "euclideanedg": [91, 92], "european": [0, 158, 161], "eval": [119, 159], "evalu": [5, 120, 128], "even": 60, "event": [0, 1, 5, 7, 9, 11, 13, 14, 16, 18, 30, 33, 45, 47, 49, 57, 61, 62, 65, 66, 68, 69, 70, 77, 85, 87, 89, 94, 97, 98, 106, 124, 128, 130, 131, 134, 135, 136, 137, 143, 155, 157, 158, 160, 161, 162], "event_no": [7, 11, 13, 16, 47, 49, 57, 61, 62, 65, 66, 137, 143, 156, 157, 162], "event_tim": 4, "event_truth": 5, "eventid": 4, "events_per_batch": 65, "everi": [114, 120, 155, 157, 160], "everyth": [157, 162], "everytim": 154, "exact": [109, 135, 162], "exactli": [131, 135, 151, 156], "exampl": [7, 14, 36, 62, 83, 87, 98, 120, 131, 135, 143, 144, 155, 156, 159], "example_energy_reconstruction_model": [139, 157, 162], "exce": 137, "exceed": 66, "except": [1, 153, 155], "exclud": [19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "exclude_kei": 25, "excluding_valu": 131, "execut": 61, "exist": [0, 11, 13, 16, 61, 82, 120, 134, 143, 156, 157, 158, 161, 162], "exist_ok": [157, 162], "expand": [0, 157, 158, 161], "expans": 113, "expect": [61, 62, 64, 77, 79, 89, 94, 97, 156, 157, 162], "expects_merged_datafram": 64, "experi": [0, 1, 5, 6, 7, 50, 51, 73, 132, 155, 157, 158, 161], "experiment": 162, "expert": 1, "explain": 157, "explicitli": [136, 141, 146], "exponenti": 135, "export": [155, 156, 157, 160, 162], "expos": 1, "express": [14, 119, 135], "extend": [0, 1, 33, 155, 156, 158, 161], "extend_boundari": 33, "extens": [1, 5, 51, 64, 149], "extern": [156, 157], "extra": [86, 95, 162], "extra_repr": [86, 119], "extra_repr_recurs": 119, "extracor_nam": 51, "extract": [7, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 41, 43, 44, 45, 60, 77, 79, 128, 131, 155, 157, 160], "extractor": [1, 3, 7, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 57, 77, 79], "extractor_nam": [18, 19, 21, 22, 24, 25, 28, 41, 43, 45, 155, 160], "f": [87, 155, 157, 162], "f1": 87, "f2": 87, "f_absorpt": 98, "f_scatter": 98, "factor": [86, 97, 98, 131, 133, 135, 157, 162], "fail": 18, "fals": [14, 38, 66, 77, 85, 86, 89, 94, 95, 97, 108, 112, 113, 114, 119, 130, 131, 133, 135, 137, 157, 162], "fanci": 157, "fashion": 1, "fast": [0, 156, 157, 158, 161], "faster": [0, 155, 156, 158, 161], "favorit": 159, "favourit": 157, "fbeezabg5a": 5, "fc": [86, 87], "featur": [1, 3, 4, 5, 11, 13, 16, 21, 22, 23, 66, 68, 69, 70, 77, 79, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 113, 114, 122, 126, 130, 131, 136, 143, 154, 156, 157, 160, 162], "feature_idx": 98, "feature_map": [100, 101, 102, 103, 160], "feature_nam": [97, 98], "features_subset": [86, 106, 108, 110, 114, 122, 157, 162], "feedforward": 86, "feel": 157, "fetch": 139, "few": [0, 82, 154, 155, 156, 157, 158, 161, 162], "fiber_id": 102, "field": [95, 120, 131, 134, 141, 146, 148, 155, 156, 157, 160], "figur": 0, "file": [0, 1, 3, 5, 7, 11, 13, 14, 16, 18, 19, 22, 33, 36, 38, 41, 42, 43, 44, 45, 47, 49, 51, 52, 53, 54, 55, 57, 59, 60, 64, 65, 66, 72, 73, 75, 77, 78, 79, 89, 94, 119, 133, 135, 136, 139, 140, 141, 142, 143, 144, 149, 151, 155, 156, 157, 158, 159, 160, 161, 162], "file_extens": 64, "file_handl": 151, "file_loc": 69, "file_path": [136, 155, 160], "file_read": [7, 155, 160], "filehandl": 151, "filenam": 149, "fileread": [19, 51], "files_list": 60, "filesi": [1, 138], "fill": [5, 14, 85], "fill_valu": [85, 112], "filter": [38, 47, 49, 52, 57, 151, 160], "filter_ani": 38, "filter_nam": 38, "filtermask": 38, "final": [0, 7, 87, 133, 143, 156, 157, 158, 161], "find": [22, 33, 93, 149, 156, 157, 160, 162], "find_fil": [51, 52, 53, 54, 55, 155], "find_i3_fil": [138, 149], "first": [85, 93, 97, 98, 106, 122, 133, 136, 154, 157, 160], "fisher": 135, "fit": [9, 14, 104, 135, 137, 146, 157, 162], "fit_weight": 137, "five": [95, 156], "fix": [62, 157], "flag": [23, 77], "flake8": 154, "flatten": 36, "flatten_nested_dictionari": [35, 36], "flexibil": 162, "flexibl": 62, "float": [11, 13, 16, 33, 38, 77, 85, 86, 89, 92, 93, 94, 95, 97, 98, 104, 106, 107, 112, 114, 122, 128, 133, 135, 136, 137, 143, 156], "float32": [11, 13, 16, 89, 94, 95], "float64": 135, "flow": [120, 128, 162], "flow_lay": [120, 128], "flowchart": [0, 158, 161], "fly": [156, 157], "fn": [11, 39, 141, 145], "fn_kwarg": 145, "folder": [47, 49, 52, 53, 54, 55, 57, 72, 155], "folk": 157, "follow": [14, 104, 108, 114, 120, 124, 135, 137, 154, 155, 156, 157], "fork": 154, "form": [0, 19, 82, 112, 126, 141, 146, 155, 156, 158, 161, 162], "format": [0, 1, 3, 5, 7, 11, 21, 36, 40, 41, 51, 53, 64, 65, 66, 85, 119, 122, 143, 154, 155, 156, 157, 158, 159, 160, 161, 162], "forward": [83, 85, 86, 89, 92, 94, 95, 97, 100, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 122, 124, 128, 130, 135, 162], "found": [39, 47, 49, 52, 57, 65, 69, 98, 135, 156, 157], "four": 85, "fourier": 85, "fourierencod": [84, 85, 113, 130], "fraction": [107, 122, 136], "frame": [20, 22, 24, 25, 33, 35, 38, 39, 79], "frame_is_montecarlo": [35, 37], "frame_is_nois": [35, 37], "framework": [0, 157, 158, 161], "free": [0, 14, 135, 157, 158, 161], "freeli": 157, "frequenc": 85, "friendli": [0, 64, 66, 155, 157, 158, 159, 161], "from": [0, 1, 5, 7, 8, 9, 11, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 33, 36, 37, 38, 39, 41, 43, 44, 45, 51, 52, 54, 55, 59, 64, 66, 68, 69, 70, 85, 87, 89, 92, 94, 95, 97, 98, 100, 101, 102, 103, 110, 113, 119, 120, 123, 126, 127, 128, 131, 133, 134, 135, 141, 142, 144, 146, 151, 154, 155, 156, 157, 158, 160, 161, 162], "from_config": [11, 119, 142, 143, 144, 156, 157, 162], "from_dataset_config": [8, 157, 162], "full": [65, 131, 157, 162], "full_edge_index": [82, 131], "fulli": [85, 112, 155, 157, 162], "func": [19, 157], "function": [0, 7, 8, 11, 14, 22, 39, 41, 45, 60, 61, 77, 79, 83, 86, 87, 89, 94, 98, 100, 101, 102, 103, 108, 112, 114, 119, 120, 128, 131, 135, 136, 138, 143, 144, 145, 148, 149, 150, 152, 156, 158, 160, 161, 162], "fund": [0, 158, 161], "furnish": [14, 135], "further": [77, 98], "furthermor": 122, "g": [1, 5, 11, 13, 16, 18, 19, 22, 33, 36, 39, 61, 62, 66, 77, 79, 86, 87, 89, 94, 97, 98, 112, 128, 131, 135, 137, 151, 154, 156, 157, 159, 162], "galatict": 26, "gamma_1": 86, "gamma_2": 86, "gather": [14, 98], "gather_cluster_sequ": [90, 98], "gather_len_matched_bucket": [10, 14], "gaussian": 131, "gcd": [18, 22, 33, 37, 47, 49, 52, 57, 60, 75, 77, 78, 79, 149], "gcd_dict": [37, 39], "gcd_file": [6, 18, 22, 33, 75, 77, 78, 79], "gcd_list": [60, 149], "gcd_rescu": [47, 49, 52, 57, 149], "gcd_shuffl": 60, "gelu": 86, "gener": [0, 5, 9, 11, 13, 14, 16, 25, 38, 51, 64, 66, 68, 72, 77, 78, 79, 85, 89, 90, 91, 94, 95, 96, 98, 126, 135, 137, 156, 157, 158, 160, 161, 162], "geometr": 157, "geometri": [68, 89, 94, 100, 162], "geometry_t": [100, 101, 102, 103, 160], "geometry_table_path": [101, 102, 103, 160], "germani": [0, 158, 161], "get": [19, 37, 61, 98, 100, 133, 136, 157, 162], "get_all_argument_valu": [140, 141], "get_all_grapnet_class": [140, 145], "get_field": [82, 131], "get_graphnet_class": [140, 145], "get_lr": 133, "get_map_funct": 7, "get_member_vari": [35, 39], "get_metr": 133, "get_om_keys_and_pulseseri": [35, 37], "get_predict": [132, 136], "get_primary_kei": [58, 61], "get_rw_landing_prob": [82, 131], "gev": 68, "gframe": [22, 33], "gggt": [120, 128], "git": 159, "github": [11, 14, 16, 85, 86, 112, 113, 120, 128, 130, 131, 135, 157, 159], "given": [5, 11, 14, 16, 22, 33, 66, 68, 69, 70, 85, 87, 92, 128, 131, 135, 137, 139, 156, 160], "glauch": 97, "glob": 155, "global": [2, 4, 106, 108, 110, 114, 119, 157], "global_index": 7, "global_pooling_schem": [106, 108, 110, 114, 157, 162], "gnlabelcascadeenergydeposit": 4, "gnlabelcascadeenergydepositedprimari": 4, "gnlabelenergydepositedprimari": 4, "gnlabelenergydepositedtot": 4, "gnlabelenergyprimari": 4, "gnlabelhighestedaughterdist": 4, "gnlabelhighestedaughterefract": 4, "gnlabelhighesteiniceparticledist": 4, "gnlabelhighesteiniceparticleefract": 4, "gnlabelhighesteiniceparticleeonentr": 4, "gnlabelhighesteiniceparticleischild": 4, "gnlabeltrackenergydeposit": 4, "gnlabeltrackenergydepositedprimari": 4, "gnlabeltrackenergyonentr": 4, "gnlabeltrackenergyonentranceprimari": 4, "gnn": [1, 74, 82, 106, 107, 108, 109, 110, 112, 113, 114, 120, 122, 130, 157, 162], "go": [14, 154, 157], "googl": 154, "got": 155, "gpu": [104, 139, 157, 159, 162], "grab": 128, "grad_output": 135, "gradient_clip_v": 104, "grant": [0, 14, 135, 158, 161], "graph": [0, 1, 5, 8, 11, 13, 16, 68, 70, 82, 85, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 100, 112, 116, 117, 118, 122, 131, 134, 136, 154, 156, 157, 158, 161, 162], "graph_definit": [5, 11, 13, 16, 68, 69, 70, 88, 90, 120, 136, 143, 156, 157, 162], "graph_definiton": 156, "graphdefinit": [5, 11, 13, 16, 68, 69, 70, 88, 89, 90, 91, 94, 95, 96, 120, 136, 154, 156, 157], "graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 47, 49, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162], "graphnet_file_read": [3, 50, 155, 160], "graphnet_model": 133, "graphnet_modul": 75, "graphnet_writ": [3, 63], "graphnetdatamodul": [3, 5, 9], "graphnetearlystop": [132, 133], "graphnetfileread": [7, 50, 51, 52, 53, 54, 55, 155], "graphnetfilesavemethod": [64, 66], "graphneti3deploy": [74, 75], "graphnetwrit": [7, 63, 64, 65, 66, 155], "grapnet": [145, 157], "greatli": [157, 162], "grit": [82, 85, 86, 105, 131], "grit_lay": 86, "grit_model": 112, "gritsparsemha": [84, 86], "grittransformerlay": [84, 86], "group": [0, 14, 87, 157, 158, 161], "group_bi": [84, 87], "group_pulses_to_dom": [84, 87], "group_pulses_to_pmt": [84, 87], "groupbi": 87, "guarante": [157, 162], "guid": 154, "guidelin": 154, "gvd": [68, 103], "gz": 5, "h5": [43, 54, 155], "h5_extractor": [17, 42], "h5extractor": [7, 42, 43, 51, 155], "h5hitextractor": [42, 43, 155], "h5py": 155, "h5truthextractor": [42, 43, 155], "ha": [0, 5, 39, 61, 75, 77, 98, 107, 135, 149, 155, 156, 157, 158, 159, 160, 161, 162], "had": 160, "hadron": 127, "hand": [25, 156, 157], "handi": 60, "handl": [25, 135, 139, 148, 151, 155, 156, 157], "handler": 151, "happen": [98, 137, 156, 160], "hard": [33, 97], "has_extens": [138, 149], "has_icecube_packag": [138, 150], "has_jammy_flows_packag": [138, 150], "has_torch_packag": [138, 150], "have": [1, 5, 13, 25, 47, 49, 52, 57, 61, 62, 66, 87, 89, 94, 98, 113, 128, 154, 156, 157, 160, 162], "head": [86, 106, 110, 112, 113, 128, 130, 162], "head_dim": 86, "head_siz": 113, "heavi": 155, "height": 131, "help": [77, 79, 139, 154, 156, 157, 160, 162], "here": [89, 94, 154, 156, 157, 159, 160, 162], "herebi": [14, 135], "hidden": [85, 86, 106, 108, 109, 112, 114, 122], "hidden_dim": [112, 113, 130], "hidden_featur": 86, "hidden_s": [122, 126, 127, 128, 157, 162], "high": [0, 157, 158, 161], "higher": 156, "highest_protocol": 155, "hint": 154, "hit": [8, 97, 98, 136, 156, 157, 160], "hitdata": 43, "hlc": [4, 97], "hlc_name": 97, "hold": [89, 94, 98, 155, 160, 162], "holder": [14, 135], "home": [101, 102, 103, 139, 155, 160], "homogenized_qtot": [4, 38], "homophili": 131, "hook": 154, "horizon": [0, 158, 161], "host": [5, 68, 69, 160], "how": [5, 14, 90, 91, 96, 155, 157, 162], "howev": [47, 49, 52, 57, 156, 157], "html": [120, 128, 157], "http": [5, 11, 14, 16, 69, 85, 86, 92, 97, 112, 113, 114, 120, 128, 130, 131, 135, 154, 157, 159], "hull": 33, "human": 157, "hybrid": 26, "hyperparamet": [144, 157, 162], "i": [0, 1, 5, 9, 11, 13, 14, 16, 18, 19, 22, 25, 33, 36, 37, 38, 39, 41, 43, 45, 47, 49, 52, 57, 60, 61, 62, 65, 66, 69, 72, 75, 77, 78, 79, 83, 85, 86, 87, 89, 92, 94, 95, 97, 98, 107, 108, 112, 113, 114, 120, 122, 124, 127, 128, 131, 133, 134, 135, 136, 137, 139, 141, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162], "i3": [1, 21, 22, 33, 37, 38, 39, 47, 49, 52, 57, 60, 72, 77, 79, 149, 157, 159], "i3_fil": [6, 18, 22, 33], "i3_filt": [20, 35, 47, 49, 52, 57], "i3_list": [60, 149], "i3_shuffl": 60, "i3calibr": 37, "i3deploy": [6, 71, 75, 76], "i3dictvalueextractor": [17, 20], "i3extractor": [7, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 49, 51, 57], "i3featureextractor": [4, 17, 20, 77, 79], "i3featureextractoricecube86": [20, 23], "i3featureextractoricecubedeepcor": [20, 23], "i3featureextractoricecubeupgrad": [20, 23], "i3fileset": [3, 6, 51, 52], "i3filt": [35, 38, 47, 49, 52, 57], "i3filtermap": 24, "i3filtermapextractor": [17, 20], "i3filtermask": [24, 35, 38], "i3fram": [20, 21, 25, 37, 39, 77, 79], "i3galacticplanehybridrecoextractor": [20, 26], "i3genericextractor": [17, 20], "i3hybridrecoextractor": [17, 20], "i3inferencemodul": [75, 76, 77, 78, 79], "i3mctre": 33, "i3modul": [1, 71, 73, 75], "i3ntmuonlabelextractor": [20, 27], "i3ntmuonlabelsextractor": [17, 20], "i3particl": 28, "i3particleextractor": [17, 20], "i3pisaextractor": [17, 20], "i3pulsecleanermodul": [76, 77], "i3pulsenoisetruthflagicecubeupgrad": [20, 23], "i3quesoextractor": [17, 20], "i3read": [3, 47, 49, 50, 57], "i3retroextractor": [17, 20], "i3splinempeextractor": [17, 20], "i3splinempeicextractor": [20, 32], "i3toparquetconvert": [47, 48, 49], "i3tosqliteconvert": [48, 49, 57], "i3truthextractor": [4, 17, 20], "i3tumextractor": [17, 20], "ic": [97, 110, 113], "ice_arg": 97, "ice_transpar": [90, 98], "icecub": [1, 3, 5, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 47, 49, 52, 57, 69, 71, 74, 77, 78, 79, 82, 86, 97, 98, 99, 110, 113, 150, 157, 162], "icecube86": [4, 99, 101, 103], "icecube86prometheu": [99, 103], "icecube_deepcor": 103, "icecube_gen2": 103, "icecube_upgrad": [101, 103], "icecubedeepcor": [99, 101], "icecubedeepcore8": [99, 103], "icecubegen2": [99, 103], "icecubehosteddataset": [3, 5, 69], "icecubekaggl": [99, 101], "icecubeupgrad": [99, 101], "icecubeupgrade7": [99, 103], "icedemo81": [99, 103], "icemix": [82, 105], "icemixnod": [96, 97], "icetrai": [37, 39, 47, 49, 52, 57, 73, 74, 150, 159], "icetray_verbos": [47, 49, 52, 57], "id": [5, 7, 9, 13, 47, 49, 57, 66, 89, 94, 97, 100, 136, 155, 156, 157, 160], "id_column": 97, "ideal": 162, "ident": [87, 95, 100, 101, 102, 103, 128, 131], "identifi": [7, 11, 13, 16, 33, 97, 98, 131, 143, 144, 160], "identify_indic": [90, 98], "identitytask": [125, 126, 128], "ie": 106, "ignor": [11, 13, 16, 39, 65, 131], "illustr": [0, 154, 155, 158, 161], "imag": [0, 1, 154, 157, 158, 161, 162], "impact": 113, "implement": [1, 5, 14, 19, 22, 51, 64, 73, 78, 86, 92, 106, 107, 108, 109, 110, 112, 113, 114, 122, 130, 131, 135, 154, 155, 157, 162], "impli": [14, 135], "import": [0, 1, 5, 61, 82, 115, 116, 117, 118, 138, 155, 156, 157, 158, 160, 161, 162], "impos": [11, 13, 104], "improv": [0, 1, 139, 157, 158, 161, 162], "in_dim": 86, "in_featur": 86, "inaccur": 98, "inact": [89, 94], "includ": [1, 5, 13, 14, 68, 69, 70, 86, 97, 104, 135, 141, 154, 156, 157, 160, 162], "include_dynedg": 113, "incom": 95, "incompat": 157, "incomplet": 14, "incorpor": 85, "incorrect": 97, "increas": [0, 133, 158, 161], "indent": 119, "independ": [72, 75, 78, 155], "index": [1, 7, 11, 13, 16, 39, 61, 65, 66, 69, 87, 93, 98, 100, 106, 122, 131, 133, 156, 157, 162], "index_column": [7, 11, 13, 16, 47, 49, 57, 61, 62, 65, 66, 136, 137, 143, 156, 157], "indic": [14, 62, 81, 87, 93, 95, 97, 98, 106, 122, 128, 131, 133, 135, 139, 154, 157, 162], "indicesfor": 37, "indici": [11, 13, 16, 37, 62], "individu": [0, 11, 13, 16, 87, 108, 131, 156, 158, 161, 162], "induct": 112, "industri": [0, 3, 158, 161], "inelast": [4, 127], "inelasticity_pr": 127, "inelasticityreconstruct": [125, 127], "inf": 131, "infer": [0, 1, 66, 71, 73, 74, 77, 79, 104, 128, 157, 158, 161], "inference_modul": [71, 76], "info": [151, 157], "inform": [5, 11, 13, 16, 18, 19, 22, 25, 33, 41, 43, 45, 68, 69, 70, 89, 94, 97, 98, 119, 155, 156, 157, 160, 162], "ingest": [0, 1, 3, 99, 158, 161], "inherit": [5, 19, 22, 39, 51, 64, 97, 100, 135, 151, 155, 156, 157, 162], "init_fn": [143, 144], "init_global_index": [3, 7], "init_predict_tqdm": 133, "init_test_tqdm": 133, "init_train_tqdm": 133, "init_validation_tqdm": 133, "init_valu": 86, "initi": [7, 38, 52, 66, 72, 75, 78, 86, 89, 93, 98, 106, 113], "initial_st": 45, "initialis": [144, 157, 162], "injection_azimuth": [4, 156, 157], "injection_bjorkeni": [4, 156, 157], "injection_bjorkenx": [4, 156, 157], "injection_column_depth": [4, 156, 157], "injection_energi": [4, 156, 157], "injection_interaction_typ": [4, 156, 157], "injection_position_i": [4, 156, 157], "injection_position_x": [4, 156, 157], "injection_position_z": [4, 156, 157], "injection_typ": [4, 156, 157], "injection_zenith": [4, 156, 157, 162], "innov": [0, 158, 161], "inptut": 98, "input": [5, 7, 11, 13, 16, 47, 49, 51, 52, 57, 64, 68, 69, 70, 72, 75, 77, 78, 79, 85, 86, 89, 94, 95, 97, 98, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 122, 126, 128, 130, 131, 141, 146, 148, 149, 155, 156, 157, 160, 162], "input_dim": [86, 162], "input_dir": [155, 160], "input_featur": [89, 94, 95, 100], "input_feature_nam": [89, 94, 95, 97, 100], "input_fil": [51, 72], "input_nam": 98, "ins": 100, "insert": 98, "insid": 156, "inspect": [157, 162], "inspir": [114, 131], "instal": [154, 157], "instanc": [11, 19, 22, 33, 39, 41, 43, 45, 47, 49, 52, 57, 89, 94, 119, 134, 136, 142, 144, 155, 156, 157, 162], "instanti": [7, 9, 144, 155, 156, 160], "instead": [5, 11, 13, 16, 22, 33, 47, 49, 52, 57, 68, 70, 75, 120, 135, 157, 162], "int": [5, 7, 8, 9, 11, 13, 14, 16, 27, 30, 38, 47, 49, 51, 52, 53, 54, 55, 57, 62, 64, 65, 66, 69, 72, 75, 78, 85, 86, 87, 89, 92, 93, 94, 95, 97, 98, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 122, 123, 124, 126, 127, 128, 130, 131, 133, 135, 136, 137, 139, 143, 146, 151, 155, 162], "integ": [61, 106, 108, 109, 114, 135, 156, 157], "integer_primary_kei": 61, "integr": 162, "intend": [106, 122, 157], "interact": [127, 134, 156, 157], "interaction_kei": 134, "interaction_tim": [4, 127], "interaction_time_pr": 127, "interaction_typ": [4, 134], "interchang": [157, 162], "interfac": [0, 143, 144, 157, 158, 159, 160, 161], "interim": [7, 63, 64, 65, 66, 155], "intermedi": [0, 1, 3, 7, 11, 107, 157, 158, 161], "intern": [3, 17, 41, 49, 53], "internal_parquet_read": [3, 50], "interpol": [98, 133], "interpret": 126, "interv": [85, 157, 162], "intract": 156, "introduc": 157, "introduct": [120, 128], "intuit": [151, 162], "invers": 128, "invert": 128, "involv": 62, "io": [120, 128, 154, 157], "iop": 157, "iopscienc": 157, "is_bad_dom": 4, "is_boost_class": [35, 39], "is_boost_enum": [35, 39], "is_bright_dom": 4, "is_errata_dom": 4, "is_gcd_fil": [138, 149], "is_graphnet_class": [140, 145], "is_graphnet_modul": [140, 145], "is_i3_fil": [138, 149], "is_icecube_class": [35, 39], "is_method": [35, 39], "is_saturated_dom": 4, "is_typ": [35, 39], "iseecub": [82, 129], "isinst": 155, "isn": 39, "isol": 95, "issu": [11, 16, 157, 162], "iter": 11, "its": [39, 122, 156, 157, 162], "itself": [39, 128, 155, 157, 162], "iv": 135, "jammy_flow": [120, 128, 150], "job": 160, "join": [155, 157], "json": [36, 143, 156, 157], "just": [5, 87, 155, 156, 157, 162], "k": [86, 92, 95, 106, 108, 110, 114, 122, 131, 135], "kaggl": [4, 85, 86, 101, 110, 113], "kappa": [127, 135], "kappa_switch": 135, "karg": [119, 123], "keep": [19, 22, 38, 41, 43, 45, 97, 155], "kei": [11, 19, 21, 23, 24, 25, 33, 36, 37, 39, 61, 66, 86, 87, 97, 134, 143, 144, 155, 156, 157, 160], "kept": 38, "key_padding_mask": 86, "keyword": [7, 133, 141, 146], "kind": [14, 135, 160], "km3net": [157, 162], "knn": 95, "knn_graph_batch": [82, 131], "knndistanceedg": [91, 92], "knnedg": [91, 92], "knngraph": [90, 95, 156, 157, 162], "knngraphrrwp": [90, 95], "knngraphrws": [90, 95], "know": 160, "known": 87, "kstep": [112, 131], "kv": 86, "kwarg": [7, 8, 11, 13, 16, 38, 51, 53, 54, 55, 64, 83, 86, 89, 92, 93, 94, 95, 97, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 122, 123, 124, 126, 127, 128, 130, 133, 135, 137, 141, 143, 144, 151], "l": [86, 98, 131], "l3_oscnext_bool": 4, "l4_oscnext_bool": 4, "l5_oscnext_bool": 4, "l6_oscnext_bool": 4, "l7_oscnext_bool": 4, "label": [1, 11, 13, 16, 27, 30, 89, 94, 104, 107, 124, 128, 132, 136, 143], "lai": 157, "lambda": [119, 157, 162], "land": [131, 157], "larg": [0, 106, 135, 156, 158, 161], "larger": 155, "largest": 98, "last": [14, 108, 114, 122, 126, 127, 128, 133, 136, 162], "last_epoch": 133, "lastli": 160, "latent": [85, 106, 108, 110, 113, 114, 120, 122, 126, 127, 128, 130, 162], "latest": 157, "launch": [11, 16], "layer": [0, 82, 84, 85, 87, 106, 107, 108, 109, 110, 112, 113, 114, 120, 122, 126, 127, 128, 158, 161], "layer_s": 86, "layer_size_scal": 109, "layernorm": [86, 112], "ldot": [83, 87], "lead": [97, 156, 157], "learn": [0, 1, 5, 64, 66, 77, 79, 120, 124, 126, 128, 133, 155, 157, 158, 159, 160, 161, 162], "learnabl": [86, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 122, 128, 130, 162], "learnedtask": [125, 128], "least": [13, 154, 156, 157], "leav": 133, "len": [11, 13, 98, 131, 155, 156], "length": [11, 13, 14, 39, 97, 98, 131, 133], "lenmatchbatchsampl": [10, 14], "less": [8, 136, 157, 162], "let": [157, 160, 162], "level": [0, 5, 11, 13, 16, 18, 33, 38, 45, 47, 49, 51, 52, 53, 54, 55, 57, 61, 64, 65, 68, 69, 70, 83, 87, 113, 124, 151, 156, 157, 158, 160, 161], "leverag": 1, "lex_sort": [90, 98], "liabil": [14, 135], "liabl": [14, 135], "liamma": [85, 86, 112, 131], "lib": [101, 102, 103, 139], "licens": [14, 135], "lift": 155, "light": 93, "lightn": [9, 133, 157, 162], "lightningdatamodul": 9, "lightningmodul": [85, 86, 119, 133, 151, 157, 162], "liheng": 112, "like": [14, 19, 39, 87, 93, 120, 128, 131, 135, 152, 154, 156, 157, 159, 162], "limit": [14, 38, 97, 135], "line": [133, 139, 155, 156, 160], "linear": [85, 86, 98, 108, 114, 162], "linearedgeencod": [84, 85], "linearli": 133, "linearnodeencod": [84, 85], "liquid": 102, "liquido": [3, 4, 17, 43, 54, 82, 99, 155], "liquido_read": [3, 50], "liquido_v1": [99, 102], "liquidoread": [50, 54, 155], "list": [5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 43, 45, 47, 49, 51, 52, 53, 54, 55, 57, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 75, 77, 78, 79, 83, 86, 87, 89, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 106, 108, 110, 114, 119, 120, 122, 123, 124, 128, 131, 133, 135, 136, 137, 143, 145, 146, 149, 151, 155, 156, 160], "list_all_submodul": [140, 145], "ljvmiranda921": 154, "load": [0, 8, 11, 60, 73, 119, 123, 141, 143, 156, 157, 158, 160, 161], "load_from_checkpoint": [157, 162], "load_modul": [10, 11, 119], "load_state_dict": [119, 123, 157, 162], "loaded_model": [157, 162], "local": [83, 97, 101, 102, 103, 139, 157, 159, 162], "locat": 98, "lock": 13, "log": [0, 1, 97, 127, 132, 133, 135, 138, 156, 157, 158, 161, 162], "log10": [97, 128, 137, 157, 162], "log_cmk": 135, "log_cmk_approx": 135, "log_cmk_exact": 135, "log_every_n_step": [104, 157, 162], "log_fold": [38, 51, 53, 54, 55, 64, 151], "log_model": [157, 162], "logcmk": [132, 135], "logcoshloss": [132, 135, 157, 162], "logger": [7, 9, 11, 14, 19, 38, 51, 53, 54, 55, 62, 64, 72, 73, 92, 104, 119, 134, 137, 138, 151, 157, 162], "loggeradapt": 151, "logic": 156, "logit": [126, 135, 162], "logrecord": 151, "long": 156, "longer": 97, "longev": [0, 158, 161], "longtensor": [83, 87, 131], "look": [25, 156, 157], "lookup": 145, "loop": [85, 131, 157, 162], "loss": [11, 13, 16, 89, 94, 104, 120, 124, 128, 133, 135, 139, 157, 162], "loss_factor": 135, "loss_funct": [1, 128, 132, 157, 162], "loss_weight": [89, 94, 128, 157, 162], "loss_weight_column": [11, 13, 16, 89, 94, 136, 143], "loss_weight_default_valu": [11, 13, 16, 89, 94, 143], "loss_weight_t": [11, 13, 16, 136, 143], "lossfunct": [128, 132, 135, 157], "lot": 154, "lower": [0, 38, 157, 158, 161], "lr": [157, 162], "m": [93, 98, 135], "ma": 112, "machin": 1, "made": [157, 162], "maeloss": [132, 135], "magnitud": [0, 158, 161], "mai": [51, 62, 73, 97, 128, 156, 157, 159, 162], "main": [1, 14, 85, 86, 105, 112, 131, 154, 157], "mainli": 39, "major": [124, 128], "make": [0, 7, 97, 98, 137, 143, 144, 154, 155, 156, 157, 158, 160, 161, 162], "make_dataload": [132, 136], "make_train_validation_dataload": [132, 136], "makedir": [157, 162], "manag": [0, 132, 155, 157, 158, 161], "mandatori": 85, "mangl": 39, "mani": [66, 155, 157, 162], "manipul": [36, 90, 91, 96], "map": [7, 11, 13, 16, 23, 25, 61, 89, 94, 95, 97, 101, 102, 103, 128, 157, 160, 162], "mari": [0, 158, 161], "martin": 107, "mask": [14, 89, 94, 131], "masked_entri": 131, "master": 135, "match": [14, 51, 89, 94, 137, 149, 152, 155], "math": [1, 86, 138], "mathbb": 87, "mathbf": [83, 87], "matic": 128, "matric": [86, 131], "matrix": [86, 87, 92, 93, 98, 112, 131, 135, 156], "max": [83, 86, 98, 108, 110, 114, 135, 137, 139, 157, 162], "max_activ": 97, "max_epoch": [104, 157, 162], "max_length": 97, "max_pool": [83, 87], "max_pool_x": [83, 87], "max_puls": 97, "max_rel_po": 130, "max_table_s": [49, 66], "max_weight": 137, "maximum": [49, 66, 87, 97, 98, 128, 130, 139], "mc": [25, 61], "mc_truth": [19, 45, 156, 157], "mclabelbgmuonmcp": 4, "mclabelbgmuonmcpecharg": 4, "mclabelclassif": 4, "mclabelcoincidentmuon": 4, "mctree": [33, 37], "md": 157, "mean": [0, 11, 13, 16, 82, 86, 98, 108, 110, 112, 114, 131, 135, 144, 155, 156, 157, 158, 161, 162], "meaning": 85, "meant": [155, 157, 162], "measur": [97, 98, 131, 157, 160], "mechan": 86, "median": 98, "mediatum": 97, "meet": 128, "member": [22, 25, 33, 39, 51, 97, 143, 144, 151, 155, 160], "memori": [13, 156], "mention": 157, "merchant": [14, 135], "merg": [7, 14, 64, 65, 66, 135, 155, 156, 160], "merge_fil": [7, 64, 65, 66, 155, 160], "merged_database_nam": 66, "messag": [86, 112, 133, 151, 157], "messagepass": 86, "metaclass": [143, 144], "metaproject": 159, "meter": 157, "meth": 157, "method": [5, 7, 9, 11, 13, 14, 16, 19, 22, 33, 35, 36, 37, 39, 46, 47, 51, 56, 57, 64, 65, 66, 68, 69, 70, 73, 75, 86, 87, 98, 100, 112, 113, 127, 135, 137, 155, 157, 162], "metric": [93, 106, 108, 110, 114, 122, 133, 157, 162], "mha": [86, 112], "might": [156, 157, 162], "mileston": [133, 157, 162], "million": [66, 68], "min": [83, 87, 98, 108, 110, 114, 137, 157, 162], "min_charg": 38, "min_pool": [83, 84, 87], "min_pool_x": [83, 84, 87], "mind": 157, "minh": 107, "mini": 136, "minim": [104, 120, 156, 157, 160, 162], "minimum": [38, 97, 128], "minkowski": [90, 91, 115, 116], "minkowskiknnedg": [91, 93], "minu": 135, "mise": 135, "miss": 81, "mit": [14, 135], "mix": 18, "ml": [0, 1, 158, 161], "mlp": [84, 85, 86, 108, 113, 114, 130, 162], "mlp_dim": [85, 130], "mlp_ratio": [86, 113], "mode": [104, 128], "model": [0, 1, 5, 71, 73, 74, 77, 79, 83, 84, 85, 86, 87, 89, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 139, 141, 143, 144, 146, 153, 155, 156, 158, 159, 160, 161], "model_config": [73, 77, 79, 138, 140, 141, 143, 146, 157, 162], "model_config_path": [157, 162], "model_nam": [77, 79], "modelconfig": [73, 77, 79, 119, 140, 143, 144], "modelconfigsav": 144, "modelconfigsaverabc": [140, 144], "modelconfigsavermeta": [140, 144], "modif": [157, 162], "modifi": [14, 135, 157, 162], "modul": [0, 3, 6, 7, 11, 17, 18, 39, 40, 42, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 63, 64, 66, 69, 71, 72, 74, 75, 76, 77, 78, 81, 82, 85, 86, 88, 90, 91, 93, 94, 95, 96, 97, 99, 105, 112, 119, 121, 125, 129, 132, 138, 140, 143, 144, 145, 146, 150, 155, 157, 158, 161, 162], "modular": [0, 82, 155, 157, 158, 161, 162], "moduletyp": 145, "momentum": 86, "mont": 37, "more": [1, 11, 13, 14, 60, 61, 69, 97, 106, 119, 143, 144, 151, 156, 157, 162], "most": [0, 1, 62, 93, 128, 155, 158, 160, 161, 162], "move": [115, 116, 117, 118], "mryab": 135, "mseloss": [132, 135], "msg": 151, "mulitpli": 135, "multi": [86, 108, 114, 124], "multiclassclassificationtask": [125, 126, 157], "multiheadattent": [14, 86], "multiindex": 160, "multipl": [11, 13, 16, 18, 85, 98, 133, 135, 143, 151, 162], "multipli": [86, 97, 133], "multiprocess": [7, 14, 47, 49, 57, 155], "multiprocessing_context": [13, 14], "muon": [27, 156, 162], "muonfilter_13": 4, "must": [13, 18, 51, 52, 61, 64, 83, 86, 133, 135, 137, 154, 155, 156, 157, 160], "my": [156, 157, 160], "my_custom_label": [156, 157], "my_databas": 66, "my_fil": [155, 160], "my_geometry_t": 160, "my_outdir": [155, 160], "my_tabl": 160, "mycustomlabel": [156, 157], "mydetector": 160, "myexperi": 160, "myextractor": 160, "mygraphnetmodel": 162, "mymodel": 162, "mypi": 154, "mypicklewrit": 155, "myread": 160, "n": [14, 19, 83, 87, 93, 97, 131, 135, 156, 157, 160], "n_1": 87, "n_b": 87, "n_cluster": 98, "n_event": [155, 160], "n_featur": [85, 113, 130], "n_freq": 85, "n_head": [86, 106, 110, 112], "n_layer": 112, "n_pmt": 98, "n_puls": [97, 160], "n_rel": 113, "n_worker": [72, 75, 78], "name": [4, 5, 7, 8, 11, 13, 16, 18, 19, 21, 22, 23, 26, 27, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 43, 45, 47, 49, 51, 53, 54, 55, 57, 61, 64, 65, 66, 73, 77, 79, 85, 89, 94, 95, 97, 98, 100, 101, 102, 103, 120, 122, 128, 131, 134, 137, 139, 141, 143, 144, 145, 146, 151, 154, 155, 156, 157, 160, 162], "namespac": [4, 119, 143, 144], "nan": 98, "narg": 139, "nb_dom": 131, "nb_file": 7, "nb_input": [106, 107, 108, 109, 110, 111, 112, 114, 122, 126, 127, 128, 157, 162], "nb_intermedi": 107, "nb_nearest_neighbour": [92, 93, 95, 156, 157, 162], "nb_neighbor": 86, "nb_neighbour": [106, 108, 110, 114, 122, 157, 162], "nb_output": [89, 97, 107, 109, 111, 112, 126, 127, 128, 157, 162], "nb_repeats_allow": 151, "ndarrai": [11, 13, 33, 89, 94, 95, 98, 137, 155], "nearest": [92, 93, 95, 106, 108, 110, 114, 122, 131, 157, 162], "nearli": 162, "necessari": [0, 9, 36, 154, 158, 161], "need": [0, 5, 9, 36, 66, 82, 85, 119, 122, 135, 148, 155, 156, 157, 158, 159, 160, 161, 162], "negat": 87, "neighbour": [86, 92, 93, 95, 106, 108, 110, 114, 122, 131, 157, 162], "nest": 36, "nester": 36, "network": [1, 86, 107, 112, 121, 162], "neural": [1, 121, 162], "neutrino": [0, 1, 22, 45, 52, 86, 98, 110, 113, 130, 156, 157, 158, 160, 161, 162], "new": [0, 1, 18, 86, 141, 146, 154, 155, 157, 158, 161, 162], "new_phras": 148, "nfdi": [0, 158, 161], "nn": [0, 82, 85, 86, 92, 95, 112, 158, 161, 162], "no_weight_decai": 113, "node": [11, 13, 16, 82, 83, 85, 86, 87, 88, 90, 91, 92, 94, 95, 106, 107, 108, 110, 112, 114, 115, 122, 131, 156, 157, 162], "node_definit": [94, 95, 156, 157, 162], "node_feature_nam": [97, 156, 157, 162], "node_level": 136, "node_rnn": [82, 106, 121], "node_truth": [11, 13, 16, 136, 143], "node_truth_t": [11, 13, 16, 136, 143, 157], "nodeasdomtimeseri": [96, 97], "nodedefinit": [94, 95, 96, 97, 157, 162], "nodesaspuls": [94, 96, 97, 156, 157, 162], "nodetimernn": 122, "nois": [23, 37, 77, 157], "non": [9, 36, 39, 61, 95, 106, 128, 135, 157], "none": [5, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 47, 49, 51, 52, 53, 54, 55, 57, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 79, 86, 87, 89, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 106, 108, 110, 113, 114, 119, 120, 122, 123, 124, 128, 131, 133, 135, 136, 137, 139, 141, 142, 143, 145, 149, 151, 155, 156, 157, 160, 162], "noninfring": [14, 135], "nope": 112, "norm": [86, 112], "norm_edg": [86, 112], "norm_lay": [85, 86], "normal": [85, 86, 98, 108, 112, 114, 120, 128, 160], "normalizing_flow": [1, 82], "normalizingflow": [82, 120, 128], "northeren": 27, "note": [5, 11, 13, 16, 52, 65, 66, 68, 70, 97, 98, 144, 157], "notebook": 154, "notic": [14, 66, 131, 135], "notimplementederror": 155, "now": [157, 160, 162], "np": [137, 155], "null": [38, 61, 156, 157, 162], "nullspliti3filt": [35, 38, 47, 49, 52, 57], "num": [95, 139], "num_class": 135, "num_edg": 156, "num_edge_featur": 156, "num_featur": 156, "num_head": [86, 130], "num_lay": [122, 130], "num_nod": [131, 156], "num_puls": 97, "num_register_token": 130, "num_row": [89, 94, 156], "num_sampl": 14, "num_work": [7, 8, 9, 14, 49, 65, 136, 155, 156, 157, 160, 162], "number": [0, 5, 7, 11, 13, 14, 16, 19, 47, 49, 57, 62, 65, 66, 72, 75, 78, 85, 86, 87, 89, 92, 93, 94, 95, 97, 98, 106, 107, 108, 109, 110, 111, 112, 113, 114, 122, 126, 127, 128, 130, 131, 133, 136, 137, 139, 155, 156, 157, 158, 160, 161], "numer": [128, 160], "numpi": 98, "numu": 134, "numucc": 134, "o": [0, 102, 128, 155, 157, 158, 159, 161, 162], "obj": [36, 39, 145], "object": [4, 6, 11, 13, 14, 16, 25, 36, 39, 83, 87, 89, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 122, 123, 124, 126, 127, 128, 130, 131, 133, 135, 136, 139, 151, 156, 157, 162], "observ": 160, "observatori": [22, 52], "obtain": [14, 87, 95, 135], "occur": [8, 136], "oerso": 109, "offer": 156, "offset": [97, 98], "ofintern": 40, "often": 156, "old": 85, "old_phras": 148, "om": [37, 39], "omit": 162, "on_fit_end": 133, "on_train_end": 123, "on_train_epoch_end": 133, "on_train_epoch_start": 133, "on_validation_end": 133, "onc": [151, 157, 159], "one": [11, 13, 22, 33, 61, 77, 87, 143, 144, 149, 154, 155, 156, 157, 160, 162], "ones": [98, 123], "onli": [0, 1, 11, 13, 16, 38, 66, 82, 87, 97, 98, 106, 128, 137, 141, 144, 146, 150, 155, 156, 157, 158, 160, 161, 162], "onlinel2filter_17": 4, "open": [0, 51, 154, 155, 156, 157, 158, 159, 160, 161], "opensciencegrid": 159, "oper": [14, 83, 86, 105, 108], "oppos": 156, "optic": [39, 97, 98], "optim": [104, 120, 123, 133, 157, 162], "optimis": [0, 1, 157, 158, 161, 162], "optimizer_class": [120, 157, 162], "optimizer_closur": 123, "optimizer_kwarg": [120, 157, 162], "optimizer_step": 123, "optimzi": 120, "option": [5, 7, 9, 11, 13, 14, 16, 22, 33, 49, 61, 66, 68, 69, 70, 73, 79, 85, 86, 87, 89, 93, 94, 95, 97, 98, 100, 101, 102, 103, 106, 108, 110, 113, 114, 119, 120, 122, 128, 131, 133, 135, 137, 138, 139, 141, 143, 149, 155, 156, 157, 160, 162], "orca": 103, "orca150": [99, 103, 162], "orca150superdens": [99, 103], "orca_150": 103, "order": [0, 36, 51, 72, 75, 78, 83, 97, 98, 131, 135, 157, 158, 161], "order_in_tim": 97, "ordinari": 162, "ordinarili": 160, "org": [92, 112, 114, 135, 157, 159], "orient": [0, 82, 158, 161], "origin": [14, 66, 85, 86, 94, 112, 113, 131, 156, 162], "ot": 135, "other": [14, 28, 61, 92, 135, 154, 156, 157, 162], "otherwis": [14, 39, 97, 135], "our": [157, 160], "out": [5, 11, 13, 14, 108, 125, 135, 151, 154, 155, 156, 157, 160, 162], "out_dim": [85, 86], "out_featur": 86, "outdir": [7, 47, 49, 57, 155, 157, 160, 162], "outer": 36, "outlin": [160, 162], "output": [19, 66, 72, 73, 85, 86, 89, 94, 97, 98, 104, 106, 107, 108, 109, 111, 112, 114, 122, 126, 127, 128, 137, 143, 144, 155, 160, 162], "output_dim": [85, 162], "output_dir": [7, 64, 65, 66, 155], "output_feature_nam": 89, "output_fil": 7, "output_file_path": 155, "output_fold": [6, 72], "outsid": [70, 154], "over": [93, 97, 155, 156], "overal": 135, "overhead": [97, 160], "overlap": 66, "overrid": [9, 133], "overridden": 97, "overview": [0, 158, 161], "overwrit": [73, 85, 133], "overwrite_old_attr": 85, "overwritten": [51, 139, 141], "own": [154, 157], "ownership": 154, "p": [37, 68, 135, 155], "p11003": 157, "packag": [0, 1, 60, 128, 145, 149, 150, 154, 157, 158, 161, 162], "pad": [85, 89, 94, 98, 112, 131], "pad_to_full_graph": [85, 112], "padding_valu": [27, 30, 131], "pair": [22, 33, 47, 49, 52, 57, 85, 86, 112], "pairwis": [93, 131], "pairwise_shuffl": [58, 60], "panda": [62, 137, 155, 157, 160, 162], "paper": [112, 135], "paradigm": [157, 162], "parallel": [7, 47, 49, 57, 155, 160], "param": [14, 41, 43, 45, 131], "paramet": [5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 43, 45, 47, 49, 51, 52, 53, 54, 55, 57, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 75, 77, 78, 79, 83, 85, 86, 87, 89, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 122, 123, 124, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152], "parent": [36, 157], "parent_kei": 36, "parquet": [1, 3, 5, 10, 13, 41, 44, 45, 47, 49, 53, 55, 57, 59, 65, 68, 70, 101, 102, 103, 155, 156, 157, 160], "parquet_dataset": [10, 12, 156], "parquet_extractor": [17, 40], "parquet_to_sqlit": [3, 58], "parquet_writ": [3, 63], "parquetdataconvert": [46, 47], "parquetdataset": [9, 12, 13, 155, 157], "parquetextractor": [7, 40, 41, 43, 49, 51], "parquetread": [50, 53], "parquettosqliteconvert": [48, 49], "parquetwrit": [13, 41, 49, 63, 65, 155, 156, 160], "pars": [25, 138, 139, 140, 141, 146, 155], "parse_data_represent": [10, 11], "parse_label": [10, 11], "part": [74, 155, 157, 159, 160], "particl": [33, 61, 134, 156, 157, 160], "particlenet": [82, 105], "particular": [14, 135, 154], "particularli": [156, 157, 162], "partit": 66, "partli": [0, 158, 161], "pass": [7, 11, 16, 85, 86, 94, 95, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 122, 124, 128, 130, 133, 135, 137, 154, 155, 156, 157, 160, 162], "password": 69, "path": [5, 11, 13, 16, 22, 33, 47, 49, 51, 52, 53, 54, 55, 57, 60, 61, 66, 72, 75, 77, 78, 79, 86, 89, 94, 119, 123, 131, 133, 136, 139, 141, 142, 143, 149, 155, 156, 157, 160, 162], "path_to_arrai": 160, "path_to_geometry_t": 160, "patienc": 139, "pd": [155, 157, 160], "pdf": [92, 120], "pdg": 134, "pe": 131, "pe_nam": 85, "penal": 135, "peopl": [157, 162], "pep257": 154, "pep8": 154, "per": [11, 13, 16, 25, 61, 86, 87, 97, 106, 122, 128, 135, 137, 156, 157], "percent": 97, "percentil": [97, 98], "percentileclust": [96, 97], "perceptron": [86, 108, 114], "perform": [0, 9, 83, 85, 86, 87, 97, 104, 105, 106, 108, 110, 114, 120, 122, 123, 124, 126, 128, 136, 157, 158, 161, 162], "permiss": [14, 135], "permit": [14, 135], "persistent_work": [8, 136], "person": [5, 14, 135], "perturb": [89, 94, 95], "perturbation_dict": [89, 94, 95], "pframe": [47, 49, 52, 57], "philip": 112, "philosophi": [157, 162], "photon": [45, 156, 157], "php": 69, "phrase": 148, "phyic": 1, "physic": [0, 1, 22, 37, 39, 71, 77, 79, 82, 125, 128, 156, 157, 158, 161, 162], "physicist": [0, 1, 157, 158, 161], "physicst": 1, "pick": 156, "pickl": [155, 157, 160, 162], "pid": [4, 62, 134, 143, 156], "pid_kei": 134, "piecewiselinearlr": [132, 133, 157, 162], "pip": [154, 159], "pisa": 29, "place": [14, 85, 113, 148, 154], "plai": 1, "plane": [26, 135], "pleas": [75, 155, 156, 157, 160], "plot": 156, "plug": 1, "pmt": [87, 98, 156, 157], "pmt_area": 4, "pmt_dir_i": 4, "pmt_dir_x": 4, "pmt_dir_z": 4, "pmt_number": 4, "point": [5, 32, 120, 134, 135, 136, 157, 160, 162], "pole": 110, "pone": 103, "pone_triangl": 103, "ponesmal": [67, 68], "ponetriangl": [99, 103], "pool": [7, 82, 83, 84, 86, 106, 108, 110, 112, 114], "pop_default": 139, "popular": 162, "port": 157, "portabl": [0, 157, 158, 161, 162], "portion": [14, 135], "pos_x": 157, "posit": [77, 85, 86, 87, 95, 98, 112, 113, 127, 130, 131, 141, 146, 156, 160], "position_encod": 112, "position_i": 4, "position_x": 4, "position_x_pr": 127, "position_y_pr": 127, "position_z": 4, "position_z_pr": 127, "positionreconstruct": [125, 127], "possibl": [0, 36, 66, 97, 154, 158, 160, 161], "post": [106, 108, 110, 114], "post_processing_layer_s": [106, 108, 110, 157, 162], "posterior": 120, "potenti": 97, "pow": [157, 162], "power": [155, 157, 162], "pr": 122, "practic": [0, 154, 158, 161], "pre": [0, 5, 48, 49, 67, 89, 94, 100, 134, 154, 156, 157, 158, 161, 162], "pre_configur": [1, 3, 49], "precis": 135, "precommit": 154, "preconfigur": 49, "pred": [104, 124, 128], "pred_head_activ": 112, "pred_head_lay": 112, "pred_head_pool": 112, "predict": [0, 9, 28, 32, 34, 77, 79, 86, 104, 107, 112, 113, 120, 124, 126, 128, 135, 136, 157, 158, 161, 162], "predict_as_datafram": [104, 157, 162], "prediction_column": [73, 79, 104, 136], "prediction_kei": 135, "prediction_label": [104, 128, 157, 162], "prefer": 93, "prefetch_factor": 8, "prepar": [0, 5, 9, 135, 156, 158, 161], "prepare_data": [5, 9], "preprocess": 157, "present": [11, 13, 22, 33, 38, 131, 139, 149, 150, 156, 162], "previou": [133, 157, 162], "primari": [61, 66, 156, 157], "primary_hadron_1_direction_phi": [4, 156, 157], "primary_hadron_1_direction_theta": [4, 156, 157], "primary_hadron_1_energi": [4, 156, 157], "primary_hadron_1_position_i": [4, 156, 157], "primary_hadron_1_position_x": [4, 156, 157], "primary_hadron_1_position_z": [4, 156, 157], "primary_hadron_1_typ": [4, 156, 157], "primary_key_rescu": 66, "primary_lepton_1_direction_phi": [4, 156, 157], "primary_lepton_1_direction_theta": [4, 156, 157], "primary_lepton_1_energi": [4, 156, 157], "primary_lepton_1_position_i": [4, 156, 157], "primary_lepton_1_position_x": [4, 156, 157], "primary_lepton_1_position_z": [4, 156, 157], "primary_lepton_1_typ": [4, 156, 157], "principl": [1, 157], "print": [5, 119, 133, 151], "prior": 156, "prioriti": [98, 154], "privat": 137, "pro": [157, 162], "prob": 131, "probabl": [85, 86, 95, 112, 131, 135, 162], "problem": [0, 92, 154, 156, 157, 158, 161, 162], "procedur": 9, "proceedur": 66, "process": [1, 7, 14, 47, 49, 57, 66, 77, 85, 100, 106, 108, 110, 114, 154, 155, 157, 162], "process_posit": 133, "produc": [5, 51, 85, 120, 124, 134, 137, 156, 157], "product": [8, 86, 136], "programm": [0, 158, 161], "progress": 133, "progressbar": [132, 133, 157, 162], "proj_drop": 86, "project": [0, 55, 86, 154, 157, 158, 161, 162], "prometheu": [3, 4, 17, 45, 55, 68, 82, 99, 156, 157, 162], "prometheus_dataset": [1, 67], "prometheus_extractor": [17, 44], "prometheus_read": [3, 50], "prometheusextractor": [7, 44, 45, 51], "prometheusfeatureextractor": [44, 45], "prometheusread": [50, 55], "prometheustruthextractor": [44, 45], "prompt": 157, "prone": 157, "proof": [157, 162], "properti": [5, 9, 11, 13, 14, 19, 24, 28, 39, 51, 64, 87, 89, 97, 98, 100, 104, 111, 128, 134, 142, 151, 155], "propos": 86, "protocol": 155, "prototyp": 102, "proven": [19, 22, 41, 43, 45, 155], "provid": [0, 1, 7, 11, 13, 14, 16, 77, 82, 89, 94, 113, 119, 120, 135, 154, 155, 156, 157, 158, 161, 162], "pth": [157, 162], "public": [68, 100, 137], "publicprometheusdataset": [67, 68], "publish": [14, 135, 157, 162], "puls": [5, 11, 13, 16, 18, 23, 25, 37, 39, 45, 61, 77, 83, 87, 89, 94, 97, 98, 113, 124, 130, 131, 156, 157, 160, 162], "pulse_truth": 5, "pulsemap": [5, 11, 13, 16, 23, 68, 69, 70, 77, 79, 136, 143, 156, 157], "pulsemap_extractor": [77, 79], "pulseseri": 37, "pulsmap": [77, 79], "punch4nfdi": [0, 158, 161], "pure": [7, 19, 20, 25, 39], "purpos": [0, 14, 82, 135, 158, 160, 161], "put": [66, 157, 162], "py": [14, 85, 86, 112, 131, 135, 157], "py3": 159, "pydant": [141, 143, 144, 146], "pydantic_cor": [141, 146], "pydocstyl": 154, "pyg": [131, 156, 157, 162], "pylint": 154, "python": [0, 1, 7, 19, 20, 25, 36, 39, 154, 157, 158, 159, 161, 162], "python3": [101, 102, 103, 139], "pytorch": [16, 133, 157, 159, 162], "pytorch_lightn": [104, 133, 151, 157, 162], "pytorchlightn": 157, "q": 86, "qk_scale": 86, "qkv_bia": 86, "qualiti": [0, 157, 158, 161], "quantiti": [29, 128, 131, 157], "queri": [11, 13, 16, 61, 62, 66, 86, 156, 157], "query_databas": [58, 61], "query_t": [11, 13, 16, 156], "queso": 30, "question": 157, "quick": [98, 157], "r": [87, 92, 155, 157, 159, 160], "radial": 92, "radialedg": [91, 92], "radiat": [97, 98, 157, 162], "radiu": [92, 157], "rais": [11, 13, 22, 25, 33, 119, 120, 141, 146, 155], "random": [3, 11, 13, 16, 58, 62, 65, 85, 95, 97, 112, 131, 143, 156, 157], "randomchunksampl": [10, 14], "randomli": [14, 62, 89, 94, 95, 144, 157, 162], "rang": [14, 128, 158, 160, 161, 162], "rare": 155, "rasmu": [0, 109, 158, 161], "rate": [120, 133], "rather": [128, 151, 157, 162], "ratio": [9, 86, 113], "raw": [0, 97, 98, 156, 157, 158, 160, 161, 162], "rde": 4, "re": [142, 156, 157, 160, 162], "reach": [156, 160], "read": [0, 3, 7, 11, 13, 16, 36, 50, 52, 53, 54, 55, 100, 108, 125, 155, 156, 157, 158, 160, 161], "read_csv": 160, "read_sql": 157, "readabl": 157, "reader": [1, 3, 49, 51, 52, 53, 54, 55, 160], "readi": [67, 160, 162], "readm": 157, "readout": [106, 108, 110, 114], "readout_layer_s": [106, 108, 110, 114, 157, 162], "readthedoc": 157, "receiv": [0, 158, 161, 162], "reciev": [64, 155, 160, 162], "recommend": [157, 159, 160, 162], "reconstruct": [0, 1, 23, 26, 27, 31, 32, 34, 71, 74, 82, 110, 122, 125, 128, 156, 157, 158, 161], "record": [38, 151], "recov": 128, "recreat": [156, 157, 162], "recurr": 121, "recurs": [25, 39, 47, 49, 51, 52, 57, 119, 145, 149], "reduc": [157, 162], "reduce_opt": 83, "refer": [9, 103, 120, 143, 156, 157, 160, 162], "reference_tim": 98, "refresh_r": 133, "regardless": [156, 157, 162], "regist": 130, "regress": 124, "regular": [39, 86, 157, 162], "rel": [85, 86, 95, 113, 130, 131], "rel_pos_bia": 86, "rel_pos_bucket": 130, "relat": [60, 149, 160], "relev": [1, 39, 60, 149, 154], "reli": [52, 120], "reload": 162, "relu": [86, 112, 114], "remain": 156, "remaining_batch": 14, "remov": [8, 11, 16, 47, 57, 66, 89, 94, 136, 139, 160], "remove_origin": 66, "renam": [75, 148], "rename_state_dict_entri": [138, 148], "repeat": [89, 94, 151], "repeat_label": [89, 94], "repeatfilt": [138, 151], "replac": [100, 101, 102, 103, 148], "replace_with_ident": [100, 101, 102, 103], "repo": 154, "repositori": 154, "repres": [87, 88, 89, 94, 95, 97, 98, 106, 131, 141, 143, 144, 155, 156, 157, 160, 162], "represent": [5, 11, 13, 16, 39, 68, 69, 70, 85, 86, 87, 89, 95, 119, 120, 122, 131, 156, 157, 160, 162], "reproduc": [143, 144, 162], "repurpos": 162, "requir": [0, 22, 29, 38, 41, 45, 61, 69, 97, 126, 128, 135, 154, 155, 156, 157, 158, 159, 160, 161, 162], "requires_icecub": [138, 150], "research": [0, 157, 158, 161], "reset": [66, 86], "reset_integer_primary_kei": 66, "reset_paramet": 86, "residu": 86, "resolv": [11, 13, 16, 62], "respect": [136, 157, 160], "respons": [156, 157], "restrict": [14, 128, 135, 162], "result": [5, 14, 61, 65, 87, 95, 97, 98, 133, 135, 136, 145, 157, 160, 162], "retriev": [100, 155, 156], "retro": 31, "return": [5, 7, 8, 9, 11, 13, 14, 16, 18, 19, 22, 33, 36, 37, 39, 51, 52, 53, 54, 55, 60, 61, 62, 64, 65, 66, 72, 83, 85, 86, 87, 89, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 122, 123, 124, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 155, 156, 157, 160, 162], "return_discard": 39, "return_el": 135, "reusabl": [0, 158, 161], "reuseabl": [157, 162], "review": 154, "rezero": 86, "rhel_7_x86_64": 159, "right": [14, 135, 157], "rmse": 135, "rmseloss": [132, 135], "rmsevonmisesfisher3dloss": [132, 135], "rng": 60, "rnn": [1, 82, 106, 122], "rnn_dropout": 106, "rnn_dynedg": 106, "rnn_hidden_s": 106, "rnn_layer": 106, "rnn_tito": [82, 105], "role": 162, "root": 135, "roughli": 156, "row": [61, 66, 89, 94, 95, 98, 131, 156, 157, 160, 162], "rrwp": [85, 95, 131], "rrwp_encod": [85, 131], "rrwp_index": 95, "rrwp_val": 95, "rrwplinearedgeencod": [84, 85], "rrwplinearnodeencod": [84, 85], "run": [1, 14, 52, 72, 74, 75, 78, 86, 155, 157, 159, 160, 162], "run_id": 69, "run_sql_cod": [58, 61], "runid": [4, 69], "runner": [101, 102, 103, 139], "runtim": [134, 159], "runtimeerror": [22, 33], "rw": 131, "rwse": 95, "rwselinearedgeencod": 85, "rwselinearnodeencod": [84, 85], "ryabinin": 135, "sai": [157, 162], "same": [18, 39, 61, 66, 83, 87, 98, 126, 131, 133, 145, 151, 156, 157, 162], "sampl": [14, 62, 86, 89, 94, 95, 97, 157, 162], "sample_puls": 97, "sampler": [3, 10], "san": 86, "san_graph": 86, "sangraphhead": [84, 86], "satisfi": [0, 155, 158, 161], "save": [7, 19, 21, 22, 36, 41, 43, 45, 47, 49, 57, 61, 63, 64, 66, 119, 133, 135, 136, 137, 141, 142, 143, 144, 155, 157, 160], "save_config": [142, 157, 162], "save_dataset_config": [140, 143], "save_dir": [133, 157, 162], "save_fil": [64, 155], "save_method": [7, 155, 160], "save_model_config": [140, 144], "save_result": [132, 136], "save_select": [132, 136], "save_state_dict": [119, 157, 162], "save_to_sql": [58, 61], "scalabl": 156, "scalar": [11, 13, 19, 131, 135], "scale": [85, 86, 89, 93, 94, 97, 98, 109, 113, 128, 130, 135, 156, 162], "scaled_emb": [113, 130], "scatter": [97, 98], "schedul": 120, "scheduler_class": [120, 157, 162], "scheduler_config": [120, 157, 162], "scheduler_kwarg": [120, 157, 162], "schema": 157, "scheme": [106, 108, 110, 114, 155], "scientif": [0, 1, 158, 161], "scope": 154, "score": [86, 112], "script": [157, 162], "search": [47, 49, 51, 52, 53, 54, 55, 57, 149, 155], "sec": 135, "second": 93, "section": 157, "see": [11, 16, 85, 92, 94, 97, 106, 120, 128, 133, 154, 156, 157, 159], "seed": [9, 11, 13, 16, 62, 89, 94, 95, 136, 143, 156, 157], "seen": 85, "select": [5, 8, 9, 11, 13, 14, 16, 30, 38, 62, 97, 136, 137, 143, 154, 157, 160], "selection_nam": 8, "self": [11, 13, 85, 94, 98, 104, 112, 120, 124, 131, 141, 146, 155, 156, 157, 160, 162], "sell": [14, 135], "send": 128, "sensor": [89, 94, 98, 100, 156, 157, 160, 162], "sensor_i": 160, "sensor_id": [101, 103, 160], "sensor_id_column": [101, 102, 103, 160], "sensor_index_nam": 100, "sensor_mask": [89, 94], "sensor_pos_i": [4, 103, 156, 157, 162], "sensor_pos_x": [4, 103, 156, 157, 162], "sensor_pos_z": [4, 103, 156, 157, 162], "sensor_position_nam": 100, "sensor_string_id": 103, "sensor_tim": 160, "sensor_x": [156, 160], "sensor_z": 160, "separ": [36, 93, 133, 157, 159], "seper": [122, 156], "seq_length": [85, 113, 130, 131], "sequenc": [14, 72, 75, 78, 85, 86, 98, 131, 136, 157, 162], "sequenti": [11, 13], "sequential_index": [11, 13, 16], "seri": [11, 13, 16, 23, 25, 37, 39, 61, 77, 97, 106, 122, 156, 157, 162], "serial": [155, 156], "serialis": [35, 36, 157, 162], "serv": 156, "server": 69, "session": [143, 144, 156, 157, 162], "set": [3, 6, 9, 13, 18, 22, 25, 33, 47, 49, 51, 52, 57, 64, 85, 86, 97, 98, 113, 119, 128, 134, 136, 154, 155, 157, 160, 162], "set_extractor": 51, "set_gcd": [18, 22, 33], "set_index": 160, "set_indic": 97, "set_number_of_input": 97, "set_output_feature_nam": 97, "set_verbose_print_recurs": 119, "setlevel": 151, "setup": [9, 133, 159], "setuptool": 159, "sever": [157, 162], "sh": 159, "shall": [14, 135], "shape": [19, 89, 93, 94, 97, 131, 135, 155, 156], "share": [104, 120, 124, 157, 162], "share_redirect": 5, "shared_step": [104, 120, 124], "sharelink": 5, "shell": 159, "shortest": 131, "should": [5, 8, 11, 13, 16, 19, 22, 36, 62, 70, 73, 86, 87, 89, 94, 95, 97, 100, 101, 102, 103, 106, 113, 122, 131, 135, 136, 141, 143, 144, 146, 154, 155, 156, 157, 159, 160, 162], "show": [62, 133, 157], "shown": 157, "shuffl": [8, 9, 60, 65, 136, 156], "shutdown": 9, "sid": 5, "sigmoid": 162, "sign": 135, "signal": [77, 162], "signatur": [25, 39], "signific": 156, "significantli": 156, "signup": 157, "similar": [14, 25, 39, 97, 157, 162], "similarli": [39, 155, 156, 157, 162], "simpl": [0, 82, 104, 157, 158, 161, 162], "simplecoarsen": 83, "simplest": [157, 162], "simpli": [157, 162], "simul": [37, 45, 55, 68, 69, 77, 157, 160], "sinc": [14, 77, 135, 157], "singl": [5, 11, 18, 64, 66, 87, 98, 108, 114, 134, 137, 143, 144, 155, 156, 157, 160, 162], "single_event_as_arrai": 98, "sinusoid": [85, 113, 130], "sinusoidalposemb": [84, 85], "sipm_i": [4, 102], "sipm_id": 102, "sipm_x": [4, 102], "sipm_z": [4, 102], "situat": 154, "size": [13, 14, 49, 66, 85, 86, 87, 106, 108, 109, 110, 112, 113, 114, 131, 139, 156], "skip": [38, 108, 114, 157], "skip_readout": [108, 114], "sklearn": [157, 162], "sk\u0142odowska": [0, 158, 161], "slack": 157, "slice": [86, 108, 114], "slower": 66, "small": [135, 156, 157, 162], "smaller": [64, 155], "smooth": 154, "snippet": [157, 162], "snowstorm": [4, 69], "snowstorm_dataset": [1, 67], "snowstorm_mc": 69, "snowstormdataset": [67, 69], "so": [14, 135, 156, 157, 159, 160, 162], "soft": 85, "softmax": 135, "softwar": [0, 14, 52, 135, 158, 161], "solut": [85, 86, 110, 113, 154], "solv": [1, 154, 162], "some": [11, 13, 14, 16, 47, 49, 52, 57, 89, 94, 97, 98, 156, 157], "someth": [157, 162], "somewhat": 157, "sort": [94, 98], "sort_bi": [94, 98], "sota": 5, "sourc": [0, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 43, 45, 47, 49, 51, 52, 53, 54, 55, 57, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 75, 77, 78, 79, 81, 83, 85, 86, 87, 89, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 122, 123, 124, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 156, 157, 158, 161], "south": 110, "space": [85, 92, 93, 128, 131, 137], "space_coord": 93, "space_dim": 131, "spacetim": 85, "spacetimeencod": [84, 85], "spars": 131, "sparsetensor": 86, "spatial": 98, "spawn": [13, 14], "spd": 131, "special": [25, 77, 122, 131], "specialis": [157, 162], "specif": [0, 1, 3, 5, 6, 7, 11, 13, 16, 17, 19, 23, 39, 50, 51, 52, 61, 66, 71, 73, 76, 78, 81, 83, 87, 89, 92, 94, 97, 99, 100, 101, 102, 103, 105, 106, 111, 121, 125, 126, 127, 128, 129, 131, 135, 154, 155, 156, 157, 158, 160, 161, 162], "specifi": [11, 13, 14, 16, 19, 62, 83, 98, 120, 128, 133, 156, 157, 160, 162], "speed": [77, 93, 156], "sphere": 92, "spite": 135, "splinemp": 32, "split": [0, 9, 38, 66, 83, 158, 161], "split_se": 9, "splitinicepuls": 61, "spread": [97, 98], "sql": 137, "sqlite": [1, 3, 5, 9, 10, 16, 49, 57, 59, 61, 66, 68, 70, 156, 157], "sqlite3": 157, "sqlite_dataset": [10, 15, 156], "sqlite_util": [3, 58], "sqlite_writ": [3, 63], "sqlitedataconvert": [56, 57], "sqlitedatas": 156, "sqlitedataset": [9, 15, 16, 155], "sqlitewrit": [63, 66, 155, 156], "squar": 135, "src": [14, 157], "stabl": [127, 128], "stage": [9, 133], "stai": 131, "standalon": 122, "standard": [0, 3, 4, 38, 62, 73, 89, 94, 95, 97, 98, 101, 102, 103, 106, 120, 123, 124, 128, 139, 154, 157, 158, 160, 161, 162], "standard_argu": 139, "standard_averaged_model": [1, 82], "standard_model": [1, 82, 157], "standardaveragedmodel": [82, 123], "standardaveragemodel": 123, "standardflowtask": [125, 128], "standardis": 99, "standardlearnedtask": [125, 126, 127, 128, 162], "standardmodel": [82, 104, 123, 124], "start": [14, 33, 86, 154, 157, 160, 162], "stat": 86, "state": [0, 73, 106, 122, 148, 158, 161], "state_dict": [73, 77, 79, 119, 123, 148, 157], "static": [94, 135, 154], "statist": 98, "std": [87, 97], "std_pool": [84, 87], "std_pool_x": [84, 87], "stdout": 133, "step": [95, 104, 112, 120, 123, 124, 131, 133, 157, 160, 162], "still": 143, "stochast": 86, "stop": [33, 133, 139], "stopped_muon": 4, "store": [5, 11, 13, 16, 61, 64, 65, 66, 134, 155, 156, 157, 160, 162], "str": [5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 43, 45, 47, 49, 51, 52, 53, 54, 55, 57, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 75, 77, 78, 79, 85, 86, 87, 89, 94, 95, 97, 98, 100, 101, 102, 103, 104, 106, 108, 110, 112, 113, 114, 119, 120, 123, 128, 131, 133, 134, 136, 137, 139, 141, 142, 143, 144, 145, 146, 148, 149, 151, 155, 160], "straightforward": 156, "strategi": [157, 162], "stream": 38, "stream_handl": 151, "streamhandl": 151, "streamlin": 1, "string": [4, 5, 11, 13, 16, 36, 62, 87, 89, 94, 100, 101, 119, 120, 128, 141, 157, 160, 162], "string_id": 160, "string_id_column": [101, 102, 103, 160], "string_index_nam": 100, "string_mask": [89, 94], "string_select": [11, 13, 16, 136, 143], "string_selection_resolv": [3, 58], "stringselectionresolv": [58, 62], "strongli": [157, 162], "structur": [85, 88, 95, 104, 145, 155, 156, 157, 162], "style": 154, "sub": 157, "subclass": [0, 5, 82, 104, 155, 156, 157, 158, 161, 162], "subev": 38, "subeventid": 4, "subeventstreami3filt": [35, 38], "subfold": [47, 49, 52, 57], "subject": [14, 113, 135], "sublicens": [14, 135], "submit": 113, "submodul": [1, 3, 10, 12, 15, 17, 20, 35, 40, 42, 44, 46, 48, 50, 56, 58, 63, 67, 71, 74, 76, 80, 82, 84, 88, 90, 91, 96, 99, 105, 121, 125, 129, 132, 138, 140, 145], "subpackag": [1, 3, 10, 17, 20, 71, 82, 88, 90, 115, 116, 138], "subrunid": 4, "subsampl": [65, 156], "subsequ": 157, "subset": [11, 13, 16, 86, 106, 108, 110, 114, 122, 157], "substanti": [14, 135], "suggest": [104, 135, 157], "suit": [0, 120, 128, 157, 158, 161], "suitabl": [1, 160], "sum": [83, 87, 98, 104, 108, 110, 114, 124, 137, 157, 162], "sum_pool": [83, 84, 87], "sum_pool_and_distribut": [84, 87], "sum_pool_x": [83, 84, 87], "summar": [77, 79, 97, 98], "summari": [97, 98], "summaris": [157, 162], "summariz": 162, "summarization_indic": 98, "super": [155, 156, 157, 162], "supervis": [124, 128, 162], "support": [0, 7, 39, 128, 154, 155, 156, 157, 158, 161], "suppos": [5, 98, 156, 160], "sure": [97, 98, 154, 155], "swa": 123, "swapabl": 157, "switch": [135, 157, 162], "synchron": 7, "syntax": [62, 104, 135, 156, 157], "system": [149, 157, 162], "t": [4, 39, 61, 133, 135, 155, 156, 157, 160, 162], "t_co": 8, "tabl": [5, 11, 13, 16, 18, 19, 22, 38, 41, 43, 45, 49, 51, 61, 65, 66, 89, 94, 100, 137, 155, 156, 157], "table_nam": [38, 45, 61], "table_without_index": 160, "tablefilt": [35, 38], "tackl": 162, "tag": [136, 154], "take": [39, 87, 98, 122, 154, 156], "talk": 157, "tar": 5, "target": [104, 120, 126, 128, 135, 146, 157, 162], "target_label": [104, 120, 128, 157, 162], "target_norm": 128, "target_pr": [126, 162], "task": [0, 1, 9, 82, 86, 104, 124, 126, 127, 135, 154, 157, 158, 161], "team": [11, 16, 154, 156, 157, 159, 160, 162], "teardown": 9, "technic": [0, 158, 160, 161], "techniqu": [0, 158, 161, 162], "telescop": [0, 1, 157, 158, 160, 161, 162], "tend": 66, "tensor": [11, 13, 16, 73, 83, 85, 86, 87, 93, 95, 97, 98, 100, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 122, 123, 124, 128, 130, 131, 135, 148, 152, 156, 157, 160, 162], "term": [86, 135, 162], "termin": 157, "test": [5, 9, 62, 68, 69, 70, 128, 136, 143, 150, 154, 156, 157, 162], "test_dataload": 9, "test_dataloader_kwarg": [5, 9, 68, 69, 70], "test_dataset": [1, 67], "test_funct": 150, "test_select": [9, 143, 156, 157], "test_siz": 136, "testdataset": [67, 70], "tev": 68, "than": [0, 8, 97, 128, 136, 151, 156, 157, 158, 161, 162], "thei": [72, 75, 78, 97, 155, 156, 157, 162], "them": [0, 1, 36, 73, 82, 88, 108, 128, 156, 157, 158, 160, 161, 162], "themselv": [1, 143, 144, 157, 162], "theo": [86, 97], "therebi": [1, 143, 144, 157, 162], "therefor": [36, 52, 66, 155, 156, 157, 160, 162], "thesi": 97, "thi": [0, 3, 5, 7, 9, 11, 13, 14, 16, 18, 19, 22, 24, 25, 38, 39, 41, 43, 45, 47, 49, 51, 52, 57, 60, 61, 65, 66, 69, 70, 74, 77, 82, 85, 87, 89, 93, 94, 95, 97, 98, 104, 106, 108, 113, 114, 120, 122, 124, 126, 127, 128, 131, 133, 135, 136, 137, 141, 143, 144, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162], "thing": 157, "thoglu": [120, 128], "those": [22, 33, 131, 156, 157], "thread": 13, "three": [98, 114, 135, 162], "threshold": [0, 77, 158, 161], "through": [0, 98, 126, 127, 128, 135, 155, 157, 158, 161, 162], "throw": 155, "thu": [144, 162], "ti": 156, "time": [0, 4, 61, 83, 85, 87, 93, 97, 98, 106, 122, 127, 131, 137, 151, 156, 157, 158, 160, 161], "time_after_charge_pct": 97, "time_column": 97, "time_coord": 93, "time_index": 98, "time_label": 97, "time_lik": 93, "time_like_weight": 93, "time_of_first_hit": 97, "time_series_column": [106, 122], "time_spread": 97, "time_standard": 97, "time_std": 97, "time_window": 83, "timereconstruct": [125, 127], "tini": 157, "tito": [86, 106, 110], "to_config": 162, "to_csv": [157, 162], "to_dense_adj": 131, "to_parquet": 160, "todo": 157, "togeth": [0, 14, 82, 92, 135, 158, 161], "token": 130, "too": [157, 162], "took": 97, "tool": [0, 1, 158, 161], "top": 162, "torch": [0, 11, 13, 16, 82, 85, 86, 89, 94, 95, 112, 119, 120, 150, 156, 157, 158, 159, 160, 161, 162], "torch_cpu": 159, "torch_geometr": [87, 131, 156, 157, 162], "torch_lightn": 162, "tort": [14, 135], "total": [97, 131, 136, 137, 156, 157, 160], "total_charg": 97, "total_energi": [4, 156, 157, 162], "tqdmprogressbar": 133, "track": [0, 19, 22, 27, 41, 43, 45, 68, 86, 127, 132, 134, 154, 155, 157, 158, 161], "track_length": 4, "tradit": [0, 158, 161], "train": [0, 1, 5, 7, 9, 10, 62, 67, 68, 69, 70, 71, 77, 86, 94, 104, 113, 120, 123, 124, 131, 133, 134, 135, 136, 137, 139, 143, 144, 146, 153, 155, 156, 157, 158, 160, 161], "train_batch": [104, 123], "train_dataload": [9, 104, 157, 162], "train_dataloader_kwarg": [5, 9, 68, 69, 70], "train_ev": 128, "train_select": [143, 156, 157], "train_val_split": 9, "trainabl": 144, "trainer": [104, 133, 136, 157, 162], "trainer_kwarg": 104, "training_config": [138, 140, 157, 162], "training_example_data_sqlit": [139, 156, 157, 162], "training_step": [104, 123], "trainingconfig": [140, 146, 157, 162], "transform": [1, 82, 86, 87, 97, 110, 112, 113, 122, 128, 130, 131, 137, 157, 162], "transform_infer": [128, 157, 162], "transform_prediction_and_target": [128, 157, 162], "transform_support": [128, 157, 162], "transform_target": [128, 157, 162], "transit": 148, "transpar": [143, 144, 154, 157, 162], "transpos": 36, "transpose_list_of_dict": [35, 36], "traverse_and_appli": [140, 145], "treat": [106, 122], "tree": [25, 157], "tri": [25, 39], "triangl": 103, "trident": [68, 103], "trident1211": [99, 103], "tridentsmal": [67, 68], "trigger": [25, 156, 157, 162], "trivial": [39, 128], "true": [38, 61, 66, 77, 85, 86, 89, 94, 97, 106, 108, 110, 112, 113, 114, 119, 131, 133, 135, 137, 149, 155, 156, 157, 162], "trust": [119, 157, 162], "truth": [3, 4, 5, 11, 13, 16, 23, 33, 45, 61, 65, 68, 69, 70, 89, 94, 128, 136, 137, 143, 156, 160, 162], "truth_dict": [89, 94], "truth_label": 156, "truth_tabl": [5, 11, 13, 16, 65, 136, 137, 143, 156, 157], "truthdata": 43, "try": [39, 155], "tum": [27, 34, 97], "tupl": [7, 11, 13, 14, 16, 37, 39, 61, 86, 98, 106, 108, 110, 114, 128, 131, 136, 139, 148], "turn": [98, 154], "tutorial_output": [157, 162], "two": [8, 108, 133, 135, 136, 155, 156, 157, 160], "txt": 159, "type": [0, 5, 7, 8, 9, 11, 13, 14, 16, 18, 19, 20, 22, 33, 35, 36, 37, 43, 45, 51, 52, 53, 54, 55, 60, 61, 62, 64, 65, 66, 72, 83, 85, 86, 87, 89, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 122, 123, 124, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161], "typic": [0, 36, 122, 156, 158, 160, 161], "u": [156, 160], "ub": 97, "ultra": 156, "unaccur": 135, "unambigu": [143, 144], "unbatch_edge_index": [82, 83], "uncertainti": [127, 157, 162], "uncompress": 156, "under": [0, 157, 158, 160, 161, 162], "unfamiliar": 162, "uniform": [132, 137], "uniformweightfitt": 137, "uninstanti": [86, 112], "union": [0, 7, 8, 9, 11, 13, 16, 25, 36, 39, 47, 49, 51, 52, 53, 54, 55, 57, 72, 73, 75, 77, 78, 79, 83, 86, 87, 89, 94, 95, 97, 98, 104, 106, 108, 114, 120, 124, 128, 143, 146, 149, 155, 158, 160, 161], "uniqu": [11, 13, 16, 61, 97, 98, 131, 143, 157, 160, 162], "unit": [0, 7, 70, 93, 97, 150, 154, 158, 161], "univers": 110, "unlik": 156, "unscal": 162, "untransform": 126, "unzip": 5, "up": [0, 5, 77, 154, 158, 161], "updat": [86, 112, 114, 122, 123, 131, 133, 157, 159, 162], "update_edg": [86, 112], "upgrad": [4, 23, 101, 157, 159], "upon": [120, 162], "us": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 22, 28, 33, 35, 36, 41, 43, 45, 47, 49, 51, 52, 56, 57, 58, 61, 62, 64, 65, 66, 68, 69, 70, 71, 73, 75, 77, 79, 82, 85, 86, 87, 89, 92, 94, 95, 97, 98, 100, 104, 106, 108, 109, 110, 112, 113, 114, 119, 120, 122, 125, 126, 127, 128, 130, 131, 133, 134, 135, 137, 138, 139, 140, 143, 144, 145, 150, 151, 154, 155, 158, 159, 160, 161], "usabl": [0, 158, 161], "usag": [120, 128, 139], "use_bia": [85, 86], "use_cach": 62, "use_global_featur": [106, 110], "use_post_processing_lay": [106, 110], "user": [0, 5, 82, 104, 133, 156, 157, 158, 159, 161, 162], "usernam": 69, "usual": 156, "util": [1, 3, 17, 20, 36, 37, 38, 39, 59, 60, 61, 62, 82, 88, 90, 132, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 156, 157, 159, 162], "v": 86, "v1": 159, "v4": 159, "val_batch": [104, 123], "val_dataload": [9, 104], "valid": [5, 9, 39, 62, 68, 69, 70, 104, 120, 123, 124, 128, 133, 135, 139, 141, 146, 156, 157, 162], "validate_fil": 51, "validate_task": [104, 120, 124], "validation_dataloader_kwarg": [5, 9, 68, 69, 70], "validation_step": [104, 123], "validationerror": [141, 146], "valu": [11, 13, 16, 21, 33, 36, 61, 66, 85, 86, 87, 89, 92, 93, 94, 95, 98, 112, 114, 128, 131, 134, 135, 139, 141, 162], "valueerror": [25, 119, 120], "var": 127, "var1": 19, "var_n": 19, "variabl": [19, 22, 25, 33, 39, 51, 97, 98, 108, 131, 137, 151, 155, 160, 162], "varieti": 157, "variou": [1, 63, 74, 157], "vast": [124, 128], "vector": [83, 86, 87, 131, 135, 155, 162], "verbos": [47, 49, 52, 57, 104, 124, 133], "verbose_print": 119, "veri": [62, 156, 157, 162], "verifi": [104, 120, 124], "versa": 133, "version": [87, 98, 128, 133, 154, 157, 162], "vertex": [127, 157], "vertex_i": 4, "vertex_x": 4, "vertex_z": 4, "vertexreconstruct": [125, 127], "via": 95, "viabl": 160, "vice": 133, "virtual": 159, "visibl": 127, "visible_energi": 4, "visible_inelast": [4, 127], "visible_inelasticity_pr": 127, "visibleinelasticityreconstruct": [125, 127], "visit": 160, "vmf": 127, "vmf_loss": 135, "vmfs_factor": 135, "volum": 33, "von": 135, "vonmisesfisher2dloss": [132, 135, 157, 162], "vonmisesfisher3dloss": [132, 135], "vonmisesfisherloss": [132, 135], "w": [157, 162], "wa": [0, 7, 113, 156, 157, 158, 160, 161, 162], "wai": [14, 39, 62, 124, 154, 157, 160, 162], "walk": [85, 95, 112, 131], "walk_length": [95, 131], "wandb": [157, 162], "wandb_dir": [157, 162], "wandb_logg": [157, 162], "wandblogg": [157, 162], "want": [156, 157, 159, 160, 162], "warn": [151, 157], "warning_onc": [151, 157], "warranti": [14, 135], "waterdemo81": [99, 103], "wb": 155, "we": [36, 39, 62, 98, 120, 154, 157, 159, 160, 162], "weigel": 112, "weight": [11, 13, 16, 77, 79, 86, 89, 94, 98, 112, 113, 128, 131, 135, 137, 144, 157, 162], "weight_fit": [1, 132], "weight_nam": 137, "weighted_median": [90, 98], "weightfitt": [132, 137], "well": [88, 154, 157, 162], "were": 66, "wether": 114, "what": [1, 85, 94, 154, 157, 162], "whatev": 157, "wheel": 159, "when": [0, 11, 13, 14, 16, 36, 38, 61, 66, 77, 86, 106, 108, 110, 114, 122, 134, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162], "whenev": 159, "where": [5, 19, 47, 49, 52, 57, 89, 94, 95, 97, 98, 122, 131, 134, 155, 156, 157, 160, 162], "wherea": [137, 156], "whether": [8, 14, 37, 39, 61, 85, 86, 106, 108, 110, 113, 114, 119, 130, 135, 145, 149, 150, 157], "which": [0, 5, 11, 13, 16, 19, 22, 23, 33, 37, 41, 43, 45, 62, 64, 66, 72, 74, 75, 78, 83, 87, 89, 94, 95, 97, 98, 108, 114, 119, 120, 126, 128, 131, 135, 136, 139, 155, 156, 157, 158, 161, 162], "while": [0, 25, 104, 131, 133, 154, 156, 158, 161], "who": [5, 148, 157, 162], "whom": [14, 135], "whose": 77, "wide": [14, 120, 162], "width": [4, 14], "wiki": 69, "willing": [156, 160], "window": [83, 156, 157], "wisc": 69, "wise": [86, 87], "wish": [0, 72, 154, 158, 161], "with_standard_argu": 139, "within": [33, 83, 86, 87, 92, 108, 114, 157, 162], "without": [1, 14, 92, 95, 97, 112, 135, 156, 159], "work": [0, 4, 37, 106, 154, 155, 156, 157, 158, 161, 162], "worker": [6, 7, 14, 47, 57, 60, 65, 72, 75, 78, 139, 151], "workflow": [0, 158, 161], "would": [154, 156, 157, 160, 162], "wrap": [133, 143, 144], "write": [65, 77, 79, 155, 157, 162], "writer": [1, 3, 49, 64, 65, 66, 160], "written": [49, 72, 155], "wrt": 128, "www": 157, "x": [4, 33, 85, 86, 87, 93, 97, 98, 101, 112, 122, 128, 131, 135, 137, 156, 157, 160, 162], "x8": 156, "x_i": 86, "x_j": 86, "x_low": 137, "xyz": [97, 98, 100, 101, 102, 103, 156, 160], "xyz_coord": 131, "xyzt": 131, "y": [4, 33, 85, 93, 101, 131], "yaml": [141, 142, 157], "yet": 98, "yield": [0, 108, 114, 135, 158, 161], "yml": [62, 139, 143, 144, 156, 157, 162], "you": [66, 72, 85, 97, 120, 143, 144, 154, 156, 157, 159, 160, 162], "your": [95, 97, 120, 154, 155, 156, 157, 159], "yourself": 154, "z": [4, 33, 85, 93, 97, 98, 101, 131], "z_name": 97, "z_offset": [97, 98], "z_scale": [97, 98], "zenith": [4, 127, 134, 157, 162], "zenith_kappa": 127, "zenith_kei": 134, "zenith_pr": 127, "zenithreconstruct": [125, 127], "zenithreconstructionwithkappa": [125, 127, 157, 162], "zero": 95, "\u00f8rs\u00f8e": [0, 158, 161]}, "titles": ["Usage", "API", "constants", "data", "constants", "curated_datamodule", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "samplers", "sqlite", "sqlite_dataset", "extractors", "combine_extractors", "extractor", "icecube", "i3dictvalueextractor", "i3extractor", "i3featureextractor", "i3filtermapextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "internal", "parquet_extractor", "liquido", "h5_extractor", "prometheus", "prometheus_extractor", "parquet", "deprecated_methods", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "internal_parquet_reader", "liquido_reader", "prometheus_reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "datasets", "prometheus_datasets", "snowstorm_dataset", "test_dataset", "deployment", "deployer", "deployment_module", "i3modules", "deprecated_methods", "icecube", "cleaning_module", "i3deployer", "inference_module", "exceptions", "exceptions", "models", "coarsening", "components", "embedding", "layers", "pool", "data_representation", "data_representation", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "detector", "detector", "icecube", "liquido", "prometheus", "easy_model", "gnn", "RNN_tito", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "grit", "icemix", "particlenet", "graphs", "edges", "minkowski", "nodes", "model", "normalizing_flow", "rnn", "node_rnn", "standard_averaged_model", "standard_model", "task", "classification", "reconstruction", "task", "transformer", "iseecube", "utils", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contributing To GraphNeT", "Data Conversion in GraphNeT", "Datasets In GraphNeT", "GraphNeT tutorial", "GraphNeT", "Installation", "Integrating New Experiments into GraphNeT", "GraphNeT", "Models In GraphNeT", "&lt;no title&gt;"], "titleterms": {"1": 160, "2": 160, "In": [156, 162], "The": [157, 162], "To": 154, "acknowledg": 0, "ad": [156, 157, 160, 162], "advanc": 157, "api": 1, "appendix": 157, "appli": 160, "argpars": 139, "backbon": 162, "base_config": 141, "befor": 160, "callback": 133, "checkpoint": 162, "choos": 156, "class": [157, 160, 162], "classif": 126, "cleaning_modul": 77, "coarsen": 83, "code": 154, "collect": 36, "combin": [156, 157], "combine_extractor": 18, "compon": 84, "config": 140, "configur": 142, "constant": [2, 4], "content": 157, "contribut": 154, "convent": 154, "convers": 155, "convnet": 107, "creat": 157, "curated_datamodul": 5, "custom": [156, 157], "cvmf": 159, "data": [3, 155, 160], "data_represent": [88, 89], "dataclass": 6, "dataconfig": 157, "dataconvert": [7, 49, 155], "dataload": 8, "datamodul": 9, "dataset": [10, 11, 67, 156, 157], "dataset_config": 143, "datasetconfig": 157, "decor": 147, "deploy": [71, 72], "deployment_modul": 73, "deprecated_method": [47, 57, 75], "deprecation_tool": 148, "detector": [99, 100, 160], "dynedg": 108, "dynedge_jinst": 109, "dynedge_kaggle_tito": 110, "easy_model": 104, "edg": [91, 92, 116], "embed": 85, "energi": 162, "event": 156, "exampl": [157, 160, 162], "except": [80, 81], "experi": [160, 162], "extractor": [17, 19, 155, 160], "filesi": 149, "frame": 37, "function": 157, "geometri": 160, "github": 154, "gnn": [105, 111], "graph": [90, 95, 115], "graph_definit": 94, "graphdefinit": 162, "graphnet": 157, "graphnet_file_read": 51, "graphnet_writ": 64, "graphnetfileread": 160, "graphnetgraphnet": [154, 155, 156, 158, 160, 161, 162], "grit": 112, "h5_extractor": 43, "i3_filt": 38, "i3deploy": 78, "i3dictvalueextractor": 21, "i3extractor": 22, "i3featureextractor": 23, "i3filtermapextractor": 24, "i3genericextractor": 25, "i3hybridrecoextractor": 26, "i3modul": 74, "i3ntmuonlabelsextractor": 27, "i3particleextractor": 28, "i3pisaextractor": 29, "i3quesoextractor": 30, "i3read": 52, "i3retroextractor": 31, "i3splinempeextractor": 32, "i3truthextractor": 33, "i3tumextractor": 34, "icecub": [20, 76, 101, 159], "icemix": 113, "implement": [156, 160], "import": 150, "index": 160, "inference_modul": 79, "instal": 159, "instanti": 162, "integr": 160, "intern": 40, "internal_parquet_read": 53, "introduct": 157, "iseecub": 130, "issu": 154, "label": [134, 156, 157], "layer": 86, "liquido": [42, 102], "liquido_read": 54, "load": 162, "log": 151, "loss_funct": 135, "math": 152, "minkowski": [93, 117], "model": [82, 119, 157, 162], "model_config": 144, "modelconfig": [157, 162], "multi": 160, "multipl": [156, 157], "new": [156, 160], "node": [96, 97, 118], "node_rnn": 122, "normalizing_flow": 120, "overview": 157, "own": [160, 162], "parquet": [12, 46], "parquet_dataset": 13, "parquet_extractor": 41, "parquet_to_sqlit": 59, "parquet_writ": 65, "parquetdataset": 156, "pars": 145, "particlenet": 114, "pool": 87, "pre_configur": 48, "prometheu": [44, 103], "prometheus_dataset": 68, "prometheus_extractor": 45, "prometheus_read": 55, "pull": 154, "qualiti": 154, "quick": 159, "random": 60, "reader": [50, 155], "reconstruct": [127, 162], "reproduc": 157, "request": 154, "rnn": 121, "rnn_tito": 106, "sampler": 14, "save": 162, "select": 156, "snowstorm_dataset": 69, "sqlite": [15, 56], "sqlite_dataset": 16, "sqlite_util": 61, "sqlite_writ": 66, "sqlitedataset": [156, 157], "src": 153, "standard_averaged_model": 123, "standard_model": 124, "standardmodel": [157, 162], "start": 159, "state_dict": 162, "string_selection_resolv": 62, "subset": 156, "support": 160, "syntax": 162, "tabl": 160, "task": [125, 128, 162], "test_dataset": 70, "track": 162, "train": [132, 162], "training_config": 146, "transform": 129, "truth": 157, "tutori": 157, "type": 39, "us": [156, 157, 162], "usag": 0, "util": [35, 58, 98, 131, 136, 138], "v": 156, "weight_fit": 137, "write": 160, "writer": [63, 155], "your": [160, 162]}})