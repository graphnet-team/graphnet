Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pipeline", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.deployment", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deployer", "api/graphnet.deployment.i3modules.graphnet_module", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.pisa", "api/graphnet.pisa.fitting", "api/graphnet.pisa.plotting", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pipeline.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deployer.rst", "api/graphnet.deployment.i3modules.graphnet_module.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.pisa.rst", "api/graphnet.pisa.fitting.rst", "api/graphnet.pisa.plotting.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "sqlite", "sqlite_dataset", "extractors", "extractor", "icecube", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "parquet", "deprecated_methods", "pipeline", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "deployment", "i3modules", "deployer", "graphnet_module", "models", "coarsening", "components", "layers", "pool", "detector", "detector", "icecube", "prometheus", "gnn", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "standard_model", "task", "classification", "reconstruction", "task", "utils", "pisa", "fitting", "plotting", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116], "i": [0, 1, 8, 10, 12, 14, 16, 18, 20, 31, 32, 33, 34, 36, 39, 42, 44, 47, 48, 49, 53, 57, 59, 62, 68, 69, 75, 77, 80, 81, 86, 87, 88, 91, 93, 94, 95, 96, 97, 99, 101, 104, 105, 106, 108, 109, 110, 111, 114, 115, 116], "an": [0, 16, 34, 36, 37, 39, 42, 44, 49, 57, 77, 95, 109, 111, 114, 115, 116], "open": [0, 41, 114, 115], "sourc": [0, 4, 5, 6, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 48, 49, 51, 52, 53, 57, 59, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115], "python": [0, 1, 6, 16, 17, 20, 31, 34, 114, 115, 116], "framework": [0, 115], "aim": [0, 1, 114, 115], "provid": [0, 1, 6, 10, 12, 14, 57, 58, 77, 95, 114, 115, 116], "high": [0, 115], "qualiti": [0, 115], "user": [0, 58, 93, 115, 116], "friendli": [0, 51, 53, 115], "end": [0, 1, 93, 115], "function": [0, 6, 7, 10, 18, 34, 47, 48, 57, 59, 62, 65, 66, 77, 81, 82, 87, 88, 90, 91, 95, 96, 98, 103, 104, 105, 108, 109, 110, 112, 115], "perform": [0, 8, 59, 61, 62, 67, 69, 71, 83, 85, 87, 96, 115], "reconstruct": [0, 1, 19, 21, 22, 26, 27, 29, 37, 54, 58, 71, 84, 87, 115], "task": [0, 1, 8, 58, 83, 85, 86, 95, 114, 115], "neutrino": [0, 1, 18, 42, 61, 71, 81, 90, 115], "telescop": [0, 1, 115], "us": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 16, 18, 23, 28, 30, 31, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 53, 54, 57, 58, 61, 62, 64, 69, 70, 71, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 94, 95, 97, 98, 99, 100, 103, 104, 105, 110, 111, 114, 115, 116], "graph": [0, 1, 7, 10, 12, 14, 57, 58, 61, 62, 64, 74, 75, 76, 77, 79, 80, 81, 87, 88, 94, 96, 114, 115], "neural": [0, 1, 115], "network": [0, 1, 68, 115], "gnn": [0, 1, 37, 58, 68, 69, 70, 71, 77, 83, 115, 116], "make": [0, 6, 97, 103, 104, 114, 115, 116], "fast": [0, 115, 116], "easi": [0, 115], "train": [0, 1, 6, 8, 9, 49, 54, 57, 77, 83, 93, 94, 95, 96, 97, 99, 103, 104, 106, 113, 115, 116], "complex": [0, 58, 115], "model": [0, 1, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 99, 101, 103, 104, 106, 113, 115, 116], "can": [0, 1, 8, 10, 12, 14, 16, 20, 23, 46, 57, 62, 77, 90, 91, 97, 99, 101, 103, 104, 114, 115, 116], "event": [0, 1, 6, 8, 10, 12, 14, 25, 36, 39, 44, 46, 48, 49, 53, 57, 62, 77, 81, 87, 88, 90, 95, 96, 97, 103, 115], "state": [0, 108, 115], "art": [0, 115], "arbitrari": [0, 115], "detector": [0, 1, 28, 58, 65, 66, 77, 78, 80, 83, 115], "configur": [0, 1, 8, 10, 38, 39, 58, 82, 83, 90, 98, 100, 101, 103, 104, 106, 111, 115], "infer": [0, 1, 37, 54, 57, 83, 87, 115, 116], "time": [0, 4, 48, 59, 62, 76, 80, 81, 86, 111, 115, 116], "ar": [0, 1, 4, 10, 12, 14, 18, 20, 33, 34, 41, 46, 49, 51, 53, 57, 62, 69, 71, 73, 74, 75, 77, 78, 79, 81, 85, 90, 95, 97, 103, 104, 114, 115, 116], "order": [0, 31, 41, 59, 88, 115], "magnitud": [0, 115], "faster": [0, 115], "than": [0, 7, 87, 96, 111, 115], "tradit": [0, 115], "techniqu": [0, 115], "common": [0, 1, 95, 103, 104, 107, 110, 115], "ml": [0, 1, 115], "develop": [0, 1, 114, 115, 116], "physicist": [0, 1, 115], "wish": [0, 114, 115], "tool": [0, 1, 115], "research": [0, 115], "By": [0, 36, 39, 42, 44, 46, 87, 115], "unit": [0, 6, 76, 110, 114, 115], "both": [0, 20, 87, 91, 115], "group": [0, 62, 115], "increas": [0, 93, 115], "longev": [0, 115], "usabl": [0, 115], "individu": [0, 10, 12, 14, 62, 69, 88, 115], "code": [0, 28, 36, 44, 48, 77, 103, 104, 115], "contribut": [0, 115, 116], "from": [0, 1, 6, 7, 8, 10, 12, 14, 16, 17, 18, 20, 22, 23, 25, 31, 32, 33, 34, 37, 41, 42, 46, 51, 53, 57, 62, 71, 75, 77, 80, 81, 82, 85, 86, 87, 88, 91, 93, 94, 95, 101, 102, 103, 104, 106, 111, 114, 115, 116], "build": [0, 1, 58, 64, 75, 76, 80, 81, 82, 101, 103, 104, 115], "gener": [0, 8, 10, 12, 14, 20, 33, 41, 51, 57, 73, 74, 77, 78, 79, 85, 95, 115], "reusabl": [0, 115], "softwar": [0, 42, 95, 115], "packag": [0, 1, 47, 105, 109, 110, 114, 115, 116], "base": [0, 4, 5, 6, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 36, 37, 39, 41, 42, 44, 46, 49, 51, 52, 53, 57, 59, 61, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 82, 83, 85, 86, 87, 90, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 106, 110, 111, 115], "engin": [0, 115], "best": [0, 93, 114, 115], "practic": [0, 114, 115], "lower": [0, 91, 115], "technic": [0, 115], "threshold": [0, 57, 115], "most": [0, 1, 49, 76, 87, 115, 116], "scientif": [0, 1, 115], "problem": [0, 75, 114, 115], "The": [0, 6, 8, 10, 12, 14, 31, 34, 36, 37, 39, 44, 48, 51, 53, 57, 59, 61, 62, 69, 71, 75, 77, 81, 85, 86, 87, 88, 90, 91, 93, 94, 95, 108, 115], "improv": [0, 1, 99, 115], "classif": [0, 1, 58, 84, 87, 95, 115], "yield": [0, 69, 90, 95, 115], "veri": [0, 49, 115], "accur": [0, 115], "e": [0, 1, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 34, 37, 48, 49, 53, 57, 59, 61, 62, 64, 65, 66, 68, 72, 75, 77, 80, 81, 82, 83, 85, 86, 87, 88, 93, 94, 95, 97, 101, 111, 114, 115, 116], "g": [0, 1, 10, 12, 14, 16, 18, 28, 31, 34, 37, 48, 49, 53, 57, 62, 77, 80, 81, 87, 88, 97, 111, 114, 115, 116], "low": [0, 115], "energi": [0, 4, 37, 86, 87, 97, 115], "observ": [0, 115], "icecub": [0, 1, 3, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 39, 42, 44, 58, 61, 63, 71, 110, 115, 116], "here": [0, 77, 114, 115, 116], "implement": [0, 1, 16, 18, 41, 51, 61, 68, 69, 70, 71, 75, 95, 114, 115], "wa": [0, 6, 115], "appli": [0, 6, 10, 12, 14, 36, 39, 40, 41, 44, 62, 68, 69, 70, 71, 72, 83, 85, 87, 105, 115], "oscil": [0, 89, 115], "lead": [0, 115], "signific": [0, 115], "angular": [0, 115], "rang": [0, 87, 115], "relev": [0, 1, 34, 47, 109, 114, 115], "studi": [0, 115], "furthermor": [0, 115], "shown": [0, 115], "could": [0, 114, 115], "muon": [0, 22, 115], "v": [0, 115], "therebi": [0, 1, 103, 104, 115], "effici": [0, 115], "puriti": [0, 115], "sampl": [0, 49, 77, 78, 87, 115], "analysi": [0, 37, 115, 116], "similarli": [0, 34, 115], "ha": [0, 34, 48, 57, 68, 81, 95, 109, 115, 116], "great": [0, 115], "point": [0, 27, 94, 95, 96, 115], "analys": [0, 54, 89, 115], "final": [0, 6, 62, 93, 103, 115], "millisecond": [0, 115], "allow": [0, 54, 58, 62, 93, 101, 106, 115, 116], "whole": [0, 115], "new": [0, 1, 61, 80, 101, 106, 114, 115], "type": [0, 6, 7, 8, 10, 12, 14, 17, 18, 30, 31, 32, 41, 42, 46, 47, 48, 49, 51, 52, 53, 59, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 99, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 114, 115], "cosmic": [0, 115], "alert": [0, 115], "which": [0, 10, 12, 14, 16, 18, 19, 28, 32, 37, 49, 51, 57, 59, 62, 69, 77, 78, 81, 82, 85, 90, 95, 96, 99, 115, 116], "were": [0, 115], "previous": [0, 115], "unfeas": [0, 115], "possibl": [0, 31, 114, 115], "identifi": [0, 6, 10, 12, 14, 28, 81, 103, 104, 115], "10": [0, 8, 37, 65, 66, 80, 81, 99, 115], "tev": [0, 115], "monitor": [0, 115], "rate": [0, 93, 115], "direct": [0, 71, 81, 85, 86, 87, 92, 94, 115], "real": [0, 115], "thi": [0, 3, 6, 8, 10, 12, 14, 16, 18, 20, 34, 36, 39, 41, 42, 44, 47, 48, 53, 57, 58, 62, 69, 76, 77, 78, 80, 83, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 101, 103, 104, 106, 111, 114, 115, 116], "enabl": [0, 3, 115], "first": [0, 76, 93, 96, 114, 115], "ever": [0, 115], "despit": [0, 115], "larg": [0, 95, 115], "background": [0, 115], "origin": [0, 90, 115], "compris": [0, 115], "number": [0, 6, 10, 12, 14, 16, 36, 37, 39, 44, 49, 53, 61, 62, 68, 69, 70, 71, 72, 75, 76, 78, 80, 81, 85, 86, 87, 93, 96, 99, 115], "modul": [0, 3, 5, 6, 10, 15, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 50, 51, 53, 54, 57, 58, 61, 63, 67, 73, 74, 76, 77, 78, 79, 82, 84, 89, 92, 98, 100, 103, 104, 105, 106, 110, 115], "necessari": [0, 8, 31, 114, 115], "workflow": [0, 115], "ingest": [0, 1, 3, 63, 115], "raw": [0, 80, 81, 115], "data": [0, 1, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 75, 77, 78, 83, 87, 88, 94, 96, 99, 101, 103, 106, 110, 113, 115, 116], "domain": [0, 1, 3, 54, 115], "specif": [0, 1, 3, 5, 6, 10, 12, 14, 15, 16, 19, 34, 40, 41, 42, 48, 53, 54, 59, 62, 63, 64, 65, 66, 67, 72, 75, 77, 80, 83, 84, 85, 86, 87, 95, 114, 115, 116], "format": [0, 1, 3, 6, 10, 31, 41, 51, 52, 53, 91, 103, 114, 115, 116], "deploi": [0, 1, 54, 57, 115], "chain": [0, 1, 54, 58, 83, 115, 116], "illustr": [0, 114, 115], "figur": [0, 91, 115], "level": [0, 10, 12, 14, 28, 33, 36, 39, 41, 42, 44, 48, 51, 52, 59, 62, 111, 115, 116], "overview": [0, 115], "typic": [0, 31, 115], "convert": [0, 1, 3, 6, 18, 31, 33, 36, 38, 39, 44, 46, 115, 116], "industri": [0, 3, 115], "standard": [0, 3, 4, 33, 49, 65, 66, 77, 78, 80, 83, 87, 99, 114, 115], "intermedi": [0, 1, 3, 6, 10, 68, 115, 116], "file": [0, 1, 3, 6, 10, 12, 14, 16, 18, 31, 33, 36, 39, 41, 42, 44, 46, 47, 51, 52, 53, 57, 77, 82, 90, 93, 95, 96, 99, 100, 101, 102, 103, 104, 109, 111, 115, 116], "read": [0, 3, 6, 10, 12, 14, 31, 40, 42, 64, 69, 83, 84, 115, 116], "simpl": [0, 58, 115], "physic": [0, 1, 18, 32, 34, 54, 57, 58, 84, 87, 115], "orient": [0, 58, 115], "compon": [0, 1, 58, 61, 62, 82, 83, 115], "manag": [0, 92, 115], "experi": [0, 1, 5, 6, 40, 41, 92, 115], "log": [0, 1, 86, 92, 93, 95, 98, 115, 116], "deploy": [0, 1, 55, 57, 77, 113, 115], "modular": [0, 58, 115], "subclass": [0, 58, 115], "torch": [0, 10, 12, 14, 58, 61, 77, 78, 82, 110, 115, 116], "nn": [0, 58, 61, 75, 78, 115], "mean": [0, 10, 12, 14, 58, 69, 71, 81, 95, 104, 115], "onli": [0, 1, 10, 12, 14, 58, 62, 87, 90, 97, 101, 104, 106, 110, 115, 116], "need": [0, 8, 31, 53, 58, 82, 95, 108, 115, 116], "import": [0, 1, 48, 58, 98, 115], "few": [0, 58, 114, 115], "exist": [0, 10, 12, 14, 37, 48, 58, 94, 103, 115], "purpos": [0, 58, 95, 115], "built": [0, 58, 77, 115], "them": [0, 1, 31, 58, 69, 87, 90, 115, 116], "togeth": [0, 58, 75, 83, 115], "form": [0, 16, 58, 85, 101, 106, 115], "complet": [0, 58, 83, 115], "extend": [0, 1, 115], "suit": [0, 87, 115], "through": [0, 85, 86, 87, 95, 115], "layer": [0, 58, 60, 62, 68, 69, 70, 71, 85, 86, 87, 115], "connect": [0, 8, 75, 76, 77, 80, 95, 115], "etc": [0, 95, 111, 115], "optimis": [0, 1, 115], "differ": [0, 10, 12, 14, 16, 18, 41, 42, 78, 83, 96, 114, 115, 116], "track": [0, 16, 18, 22, 86, 114, 115], "These": [0, 41, 51, 53, 77, 114, 115], "prepar": [0, 8, 95, 115], "satisfi": [0, 115], "o": [0, 87, 115], "load": [0, 7, 10, 47, 82, 101, 103, 115], "requir": [0, 18, 24, 48, 85, 95, 103, 104, 106, 115, 116], "when": [0, 10, 12, 14, 31, 33, 48, 57, 61, 69, 71, 94, 111, 114, 115, 116], "batch": [0, 7, 37, 59, 61, 62, 83, 88, 96, 99, 115], "do": [0, 57, 95, 103, 104, 114, 115, 116], "predict": [0, 8, 23, 27, 29, 37, 57, 68, 83, 85, 87, 95, 96, 115], "either": [0, 8, 10, 12, 14, 18, 95, 115, 116], "contain": [0, 5, 6, 10, 12, 14, 15, 18, 31, 32, 36, 37, 39, 41, 42, 44, 48, 51, 53, 57, 69, 73, 74, 76, 77, 78, 79, 81, 82, 87, 95, 97, 99, 115, 116], "imag": [0, 1, 114, 115, 116], "portabl": [0, 115], "depend": [0, 115, 116], "free": [0, 95, 115], "split": [0, 8, 33, 53, 59, 115], "up": [0, 57, 114, 115, 116], "interfac": [0, 89, 103, 104, 115, 116], "block": [0, 1, 115], "pre": [0, 38, 39, 64, 77, 94, 114, 115], "directli": [0, 115], "while": [0, 20, 93, 115], "continu": [0, 95, 115], "expand": [0, 115], "": [0, 6, 7, 8, 10, 12, 14, 31, 36, 39, 41, 44, 46, 51, 52, 53, 64, 68, 69, 77, 83, 87, 88, 93, 97, 99, 103, 104, 111, 112, 115, 116], "capabl": [0, 115], "project": [0, 114, 115], "receiv": [0, 115], "fund": [0, 115], "european": [0, 115], "union": [0, 6, 7, 8, 10, 12, 14, 20, 31, 34, 36, 39, 41, 42, 44, 57, 59, 61, 62, 69, 77, 78, 83, 87, 103, 106, 109, 115], "horizon": [0, 115], "2020": [0, 115], "innov": [0, 115], "programm": [0, 115], "under": [0, 115], "mari": [0, 115], "sk\u0142odowska": [0, 115], "curi": [0, 115], "grant": [0, 95, 115], "agreement": [0, 114, 115], "No": [0, 115], "890778": [0, 115], "work": [0, 4, 32, 114, 115, 116], "rasmu": [0, 70, 115], "\u00f8rs\u00f8e": [0, 115], "partli": [0, 115], "punch4nfdi": [0, 115], "consortium": [0, 115], "support": [0, 6, 34, 114, 115, 116], "dfg": [0, 115], "nfdi": [0, 115], "39": [0, 115, 116], "1": [0, 6, 8, 10, 16, 31, 36, 39, 44, 49, 59, 62, 69, 71, 75, 76, 78, 81, 85, 86, 87, 88, 93, 95, 96, 97, 103, 115, 116], "germani": [0, 115], "conveni": [1, 114, 116], "collabor": 1, "solv": [1, 114], "It": [1, 31, 48, 57, 81, 85, 87, 114], "leverag": 1, "advanc": [1, 62], "machin": [1, 116], "learn": [1, 51, 53, 57, 85, 87, 93, 116], "without": [1, 75, 80, 90, 95, 116], "have": [1, 20, 36, 39, 42, 44, 48, 49, 53, 62, 77, 81, 87, 114, 116], "expert": 1, "themselv": [1, 103, 104], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 10, 12, 14, 16, 18, 20, 33, 48, 53, 57, 61, 62, 64, 69, 72, 76, 77, 82, 95, 101, 102, 103, 104, 105, 106, 111, 114, 116], "streamlin": 1, "process": [1, 6, 36, 39, 44, 57, 64, 69, 71, 114, 116], "transform": [1, 62, 71, 87, 97], "extens": [1, 41, 51, 109], "basic": 1, "across": [1, 2, 10, 12, 14, 34, 45, 62, 83, 95, 98, 99, 100, 111], "variou": [1, 50], "easili": 1, "architectur": [1, 68, 69, 70, 71], "main": [1, 67, 77, 83, 114, 116], "featur": [1, 3, 4, 10, 12, 14, 19, 37, 53, 57, 61, 62, 64, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 85, 88, 96, 103, 114], "i3": [1, 18, 32, 33, 34, 36, 39, 42, 44, 47, 57, 109, 116], "more": [1, 10, 47, 48, 103, 104, 111], "index": [1, 6, 10, 12, 14, 34, 48, 62, 64, 76, 81, 93], "sqlite": [1, 3, 8, 9, 14, 37, 39, 44, 46, 48, 53, 116], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 10, 51, 64, 72, 77, 87, 102], "awai": 1, "detail": [1, 93, 116], "expos": 1, "physicst": 1, "what": [1, 77, 114], "i3modul": [1, 54, 57], "includ": [1, 83, 90, 95, 101, 114], "docker": 1, "run": [1, 42, 46], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 9, 15, 17, 54, 58, 73, 98], "dataset": [1, 3, 7, 8, 11, 12, 13, 14, 22, 49, 77, 99, 103], "extractor": [1, 3, 6, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 44, 57], "parquet": [1, 3, 9, 12, 36, 39, 44, 46, 52, 65, 66, 116], "pre_configur": [1, 3, 39], "reader": [1, 3, 39, 41, 42], "util": [1, 3, 15, 17, 31, 32, 33, 34, 46, 47, 48, 49, 58, 73, 92, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113], "writer": [1, 3, 39, 51, 52, 53], "constant": [1, 3, 113], "dataclass": [1, 3, 32], "dataconvert": [1, 3, 38, 51, 52, 53], "dataload": [1, 3, 8, 37, 77, 83, 96, 106], "datamodul": [1, 3], "pipelin": [1, 3], "coarsen": [1, 58, 62], "standard_model": [1, 58], "pisa": [1, 24, 37, 90, 91, 110, 113, 116], "fit": [1, 8, 83, 89, 91, 95, 97, 106], "plot": [1, 89], "callback": [1, 83, 92], "label": [1, 10, 22, 25, 68, 77, 83, 87, 91, 92, 96], "loss_funct": [1, 87, 92], "weight_fit": [1, 92], "config": [1, 7, 49, 90, 93, 95, 98, 99, 101, 102, 103, 104, 105, 106], "argpars": [1, 98], "decor": [1, 98, 110], "deprecation_tool": [1, 98], "filesi": [1, 98], "math": [1, 98], "submodul": [1, 3, 9, 11, 13, 15, 17, 30, 35, 38, 40, 43, 45, 50, 55, 58, 60, 63, 67, 73, 74, 79, 84, 89, 92, 98, 100, 105], "global": [2, 4, 69, 71, 82], "deprecated_method": [3, 35, 43], "graphnet_file_read": [3, 40], "i3read": [3, 36, 39, 40, 44], "parquet_to_sqlit": [3, 45], "random": [3, 10, 12, 14, 45, 49, 103], "sqlite_util": [3, 45], "string_selection_resolv": [3, 45], "graphnet_writ": [3, 50], "parquet_writ": [3, 50], "sqlite_writ": [3, 50], "truth": [3, 4, 10, 12, 14, 19, 28, 37, 48, 77, 87, 96, 97, 103], "i3fileset": [3, 5, 41, 42], "init_global_index": [3, 6], "collate_fn": [3, 7, 92, 96], "do_shuffl": [3, 7], "graphnetdatamodul": [3, 8], "insqlitepipelin": [3, 37], "class": [4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 36, 37, 39, 41, 42, 44, 46, 49, 51, 52, 53, 57, 59, 61, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 82, 83, 85, 86, 87, 90, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 111, 114], "object": [4, 5, 10, 12, 14, 20, 31, 34, 59, 62, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 82, 83, 85, 86, 87, 90, 93, 95, 96, 99, 101, 103, 104, 106, 111], "namespac": [4, 82, 103, 104], "name": [4, 6, 7, 10, 12, 14, 16, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 39, 41, 44, 46, 48, 51, 52, 53, 57, 64, 77, 78, 80, 87, 90, 94, 97, 99, 101, 103, 104, 105, 106, 111, 114, 116], "i3featureextractor": [4, 15, 17, 57], "icecube86": [4, 63, 65], "dom_x": [4, 57, 65, 80], "dom_i": [4, 57, 65, 80], "dom_z": [4, 57, 65, 80], "dom_tim": 4, "charg": [4, 57, 80, 81, 95], "rde": 4, "pmt_area": 4, "deepcor": [4, 19, 65], "upgrad": [4, 19, 65, 116], "string": [4, 10, 12, 14, 31, 49, 62, 64, 65, 77, 101], "pmt_number": 4, "dom_numb": 4, "pmt_dir_x": 4, "pmt_dir_i": 4, "pmt_dir_z": 4, "dom_typ": 4, "prometheu": [4, 58, 63], "sensor_pos_x": [4, 66], "sensor_pos_i": [4, 66], "sensor_pos_z": [4, 66], "t": [4, 34, 48, 91, 93, 95, 116], "kaggl": [4, 61, 65, 71], "x": [4, 28, 61, 62, 76, 80, 81, 87, 88, 91, 95, 97], "y": [4, 28, 76, 88, 91, 116], "z": [4, 28, 76, 88, 116], "auxiliari": 4, "i3truthextractor": [4, 15, 17], "energy_track": [4, 86], "energy_cascad": [4, 86], "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": [4, 86, 94], "zenith": [4, 86, 94], "pid": [4, 49, 103], "elast": 4, "sim_typ": 4, "interaction_typ": 4, "interaction_tim": [4, 86], "inelast": [4, 86], "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "i3_fil": [5, 18], "str": [5, 6, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 48, 49, 51, 52, 53, 57, 61, 62, 64, 65, 66, 69, 71, 77, 78, 80, 81, 82, 83, 87, 90, 93, 94, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 111], "gcd_file": [5, 18, 57], "paramet": [5, 6, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 48, 49, 51, 52, 53, 57, 59, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112], "output_fil": 6, "global_index": 6, "avail": [6, 20, 37, 85, 86, 87, 110], "pool": [6, 58, 59, 60, 69, 71], "worker": [6, 36, 37, 44, 47, 99, 111], "return": [6, 7, 8, 10, 12, 14, 16, 18, 31, 32, 34, 41, 42, 46, 47, 48, 49, 51, 52, 53, 59, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112], "none": [6, 7, 8, 10, 12, 14, 18, 20, 28, 32, 33, 34, 36, 37, 39, 41, 42, 44, 46, 48, 49, 51, 52, 53, 57, 61, 62, 69, 71, 76, 77, 78, 80, 82, 83, 87, 90, 93, 95, 96, 97, 99, 101, 102, 103, 105, 109, 111], "synchron": 6, "list": [6, 7, 8, 10, 12, 14, 20, 28, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 48, 49, 51, 52, 53, 57, 59, 61, 62, 64, 69, 71, 75, 76, 77, 78, 80, 81, 82, 83, 87, 88, 91, 93, 96, 97, 103, 105, 106, 109, 111], "file_read": 6, "save_method": 6, "outdir": [6, 36, 37, 39, 44, 46, 90], "index_column": [6, 10, 12, 14, 36, 39, 44, 48, 49, 90, 96, 97, 103], "num_work": [6, 7, 39, 96], "abc": [6, 10, 16, 37, 41, 51, 82, 94, 97, 102, 103, 104], "logger": [6, 8, 10, 16, 33, 37, 41, 46, 49, 51, 52, 57, 75, 82, 83, 94, 97, 98, 111, 116], "A": [6, 8, 10, 33, 37, 41, 42, 48, 53, 57, 62, 77, 78, 81, 85, 87, 88, 90, 95, 97, 101, 103, 104, 106, 116], "convers": [6, 36, 44, 46, 116], "parallel": [6, 36, 39, 44], "extract": [6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 46, 47, 57, 87], "also": [6, 10, 12, 14, 49, 103], "assign": [6, 10, 12, 14, 46, 59, 62, 114], "id": [6, 8, 36, 39, 44, 46, 64, 77, 96], "exampl": [6, 31, 49, 59, 62, 81, 95, 103, 104, 116], "initi": [6, 33, 42, 53, 76], "graphnetfileread": [6, 40, 41, 42], "method": [6, 8, 10, 12, 14, 16, 18, 30, 31, 32, 34, 35, 36, 41, 43, 44, 51, 53, 57, 61, 62, 64, 86, 95, 97], "graphnetwrit": [6, 50, 51, 52, 53], "save": [6, 16, 18, 31, 36, 39, 44, 48, 50, 51, 53, 82, 90, 93, 95, 96, 97, 101, 102, 103, 104, 116], "interim": [6, 50, 51, 52, 53], "directori": [6, 36, 37, 39, 41, 42, 44, 46, 51, 52, 90, 93, 109], "i3extractor": [6, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 39, 41, 44], "input": [6, 10, 12, 14, 36, 37, 39, 41, 42, 44, 51, 52, 57, 65, 68, 69, 70, 71, 72, 77, 78, 80, 85, 87, 88, 101, 106, 108], "default": [6, 8, 10, 12, 14, 18, 20, 28, 31, 36, 37, 39, 42, 44, 46, 48, 53, 57, 61, 62, 68, 69, 70, 71, 75, 76, 77, 78, 80, 82, 87, 90, 91, 93, 94, 95, 97, 99, 101, 103, 109], "event_no": [6, 10, 12, 14, 36, 39, 44, 48, 49, 97, 103], "column": [6, 10, 12, 14, 16, 36, 39, 44, 48, 57, 64, 75, 77, 78, 80, 81, 83, 85, 86, 87, 88, 90, 97], "ad": [6, 10, 12, 14, 19, 36, 39, 44, 69, 77, 80, 81, 90], "int": [6, 7, 8, 10, 12, 14, 22, 25, 33, 36, 37, 39, 41, 42, 44, 49, 51, 52, 53, 61, 62, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 81, 83, 85, 86, 87, 88, 90, 93, 95, 96, 97, 99, 103, 106, 111], "cpu": [6, 36, 39, 44, 116], "multiprocess": [6, 36, 39, 44, 116], "get_map_funct": 6, "nb_file": 6, "map": [6, 10, 12, 14, 19, 20, 48, 57, 65, 66, 77, 78, 87, 101, 103, 104, 106], "pure": [6, 16, 17, 20, 34], "tupl": [6, 10, 12, 14, 32, 34, 48, 61, 69, 71, 81, 87, 88, 90, 91, 96, 99, 108], "ani": [6, 7, 8, 10, 12, 14, 31, 32, 33, 34, 41, 51, 52, 53, 57, 59, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 82, 83, 85, 86, 87, 91, 93, 95, 97, 99, 101, 102, 103, 104, 105, 106, 111, 116], "option": [6, 8, 10, 12, 14, 18, 28, 37, 53, 57, 61, 62, 69, 71, 76, 77, 78, 80, 82, 87, 90, 91, 93, 97, 98, 99, 101, 103, 109, 116], "merge_fil": [6, 51, 52, 53], "merg": [6, 51, 52, 53, 95, 116], "call": [6, 20, 34, 62, 87, 90, 93, 97, 111], "instanti": [6, 8, 104], "remov": [7, 36, 44, 77, 96, 99], "less": [7, 96], "two": [7, 69, 90, 93, 95, 96], "dom": [7, 10, 12, 14, 59, 62, 80, 81, 96], "hit": [7, 96], "should": [7, 10, 12, 14, 16, 18, 31, 49, 61, 62, 77, 78, 95, 96, 101, 103, 104, 106, 114, 116], "occur": [7, 96], "product": [7, 96], "selection_nam": 7, "check": [7, 32, 33, 34, 41, 48, 99, 109, 110, 114, 116], "whether": [7, 32, 34, 48, 69, 71, 82, 95, 105, 109, 110], "shuffl": [7, 8, 47, 96], "select": [7, 8, 10, 12, 14, 25, 49, 96, 97, 103, 114], "bool": [7, 32, 33, 34, 48, 49, 51, 57, 69, 71, 77, 80, 81, 82, 83, 90, 93, 95, 96, 97, 99, 105, 108, 109, 110, 111], "batch_siz": [7, 37, 88, 96], "persistent_work": [7, 96], "prefetch_factor": 7, "kwarg": [7, 10, 12, 14, 33, 41, 51, 52, 59, 61, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 82, 83, 85, 86, 87, 93, 95, 97, 101, 103, 104, 111], "construct": [7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 41, 46, 49, 51, 52, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 90, 93, 94, 95, 96, 97, 99, 102, 103, 104, 111], "t_co": 7, "callabl": [7, 10, 34, 61, 62, 64, 65, 66, 77, 87, 96, 97, 101, 103, 104, 105, 110], "classmethod": [7, 10, 82, 95, 101, 102], "from_dataset_config": 7, "datasetconfig": [7, 10, 49, 100, 103], "dict": [7, 8, 10, 20, 31, 34, 37, 48, 64, 65, 66, 77, 78, 82, 83, 90, 91, 93, 96, 99, 101, 103, 104, 105, 106, 108], "dataset_refer": 8, "dataset_arg": 8, "test_select": [8, 103], "train_dataloader_kwarg": 8, "validation_dataloader_kwarg": 8, "test_dataloader_kwarg": 8, "train_val_split": 8, "0": [8, 10, 12, 14, 36, 39, 42, 44, 49, 57, 59, 62, 68, 69, 71, 75, 76, 78, 81, 88, 90, 91, 95, 96, 103], "9": 8, "split_se": 8, "lightningdatamodul": 8, "creat": [8, 37, 48, 77, 80, 101, 102, 106, 114, 116], "sqlitedataset": [8, 13, 14], "parquetdataset": [8, 11, 12], "non": [8, 31, 34, 48, 95], "refer": [8, 66, 103], "argument": [8, 46, 93, 97, 99, 101, 103, 104, 106], "valid": [8, 34, 49, 83, 87, 93, 95, 99, 101, 106], "test": [8, 49, 87, 96, 103, 110, 114], "ratio": 8, "set": [8, 18, 20, 36, 39, 41, 42, 44, 51, 80, 81, 87, 96, 114], "42": [8, 116], "seed": [8, 10, 12, 14, 49, 77, 78, 96, 103], "prepare_data": 8, "setup": [8, 93, 116], "stage": [8, 93], "lightn": [8, 93], "properti": [8, 10, 16, 23, 34, 41, 51, 62, 64, 72, 80, 83, 87, 94, 102, 111], "train_dataload": [8, 83], "val_dataload": [8, 83], "test_dataload": 8, "teardown": 8, "cleanup": 8, "shutdown": 8, "procedur": 8, "close": 8, "after": [8, 61, 69, 71, 93, 99, 103], "overrid": [8, 93], "parquet_dataset": [9, 11], "sqlite_dataset": [9, 13], "columnmissingexcept": [9, 10], "load_modul": [9, 10, 82], "parse_graph_definit": [9, 10], "ensembledataset": [9, 10, 103], "except": 10, "indic": [10, 49, 62, 76, 81, 93, 99, 114], "miss": 10, "class_nam": [10, 33, 41, 51, 52, 104, 111], "cfg": 10, "graphdefinit": [10, 12, 14, 57, 73, 74, 77, 78, 79, 96, 114], "arg": [10, 12, 14, 33, 59, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 82, 83, 85, 86, 87, 95, 99, 101, 111], "path": [10, 12, 14, 18, 36, 39, 41, 42, 44, 47, 48, 53, 57, 77, 82, 90, 91, 93, 96, 99, 101, 102, 103, 109, 116], "pulsemap": [10, 12, 14, 19, 57, 96, 103], "puls": [10, 12, 14, 19, 20, 32, 34, 48, 57, 59, 62, 77, 80, 81, 88], "seri": [10, 12, 14, 19, 20, 32, 34, 48, 57], "node": [10, 12, 14, 58, 59, 62, 68, 69, 71, 73, 74, 75, 77, 78, 88], "multipl": [10, 12, 14, 81, 93, 103, 111], "store": [10, 12, 14, 37, 48, 51, 52, 53, 90, 94], "attribut": [10, 12, 14, 59, 87], "node_truth": [10, 12, 14, 96, 103], "uniqu": [10, 12, 14, 46, 48, 80, 103], "indici": [10, 12, 14, 32, 49, 95], "tabl": [10, 12, 14, 16, 18, 37, 41, 48, 53, 64, 77, 90, 97], "truth_tabl": [10, 12, 14, 90, 96, 97, 103], "inform": [10, 12, 14, 16, 18, 20, 28, 77, 80, 81, 91], "node_truth_t": [10, 12, 14, 96, 103], "string_select": [10, 12, 14, 96, 103], "subset": [10, 12, 14, 61, 69, 71], "given": [10, 12, 14, 18, 53, 62, 75, 87, 97, 99], "queri": [10, 12, 14, 48, 49, 53], "pass": [10, 12, 14, 61, 68, 69, 70, 71, 72, 77, 83, 87, 93, 95, 97, 114], "dtype": [10, 12, 14, 77, 78, 112], "float32": [10, 12, 14, 77, 78], "tensor": [10, 12, 14, 59, 61, 62, 64, 68, 69, 70, 71, 72, 76, 80, 83, 87, 88, 95, 108, 112], "loss_weight_t": [10, 12, 14, 96, 103], "per": [10, 12, 14, 20, 48, 62, 87, 95, 97], "loss": [10, 12, 14, 77, 83, 87, 93, 95, 99], "weight": [10, 12, 14, 57, 77, 87, 90, 95, 97, 104, 116], "loss_weight_column": [10, 12, 14, 77, 96, 103], "correspond": [10, 12, 14, 31, 34, 47, 69, 77, 81, 97, 101, 103, 104, 106, 109, 116], "loss_weight_default_valu": [10, 12, 14, 77, 103], "float": [10, 12, 14, 57, 68, 75, 76, 77, 78, 83, 90, 91, 93, 95, 96, 103], "note": [10, 12, 14, 42, 53, 81, 91, 104], "valu": [10, 12, 14, 28, 31, 48, 62, 76, 77, 78, 91, 94, 95, 99, 101], "specifi": [10, 12, 14, 49, 59, 81, 87, 91, 93, 116], "case": [10, 12, 14, 20, 36, 39, 42, 44, 57, 62, 81, 87, 116], "That": [10, 12, 14, 69, 86, 94], "ignor": [10, 12, 14, 34], "resolv": [10, 12, 14, 49], "10000": [10, 12, 14, 49], "5": [10, 12, 14, 49, 99, 116], "20": [10, 12, 14, 49, 111], "graph_definit": [10, 12, 14, 57, 58, 73, 96, 103], "defin": [10, 12, 14, 49, 57, 62, 73, 74, 75, 77, 79, 81, 96, 101, 103, 104, 106], "represent": [10, 12, 14, 34, 62, 78], "from_config": [10, 82, 102, 103, 104], "instanc": [10, 16, 18, 28, 34, 36, 39, 42, 44, 57, 77, 82, 90, 94, 96, 102, 104, 116], "concaten": [10, 31, 69], "one": [10, 18, 48, 57, 62, 103, 104, 109, 114, 116], "query_t": [10, 12, 14], "sequential_index": [10, 12, 14], "some": [10, 12, 14, 36, 39, 42, 44, 77, 81], "out": [10, 69, 83, 84, 95, 111, 114, 116], "sequenti": 10, "len": [10, 81], "self": [10, 77, 90, 101, 106], "_may_": 10, "_indic": 10, "If": [10, 18, 20, 33, 37, 53, 77, 80, 81, 82, 87, 90, 93, 97, 114, 116], "entir": [10, 82], "impos": 10, "befor": [10, 69, 76, 87, 93], "scalar": [10, 16, 88, 95], "length": [10, 34, 81, 93], "rais": [10, 18, 20, 52, 82, 101, 106], "element": [10, 16, 31, 34, 83, 88, 96, 105], "present": [10, 18, 33, 99, 109, 110], "add_label": 10, "fn": [10, 34, 101, 105], "kei": [10, 20, 31, 32, 34, 48, 62, 94, 103, 104], "add": [10, 69, 99, 108, 114, 116], "custom": [10, 41, 77, 93], "concatdataset": 10, "singl": [10, 51, 53, 62, 69, 81, 94, 103, 104], "collect": [10, 17, 30, 95, 112], "iter": 10, "backend": [11, 13, 50, 52], "pytorch": [12, 14, 93, 116], "databas": [14, 37, 46, 48, 53, 90, 97, 116], "i3genericextractor": [15, 17], "i3hybridrecoextractor": [15, 17], "i3ntmuonlabelsextractor": [15, 17], "i3particleextractor": [15, 17], "i3pisaextractor": [15, 17], "i3quesoextractor": [15, 17], "i3retroextractor": [15, 17], "i3splinempeextractor": [15, 17], "i3tumextractor": [15, 17], "extractor_nam": [16, 18, 20, 23], "inherit": [16, 18, 34, 41, 51, 64, 80, 95, 111], "__call__": [16, 18, 41], "dictionari": [16, 31, 32, 34, 37, 41, 48, 77, 78, 90, 91, 101, 103, 104, 106], "output": [16, 46, 53, 68, 69, 70, 72, 80, 81, 83, 85, 86, 87, 90, 97, 103, 104, 116], "var1": 16, "var_n": 16, "variabl": [16, 18, 20, 34, 41, 69, 80, 81, 88, 97, 111], "arrai": [16, 28, 31, 80, 81], "like": [16, 34, 62, 76, 87, 88, 95, 112, 114], "shape": [16, 76, 77, 80, 88, 95], "n": [16, 59, 62, 76, 95], "where": [16, 36, 39, 42, 44, 77, 78, 80, 81, 94], "denot": [16, 93], "conjunct": [16, 87], "fileread": [16, 41], "keep": [16, 18], "proven": [16, 18], "mc_truth": 16, "get": [16, 32, 48, 64, 93, 96, 116], "i3fram": [17, 20, 32, 34, 57], "frame": [17, 18, 20, 30, 33, 34, 57], "i3_filt": [17, 30, 36, 39, 42, 44], "i3featureextractoricecube86": [17, 19], "i3featureextractoricecubedeepcor": [17, 19], "i3featureextractoricecubeupgrad": [17, 19], "i3pulsenoisetruthflagicecubeupgrad": [17, 19], "i3galacticplanehybridrecoextractor": [17, 21], "i3ntmuonlabelextractor": [17, 22], "i3splinempeicextractor": [17, 27], "observatori": [18, 42], "set_gcd": 18, "gframe": 18, "cframe": 18, "gcd": [18, 32, 36, 39, 42, 44, 47, 57, 109], "pair": [18, 36, 39, 42, 44], "member": [18, 20, 34, 41, 80, 103, 104, 111], "being": [18, 57, 85, 87], "attempt": 18, "find": [18, 76, 109], "c": [18, 31, 62, 76, 95, 116], "instead": [18, 36, 39, 42, 44, 95], "those": 18, "runtimeerror": 18, "86": [19, 65], "nois": [19, 32, 57], "flag": [19, 57], "exclude_kei": 20, "dynam": [20, 61, 69, 70, 71], "pars": [20, 91, 98, 99, 100, 101, 106], "tri": [20, 34], "automat": [20, 77, 95, 114], "cast": [20, 34], "done": [20, 62, 111, 114], "recurs": [20, 34, 36, 39, 41, 42, 44, 105, 109], "each": [20, 31, 34, 46, 47, 48, 53, 59, 62, 65, 66, 69, 71, 75, 77, 78, 80, 81, 85, 87, 88, 90, 91, 93, 96, 109], "look": [20, 116], "signatur": [20, 34], "similar": [20, 34, 116], "handl": [20, 95, 99, 108, 111], "hand": 20, "special": [20, 57, 88], "mc": [20, 48], "tree": 20, "trigger": 20, "exclud": [20, 46, 116], "valueerror": [20, 82], "hybrid": 21, "galatict": 21, "plane": [21, 95], "tum": [22, 29], "dnn": [22, 29], "padding_valu": [22, 25], "northeren": 22, "i3particl": 23, "other": [23, 48, 75, 95, 114], "algorithm": 23, "comparison": [23, 95], "quantiti": [24, 87, 88], "queso": 25, "retro": [26, 37], "splinemp": 27, "border": 28, "mctree": [28, 32], "ndarrai": [28, 77, 81, 97], "boundari": 28, "volum": 28, "coordin": [28, 64, 76, 80, 88], "particl": [28, 48, 94], "start": [28, 114, 116], "stop": [28, 93, 99], "within": [28, 59, 61, 62, 69, 75], "hard": 28, "i3mctre": 28, "flatten_nested_dictionari": [30, 31], "serialis": [30, 31], "transpose_list_of_dict": [30, 31], "frame_is_montecarlo": [30, 32], "frame_is_nois": [30, 32], "get_om_keys_and_pulseseri": [30, 32], "i3filt": [30, 33, 36, 39, 42, 44], "nullspliti3filt": [30, 33, 36, 39, 42, 44], "i3filtermask": [30, 33], "is_boost_enum": [30, 34], "is_boost_class": [30, 34], "is_icecube_class": [30, 34], "is_typ": [30, 34], "is_method": [30, 34], "break_cyclic_recurs": [30, 34], "get_member_vari": [30, 34], "cast_object_to_pure_python": [30, 34], "cast_pulse_series_to_pure_python": [30, 34], "manipul": [31, 73, 74, 79], "obj": [31, 34, 105], "parent_kei": 31, "separ": [31, 76, 93, 116], "flatten": 31, "nest": 31, "d": [31, 76, 77, 80, 114], "b": [31, 59, 62], "2": [31, 36, 44, 62, 69, 71, 75, 78, 81, 86, 88, 90, 91, 95, 103, 116], "a__b": 31, "applic": 31, "combin": [31, 39, 103], "parent": 31, "__": [31, 34], "nester": 31, "json": [31, 103], "therefor": [31, 42], "we": [31, 34, 49, 81, 114, 116], "outer": 31, "abl": [31, 116], "de": 31, "transpos": 31, "mont": 32, "carlo": 32, "simul": [32, 57], "icetrai": [32, 34, 36, 39, 42, 44, 57, 110], "pulseseri": 32, "calibr": [32, 34], "gcd_dict": [32, 34], "p": [32, 95], "om": [32, 34], "i3calibr": 32, "indicesfor": 32, "filter": [33, 36, 39, 42, 44, 111], "log_fold": [33, 41, 51, 52, 111], "skip": [33, 69], "null": [33, 48], "filter_nam": 33, "filter_ani": 33, "filtermask": 33, "true": [33, 48, 57, 71, 77, 80, 90, 93, 95, 97, 103, 104, 106, 109], "kept": 33, "fals": [33, 57, 69, 77, 82, 90, 93, 95, 97, 103], "boost": 34, "enum": 34, "ensur": [34, 47, 95, 111, 114, 116], "isn": 34, "same": [34, 48, 59, 62, 81, 85, 88, 93, 105, 111], "return_discard": 34, "mangl": 34, "take": [34, 62, 114], "mainli": 34, "cannot": [34, 101, 106], "trivial": [34, 87], "For": [34, 93], "doe": [34, 85, 87, 104], "try": 34, "equival": 34, "its": 34, "regular": 34, "otherwis": [34, 95], "itself": [34, 87], "deem": 34, "wai": [34, 49, 114, 116], "optic": 34, "found": [34, 36, 39, 42, 44, 81, 95], "deprec": [35, 36, 43, 44, 108], "parquetdataconvert": [35, 36], "gcd_rescu": [36, 39, 42, 44, 109], "i3toparquetconvert": [36, 38, 39], "subfold": [36, 39, 42, 44], "search": [36, 39, 41, 42, 44, 109], "convent": [36, 39, 42, 44], "folder": [36, 39, 42, 44], "accompani": [36, 39, 42, 44], "howev": [36, 39, 42, 44], "broken": [36, 39, 42, 44], "In": [36, 39, 41, 42, 44, 51, 103, 104, 116], "icetray_verbos": [36, 39, 42, 44], "verbos": [36, 39, 42, 44, 83, 93], "pframe": [36, 39, 42, 44], "module_dict": 37, "devic": 37, "retro_table_nam": 37, "n_worker": [37, 90], "pipeline_nam": 37, "initialis": [37, 104], "gnn_module_for_energy_regress": 37, "modulelist": 37, "comput": [37, 76, 83, 87, 88, 95, 101, 103, 104, 106], "100": [37, 116], "size": [37, 53, 61, 62, 69, 70, 71, 99], "alreadi": [37, 48, 116], "error": [37, 95, 111, 114], "prompt": 37, "avoid": [37, 111, 114], "overwrit": [37, 93], "i3tosqliteconvert": [38, 39, 44], "preconfigur": 39, "must": [41, 42, 48, 51, 59, 93, 97, 114], "addit": [41, 51, 59, 61, 83, 95, 97], "accepted_file_extens": 41, "accepted_extractor": 41, "accept": [41, 114], "compat": [41, 49, 87], "extracor_nam": 41, "produc": [41, 57, 94, 97], "find_fil": [41, 42], "mai": [41, 49, 80, 116], "overwritten": [41, 99, 101], "match": [41, 97, 109, 112], "set_extractor": 41, "validate_fil": 41, "input_fil": 41, "reli": 42, "environ": [42, 116], "sqlitedataconvert": [43, 44, 116], "parquettosqliteconvert": [45, 46], "pairwise_shuffl": [45, 47], "database_exist": [45, 48], "query_databas": [45, 48], "get_primary_kei": [45, 48], "database_table_exist": [45, 48], "run_sql_cod": [45, 48], "save_to_sql": [45, 48], "attach_index": [45, 48], "create_t": [45, 48], "create_table_and_save_to_sql": [45, 48], "stringselectionresolv": [45, 49], "parquet_path": 46, "mc_truth_tabl": 46, "excluded_field": 46, "everi": [46, 116], "field": [46, 91, 94, 101, 103, 104, 106, 108], "One": [46, 91], "choos": 46, "certain": [46, 90], "exclude_field": 46, "database_nam": [46, 53], "rng": 47, "relat": [47, 109], "i3_list": [47, 109], "gcd_list": [47, 109], "correpond": 47, "handi": 47, "becaus": 47, "even": 47, "files_list": 47, "gcd_shuffl": 47, "i3_shuffl": 47, "database_path": [48, 90, 97], "execut": 48, "result": [48, 62, 81, 93, 95, 96, 105, 116], "datafram": [48, 49, 51, 64, 83, 90, 96, 97], "primari": 48, "splitinicepuls": 48, "table_nam": 48, "df": 48, "attach": 48, "default_typ": 48, "integer_primary_kei": 48, "NOT": [48, 95], "integ": [48, 69, 70, 95], "Such": 48, "row": [48, 53, 81], "appropri": [48, 87], "expect": [48, 49, 51, 57, 77, 80], "doesn": 48, "use_cach": 49, "flexibl": 49, "below": [49, 91, 97, 114, 116], "show": [49, 93], "involv": 49, "cover": 49, "current": [49, 93, 114, 116], "yml": [49, 99, 103, 104], "50000": [49, 103], "ab": [49, 95, 103], "12": [49, 103], "14": [49, 103], "16": [49, 103], "13": [49, 116], "panda": [49, 97], "syntax": [49, 95], "fix": 49, "randomli": [49, 77, 78, 104], "dataformat": [50, 53], "parquetwrit": [50, 52], "sqlitewrit": [50, 53], "graphnetfilesavemethod": [51, 53], "deep": [51, 53, 61, 71], "save_fil": 51, "reciev": 51, "file_extens": 51, "output_dir": [51, 52, 53], "smaller": 51, "expects_merged_datafram": 51, "write": [52, 57, 116], "notimplementederror": 52, "merged_database_nam": 53, "max_table_s": 53, "db": [53, 96], "maximum": [53, 62, 81, 87, 99], "proceedur": 53, "partit": 53, "approxim": 53, "you": [53, 103, 104, 114, 116], "mani": 53, "exceed": 53, "400": 53, "million": 53, "tend": 53, "notic": [53, 88, 95], "slower": 53, "put": 53, "my_databas": 53, "graphnet_modul": [54, 55], "graphneti3modul": [55, 57], "i3inferencemodul": [55, 57], "i3pulsecleanermodul": [55, 57], "pulsemap_extractor": 57, "constructor": 57, "knngraph": [57, 73, 78], "associ": [57, 77, 81, 86, 87, 95], "model_config": [57, 98, 100, 101, 103, 106], "state_dict": [57, 82, 108], "model_nam": [57, 90], "prediction_column": [57, 83, 96], "pulsmap": 57, "modelconfig": [57, 82, 100, 103, 104], "summar": [57, 80, 81], "Will": [57, 75], "help": [57, 99, 114], "entri": [57, 69, 91, 99], "dynedg": [57, 58, 67, 70, 71], "energy_reco": 57, "discard_empty_ev": 57, "clean": [57, 114, 116], "assum": [57, 64, 77, 81, 87, 88], "been": [57, 95, 114], "7": [57, 62, 90], "consid": [57, 116], "posit": [57, 62, 81, 86, 101, 106], "signal": 57, "els": 57, "elimin": 57, "whose": 57, "empti": 57, "speed": [57, 76], "especi": 57, "sinc": [57, 95], "further": 57, "calcul": [57, 75, 78, 83, 88, 94, 95], "convnet": [58, 67], "dynedge_jinst": [58, 67], "dynedge_kaggle_tito": [58, 67], "edg": [58, 61, 62, 69, 70, 71, 73, 76, 77, 78, 79, 80, 88], "unbatch_edge_index": [58, 59], "attributecoarsen": [58, 59], "domcoarsen": [58, 59], "customdomcoarsen": [58, 59], "domandtimewindowcoarsen": [58, 59], "standardmodel": [58, 83], "calculate_xyzt_homophili": [58, 88], "calculate_distance_matrix": [58, 88], "knn_graph_batch": [58, 88], "oper": [59, 61, 67, 69], "cluster": [59, 61, 62, 69, 71, 80, 81], "local": [59, 65, 66, 99], "edge_index": [59, 61, 88], "accord": [59, 62, 75, 77, 78, 81], "vector": [59, 62, 95], "longtensor": [59, 62, 88], "mathbf": [59, 62], "ldot": [59, 62], "reduce_opt": 59, "avg": 59, "avg_pool": 59, "avg_pool_x": 59, "max": [59, 61, 69, 71, 95, 99], "max_pool": [59, 62], "max_pool_x": [59, 62], "min": [59, 62, 69, 71], "min_pool": [59, 60, 62], "min_pool_x": [59, 60, 62], "sum": [59, 62, 69, 71, 83], "sum_pool": [59, 60, 62], "sum_pool_x": [59, 60, 62], "forward": [59, 61, 64, 68, 69, 70, 71, 72, 75, 77, 80, 83, 87, 95], "simplecoarsen": 59, "window": 59, "time_window": 59, "dynedgeconv": [60, 61, 69], "edgeconvtito": [60, 61], "dyntran": [60, 61, 71], "sum_pool_and_distribut": [60, 62], "group_bi": [60, 62], "group_pulses_to_dom": [60, 62], "group_pulses_to_pmt": [60, 62], "std_pool_x": [60, 62], "std_pool": [60, 62], "aggr": 61, "nb_neighbor": 61, "features_subset": [61, 69, 71], "edgeconv": 61, "lightningmodul": [61, 82, 93, 111], "convolut": [61, 68, 69, 70, 71], "mlp": [61, 69], "aggreg": [61, 62], "8": [61, 62, 69, 78, 95, 96, 114, 116], "neighbour": [61, 69, 71, 75, 76, 78, 88], "sequenc": [61, 81, 96], "slice": [61, 69], "sparsetensor": 61, "messagepass": 61, "tito": [61, 71], "solut": [61, 71, 114], "competit": [61, 65, 71], "reset_paramet": 61, "reset": 61, "learnabl": [61, 67, 68, 69, 70, 71, 72, 87], "messag": [61, 93, 111], "x_i": 61, "x_j": 61, "layer_s": 61, "n_head": 61, "dyntrans1": 61, "head": [61, 87], "multiheadattent": 61, "just": [62, 116], "negat": 62, "cluster_index": 62, "distribut": [62, 69, 86, 87, 95, 97], "ident": [62, 87], "pmt": [62, 81], "f1": 62, "f2": 62, "6": [62, 91], "groupbi": 62, "3": [62, 68, 71, 76, 81, 86, 88, 90, 91, 95, 114, 116], "matrix": [62, 75, 76, 88, 95], "mathbb": 62, "r": [62, 75, 116], "n_1": 62, "n_b": 62, "f": 62, "obtain": [62, 95], "wise": 62, "dens": 62, "fc": 62, "known": 62, "std": 62, "repres": [62, 77, 78, 80, 81, 101, 103, 104], "averag": [62, 95], "torch_geometr": 62, "version": [62, 81, 87, 93, 114, 116], "standardis": 63, "icecubekaggl": [63, 65], "icecubedeepcor": [63, 65], "icecubeupgrad": [63, 65], "orca150": [63, 66], "ins": 64, "feature_map": [64, 65, 66], "input_featur": [64, 77], "input_feature_nam": [64, 77, 78, 80], "adjac": 64, "geometry_t": [64, 65, 66], "public": [64, 97], "retriev": 64, "geometri": [64, 77], "string_index_nam": 64, "sensor_position_nam": 64, "xyz": [64, 65, 66, 80, 81], "sensor_index_nam": 64, "sensor": [64, 77], "geometry_table_path": [65, 66], "home": [65, 66, 99, 116], "runner": [65, 66, 99], "lib": [65, 66, 99, 116], "python3": [65, 66, 99], "string_id_column": [65, 66], "sensor_id_column": [65, 66], "sensor_id": [65, 66], "dimens": [65, 66, 68, 69, 71, 81, 87, 95], "icecube_upgrad": 65, "prototyp": 66, "orca_150": 66, "sensor_string_id": 66, "dynedgejinst": [67, 70], "dynedgetito": [67, 71], "author": [68, 70, 95], "martin": 68, "minh": 68, "nb_input": [68, 69, 70, 71, 72, 85, 86, 87], "nb_output": [68, 70, 72, 80, 85, 86, 87], "nb_intermedi": 68, "128": [68, 69, 99], "dropout_ratio": 68, "fraction": [68, 96], "drop": 68, "nb_neighbour": 69, "k": [69, 71, 75, 78, 88, 95], "nearest": [69, 71, 75, 76, 78, 88], "latent": [69, 71, 85, 86, 87], "metric": [69, 71, 76, 93], "dynedge_layer_s": 69, "dimenion": [69, 71], "multi": 69, "perceptron": 69, "256": [69, 71], "336": 69, "post_processing_layer_s": 69, "hidden": [69, 70], "follow": [69, 83, 95, 97, 114, 116], "readout_layer_s": 69, "post": [69, 71], "_and_": 69, "As": 69, "last": [69, 85, 86, 87, 93, 96], "global_pooling_schem": [69, 71], "scheme": [69, 71], "add_global_variables_after_pool": 69, "altern": [69, 95, 114], "exact": [70, 95], "2209": 70, "03042": 70, "oerso": 70, "layer_size_scal": 70, "4": [70, 86, 91], "scale": [70, 76, 77, 87, 95], "ic": 71, "univers": 71, "south": 71, "pole": 71, "dyntrans_layer_s": 71, "use_global_featur": 71, "use_post_processing_lay": 71, "core": 72, "edgedefinit": [73, 74, 75, 76, 77, 79], "how": [73, 74, 79], "drawn": [73, 74, 78, 79], "between": [73, 74, 75, 76, 79, 83, 87, 88, 93, 95, 103, 104], "minkowski": [73, 74], "lex_sort": [73, 81], "gather_cluster_sequ": [73, 81], "identify_indic": [73, 81], "cluster_summarize_with_percentil": [73, 81], "knnedg": [74, 75], "radialedg": [74, 75], "euclideanedg": [74, 75], "compute_minkowski_distance_mat": [74, 76], "minkowskiknnedg": [74, 76], "_construct_edg": 75, "definit": [75, 77, 78, 80, 82, 87, 114], "nb_nearest_neighbour": [75, 76, 78], "space": [75, 76, 87, 97], "distanc": [75, 76, 78, 88], "sphere": 75, "chosen": [75, 81, 111], "radiu": 75, "centr": 75, "radial": 75, "center": 75, "euclidean": [75, 114], "see": [75, 77, 93, 114, 116], "http": [75, 77, 95, 114], "arxiv": [75, 95], "org": [75, 95, 116], "pdf": 75, "1809": 75, "06166": 75, "space_coord": 76, "time_coord": 76, "pairwis": [76, 88], "second": 76, "m": [76, 81, 95], "light": [76, 116], "time_like_weight": 76, "prefer": [76, 116], "over": 76, "time_lik": 76, "hold": 77, "alter": 77, "dure": [77, 87, 93], "node_definit": [77, 78], "edge_definit": 77, "nodedefinit": [77, 78, 79, 80], "nodesaspuls": [77, 79, 80], "perturbation_dict": [77, 78], "deviat": [77, 78], "perturb": [77, 78], "add_inactive_sensor": 77, "inact": 77, "append": 77, "pad": [77, 81], "sensor_mask": 77, "mask": 77, "string_mask": 77, "sort_bi": 77, "sort": [77, 81], "truth_dict": 77, "custom_label_funct": 77, "loss_weight": [77, 87], "data_path": 77, "num_row": 77, "github": [77, 95, 116], "com": [77, 95, 116], "team": [77, 114], "blob": [77, 95], "getting_start": 77, "md": 77, "your": [78, 114, 116], "percentileclust": [79, 80], "num_puls": 80, "node_feature_nam": 80, "new_features_nam": 80, "overridden": 80, "set_number_of_input": 80, "set_output_feature_nam": 80, "measur": [80, 81, 88], "cherenkov": [80, 81], "radiat": [80, 81], "percentil": [80, 81], "summari": [80, 81], "cluster_on": [80, 81], "50": [80, 81, 99], "90": [80, 81, 91], "add_count": [80, 81], "duplic": 80, "cluster_column": 81, "numpi": 81, "along": 81, "backward": [81, 95], "feature_idx": 81, "turn": [81, 114], "gather": 81, "nan": 81, "n_cluster": 81, "l": 81, "largest": 81, "suppos": 81, "n_pmt": 81, "three": [81, 95], "spatial": 81, "column_offset": 81, "feature_nam": 81, "summarization_indic": 81, "cluster_indic": 81, "save_state_dict": 82, "load_state_dict": 82, "karg": 82, "trust": 82, "enough": 82, "eval": [82, 116], "lambda": 82, "express": [82, 95], "consequ": 82, "backbon": 83, "max_epoch": 83, "early_stopping_pati": [83, 106], "gpu": [83, 99, 116], "ckpt_path": 83, "log_every_n_step": 83, "gradient_clip_v": 83, "distribution_strategi": 83, "trainer_kwarg": 83, "pytorch_lightn": [83, 93, 111], "trainer": [83, 93, 96], "target_label": [83, 87], "target": [83, 85, 87, 95, 106], "prediction_label": [83, 87], "configure_optim": 83, "optim": [83, 93], "shared_step": 83, "batch_idx": 83, "share": 83, "step": [83, 93], "training_step": 83, "train_batch": 83, "validation_step": 83, "val_batch": 83, "compute_loss": [83, 87], "pred": [83, 87], "activ": [83, 87, 114, 116], "mode": [83, 87], "deactiv": [83, 87], "predict_as_datafram": 83, "additional_attribut": [83, 96], "multiclassclassificationtask": [84, 85], "binaryclassificationtask": [84, 85], "binaryclassificationtasklogit": [84, 85], "azimuthreconstructionwithkappa": [84, 86], "azimuthreconstruct": [84, 86], "directionreconstructionwithkappa": [84, 86], "zenithreconstruct": [84, 86], "zenithreconstructionwithkappa": [84, 86], "energyreconstruct": [84, 86], "energyreconstructionwithpow": [84, 86], "energytcreconstruct": [84, 86], "energyreconstructionwithuncertainti": [84, 86], "vertexreconstruct": [84, 86], "positionreconstruct": [84, 86], "timereconstruct": [84, 86], "inelasticityreconstruct": [84, 86], "learnedtask": [84, 87], "standardlearnedtask": [84, 85, 86, 87], "identitytask": [84, 85, 87], "standardflowtask": [84, 87], "classifi": 85, "untransform": 85, "interpret": 85, "logit": [85, 95], "embed": [85, 87], "binari": [85, 95], "hidden_s": [85, 86, 87], "default_target_label": [85, 86, 87], "default_prediction_label": [85, 86, 87], "target_pr": 85, "angl": [86, 94], "kappa": [86, 95], "var": 86, "azimuth_pr": 86, "azimuth_kappa": 86, "3d": [86, 95], "vmf": 86, "dir_x_pr": 86, "dir_y_pr": 86, "dir_z_pr": 86, "direction_kappa": 86, "zenith_pr": 86, "zenith_kappa": 86, "stabl": [86, 87], "energy_pr": 86, "cascad": 86, "energy_track_pr": 86, "energy_cascade_pr": 86, "uncertainti": 86, "energy_sigma": 86, "vertex": 86, "position_x_pr": 86, "position_y_pr": 86, "position_z_pr": 86, "interaction_time_pr": 86, "interact": 86, "hadron": 86, "inelasticity_pr": 86, "lossfunct": [87, 92, 95], "auto": 87, "matic": 87, "_pred": 87, "transform_prediction_and_target": 87, "numer": 87, "transform_target": 87, "log10": [87, 97], "rather": [87, 111], "transform_infer": 87, "invers": 87, "recov": 87, "transform_support": 87, "minimum": 87, "restrict": [87, 95], "invert": 87, "1e6": 87, "train_ev": 87, "act": [87, 95], "wrt": 87, "meet": 87, "come": [87, 114], "vast": 87, "major": 87, "supervis": 87, "grab": 87, "send": 87, "evalu": 87, "normalizingflow": 87, "jacobian": 87, "normal": 87, "flow": 87, "xyzt": 88, "homophili": 88, "xyz_coord": 88, "nb_dom": 88, "updat": [88, 90, 93], "config_updat": [89, 90], "weightfitt": [89, 90, 92, 97], "contourfitt": [89, 90], "read_entri": [89, 91], "plot_2d_contour": [89, 91], "plot_1d_contour": [89, 91], "contour": [90, 91], "config_path": 90, "new_config_path": 90, "dummy_sect": 90, "temp": 90, "dummi": 90, "section": 90, "header": 90, "configupdat": 90, "programat": 90, "statistical_fit": 90, "fit_weight": [90, 97], "config_outdir": 90, "weight_nam": [90, 97], "pisa_config_dict": 90, "add_to_databas": [90, 97], "flux": 90, "_database_path": 90, "statist": 90, "effect": [90, 93, 114], "account": 90, "systemat": 90, "hypersurfac": 90, "chang": [90, 95, 114], "assumpt": 90, "regard": 90, "pipeline_path": 90, "post_fix": 90, "include_retro": 90, "fit_1d_contour": 90, "run_nam": 90, "config_dict": 90, "grid_siz": 90, "theta23_minmax": 90, "36": 90, "54": 90, "dm31_minmax": 90, "1d": [90, 91], "fit_2d_contour": 90, "2d": [90, 91, 95], "content": 91, "contour_data": 91, "xlim": 91, "ylim": 91, "0023799999999999997": 91, "0025499999999999997": 91, "chi2_critical_valu": 91, "width": 91, "height": 91, "path_to_pisa_fit_result": 91, "name_of_my_model_in_fit": 91, "legend": 91, "color": 91, "linestyl": 91, "style": [91, 114], "line": [91, 93, 99], "upper": 91, "bound": 91, "axi": 91, "605": 91, "critic": [91, 111], "chi2": 91, "cl": 91, "right": [91, 95], "176": 91, "inch": 91, "388": 91, "706": 91, "abov": [91, 95, 97, 116], "352": 91, "piecewiselinearlr": [92, 93], "progressbar": [92, 93], "graphnetearlystop": [92, 93], "mseloss": [92, 95], "rmseloss": [92, 95], "logcoshloss": [92, 95], "crossentropyloss": [92, 95], "binarycrossentropyloss": [92, 95], "logcmk": [92, 95], "vonmisesfisherloss": [92, 95], "vonmisesfisher2dloss": [92, 95], "euclideandistanceloss": [92, 95], "vonmisesfisher3dloss": [92, 95], "collator_sequence_bucklet": [92, 96], "make_dataload": [92, 96], "make_train_validation_dataload": [92, 96], "get_predict": [92, 96], "save_result": [92, 96], "save_select": [92, 96], "uniform": [92, 97], "bjoernlow": [92, 97], "mileston": 93, "factor": 93, "last_epoch": 93, "_lrschedul": 93, "interpol": 93, "linearli": 93, "multipli": 93, "closest": 93, "vice": 93, "versa": 93, "wrap": [93, 103, 104], "epoch": [93, 99], "print": [93, 111], "stdout": 93, "get_lr": 93, "refresh_r": 93, "process_posit": 93, "tqdmprogressbar": 93, "progress": 93, "bar": 93, "customis": 93, "init_validation_tqdm": 93, "init_predict_tqdm": 93, "init_test_tqdm": 93, "init_train_tqdm": 93, "get_metr": 93, "on_train_epoch_start": 93, "previou": 93, "behaviour": 93, "on_train_epoch_end": 93, "don": [93, 116], "duplciat": 93, "save_dir": 93, "earlystop": 93, "earli": [93, 99], "keyword": [93, 101, 106], "graphnet_model": 93, "on_validation_end": 93, "on_fit_end": 93, "runtim": [94, 116], "azimuth_kei": 94, "zenith_kei": 94, "access": [94, 116], "azimiuth": 94, "return_el": 95, "elementwis": 95, "term": 95, "squar": 95, "root": [95, 116], "cosh": 95, "small": 95, "cross": 95, "entropi": 95, "num_class": 95, "softmax": 95, "ed": 95, "probabl": 95, "mit": 95, "licens": 95, "copyright": 95, "2019": 95, "ryabinin": 95, "permiss": 95, "herebi": 95, "person": 95, "copi": 95, "document": 95, "deal": 95, "limit": 95, "modifi": 95, "publish": 95, "sublicens": 95, "sell": 95, "permit": 95, "whom": 95, "furnish": 95, "so": [95, 116], "subject": 95, "condit": 95, "shall": 95, "substanti": 95, "portion": 95, "THE": 95, "AS": 95, "warranti": 95, "OF": 95, "kind": 95, "OR": 95, "impli": 95, "BUT": 95, "TO": 95, "merchant": 95, "FOR": 95, "particular": [95, 114], "AND": 95, "noninfring": 95, "IN": 95, "NO": 95, "holder": 95, "BE": 95, "liabl": 95, "claim": 95, "damag": 95, "liabil": 95, "action": 95, "contract": 95, "tort": 95, "aris": 95, "WITH": 95, "_____________________": 95, "mryab": 95, "vmf_loss": 95, "master": 95, "py": [95, 116], "bessel": 95, "exponenti": 95, "ditto": 95, "iv": 95, "1812": 95, "04616": 95, "spite": 95, "suggest": 95, "sec": 95, "paper": 95, "correct": 95, "static": [95, 114], "ctx": 95, "grad_output": 95, "von": 95, "mise": 95, "fisher": 95, "log_cmk_exact": 95, "c_": 95, "exactli": [95, 111], "log_cmk_approx": 95, "approx": 95, "minu": 95, "sign": 95, "log_cmk": 95, "kappa_switch": 95, "diverg": 95, "700": 95, "float64": 95, "precis": 95, "unaccur": 95, "switch": 95, "batch_split": 96, "bucket": 96, "cut": 96, "mini": 96, "total": 96, "explicitli": [96, 101, 106], "alwai": 96, "respect": 96, "database_indic": 96, "test_siz": 96, "node_level": 96, "tag": [96, 114, 116], "archiv": 96, "file_path": 96, "csv": [96, 103], "uniformweightfitt": 97, "bin": 97, "privat": 97, "_fit_weight": 97, "sql": 97, "desir": [97, 109], "np": 97, "happen": 97, "x_low": 97, "wherea": 97, "curv": 97, "base_config": [98, 100], "dataset_config": [98, 100], "training_config": [98, 100], "argumentpars": [98, 99], "rename_state_dict_entri": [98, 108], "is_gcd_fil": [98, 109], "is_i3_fil": [98, 109], "has_extens": [98, 109], "find_i3_fil": [98, 109], "has_icecube_packag": [98, 110], "has_torch_packag": [98, 110], "has_pisa_packag": [98, 110], "requires_icecub": [98, 110], "repeatfilt": [98, 111], "eps_lik": [98, 112], "consist": [99, 111, 114], "cli": 99, "pop_default": 99, "usag": 99, "descript": 99, "command": [99, 116], "standard_argu": 99, "training_example_data_sqlit": 99, "patienc": 99, "narg": 99, "example_energy_reconstruction_model": 99, "num": 99, "fetch": 99, "with_standard_argu": 99, "baseconfig": [100, 101, 102, 103, 104, 106], "get_all_argument_valu": [100, 101], "save_dataset_config": [100, 103], "datasetconfigsavermeta": [100, 103], "datasetconfigsaverabcmeta": [100, 103], "save_model_config": [100, 104], "modelconfigsavermeta": [100, 104], "modelconfigsaverabc": [100, 104], "traverse_and_appli": [100, 105], "list_all_submodul": [100, 105], "get_all_grapnet_class": [100, 105], "is_graphnet_modul": [100, 105], "is_graphnet_class": [100, 105], "get_graphnet_class": [100, 105], "trainingconfig": [100, 106], "basemodel": [101, 103, 104], "validationerror": [101, 106], "pydantic_cor": [101, 106], "dump": [101, 103, 104], "yaml": [101, 102], "as_dict": [101, 103, 104], "model_computed_field": [101, 103, 104, 106], "classvar": [101, 103, 104, 106], "computedfieldinfo": [101, 103, 104, 106], "configdict": [101, 103, 104, 106], "conform": [101, 103, 104, 106], "pydant": [101, 103, 104, 106], "model_field": [101, 103, 104, 106], "fieldinfo": [101, 103, 104, 106], "metadata": [101, 103, 104, 106], "about": [101, 103, 104, 106], "replac": [101, 103, 104, 106, 108], "__fields__": [101, 103, 104, 106], "v1": [101, 103, 104, 106, 116], "re": [102, 116], "save_config": 102, "dataconfig": 103, "transpar": [103, 104, 114], "reproduc": [103, 104], "session": [103, 104], "anoth": [103, 104], "still": 103, "train_select": 103, "unambigu": [103, 104], "annot": [103, 104, 106], "nonetyp": 103, "init_fn": [103, 104], "__init__": [103, 104, 116], "metaclass": [103, 104], "abcmeta": [103, 104], "datasetconfigsav": 103, "trainabl": 104, "hyperparamet": 104, "thu": 104, "modelconfigsav": 104, "fn_kwarg": 105, "structur": 105, "moduletyp": 105, "grapnet": 105, "lookup": 105, "transit": 108, "old_phras": 108, "new_phras": 108, "deepcopi": 108, "who": 108, "renam": 108, "phrase": 108, "place": [108, 114], "system": [109, 116], "filenam": 109, "dir": 109, "test_funct": 110, "repeat": 111, "nb_repeats_allow": 111, "record": 111, "logrecord": 111, "clear": 111, "intuit": 111, "composit": 111, "loggeradapt": 111, "clash": 111, "setlevel": 111, "deleg": 111, "msg": 111, "warn": 111, "info": [111, 116], "debug": 111, "warning_onc": 111, "onc": 111, "handler": 111, "file_handl": 111, "filehandl": 111, "stream_handl": 111, "streamhandl": 111, "assort": 112, "ep": 112, "api": 113, "To": [114, 116], "sure": [114, 116], "smooth": 114, "guidelin": 114, "guid": 114, "encourag": 114, "contributor": 114, "discuss": 114, "bug": 114, "anyth": 114, "describ": 114, "would": 114, "yourself": 114, "ownership": 114, "prioriti": 114, "situat": 114, "lot": 114, "effort": 114, "go": 114, "outsid": 114, "scope": 114, "better": 114, "fork": 114, "repo": 114, "dedic": 114, "branch": [114, 116], "repositori": 114, "own": [114, 116], "autom": 114, "review": 114, "least": [114, 116], "pep8": 114, "docstr": 114, "googl": 114, "hint": 114, "adher": 114, "pep": 114, "pylint": 114, "flake8": 114, "black": 114, "well": 114, "recommend": [114, 116], "mypi": 114, "pydocstyl": 114, "docformatt": 114, "commit": 114, "hook": 114, "instal": 114, "pip": [114, 116], "Then": 114, "everytim": 114, "pep257": 114, "concept": 114, "ljvmiranda921": 114, "io": 114, "notebook": 114, "2018": 114, "06": 114, "21": 114, "precommit": 114, "virtual": 116, "anaconda": 116, "prove": 116, "instruct": 116, "want": 116, "part": 116, "achiev": 116, "bash": 116, "shell": 116, "cvmf": 116, "opensciencegrid": 116, "py3": 116, "v4": 116, "sh": 116, "rhel_7_x86_64": 116, "metaproject": 116, "env": 116, "alia": 116, "script": 116, "With": 116, "now": 116, "extra": 116, "geometr": 116, "won": 116, "later": 116, "torch_cpu": 116, "txt": 116, "torch_gpu": 116, "unix": 116, "git": 116, "clone": 116, "usernam": 116, "cd": 116, "conda": 116, "gcc_linux": 116, "64": 116, "gxx_linux": 116, "libgcc": 116, "cudatoolkit": 116, "11": 116, "forg": 116, "box": 116, "compil": 116, "gcc": 116, "date": 116, "possibli": 116, "cuda": 116, "toolkit": 116, "recent": 116, "omit": 116, "newer": 116, "export": 116, "ld_library_path": 116, "anaconda3": 116, "miniconda3": 116, "bashrc": 116, "librari": 116, "intend": 116, "rm": 116, "asogaard": 116, "latest": 116, "dc423315742c": 116, "01_icetrai": 116, "01_convert_i3_fil": 116, "2023": 116, "01": 116, "24": 116, "41": 116, "27": 116, "graphnet_20230124": 116, "134127": 116, "46": 116, "convert_i3_fil": 116, "ic86": 116, "thread": 116, "00": 116, "79": 116, "26": 116, "413": 116, "88it": 116, "specialis": 116, "ones": 116, "push": 116, "vx": 116}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [54, 0, 0, "-", "deployment"], [58, 0, 0, "-", "models"], [89, 0, 0, "-", "pisa"], [92, 0, 0, "-", "training"], [98, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "dataclasses"], [6, 0, 0, "-", "dataconverter"], [7, 0, 0, "-", "dataloader"], [8, 0, 0, "-", "datamodule"], [9, 0, 0, "-", "dataset"], [15, 0, 0, "-", "extractors"], [35, 0, 0, "-", "parquet"], [37, 0, 0, "-", "pipeline"], [38, 0, 0, "-", "pre_configured"], [40, 0, 0, "-", "readers"], [43, 0, 0, "-", "sqlite"], [45, 0, 0, "-", "utilities"], [50, 0, 0, "-", "writers"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.dataclasses": [[5, 1, 1, "", "I3FileSet"]], "graphnet.data.dataclasses.I3FileSet": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_file"]], "graphnet.data.dataconverter": [[6, 1, 1, "", "DataConverter"], [6, 4, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[6, 3, 1, "", "get_map_function"], [6, 3, 1, "", "merge_files"]], "graphnet.data.dataloader": [[7, 1, 1, "", "DataLoader"], [7, 4, 1, "", "collate_fn"], [7, 4, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[7, 3, 1, "", "from_dataset_config"]], "graphnet.data.datamodule": [[8, 1, 1, "", "GraphNeTDataModule"]], "graphnet.data.datamodule.GraphNeTDataModule": [[8, 3, 1, "", "prepare_data"], [8, 3, 1, "", "setup"], [8, 3, 1, "", "teardown"], [8, 5, 1, "", "test_dataloader"], [8, 5, 1, "", "train_dataloader"], [8, 5, 1, "", "val_dataloader"]], "graphnet.data.dataset": [[10, 0, 0, "-", "dataset"], [11, 0, 0, "-", "parquet"], [13, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[10, 6, 1, "", "ColumnMissingException"], [10, 1, 1, "", "Dataset"], [10, 1, 1, "", "EnsembleDataset"], [10, 4, 1, "", "load_module"], [10, 4, 1, "", "parse_graph_definition"]], "graphnet.data.dataset.dataset.Dataset": [[10, 3, 1, "", "add_label"], [10, 3, 1, "", "concatenate"], [10, 3, 1, "", "from_config"], [10, 5, 1, "", "path"], [10, 3, 1, "", "query_table"], [10, 5, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[12, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[12, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[12, 3, 1, "", "query_table"]], "graphnet.data.dataset.sqlite": [[14, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[14, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[14, 3, 1, "", "query_table"]], "graphnet.data.extractors": [[16, 0, 0, "-", "extractor"], [17, 0, 0, "-", "icecube"]], "graphnet.data.extractors.extractor": [[16, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[16, 5, 1, "", "name"]], "graphnet.data.extractors.icecube": [[18, 0, 0, "-", "i3extractor"], [19, 0, 0, "-", "i3featureextractor"], [20, 0, 0, "-", "i3genericextractor"], [21, 0, 0, "-", "i3hybridrecoextractor"], [22, 0, 0, "-", "i3ntmuonlabelsextractor"], [23, 0, 0, "-", "i3particleextractor"], [24, 0, 0, "-", "i3pisaextractor"], [25, 0, 0, "-", "i3quesoextractor"], [26, 0, 0, "-", "i3retroextractor"], [27, 0, 0, "-", "i3splinempeextractor"], [28, 0, 0, "-", "i3truthextractor"], [29, 0, 0, "-", "i3tumextractor"], [30, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[18, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[18, 3, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[19, 1, 1, "", "I3FeatureExtractor"], [19, 1, 1, "", "I3FeatureExtractorIceCube86"], [19, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [19, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [19, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[20, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[21, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[22, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[23, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[24, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[25, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[26, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[27, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[28, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[29, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[31, 0, 0, "-", "collections"], [32, 0, 0, "-", "frames"], [33, 0, 0, "-", "i3_filters"], [34, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[31, 4, 1, "", "flatten_nested_dictionary"], [31, 4, 1, "", "serialise"], [31, 4, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[32, 4, 1, "", "frame_is_montecarlo"], [32, 4, 1, "", "frame_is_noise"], [32, 4, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[33, 1, 1, "", "I3Filter"], [33, 1, 1, "", "I3FilterMask"], [33, 1, 1, "", "NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[34, 4, 1, "", "break_cyclic_recursion"], [34, 4, 1, "", "cast_object_to_pure_python"], [34, 4, 1, "", "cast_pulse_series_to_pure_python"], [34, 4, 1, "", "get_member_variables"], [34, 4, 1, "", "is_boost_class"], [34, 4, 1, "", "is_boost_enum"], [34, 4, 1, "", "is_icecube_class"], [34, 4, 1, "", "is_method"], [34, 4, 1, "", "is_type"]], "graphnet.data.parquet": [[36, 0, 0, "-", "deprecated_methods"]], "graphnet.data.parquet.deprecated_methods": [[36, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.pipeline": [[37, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.pre_configured": [[39, 0, 0, "-", "dataconverters"]], "graphnet.data.pre_configured.dataconverters": [[39, 1, 1, "", "I3ToParquetConverter"], [39, 1, 1, "", "I3ToSQLiteConverter"]], "graphnet.data.readers": [[41, 0, 0, "-", "graphnet_file_reader"], [42, 0, 0, "-", "i3reader"]], "graphnet.data.readers.graphnet_file_reader": [[41, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[41, 5, 1, "", "accepted_extractors"], [41, 5, 1, "", "accepted_file_extensions"], [41, 5, 1, "", "extracor_names"], [41, 3, 1, "", "find_files"], [41, 3, 1, "", "set_extractors"], [41, 3, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[42, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[42, 3, 1, "", "find_files"]], "graphnet.data.sqlite": [[44, 0, 0, "-", "deprecated_methods"]], "graphnet.data.sqlite.deprecated_methods": [[44, 1, 1, "", "SQLiteDataConverter"]], "graphnet.data.utilities": [[46, 0, 0, "-", "parquet_to_sqlite"], [47, 0, 0, "-", "random"], [48, 0, 0, "-", "sqlite_utilities"], [49, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.parquet_to_sqlite": [[46, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[46, 3, 1, "", "run"]], "graphnet.data.utilities.random": [[47, 4, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[48, 4, 1, "", "attach_index"], [48, 4, 1, "", "create_table"], [48, 4, 1, "", "create_table_and_save_to_sql"], [48, 4, 1, "", "database_exists"], [48, 4, 1, "", "database_table_exists"], [48, 4, 1, "", "get_primary_keys"], [48, 4, 1, "", "query_database"], [48, 4, 1, "", "run_sql_code"], [48, 4, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[49, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[49, 3, 1, "", "resolve"]], "graphnet.data.writers": [[51, 0, 0, "-", "graphnet_writer"], [52, 0, 0, "-", "parquet_writer"], [53, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[51, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[51, 5, 1, "", "expects_merged_dataframes"], [51, 5, 1, "", "file_extension"], [51, 3, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[52, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[52, 3, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[53, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[53, 3, 1, "", "merge_files"]], "graphnet.deployment.i3modules": [[57, 0, 0, "-", "graphnet_module"]], "graphnet.deployment.i3modules.graphnet_module": [[57, 1, 1, "", "GraphNeTI3Module"], [57, 1, 1, "", "I3InferenceModule"], [57, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.models": [[59, 0, 0, "-", "coarsening"], [60, 0, 0, "-", "components"], [63, 0, 0, "-", "detector"], [67, 0, 0, "-", "gnn"], [73, 0, 0, "-", "graphs"], [82, 0, 0, "-", "model"], [83, 0, 0, "-", "standard_model"], [84, 0, 0, "-", "task"], [88, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[59, 1, 1, "", "AttributeCoarsening"], [59, 1, 1, "", "Coarsening"], [59, 1, 1, "", "CustomDOMCoarsening"], [59, 1, 1, "", "DOMAndTimeWindowCoarsening"], [59, 1, 1, "", "DOMCoarsening"], [59, 4, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[59, 3, 1, "", "forward"], [59, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[61, 0, 0, "-", "layers"], [62, 0, 0, "-", "pool"]], "graphnet.models.components.layers": [[61, 1, 1, "", "DynEdgeConv"], [61, 1, 1, "", "DynTrans"], [61, 1, 1, "", "EdgeConvTito"]], "graphnet.models.components.layers.DynEdgeConv": [[61, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[61, 3, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[61, 3, 1, "", "forward"], [61, 3, 1, "", "message"], [61, 3, 1, "", "reset_parameters"]], "graphnet.models.components.pool": [[62, 4, 1, "", "group_by"], [62, 4, 1, "", "group_pulses_to_dom"], [62, 4, 1, "", "group_pulses_to_pmt"], [62, 4, 1, "", "min_pool"], [62, 4, 1, "", "min_pool_x"], [62, 4, 1, "", "std_pool"], [62, 4, 1, "", "std_pool_x"], [62, 4, 1, "", "sum_pool"], [62, 4, 1, "", "sum_pool_and_distribute"], [62, 4, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[64, 0, 0, "-", "detector"], [65, 0, 0, "-", "icecube"], [66, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[64, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[64, 3, 1, "", "feature_map"], [64, 3, 1, "", "forward"], [64, 5, 1, "", "geometry_table"], [64, 5, 1, "", "sensor_index_name"], [64, 5, 1, "", "sensor_position_names"], [64, 5, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[65, 1, 1, "", "IceCube86"], [65, 1, 1, "", "IceCubeDeepCore"], [65, 1, 1, "", "IceCubeKaggle"], [65, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[65, 3, 1, "", "feature_map"], [65, 2, 1, "", "geometry_table_path"], [65, 2, 1, "", "sensor_id_column"], [65, 2, 1, "", "string_id_column"], [65, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[65, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[65, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[65, 3, 1, "", "feature_map"], [65, 2, 1, "", "geometry_table_path"], [65, 2, 1, "", "sensor_id_column"], [65, 2, 1, "", "string_id_column"], [65, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[66, 1, 1, "", "ORCA150"], [66, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.ORCA150": [[66, 3, 1, "", "feature_map"], [66, 2, 1, "", "geometry_table_path"], [66, 2, 1, "", "sensor_id_column"], [66, 2, 1, "", "string_id_column"], [66, 2, 1, "", "xyz"]], "graphnet.models.gnn": [[68, 0, 0, "-", "convnet"], [69, 0, 0, "-", "dynedge"], [70, 0, 0, "-", "dynedge_jinst"], [71, 0, 0, "-", "dynedge_kaggle_tito"], [72, 0, 0, "-", "gnn"]], "graphnet.models.gnn.convnet": [[68, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[68, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[69, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[69, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[70, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[70, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[71, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[71, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[72, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[72, 3, 1, "", "forward"], [72, 5, 1, "", "nb_inputs"], [72, 5, 1, "", "nb_outputs"]], "graphnet.models.graphs": [[74, 0, 0, "-", "edges"], [77, 0, 0, "-", "graph_definition"], [78, 0, 0, "-", "graphs"], [79, 0, 0, "-", "nodes"], [81, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[75, 0, 0, "-", "edges"], [76, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[75, 1, 1, "", "EdgeDefinition"], [75, 1, 1, "", "EuclideanEdges"], [75, 1, 1, "", "KNNEdges"], [75, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[75, 3, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[76, 1, 1, "", "MinkowskiKNNEdges"], [76, 4, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[77, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[77, 3, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[78, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[80, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[80, 1, 1, "", "NodeDefinition"], [80, 1, 1, "", "NodesAsPulses"], [80, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[80, 3, 1, "", "forward"], [80, 5, 1, "", "nb_outputs"], [80, 3, 1, "", "set_number_of_inputs"], [80, 3, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[81, 4, 1, "", "cluster_summarize_with_percentiles"], [81, 4, 1, "", "gather_cluster_sequence"], [81, 4, 1, "", "identify_indices"], [81, 4, 1, "", "lex_sort"]], "graphnet.models.model": [[82, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[82, 3, 1, "", "from_config"], [82, 3, 1, "", "load"], [82, 3, 1, "", "load_state_dict"], [82, 3, 1, "", "save"], [82, 3, 1, "", "save_state_dict"]], "graphnet.models.standard_model": [[83, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[83, 3, 1, "", "compute_loss"], [83, 3, 1, "", "configure_optimizers"], [83, 3, 1, "", "fit"], [83, 3, 1, "", "forward"], [83, 3, 1, "", "inference"], [83, 3, 1, "", "predict"], [83, 3, 1, "", "predict_as_dataframe"], [83, 5, 1, "", "prediction_labels"], [83, 3, 1, "", "shared_step"], [83, 5, 1, "", "target_labels"], [83, 3, 1, "", "train"], [83, 3, 1, "", "training_step"], [83, 3, 1, "", "validation_step"]], "graphnet.models.task": [[85, 0, 0, "-", "classification"], [86, 0, 0, "-", "reconstruction"], [87, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[85, 1, 1, "", "BinaryClassificationTask"], [85, 1, 1, "", "BinaryClassificationTaskLogits"], [85, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[85, 2, 1, "", "default_prediction_labels"], [85, 2, 1, "", "default_target_labels"], [85, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[85, 2, 1, "", "default_prediction_labels"], [85, 2, 1, "", "default_target_labels"], [85, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[86, 1, 1, "", "AzimuthReconstruction"], [86, 1, 1, "", "AzimuthReconstructionWithKappa"], [86, 1, 1, "", "DirectionReconstructionWithKappa"], [86, 1, 1, "", "EnergyReconstruction"], [86, 1, 1, "", "EnergyReconstructionWithPower"], [86, 1, 1, "", "EnergyReconstructionWithUncertainty"], [86, 1, 1, "", "EnergyTCReconstruction"], [86, 1, 1, "", "InelasticityReconstruction"], [86, 1, 1, "", "PositionReconstruction"], [86, 1, 1, "", "TimeReconstruction"], [86, 1, 1, "", "VertexReconstruction"], [86, 1, 1, "", "ZenithReconstruction"], [86, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[86, 2, 1, "", "default_prediction_labels"], [86, 2, 1, "", "default_target_labels"], [86, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[86, 2, 1, "", "default_prediction_labels"], [86, 2, 1, "", "default_target_labels"], [86, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[86, 2, 1, "", "default_prediction_labels"], [86, 2, 1, "", "default_target_labels"], [86, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[86, 2, 1, "", "default_prediction_labels"], [86, 2, 1, "", "default_target_labels"], [86, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[86, 2, 1, "", "default_prediction_labels"], [86, 2, 1, "", "default_target_labels"], [86, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[86, 2, 1, "", "default_prediction_labels"], [86, 2, 1, "", "default_target_labels"], [86, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[86, 2, 1, "", "default_prediction_labels"], [86, 2, 1, "", "default_target_labels"], [86, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[86, 2, 1, "", "default_prediction_labels"], [86, 2, 1, "", "default_target_labels"], [86, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[86, 2, 1, "", "default_prediction_labels"], [86, 2, 1, "", "default_target_labels"], [86, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[86, 2, 1, "", "default_prediction_labels"], [86, 2, 1, "", "default_target_labels"], [86, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[86, 2, 1, "", "default_prediction_labels"], [86, 2, 1, "", "default_target_labels"], [86, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[86, 2, 1, "", "default_prediction_labels"], [86, 2, 1, "", "default_target_labels"], [86, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[86, 2, 1, "", "default_prediction_labels"], [86, 2, 1, "", "default_target_labels"], [86, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[87, 1, 1, "", "IdentityTask"], [87, 1, 1, "", "LearnedTask"], [87, 1, 1, "", "StandardFlowTask"], [87, 1, 1, "", "StandardLearnedTask"], [87, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[87, 5, 1, "", "default_prediction_labels"], [87, 5, 1, "", "default_target_labels"], [87, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[87, 3, 1, "", "compute_loss"], [87, 3, 1, "", "forward"], [87, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[87, 3, 1, "", "compute_loss"], [87, 3, 1, "", "forward"], [87, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[87, 3, 1, "", "compute_loss"], [87, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[87, 5, 1, "", "default_prediction_labels"], [87, 5, 1, "", "default_target_labels"], [87, 3, 1, "", "inference"], [87, 5, 1, "", "nb_inputs"], [87, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[88, 4, 1, "", "calculate_distance_matrix"], [88, 4, 1, "", "calculate_xyzt_homophily"], [88, 4, 1, "", "knn_graph_batch"]], "graphnet.pisa": [[90, 0, 0, "-", "fitting"], [91, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[90, 1, 1, "", "ContourFitter"], [90, 1, 1, "", "WeightFitter"], [90, 4, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[90, 3, 1, "", "fit_1d_contour"], [90, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[90, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[91, 4, 1, "", "plot_1D_contour"], [91, 4, 1, "", "plot_2D_contour"], [91, 4, 1, "", "read_entry"]], "graphnet.training": [[93, 0, 0, "-", "callbacks"], [94, 0, 0, "-", "labels"], [95, 0, 0, "-", "loss_functions"], [96, 0, 0, "-", "utils"], [97, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[93, 1, 1, "", "GraphnetEarlyStopping"], [93, 1, 1, "", "PiecewiseLinearLR"], [93, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[93, 3, 1, "", "on_fit_end"], [93, 3, 1, "", "on_train_epoch_end"], [93, 3, 1, "", "on_validation_end"], [93, 3, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[93, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[93, 3, 1, "", "get_metrics"], [93, 3, 1, "", "init_predict_tqdm"], [93, 3, 1, "", "init_test_tqdm"], [93, 3, 1, "", "init_train_tqdm"], [93, 3, 1, "", "init_validation_tqdm"], [93, 3, 1, "", "on_train_epoch_end"], [93, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[94, 1, 1, "", "Direction"], [94, 1, 1, "", "Label"]], "graphnet.training.labels.Label": [[94, 5, 1, "", "key"]], "graphnet.training.loss_functions": [[95, 1, 1, "", "BinaryCrossEntropyLoss"], [95, 1, 1, "", "CrossEntropyLoss"], [95, 1, 1, "", "EuclideanDistanceLoss"], [95, 1, 1, "", "LogCMK"], [95, 1, 1, "", "LogCoshLoss"], [95, 1, 1, "", "LossFunction"], [95, 1, 1, "", "MSELoss"], [95, 1, 1, "", "RMSELoss"], [95, 1, 1, "", "VonMisesFisher2DLoss"], [95, 1, 1, "", "VonMisesFisher3DLoss"], [95, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[95, 3, 1, "", "backward"], [95, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[95, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[95, 3, 1, "", "log_cmk"], [95, 3, 1, "", "log_cmk_approx"], [95, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[96, 4, 1, "", "collate_fn"], [96, 1, 1, "", "collator_sequence_buckleting"], [96, 4, 1, "", "get_predictions"], [96, 4, 1, "", "make_dataloader"], [96, 4, 1, "", "make_train_validation_dataloader"], [96, 4, 1, "", "save_results"], [96, 4, 1, "", "save_selection"]], "graphnet.training.weight_fitting": [[97, 1, 1, "", "BjoernLow"], [97, 1, 1, "", "Uniform"], [97, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[97, 3, 1, "", "fit"]], "graphnet.utilities": [[99, 0, 0, "-", "argparse"], [100, 0, 0, "-", "config"], [107, 0, 0, "-", "decorators"], [108, 0, 0, "-", "deprecation_tools"], [109, 0, 0, "-", "filesys"], [110, 0, 0, "-", "imports"], [111, 0, 0, "-", "logging"], [112, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[99, 1, 1, "", "ArgumentParser"], [99, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[99, 2, 1, "", "standard_arguments"], [99, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[99, 3, 1, "", "contains"], [99, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[101, 0, 0, "-", "base_config"], [102, 0, 0, "-", "configurable"], [103, 0, 0, "-", "dataset_config"], [104, 0, 0, "-", "model_config"], [105, 0, 0, "-", "parsing"], [106, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[101, 1, 1, "", "BaseConfig"], [101, 4, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[101, 3, 1, "", "as_dict"], [101, 3, 1, "", "dump"], [101, 3, 1, "", "load"], [101, 2, 1, "", "model_computed_fields"], [101, 2, 1, "", "model_config"], [101, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[102, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[102, 5, 1, "", "config"], [102, 3, 1, "", "from_config"], [102, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[103, 1, 1, "", "DatasetConfig"], [103, 1, 1, "", "DatasetConfigSaverABCMeta"], [103, 1, 1, "", "DatasetConfigSaverMeta"], [103, 4, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[103, 3, 1, "", "as_dict"], [103, 2, 1, "", "features"], [103, 2, 1, "", "graph_definition"], [103, 2, 1, "", "index_column"], [103, 2, 1, "", "loss_weight_column"], [103, 2, 1, "", "loss_weight_default_value"], [103, 2, 1, "", "loss_weight_table"], [103, 2, 1, "", "model_computed_fields"], [103, 2, 1, "", "model_config"], [103, 2, 1, "", "model_fields"], [103, 2, 1, "", "node_truth"], [103, 2, 1, "", "node_truth_table"], [103, 2, 1, "", "path"], [103, 2, 1, "", "pulsemaps"], [103, 2, 1, "", "seed"], [103, 2, 1, "", "selection"], [103, 2, 1, "", "string_selection"], [103, 2, 1, "", "truth"], [103, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[104, 1, 1, "", "ModelConfig"], [104, 1, 1, "", "ModelConfigSaverABC"], [104, 1, 1, "", "ModelConfigSaverMeta"], [104, 4, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[104, 2, 1, "", "arguments"], [104, 3, 1, "", "as_dict"], [104, 2, 1, "", "class_name"], [104, 2, 1, "", "model_computed_fields"], [104, 2, 1, "", "model_config"], [104, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[105, 4, 1, "", "get_all_grapnet_classes"], [105, 4, 1, "", "get_graphnet_classes"], [105, 4, 1, "", "is_graphnet_class"], [105, 4, 1, "", "is_graphnet_module"], [105, 4, 1, "", "list_all_submodules"], [105, 4, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[106, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[106, 2, 1, "", "dataloader"], [106, 2, 1, "", "early_stopping_patience"], [106, 2, 1, "", "fit"], [106, 2, 1, "", "model_computed_fields"], [106, 2, 1, "", "model_config"], [106, 2, 1, "", "model_fields"], [106, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[108, 4, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[109, 4, 1, "", "find_i3_files"], [109, 4, 1, "", "has_extension"], [109, 4, 1, "", "is_gcd_file"], [109, 4, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[110, 4, 1, "", "has_icecube_package"], [110, 4, 1, "", "has_pisa_package"], [110, 4, 1, "", "has_torch_package"], [110, 4, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[111, 1, 1, "", "Logger"], [111, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[111, 3, 1, "", "critical"], [111, 3, 1, "", "debug"], [111, 3, 1, "", "error"], [111, 5, 1, "", "file_handlers"], [111, 5, 1, "", "handlers"], [111, 3, 1, "", "info"], [111, 3, 1, "", "setLevel"], [111, 5, 1, "", "stream_handlers"], [111, 3, 1, "", "warning"], [111, 3, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[111, 3, 1, "", "filter"], [111, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[112, 4, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 115], "impact": [0, 115], "usag": [0, 115], "acknowledg": [0, 115], "api": 1, "constant": [2, 4], "data": 3, "dataclass": 5, "dataconvert": [6, 39], "dataload": 7, "datamodul": 8, "dataset": [9, 10], "parquet": [11, 35], "parquet_dataset": 12, "sqlite": [13, 43], "sqlite_dataset": 14, "extractor": [15, 16], "icecub": [17, 65], "i3extractor": 18, "i3featureextractor": 19, "i3genericextractor": 20, "i3hybridrecoextractor": 21, "i3ntmuonlabelsextractor": 22, "i3particleextractor": 23, "i3pisaextractor": 24, "i3quesoextractor": 25, "i3retroextractor": 26, "i3splinempeextractor": 27, "i3truthextractor": 28, "i3tumextractor": 29, "util": [30, 45, 81, 88, 96, 98], "collect": 31, "frame": 32, "i3_filt": 33, "type": 34, "deprecated_method": [36, 44], "pipelin": 37, "pre_configur": 38, "reader": 40, "graphnet_file_read": 41, "i3read": 42, "parquet_to_sqlit": 46, "random": 47, "sqlite_util": 48, "string_selection_resolv": 49, "writer": 50, "graphnet_writ": 51, "parquet_writ": 52, "sqlite_writ": 53, "deploy": [54, 56], "i3modul": 55, "graphnet_modul": 57, "model": [58, 82], "coarsen": 59, "compon": 60, "layer": 61, "pool": 62, "detector": [63, 64], "prometheu": 66, "gnn": [67, 72], "convnet": 68, "dynedg": 69, "dynedge_jinst": 70, "dynedge_kaggle_tito": 71, "graph": [73, 78], "edg": [74, 75], "minkowski": 76, "graph_definit": 77, "node": [79, 80], "standard_model": 83, "task": [84, 87], "classif": 85, "reconstruct": 86, "pisa": 89, "fit": 90, "plot": 91, "train": 92, "callback": 93, "label": 94, "loss_funct": 95, "weight_fit": 97, "argpars": 99, "config": 100, "base_config": 101, "configur": 102, "dataset_config": 103, "model_config": 104, "pars": 105, "training_config": 106, "decor": 107, "deprecation_tool": 108, "filesi": 109, "import": 110, "log": 111, "math": 112, "src": 113, "contribut": 114, "github": 114, "issu": 114, "pull": 114, "request": 114, "convent": 114, "code": 114, "qualiti": 114, "instal": 116, "icetrai": 116, "stand": 116, "alon": 116, "run": 116, "docker": 116}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"], [115, "about"]], "Impact": [[0, "impact"], [115, "impact"]], "Usage": [[0, "usage"], [115, "usage"]], "Acknowledgements": [[0, "acknowledgements"], [115, "acknowledgements"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "dataclasses": [[5, "module-graphnet.data.dataclasses"]], "dataconverter": [[6, "module-graphnet.data.dataconverter"]], "dataloader": [[7, "module-graphnet.data.dataloader"]], "datamodule": [[8, "module-graphnet.data.datamodule"]], "dataset": [[9, "module-graphnet.data.dataset"], [10, "module-graphnet.data.dataset.dataset"]], "parquet": [[11, "module-graphnet.data.dataset.parquet"], [35, "module-graphnet.data.parquet"]], "parquet_dataset": [[12, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "sqlite": [[13, "module-graphnet.data.dataset.sqlite"], [43, "module-graphnet.data.sqlite"]], "sqlite_dataset": [[14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "extractors": [[15, "module-graphnet.data.extractors"]], "extractor": [[16, "module-graphnet.data.extractors.extractor"]], "icecube": [[17, "module-graphnet.data.extractors.icecube"], [65, "module-graphnet.models.detector.icecube"]], "i3extractor": [[18, "module-graphnet.data.extractors.icecube.i3extractor"]], "i3featureextractor": [[19, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor": [[20, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3hybridrecoextractor": [[21, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3ntmuonlabelsextractor": [[22, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor": [[23, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor": [[24, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor": [[25, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3retroextractor": [[26, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeextractor": [[27, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor": [[28, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor": [[29, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "utilities": [[30, "module-graphnet.data.extractors.icecube.utilities"], [45, "module-graphnet.data.utilities"], [98, "module-graphnet.utilities"]], "collections": [[31, "module-graphnet.data.extractors.icecube.utilities.collections"]], "frames": [[32, "module-graphnet.data.extractors.icecube.utilities.frames"]], "i3_filters": [[33, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "types": [[34, "module-graphnet.data.extractors.icecube.utilities.types"]], "deprecated_methods": [[36, "module-graphnet.data.parquet.deprecated_methods"], [44, "module-graphnet.data.sqlite.deprecated_methods"]], "pipeline": [[37, "module-graphnet.data.pipeline"]], "pre_configured": [[38, "module-graphnet.data.pre_configured"]], "dataconverters": [[39, "module-graphnet.data.pre_configured.dataconverters"]], "readers": [[40, "module-graphnet.data.readers"]], "graphnet_file_reader": [[41, "module-graphnet.data.readers.graphnet_file_reader"]], "i3reader": [[42, "module-graphnet.data.readers.i3reader"]], "parquet_to_sqlite": [[46, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[47, "module-graphnet.data.utilities.random"]], "sqlite_utilities": [[48, "module-graphnet.data.utilities.sqlite_utilities"]], "string_selection_resolver": [[49, "module-graphnet.data.utilities.string_selection_resolver"]], "writers": [[50, "module-graphnet.data.writers"]], "graphnet_writer": [[51, "module-graphnet.data.writers.graphnet_writer"]], "parquet_writer": [[52, "module-graphnet.data.writers.parquet_writer"]], "sqlite_writer": [[53, "module-graphnet.data.writers.sqlite_writer"]], "deployment": [[54, "module-graphnet.deployment"]], "i3modules": [[55, "i3modules"]], "deployer": [[56, "deployer"]], "graphnet_module": [[57, "module-graphnet.deployment.i3modules.graphnet_module"]], "models": [[58, "module-graphnet.models"]], "coarsening": [[59, "module-graphnet.models.coarsening"]], "components": [[60, "module-graphnet.models.components"]], "layers": [[61, "module-graphnet.models.components.layers"]], "pool": [[62, "module-graphnet.models.components.pool"]], "detector": [[63, "module-graphnet.models.detector"], [64, "module-graphnet.models.detector.detector"]], "prometheus": [[66, "module-graphnet.models.detector.prometheus"]], "gnn": [[67, "module-graphnet.models.gnn"], [72, "module-graphnet.models.gnn.gnn"]], "convnet": [[68, "module-graphnet.models.gnn.convnet"]], "dynedge": [[69, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[70, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedge_kaggle_tito": [[71, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "graphs": [[73, "module-graphnet.models.graphs"], [78, "module-graphnet.models.graphs.graphs"]], "edges": [[74, "module-graphnet.models.graphs.edges"], [75, "module-graphnet.models.graphs.edges.edges"]], "minkowski": [[76, "module-graphnet.models.graphs.edges.minkowski"]], "graph_definition": [[77, "module-graphnet.models.graphs.graph_definition"]], "nodes": [[79, "module-graphnet.models.graphs.nodes"], [80, "module-graphnet.models.graphs.nodes.nodes"]], "utils": [[81, "module-graphnet.models.graphs.utils"], [88, "module-graphnet.models.utils"], [96, "module-graphnet.training.utils"]], "model": [[82, "module-graphnet.models.model"]], "standard_model": [[83, "module-graphnet.models.standard_model"]], "task": [[84, "module-graphnet.models.task"], [87, "module-graphnet.models.task.task"]], "classification": [[85, "module-graphnet.models.task.classification"]], "reconstruction": [[86, "module-graphnet.models.task.reconstruction"]], "pisa": [[89, "module-graphnet.pisa"]], "fitting": [[90, "module-graphnet.pisa.fitting"]], "plotting": [[91, "module-graphnet.pisa.plotting"]], "training": [[92, "module-graphnet.training"]], "callbacks": [[93, "module-graphnet.training.callbacks"]], "labels": [[94, "module-graphnet.training.labels"]], "loss_functions": [[95, "module-graphnet.training.loss_functions"]], "weight_fitting": [[97, "module-graphnet.training.weight_fitting"]], "argparse": [[99, "module-graphnet.utilities.argparse"]], "config": [[100, "module-graphnet.utilities.config"]], "base_config": [[101, "module-graphnet.utilities.config.base_config"]], "configurable": [[102, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[103, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[104, "module-graphnet.utilities.config.model_config"]], "parsing": [[105, "module-graphnet.utilities.config.parsing"]], "training_config": [[106, "module-graphnet.utilities.config.training_config"]], "decorators": [[107, "module-graphnet.utilities.decorators"]], "deprecation_tools": [[108, "module-graphnet.utilities.deprecation_tools"]], "filesys": [[109, "module-graphnet.utilities.filesys"]], "imports": [[110, "module-graphnet.utilities.imports"]], "logging": [[111, "module-graphnet.utilities.logging"]], "maths": [[112, "module-graphnet.utilities.maths"]], "src": [[113, "src"]], "Contribute": [[114, "contribute"]], "GitHub issues": [[114, "github-issues"]], "Pull requests": [[114, "pull-requests"]], "Conventions": [[114, "conventions"]], "Code quality": [[114, "code-quality"]], "Install": [[116, "install"]], "Installing with IceTray": [[116, "installing-with-icetray"]], "Installing stand-alone": [[116, "installing-stand-alone"]], "Running in Docker": [[116, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.dataclasses"], [6, "module-graphnet.data.dataconverter"], [7, "module-graphnet.data.dataloader"], [8, "module-graphnet.data.datamodule"], [9, "module-graphnet.data.dataset"], [10, "module-graphnet.data.dataset.dataset"], [11, "module-graphnet.data.dataset.parquet"], [12, "module-graphnet.data.dataset.parquet.parquet_dataset"], [13, "module-graphnet.data.dataset.sqlite"], [14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"], [15, "module-graphnet.data.extractors"], [16, "module-graphnet.data.extractors.extractor"], [17, "module-graphnet.data.extractors.icecube"], [18, "module-graphnet.data.extractors.icecube.i3extractor"], [19, "module-graphnet.data.extractors.icecube.i3featureextractor"], [20, "module-graphnet.data.extractors.icecube.i3genericextractor"], [21, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"], [22, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"], [23, "module-graphnet.data.extractors.icecube.i3particleextractor"], [24, "module-graphnet.data.extractors.icecube.i3pisaextractor"], [25, "module-graphnet.data.extractors.icecube.i3quesoextractor"], [26, "module-graphnet.data.extractors.icecube.i3retroextractor"], [27, "module-graphnet.data.extractors.icecube.i3splinempeextractor"], [28, "module-graphnet.data.extractors.icecube.i3truthextractor"], [29, "module-graphnet.data.extractors.icecube.i3tumextractor"], [30, "module-graphnet.data.extractors.icecube.utilities"], [31, "module-graphnet.data.extractors.icecube.utilities.collections"], [32, "module-graphnet.data.extractors.icecube.utilities.frames"], [33, "module-graphnet.data.extractors.icecube.utilities.i3_filters"], [34, "module-graphnet.data.extractors.icecube.utilities.types"], [35, "module-graphnet.data.parquet"], [36, "module-graphnet.data.parquet.deprecated_methods"], [37, "module-graphnet.data.pipeline"], [38, "module-graphnet.data.pre_configured"], [39, "module-graphnet.data.pre_configured.dataconverters"], [40, "module-graphnet.data.readers"], [41, "module-graphnet.data.readers.graphnet_file_reader"], [42, "module-graphnet.data.readers.i3reader"], [43, "module-graphnet.data.sqlite"], [44, "module-graphnet.data.sqlite.deprecated_methods"], [45, "module-graphnet.data.utilities"], [46, "module-graphnet.data.utilities.parquet_to_sqlite"], [47, "module-graphnet.data.utilities.random"], [48, "module-graphnet.data.utilities.sqlite_utilities"], [49, "module-graphnet.data.utilities.string_selection_resolver"], [50, "module-graphnet.data.writers"], [51, "module-graphnet.data.writers.graphnet_writer"], [52, "module-graphnet.data.writers.parquet_writer"], [53, "module-graphnet.data.writers.sqlite_writer"], [54, "module-graphnet.deployment"], [57, "module-graphnet.deployment.i3modules.graphnet_module"], [58, "module-graphnet.models"], [59, "module-graphnet.models.coarsening"], [60, "module-graphnet.models.components"], [61, "module-graphnet.models.components.layers"], [62, "module-graphnet.models.components.pool"], [63, "module-graphnet.models.detector"], [64, "module-graphnet.models.detector.detector"], [65, "module-graphnet.models.detector.icecube"], [66, "module-graphnet.models.detector.prometheus"], [67, "module-graphnet.models.gnn"], [68, "module-graphnet.models.gnn.convnet"], [69, "module-graphnet.models.gnn.dynedge"], [70, "module-graphnet.models.gnn.dynedge_jinst"], [71, "module-graphnet.models.gnn.dynedge_kaggle_tito"], [72, "module-graphnet.models.gnn.gnn"], [73, "module-graphnet.models.graphs"], [74, "module-graphnet.models.graphs.edges"], [75, "module-graphnet.models.graphs.edges.edges"], [76, "module-graphnet.models.graphs.edges.minkowski"], [77, "module-graphnet.models.graphs.graph_definition"], [78, "module-graphnet.models.graphs.graphs"], [79, "module-graphnet.models.graphs.nodes"], [80, "module-graphnet.models.graphs.nodes.nodes"], [81, "module-graphnet.models.graphs.utils"], [82, "module-graphnet.models.model"], [83, "module-graphnet.models.standard_model"], [84, "module-graphnet.models.task"], [85, "module-graphnet.models.task.classification"], [86, "module-graphnet.models.task.reconstruction"], [87, "module-graphnet.models.task.task"], [88, "module-graphnet.models.utils"], [89, "module-graphnet.pisa"], [90, "module-graphnet.pisa.fitting"], [91, "module-graphnet.pisa.plotting"], [92, "module-graphnet.training"], [93, "module-graphnet.training.callbacks"], [94, "module-graphnet.training.labels"], [95, "module-graphnet.training.loss_functions"], [96, "module-graphnet.training.utils"], [97, "module-graphnet.training.weight_fitting"], [98, "module-graphnet.utilities"], [99, "module-graphnet.utilities.argparse"], [100, "module-graphnet.utilities.config"], [101, "module-graphnet.utilities.config.base_config"], [102, "module-graphnet.utilities.config.configurable"], [103, "module-graphnet.utilities.config.dataset_config"], [104, "module-graphnet.utilities.config.model_config"], [105, "module-graphnet.utilities.config.parsing"], [106, "module-graphnet.utilities.config.training_config"], [107, "module-graphnet.utilities.decorators"], [108, "module-graphnet.utilities.deprecation_tools"], [109, "module-graphnet.utilities.filesys"], [110, "module-graphnet.utilities.imports"], [111, "module-graphnet.utilities.logging"], [112, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "i3fileset (class in graphnet.data.dataclasses)": [[5, "graphnet.data.dataclasses.I3FileSet"]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[5, "graphnet.data.dataclasses.I3FileSet.gcd_file"]], "graphnet.data.dataclasses": [[5, "module-graphnet.data.dataclasses"]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[5, "graphnet.data.dataclasses.I3FileSet.i3_file"]], "dataconverter (class in graphnet.data.dataconverter)": [[6, "graphnet.data.dataconverter.DataConverter"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[6, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[6, "module-graphnet.data.dataconverter"]], "init_global_index() (in module graphnet.data.dataconverter)": [[6, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[6, "graphnet.data.dataconverter.DataConverter.merge_files"]], "dataloader (class in graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.DataLoader"]], "collate_fn() (in module graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.collate_fn"]], "do_shuffle() (in module graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.do_shuffle"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[7, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "graphnet.data.dataloader": [[7, "module-graphnet.data.dataloader"]], "graphnetdatamodule (class in graphnet.data.datamodule)": [[8, "graphnet.data.datamodule.GraphNeTDataModule"]], "graphnet.data.datamodule": [[8, "module-graphnet.data.datamodule"]], "prepare_data() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.prepare_data"]], "setup() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.setup"]], "teardown() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.teardown"]], "test_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.test_dataloader"]], "train_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.train_dataloader"]], "val_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.val_dataloader"]], "graphnet.data.dataset": [[9, "module-graphnet.data.dataset"]], "columnmissingexception": [[10, "graphnet.data.dataset.dataset.ColumnMissingException"]], "dataset (class in graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.Dataset"]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.EnsembleDataset"]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[10, "graphnet.data.dataset.dataset.Dataset.add_label"]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[10, "graphnet.data.dataset.dataset.Dataset.concatenate"]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[10, "graphnet.data.dataset.dataset.Dataset.from_config"]], "graphnet.data.dataset.dataset": [[10, "module-graphnet.data.dataset.dataset"]], "load_module() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.load_module"]], "parse_graph_definition() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.parse_graph_definition"]], "path (graphnet.data.dataset.dataset.dataset property)": [[10, "graphnet.data.dataset.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[10, "graphnet.data.dataset.dataset.Dataset.query_table"]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[10, "graphnet.data.dataset.dataset.Dataset.truth_table"]], "graphnet.data.dataset.parquet": [[11, "module-graphnet.data.dataset.parquet"]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[12, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[12, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[12, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table"]], "graphnet.data.dataset.sqlite": [[13, "module-graphnet.data.dataset.sqlite"]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[14, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[14, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "graphnet.data.extractors": [[15, "module-graphnet.data.extractors"]], "extractor (class in graphnet.data.extractors.extractor)": [[16, "graphnet.data.extractors.extractor.Extractor"]], "graphnet.data.extractors.extractor": [[16, "module-graphnet.data.extractors.extractor"]], "name (graphnet.data.extractors.extractor.extractor property)": [[16, "graphnet.data.extractors.extractor.Extractor.name"]], "graphnet.data.extractors.icecube": [[17, "module-graphnet.data.extractors.icecube"]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[18, "graphnet.data.extractors.icecube.i3extractor.I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor": [[18, "module-graphnet.data.extractors.icecube.i3extractor"]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[18, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd"]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3featureextractor": [[19, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[20, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3genericextractor": [[20, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[21, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[21, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[22, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[22, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[23, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[23, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[24, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[24, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[25, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[25, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[26, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[26, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[27, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[27, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[28, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[28, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[29, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[29, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "graphnet.data.extractors.icecube.utilities": [[30, "module-graphnet.data.extractors.icecube.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[31, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.icecube.utilities.collections": [[31, "module-graphnet.data.extractors.icecube.utilities.collections"]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[31, "graphnet.data.extractors.icecube.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[31, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[32, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[32, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[32, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.frames": [[32, "module-graphnet.data.extractors.icecube.utilities.frames"]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[33, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter"]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[33, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask"]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[33, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[33, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.get_member_variables"]], "graphnet.data.extractors.icecube.utilities.types": [[34, "module-graphnet.data.extractors.icecube.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_type"]], "graphnet.data.parquet": [[35, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.deprecated_methods)": [[36, "graphnet.data.parquet.deprecated_methods.ParquetDataConverter"]], "graphnet.data.parquet.deprecated_methods": [[36, "module-graphnet.data.parquet.deprecated_methods"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[37, "graphnet.data.pipeline.InSQLitePipeline"]], "graphnet.data.pipeline": [[37, "module-graphnet.data.pipeline"]], "graphnet.data.pre_configured": [[38, "module-graphnet.data.pre_configured"]], "i3toparquetconverter (class in graphnet.data.pre_configured.dataconverters)": [[39, "graphnet.data.pre_configured.dataconverters.I3ToParquetConverter"]], "i3tosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[39, "graphnet.data.pre_configured.dataconverters.I3ToSQLiteConverter"]], "graphnet.data.pre_configured.dataconverters": [[39, "module-graphnet.data.pre_configured.dataconverters"]], "graphnet.data.readers": [[40, "module-graphnet.data.readers"]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader"]], "accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors"]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions"]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names"]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files"]], "graphnet.data.readers.graphnet_file_reader": [[41, "module-graphnet.data.readers.graphnet_file_reader"]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors"]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files"]], "i3reader (class in graphnet.data.readers.i3reader)": [[42, "graphnet.data.readers.i3reader.I3Reader"]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[42, "graphnet.data.readers.i3reader.I3Reader.find_files"]], "graphnet.data.readers.i3reader": [[42, "module-graphnet.data.readers.i3reader"]], "graphnet.data.sqlite": [[43, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.deprecated_methods)": [[44, "graphnet.data.sqlite.deprecated_methods.SQLiteDataConverter"]], "graphnet.data.sqlite.deprecated_methods": [[44, "module-graphnet.data.sqlite.deprecated_methods"]], "graphnet.data.utilities": [[45, "module-graphnet.data.utilities"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[46, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite": [[46, "module-graphnet.data.utilities.parquet_to_sqlite"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[46, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.data.utilities.random": [[47, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[47, "graphnet.data.utilities.random.pairwise_shuffle"]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.database_table_exists"]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.get_primary_keys"]], "graphnet.data.utilities.sqlite_utilities": [[48, "module-graphnet.data.utilities.sqlite_utilities"]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.query_database"]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.save_to_sql"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[49, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[49, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[49, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.data.writers": [[50, "module-graphnet.data.writers"]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[51, "graphnet.data.writers.graphnet_writer.GraphNeTWriter"]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[51, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes"]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[51, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension"]], "graphnet.data.writers.graphnet_writer": [[51, "module-graphnet.data.writers.graphnet_writer"]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[51, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files"]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[52, "graphnet.data.writers.parquet_writer.ParquetWriter"]], "graphnet.data.writers.parquet_writer": [[52, "module-graphnet.data.writers.parquet_writer"]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[52, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files"]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[53, "graphnet.data.writers.sqlite_writer.SQLiteWriter"]], "graphnet.data.writers.sqlite_writer": [[53, "module-graphnet.data.writers.sqlite_writer"]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[53, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files"]], "graphnet.deployment": [[54, "module-graphnet.deployment"]], "graphneti3module (class in graphnet.deployment.i3modules.graphnet_module)": [[57, "graphnet.deployment.i3modules.graphnet_module.GraphNeTI3Module"]], "i3inferencemodule (class in graphnet.deployment.i3modules.graphnet_module)": [[57, "graphnet.deployment.i3modules.graphnet_module.I3InferenceModule"]], "i3pulsecleanermodule (class in graphnet.deployment.i3modules.graphnet_module)": [[57, "graphnet.deployment.i3modules.graphnet_module.I3PulseCleanerModule"]], "graphnet.deployment.i3modules.graphnet_module": [[57, "module-graphnet.deployment.i3modules.graphnet_module"]], "graphnet.models": [[58, "module-graphnet.models"]], "attributecoarsening (class in graphnet.models.coarsening)": [[59, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[59, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[59, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[59, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[59, "graphnet.models.coarsening.DOMCoarsening"]], "forward() (graphnet.models.coarsening.coarsening method)": [[59, "graphnet.models.coarsening.Coarsening.forward"]], "graphnet.models.coarsening": [[59, "module-graphnet.models.coarsening"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[59, "graphnet.models.coarsening.Coarsening.reduce_options"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[59, "graphnet.models.coarsening.unbatch_edge_index"]], "graphnet.models.components": [[60, "module-graphnet.models.components"]], "dynedgeconv (class in graphnet.models.components.layers)": [[61, "graphnet.models.components.layers.DynEdgeConv"]], "dyntrans (class in graphnet.models.components.layers)": [[61, "graphnet.models.components.layers.DynTrans"]], "edgeconvtito (class in graphnet.models.components.layers)": [[61, "graphnet.models.components.layers.EdgeConvTito"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[61, "graphnet.models.components.layers.DynEdgeConv.forward"]], "forward() (graphnet.models.components.layers.dyntrans method)": [[61, "graphnet.models.components.layers.DynTrans.forward"]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[61, "graphnet.models.components.layers.EdgeConvTito.forward"]], "graphnet.models.components.layers": [[61, "module-graphnet.models.components.layers"]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[61, "graphnet.models.components.layers.EdgeConvTito.message"]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[61, "graphnet.models.components.layers.EdgeConvTito.reset_parameters"]], "graphnet.models.components.pool": [[62, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[62, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[62, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[62, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[62, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[62, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[62, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[62, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[62, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[62, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[62, "graphnet.models.components.pool.sum_pool_x"]], "graphnet.models.detector": [[63, "module-graphnet.models.detector"]], "detector (class in graphnet.models.detector.detector)": [[64, "graphnet.models.detector.detector.Detector"]], "feature_map() (graphnet.models.detector.detector.detector method)": [[64, "graphnet.models.detector.detector.Detector.feature_map"]], "forward() (graphnet.models.detector.detector.detector method)": [[64, "graphnet.models.detector.detector.Detector.forward"]], "geometry_table (graphnet.models.detector.detector.detector property)": [[64, "graphnet.models.detector.detector.Detector.geometry_table"]], "graphnet.models.detector.detector": [[64, "module-graphnet.models.detector.detector"]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[64, "graphnet.models.detector.detector.Detector.sensor_index_name"]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[64, "graphnet.models.detector.detector.Detector.sensor_position_names"]], "string_index_name (graphnet.models.detector.detector.detector property)": [[64, "graphnet.models.detector.detector.Detector.string_index_name"]], "icecube86 (class in graphnet.models.detector.icecube)": [[65, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[65, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[65, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[65, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[65, "graphnet.models.detector.icecube.IceCube86.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[65, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[65, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[65, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map"]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[65, "graphnet.models.detector.icecube.IceCube86.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[65, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path"]], "graphnet.models.detector.icecube": [[65, "module-graphnet.models.detector.icecube"]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[65, "graphnet.models.detector.icecube.IceCube86.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[65, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[65, "graphnet.models.detector.icecube.IceCube86.string_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[65, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column"]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[65, "graphnet.models.detector.icecube.IceCube86.xyz"]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[65, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz"]], "orca150 (class in graphnet.models.detector.prometheus)": [[66, "graphnet.models.detector.prometheus.ORCA150"]], "prometheus (class in graphnet.models.detector.prometheus)": [[66, "graphnet.models.detector.prometheus.Prometheus"]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[66, "graphnet.models.detector.prometheus.ORCA150.feature_map"]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[66, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path"]], "graphnet.models.detector.prometheus": [[66, "module-graphnet.models.detector.prometheus"]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[66, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column"]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[66, "graphnet.models.detector.prometheus.ORCA150.string_id_column"]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[66, "graphnet.models.detector.prometheus.ORCA150.xyz"]], "graphnet.models.gnn": [[67, "module-graphnet.models.gnn"]], "convnet (class in graphnet.models.gnn.convnet)": [[68, "graphnet.models.gnn.convnet.ConvNet"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[68, "graphnet.models.gnn.convnet.ConvNet.forward"]], "graphnet.models.gnn.convnet": [[68, "module-graphnet.models.gnn.convnet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[69, "graphnet.models.gnn.dynedge.DynEdge"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[69, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "graphnet.models.gnn.dynedge": [[69, "module-graphnet.models.gnn.dynedge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[70, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[70, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "graphnet.models.gnn.dynedge_jinst": [[70, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[71, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO"]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[71, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[71, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "gnn (class in graphnet.models.gnn.gnn)": [[72, "graphnet.models.gnn.gnn.GNN"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[72, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn.gnn": [[72, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[72, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[72, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "graphnet.models.graphs": [[73, "module-graphnet.models.graphs"]], "graphnet.models.graphs.edges": [[74, "module-graphnet.models.graphs.edges"]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[75, "graphnet.models.graphs.edges.edges.EdgeDefinition"]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[75, "graphnet.models.graphs.edges.edges.EuclideanEdges"]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[75, "graphnet.models.graphs.edges.edges.KNNEdges"]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[75, "graphnet.models.graphs.edges.edges.RadialEdges"]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[75, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward"]], "graphnet.models.graphs.edges.edges": [[75, "module-graphnet.models.graphs.edges.edges"]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[76, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges"]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[76, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat"]], "graphnet.models.graphs.edges.minkowski": [[76, "module-graphnet.models.graphs.edges.minkowski"]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[77, "graphnet.models.graphs.graph_definition.GraphDefinition"]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[77, "graphnet.models.graphs.graph_definition.GraphDefinition.forward"]], "graphnet.models.graphs.graph_definition": [[77, "module-graphnet.models.graphs.graph_definition"]], "knngraph (class in graphnet.models.graphs.graphs)": [[78, "graphnet.models.graphs.graphs.KNNGraph"]], "graphnet.models.graphs.graphs": [[78, "module-graphnet.models.graphs.graphs"]], "graphnet.models.graphs.nodes": [[79, "module-graphnet.models.graphs.nodes"]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[80, "graphnet.models.graphs.nodes.nodes.NodeDefinition"]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[80, "graphnet.models.graphs.nodes.nodes.NodesAsPulses"]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[80, "graphnet.models.graphs.nodes.nodes.PercentileClusters"]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[80, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward"]], "graphnet.models.graphs.nodes.nodes": [[80, "module-graphnet.models.graphs.nodes.nodes"]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[80, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs"]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[80, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs"]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[80, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names"]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[81, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles"]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[81, "graphnet.models.graphs.utils.gather_cluster_sequence"]], "graphnet.models.graphs.utils": [[81, "module-graphnet.models.graphs.utils"]], "identify_indices() (in module graphnet.models.graphs.utils)": [[81, "graphnet.models.graphs.utils.identify_indices"]], "lex_sort() (in module graphnet.models.graphs.utils)": [[81, "graphnet.models.graphs.utils.lex_sort"]], "model (class in graphnet.models.model)": [[82, "graphnet.models.model.Model"]], "from_config() (graphnet.models.model.model class method)": [[82, "graphnet.models.model.Model.from_config"]], "graphnet.models.model": [[82, "module-graphnet.models.model"]], "load() (graphnet.models.model.model class method)": [[82, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[82, "graphnet.models.model.Model.load_state_dict"]], "save() (graphnet.models.model.model method)": [[82, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[82, "graphnet.models.model.Model.save_state_dict"]], "standardmodel (class in graphnet.models.standard_model)": [[83, "graphnet.models.standard_model.StandardModel"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[83, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[83, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "fit() (graphnet.models.standard_model.standardmodel method)": [[83, "graphnet.models.standard_model.StandardModel.fit"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[83, "graphnet.models.standard_model.StandardModel.forward"]], "graphnet.models.standard_model": [[83, "module-graphnet.models.standard_model"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[83, "graphnet.models.standard_model.StandardModel.inference"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[83, "graphnet.models.standard_model.StandardModel.predict"]], "predict_as_dataframe() (graphnet.models.standard_model.standardmodel method)": [[83, "graphnet.models.standard_model.StandardModel.predict_as_dataframe"]], "prediction_labels (graphnet.models.standard_model.standardmodel property)": [[83, "graphnet.models.standard_model.StandardModel.prediction_labels"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[83, "graphnet.models.standard_model.StandardModel.shared_step"]], "target_labels (graphnet.models.standard_model.standardmodel property)": [[83, "graphnet.models.standard_model.StandardModel.target_labels"]], "train() (graphnet.models.standard_model.standardmodel method)": [[83, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[83, "graphnet.models.standard_model.StandardModel.training_step"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[83, "graphnet.models.standard_model.StandardModel.validation_step"]], "graphnet.models.task": [[84, "module-graphnet.models.task"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[85, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[85, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[85, "graphnet.models.task.classification.MulticlassClassificationTask"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[85, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[85, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[85, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[85, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels"]], "graphnet.models.task.classification": [[85, "module-graphnet.models.task.classification"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[85, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[85, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[86, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[86, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[86, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[86, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[86, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[86, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[86, "graphnet.models.task.reconstruction.EnergyTCReconstruction"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[86, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[86, "graphnet.models.task.reconstruction.PositionReconstruction"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[86, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[86, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[86, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[86, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[86, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[86, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[86, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[86, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[86, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[86, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[86, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[86, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[86, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[86, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[86, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[86, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels"]], "graphnet.models.task.reconstruction": [[86, "module-graphnet.models.task.reconstruction"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[86, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[86, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[86, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[86, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[86, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[86, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[86, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "identitytask (class in graphnet.models.task.task)": [[87, "graphnet.models.task.task.IdentityTask"]], "learnedtask (class in graphnet.models.task.task)": [[87, "graphnet.models.task.task.LearnedTask"]], "standardflowtask (class in graphnet.models.task.task)": [[87, "graphnet.models.task.task.StandardFlowTask"]], "standardlearnedtask (class in graphnet.models.task.task)": [[87, "graphnet.models.task.task.StandardLearnedTask"]], "task (class in graphnet.models.task.task)": [[87, "graphnet.models.task.task.Task"]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[87, "graphnet.models.task.task.LearnedTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardflowtask method)": [[87, "graphnet.models.task.task.StandardFlowTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[87, "graphnet.models.task.task.StandardLearnedTask.compute_loss"]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[87, "graphnet.models.task.task.IdentityTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.task.task property)": [[87, "graphnet.models.task.task.Task.default_prediction_labels"]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[87, "graphnet.models.task.task.IdentityTask.default_target_labels"]], "default_target_labels (graphnet.models.task.task.task property)": [[87, "graphnet.models.task.task.Task.default_target_labels"]], "forward() (graphnet.models.task.task.learnedtask method)": [[87, "graphnet.models.task.task.LearnedTask.forward"]], "forward() (graphnet.models.task.task.standardflowtask method)": [[87, "graphnet.models.task.task.StandardFlowTask.forward"]], "graphnet.models.task.task": [[87, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[87, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[87, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[87, "graphnet.models.task.task.LearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[87, "graphnet.models.task.task.StandardLearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[87, "graphnet.models.task.task.Task.nb_inputs"]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[87, "graphnet.models.task.task.StandardFlowTask.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[87, "graphnet.models.task.task.Task.train_eval"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[88, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[88, "graphnet.models.utils.calculate_xyzt_homophily"]], "graphnet.models.utils": [[88, "module-graphnet.models.utils"]], "knn_graph_batch() (in module graphnet.models.utils)": [[88, "graphnet.models.utils.knn_graph_batch"]], "graphnet.pisa": [[89, "module-graphnet.pisa"]], "contourfitter (class in graphnet.pisa.fitting)": [[90, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[90, "graphnet.pisa.fitting.WeightFitter"]], "config_updater() (in module graphnet.pisa.fitting)": [[90, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[90, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[90, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[90, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa.fitting": [[90, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[91, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[91, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[91, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[91, "graphnet.pisa.plotting.read_entry"]], "graphnet.training": [[92, "module-graphnet.training"]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[93, "graphnet.training.callbacks.GraphnetEarlyStopping"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[93, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[93, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[93, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[93, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[93, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[93, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[93, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[93, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[93, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[93, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end"]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[93, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[93, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[93, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[93, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end"]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[93, "graphnet.training.callbacks.GraphnetEarlyStopping.setup"]], "direction (class in graphnet.training.labels)": [[94, "graphnet.training.labels.Direction"]], "label (class in graphnet.training.labels)": [[94, "graphnet.training.labels.Label"]], "graphnet.training.labels": [[94, "module-graphnet.training.labels"]], "key (graphnet.training.labels.label property)": [[94, "graphnet.training.labels.Label.key"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[95, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[95, "graphnet.training.loss_functions.CrossEntropyLoss"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[95, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.training.loss_functions)": [[95, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[95, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[95, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[95, "graphnet.training.loss_functions.MSELoss"]], "rmseloss (class in graphnet.training.loss_functions)": [[95, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[95, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[95, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[95, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[95, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[95, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[95, "graphnet.training.loss_functions.LossFunction.forward"]], "graphnet.training.loss_functions": [[95, "module-graphnet.training.loss_functions"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[95, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[95, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[95, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "collate_fn() (in module graphnet.training.utils)": [[96, "graphnet.training.utils.collate_fn"]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[96, "graphnet.training.utils.collator_sequence_buckleting"]], "get_predictions() (in module graphnet.training.utils)": [[96, "graphnet.training.utils.get_predictions"]], "graphnet.training.utils": [[96, "module-graphnet.training.utils"]], "make_dataloader() (in module graphnet.training.utils)": [[96, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[96, "graphnet.training.utils.make_train_validation_dataloader"]], "save_results() (in module graphnet.training.utils)": [[96, "graphnet.training.utils.save_results"]], "save_selection() (in module graphnet.training.utils)": [[96, "graphnet.training.utils.save_selection"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[97, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[97, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[97, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[97, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[97, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[98, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[99, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[99, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[99, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[99, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[99, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[99, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[99, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[100, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[101, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[101, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[101, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[101, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[101, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[101, "graphnet.utilities.config.base_config.BaseConfig.load"]], "model_computed_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[101, "graphnet.utilities.config.base_config.BaseConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[101, "graphnet.utilities.config.base_config.BaseConfig.model_config"]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[101, "graphnet.utilities.config.base_config.BaseConfig.model_fields"]], "configurable (class in graphnet.utilities.config.configurable)": [[102, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[102, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[102, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[102, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[102, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta"]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta"]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition"]], "graphnet.utilities.config.dataset_config": [[103, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "model_computed_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config"]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[103, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[103, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[104, "graphnet.utilities.config.model_config.ModelConfig"]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[104, "graphnet.utilities.config.model_config.ModelConfigSaverABC"]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[104, "graphnet.utilities.config.model_config.ModelConfigSaverMeta"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[104, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[104, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[104, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[104, "module-graphnet.utilities.config.model_config"]], "model_computed_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[104, "graphnet.utilities.config.model_config.ModelConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[104, "graphnet.utilities.config.model_config.ModelConfig.model_config"]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[104, "graphnet.utilities.config.model_config.ModelConfig.model_fields"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[104, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[105, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[105, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[105, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[105, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[105, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[105, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[105, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[106, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[106, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[106, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[106, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[106, "module-graphnet.utilities.config.training_config"]], "model_computed_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[106, "graphnet.utilities.config.training_config.TrainingConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[106, "graphnet.utilities.config.training_config.TrainingConfig.model_config"]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[106, "graphnet.utilities.config.training_config.TrainingConfig.model_fields"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[106, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[107, "module-graphnet.utilities.decorators"]], "graphnet.utilities.deprecation_tools": [[108, "module-graphnet.utilities.deprecation_tools"]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[108, "graphnet.utilities.deprecation_tools.rename_state_dict_entries"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[109, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[109, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[109, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[109, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[109, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[110, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[110, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[110, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[110, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[110, "graphnet.utilities.imports.requires_icecube"]], "logger (class in graphnet.utilities.logging)": [[111, "graphnet.utilities.logging.Logger"]], "repeatfilter (class in graphnet.utilities.logging)": [[111, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.logger method)": [[111, "graphnet.utilities.logging.Logger.critical"]], "debug() (graphnet.utilities.logging.logger method)": [[111, "graphnet.utilities.logging.Logger.debug"]], "error() (graphnet.utilities.logging.logger method)": [[111, "graphnet.utilities.logging.Logger.error"]], "file_handlers (graphnet.utilities.logging.logger property)": [[111, "graphnet.utilities.logging.Logger.file_handlers"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[111, "graphnet.utilities.logging.RepeatFilter.filter"]], "graphnet.utilities.logging": [[111, "module-graphnet.utilities.logging"]], "handlers (graphnet.utilities.logging.logger property)": [[111, "graphnet.utilities.logging.Logger.handlers"]], "info() (graphnet.utilities.logging.logger method)": [[111, "graphnet.utilities.logging.Logger.info"]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[111, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed"]], "setlevel() (graphnet.utilities.logging.logger method)": [[111, "graphnet.utilities.logging.Logger.setLevel"]], "stream_handlers (graphnet.utilities.logging.logger property)": [[111, "graphnet.utilities.logging.Logger.stream_handlers"]], "warning() (graphnet.utilities.logging.logger method)": [[111, "graphnet.utilities.logging.Logger.warning"]], "warning_once() (graphnet.utilities.logging.logger method)": [[111, "graphnet.utilities.logging.Logger.warning_once"]], "eps_like() (in module graphnet.utilities.maths)": [[112, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[112, "module-graphnet.utilities.maths"]]}})