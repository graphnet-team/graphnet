Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.combine_extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.extractors.liquido", "api/graphnet.data.extractors.liquido.h5_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.readers.liquido_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.liquido", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.icemix", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.combine_extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.extractors.liquido.rst", "api/graphnet.data.extractors.liquido.h5_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.readers.liquido_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.liquido.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "sqlite", "sqlite_dataset", "extractors", "combine_extractors", "extractor", "icecube", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "internal", "parquet_extractor", "liquido", "h5_extractor", "parquet", "deprecated_methods", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "internal_parquet_reader", "liquido_reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "deployment", "deployer", "deployment_module", "i3modules", "deprecated_methods", "icecube", "cleaning_module", "i3deployer", "inference_module", "exceptions", "exceptions", "models", "coarsening", "components", "embedding", "layers", "pool", "detector", "detector", "icecube", "liquido", "prometheus", "gnn", "RNN_tito", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "icemix", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "rnn", "node_rnn", "standard_averaged_model", "standard_model", "task", "classification", "reconstruction", "task", "utils", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133], "i": [0, 1, 8, 10, 12, 14, 16, 17, 19, 21, 32, 33, 34, 35, 37, 39, 41, 43, 46, 50, 53, 54, 55, 58, 59, 61, 66, 68, 72, 74, 75, 76, 84, 85, 89, 92, 94, 97, 98, 101, 106, 107, 108, 110, 111, 112, 113, 114, 116, 118, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133], "an": [0, 17, 35, 41, 43, 46, 50, 55, 94, 101, 102, 112, 126, 128, 131, 132, 133], "open": [0, 45, 131, 132], "sourc": [0, 4, 5, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 41, 43, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 66, 68, 70, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132], "python": [0, 1, 6, 17, 18, 21, 32, 35, 131, 132, 133], "framework": [0, 132], "aim": [0, 1, 131, 132], "provid": [0, 1, 6, 10, 12, 14, 66, 71, 89, 94, 99, 112, 131, 132, 133], "high": [0, 132], "qualiti": [0, 132], "user": [0, 71, 110, 132, 133], "friendli": [0, 57, 59, 132], "end": [0, 1, 110, 132], "function": [0, 6, 7, 10, 19, 35, 37, 53, 54, 66, 68, 72, 75, 76, 79, 80, 81, 85, 94, 98, 99, 107, 108, 112, 113, 115, 120, 121, 122, 125, 126, 127, 129, 132], "perform": [0, 8, 72, 74, 75, 76, 82, 83, 85, 87, 97, 101, 102, 103, 105, 107, 113, 132], "reconstruct": [0, 1, 20, 22, 23, 27, 28, 30, 60, 71, 87, 89, 101, 104, 107, 132], "task": [0, 1, 8, 71, 103, 105, 106, 112, 131, 132], "neutrino": [0, 1, 19, 46, 75, 87, 89, 98, 132], "telescop": [0, 1, 132], "us": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 19, 24, 29, 31, 32, 37, 39, 41, 43, 45, 46, 49, 50, 51, 54, 55, 57, 58, 59, 60, 62, 66, 68, 71, 74, 75, 76, 78, 83, 85, 86, 87, 89, 92, 94, 95, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 127, 128, 131, 132, 133], "graph": [0, 1, 7, 10, 12, 14, 71, 75, 76, 78, 91, 92, 93, 94, 96, 97, 98, 101, 107, 108, 111, 113, 131, 132], "neural": [0, 1, 100, 132], "network": [0, 1, 75, 84, 100, 132], "gnn": [0, 1, 71, 83, 84, 85, 86, 87, 89, 94, 101, 103, 132, 133], "make": [0, 6, 97, 114, 120, 121, 131, 132, 133], "fast": [0, 132, 133], "easi": [0, 132], "train": [0, 1, 6, 8, 9, 55, 60, 66, 75, 89, 94, 102, 103, 108, 110, 111, 112, 113, 114, 116, 120, 121, 123, 130, 132, 133], "complex": [0, 71, 132], "model": [0, 1, 60, 62, 66, 68, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 116, 118, 120, 121, 123, 130, 132, 133], "can": [0, 1, 8, 10, 12, 14, 17, 21, 24, 66, 74, 76, 94, 114, 116, 118, 120, 121, 131, 132, 133], "event": [0, 1, 6, 8, 10, 12, 14, 16, 26, 41, 43, 50, 54, 55, 58, 59, 66, 74, 76, 83, 94, 97, 98, 107, 108, 112, 113, 114, 120, 132], "state": [0, 62, 83, 101, 125, 132], "art": [0, 132], "arbitrari": [0, 132], "detector": [0, 1, 29, 71, 79, 80, 81, 94, 95, 97, 103, 132], "configur": [0, 1, 8, 10, 42, 43, 62, 71, 99, 103, 115, 117, 118, 120, 121, 123, 128, 132], "infer": [0, 1, 59, 60, 62, 66, 68, 103, 107, 132, 133], "time": [0, 4, 54, 72, 74, 76, 83, 93, 97, 98, 101, 106, 108, 128, 132, 133], "ar": [0, 1, 4, 10, 12, 14, 19, 21, 34, 35, 45, 55, 57, 58, 59, 61, 66, 75, 76, 83, 85, 87, 90, 91, 92, 94, 95, 96, 97, 98, 101, 105, 112, 114, 120, 121, 131, 132, 133], "order": [0, 32, 45, 61, 72, 97, 108, 132], "magnitud": [0, 132], "faster": [0, 132], "than": [0, 7, 107, 113, 128, 132], "tradit": [0, 132], "techniqu": [0, 132], "common": [0, 1, 112, 120, 121, 124, 127, 132], "ml": [0, 1, 132], "develop": [0, 1, 131, 132, 133], "physicist": [0, 1, 132], "wish": [0, 61, 131, 132], "tool": [0, 1, 132], "research": [0, 132], "By": [0, 41, 43, 46, 50, 107, 132], "unit": [0, 6, 93, 127, 131, 132], "both": [0, 21, 107, 132], "group": [0, 76, 132], "increas": [0, 110, 132], "longev": [0, 132], "usabl": [0, 132], "individu": [0, 10, 12, 14, 76, 85, 108, 132], "code": [0, 29, 41, 50, 54, 94, 120, 121, 132], "contribut": [0, 132, 133], "from": [0, 1, 6, 7, 8, 10, 12, 14, 17, 18, 19, 21, 23, 24, 26, 32, 33, 34, 35, 37, 39, 45, 46, 48, 52, 57, 59, 74, 76, 87, 89, 92, 94, 97, 98, 99, 102, 105, 106, 107, 108, 110, 111, 112, 118, 119, 120, 121, 123, 128, 131, 132, 133], "build": [0, 1, 71, 78, 92, 93, 97, 98, 99, 118, 120, 121, 132], "gener": [0, 8, 10, 12, 14, 21, 34, 45, 57, 61, 66, 68, 74, 90, 91, 94, 95, 96, 105, 112, 132], "reusabl": [0, 132], "softwar": [0, 46, 112, 132], "packag": [0, 1, 53, 122, 126, 127, 131, 132, 133], "base": [0, 4, 5, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 37, 39, 41, 43, 45, 46, 47, 48, 50, 55, 57, 58, 59, 61, 62, 66, 68, 70, 72, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 99, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 123, 127, 128, 132], "engin": [0, 132], "best": [0, 110, 131, 132], "practic": [0, 131, 132], "lower": [0, 132], "technic": [0, 132], "threshold": [0, 66, 132], "most": [0, 1, 55, 93, 107, 132, 133], "scientif": [0, 1, 132], "problem": [0, 92, 131, 132], "The": [0, 6, 8, 10, 12, 14, 16, 32, 35, 41, 43, 50, 54, 57, 58, 59, 61, 62, 66, 68, 72, 74, 75, 76, 83, 85, 87, 89, 92, 94, 98, 101, 105, 106, 107, 108, 110, 111, 112, 125, 132], "improv": [0, 1, 116, 132], "classif": [0, 1, 71, 104, 107, 112, 132], "yield": [0, 85, 112, 132], "veri": [0, 55, 132], "accur": [0, 132], "e": [0, 1, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 35, 37, 54, 55, 59, 62, 66, 68, 72, 75, 76, 78, 79, 80, 81, 84, 88, 92, 94, 97, 98, 99, 102, 103, 105, 106, 107, 108, 110, 111, 112, 114, 118, 128, 131, 132, 133], "g": [0, 1, 10, 12, 14, 16, 17, 19, 29, 32, 35, 54, 55, 59, 66, 68, 76, 94, 97, 98, 107, 108, 114, 128, 131, 132, 133], "low": [0, 132], "energi": [0, 4, 106, 107, 114, 132], "observ": [0, 132], "icecub": [0, 1, 3, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 41, 43, 46, 50, 60, 66, 68, 71, 75, 77, 87, 89, 97, 98, 127, 132, 133], "here": [0, 94, 131, 132, 133], "implement": [0, 1, 17, 19, 45, 57, 62, 75, 83, 84, 85, 86, 87, 89, 92, 101, 112, 131, 132], "wa": [0, 6, 132], "appli": [0, 6, 10, 12, 14, 41, 43, 44, 45, 50, 61, 75, 76, 83, 84, 85, 86, 87, 88, 89, 98, 101, 103, 105, 107, 122, 132], "oscil": [0, 132], "lead": [0, 132], "signific": [0, 132], "angular": [0, 132], "rang": [0, 107, 132], "relev": [0, 1, 35, 53, 126, 131, 132], "studi": [0, 132], "furthermor": [0, 101, 132], "shown": [0, 132], "could": [0, 131, 132], "muon": [0, 23, 132], "v": [0, 75, 132], "therebi": [0, 1, 120, 121, 132], "effici": [0, 132], "puriti": [0, 132], "sampl": [0, 55, 75, 94, 95, 97, 107, 132], "analysi": [0, 61, 132, 133], "similarli": [0, 35, 132], "ha": [0, 35, 54, 66, 84, 98, 112, 126, 132, 133], "great": [0, 132], "point": [0, 28, 111, 112, 113, 132], "analys": [0, 60, 132], "final": [0, 6, 74, 76, 110, 120, 132], "millisecond": [0, 132], "allow": [0, 37, 60, 71, 76, 110, 118, 123, 132, 133], "whole": [0, 132], "new": [0, 1, 16, 75, 97, 118, 123, 131, 132], "type": [0, 6, 7, 8, 10, 12, 14, 18, 19, 31, 32, 33, 39, 45, 46, 47, 48, 53, 54, 55, 57, 58, 59, 61, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 112, 113, 114, 116, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 131, 132], "cosmic": [0, 132], "alert": [0, 132], "which": [0, 10, 12, 14, 17, 19, 20, 29, 33, 37, 39, 55, 57, 59, 61, 72, 76, 85, 94, 95, 98, 99, 105, 108, 112, 113, 116, 132, 133], "were": [0, 132], "previous": [0, 132], "unfeas": [0, 132], "possibl": [0, 32, 59, 131, 132], "identifi": [0, 6, 10, 12, 14, 29, 97, 98, 108, 120, 121, 132], "10": [0, 8, 79, 80, 81, 97, 98, 116, 132], "tev": [0, 132], "monitor": [0, 132], "rate": [0, 110, 132], "direct": [0, 87, 89, 98, 105, 106, 107, 109, 111, 132], "real": [0, 132], "thi": [0, 3, 6, 8, 10, 12, 14, 16, 17, 19, 21, 35, 37, 39, 41, 43, 45, 46, 50, 53, 54, 58, 59, 66, 71, 74, 76, 83, 85, 89, 93, 94, 95, 97, 98, 101, 103, 105, 106, 107, 108, 110, 112, 113, 114, 118, 120, 121, 123, 128, 131, 132, 133], "enabl": [0, 3, 132], "first": [0, 74, 83, 93, 101, 110, 113, 131, 132], "ever": [0, 132], "despit": [0, 132], "larg": [0, 83, 112, 132], "background": [0, 132], "origin": [0, 89, 132], "compris": [0, 132], "number": [0, 6, 10, 12, 14, 17, 41, 43, 50, 55, 58, 59, 61, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 92, 93, 95, 97, 98, 101, 105, 106, 107, 108, 110, 113, 114, 116, 132], "modul": [0, 3, 5, 6, 10, 15, 16, 35, 36, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 56, 57, 59, 60, 61, 66, 70, 71, 74, 75, 77, 82, 90, 91, 93, 94, 95, 96, 99, 100, 104, 109, 115, 117, 120, 121, 122, 123, 127, 132], "necessari": [0, 8, 32, 131, 132], "workflow": [0, 132], "ingest": [0, 1, 3, 77, 132], "raw": [0, 97, 98, 132], "data": [0, 1, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 94, 95, 97, 101, 102, 103, 107, 108, 111, 113, 116, 118, 120, 123, 127, 130, 132, 133], "domain": [0, 1, 3, 60, 132], "specif": [0, 1, 3, 5, 6, 10, 12, 14, 15, 17, 20, 35, 44, 45, 46, 54, 59, 60, 62, 70, 72, 76, 77, 78, 79, 80, 81, 82, 83, 88, 92, 94, 97, 100, 103, 104, 105, 106, 107, 112, 131, 132, 133], "format": [0, 1, 3, 6, 10, 32, 36, 37, 45, 47, 57, 58, 59, 74, 99, 101, 120, 131, 132, 133], "deploi": [0, 1, 60, 62, 132], "chain": [0, 1, 60, 71, 103, 132, 133], "illustr": [0, 131, 132], "figur": [0, 132], "level": [0, 10, 12, 14, 16, 29, 34, 41, 43, 45, 46, 47, 48, 50, 54, 57, 58, 72, 76, 89, 128, 132, 133], "overview": [0, 132], "typic": [0, 32, 101, 132], "convert": [0, 1, 3, 6, 12, 19, 32, 34, 41, 42, 43, 50, 52, 58, 108, 132, 133], "industri": [0, 3, 132], "standard": [0, 3, 4, 34, 55, 62, 79, 80, 81, 83, 94, 95, 97, 102, 103, 107, 116, 131, 132], "intermedi": [0, 1, 3, 6, 10, 84, 132, 133], "file": [0, 1, 3, 6, 10, 12, 14, 17, 19, 32, 34, 37, 38, 39, 41, 43, 45, 46, 47, 48, 50, 52, 53, 57, 58, 59, 61, 62, 66, 68, 94, 99, 110, 112, 113, 116, 117, 118, 119, 120, 121, 126, 128, 132, 133], "read": [0, 3, 6, 10, 12, 14, 32, 44, 46, 47, 48, 78, 85, 103, 104, 132, 133], "simpl": [0, 71, 132], "physic": [0, 1, 19, 33, 35, 60, 66, 68, 71, 104, 107, 132], "orient": [0, 71, 132], "compon": [0, 1, 71, 74, 75, 76, 99, 103, 132], "manag": [0, 109, 132], "experi": [0, 1, 5, 6, 44, 45, 62, 109, 132], "log": [0, 1, 106, 109, 110, 112, 115, 132, 133], "deploy": [0, 1, 62, 66, 68, 94, 130, 132], "modular": [0, 71, 132], "subclass": [0, 71, 132], "torch": [0, 10, 12, 14, 71, 75, 94, 95, 99, 127, 132, 133], "nn": [0, 71, 75, 92, 95, 132], "mean": [0, 10, 12, 14, 71, 85, 87, 98, 112, 121, 132], "onli": [0, 1, 10, 12, 14, 59, 71, 76, 83, 107, 114, 118, 121, 123, 127, 132, 133], "need": [0, 8, 32, 59, 71, 74, 99, 101, 112, 125, 132, 133], "import": [0, 1, 54, 71, 115, 132], "few": [0, 71, 131, 132], "exist": [0, 10, 12, 14, 54, 71, 111, 120, 132], "purpos": [0, 71, 112, 132], "built": [0, 71, 94, 132], "them": [0, 1, 32, 62, 71, 85, 107, 132, 133], "togeth": [0, 71, 92, 103, 132], "form": [0, 17, 71, 105, 118, 123, 132], "complet": [0, 71, 103, 132], "extend": [0, 1, 132], "suit": [0, 107, 132], "through": [0, 105, 106, 107, 112, 132], "layer": [0, 71, 73, 76, 83, 84, 85, 86, 87, 89, 101, 105, 106, 107, 132], "connect": [0, 8, 92, 93, 94, 97, 112, 132], "etc": [0, 112, 128, 132], "optimis": [0, 1, 132], "differ": [0, 10, 12, 14, 17, 19, 37, 38, 39, 45, 46, 47, 95, 103, 113, 131, 132, 133], "track": [0, 17, 19, 23, 37, 39, 106, 131, 132], "These": [0, 45, 57, 59, 94, 131, 132], "prepar": [0, 8, 112, 132], "satisfi": [0, 132], "o": [0, 80, 107, 132], "load": [0, 7, 10, 53, 62, 99, 102, 118, 120, 132], "requir": [0, 19, 25, 37, 54, 97, 105, 112, 120, 121, 123, 132, 133], "when": [0, 10, 12, 14, 32, 34, 54, 66, 75, 83, 85, 87, 101, 111, 128, 131, 132, 133], "batch": [0, 7, 12, 58, 72, 75, 76, 101, 103, 108, 113, 116, 132], "do": [0, 62, 66, 112, 120, 121, 131, 132, 133], "predict": [0, 8, 24, 28, 30, 66, 68, 84, 89, 103, 105, 107, 112, 113, 132], "either": [0, 8, 10, 14, 19, 112, 132, 133], "contain": [0, 5, 6, 10, 12, 14, 15, 16, 19, 32, 33, 36, 37, 38, 41, 43, 45, 46, 47, 50, 54, 57, 58, 59, 61, 62, 66, 68, 70, 85, 90, 91, 93, 94, 95, 96, 98, 99, 107, 108, 112, 114, 116, 132, 133], "imag": [0, 1, 131, 132, 133], "portabl": [0, 132], "depend": [0, 132, 133], "free": [0, 112, 132], "split": [0, 8, 34, 59, 72, 132], "up": [0, 66, 131, 132, 133], "interfac": [0, 120, 121, 132, 133], "block": [0, 1, 73, 75, 132], "pre": [0, 42, 43, 78, 94, 111, 131, 132], "directli": [0, 85, 132], "while": [0, 21, 110, 132], "continu": [0, 112, 132], "expand": [0, 132], "": [0, 6, 7, 8, 10, 12, 14, 32, 41, 43, 45, 48, 50, 57, 59, 61, 74, 78, 84, 85, 94, 103, 107, 108, 110, 114, 116, 120, 121, 128, 129, 132, 133], "capabl": [0, 132], "project": [0, 74, 75, 131, 132], "receiv": [0, 132], "fund": [0, 132], "european": [0, 132], "union": [0, 6, 7, 8, 10, 12, 14, 21, 32, 35, 41, 43, 45, 46, 47, 48, 50, 61, 62, 66, 68, 72, 75, 76, 83, 85, 94, 95, 103, 107, 120, 123, 126, 132], "horizon": [0, 132], "2020": [0, 132], "innov": [0, 132], "programm": [0, 132], "under": [0, 132], "mari": [0, 132], "sk\u0142odowska": [0, 132], "curi": [0, 132], "grant": [0, 112, 132], "agreement": [0, 131, 132], "No": [0, 132], "890778": [0, 132], "work": [0, 4, 33, 83, 131, 132, 133], "rasmu": [0, 86, 132], "\u00f8rs\u00f8e": [0, 132], "partli": [0, 132], "punch4nfdi": [0, 132], "consortium": [0, 132], "support": [0, 6, 35, 131, 132, 133], "dfg": [0, 132], "nfdi": [0, 132], "39": [0, 132, 133], "1": [0, 6, 8, 10, 12, 17, 32, 41, 43, 50, 55, 58, 61, 72, 75, 76, 83, 85, 87, 89, 92, 93, 95, 98, 101, 105, 106, 107, 108, 110, 112, 113, 114, 120, 132, 133], "germani": [0, 132], "conveni": [1, 131, 133], "collabor": 1, "solv": [1, 131], "It": [1, 32, 54, 66, 74, 98, 105, 107, 131], "leverag": 1, "advanc": [1, 76], "machin": [1, 133], "learn": [1, 57, 59, 66, 68, 105, 107, 110, 133], "without": [1, 92, 97, 112, 133], "have": [1, 21, 41, 43, 46, 50, 54, 55, 59, 76, 89, 94, 98, 107, 131, 133], "expert": 1, "themselv": [1, 120, 121], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 10, 12, 14, 16, 17, 19, 21, 34, 54, 59, 66, 74, 75, 76, 78, 85, 88, 93, 94, 99, 112, 118, 119, 120, 121, 122, 123, 128, 131, 133], "streamlin": 1, "process": [1, 6, 41, 43, 50, 66, 74, 78, 83, 85, 87, 131, 133], "transform": [1, 75, 76, 87, 89, 101, 107, 114], "extens": [1, 45, 57, 126], "basic": 1, "across": [1, 2, 10, 12, 14, 35, 51, 61, 76, 103, 112, 115, 116, 117, 128], "variou": [1, 56], "easili": 1, "architectur": [1, 84, 85, 86, 87, 89, 101], "main": [1, 82, 94, 103, 131, 133], "featur": [1, 3, 4, 10, 12, 14, 20, 59, 66, 68, 74, 75, 76, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 101, 105, 108, 113, 120, 131], "i3": [1, 19, 33, 34, 35, 41, 43, 46, 50, 53, 61, 66, 68, 126, 133], "more": [1, 10, 12, 53, 54, 83, 99, 120, 121, 128], "index": [1, 6, 10, 12, 14, 35, 54, 58, 76, 78, 83, 93, 98, 101, 110], "sqlite": [1, 3, 8, 9, 14, 43, 50, 52, 54, 59, 133], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 10, 57, 78, 88, 94, 107, 119], "awai": 1, "detail": [1, 83, 99, 110, 133], "expos": 1, "physicst": 1, "what": [1, 74, 94, 131], "i3modul": [1, 60, 62], "includ": [1, 12, 75, 97, 103, 112, 118, 131], "docker": 1, "run": [1, 46, 61], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 9, 15, 18, 60, 71, 90, 115], "dataset": [1, 3, 7, 8, 11, 12, 13, 14, 23, 55, 58, 70, 83, 94, 101, 116, 120], "extractor": [1, 3, 6, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 50, 66, 68], "parquet": [1, 3, 9, 12, 37, 41, 43, 47, 50, 52, 58, 79, 80, 81, 133], "pre_configur": [1, 3, 43], "reader": [1, 3, 43, 45, 46, 47, 48], "util": [1, 3, 15, 18, 32, 33, 34, 35, 52, 53, 54, 55, 71, 90, 109, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130], "writer": [1, 3, 43, 57, 58, 59], "constant": [1, 3, 130], "dataclass": [1, 3, 33], "dataconvert": [1, 3, 42, 57, 58, 59], "dataload": [1, 3, 8, 94, 103, 113, 123], "datamodul": [1, 3], "deployment_modul": [1, 60], "except": [1, 130], "rnn": [1, 71, 83, 101], "coarsen": [1, 71, 76], "standard_averaged_model": [1, 71], "standard_model": [1, 71], "callback": [1, 103, 109], "label": [1, 10, 14, 23, 26, 84, 94, 103, 107, 109, 113, 120], "loss_funct": [1, 107, 109], "weight_fit": [1, 109], "config": [1, 7, 55, 110, 112, 115, 116, 118, 119, 120, 121, 122, 123], "argpars": [1, 115], "decor": [1, 115, 127], "deprecation_tool": [1, 115], "filesi": [1, 115], "math": [1, 75, 115], "submodul": [1, 3, 9, 11, 13, 15, 18, 31, 36, 38, 40, 42, 44, 49, 51, 56, 60, 63, 65, 69, 71, 73, 77, 82, 90, 91, 96, 100, 104, 109, 115, 117, 122], "global": [2, 4, 83, 85, 87, 99], "intern": [3, 15, 37, 43, 47], "liquido": [3, 4, 15, 39, 48, 71, 77], "combine_extractor": [3, 15], "deprecated_method": [3, 40, 49, 60, 63], "graphnet_file_read": [3, 44], "i3read": [3, 41, 43, 44, 50], "internal_parquet_read": [3, 44], "liquido_read": [3, 44], "parquet_to_sqlit": [3, 51], "random": [3, 10, 12, 14, 51, 55, 58, 97, 120], "sqlite_util": [3, 51], "string_selection_resolv": [3, 51], "graphnet_writ": [3, 56], "parquet_writ": [3, 56], "sqlite_writ": [3, 56], "truth": [3, 4, 10, 12, 14, 20, 29, 54, 58, 94, 107, 113, 114, 120], "i3fileset": [3, 5, 45, 46], "set": [3, 5, 8, 19, 21, 41, 43, 45, 46, 50, 57, 75, 89, 97, 98, 99, 107, 113, 131], "init_global_index": [3, 6], "collate_fn": [3, 7, 109, 113], "do_shuffl": [3, 7], "graphnetdatamodul": [3, 8], "class": [4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 37, 39, 41, 43, 45, 46, 47, 48, 50, 55, 57, 58, 59, 61, 62, 66, 68, 72, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 99, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 128, 131], "object": [4, 5, 10, 12, 14, 21, 32, 35, 72, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 99, 101, 102, 103, 105, 106, 107, 110, 112, 113, 116, 118, 120, 121, 123, 128], "namespac": [4, 99, 120, 121], "name": [4, 6, 7, 10, 12, 14, 16, 17, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 39, 41, 43, 45, 47, 48, 50, 54, 57, 58, 59, 62, 66, 68, 78, 94, 95, 97, 101, 107, 111, 114, 116, 118, 120, 121, 122, 123, 128, 131, 133], "i3featureextractor": [4, 15, 18, 66, 68], "icecube86": [4, 77, 79], "dom_x": [4, 79, 97], "dom_i": [4, 79, 97], "dom_z": [4, 79, 97], "dom_tim": [4, 97], "charg": [4, 74, 83, 97, 98, 101, 112], "rde": 4, "pmt_area": 4, "deepcor": [4, 20, 79], "upgrad": [4, 20, 79, 133], "string": [4, 10, 12, 14, 32, 55, 76, 78, 79, 94, 99, 118], "pmt_number": 4, "dom_numb": 4, "pmt_dir_x": 4, "pmt_dir_i": 4, "pmt_dir_z": 4, "dom_typ": 4, "prometheu": [4, 71, 77], "sensor_pos_x": [4, 81], "sensor_pos_i": [4, 81], "sensor_pos_z": [4, 81], "t": [4, 35, 54, 110, 112, 133], "kaggl": [4, 74, 75, 79, 87, 89], "x": [4, 29, 74, 75, 76, 93, 97, 98, 101, 107, 108, 112, 114], "y": [4, 29, 74, 93, 108, 133], "z": [4, 29, 74, 93, 97, 98, 108, 133], "auxiliari": [4, 74], "sipm_x": [4, 80], "sipm_i": [4, 80], "sipm_z": [4, 80], "i3truthextractor": [4, 15, 18], "energy_track": [4, 106], "energy_cascad": [4, 106], "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": [4, 106, 111], "zenith": [4, 106, 111], "pid": [4, 55, 120], "elast": 4, "interaction_typ": 4, "interaction_tim": [4, 106], "inelast": [4, 106], "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "vertex_x": 4, "vertex_i": 4, "vertex_z": 4, "i3_fil": [5, 19], "str": [5, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 41, 43, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 66, 68, 75, 76, 78, 79, 80, 81, 83, 85, 87, 89, 94, 95, 97, 98, 99, 102, 103, 107, 110, 111, 113, 114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 128], "gcd_file": [5, 19, 66, 68], "paramet": [5, 6, 7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 41, 43, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 66, 68, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129], "output_fold": [5, 61], "worker": [5, 6, 41, 50, 53, 58, 61, 116, 128], "i3deploy": [5, 60, 65], "list": [5, 6, 7, 8, 10, 12, 14, 16, 21, 29, 32, 34, 35, 39, 41, 43, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 59, 61, 62, 66, 68, 72, 75, 76, 78, 83, 85, 87, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 107, 108, 110, 113, 114, 120, 122, 123, 126, 128], "ani": [5, 6, 7, 8, 10, 12, 14, 32, 33, 34, 35, 45, 47, 48, 57, 59, 66, 72, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 112, 114, 116, 118, 119, 120, 121, 122, 123, 128, 133], "output_fil": 6, "global_index": 6, "avail": [6, 21, 105, 106, 107, 127], "pool": [6, 71, 72, 73, 83, 85, 87], "return": [6, 7, 8, 10, 12, 14, 16, 17, 19, 32, 33, 35, 45, 46, 47, 48, 53, 54, 55, 57, 58, 59, 61, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129], "none": [6, 7, 8, 10, 12, 14, 19, 21, 29, 33, 34, 35, 41, 43, 45, 46, 47, 48, 50, 54, 55, 57, 58, 59, 61, 62, 68, 75, 76, 83, 85, 87, 89, 93, 94, 95, 97, 98, 99, 101, 102, 103, 107, 110, 112, 113, 114, 116, 118, 119, 120, 122, 126, 128], "synchron": 6, "file_read": 6, "save_method": 6, "outdir": [6, 41, 43, 50], "index_column": [6, 10, 12, 14, 41, 43, 50, 54, 55, 58, 59, 113, 114, 120], "num_work": [6, 7, 43, 58, 113], "abc": [6, 10, 17, 45, 57, 61, 99, 111, 114, 119, 120, 121], "logger": [6, 8, 10, 17, 34, 45, 47, 48, 55, 57, 61, 62, 92, 99, 103, 111, 114, 115, 128, 133], "A": [6, 8, 10, 34, 45, 46, 47, 48, 54, 59, 61, 62, 66, 76, 94, 95, 98, 99, 105, 107, 108, 112, 114, 118, 120, 121, 123, 133], "convers": [6, 36, 37, 41, 50, 97, 133], "parallel": [6, 41, 43, 50], "extract": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 37, 39, 53, 66, 68, 107], "also": [6, 10, 12, 14, 55, 83, 120], "assign": [6, 10, 12, 14, 72, 76, 131], "id": [6, 8, 12, 41, 43, 50, 59, 78, 94, 113], "exampl": [6, 32, 55, 72, 76, 98, 108, 112, 120, 121, 133], "initi": [6, 34, 46, 59, 61, 75, 83, 89, 93], "graphnetfileread": [6, 44, 45, 46, 47, 48], "method": [6, 8, 10, 12, 14, 17, 19, 31, 32, 33, 35, 40, 41, 45, 49, 50, 57, 58, 59, 62, 75, 76, 78, 98, 106, 112, 114], "graphnetwrit": [6, 56, 57, 58, 59], "save": [6, 17, 19, 32, 37, 39, 41, 43, 50, 54, 56, 57, 59, 99, 110, 112, 113, 114, 118, 119, 120, 121, 133], "interim": [6, 56, 57, 58, 59], "directori": [6, 41, 43, 45, 46, 47, 48, 50, 57, 58, 110, 126], "i3extractor": [6, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 43, 45, 50], "parquetextractor": [6, 36, 37, 39, 43, 45], "h5extractor": [6, 38, 39, 45], "input": [6, 10, 12, 14, 41, 43, 45, 46, 50, 57, 61, 66, 68, 74, 75, 79, 83, 84, 85, 86, 87, 88, 89, 94, 95, 97, 101, 105, 107, 108, 118, 123, 125], "default": [6, 8, 10, 12, 14, 19, 21, 29, 32, 41, 43, 46, 50, 54, 58, 59, 61, 62, 66, 68, 74, 75, 76, 83, 84, 85, 86, 87, 89, 92, 93, 94, 95, 97, 98, 99, 101, 107, 108, 110, 111, 112, 114, 116, 118, 120, 126], "event_no": [6, 10, 12, 14, 41, 43, 50, 54, 55, 58, 59, 114, 120], "column": [6, 10, 12, 14, 17, 39, 41, 43, 50, 54, 58, 59, 62, 68, 70, 78, 83, 92, 94, 95, 97, 98, 101, 103, 105, 106, 107, 108, 114], "ad": [6, 10, 12, 14, 20, 41, 43, 50, 74, 85, 89, 94, 97, 98], "int": [6, 7, 8, 10, 12, 14, 23, 26, 34, 41, 43, 45, 46, 47, 48, 50, 55, 57, 58, 59, 61, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 112, 113, 114, 116, 120, 123, 128], "cpu": [6, 41, 43, 50, 62, 133], "multiprocess": [6, 41, 43, 50, 133], "get_map_funct": 6, "nb_file": 6, "map": [6, 10, 12, 14, 20, 21, 54, 79, 80, 81, 94, 95, 107, 118, 120, 121, 123], "pure": [6, 17, 18, 21, 35], "tupl": [6, 10, 12, 14, 33, 35, 54, 75, 83, 85, 87, 98, 107, 108, 113, 116, 125], "option": [6, 8, 10, 12, 14, 19, 29, 59, 62, 68, 75, 76, 83, 85, 87, 89, 93, 94, 95, 97, 98, 99, 101, 107, 110, 114, 115, 116, 118, 120, 126, 133], "merge_fil": [6, 57, 58, 59], "kwarg": [6, 7, 10, 12, 14, 34, 45, 47, 48, 57, 72, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 99, 101, 102, 103, 105, 106, 107, 110, 112, 114, 118, 120, 121, 128], "merg": [6, 57, 58, 59, 112, 133], "call": [6, 21, 35, 74, 76, 107, 110, 114, 128], "instanti": [6, 8, 121], "remov": [7, 41, 50, 94, 113, 116], "less": [7, 113], "two": [7, 85, 110, 112, 113], "dom": [7, 10, 12, 14, 72, 76, 83, 97, 98, 101, 113], "hit": [7, 113], "should": [7, 10, 12, 14, 17, 19, 32, 55, 62, 75, 76, 83, 89, 94, 95, 101, 108, 112, 113, 118, 120, 121, 123, 131, 133], "occur": [7, 113], "product": [7, 75, 113], "selection_nam": 7, "check": [7, 33, 34, 35, 45, 54, 97, 116, 126, 127, 131, 133], "whether": [7, 33, 35, 54, 74, 75, 83, 85, 87, 89, 99, 112, 122, 126, 127], "shuffl": [7, 8, 53, 58, 113], "select": [7, 8, 10, 12, 14, 26, 55, 113, 114, 120, 131], "bool": [7, 33, 34, 35, 54, 55, 57, 66, 74, 75, 83, 85, 87, 89, 94, 97, 98, 99, 103, 110, 112, 113, 114, 116, 122, 125, 126, 127, 128], "batch_siz": [7, 108, 113], "persistent_work": [7, 113], "prefetch_factor": 7, "construct": [7, 8, 10, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 37, 39, 45, 47, 48, 55, 57, 58, 59, 62, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 114, 116, 119, 120, 121, 128], "t_co": 7, "callabl": [7, 10, 35, 75, 76, 78, 79, 80, 81, 94, 102, 107, 113, 114, 118, 120, 121, 122, 127], "classmethod": [7, 10, 99, 112, 118, 119], "from_dataset_config": 7, "datasetconfig": [7, 10, 55, 117, 120], "dict": [7, 8, 10, 14, 21, 32, 35, 54, 62, 78, 79, 80, 81, 89, 94, 95, 97, 99, 102, 103, 110, 113, 116, 118, 120, 121, 122, 123, 125], "dataset_refer": 8, "dataset_arg": 8, "test_select": [8, 120], "train_dataloader_kwarg": 8, "validation_dataloader_kwarg": 8, "test_dataloader_kwarg": 8, "train_val_split": 8, "0": [8, 10, 12, 14, 41, 43, 46, 50, 55, 66, 72, 75, 76, 83, 84, 85, 87, 92, 93, 95, 98, 101, 108, 112, 113, 120], "9": 8, "split_se": 8, "lightningdatamodul": 8, "creat": [8, 54, 94, 97, 118, 119, 123, 131, 133], "sqlitedataset": [8, 13, 14], "parquetdataset": [8, 11, 12], "non": [8, 32, 35, 54, 83, 112], "refer": [8, 81, 120], "argument": [8, 58, 89, 94, 110, 114, 116, 118, 120, 121, 123], "valid": [8, 35, 55, 102, 103, 107, 110, 112, 116, 118, 123], "test": [8, 55, 107, 113, 120, 127, 131], "ratio": [8, 75], "42": [8, 133], "seed": [8, 10, 12, 14, 55, 94, 95, 113, 120], "prepare_data": 8, "setup": [8, 110, 133], "stage": [8, 110], "lightn": [8, 110], "fit": [8, 103, 112, 114, 123], "properti": [8, 10, 17, 24, 35, 45, 57, 76, 78, 88, 97, 98, 103, 107, 111, 119, 128], "train_dataload": [8, 103], "val_dataload": [8, 103], "test_dataload": 8, "teardown": 8, "cleanup": 8, "shutdown": 8, "procedur": 8, "close": 8, "after": [8, 75, 83, 85, 87, 110, 116, 120], "overrid": [8, 110], "parquet_dataset": [9, 11], "sqlite_dataset": [9, 13], "load_modul": [9, 10, 99], "parse_graph_definit": [9, 10], "parse_label": [9, 10], "ensembledataset": [9, 10, 120], "class_nam": [10, 34, 45, 47, 48, 57, 121, 128], "cfg": 10, "graphdefinit": [10, 12, 14, 90, 91, 94, 95, 96, 113, 131], "arg": [10, 12, 14, 16, 34, 72, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 99, 101, 102, 103, 105, 106, 107, 112, 116, 118, 128], "path": [10, 12, 14, 19, 41, 43, 45, 46, 47, 48, 50, 53, 54, 59, 61, 66, 68, 75, 94, 99, 102, 110, 113, 116, 118, 119, 120, 126, 133], "pulsemap": [10, 12, 14, 20, 66, 68, 113, 120], "puls": [10, 12, 14, 16, 20, 21, 33, 35, 54, 66, 72, 76, 89, 94, 97, 98, 108], "seri": [10, 12, 14, 20, 21, 33, 35, 54, 66, 83, 97, 101], "node": [10, 12, 14, 71, 72, 76, 83, 84, 85, 87, 90, 91, 92, 94, 95, 101, 108], "multipl": [10, 12, 14, 16, 98, 110, 120, 128], "store": [10, 12, 14, 54, 57, 58, 59, 111], "attribut": [10, 12, 14, 72, 107], "node_truth": [10, 12, 14, 113, 120], "uniqu": [10, 12, 14, 54, 97, 108, 120], "indici": [10, 12, 14, 33, 55, 112], "tabl": [10, 12, 14, 16, 17, 19, 37, 39, 45, 54, 58, 59, 78, 94, 114], "truth_tabl": [10, 12, 14, 58, 113, 114, 120], "inform": [10, 12, 14, 16, 17, 19, 21, 29, 37, 39, 94, 97, 98, 99], "node_truth_t": [10, 12, 14, 113, 120], "string_select": [10, 12, 14, 113, 120], "subset": [10, 12, 14, 75, 83, 85, 87, 101], "given": [10, 14, 19, 59, 76, 92, 107, 114, 116], "queri": [10, 12, 14, 54, 55, 59, 75], "pass": [10, 14, 74, 75, 83, 84, 85, 86, 87, 88, 89, 94, 101, 103, 107, 110, 112, 114, 131], "dtype": [10, 12, 14, 94, 95, 129], "float32": [10, 12, 14, 94, 95], "tensor": [10, 12, 14, 62, 72, 74, 75, 76, 78, 83, 84, 85, 86, 87, 88, 89, 93, 97, 101, 102, 103, 107, 108, 112, 125, 129], "loss_weight_t": [10, 12, 14, 113, 120], "per": [10, 12, 14, 21, 54, 75, 76, 83, 101, 107, 112, 114], "loss": [10, 12, 14, 94, 103, 107, 110, 112, 116], "weight": [10, 12, 14, 66, 68, 75, 89, 94, 107, 112, 114, 121, 133], "loss_weight_column": [10, 12, 14, 94, 113, 120], "correspond": [10, 12, 14, 32, 35, 53, 85, 94, 98, 114, 118, 120, 121, 123, 126, 133], "loss_weight_default_valu": [10, 12, 14, 94, 120], "float": [10, 12, 14, 66, 75, 83, 84, 92, 93, 94, 95, 97, 98, 101, 103, 110, 112, 113, 120], "note": [10, 12, 14, 46, 58, 59, 98, 121], "valu": [10, 12, 14, 29, 32, 54, 75, 76, 93, 94, 95, 108, 111, 112, 116, 118], "specifi": [10, 12, 14, 55, 72, 98, 107, 110, 133], "case": [10, 12, 14, 21, 41, 43, 46, 50, 66, 76, 98, 107, 133], "That": [10, 12, 14, 85, 106, 111], "ignor": [10, 12, 14, 35, 58], "resolv": [10, 12, 14, 55], "10000": [10, 12, 14, 55, 74], "5": [10, 12, 14, 55, 83, 101, 116, 133], "20": [10, 12, 14, 55, 128], "graph_definit": [10, 12, 14, 71, 90, 113, 120], "defin": [10, 12, 14, 55, 62, 66, 68, 76, 90, 91, 92, 94, 96, 98, 113, 118, 120, 121, 123], "represent": [10, 12, 14, 35, 74, 75, 76, 95, 99, 101], "dictionari": [10, 14, 17, 32, 33, 35, 45, 54, 94, 95, 99, 118, 120, 121, 123], "from_config": [10, 99, 119, 120, 121], "instanc": [10, 17, 19, 29, 35, 37, 39, 41, 43, 46, 50, 94, 99, 111, 113, 119, 121, 133], "concaten": [10, 32, 85], "one": [10, 12, 19, 54, 66, 76, 120, 121, 126, 131, 133], "query_t": [10, 12, 14], "sequential_index": [10, 12, 14], "some": [10, 12, 14, 41, 43, 46, 50, 94, 98], "out": [10, 12, 85, 103, 104, 112, 128, 131, 133], "sequenti": [10, 12], "len": [10, 12, 98], "self": [10, 12, 94, 118, 123], "_may_": [10, 12], "_indic": [10, 12], "If": [10, 12, 19, 21, 34, 59, 75, 85, 89, 94, 97, 98, 99, 107, 110, 114, 131, 133], "entir": [10, 12, 99], "impos": [10, 12], "befor": [10, 12, 85, 93, 101, 107, 110], "ndarrai": [10, 12, 29, 94, 98, 114], "scalar": [10, 12, 17, 108, 112], "length": [10, 12, 35, 97, 98, 108, 110], "rais": [10, 12, 19, 21, 99, 118, 123], "columnmissingexcept": [10, 12, 69, 70], "element": [10, 12, 17, 32, 35, 103, 108, 113, 122], "present": [10, 12, 19, 34, 108, 116, 126, 127], "add_label": 10, "fn": [10, 35, 118, 122], "kei": [10, 21, 32, 33, 35, 54, 59, 75, 76, 97, 111, 120, 121], "add": [10, 75, 85, 116, 125, 131, 133], "custom": [10, 45, 69, 94, 110], "concatdataset": 10, "singl": [10, 16, 57, 59, 76, 85, 98, 111, 120, 121], "collect": [10, 18, 31, 112, 129], "iter": 10, "backend": [11, 13, 56, 58], "parquetwrit": [12, 37, 43, 56, 58], "cache_s": 12, "cach": 12, "memori": 12, "must": [12, 16, 45, 46, 54, 57, 72, 110, 114, 131], "least": [12, 131, 133], "databas": [14, 54, 59, 114, 133], "pytorch": [14, 110, 133], "i3genericextractor": [15, 18], "i3hybridrecoextractor": [15, 18], "i3ntmuonlabelsextractor": [15, 18], "i3particleextractor": [15, 18], "i3pisaextractor": [15, 18], "i3quesoextractor": [15, 18], "i3retroextractor": [15, 18], "i3splinempeextractor": [15, 18], "i3tumextractor": [15, 18], "parquet_extractor": [15, 36], "h5_extractor": [15, 38], "combinedextractor": [15, 16], "combin": [16, 32, 43, 83, 120], "extractor_nam": [16, 17, 19, 21, 24, 37, 39], "same": [16, 35, 54, 72, 76, 98, 105, 108, 110, 122, 128], "mix": 16, "fail": 16, "inherit": [17, 19, 35, 45, 57, 78, 97, 112, 128], "__call__": [17, 19, 45, 62], "output": [17, 59, 61, 62, 74, 75, 83, 84, 85, 86, 88, 97, 98, 101, 103, 105, 106, 107, 114, 120, 121, 133], "var1": 17, "var_n": 17, "variabl": [17, 19, 21, 35, 45, 85, 97, 98, 108, 114, 128], "arrai": [17, 29, 32, 97, 98, 108], "like": [17, 35, 76, 93, 107, 108, 112, 129, 131], "shape": [17, 93, 94, 97, 108, 112], "n": [17, 72, 76, 93, 108, 112], "where": [17, 41, 43, 46, 50, 94, 95, 97, 98, 101, 108, 111], "denot": [17, 110], "conjunct": [17, 107], "fileread": [17, 45], "keep": [17, 19, 37, 39, 97], "proven": [17, 19, 37, 39], "mc_truth": 17, "get": [17, 33, 54, 78, 110, 113, 133], "i3fram": [18, 21, 33, 35, 66, 68], "frame": [18, 19, 21, 31, 34, 35, 68], "i3_filt": [18, 31, 41, 43, 46, 50], "i3featureextractoricecube86": [18, 20], "i3featureextractoricecubedeepcor": [18, 20], "i3featureextractoricecubeupgrad": [18, 20], "i3pulsenoisetruthflagicecubeupgrad": [18, 20], "i3galacticplanehybridrecoextractor": [18, 22], "i3ntmuonlabelextractor": [18, 23], "i3splinempeicextractor": [18, 28], "observatori": [19, 46], "set_gcd": 19, "gframe": 19, "cframe": 19, "gcd": [19, 33, 41, 43, 46, 50, 53, 66, 68, 126], "pair": [19, 41, 43, 46, 50, 74], "member": [19, 21, 35, 45, 97, 120, 121, 128], "being": [19, 66, 74, 105, 107], "attempt": 19, "find": [19, 93, 126], "c": [19, 32, 76, 93, 112, 133], "instead": [19, 41, 43, 46, 50, 112], "those": 19, "runtimeerror": 19, "86": [20, 79], "nois": [20, 33, 66], "flag": [20, 66], "exclude_kei": 21, "dynam": [21, 75, 85, 86, 87], "pars": [21, 115, 116, 117, 118, 123], "tri": [21, 35], "automat": [21, 58, 94, 112, 131], "cast": [21, 35], "done": [21, 76, 128, 131], "recurs": [21, 35, 41, 43, 45, 46, 50, 99, 122, 126], "each": [21, 32, 35, 53, 54, 58, 59, 61, 62, 72, 74, 75, 76, 79, 80, 81, 83, 85, 87, 92, 94, 95, 97, 98, 101, 105, 107, 108, 110, 113, 126], "look": [21, 133], "signatur": [21, 35], "similar": [21, 35, 97, 133], "handl": [21, 112, 116, 125, 128], "hand": 21, "special": [21, 66, 101, 108], "mc": [21, 54], "tree": 21, "trigger": 21, "exclud": [21, 133], "valueerror": [21, 99], "hybrid": 22, "galatict": 22, "plane": [22, 112], "tum": [23, 30], "dnn": [23, 30], "padding_valu": [23, 26, 108], "northeren": 23, "i3particl": 24, "other": [24, 54, 92, 112, 131], "algorithm": 24, "comparison": [24, 112], "quantiti": [25, 107, 108], "pisa": [25, 133], "queso": 26, "retro": 27, "splinemp": 28, "border": 29, "mctree": [29, 33], "boundari": 29, "volum": 29, "coordin": [29, 78, 93, 97, 98, 108], "particl": [29, 54, 111], "start": [29, 131, 133], "stop": [29, 110, 116], "within": [29, 72, 75, 76, 85, 92], "hard": [29, 97], "i3mctre": 29, "flatten_nested_dictionari": [31, 32], "serialis": [31, 32], "transpose_list_of_dict": [31, 32], "frame_is_montecarlo": [31, 33], "frame_is_nois": [31, 33], "get_om_keys_and_pulseseri": [31, 33], "i3filt": [31, 34, 41, 43, 46, 50], "nullspliti3filt": [31, 34, 41, 43, 46, 50], "i3filtermask": [31, 34], "is_boost_enum": [31, 35], "is_boost_class": [31, 35], "is_icecube_class": [31, 35], "is_typ": [31, 35], "is_method": [31, 35], "break_cyclic_recurs": [31, 35], "get_member_vari": [31, 35], "cast_object_to_pure_python": [31, 35], "cast_pulse_series_to_pure_python": [31, 35], "manipul": [32, 90, 91, 96], "obj": [32, 35, 122], "parent_kei": 32, "separ": [32, 93, 110, 133], "flatten": 32, "nest": 32, "d": [32, 93, 94, 97, 108, 131], "b": [32, 72, 76, 108], "2": [32, 41, 50, 75, 76, 83, 85, 87, 92, 95, 98, 101, 106, 108, 112, 120, 133], "a__b": 32, "applic": 32, "parent": 32, "__": [32, 35], "nester": 32, "json": [32, 120], "therefor": [32, 46], "we": [32, 35, 55, 98, 131, 133], "outer": 32, "abl": [32, 97, 133], "de": 32, "transpos": 32, "mont": 33, "carlo": 33, "simul": [33, 66], "icetrai": [33, 35, 41, 43, 46, 50, 62, 127], "pulseseri": 33, "calibr": [33, 35], "gcd_dict": [33, 35], "p": [33, 112], "om": [33, 35], "i3calibr": 33, "indicesfor": 33, "filter": [34, 41, 43, 46, 50, 128], "log_fold": [34, 45, 47, 48, 57, 128], "skip": [34, 85], "null": [34, 54], "filter_nam": 34, "filter_ani": 34, "filtermask": 34, "true": [34, 54, 66, 83, 85, 87, 89, 94, 97, 99, 110, 112, 114, 120, 121, 123, 126], "kept": 34, "fals": [34, 66, 74, 75, 85, 89, 94, 99, 110, 112, 114, 120], "boost": 35, "enum": 35, "ensur": [35, 53, 112, 128, 131, 133], "isn": 35, "return_discard": 35, "mangl": 35, "take": [35, 76, 98, 101, 131], "mainli": 35, "cannot": [35, 101, 118, 123], "trivial": [35, 107], "For": [35, 97, 110], "doe": [35, 105, 107, 121], "try": 35, "equival": 35, "its": [35, 101], "regular": [35, 75], "otherwis": [35, 112], "itself": [35, 107], "deem": 35, "wai": [35, 55, 131, 133], "optic": [35, 98], "found": [35, 41, 43, 46, 50, 58, 98, 112], "ofintern": 36, "between": [37, 74, 90, 91, 92, 93, 96, 103, 107, 108, 110, 112, 120, 121], "param": [37, 39], "h5hitextractor": [38, 39], "h5truthextractor": [38, 39], "h5": [39, 48], "column_nam": 39, "hitdata": 39, "truthdata": 39, "deprec": [40, 41, 49, 50, 125], "parquetdataconvert": [40, 41], "gcd_rescu": [41, 43, 46, 50, 126], "i3toparquetconvert": [41, 42, 43], "subfold": [41, 43, 46, 50], "search": [41, 43, 45, 46, 47, 48, 50, 126], "convent": [41, 43, 46, 50], "folder": [41, 43, 46, 47, 48, 50, 61], "accompani": [41, 43, 46, 50], "howev": [41, 43, 46, 50], "broken": [41, 43, 46, 50], "In": [41, 43, 45, 46, 50, 57, 120, 121, 133], "icetray_verbos": [41, 43, 46, 50], "verbos": [41, 43, 46, 50, 103, 110], "pframe": [41, 43, 46, 50], "i3tosqliteconvert": [42, 43, 50], "parquettosqliteconvert": [42, 43], "preconfigur": 43, "written": [43, 61], "parquetread": [44, 47], "liquidoread": [44, 48], "addit": [45, 57, 72, 75, 103, 112, 114], "accepted_file_extens": 45, "accepted_extractor": 45, "accept": [45, 131], "compat": [45, 55, 107], "extracor_nam": 45, "produc": [45, 74, 111, 114], "find_fil": [45, 46, 47, 48], "mai": [45, 55, 62, 97, 133], "overwritten": [45, 116, 118], "match": [45, 114, 126, 129], "set_extractor": 45, "validate_fil": 45, "input_fil": [45, 61], "reli": 46, "environ": [46, 133], "sqlitedataconvert": [49, 50, 133], "pairwise_shuffl": [51, 53], "database_exist": [51, 54], "query_databas": [51, 54], "get_primary_kei": [51, 54], "database_table_exist": [51, 54], "run_sql_cod": [51, 54], "save_to_sql": [51, 54], "attach_index": [51, 54], "create_t": [51, 54], "create_table_and_save_to_sql": [51, 54], "stringselectionresolv": [51, 55], "rng": 53, "relat": [53, 126], "i3_list": [53, 126], "gcd_list": [53, 126], "correpond": 53, "handi": 53, "becaus": 53, "even": 53, "files_list": 53, "gcd_shuffl": 53, "i3_shuffl": 53, "database_path": [54, 114], "execut": 54, "result": [54, 58, 76, 98, 110, 112, 113, 122, 133], "datafram": [54, 55, 57, 78, 103, 113, 114], "primari": [54, 59], "splitinicepuls": 54, "table_nam": 54, "df": 54, "alreadi": [54, 133], "attach": 54, "default_typ": 54, "integer_primary_kei": 54, "NOT": [54, 112], "integ": [54, 83, 85, 86, 112], "Such": 54, "row": [54, 59, 98, 108], "appropri": [54, 107], "expect": [54, 55, 57, 66, 68, 94, 97], "doesn": 54, "indic": [55, 70, 76, 83, 93, 98, 101, 110, 116, 131], "use_cach": 55, "flexibl": 55, "below": [55, 97, 114, 131, 133], "show": [55, 110], "involv": 55, "cover": 55, "current": [55, 101, 110, 131, 133], "yml": [55, 116, 120, 121], "50000": [55, 120], "ab": [55, 112, 120], "12": [55, 89, 120], "14": [55, 120], "16": [55, 74, 83, 120], "13": [55, 133], "panda": [55, 114], "syntax": [55, 112], "fix": 55, "randomli": [55, 94, 95, 121], "dataformat": [56, 59], "sqlitewrit": [56, 59], "graphnetfilesavemethod": [57, 59], "deep": [57, 59, 75, 87, 89], "save_fil": 57, "reciev": 57, "file_extens": 57, "output_dir": [57, 58, 59], "smaller": 57, "expects_merged_datafram": 57, "write": [58, 66, 68, 133], "events_per_batch": 58, "constitut": 58, "subsampl": 58, "full": 58, "200000": 58, "merged_database_nam": 59, "max_table_s": 59, "db": [59, 113, 114], "maximum": [59, 76, 97, 98, 107, 116], "proceedur": 59, "partit": 59, "size": [59, 75, 76, 83, 85, 86, 87, 89, 108, 116], "approxim": 59, "you": [59, 61, 74, 120, 121, 131, 133], "mani": 59, "exceed": 59, "400": 59, "million": 59, "tend": 59, "notic": [59, 108, 112], "slower": 59, "put": 59, "primary_key_rescu": 59, "database_nam": 59, "my_databas": 59, "cleaning_modul": [60, 65], "inference_modul": [60, 65], "deploymentmodul": [60, 61, 62, 68], "n_worker": 61, "baseclass": 61, "thei": 61, "appear": 61, "Will": [61, 66, 68, 92], "independ": 61, "sequenc": [61, 74, 75, 98, 108, 113], "determin": [61, 83], "divid": 61, "model_config": [62, 66, 68, 115, 117, 118, 120, 123], "state_dict": [62, 66, 68, 99, 102, 125], "devic": 62, "prediction_column": [62, 68, 103, 113], "overwrit": [62, 110], "modelconfig": [62, 66, 68, 99, 117, 120, 121], "comput": [62, 75, 93, 103, 107, 108, 112, 118, 120, 121, 123], "i3pulsecleanermodul": [65, 66], "i3inferencemodul": [65, 66, 68], "pulsemap_extractor": [66, 68], "model_nam": [66, 68], "discard_empty_ev": 66, "clean": [66, 131, 133], "assum": [66, 74, 78, 94, 98, 107, 108], "been": [66, 112, 131], "pulsmap": [66, 68], "summar": [66, 68, 97, 98], "help": [66, 68, 116, 131], "entri": [66, 68, 85, 108, 116], "dynedg": [66, 68, 71, 82, 86, 87, 89], "associ": [66, 68, 94, 98, 106, 107, 112], "7": [66, 76], "consid": [66, 83, 133], "posit": [66, 74, 75, 76, 89, 98, 106, 118, 123], "signal": 66, "els": 66, "elimin": 66, "whose": 66, "empti": 66, "speed": [66, 93], "especi": 66, "sinc": [66, 112], "further": 66, "calcul": [66, 74, 92, 95, 97, 103, 108, 111, 112], "energy_reco": 68, "miss": 70, "embed": [71, 73, 83, 89, 101, 105, 107], "rnn_tito": [71, 82], "convnet": [71, 82], "dynedge_jinst": [71, 82], "dynedge_kaggle_tito": [71, 82], "icemix": [71, 82], "edg": [71, 75, 76, 85, 86, 87, 90, 93, 94, 95, 96, 97, 108], "node_rnn": [71, 83, 100], "unbatch_edge_index": [71, 72], "attributecoarsen": [71, 72], "domcoarsen": [71, 72], "customdomcoarsen": [71, 72], "domandtimewindowcoarsen": [71, 72], "standardaveragedmodel": [71, 102], "standardmodel": [71, 102, 103], "calculate_xyzt_homophili": [71, 108], "calculate_distance_matrix": [71, 108], "knn_graph_batch": [71, 108], "array_to_sequ": [71, 108], "oper": [72, 75, 82, 85], "cluster": [72, 75, 76, 83, 85, 87, 97, 98, 101], "local": [72, 79, 80, 81, 97, 116], "edge_index": [72, 75, 108], "accord": [72, 76, 92, 94, 95, 98], "vector": [72, 75, 76, 112], "longtensor": [72, 76, 108], "mathbf": [72, 76], "ldot": [72, 76], "reduce_opt": 72, "avg": 72, "avg_pool": 72, "avg_pool_x": 72, "max": [72, 75, 85, 87, 112, 116], "max_pool": [72, 76], "max_pool_x": [72, 76], "min": [72, 76, 85, 87], "min_pool": [72, 73, 76], "min_pool_x": [72, 73, 76], "sum": [72, 76, 85, 87, 103, 114], "sum_pool": [72, 73, 76], "sum_pool_x": [72, 73, 76], "forward": [72, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 92, 94, 97, 101, 103, 107, 112], "simplecoarsen": 72, "window": 72, "time_window": 72, "sinusoidalposemb": [73, 74], "fourierencod": [73, 74], "spacetimeencod": [73, 74], "dynedgeconv": [73, 75, 85], "edgeconvtito": [73, 75], "dyntran": [73, 75, 83, 87], "droppath": [73, 75], "mlp": [73, 75, 85], "block_rel": [73, 75], "attention_rel": [73, 75], "sum_pool_and_distribut": [73, 76], "group_bi": [73, 76], "group_pulses_to_dom": [73, 76], "group_pulses_to_pmt": [73, 76], "std_pool_x": [73, 76], "std_pool": [73, 76], "dim": [74, 75], "n_freq": 74, "scale": [74, 75, 86, 89, 93, 94, 97, 98, 107, 112], "lightningmodul": [74, 75, 99, 110, 128], "sinusoid": [74, 89], "competit": [74, 75, 79, 87, 89], "2nd": [74, 89], "place": [74, 89, 125, 131], "solut": [74, 75, 87, 89, 131], "see": [74, 83, 92, 94, 110, 131, 133], "arxiv": [74, 92, 112], "2310": 74, "15674": 74, "fourier": 74, "encod": 74, "attent": [74, 75, 89], "1706": 74, "03762": 74, "seen": 74, "soft": 74, "digit": 74, "dimens": [74, 75, 79, 80, 81, 83, 84, 85, 87, 89, 98, 101, 107, 108, 112], "frequenc": 74, "seq_length": [74, 89, 108], "output_dim": 74, "n_featur": [74, 89], "incorpor": 74, "meaning": 74, "four": 74, "mandatori": 74, "128": [74, 84, 85, 87, 116], "dimension": [74, 75], "384": [74, 89], "6": [74, 76, 89], "spacetim": 74, "space": [74, 92, 93, 107, 114], "interv": 74, "32": [74, 89], "aggr": 75, "nb_neighbor": 75, "features_subset": [75, 83, 85, 87, 101], "edgeconv": 75, "convolut": [75, 84, 85, 86, 87], "aggreg": [75, 76], "8": [75, 76, 83, 85, 87, 95, 101, 112, 113, 131, 133], "neighbour": [75, 83, 85, 87, 92, 93, 95, 101, 108], "slice": [75, 85], "sparsetensor": 75, "messagepass": 75, "tito": [75, 83, 87], "reset_paramet": 75, "reset": 75, "learnabl": [75, 82, 83, 84, 85, 86, 87, 88, 89, 101, 107], "messag": [75, 110, 128], "x_i": 75, "x_j": 75, "layer_s": 75, "n_head": [75, 83, 87], "dyntrans1": 75, "head": [75, 83, 87, 89, 107], "multiheadattent": 75, "drop_prob": 75, "drop": [75, 84], "stochast": 75, "depth": [75, 89, 98], "probabl": [75, 112], "dure": [75, 89, 94, 107, 110], "extra_repr": [75, 99], "extra": [75, 133], "in_featur": 75, "hidden_featur": 75, "out_featur": 75, "activ": [75, 83, 85, 97, 101, 103, 107, 131, 133], "gelu": 75, "dropout_prob": 75, "multi": [75, 85], "perceptron": [75, 85], "hidden": [75, 83, 85, 86, 101], "dropout": [75, 83, 101], "input_dim": 75, "num_head": 75, "mlp_ratio": 75, "qkv_bia": 75, "qk_scale": 75, "attn_drop": 75, "drop_path": 75, "init_valu": 75, "norm_lay": 75, "normal": [75, 85, 98, 107], "layernorm": 75, "attn_head_dim": 75, "beitv2": 75, "4": [75, 86, 89, 106], "feedforward": 75, "bia": 75, "term": [75, 112], "matric": 75, "factor": [75, 98, 110], "dot": 75, "gamma_1": 75, "gamma_2": 75, "key_padding_mask": 75, "rel_pos_bia": 75, "kv": 75, "proj_drop": 75, "mechan": 75, "rel": [75, 89], "multipli": [75, 110], "head_dim": 75, "q": 75, "k": [75, 83, 85, 87, 92, 95, 101, 108, 112], "attn_mask": 75, "just": [76, 133], "negat": 76, "cluster_index": 76, "distribut": [76, 85, 106, 107, 112, 114], "ident": [76, 107], "pmt": [76, 98], "f1": 76, "f2": 76, "groupbi": 76, "3": [76, 83, 84, 87, 93, 98, 101, 106, 108, 112, 131, 133], "matrix": [76, 92, 93, 108, 112], "mathbb": 76, "r": [76, 92, 133], "n_1": 76, "n_b": 76, "f": 76, "obtain": [76, 112], "wise": 76, "dens": 76, "fc": 76, "known": 76, "std": 76, "repres": [76, 83, 94, 95, 97, 98, 108, 118, 120, 121], "averag": [76, 102, 112], "torch_geometr": [76, 108], "version": [76, 98, 107, 110, 131, 133], "standardis": 77, "icecubekaggl": [77, 79], "icecubedeepcor": [77, 79], "icecubeupgrad": [77, 79], "liquido_v1": [77, 80], "orca150": [77, 81], "ins": 78, "feature_map": [78, 79, 80, 81], "input_featur": [78, 94], "input_feature_nam": [78, 94, 95, 97], "adjac": 78, "geometry_t": [78, 79, 80, 81], "public": [78, 114], "retriev": 78, "geometri": [78, 94], "string_index_nam": 78, "sensor_position_nam": 78, "xyz": [78, 79, 80, 81, 97, 98], "sensor_index_nam": 78, "sensor": [78, 94], "geometry_table_path": [79, 80, 81], "home": [79, 80, 81, 116, 133], "runner": [79, 80, 81, 116], "lib": [79, 80, 81, 116, 133], "python3": [79, 80, 81, 116], "string_id_column": [79, 80, 81], "sensor_id_column": [79, 80, 81], "sensor_id": [79, 81], "icecube_upgrad": 79, "prototyp": [80, 81], "liquid": 80, "fiber_id": 80, "sipm_id": 80, "orca_150": 81, "sensor_string_id": 81, "dynedgejinst": [82, 86], "dynedgetito": [82, 83, 87], "deepic": [82, 89], "rnn_dynedg": 83, "intend": [83, 101, 133], "amount": 83, "nb_input": [83, 84, 85, 86, 87, 88, 101, 105, 106, 107], "time_series_column": [83, 101], "treat": [83, 101], "nb_neighbour": [83, 85, 87, 101], "rnn_layer": 83, "rnn_hidden_s": 83, "64": [83, 133], "rnn_dropout": 83, "latent": [83, 85, 87, 89, 101, 105, 106, 107], "metric": [83, 85, 87, 93, 101, 110], "nearest": [83, 85, 87, 92, 93, 95, 101, 108], "dyntrans_layer_s": [83, 87], "post_processing_layer_s": [83, 85, 87], "post": [83, 85, 87], "readout_layer_s": [83, 85, 87], "readout": [83, 85, 87], "global_pooling_schem": [83, 85, 87], "scheme": [83, 85, 87], "embedding_dim": [83, 101], "ie": 83, "use_global_featur": [83, 87], "use_post_processing_lay": [83, 87], "author": [84, 86, 112], "martin": 84, "minh": 84, "nb_output": [84, 86, 88, 97, 105, 106, 107], "nb_intermedi": 84, "dropout_ratio": 84, "fraction": [84, 101, 113], "dynedge_layer_s": 85, "dimenion": [85, 87], "256": [85, 87], "336": [85, 87], "follow": [85, 103, 112, 114, 131, 133], "_and_": 85, "As": 85, "last": [85, 101, 105, 106, 107, 110, 113], "add_global_variables_after_pool": 85, "altern": [85, 112, 131], "activation_lay": 85, "add_norm_lay": 85, "linear": 85, "skip_readout": 85, "exact": [86, 112], "2209": 86, "03042": 86, "oerso": 86, "layer_size_scal": 86, "ic": [87, 89, 97], "univers": [87, 89], "south": [87, 89], "pole": [87, 89], "core": 88, "drhb": 89, "http": [89, 92, 94, 112, 131], "github": [89, 94, 112, 133], "com": [89, 94, 112, 133], "hidden_dim": 89, "192": 89, "head_siz": 89, "depth_rel": 89, "n_rel": 89, "scaled_emb": 89, "include_dynedg": 89, "dynedge_arg": 89, "impact": 89, "no_weight_decai": 89, "cls_tocken": 89, "subject": [89, 112], "decai": 89, "edgedefinit": [90, 91, 92, 93, 94, 96], "how": [90, 91, 96], "drawn": [90, 91, 95, 96], "minkowski": [90, 91], "knngraph": [90, 95], "lex_sort": [90, 98], "gather_cluster_sequ": [90, 98], "identify_indic": [90, 98], "cluster_summarize_with_percentil": [90, 98], "ice_transpar": [90, 98], "knnedg": [91, 92], "radialedg": [91, 92], "euclideanedg": [91, 92], "compute_minkowski_distance_mat": [91, 93], "minkowskiknnedg": [91, 93], "_construct_edg": 92, "definit": [92, 94, 95, 97, 99, 107, 131], "nb_nearest_neighbour": [92, 93, 95], "distanc": [92, 93, 95, 108], "sphere": 92, "chosen": [92, 98, 128], "radiu": 92, "centr": 92, "radial": 92, "center": 92, "euclidean": [92, 131], "org": [92, 112, 133], "pdf": 92, "1809": 92, "06166": 92, "space_coord": 93, "time_coord": 93, "pairwis": [93, 108], "second": 93, "m": [93, 98, 112], "light": [93, 133], "time_like_weight": 93, "prefer": [93, 133], "over": [93, 97], "time_lik": 93, "hold": 94, "alter": 94, "node_definit": [94, 95], "edge_definit": 94, "nodedefinit": [94, 95, 96, 97], "nodesaspuls": [94, 96, 97], "perturbation_dict": [94, 95], "deviat": [94, 95, 98], "perturb": [94, 95], "add_inactive_sensor": 94, "inact": 94, "append": 94, "pad": [94, 98, 108], "sensor_mask": 94, "mask": [94, 108], "string_mask": 94, "sort_bi": 94, "sort": [94, 98], "truth_dict": 94, "custom_label_funct": 94, "loss_weight": [94, 107], "data_path": 94, "num_row": 94, "team": [94, 131], "blob": [94, 112], "getting_start": 94, "md": 94, "your": [95, 131, 133], "percentileclust": [96, 97], "nodeasdomtimeseri": [96, 97], "icemixnod": [96, 97], "num_puls": 97, "node_feature_nam": 97, "new_features_nam": 97, "overridden": 97, "set_number_of_input": 97, "set_output_feature_nam": 97, "measur": [97, 98, 108], "cherenkov": [97, 98], "radiat": [97, 98], "percentil": [97, 98], "summari": [97, 98], "cluster_on": [97, 98], "50": [97, 98, 116], "90": [97, 98], "add_count": [97, 98], "duplic": 97, "id_column": 97, "time_column": 97, "charge_column": 97, "max_activ": 97, "n_puls": 97, "limit": [97, 112], "minimum": [97, 107], "hlc": 97, "max_puls": 97, "768": 97, "z_name": 97, "hlc_name": 97, "coincid": 97, "add_ice_properti": 97, "scatter": [97, 98], "absopt": 97, "ice_arg": 97, "z_offset": [97, 98], "z_scale": [97, 98], "offset": [97, 98], "cluster_column": 98, "numpi": 98, "along": 98, "backward": [98, 112], "feature_idx": 98, "turn": [98, 131], "gather": 98, "nan": 98, "n_cluster": 98, "l": [98, 108], "largest": 98, "suppos": 98, "n_pmt": 98, "three": [98, 112], "spatial": 98, "column_offset": 98, "feature_nam": 98, "summarization_indic": 98, "cluster_indic": 98, "interpol": [98, 110], "500": 98, "inaccur": 98, "f_absorpt": 98, "absorpt": 98, "f_scatter": 98, "verbose_print": 99, "save_state_dict": 99, "load_state_dict": [99, 102], "karg": [99, 102], "trust": 99, "enough": 99, "eval": [99, 133], "lambda": 99, "express": [99, 112], "consequ": 99, "set_verbose_print_recurs": 99, "descript": [99, 116], "print": [99, 110, 128], "about": [99, 118, 120, 121, 123], "extra_repr_recurs": 99, "indent": 99, "recurr": 100, "nodetimernn": 101, "standalon": 101, "pr": 101, "seper": 101, "hidden_s": [101, 105, 106, 107], "num_lay": 101, "clean_up_data_object": 101, "updat": [101, 102, 108, 110], "swa": 102, "ema": 102, "standardaveragemodel": 102, "training_step": [102, 103], "train_batch": [102, 103], "batch_idx": [102, 103, 108], "step": [102, 103, 108, 110], "validation_step": [102, 103], "val_batch": [102, 103], "optimizer_step": 102, "epoch": [102, 110, 116], "optim": [102, 103, 110], "optimizer_closur": 102, "on_train_end": 102, "ones": [102, 133], "backbon": 103, "max_epoch": 103, "early_stopping_pati": [103, 123], "gpu": [103, 116, 133], "ckpt_path": 103, "log_every_n_step": 103, "gradient_clip_v": 103, "distribution_strategi": 103, "trainer_kwarg": 103, "pytorch_lightn": [103, 110, 128], "trainer": [103, 110, 113], "target_label": [103, 107], "target": [103, 105, 107, 112, 123], "prediction_label": [103, 107], "configure_optim": 103, "shared_step": 103, "share": 103, "compute_loss": [103, 107], "pred": [103, 107], "mode": [103, 107], "deactiv": [103, 107], "predict_as_datafram": 103, "additional_attribut": [103, 113], "multiclassclassificationtask": [104, 105], "binaryclassificationtask": [104, 105], "binaryclassificationtasklogit": [104, 105], "azimuthreconstructionwithkappa": [104, 106], "azimuthreconstruct": [104, 106], "directionreconstructionwithkappa": [104, 106], "zenithreconstruct": [104, 106], "zenithreconstructionwithkappa": [104, 106], "energyreconstruct": [104, 106], "energyreconstructionwithpow": [104, 106], "energytcreconstruct": [104, 106], "energyreconstructionwithuncertainti": [104, 106], "vertexreconstruct": [104, 106], "positionreconstruct": [104, 106], "timereconstruct": [104, 106], "inelasticityreconstruct": [104, 106], "learnedtask": [104, 107], "standardlearnedtask": [104, 105, 106, 107], "identitytask": [104, 105, 107], "standardflowtask": [104, 107], "classifi": 105, "untransform": 105, "interpret": 105, "logit": [105, 112], "binari": [105, 112], "default_target_label": [105, 106, 107], "default_prediction_label": [105, 106, 107], "target_pr": 105, "angl": [106, 111], "kappa": [106, 112], "var": 106, "azimuth_pr": 106, "azimuth_kappa": 106, "3d": [106, 112], "vmf": 106, "dir_x_pr": 106, "dir_y_pr": 106, "dir_z_pr": 106, "direction_kappa": 106, "zenith_pr": 106, "zenith_kappa": 106, "stabl": [106, 107], "energy_pr": 106, "cascad": 106, "energy_track_pr": 106, "energy_cascade_pr": 106, "uncertainti": 106, "energy_sigma": 106, "vertex": 106, "position_x_pr": 106, "position_y_pr": 106, "position_z_pr": 106, "interaction_time_pr": 106, "interact": 106, "hadron": 106, "inelasticity_pr": 106, "lossfunct": [107, 109, 112], "auto": 107, "matic": 107, "_pred": 107, "transform_prediction_and_target": 107, "numer": 107, "transform_target": 107, "log10": [107, 114], "rather": [107, 128], "transform_infer": 107, "invers": 107, "recov": 107, "transform_support": 107, "restrict": [107, 112], "invert": 107, "1e6": 107, "train_ev": 107, "act": [107, 112], "wrt": 107, "meet": 107, "come": [107, 131], "vast": 107, "major": 107, "supervis": 107, "grab": 107, "send": 107, "evalu": 107, "normalizingflow": 107, "jacobian": 107, "flow": 107, "xyzt": 108, "homophili": 108, "xyz_coord": 108, "nb_dom": 108, "excluding_valu": 108, "total": [108, 113, 114], "belong": 108, "inf": 108, "masked_entri": 108, "piecewiselinearlr": [109, 110], "progressbar": [109, 110], "graphnetearlystop": [109, 110], "mseloss": [109, 112], "rmseloss": [109, 112], "logcoshloss": [109, 112], "crossentropyloss": [109, 112], "binarycrossentropyloss": [109, 112], "logcmk": [109, 112], "vonmisesfisherloss": [109, 112], "vonmisesfisher2dloss": [109, 112], "euclideandistanceloss": [109, 112], "vonmisesfisher3dloss": [109, 112], "collator_sequence_bucklet": [109, 113], "make_dataload": [109, 113], "make_train_validation_dataload": [109, 113], "get_predict": [109, 113], "save_result": [109, 113], "save_select": [109, 113], "weightfitt": [109, 114], "uniform": [109, 114], "bjoernlow": [109, 114], "mileston": 110, "last_epoch": 110, "_lrschedul": 110, "linearli": 110, "closest": 110, "vice": 110, "versa": 110, "wrap": [110, 120, 121], "stdout": 110, "get_lr": 110, "effect": [110, 131], "refresh_r": 110, "process_posit": 110, "tqdmprogressbar": 110, "progress": 110, "bar": 110, "customis": 110, "init_validation_tqdm": 110, "init_predict_tqdm": 110, "init_test_tqdm": 110, "init_train_tqdm": 110, "get_metr": 110, "on_train_epoch_start": 110, "previou": 110, "line": [110, 116], "behaviour": 110, "on_train_epoch_end": 110, "don": [110, 133], "duplciat": 110, "save_dir": 110, "earlystop": 110, "earli": [110, 116], "keyword": [110, 118, 123], "graphnet_model": 110, "on_validation_end": 110, "on_fit_end": 110, "runtim": [111, 133], "field": [111, 118, 120, 121, 123, 125], "azimuth_kei": 111, "zenith_kei": 111, "access": [111, 133], "azimiuth": 111, "return_el": 112, "elementwis": 112, "squar": 112, "error": [112, 128, 131], "root": [112, 133], "cosh": 112, "small": 112, "cross": 112, "entropi": 112, "num_class": 112, "softmax": 112, "ed": 112, "mit": 112, "licens": 112, "copyright": 112, "2019": 112, "ryabinin": 112, "permiss": 112, "herebi": 112, "person": 112, "copi": 112, "document": 112, "deal": 112, "right": 112, "modifi": 112, "publish": 112, "sublicens": 112, "sell": 112, "permit": 112, "whom": 112, "furnish": 112, "so": [112, 133], "condit": 112, "abov": [112, 114, 133], "shall": 112, "substanti": 112, "portion": 112, "THE": 112, "AS": 112, "warranti": 112, "OF": 112, "kind": 112, "OR": 112, "impli": 112, "BUT": 112, "TO": 112, "merchant": 112, "FOR": 112, "particular": [112, 131], "AND": 112, "noninfring": 112, "IN": 112, "NO": 112, "holder": 112, "BE": 112, "liabl": 112, "claim": 112, "damag": 112, "liabil": 112, "action": 112, "contract": 112, "tort": 112, "aris": 112, "WITH": 112, "_____________________": 112, "mryab": 112, "vmf_loss": 112, "master": 112, "py": [112, 133], "bessel": 112, "exponenti": 112, "ditto": 112, "iv": 112, "1812": 112, "04616": 112, "spite": 112, "suggest": 112, "sec": 112, "paper": 112, "chang": [112, 131], "correct": 112, "static": [112, 131], "ctx": 112, "grad_output": 112, "von": 112, "mise": 112, "fisher": 112, "log_cmk_exact": 112, "c_": 112, "exactli": [112, 128], "log_cmk_approx": 112, "approx": 112, "minu": 112, "sign": 112, "log_cmk": 112, "kappa_switch": 112, "diverg": 112, "700": 112, "float64": 112, "precis": 112, "unaccur": 112, "switch": 112, "2d": 112, "batch_split": 113, "bucket": 113, "cut": 113, "mini": 113, "explicitli": [113, 118, 123], "alwai": 113, "respect": 113, "database_indic": 113, "test_siz": 113, "node_level": 113, "tag": [113, 131, 133], "archiv": 113, "file_path": 113, "csv": [113, 120], "fit_weight": 114, "uniformweightfitt": 114, "bin": 114, "weight_nam": 114, "add_to_databas": 114, "db_count_norm": 114, "privat": 114, "_fit_weight": 114, "sql": 114, "desir": [114, 126], "np": 114, "happen": 114, "x_low": 114, "wherea": 114, "curv": 114, "base_config": [115, 117], "dataset_config": [115, 117], "training_config": [115, 117], "argumentpars": [115, 116], "rename_state_dict_entri": [115, 125], "is_gcd_fil": [115, 126], "is_i3_fil": [115, 126], "has_extens": [115, 126], "find_i3_fil": [115, 126], "has_icecube_packag": [115, 127], "has_torch_packag": [115, 127], "requires_icecub": [115, 127], "repeatfilt": [115, 128], "eps_lik": [115, 129], "consist": [116, 128, 131], "cli": 116, "pop_default": 116, "usag": 116, "command": [116, 133], "standard_argu": 116, "training_example_data_sqlit": 116, "patienc": 116, "narg": 116, "example_energy_reconstruction_model": 116, "num": 116, "fetch": 116, "with_standard_argu": 116, "baseconfig": [117, 118, 119, 120, 121, 123], "get_all_argument_valu": [117, 118], "save_dataset_config": [117, 120], "datasetconfigsavermeta": [117, 120], "datasetconfigsaverabcmeta": [117, 120], "save_model_config": [117, 121], "modelconfigsavermeta": [117, 121], "modelconfigsaverabc": [117, 121], "traverse_and_appli": [117, 122], "list_all_submodul": [117, 122], "get_all_grapnet_class": [117, 122], "is_graphnet_modul": [117, 122], "is_graphnet_class": [117, 122], "get_graphnet_class": [117, 122], "trainingconfig": [117, 123], "basemodel": [118, 120, 121], "validationerror": [118, 123], "pydantic_cor": [118, 123], "dump": [118, 120, 121], "yaml": [118, 119], "as_dict": [118, 120, 121], "model_computed_field": [118, 120, 121, 123], "classvar": [118, 120, 121, 123], "computedfieldinfo": [118, 120, 121, 123], "configdict": [118, 120, 121, 123], "conform": [118, 120, 121, 123], "pydant": [118, 120, 121, 123], "model_field": [118, 120, 121, 123], "fieldinfo": [118, 120, 121, 123], "metadata": [118, 120, 121, 123], "replac": [118, 120, 121, 123, 125], "__fields__": [118, 120, 121, 123], "v1": [118, 120, 121, 123, 133], "re": [119, 133], "save_config": 119, "dataconfig": 120, "transpar": [120, 121, 131], "reproduc": [120, 121], "session": [120, 121], "anoth": [120, 121], "still": 120, "train_select": 120, "unambigu": [120, 121], "annot": [120, 121, 123], "nonetyp": 120, "init_fn": [120, 121], "__init__": [120, 121, 133], "metaclass": [120, 121], "abcmeta": [120, 121], "datasetconfigsav": 120, "trainabl": 121, "hyperparamet": 121, "initialis": 121, "thu": 121, "modelconfigsav": 121, "fn_kwarg": 122, "structur": 122, "moduletyp": 122, "grapnet": 122, "lookup": 122, "transit": 125, "old_phras": 125, "new_phras": 125, "deepcopi": 125, "who": 125, "renam": 125, "phrase": 125, "system": [126, 133], "filenam": 126, "dir": 126, "test_funct": 127, "repeat": 128, "nb_repeats_allow": 128, "record": 128, "logrecord": 128, "clear": 128, "intuit": 128, "composit": 128, "loggeradapt": 128, "avoid": [128, 131], "clash": 128, "setlevel": 128, "deleg": 128, "critic": 128, "msg": 128, "warn": 128, "info": [128, 133], "debug": 128, "warning_onc": 128, "onc": 128, "handler": 128, "file_handl": 128, "filehandl": 128, "stream_handl": 128, "streamhandl": 128, "assort": 129, "ep": 129, "api": 130, "To": [131, 133], "sure": [131, 133], "smooth": 131, "guidelin": 131, "guid": 131, "encourag": 131, "contributor": 131, "discuss": 131, "bug": 131, "anyth": 131, "describ": 131, "would": 131, "yourself": 131, "ownership": 131, "prioriti": 131, "situat": 131, "lot": 131, "effort": 131, "go": 131, "outsid": 131, "scope": 131, "better": 131, "fork": 131, "repo": 131, "dedic": 131, "branch": [131, 133], "repositori": 131, "own": [131, 133], "autom": 131, "review": 131, "pep8": 131, "docstr": 131, "googl": 131, "style": 131, "hint": 131, "adher": 131, "pep": 131, "pylint": 131, "flake8": 131, "black": 131, "well": 131, "recommend": [131, 133], "mypi": 131, "pydocstyl": 131, "docformatt": 131, "commit": 131, "hook": 131, "instal": 131, "pip": [131, 133], "Then": 131, "everytim": 131, "pep257": 131, "concept": 131, "ljvmiranda921": 131, "io": 131, "notebook": 131, "2018": 131, "06": 131, "21": 131, "precommit": 131, "virtual": 133, "anaconda": 133, "prove": 133, "instruct": 133, "want": 133, "part": 133, "achiev": 133, "bash": 133, "shell": 133, "cvmf": 133, "opensciencegrid": 133, "py3": 133, "v4": 133, "sh": 133, "rhel_7_x86_64": 133, "metaproject": 133, "env": 133, "alia": 133, "script": 133, "everi": 133, "With": 133, "now": 133, "geometr": 133, "won": 133, "later": 133, "torch_cpu": 133, "txt": 133, "torch_gpu": 133, "unix": 133, "git": 133, "clone": 133, "usernam": 133, "cd": 133, "conda": 133, "gcc_linux": 133, "gxx_linux": 133, "libgcc": 133, "cudatoolkit": 133, "11": 133, "forg": 133, "box": 133, "compil": 133, "gcc": 133, "date": 133, "possibli": 133, "cuda": 133, "toolkit": 133, "recent": 133, "omit": 133, "newer": 133, "export": 133, "ld_library_path": 133, "anaconda3": 133, "miniconda3": 133, "bashrc": 133, "librari": 133, "rm": 133, "asogaard": 133, "latest": 133, "dc423315742c": 133, "01_icetrai": 133, "01_convert_i3_fil": 133, "2023": 133, "01": 133, "24": 133, "41": 133, "27": 133, "graphnet_20230124": 133, "134127": 133, "46": 133, "convert_i3_fil": 133, "ic86": 133, "thread": 133, "100": 133, "00": 133, "79": 133, "26": 133, "413": 133, "88it": 133, "specialis": 133, "push": 133, "vx": 133}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [60, 0, 0, "-", "deployment"], [69, 0, 0, "-", "exceptions"], [71, 0, 0, "-", "models"], [109, 0, 0, "-", "training"], [115, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "dataclasses"], [6, 0, 0, "-", "dataconverter"], [7, 0, 0, "-", "dataloader"], [8, 0, 0, "-", "datamodule"], [9, 0, 0, "-", "dataset"], [15, 0, 0, "-", "extractors"], [40, 0, 0, "-", "parquet"], [42, 0, 0, "-", "pre_configured"], [44, 0, 0, "-", "readers"], [49, 0, 0, "-", "sqlite"], [51, 0, 0, "-", "utilities"], [56, 0, 0, "-", "writers"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "LIQUIDO"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.dataclasses": [[5, 1, 1, "", "I3FileSet"], [5, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_files"], [5, 2, 1, "", "modules"], [5, 2, 1, "", "output_folder"]], "graphnet.data.dataconverter": [[6, 1, 1, "", "DataConverter"], [6, 4, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[6, 3, 1, "", "get_map_function"], [6, 3, 1, "", "merge_files"]], "graphnet.data.dataloader": [[7, 1, 1, "", "DataLoader"], [7, 4, 1, "", "collate_fn"], [7, 4, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[7, 3, 1, "", "from_dataset_config"]], "graphnet.data.datamodule": [[8, 1, 1, "", "GraphNeTDataModule"]], "graphnet.data.datamodule.GraphNeTDataModule": [[8, 3, 1, "", "prepare_data"], [8, 3, 1, "", "setup"], [8, 3, 1, "", "teardown"], [8, 5, 1, "", "test_dataloader"], [8, 5, 1, "", "train_dataloader"], [8, 5, 1, "", "val_dataloader"]], "graphnet.data.dataset": [[10, 0, 0, "-", "dataset"], [11, 0, 0, "-", "parquet"], [13, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[10, 1, 1, "", "Dataset"], [10, 1, 1, "", "EnsembleDataset"], [10, 4, 1, "", "load_module"], [10, 4, 1, "", "parse_graph_definition"], [10, 4, 1, "", "parse_labels"]], "graphnet.data.dataset.dataset.Dataset": [[10, 3, 1, "", "add_label"], [10, 3, 1, "", "concatenate"], [10, 3, 1, "", "from_config"], [10, 5, 1, "", "path"], [10, 3, 1, "", "query_table"], [10, 5, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[12, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[12, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[12, 3, 1, "", "query_table"]], "graphnet.data.dataset.sqlite": [[14, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[14, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[14, 3, 1, "", "query_table"]], "graphnet.data.extractors": [[16, 0, 0, "-", "combine_extractors"], [17, 0, 0, "-", "extractor"], [18, 0, 0, "-", "icecube"], [36, 0, 0, "-", "internal"], [38, 0, 0, "-", "liquido"]], "graphnet.data.extractors.combine_extractors": [[16, 1, 1, "", "CombinedExtractor"]], "graphnet.data.extractors.extractor": [[17, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[17, 5, 1, "", "name"]], "graphnet.data.extractors.icecube": [[19, 0, 0, "-", "i3extractor"], [20, 0, 0, "-", "i3featureextractor"], [21, 0, 0, "-", "i3genericextractor"], [22, 0, 0, "-", "i3hybridrecoextractor"], [23, 0, 0, "-", "i3ntmuonlabelsextractor"], [24, 0, 0, "-", "i3particleextractor"], [25, 0, 0, "-", "i3pisaextractor"], [26, 0, 0, "-", "i3quesoextractor"], [27, 0, 0, "-", "i3retroextractor"], [28, 0, 0, "-", "i3splinempeextractor"], [29, 0, 0, "-", "i3truthextractor"], [30, 0, 0, "-", "i3tumextractor"], [31, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[19, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[19, 3, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[20, 1, 1, "", "I3FeatureExtractor"], [20, 1, 1, "", "I3FeatureExtractorIceCube86"], [20, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [20, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [20, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[21, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[22, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[23, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[24, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[25, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[26, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[27, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[28, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[29, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[30, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[32, 0, 0, "-", "collections"], [33, 0, 0, "-", "frames"], [34, 0, 0, "-", "i3_filters"], [35, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[32, 4, 1, "", "flatten_nested_dictionary"], [32, 4, 1, "", "serialise"], [32, 4, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[33, 4, 1, "", "frame_is_montecarlo"], [33, 4, 1, "", "frame_is_noise"], [33, 4, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[34, 1, 1, "", "I3Filter"], [34, 1, 1, "", "I3FilterMask"], [34, 1, 1, "", "NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[35, 4, 1, "", "break_cyclic_recursion"], [35, 4, 1, "", "cast_object_to_pure_python"], [35, 4, 1, "", "cast_pulse_series_to_pure_python"], [35, 4, 1, "", "get_member_variables"], [35, 4, 1, "", "is_boost_class"], [35, 4, 1, "", "is_boost_enum"], [35, 4, 1, "", "is_icecube_class"], [35, 4, 1, "", "is_method"], [35, 4, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[37, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[37, 1, 1, "", "ParquetExtractor"]], "graphnet.data.extractors.liquido": [[39, 0, 0, "-", "h5_extractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[39, 1, 1, "", "H5Extractor"], [39, 1, 1, "", "H5HitExtractor"], [39, 1, 1, "", "H5TruthExtractor"]], "graphnet.data.parquet": [[41, 0, 0, "-", "deprecated_methods"]], "graphnet.data.parquet.deprecated_methods": [[41, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.pre_configured": [[43, 0, 0, "-", "dataconverters"]], "graphnet.data.pre_configured.dataconverters": [[43, 1, 1, "", "I3ToParquetConverter"], [43, 1, 1, "", "I3ToSQLiteConverter"], [43, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.readers": [[45, 0, 0, "-", "graphnet_file_reader"], [46, 0, 0, "-", "i3reader"], [47, 0, 0, "-", "internal_parquet_reader"], [48, 0, 0, "-", "liquido_reader"]], "graphnet.data.readers.graphnet_file_reader": [[45, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[45, 5, 1, "", "accepted_extractors"], [45, 5, 1, "", "accepted_file_extensions"], [45, 5, 1, "", "extracor_names"], [45, 3, 1, "", "find_files"], [45, 3, 1, "", "set_extractors"], [45, 3, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[46, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[46, 3, 1, "", "find_files"]], "graphnet.data.readers.internal_parquet_reader": [[47, 1, 1, "", "ParquetReader"]], "graphnet.data.readers.internal_parquet_reader.ParquetReader": [[47, 3, 1, "", "find_files"]], "graphnet.data.readers.liquido_reader": [[48, 1, 1, "", "LiquidOReader"]], "graphnet.data.readers.liquido_reader.LiquidOReader": [[48, 3, 1, "", "find_files"]], "graphnet.data.sqlite": [[50, 0, 0, "-", "deprecated_methods"]], "graphnet.data.sqlite.deprecated_methods": [[50, 1, 1, "", "SQLiteDataConverter"]], "graphnet.data.utilities": [[52, 0, 0, "-", "parquet_to_sqlite"], [53, 0, 0, "-", "random"], [54, 0, 0, "-", "sqlite_utilities"], [55, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.random": [[53, 4, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[54, 4, 1, "", "attach_index"], [54, 4, 1, "", "create_table"], [54, 4, 1, "", "create_table_and_save_to_sql"], [54, 4, 1, "", "database_exists"], [54, 4, 1, "", "database_table_exists"], [54, 4, 1, "", "get_primary_keys"], [54, 4, 1, "", "query_database"], [54, 4, 1, "", "run_sql_code"], [54, 4, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[55, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[55, 3, 1, "", "resolve"]], "graphnet.data.writers": [[57, 0, 0, "-", "graphnet_writer"], [58, 0, 0, "-", "parquet_writer"], [59, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[57, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[57, 5, 1, "", "expects_merged_dataframes"], [57, 5, 1, "", "file_extension"], [57, 3, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[58, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[58, 3, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[59, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[59, 3, 1, "", "merge_files"]], "graphnet.deployment": [[61, 0, 0, "-", "deployer"], [62, 0, 0, "-", "deployment_module"]], "graphnet.deployment.deployer": [[61, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[61, 3, 1, "", "run"]], "graphnet.deployment.deployment_module": [[62, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.icecube": [[66, 0, 0, "-", "cleaning_module"], [68, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[66, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.inference_module": [[68, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[70, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[70, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[72, 0, 0, "-", "coarsening"], [73, 0, 0, "-", "components"], [77, 0, 0, "-", "detector"], [82, 0, 0, "-", "gnn"], [90, 0, 0, "-", "graphs"], [99, 0, 0, "-", "model"], [100, 0, 0, "-", "rnn"], [102, 0, 0, "-", "standard_averaged_model"], [103, 0, 0, "-", "standard_model"], [104, 0, 0, "-", "task"], [108, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[72, 1, 1, "", "AttributeCoarsening"], [72, 1, 1, "", "Coarsening"], [72, 1, 1, "", "CustomDOMCoarsening"], [72, 1, 1, "", "DOMAndTimeWindowCoarsening"], [72, 1, 1, "", "DOMCoarsening"], [72, 4, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[72, 3, 1, "", "forward"], [72, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[74, 0, 0, "-", "embedding"], [75, 0, 0, "-", "layers"], [76, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[74, 1, 1, "", "FourierEncoder"], [74, 1, 1, "", "SinusoidalPosEmb"], [74, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[74, 3, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[74, 3, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[74, 3, 1, "", "forward"]], "graphnet.models.components.layers": [[75, 1, 1, "", "Attention_rel"], [75, 1, 1, "", "Block"], [75, 1, 1, "", "Block_rel"], [75, 1, 1, "", "DropPath"], [75, 1, 1, "", "DynEdgeConv"], [75, 1, 1, "", "DynTrans"], [75, 1, 1, "", "EdgeConvTito"], [75, 1, 1, "", "Mlp"]], "graphnet.models.components.layers.Attention_rel": [[75, 3, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[75, 3, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[75, 3, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[75, 3, 1, "", "extra_repr"], [75, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[75, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[75, 3, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[75, 3, 1, "", "forward"], [75, 3, 1, "", "message"], [75, 3, 1, "", "reset_parameters"]], "graphnet.models.components.layers.Mlp": [[75, 3, 1, "", "forward"]], "graphnet.models.components.pool": [[76, 4, 1, "", "group_by"], [76, 4, 1, "", "group_pulses_to_dom"], [76, 4, 1, "", "group_pulses_to_pmt"], [76, 4, 1, "", "min_pool"], [76, 4, 1, "", "min_pool_x"], [76, 4, 1, "", "std_pool"], [76, 4, 1, "", "std_pool_x"], [76, 4, 1, "", "sum_pool"], [76, 4, 1, "", "sum_pool_and_distribute"], [76, 4, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[78, 0, 0, "-", "detector"], [79, 0, 0, "-", "icecube"], [80, 0, 0, "-", "liquido"], [81, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[78, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[78, 3, 1, "", "feature_map"], [78, 3, 1, "", "forward"], [78, 5, 1, "", "geometry_table"], [78, 5, 1, "", "sensor_index_name"], [78, 5, 1, "", "sensor_position_names"], [78, 5, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[79, 1, 1, "", "IceCube86"], [79, 1, 1, "", "IceCubeDeepCore"], [79, 1, 1, "", "IceCubeKaggle"], [79, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[79, 3, 1, "", "feature_map"], [79, 2, 1, "", "geometry_table_path"], [79, 2, 1, "", "sensor_id_column"], [79, 2, 1, "", "string_id_column"], [79, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[79, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[79, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[79, 3, 1, "", "feature_map"], [79, 2, 1, "", "geometry_table_path"], [79, 2, 1, "", "sensor_id_column"], [79, 2, 1, "", "string_id_column"], [79, 2, 1, "", "xyz"]], "graphnet.models.detector.liquido": [[80, 1, 1, "", "LiquidO_v1"]], "graphnet.models.detector.liquido.LiquidO_v1": [[80, 3, 1, "", "feature_map"], [80, 2, 1, "", "geometry_table_path"], [80, 2, 1, "", "sensor_id_column"], [80, 2, 1, "", "string_id_column"], [80, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[81, 1, 1, "", "ORCA150"], [81, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.ORCA150": [[81, 3, 1, "", "feature_map"], [81, 2, 1, "", "geometry_table_path"], [81, 2, 1, "", "sensor_id_column"], [81, 2, 1, "", "string_id_column"], [81, 2, 1, "", "xyz"]], "graphnet.models.gnn": [[83, 0, 0, "-", "RNN_tito"], [84, 0, 0, "-", "convnet"], [85, 0, 0, "-", "dynedge"], [86, 0, 0, "-", "dynedge_jinst"], [87, 0, 0, "-", "dynedge_kaggle_tito"], [88, 0, 0, "-", "gnn"], [89, 0, 0, "-", "icemix"]], "graphnet.models.gnn.RNN_tito": [[83, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[83, 3, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[84, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[84, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[85, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[85, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[86, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[86, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[87, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[87, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[88, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[88, 3, 1, "", "forward"], [88, 5, 1, "", "nb_inputs"], [88, 5, 1, "", "nb_outputs"]], "graphnet.models.gnn.icemix": [[89, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[89, 3, 1, "", "forward"], [89, 3, 1, "", "no_weight_decay"]], "graphnet.models.graphs": [[91, 0, 0, "-", "edges"], [94, 0, 0, "-", "graph_definition"], [95, 0, 0, "-", "graphs"], [96, 0, 0, "-", "nodes"], [98, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[92, 0, 0, "-", "edges"], [93, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[92, 1, 1, "", "EdgeDefinition"], [92, 1, 1, "", "EuclideanEdges"], [92, 1, 1, "", "KNNEdges"], [92, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[92, 3, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[93, 1, 1, "", "MinkowskiKNNEdges"], [93, 4, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[94, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[94, 3, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[95, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[97, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[97, 1, 1, "", "IceMixNodes"], [97, 1, 1, "", "NodeAsDOMTimeSeries"], [97, 1, 1, "", "NodeDefinition"], [97, 1, 1, "", "NodesAsPulses"], [97, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[97, 3, 1, "", "forward"], [97, 5, 1, "", "nb_outputs"], [97, 3, 1, "", "set_number_of_inputs"], [97, 3, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[98, 4, 1, "", "cluster_summarize_with_percentiles"], [98, 4, 1, "", "gather_cluster_sequence"], [98, 4, 1, "", "ice_transparency"], [98, 4, 1, "", "identify_indices"], [98, 4, 1, "", "lex_sort"]], "graphnet.models.model": [[99, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[99, 3, 1, "", "extra_repr"], [99, 3, 1, "", "extra_repr_recursive"], [99, 3, 1, "", "from_config"], [99, 3, 1, "", "load"], [99, 3, 1, "", "load_state_dict"], [99, 3, 1, "", "save"], [99, 3, 1, "", "save_state_dict"], [99, 3, 1, "", "set_verbose_print_recursively"], [99, 2, 1, "", "verbose_print"]], "graphnet.models.rnn": [[101, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[101, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[101, 3, 1, "", "clean_up_data_object"], [101, 3, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[102, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[102, 3, 1, "", "load_state_dict"], [102, 3, 1, "", "on_train_end"], [102, 3, 1, "", "optimizer_step"], [102, 3, 1, "", "training_step"], [102, 3, 1, "", "validation_step"]], "graphnet.models.standard_model": [[103, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[103, 3, 1, "", "compute_loss"], [103, 3, 1, "", "configure_optimizers"], [103, 3, 1, "", "fit"], [103, 3, 1, "", "forward"], [103, 3, 1, "", "inference"], [103, 3, 1, "", "predict"], [103, 3, 1, "", "predict_as_dataframe"], [103, 5, 1, "", "prediction_labels"], [103, 3, 1, "", "shared_step"], [103, 5, 1, "", "target_labels"], [103, 3, 1, "", "train"], [103, 3, 1, "", "training_step"], [103, 3, 1, "", "validation_step"]], "graphnet.models.task": [[105, 0, 0, "-", "classification"], [106, 0, 0, "-", "reconstruction"], [107, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[105, 1, 1, "", "BinaryClassificationTask"], [105, 1, 1, "", "BinaryClassificationTaskLogits"], [105, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[105, 2, 1, "", "default_prediction_labels"], [105, 2, 1, "", "default_target_labels"], [105, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[105, 2, 1, "", "default_prediction_labels"], [105, 2, 1, "", "default_target_labels"], [105, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[106, 1, 1, "", "AzimuthReconstruction"], [106, 1, 1, "", "AzimuthReconstructionWithKappa"], [106, 1, 1, "", "DirectionReconstructionWithKappa"], [106, 1, 1, "", "EnergyReconstruction"], [106, 1, 1, "", "EnergyReconstructionWithPower"], [106, 1, 1, "", "EnergyReconstructionWithUncertainty"], [106, 1, 1, "", "EnergyTCReconstruction"], [106, 1, 1, "", "InelasticityReconstruction"], [106, 1, 1, "", "PositionReconstruction"], [106, 1, 1, "", "TimeReconstruction"], [106, 1, 1, "", "VertexReconstruction"], [106, 1, 1, "", "ZenithReconstruction"], [106, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[106, 2, 1, "", "default_prediction_labels"], [106, 2, 1, "", "default_target_labels"], [106, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[106, 2, 1, "", "default_prediction_labels"], [106, 2, 1, "", "default_target_labels"], [106, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[106, 2, 1, "", "default_prediction_labels"], [106, 2, 1, "", "default_target_labels"], [106, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[106, 2, 1, "", "default_prediction_labels"], [106, 2, 1, "", "default_target_labels"], [106, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[106, 2, 1, "", "default_prediction_labels"], [106, 2, 1, "", "default_target_labels"], [106, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[106, 2, 1, "", "default_prediction_labels"], [106, 2, 1, "", "default_target_labels"], [106, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[106, 2, 1, "", "default_prediction_labels"], [106, 2, 1, "", "default_target_labels"], [106, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[106, 2, 1, "", "default_prediction_labels"], [106, 2, 1, "", "default_target_labels"], [106, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[106, 2, 1, "", "default_prediction_labels"], [106, 2, 1, "", "default_target_labels"], [106, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[106, 2, 1, "", "default_prediction_labels"], [106, 2, 1, "", "default_target_labels"], [106, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[106, 2, 1, "", "default_prediction_labels"], [106, 2, 1, "", "default_target_labels"], [106, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[106, 2, 1, "", "default_prediction_labels"], [106, 2, 1, "", "default_target_labels"], [106, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[106, 2, 1, "", "default_prediction_labels"], [106, 2, 1, "", "default_target_labels"], [106, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[107, 1, 1, "", "IdentityTask"], [107, 1, 1, "", "LearnedTask"], [107, 1, 1, "", "StandardFlowTask"], [107, 1, 1, "", "StandardLearnedTask"], [107, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[107, 5, 1, "", "default_prediction_labels"], [107, 5, 1, "", "default_target_labels"], [107, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[107, 3, 1, "", "compute_loss"], [107, 3, 1, "", "forward"], [107, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[107, 3, 1, "", "compute_loss"], [107, 3, 1, "", "forward"], [107, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[107, 3, 1, "", "compute_loss"], [107, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[107, 5, 1, "", "default_prediction_labels"], [107, 5, 1, "", "default_target_labels"], [107, 3, 1, "", "inference"], [107, 5, 1, "", "nb_inputs"], [107, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[108, 4, 1, "", "array_to_sequence"], [108, 4, 1, "", "calculate_distance_matrix"], [108, 4, 1, "", "calculate_xyzt_homophily"], [108, 4, 1, "", "knn_graph_batch"]], "graphnet.training": [[110, 0, 0, "-", "callbacks"], [111, 0, 0, "-", "labels"], [112, 0, 0, "-", "loss_functions"], [113, 0, 0, "-", "utils"], [114, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[110, 1, 1, "", "GraphnetEarlyStopping"], [110, 1, 1, "", "PiecewiseLinearLR"], [110, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[110, 3, 1, "", "on_fit_end"], [110, 3, 1, "", "on_train_epoch_end"], [110, 3, 1, "", "on_validation_end"], [110, 3, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[110, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[110, 3, 1, "", "get_metrics"], [110, 3, 1, "", "init_predict_tqdm"], [110, 3, 1, "", "init_test_tqdm"], [110, 3, 1, "", "init_train_tqdm"], [110, 3, 1, "", "init_validation_tqdm"], [110, 3, 1, "", "on_train_epoch_end"], [110, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[111, 1, 1, "", "Direction"], [111, 1, 1, "", "Label"]], "graphnet.training.labels.Label": [[111, 5, 1, "", "key"]], "graphnet.training.loss_functions": [[112, 1, 1, "", "BinaryCrossEntropyLoss"], [112, 1, 1, "", "CrossEntropyLoss"], [112, 1, 1, "", "EuclideanDistanceLoss"], [112, 1, 1, "", "LogCMK"], [112, 1, 1, "", "LogCoshLoss"], [112, 1, 1, "", "LossFunction"], [112, 1, 1, "", "MSELoss"], [112, 1, 1, "", "RMSELoss"], [112, 1, 1, "", "VonMisesFisher2DLoss"], [112, 1, 1, "", "VonMisesFisher3DLoss"], [112, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[112, 3, 1, "", "backward"], [112, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[112, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[112, 3, 1, "", "log_cmk"], [112, 3, 1, "", "log_cmk_approx"], [112, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[113, 4, 1, "", "collate_fn"], [113, 1, 1, "", "collator_sequence_buckleting"], [113, 4, 1, "", "get_predictions"], [113, 4, 1, "", "make_dataloader"], [113, 4, 1, "", "make_train_validation_dataloader"], [113, 4, 1, "", "save_results"], [113, 4, 1, "", "save_selection"]], "graphnet.training.weight_fitting": [[114, 1, 1, "", "BjoernLow"], [114, 1, 1, "", "Uniform"], [114, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[114, 3, 1, "", "fit"]], "graphnet.utilities": [[116, 0, 0, "-", "argparse"], [117, 0, 0, "-", "config"], [124, 0, 0, "-", "decorators"], [125, 0, 0, "-", "deprecation_tools"], [126, 0, 0, "-", "filesys"], [127, 0, 0, "-", "imports"], [128, 0, 0, "-", "logging"], [129, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[116, 1, 1, "", "ArgumentParser"], [116, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[116, 2, 1, "", "standard_arguments"], [116, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[116, 3, 1, "", "contains"], [116, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[118, 0, 0, "-", "base_config"], [119, 0, 0, "-", "configurable"], [120, 0, 0, "-", "dataset_config"], [121, 0, 0, "-", "model_config"], [122, 0, 0, "-", "parsing"], [123, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[118, 1, 1, "", "BaseConfig"], [118, 4, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[118, 3, 1, "", "as_dict"], [118, 3, 1, "", "dump"], [118, 3, 1, "", "load"], [118, 2, 1, "", "model_computed_fields"], [118, 2, 1, "", "model_config"], [118, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[119, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[119, 5, 1, "", "config"], [119, 3, 1, "", "from_config"], [119, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[120, 1, 1, "", "DatasetConfig"], [120, 1, 1, "", "DatasetConfigSaverABCMeta"], [120, 1, 1, "", "DatasetConfigSaverMeta"], [120, 4, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[120, 3, 1, "", "as_dict"], [120, 2, 1, "", "features"], [120, 2, 1, "", "graph_definition"], [120, 2, 1, "", "index_column"], [120, 2, 1, "", "labels"], [120, 2, 1, "", "loss_weight_column"], [120, 2, 1, "", "loss_weight_default_value"], [120, 2, 1, "", "loss_weight_table"], [120, 2, 1, "", "model_computed_fields"], [120, 2, 1, "", "model_config"], [120, 2, 1, "", "model_fields"], [120, 2, 1, "", "node_truth"], [120, 2, 1, "", "node_truth_table"], [120, 2, 1, "", "path"], [120, 2, 1, "", "pulsemaps"], [120, 2, 1, "", "seed"], [120, 2, 1, "", "selection"], [120, 2, 1, "", "string_selection"], [120, 2, 1, "", "truth"], [120, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[121, 1, 1, "", "ModelConfig"], [121, 1, 1, "", "ModelConfigSaverABC"], [121, 1, 1, "", "ModelConfigSaverMeta"], [121, 4, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[121, 2, 1, "", "arguments"], [121, 3, 1, "", "as_dict"], [121, 2, 1, "", "class_name"], [121, 2, 1, "", "model_computed_fields"], [121, 2, 1, "", "model_config"], [121, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[122, 4, 1, "", "get_all_grapnet_classes"], [122, 4, 1, "", "get_graphnet_classes"], [122, 4, 1, "", "is_graphnet_class"], [122, 4, 1, "", "is_graphnet_module"], [122, 4, 1, "", "list_all_submodules"], [122, 4, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[123, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[123, 2, 1, "", "dataloader"], [123, 2, 1, "", "early_stopping_patience"], [123, 2, 1, "", "fit"], [123, 2, 1, "", "model_computed_fields"], [123, 2, 1, "", "model_config"], [123, 2, 1, "", "model_fields"], [123, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[125, 4, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[126, 4, 1, "", "find_i3_files"], [126, 4, 1, "", "has_extension"], [126, 4, 1, "", "is_gcd_file"], [126, 4, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[127, 4, 1, "", "has_icecube_package"], [127, 4, 1, "", "has_torch_package"], [127, 4, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[128, 1, 1, "", "Logger"], [128, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[128, 3, 1, "", "critical"], [128, 3, 1, "", "debug"], [128, 3, 1, "", "error"], [128, 5, 1, "", "file_handlers"], [128, 5, 1, "", "handlers"], [128, 3, 1, "", "info"], [128, 3, 1, "", "setLevel"], [128, 5, 1, "", "stream_handlers"], [128, 3, 1, "", "warning"], [128, 3, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[128, 3, 1, "", "filter"], [128, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[129, 4, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 132], "impact": [0, 132], "usag": [0, 132], "acknowledg": [0, 132], "api": 1, "constant": [2, 4], "data": 3, "dataclass": 5, "dataconvert": [6, 43], "dataload": 7, "datamodul": 8, "dataset": [9, 10], "parquet": [11, 40], "parquet_dataset": 12, "sqlite": [13, 49], "sqlite_dataset": 14, "extractor": [15, 17], "combine_extractor": 16, "icecub": [18, 65, 79], "i3extractor": 19, "i3featureextractor": 20, "i3genericextractor": 21, "i3hybridrecoextractor": 22, "i3ntmuonlabelsextractor": 23, "i3particleextractor": 24, "i3pisaextractor": 25, "i3quesoextractor": 26, "i3retroextractor": 27, "i3splinempeextractor": 28, "i3truthextractor": 29, "i3tumextractor": 30, "util": [31, 51, 98, 108, 113, 115], "collect": 32, "frame": 33, "i3_filt": 34, "type": 35, "intern": 36, "parquet_extractor": 37, "liquido": [38, 80], "h5_extractor": 39, "deprecated_method": [41, 50, 64], "pre_configur": 42, "reader": 44, "graphnet_file_read": 45, "i3read": 46, "internal_parquet_read": 47, "liquido_read": 48, "parquet_to_sqlit": 52, "random": 53, "sqlite_util": 54, "string_selection_resolv": 55, "writer": 56, "graphnet_writ": 57, "parquet_writ": 58, "sqlite_writ": 59, "deploy": [60, 61], "deployment_modul": 62, "i3modul": 63, "cleaning_modul": 66, "i3deploy": 67, "inference_modul": 68, "except": [69, 70], "model": [71, 99], "coarsen": 72, "compon": 73, "embed": 74, "layer": 75, "pool": 76, "detector": [77, 78], "prometheu": 81, "gnn": [82, 88], "rnn_tito": 83, "convnet": 84, "dynedg": 85, "dynedge_jinst": 86, "dynedge_kaggle_tito": 87, "icemix": 89, "graph": [90, 95], "edg": [91, 92], "minkowski": 93, "graph_definit": 94, "node": [96, 97], "rnn": 100, "node_rnn": 101, "standard_averaged_model": 102, "standard_model": 103, "task": [104, 107], "classif": 105, "reconstruct": 106, "train": 109, "callback": 110, "label": 111, "loss_funct": 112, "weight_fit": 114, "argpars": 116, "config": 117, "base_config": 118, "configur": 119, "dataset_config": 120, "model_config": 121, "pars": 122, "training_config": 123, "decor": 124, "deprecation_tool": 125, "filesi": 126, "import": 127, "log": 128, "math": 129, "src": 130, "contribut": 131, "github": 131, "issu": 131, "pull": 131, "request": 131, "convent": 131, "code": 131, "qualiti": 131, "instal": 133, "icetrai": 133, "stand": 133, "alon": 133, "run": 133, "docker": 133}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"], [132, "about"]], "Impact": [[0, "impact"], [132, "impact"]], "Usage": [[0, "usage"], [132, "usage"]], "Acknowledgements": [[0, "acknowledgements"], [132, "acknowledgements"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "dataclasses": [[5, "module-graphnet.data.dataclasses"]], "dataconverter": [[6, "module-graphnet.data.dataconverter"]], "dataloader": [[7, "module-graphnet.data.dataloader"]], "datamodule": [[8, "module-graphnet.data.datamodule"]], "dataset": [[9, "module-graphnet.data.dataset"], [10, "module-graphnet.data.dataset.dataset"]], "parquet": [[11, "module-graphnet.data.dataset.parquet"], [40, "module-graphnet.data.parquet"]], "parquet_dataset": [[12, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "sqlite": [[13, "module-graphnet.data.dataset.sqlite"], [49, "module-graphnet.data.sqlite"]], "sqlite_dataset": [[14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "extractors": [[15, "module-graphnet.data.extractors"]], "combine_extractors": [[16, "module-graphnet.data.extractors.combine_extractors"]], "extractor": [[17, "module-graphnet.data.extractors.extractor"]], "icecube": [[18, "module-graphnet.data.extractors.icecube"], [65, "icecube"], [79, "module-graphnet.models.detector.icecube"]], "i3extractor": [[19, "module-graphnet.data.extractors.icecube.i3extractor"]], "i3featureextractor": [[20, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor": [[21, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3hybridrecoextractor": [[22, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3ntmuonlabelsextractor": [[23, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor": [[24, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor": [[25, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor": [[26, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3retroextractor": [[27, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeextractor": [[28, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor": [[29, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor": [[30, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "utilities": [[31, "module-graphnet.data.extractors.icecube.utilities"], [51, "module-graphnet.data.utilities"], [115, "module-graphnet.utilities"]], "collections": [[32, "module-graphnet.data.extractors.icecube.utilities.collections"]], "frames": [[33, "module-graphnet.data.extractors.icecube.utilities.frames"]], "i3_filters": [[34, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "types": [[35, "module-graphnet.data.extractors.icecube.utilities.types"]], "internal": [[36, "module-graphnet.data.extractors.internal"]], "parquet_extractor": [[37, "module-graphnet.data.extractors.internal.parquet_extractor"]], "liquido": [[38, "module-graphnet.data.extractors.liquido"], [80, "module-graphnet.models.detector.liquido"]], "h5_extractor": [[39, "module-graphnet.data.extractors.liquido.h5_extractor"]], "deprecated_methods": [[41, "module-graphnet.data.parquet.deprecated_methods"], [50, "module-graphnet.data.sqlite.deprecated_methods"], [64, "deprecated-methods"]], "pre_configured": [[42, "module-graphnet.data.pre_configured"]], "dataconverters": [[43, "module-graphnet.data.pre_configured.dataconverters"]], "readers": [[44, "module-graphnet.data.readers"]], "graphnet_file_reader": [[45, "module-graphnet.data.readers.graphnet_file_reader"]], "i3reader": [[46, "module-graphnet.data.readers.i3reader"]], "internal_parquet_reader": [[47, "module-graphnet.data.readers.internal_parquet_reader"]], "liquido_reader": [[48, "module-graphnet.data.readers.liquido_reader"]], "parquet_to_sqlite": [[52, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[53, "module-graphnet.data.utilities.random"]], "sqlite_utilities": [[54, "module-graphnet.data.utilities.sqlite_utilities"]], "string_selection_resolver": [[55, "module-graphnet.data.utilities.string_selection_resolver"]], "writers": [[56, "module-graphnet.data.writers"]], "graphnet_writer": [[57, "module-graphnet.data.writers.graphnet_writer"]], "parquet_writer": [[58, "module-graphnet.data.writers.parquet_writer"]], "sqlite_writer": [[59, "module-graphnet.data.writers.sqlite_writer"]], "deployment": [[60, "module-graphnet.deployment"]], "deployer": [[61, "module-graphnet.deployment.deployer"]], "deployment_module": [[62, "module-graphnet.deployment.deployment_module"]], "i3modules": [[63, "i3modules"]], "cleaning_module": [[66, "module-graphnet.deployment.icecube.cleaning_module"]], "i3deployer": [[67, "i3deployer"]], "inference_module": [[68, "module-graphnet.deployment.icecube.inference_module"]], "exceptions": [[69, "module-graphnet.exceptions"], [70, "module-graphnet.exceptions.exceptions"]], "models": [[71, "module-graphnet.models"]], "coarsening": [[72, "module-graphnet.models.coarsening"]], "components": [[73, "module-graphnet.models.components"]], "embedding": [[74, "module-graphnet.models.components.embedding"]], "layers": [[75, "module-graphnet.models.components.layers"]], "pool": [[76, "module-graphnet.models.components.pool"]], "detector": [[77, "module-graphnet.models.detector"], [78, "module-graphnet.models.detector.detector"]], "prometheus": [[81, "module-graphnet.models.detector.prometheus"]], "gnn": [[82, "module-graphnet.models.gnn"], [88, "module-graphnet.models.gnn.gnn"]], "RNN_tito": [[83, "module-graphnet.models.gnn.RNN_tito"]], "convnet": [[84, "module-graphnet.models.gnn.convnet"]], "dynedge": [[85, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[86, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedge_kaggle_tito": [[87, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "icemix": [[89, "module-graphnet.models.gnn.icemix"]], "graphs": [[90, "module-graphnet.models.graphs"], [95, "module-graphnet.models.graphs.graphs"]], "edges": [[91, "module-graphnet.models.graphs.edges"], [92, "module-graphnet.models.graphs.edges.edges"]], "minkowski": [[93, "module-graphnet.models.graphs.edges.minkowski"]], "graph_definition": [[94, "module-graphnet.models.graphs.graph_definition"]], "nodes": [[96, "module-graphnet.models.graphs.nodes"], [97, "module-graphnet.models.graphs.nodes.nodes"]], "utils": [[98, "module-graphnet.models.graphs.utils"], [108, "module-graphnet.models.utils"], [113, "module-graphnet.training.utils"]], "model": [[99, "module-graphnet.models.model"]], "rnn": [[100, "module-graphnet.models.rnn"]], "node_rnn": [[101, "module-graphnet.models.rnn.node_rnn"]], "standard_averaged_model": [[102, "module-graphnet.models.standard_averaged_model"]], "standard_model": [[103, "module-graphnet.models.standard_model"]], "task": [[104, "module-graphnet.models.task"], [107, "module-graphnet.models.task.task"]], "classification": [[105, "module-graphnet.models.task.classification"]], "reconstruction": [[106, "module-graphnet.models.task.reconstruction"]], "training": [[109, "module-graphnet.training"]], "callbacks": [[110, "module-graphnet.training.callbacks"]], "labels": [[111, "module-graphnet.training.labels"]], "loss_functions": [[112, "module-graphnet.training.loss_functions"]], "weight_fitting": [[114, "module-graphnet.training.weight_fitting"]], "argparse": [[116, "module-graphnet.utilities.argparse"]], "config": [[117, "module-graphnet.utilities.config"]], "base_config": [[118, "module-graphnet.utilities.config.base_config"]], "configurable": [[119, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[120, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[121, "module-graphnet.utilities.config.model_config"]], "parsing": [[122, "module-graphnet.utilities.config.parsing"]], "training_config": [[123, "module-graphnet.utilities.config.training_config"]], "decorators": [[124, "module-graphnet.utilities.decorators"]], "deprecation_tools": [[125, "module-graphnet.utilities.deprecation_tools"]], "filesys": [[126, "module-graphnet.utilities.filesys"]], "imports": [[127, "module-graphnet.utilities.imports"]], "logging": [[128, "module-graphnet.utilities.logging"]], "maths": [[129, "module-graphnet.utilities.maths"]], "src": [[130, "src"]], "Contribute": [[131, "contribute"]], "GitHub issues": [[131, "github-issues"]], "Pull requests": [[131, "pull-requests"]], "Conventions": [[131, "conventions"]], "Code quality": [[131, "code-quality"]], "Install": [[133, "install"]], "Installing with IceTray": [[133, "installing-with-icetray"]], "Installing stand-alone": [[133, "installing-stand-alone"]], "Running in Docker": [[133, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.dataclasses"], [6, "module-graphnet.data.dataconverter"], [7, "module-graphnet.data.dataloader"], [8, "module-graphnet.data.datamodule"], [9, "module-graphnet.data.dataset"], [10, "module-graphnet.data.dataset.dataset"], [11, "module-graphnet.data.dataset.parquet"], [12, "module-graphnet.data.dataset.parquet.parquet_dataset"], [13, "module-graphnet.data.dataset.sqlite"], [14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"], [15, "module-graphnet.data.extractors"], [16, "module-graphnet.data.extractors.combine_extractors"], [17, "module-graphnet.data.extractors.extractor"], [18, "module-graphnet.data.extractors.icecube"], [19, "module-graphnet.data.extractors.icecube.i3extractor"], [20, "module-graphnet.data.extractors.icecube.i3featureextractor"], [21, "module-graphnet.data.extractors.icecube.i3genericextractor"], [22, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"], [23, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"], [24, "module-graphnet.data.extractors.icecube.i3particleextractor"], [25, "module-graphnet.data.extractors.icecube.i3pisaextractor"], [26, "module-graphnet.data.extractors.icecube.i3quesoextractor"], [27, "module-graphnet.data.extractors.icecube.i3retroextractor"], [28, "module-graphnet.data.extractors.icecube.i3splinempeextractor"], [29, "module-graphnet.data.extractors.icecube.i3truthextractor"], [30, "module-graphnet.data.extractors.icecube.i3tumextractor"], [31, "module-graphnet.data.extractors.icecube.utilities"], [32, "module-graphnet.data.extractors.icecube.utilities.collections"], [33, "module-graphnet.data.extractors.icecube.utilities.frames"], [34, "module-graphnet.data.extractors.icecube.utilities.i3_filters"], [35, "module-graphnet.data.extractors.icecube.utilities.types"], [36, "module-graphnet.data.extractors.internal"], [37, "module-graphnet.data.extractors.internal.parquet_extractor"], [38, "module-graphnet.data.extractors.liquido"], [39, "module-graphnet.data.extractors.liquido.h5_extractor"], [40, "module-graphnet.data.parquet"], [41, "module-graphnet.data.parquet.deprecated_methods"], [42, "module-graphnet.data.pre_configured"], [43, "module-graphnet.data.pre_configured.dataconverters"], [44, "module-graphnet.data.readers"], [45, "module-graphnet.data.readers.graphnet_file_reader"], [46, "module-graphnet.data.readers.i3reader"], [47, "module-graphnet.data.readers.internal_parquet_reader"], [48, "module-graphnet.data.readers.liquido_reader"], [49, "module-graphnet.data.sqlite"], [50, "module-graphnet.data.sqlite.deprecated_methods"], [51, "module-graphnet.data.utilities"], [52, "module-graphnet.data.utilities.parquet_to_sqlite"], [53, "module-graphnet.data.utilities.random"], [54, "module-graphnet.data.utilities.sqlite_utilities"], [55, "module-graphnet.data.utilities.string_selection_resolver"], [56, "module-graphnet.data.writers"], [57, "module-graphnet.data.writers.graphnet_writer"], [58, "module-graphnet.data.writers.parquet_writer"], [59, "module-graphnet.data.writers.sqlite_writer"], [60, "module-graphnet.deployment"], [61, "module-graphnet.deployment.deployer"], [62, "module-graphnet.deployment.deployment_module"], [66, "module-graphnet.deployment.icecube.cleaning_module"], [68, "module-graphnet.deployment.icecube.inference_module"], [69, "module-graphnet.exceptions"], [70, "module-graphnet.exceptions.exceptions"], [71, "module-graphnet.models"], [72, "module-graphnet.models.coarsening"], [73, "module-graphnet.models.components"], [74, "module-graphnet.models.components.embedding"], [75, "module-graphnet.models.components.layers"], [76, "module-graphnet.models.components.pool"], [77, "module-graphnet.models.detector"], [78, "module-graphnet.models.detector.detector"], [79, "module-graphnet.models.detector.icecube"], [80, "module-graphnet.models.detector.liquido"], [81, "module-graphnet.models.detector.prometheus"], [82, "module-graphnet.models.gnn"], [83, "module-graphnet.models.gnn.RNN_tito"], [84, "module-graphnet.models.gnn.convnet"], [85, "module-graphnet.models.gnn.dynedge"], [86, "module-graphnet.models.gnn.dynedge_jinst"], [87, "module-graphnet.models.gnn.dynedge_kaggle_tito"], [88, "module-graphnet.models.gnn.gnn"], [89, "module-graphnet.models.gnn.icemix"], [90, "module-graphnet.models.graphs"], [91, "module-graphnet.models.graphs.edges"], [92, "module-graphnet.models.graphs.edges.edges"], [93, "module-graphnet.models.graphs.edges.minkowski"], [94, "module-graphnet.models.graphs.graph_definition"], [95, "module-graphnet.models.graphs.graphs"], [96, "module-graphnet.models.graphs.nodes"], [97, "module-graphnet.models.graphs.nodes.nodes"], [98, "module-graphnet.models.graphs.utils"], [99, "module-graphnet.models.model"], [100, "module-graphnet.models.rnn"], [101, "module-graphnet.models.rnn.node_rnn"], [102, "module-graphnet.models.standard_averaged_model"], [103, "module-graphnet.models.standard_model"], [104, "module-graphnet.models.task"], [105, "module-graphnet.models.task.classification"], [106, "module-graphnet.models.task.reconstruction"], [107, "module-graphnet.models.task.task"], [108, "module-graphnet.models.utils"], [109, "module-graphnet.training"], [110, "module-graphnet.training.callbacks"], [111, "module-graphnet.training.labels"], [112, "module-graphnet.training.loss_functions"], [113, "module-graphnet.training.utils"], [114, "module-graphnet.training.weight_fitting"], [115, "module-graphnet.utilities"], [116, "module-graphnet.utilities.argparse"], [117, "module-graphnet.utilities.config"], [118, "module-graphnet.utilities.config.base_config"], [119, "module-graphnet.utilities.config.configurable"], [120, "module-graphnet.utilities.config.dataset_config"], [121, "module-graphnet.utilities.config.model_config"], [122, "module-graphnet.utilities.config.parsing"], [123, "module-graphnet.utilities.config.training_config"], [124, "module-graphnet.utilities.decorators"], [125, "module-graphnet.utilities.deprecation_tools"], [126, "module-graphnet.utilities.filesys"], [127, "module-graphnet.utilities.imports"], [128, "module-graphnet.utilities.logging"], [129, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "liquido (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.LIQUIDO"]], "liquido (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.LIQUIDO"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "i3fileset (class in graphnet.data.dataclasses)": [[5, "graphnet.data.dataclasses.I3FileSet"]], "settings (class in graphnet.data.dataclasses)": [[5, "graphnet.data.dataclasses.Settings"]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[5, "graphnet.data.dataclasses.I3FileSet.gcd_file"]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.gcd_file"]], "graphnet.data.dataclasses": [[5, "module-graphnet.data.dataclasses"]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[5, "graphnet.data.dataclasses.I3FileSet.i3_file"]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.i3_files"]], "modules (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.modules"]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.output_folder"]], "dataconverter (class in graphnet.data.dataconverter)": [[6, "graphnet.data.dataconverter.DataConverter"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[6, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[6, "module-graphnet.data.dataconverter"]], "init_global_index() (in module graphnet.data.dataconverter)": [[6, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[6, "graphnet.data.dataconverter.DataConverter.merge_files"]], "dataloader (class in graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.DataLoader"]], "collate_fn() (in module graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.collate_fn"]], "do_shuffle() (in module graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.do_shuffle"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[7, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "graphnet.data.dataloader": [[7, "module-graphnet.data.dataloader"]], "graphnetdatamodule (class in graphnet.data.datamodule)": [[8, "graphnet.data.datamodule.GraphNeTDataModule"]], "graphnet.data.datamodule": [[8, "module-graphnet.data.datamodule"]], "prepare_data() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.prepare_data"]], "setup() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.setup"]], "teardown() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.teardown"]], "test_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.test_dataloader"]], "train_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.train_dataloader"]], "val_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.val_dataloader"]], "graphnet.data.dataset": [[9, "module-graphnet.data.dataset"]], "dataset (class in graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.Dataset"]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.EnsembleDataset"]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[10, "graphnet.data.dataset.dataset.Dataset.add_label"]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[10, "graphnet.data.dataset.dataset.Dataset.concatenate"]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[10, "graphnet.data.dataset.dataset.Dataset.from_config"]], "graphnet.data.dataset.dataset": [[10, "module-graphnet.data.dataset.dataset"]], "load_module() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.load_module"]], "parse_graph_definition() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.parse_graph_definition"]], "parse_labels() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.parse_labels"]], "path (graphnet.data.dataset.dataset.dataset property)": [[10, "graphnet.data.dataset.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[10, "graphnet.data.dataset.dataset.Dataset.query_table"]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[10, "graphnet.data.dataset.dataset.Dataset.truth_table"]], "graphnet.data.dataset.parquet": [[11, "module-graphnet.data.dataset.parquet"]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[12, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[12, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[12, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table"]], "graphnet.data.dataset.sqlite": [[13, "module-graphnet.data.dataset.sqlite"]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[14, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[14, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "graphnet.data.extractors": [[15, "module-graphnet.data.extractors"]], "combinedextractor (class in graphnet.data.extractors.combine_extractors)": [[16, "graphnet.data.extractors.combine_extractors.CombinedExtractor"]], "graphnet.data.extractors.combine_extractors": [[16, "module-graphnet.data.extractors.combine_extractors"]], "extractor (class in graphnet.data.extractors.extractor)": [[17, "graphnet.data.extractors.extractor.Extractor"]], "graphnet.data.extractors.extractor": [[17, "module-graphnet.data.extractors.extractor"]], "name (graphnet.data.extractors.extractor.extractor property)": [[17, "graphnet.data.extractors.extractor.Extractor.name"]], "graphnet.data.extractors.icecube": [[18, "module-graphnet.data.extractors.icecube"]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[19, "graphnet.data.extractors.icecube.i3extractor.I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor": [[19, "module-graphnet.data.extractors.icecube.i3extractor"]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[19, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd"]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[20, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3featureextractor": [[20, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[21, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3genericextractor": [[21, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[22, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[22, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[23, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[23, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[24, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[24, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[25, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[25, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[26, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[26, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[27, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[27, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[28, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[28, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[29, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[29, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[30, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[30, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "graphnet.data.extractors.icecube.utilities": [[31, "module-graphnet.data.extractors.icecube.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[32, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.icecube.utilities.collections": [[32, "module-graphnet.data.extractors.icecube.utilities.collections"]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[32, "graphnet.data.extractors.icecube.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[32, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[33, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[33, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[33, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.frames": [[33, "module-graphnet.data.extractors.icecube.utilities.frames"]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[34, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter"]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[34, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask"]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[34, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[34, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.get_member_variables"]], "graphnet.data.extractors.icecube.utilities.types": [[35, "module-graphnet.data.extractors.icecube.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[35, "graphnet.data.extractors.icecube.utilities.types.is_type"]], "graphnet.data.extractors.internal": [[36, "module-graphnet.data.extractors.internal"]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[37, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[37, "module-graphnet.data.extractors.internal.parquet_extractor"]], "graphnet.data.extractors.liquido": [[38, "module-graphnet.data.extractors.liquido"]], "h5extractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[39, "graphnet.data.extractors.liquido.h5_extractor.H5Extractor"]], "h5hitextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[39, "graphnet.data.extractors.liquido.h5_extractor.H5HitExtractor"]], "h5truthextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[39, "graphnet.data.extractors.liquido.h5_extractor.H5TruthExtractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[39, "module-graphnet.data.extractors.liquido.h5_extractor"]], "graphnet.data.parquet": [[40, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.deprecated_methods)": [[41, "graphnet.data.parquet.deprecated_methods.ParquetDataConverter"]], "graphnet.data.parquet.deprecated_methods": [[41, "module-graphnet.data.parquet.deprecated_methods"]], "graphnet.data.pre_configured": [[42, "module-graphnet.data.pre_configured"]], "i3toparquetconverter (class in graphnet.data.pre_configured.dataconverters)": [[43, "graphnet.data.pre_configured.dataconverters.I3ToParquetConverter"]], "i3tosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[43, "graphnet.data.pre_configured.dataconverters.I3ToSQLiteConverter"]], "parquettosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[43, "graphnet.data.pre_configured.dataconverters.ParquetToSQLiteConverter"]], "graphnet.data.pre_configured.dataconverters": [[43, "module-graphnet.data.pre_configured.dataconverters"]], "graphnet.data.readers": [[44, "module-graphnet.data.readers"]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[45, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader"]], "accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[45, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors"]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[45, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions"]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[45, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names"]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[45, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files"]], "graphnet.data.readers.graphnet_file_reader": [[45, "module-graphnet.data.readers.graphnet_file_reader"]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[45, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors"]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[45, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files"]], "i3reader (class in graphnet.data.readers.i3reader)": [[46, "graphnet.data.readers.i3reader.I3Reader"]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[46, "graphnet.data.readers.i3reader.I3Reader.find_files"]], "graphnet.data.readers.i3reader": [[46, "module-graphnet.data.readers.i3reader"]], "parquetreader (class in graphnet.data.readers.internal_parquet_reader)": [[47, "graphnet.data.readers.internal_parquet_reader.ParquetReader"]], "find_files() (graphnet.data.readers.internal_parquet_reader.parquetreader method)": [[47, "graphnet.data.readers.internal_parquet_reader.ParquetReader.find_files"]], "graphnet.data.readers.internal_parquet_reader": [[47, "module-graphnet.data.readers.internal_parquet_reader"]], "liquidoreader (class in graphnet.data.readers.liquido_reader)": [[48, "graphnet.data.readers.liquido_reader.LiquidOReader"]], "find_files() (graphnet.data.readers.liquido_reader.liquidoreader method)": [[48, "graphnet.data.readers.liquido_reader.LiquidOReader.find_files"]], "graphnet.data.readers.liquido_reader": [[48, "module-graphnet.data.readers.liquido_reader"]], "graphnet.data.sqlite": [[49, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.deprecated_methods)": [[50, "graphnet.data.sqlite.deprecated_methods.SQLiteDataConverter"]], "graphnet.data.sqlite.deprecated_methods": [[50, "module-graphnet.data.sqlite.deprecated_methods"]], "graphnet.data.utilities": [[51, "module-graphnet.data.utilities"]], "graphnet.data.utilities.parquet_to_sqlite": [[52, "module-graphnet.data.utilities.parquet_to_sqlite"]], "graphnet.data.utilities.random": [[53, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[53, "graphnet.data.utilities.random.pairwise_shuffle"]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[54, "graphnet.data.utilities.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[54, "graphnet.data.utilities.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[54, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[54, "graphnet.data.utilities.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[54, "graphnet.data.utilities.sqlite_utilities.database_table_exists"]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[54, "graphnet.data.utilities.sqlite_utilities.get_primary_keys"]], "graphnet.data.utilities.sqlite_utilities": [[54, "module-graphnet.data.utilities.sqlite_utilities"]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[54, "graphnet.data.utilities.sqlite_utilities.query_database"]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[54, "graphnet.data.utilities.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[54, "graphnet.data.utilities.sqlite_utilities.save_to_sql"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[55, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[55, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[55, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.data.writers": [[56, "module-graphnet.data.writers"]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[57, "graphnet.data.writers.graphnet_writer.GraphNeTWriter"]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[57, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes"]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[57, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension"]], "graphnet.data.writers.graphnet_writer": [[57, "module-graphnet.data.writers.graphnet_writer"]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[57, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files"]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[58, "graphnet.data.writers.parquet_writer.ParquetWriter"]], "graphnet.data.writers.parquet_writer": [[58, "module-graphnet.data.writers.parquet_writer"]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[58, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files"]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[59, "graphnet.data.writers.sqlite_writer.SQLiteWriter"]], "graphnet.data.writers.sqlite_writer": [[59, "module-graphnet.data.writers.sqlite_writer"]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[59, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files"]], "graphnet.deployment": [[60, "module-graphnet.deployment"]], "deployer (class in graphnet.deployment.deployer)": [[61, "graphnet.deployment.deployer.Deployer"]], "graphnet.deployment.deployer": [[61, "module-graphnet.deployment.deployer"]], "run() (graphnet.deployment.deployer.deployer method)": [[61, "graphnet.deployment.deployer.Deployer.run"]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[62, "graphnet.deployment.deployment_module.DeploymentModule"]], "graphnet.deployment.deployment_module": [[62, "module-graphnet.deployment.deployment_module"]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[66, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule"]], "graphnet.deployment.icecube.cleaning_module": [[66, "module-graphnet.deployment.icecube.cleaning_module"]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[68, "graphnet.deployment.icecube.inference_module.I3InferenceModule"]], "graphnet.deployment.icecube.inference_module": [[68, "module-graphnet.deployment.icecube.inference_module"]], "graphnet.exceptions": [[69, "module-graphnet.exceptions"]], "columnmissingexception": [[70, "graphnet.exceptions.exceptions.ColumnMissingException"]], "graphnet.exceptions.exceptions": [[70, "module-graphnet.exceptions.exceptions"]], "graphnet.models": [[71, "module-graphnet.models"]], "attributecoarsening (class in graphnet.models.coarsening)": [[72, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[72, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[72, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[72, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[72, "graphnet.models.coarsening.DOMCoarsening"]], "forward() (graphnet.models.coarsening.coarsening method)": [[72, "graphnet.models.coarsening.Coarsening.forward"]], "graphnet.models.coarsening": [[72, "module-graphnet.models.coarsening"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[72, "graphnet.models.coarsening.Coarsening.reduce_options"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[72, "graphnet.models.coarsening.unbatch_edge_index"]], "graphnet.models.components": [[73, "module-graphnet.models.components"]], "fourierencoder (class in graphnet.models.components.embedding)": [[74, "graphnet.models.components.embedding.FourierEncoder"]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[74, "graphnet.models.components.embedding.SinusoidalPosEmb"]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[74, "graphnet.models.components.embedding.SpacetimeEncoder"]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[74, "graphnet.models.components.embedding.FourierEncoder.forward"]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[74, "graphnet.models.components.embedding.SinusoidalPosEmb.forward"]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[74, "graphnet.models.components.embedding.SpacetimeEncoder.forward"]], "graphnet.models.components.embedding": [[74, "module-graphnet.models.components.embedding"]], "attention_rel (class in graphnet.models.components.layers)": [[75, "graphnet.models.components.layers.Attention_rel"]], "block (class in graphnet.models.components.layers)": [[75, "graphnet.models.components.layers.Block"]], "block_rel (class in graphnet.models.components.layers)": [[75, "graphnet.models.components.layers.Block_rel"]], "droppath (class in graphnet.models.components.layers)": [[75, "graphnet.models.components.layers.DropPath"]], "dynedgeconv (class in graphnet.models.components.layers)": [[75, "graphnet.models.components.layers.DynEdgeConv"]], "dyntrans (class in graphnet.models.components.layers)": [[75, "graphnet.models.components.layers.DynTrans"]], "edgeconvtito (class in graphnet.models.components.layers)": [[75, "graphnet.models.components.layers.EdgeConvTito"]], "mlp (class in graphnet.models.components.layers)": [[75, "graphnet.models.components.layers.Mlp"]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[75, "graphnet.models.components.layers.DropPath.extra_repr"]], "forward() (graphnet.models.components.layers.attention_rel method)": [[75, "graphnet.models.components.layers.Attention_rel.forward"]], "forward() (graphnet.models.components.layers.block method)": [[75, "graphnet.models.components.layers.Block.forward"]], "forward() (graphnet.models.components.layers.block_rel method)": [[75, "graphnet.models.components.layers.Block_rel.forward"]], "forward() (graphnet.models.components.layers.droppath method)": [[75, "graphnet.models.components.layers.DropPath.forward"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[75, "graphnet.models.components.layers.DynEdgeConv.forward"]], "forward() (graphnet.models.components.layers.dyntrans method)": [[75, "graphnet.models.components.layers.DynTrans.forward"]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[75, "graphnet.models.components.layers.EdgeConvTito.forward"]], "forward() (graphnet.models.components.layers.mlp method)": [[75, "graphnet.models.components.layers.Mlp.forward"]], "graphnet.models.components.layers": [[75, "module-graphnet.models.components.layers"]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[75, "graphnet.models.components.layers.EdgeConvTito.message"]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[75, "graphnet.models.components.layers.EdgeConvTito.reset_parameters"]], "graphnet.models.components.pool": [[76, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[76, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[76, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[76, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[76, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[76, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[76, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[76, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[76, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[76, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[76, "graphnet.models.components.pool.sum_pool_x"]], "graphnet.models.detector": [[77, "module-graphnet.models.detector"]], "detector (class in graphnet.models.detector.detector)": [[78, "graphnet.models.detector.detector.Detector"]], "feature_map() (graphnet.models.detector.detector.detector method)": [[78, "graphnet.models.detector.detector.Detector.feature_map"]], "forward() (graphnet.models.detector.detector.detector method)": [[78, "graphnet.models.detector.detector.Detector.forward"]], "geometry_table (graphnet.models.detector.detector.detector property)": [[78, "graphnet.models.detector.detector.Detector.geometry_table"]], "graphnet.models.detector.detector": [[78, "module-graphnet.models.detector.detector"]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[78, "graphnet.models.detector.detector.Detector.sensor_index_name"]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[78, "graphnet.models.detector.detector.Detector.sensor_position_names"]], "string_index_name (graphnet.models.detector.detector.detector property)": [[78, "graphnet.models.detector.detector.Detector.string_index_name"]], "icecube86 (class in graphnet.models.detector.icecube)": [[79, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[79, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[79, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[79, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[79, "graphnet.models.detector.icecube.IceCube86.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[79, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[79, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[79, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map"]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[79, "graphnet.models.detector.icecube.IceCube86.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[79, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path"]], "graphnet.models.detector.icecube": [[79, "module-graphnet.models.detector.icecube"]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[79, "graphnet.models.detector.icecube.IceCube86.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[79, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[79, "graphnet.models.detector.icecube.IceCube86.string_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[79, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column"]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[79, "graphnet.models.detector.icecube.IceCube86.xyz"]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[79, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz"]], "liquido_v1 (class in graphnet.models.detector.liquido)": [[80, "graphnet.models.detector.liquido.LiquidO_v1"]], "feature_map() (graphnet.models.detector.liquido.liquido_v1 method)": [[80, "graphnet.models.detector.liquido.LiquidO_v1.feature_map"]], "geometry_table_path (graphnet.models.detector.liquido.liquido_v1 attribute)": [[80, "graphnet.models.detector.liquido.LiquidO_v1.geometry_table_path"]], "graphnet.models.detector.liquido": [[80, "module-graphnet.models.detector.liquido"]], "sensor_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[80, "graphnet.models.detector.liquido.LiquidO_v1.sensor_id_column"]], "string_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[80, "graphnet.models.detector.liquido.LiquidO_v1.string_id_column"]], "xyz (graphnet.models.detector.liquido.liquido_v1 attribute)": [[80, "graphnet.models.detector.liquido.LiquidO_v1.xyz"]], "orca150 (class in graphnet.models.detector.prometheus)": [[81, "graphnet.models.detector.prometheus.ORCA150"]], "prometheus (class in graphnet.models.detector.prometheus)": [[81, "graphnet.models.detector.prometheus.Prometheus"]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[81, "graphnet.models.detector.prometheus.ORCA150.feature_map"]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[81, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path"]], "graphnet.models.detector.prometheus": [[81, "module-graphnet.models.detector.prometheus"]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[81, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column"]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[81, "graphnet.models.detector.prometheus.ORCA150.string_id_column"]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[81, "graphnet.models.detector.prometheus.ORCA150.xyz"]], "graphnet.models.gnn": [[82, "module-graphnet.models.gnn"]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[83, "graphnet.models.gnn.RNN_tito.RNN_TITO"]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[83, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward"]], "graphnet.models.gnn.rnn_tito": [[83, "module-graphnet.models.gnn.RNN_tito"]], "convnet (class in graphnet.models.gnn.convnet)": [[84, "graphnet.models.gnn.convnet.ConvNet"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[84, "graphnet.models.gnn.convnet.ConvNet.forward"]], "graphnet.models.gnn.convnet": [[84, "module-graphnet.models.gnn.convnet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[85, "graphnet.models.gnn.dynedge.DynEdge"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[85, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "graphnet.models.gnn.dynedge": [[85, "module-graphnet.models.gnn.dynedge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[86, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[86, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "graphnet.models.gnn.dynedge_jinst": [[86, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[87, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO"]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[87, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[87, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "gnn (class in graphnet.models.gnn.gnn)": [[88, "graphnet.models.gnn.gnn.GNN"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[88, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn.gnn": [[88, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[88, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[88, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "deepice (class in graphnet.models.gnn.icemix)": [[89, "graphnet.models.gnn.icemix.DeepIce"]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[89, "graphnet.models.gnn.icemix.DeepIce.forward"]], "graphnet.models.gnn.icemix": [[89, "module-graphnet.models.gnn.icemix"]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[89, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay"]], "graphnet.models.graphs": [[90, "module-graphnet.models.graphs"]], "graphnet.models.graphs.edges": [[91, "module-graphnet.models.graphs.edges"]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[92, "graphnet.models.graphs.edges.edges.EdgeDefinition"]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[92, "graphnet.models.graphs.edges.edges.EuclideanEdges"]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[92, "graphnet.models.graphs.edges.edges.KNNEdges"]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[92, "graphnet.models.graphs.edges.edges.RadialEdges"]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[92, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward"]], "graphnet.models.graphs.edges.edges": [[92, "module-graphnet.models.graphs.edges.edges"]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[93, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges"]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[93, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat"]], "graphnet.models.graphs.edges.minkowski": [[93, "module-graphnet.models.graphs.edges.minkowski"]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[94, "graphnet.models.graphs.graph_definition.GraphDefinition"]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[94, "graphnet.models.graphs.graph_definition.GraphDefinition.forward"]], "graphnet.models.graphs.graph_definition": [[94, "module-graphnet.models.graphs.graph_definition"]], "knngraph (class in graphnet.models.graphs.graphs)": [[95, "graphnet.models.graphs.graphs.KNNGraph"]], "graphnet.models.graphs.graphs": [[95, "module-graphnet.models.graphs.graphs"]], "graphnet.models.graphs.nodes": [[96, "module-graphnet.models.graphs.nodes"]], "icemixnodes (class in graphnet.models.graphs.nodes.nodes)": [[97, "graphnet.models.graphs.nodes.nodes.IceMixNodes"]], "nodeasdomtimeseries (class in graphnet.models.graphs.nodes.nodes)": [[97, "graphnet.models.graphs.nodes.nodes.NodeAsDOMTimeSeries"]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[97, "graphnet.models.graphs.nodes.nodes.NodeDefinition"]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[97, "graphnet.models.graphs.nodes.nodes.NodesAsPulses"]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[97, "graphnet.models.graphs.nodes.nodes.PercentileClusters"]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[97, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward"]], "graphnet.models.graphs.nodes.nodes": [[97, "module-graphnet.models.graphs.nodes.nodes"]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[97, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs"]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[97, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs"]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[97, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names"]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[98, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles"]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[98, "graphnet.models.graphs.utils.gather_cluster_sequence"]], "graphnet.models.graphs.utils": [[98, "module-graphnet.models.graphs.utils"]], "ice_transparency() (in module graphnet.models.graphs.utils)": [[98, "graphnet.models.graphs.utils.ice_transparency"]], "identify_indices() (in module graphnet.models.graphs.utils)": [[98, "graphnet.models.graphs.utils.identify_indices"]], "lex_sort() (in module graphnet.models.graphs.utils)": [[98, "graphnet.models.graphs.utils.lex_sort"]], "model (class in graphnet.models.model)": [[99, "graphnet.models.model.Model"]], "extra_repr() (graphnet.models.model.model method)": [[99, "graphnet.models.model.Model.extra_repr"]], "extra_repr_recursive() (graphnet.models.model.model method)": [[99, "graphnet.models.model.Model.extra_repr_recursive"]], "from_config() (graphnet.models.model.model class method)": [[99, "graphnet.models.model.Model.from_config"]], "graphnet.models.model": [[99, "module-graphnet.models.model"]], "load() (graphnet.models.model.model class method)": [[99, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[99, "graphnet.models.model.Model.load_state_dict"]], "save() (graphnet.models.model.model method)": [[99, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[99, "graphnet.models.model.Model.save_state_dict"]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[99, "graphnet.models.model.Model.set_verbose_print_recursively"]], "verbose_print (graphnet.models.model.model attribute)": [[99, "graphnet.models.model.Model.verbose_print"]], "graphnet.models.rnn": [[100, "module-graphnet.models.rnn"]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[101, "graphnet.models.rnn.node_rnn.Node_RNN"]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[101, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object"]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[101, "graphnet.models.rnn.node_rnn.Node_RNN.forward"]], "graphnet.models.rnn.node_rnn": [[101, "module-graphnet.models.rnn.node_rnn"]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[102, "graphnet.models.standard_averaged_model.StandardAveragedModel"]], "graphnet.models.standard_averaged_model": [[102, "module-graphnet.models.standard_averaged_model"]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[102, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict"]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[102, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end"]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[102, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step"]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[102, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step"]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[102, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step"]], "standardmodel (class in graphnet.models.standard_model)": [[103, "graphnet.models.standard_model.StandardModel"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[103, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[103, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "fit() (graphnet.models.standard_model.standardmodel method)": [[103, "graphnet.models.standard_model.StandardModel.fit"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[103, "graphnet.models.standard_model.StandardModel.forward"]], "graphnet.models.standard_model": [[103, "module-graphnet.models.standard_model"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[103, "graphnet.models.standard_model.StandardModel.inference"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[103, "graphnet.models.standard_model.StandardModel.predict"]], "predict_as_dataframe() (graphnet.models.standard_model.standardmodel method)": [[103, "graphnet.models.standard_model.StandardModel.predict_as_dataframe"]], "prediction_labels (graphnet.models.standard_model.standardmodel property)": [[103, "graphnet.models.standard_model.StandardModel.prediction_labels"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[103, "graphnet.models.standard_model.StandardModel.shared_step"]], "target_labels (graphnet.models.standard_model.standardmodel property)": [[103, "graphnet.models.standard_model.StandardModel.target_labels"]], "train() (graphnet.models.standard_model.standardmodel method)": [[103, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[103, "graphnet.models.standard_model.StandardModel.training_step"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[103, "graphnet.models.standard_model.StandardModel.validation_step"]], "graphnet.models.task": [[104, "module-graphnet.models.task"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[105, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[105, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[105, "graphnet.models.task.classification.MulticlassClassificationTask"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[105, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[105, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[105, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[105, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels"]], "graphnet.models.task.classification": [[105, "module-graphnet.models.task.classification"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[105, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[105, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[106, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[106, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[106, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[106, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[106, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[106, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[106, "graphnet.models.task.reconstruction.EnergyTCReconstruction"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[106, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[106, "graphnet.models.task.reconstruction.PositionReconstruction"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[106, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[106, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[106, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[106, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[106, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[106, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[106, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[106, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[106, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[106, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[106, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[106, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[106, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[106, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[106, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[106, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels"]], "graphnet.models.task.reconstruction": [[106, "module-graphnet.models.task.reconstruction"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[106, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[106, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[106, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[106, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[106, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[106, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[106, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "identitytask (class in graphnet.models.task.task)": [[107, "graphnet.models.task.task.IdentityTask"]], "learnedtask (class in graphnet.models.task.task)": [[107, "graphnet.models.task.task.LearnedTask"]], "standardflowtask (class in graphnet.models.task.task)": [[107, "graphnet.models.task.task.StandardFlowTask"]], "standardlearnedtask (class in graphnet.models.task.task)": [[107, "graphnet.models.task.task.StandardLearnedTask"]], "task (class in graphnet.models.task.task)": [[107, "graphnet.models.task.task.Task"]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[107, "graphnet.models.task.task.LearnedTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardflowtask method)": [[107, "graphnet.models.task.task.StandardFlowTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[107, "graphnet.models.task.task.StandardLearnedTask.compute_loss"]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[107, "graphnet.models.task.task.IdentityTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.task.task property)": [[107, "graphnet.models.task.task.Task.default_prediction_labels"]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[107, "graphnet.models.task.task.IdentityTask.default_target_labels"]], "default_target_labels (graphnet.models.task.task.task property)": [[107, "graphnet.models.task.task.Task.default_target_labels"]], "forward() (graphnet.models.task.task.learnedtask method)": [[107, "graphnet.models.task.task.LearnedTask.forward"]], "forward() (graphnet.models.task.task.standardflowtask method)": [[107, "graphnet.models.task.task.StandardFlowTask.forward"]], "graphnet.models.task.task": [[107, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[107, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[107, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[107, "graphnet.models.task.task.LearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[107, "graphnet.models.task.task.StandardLearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[107, "graphnet.models.task.task.Task.nb_inputs"]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[107, "graphnet.models.task.task.StandardFlowTask.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[107, "graphnet.models.task.task.Task.train_eval"]], "array_to_sequence() (in module graphnet.models.utils)": [[108, "graphnet.models.utils.array_to_sequence"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[108, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[108, "graphnet.models.utils.calculate_xyzt_homophily"]], "graphnet.models.utils": [[108, "module-graphnet.models.utils"]], "knn_graph_batch() (in module graphnet.models.utils)": [[108, "graphnet.models.utils.knn_graph_batch"]], "graphnet.training": [[109, "module-graphnet.training"]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[110, "graphnet.training.callbacks.GraphnetEarlyStopping"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[110, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[110, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[110, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[110, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[110, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[110, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[110, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[110, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[110, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[110, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end"]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[110, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[110, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[110, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[110, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end"]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[110, "graphnet.training.callbacks.GraphnetEarlyStopping.setup"]], "direction (class in graphnet.training.labels)": [[111, "graphnet.training.labels.Direction"]], "label (class in graphnet.training.labels)": [[111, "graphnet.training.labels.Label"]], "graphnet.training.labels": [[111, "module-graphnet.training.labels"]], "key (graphnet.training.labels.label property)": [[111, "graphnet.training.labels.Label.key"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.CrossEntropyLoss"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.MSELoss"]], "rmseloss (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[112, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[112, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[112, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[112, "graphnet.training.loss_functions.LossFunction.forward"]], "graphnet.training.loss_functions": [[112, "module-graphnet.training.loss_functions"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[112, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[112, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[112, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "collate_fn() (in module graphnet.training.utils)": [[113, "graphnet.training.utils.collate_fn"]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[113, "graphnet.training.utils.collator_sequence_buckleting"]], "get_predictions() (in module graphnet.training.utils)": [[113, "graphnet.training.utils.get_predictions"]], "graphnet.training.utils": [[113, "module-graphnet.training.utils"]], "make_dataloader() (in module graphnet.training.utils)": [[113, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[113, "graphnet.training.utils.make_train_validation_dataloader"]], "save_results() (in module graphnet.training.utils)": [[113, "graphnet.training.utils.save_results"]], "save_selection() (in module graphnet.training.utils)": [[113, "graphnet.training.utils.save_selection"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[114, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[114, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[114, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[114, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[114, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[115, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[116, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[116, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[116, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[116, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[116, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[116, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[116, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[117, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[118, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[118, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[118, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[118, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[118, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[118, "graphnet.utilities.config.base_config.BaseConfig.load"]], "model_computed_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[118, "graphnet.utilities.config.base_config.BaseConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[118, "graphnet.utilities.config.base_config.BaseConfig.model_config"]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[118, "graphnet.utilities.config.base_config.BaseConfig.model_fields"]], "configurable (class in graphnet.utilities.config.configurable)": [[119, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[119, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[119, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[119, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[119, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta"]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta"]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition"]], "graphnet.utilities.config.dataset_config": [[120, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.labels"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "model_computed_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config"]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[120, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[120, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[121, "graphnet.utilities.config.model_config.ModelConfig"]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[121, "graphnet.utilities.config.model_config.ModelConfigSaverABC"]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[121, "graphnet.utilities.config.model_config.ModelConfigSaverMeta"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[121, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[121, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[121, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[121, "module-graphnet.utilities.config.model_config"]], "model_computed_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[121, "graphnet.utilities.config.model_config.ModelConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[121, "graphnet.utilities.config.model_config.ModelConfig.model_config"]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[121, "graphnet.utilities.config.model_config.ModelConfig.model_fields"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[121, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[122, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[122, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[122, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[122, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[122, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[122, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[122, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[123, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[123, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[123, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[123, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[123, "module-graphnet.utilities.config.training_config"]], "model_computed_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[123, "graphnet.utilities.config.training_config.TrainingConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[123, "graphnet.utilities.config.training_config.TrainingConfig.model_config"]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[123, "graphnet.utilities.config.training_config.TrainingConfig.model_fields"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[123, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[124, "module-graphnet.utilities.decorators"]], "graphnet.utilities.deprecation_tools": [[125, "module-graphnet.utilities.deprecation_tools"]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[125, "graphnet.utilities.deprecation_tools.rename_state_dict_entries"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[126, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[126, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[126, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[126, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[126, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[127, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[127, "graphnet.utilities.imports.has_icecube_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[127, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[127, "graphnet.utilities.imports.requires_icecube"]], "logger (class in graphnet.utilities.logging)": [[128, "graphnet.utilities.logging.Logger"]], "repeatfilter (class in graphnet.utilities.logging)": [[128, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.logger method)": [[128, "graphnet.utilities.logging.Logger.critical"]], "debug() (graphnet.utilities.logging.logger method)": [[128, "graphnet.utilities.logging.Logger.debug"]], "error() (graphnet.utilities.logging.logger method)": [[128, "graphnet.utilities.logging.Logger.error"]], "file_handlers (graphnet.utilities.logging.logger property)": [[128, "graphnet.utilities.logging.Logger.file_handlers"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[128, "graphnet.utilities.logging.RepeatFilter.filter"]], "graphnet.utilities.logging": [[128, "module-graphnet.utilities.logging"]], "handlers (graphnet.utilities.logging.logger property)": [[128, "graphnet.utilities.logging.Logger.handlers"]], "info() (graphnet.utilities.logging.logger method)": [[128, "graphnet.utilities.logging.Logger.info"]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[128, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed"]], "setlevel() (graphnet.utilities.logging.logger method)": [[128, "graphnet.utilities.logging.Logger.setLevel"]], "stream_handlers (graphnet.utilities.logging.logger property)": [[128, "graphnet.utilities.logging.Logger.stream_handlers"]], "warning() (graphnet.utilities.logging.logger method)": [[128, "graphnet.utilities.logging.Logger.warning"]], "warning_once() (graphnet.utilities.logging.logger method)": [[128, "graphnet.utilities.logging.Logger.warning_once"]], "eps_like() (in module graphnet.utilities.maths)": [[129, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[129, "module-graphnet.utilities.maths"]]}})