Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pipeline", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.pisa", "api/graphnet.pisa.fitting", "api/graphnet.pisa.plotting", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pipeline.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.pisa.rst", "api/graphnet.pisa.fitting.rst", "api/graphnet.pisa.plotting.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "sqlite", "sqlite_dataset", "extractors", "extractor", "icecube", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "parquet", "deprecated_methods", "pipeline", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "deployment", "deployer", "deployment_module", "i3modules", "deprecated_methods", "icecube", "cleaning_module", "i3deployer", "inference_module", "models", "coarsening", "components", "embedding", "layers", "pool", "detector", "detector", "icecube", "prometheus", "gnn", "RNN_tito", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "rnn", "node_rnn", "standard_model", "task", "classification", "reconstruction", "task", "utils", "pisa", "fitting", "plotting", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 60, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125], "i": [0, 1, 8, 10, 12, 14, 16, 18, 20, 31, 32, 33, 34, 36, 39, 42, 44, 47, 48, 49, 53, 55, 60, 62, 64, 66, 68, 75, 76, 82, 84, 87, 88, 91, 95, 96, 97, 100, 102, 103, 104, 105, 106, 108, 110, 113, 114, 115, 117, 118, 119, 120, 123, 124, 125], "an": [0, 16, 34, 36, 37, 39, 42, 44, 49, 84, 91, 104, 118, 120, 123, 124, 125], "open": [0, 41, 123, 124], "sourc": [0, 4, 5, 6, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 60, 62, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124], "python": [0, 1, 6, 16, 17, 20, 31, 34, 123, 124, 125], "framework": [0, 124], "aim": [0, 1, 123, 124], "provid": [0, 1, 6, 10, 12, 14, 60, 63, 84, 89, 104, 123, 124, 125], "high": [0, 124], "qualiti": [0, 124], "user": [0, 63, 102, 124, 125], "friendli": [0, 51, 53, 124], "end": [0, 1, 102, 124], "function": [0, 6, 7, 10, 18, 34, 47, 48, 60, 62, 64, 68, 71, 72, 84, 88, 89, 96, 97, 99, 100, 104, 105, 107, 112, 113, 114, 117, 118, 119, 121, 124], "perform": [0, 8, 64, 66, 67, 68, 73, 74, 76, 78, 91, 92, 94, 96, 105, 124], "reconstruct": [0, 1, 19, 21, 22, 26, 27, 29, 37, 54, 63, 78, 91, 93, 96, 124], "task": [0, 1, 8, 63, 92, 94, 95, 104, 123, 124], "neutrino": [0, 1, 18, 42, 67, 78, 88, 99, 124], "telescop": [0, 1, 124], "us": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 16, 18, 23, 28, 30, 31, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 53, 54, 56, 60, 62, 63, 66, 67, 68, 70, 74, 76, 77, 78, 82, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 119, 120, 123, 124, 125], "graph": [0, 1, 7, 10, 12, 14, 63, 67, 68, 70, 81, 82, 83, 84, 86, 87, 88, 91, 96, 97, 103, 105, 123, 124], "neural": [0, 1, 90, 124], "network": [0, 1, 75, 90, 124], "gnn": [0, 1, 37, 63, 74, 75, 76, 77, 78, 84, 91, 92, 124, 125], "make": [0, 6, 106, 112, 113, 123, 124, 125], "fast": [0, 124, 125], "easi": [0, 124], "train": [0, 1, 6, 8, 9, 49, 54, 60, 84, 92, 102, 103, 104, 105, 106, 108, 112, 113, 115, 122, 124, 125], "complex": [0, 63, 124], "model": [0, 1, 54, 56, 60, 62, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 108, 110, 112, 113, 115, 122, 124, 125], "can": [0, 1, 8, 10, 12, 14, 16, 20, 23, 46, 60, 66, 68, 84, 99, 100, 106, 108, 110, 112, 113, 123, 124, 125], "event": [0, 1, 6, 8, 10, 12, 14, 25, 36, 39, 44, 46, 48, 49, 53, 60, 68, 74, 84, 88, 96, 97, 99, 104, 105, 106, 112, 124], "state": [0, 56, 74, 91, 117, 124], "art": [0, 124], "arbitrari": [0, 124], "detector": [0, 1, 28, 63, 71, 72, 84, 85, 87, 92, 124], "configur": [0, 1, 8, 10, 38, 39, 56, 63, 89, 92, 99, 107, 109, 110, 112, 113, 115, 120, 124], "infer": [0, 1, 37, 54, 56, 60, 62, 92, 96, 124, 125], "time": [0, 4, 48, 64, 68, 74, 83, 87, 88, 91, 95, 120, 124, 125], "ar": [0, 1, 4, 10, 12, 14, 18, 20, 33, 34, 41, 46, 49, 51, 53, 55, 60, 68, 74, 76, 78, 80, 81, 82, 84, 85, 86, 88, 91, 94, 99, 104, 106, 112, 113, 123, 124, 125], "order": [0, 31, 41, 55, 64, 87, 97, 124], "magnitud": [0, 124], "faster": [0, 124], "than": [0, 7, 96, 105, 120, 124], "tradit": [0, 124], "techniqu": [0, 124], "common": [0, 1, 104, 112, 113, 116, 119, 124], "ml": [0, 1, 124], "develop": [0, 1, 123, 124, 125], "physicist": [0, 1, 124], "wish": [0, 55, 123, 124], "tool": [0, 1, 124], "research": [0, 124], "By": [0, 36, 39, 42, 44, 46, 96, 124], "unit": [0, 6, 83, 119, 123, 124], "both": [0, 20, 96, 100, 124], "group": [0, 68, 124], "increas": [0, 102, 124], "longev": [0, 124], "usabl": [0, 124], "individu": [0, 10, 12, 14, 68, 76, 97, 124], "code": [0, 28, 36, 44, 48, 84, 112, 113, 124], "contribut": [0, 124, 125], "from": [0, 1, 6, 7, 8, 10, 12, 14, 16, 17, 18, 20, 22, 23, 25, 31, 32, 33, 34, 37, 41, 42, 46, 51, 53, 66, 68, 78, 82, 84, 87, 88, 89, 94, 95, 96, 97, 100, 102, 103, 104, 110, 111, 112, 113, 115, 120, 123, 124, 125], "build": [0, 1, 63, 70, 82, 83, 87, 88, 89, 110, 112, 113, 124], "gener": [0, 8, 10, 12, 14, 20, 33, 41, 51, 55, 60, 62, 80, 81, 84, 85, 86, 94, 104, 124], "reusabl": [0, 124], "softwar": [0, 42, 104, 124], "packag": [0, 1, 47, 114, 118, 119, 123, 124, 125], "base": [0, 4, 5, 6, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 36, 37, 39, 41, 42, 44, 46, 49, 51, 52, 53, 55, 56, 60, 62, 64, 66, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 89, 91, 92, 94, 95, 96, 99, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 115, 119, 120, 124], "engin": [0, 124], "best": [0, 102, 123, 124], "practic": [0, 123, 124], "lower": [0, 100, 124], "technic": [0, 124], "threshold": [0, 60, 124], "most": [0, 1, 49, 83, 96, 124, 125], "scientif": [0, 1, 124], "problem": [0, 82, 123, 124], "The": [0, 6, 8, 10, 12, 14, 31, 34, 36, 37, 39, 44, 48, 51, 53, 55, 56, 60, 62, 64, 67, 68, 74, 76, 78, 82, 84, 88, 91, 94, 95, 96, 97, 99, 100, 102, 103, 104, 117, 124], "improv": [0, 1, 108, 124], "classif": [0, 1, 63, 93, 96, 104, 124], "yield": [0, 76, 99, 104, 124], "veri": [0, 49, 124], "accur": [0, 124], "e": [0, 1, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 34, 37, 48, 49, 53, 56, 60, 62, 64, 67, 68, 70, 71, 72, 75, 79, 82, 84, 87, 88, 89, 92, 94, 95, 96, 97, 102, 103, 104, 106, 110, 120, 123, 124, 125], "g": [0, 1, 10, 12, 14, 16, 18, 28, 31, 34, 37, 48, 49, 53, 60, 62, 68, 84, 87, 88, 96, 97, 106, 120, 123, 124, 125], "low": [0, 124], "energi": [0, 4, 37, 95, 96, 106, 124], "observ": [0, 124], "icecub": [0, 1, 3, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 39, 42, 44, 54, 60, 62, 63, 67, 69, 78, 119, 124, 125], "here": [0, 84, 123, 124, 125], "implement": [0, 1, 16, 18, 41, 51, 56, 67, 74, 75, 76, 77, 78, 82, 91, 104, 123, 124], "wa": [0, 6, 124], "appli": [0, 6, 10, 12, 14, 36, 39, 40, 41, 44, 55, 66, 68, 74, 75, 76, 77, 78, 79, 91, 92, 94, 96, 114, 124], "oscil": [0, 98, 124], "lead": [0, 124], "signific": [0, 124], "angular": [0, 124], "rang": [0, 96, 124], "relev": [0, 1, 34, 47, 118, 123, 124], "studi": [0, 124], "furthermor": [0, 91, 124], "shown": [0, 124], "could": [0, 123, 124], "muon": [0, 22, 124], "v": [0, 124], "therebi": [0, 1, 112, 113, 124], "effici": [0, 124], "puriti": [0, 124], "sampl": [0, 49, 84, 85, 96, 124], "analysi": [0, 37, 55, 124, 125], "similarli": [0, 34, 124], "ha": [0, 34, 48, 60, 75, 88, 104, 118, 124, 125], "great": [0, 124], "point": [0, 27, 103, 104, 105, 124], "analys": [0, 54, 98, 124], "final": [0, 6, 68, 102, 112, 124], "millisecond": [0, 124], "allow": [0, 54, 63, 68, 102, 110, 115, 124, 125], "whole": [0, 124], "new": [0, 1, 67, 87, 110, 115, 123, 124], "type": [0, 6, 7, 8, 10, 12, 14, 17, 18, 30, 31, 32, 41, 42, 46, 47, 48, 49, 51, 52, 53, 55, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 108, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124], "cosmic": [0, 124], "alert": [0, 124], "which": [0, 10, 12, 14, 16, 18, 19, 28, 32, 37, 49, 51, 55, 64, 68, 76, 84, 85, 88, 89, 94, 99, 104, 105, 108, 124, 125], "were": [0, 124], "previous": [0, 124], "unfeas": [0, 124], "possibl": [0, 31, 123, 124], "identifi": [0, 6, 10, 12, 14, 28, 87, 88, 112, 113, 124], "10": [0, 8, 37, 71, 72, 87, 88, 108, 124], "tev": [0, 124], "monitor": [0, 124], "rate": [0, 102, 124], "direct": [0, 78, 88, 94, 95, 96, 101, 103, 124], "real": [0, 124], "thi": [0, 3, 6, 8, 10, 12, 14, 16, 18, 20, 34, 36, 39, 41, 42, 44, 47, 48, 53, 60, 63, 66, 68, 74, 76, 83, 84, 85, 87, 91, 92, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 110, 112, 113, 115, 120, 123, 124, 125], "enabl": [0, 3, 124], "first": [0, 74, 83, 91, 102, 105, 123, 124], "ever": [0, 124], "despit": [0, 124], "larg": [0, 74, 104, 124], "background": [0, 124], "origin": [0, 99, 124], "compris": [0, 124], "number": [0, 6, 10, 12, 14, 16, 36, 37, 39, 44, 49, 53, 55, 66, 67, 68, 74, 75, 76, 77, 78, 79, 82, 83, 85, 87, 88, 91, 94, 95, 96, 102, 105, 108, 124], "modul": [0, 3, 5, 6, 10, 15, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 50, 51, 53, 54, 55, 60, 63, 66, 67, 69, 73, 80, 81, 83, 84, 85, 86, 89, 90, 93, 98, 101, 107, 109, 112, 113, 114, 115, 119, 124], "necessari": [0, 8, 31, 123, 124], "workflow": [0, 124], "ingest": [0, 1, 3, 69, 124], "raw": [0, 87, 88, 124], "data": [0, 1, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 87, 91, 92, 96, 97, 103, 105, 108, 110, 112, 115, 119, 122, 124, 125], "domain": [0, 1, 3, 54, 124], "specif": [0, 1, 3, 5, 6, 10, 12, 14, 15, 16, 19, 34, 40, 41, 42, 48, 53, 54, 56, 64, 68, 69, 70, 71, 72, 73, 74, 79, 82, 84, 87, 90, 92, 93, 94, 95, 96, 104, 123, 124, 125], "format": [0, 1, 3, 6, 10, 31, 41, 51, 52, 53, 89, 91, 100, 112, 123, 124, 125], "deploi": [0, 1, 54, 56, 124], "chain": [0, 1, 54, 63, 92, 124, 125], "illustr": [0, 123, 124], "figur": [0, 100, 124], "level": [0, 10, 12, 14, 28, 33, 36, 39, 41, 42, 44, 48, 51, 52, 64, 68, 120, 124, 125], "overview": [0, 124], "typic": [0, 31, 91, 124], "convert": [0, 1, 3, 6, 18, 31, 33, 36, 38, 39, 44, 46, 124, 125], "industri": [0, 3, 124], "standard": [0, 3, 4, 33, 49, 56, 71, 72, 74, 84, 85, 87, 92, 96, 108, 123, 124], "intermedi": [0, 1, 3, 6, 10, 75, 124, 125], "file": [0, 1, 3, 6, 10, 12, 14, 16, 18, 31, 33, 36, 39, 41, 42, 44, 46, 47, 51, 52, 53, 55, 56, 60, 62, 84, 89, 99, 102, 104, 105, 108, 109, 110, 111, 112, 113, 118, 120, 124, 125], "read": [0, 3, 6, 10, 12, 14, 31, 40, 42, 70, 76, 92, 93, 124, 125], "simpl": [0, 63, 124], "physic": [0, 1, 18, 32, 34, 54, 60, 62, 63, 93, 96, 124], "orient": [0, 63, 124], "compon": [0, 1, 63, 66, 67, 68, 89, 92, 124], "manag": [0, 101, 124], "experi": [0, 1, 5, 6, 40, 41, 56, 101, 124], "log": [0, 1, 95, 101, 102, 104, 107, 124, 125], "deploy": [0, 1, 56, 60, 62, 84, 122, 124], "modular": [0, 63, 124], "subclass": [0, 63, 124], "torch": [0, 10, 12, 14, 63, 67, 84, 85, 89, 119, 124, 125], "nn": [0, 63, 67, 82, 85, 124], "mean": [0, 10, 12, 14, 63, 76, 78, 88, 104, 113, 124], "onli": [0, 1, 10, 12, 14, 63, 68, 74, 96, 99, 106, 110, 113, 115, 119, 124, 125], "need": [0, 8, 31, 53, 63, 66, 89, 91, 104, 117, 124, 125], "import": [0, 1, 48, 63, 107, 124], "few": [0, 63, 123, 124], "exist": [0, 10, 12, 14, 37, 48, 63, 103, 112, 124], "purpos": [0, 63, 104, 124], "built": [0, 63, 84, 124], "them": [0, 1, 31, 56, 63, 76, 96, 99, 124, 125], "togeth": [0, 63, 82, 92, 124], "form": [0, 16, 63, 94, 110, 115, 124], "complet": [0, 63, 92, 124], "extend": [0, 1, 124], "suit": [0, 96, 124], "through": [0, 94, 95, 96, 104, 124], "layer": [0, 63, 65, 66, 68, 74, 75, 76, 77, 78, 91, 94, 95, 96, 124], "connect": [0, 8, 82, 83, 84, 87, 104, 124], "etc": [0, 104, 120, 124], "optimis": [0, 1, 124], "differ": [0, 10, 12, 14, 16, 18, 41, 42, 85, 92, 105, 123, 124, 125], "track": [0, 16, 18, 22, 95, 123, 124], "These": [0, 41, 51, 53, 84, 123, 124], "prepar": [0, 8, 104, 124], "satisfi": [0, 124], "o": [0, 96, 124], "load": [0, 7, 10, 47, 56, 89, 110, 112, 124], "requir": [0, 18, 24, 48, 94, 104, 112, 113, 115, 124, 125], "when": [0, 10, 12, 14, 31, 33, 48, 60, 67, 74, 76, 78, 91, 103, 120, 123, 124, 125], "batch": [0, 7, 37, 64, 67, 68, 91, 92, 97, 105, 108, 124], "do": [0, 56, 60, 104, 112, 113, 123, 124, 125], "predict": [0, 8, 23, 27, 29, 37, 60, 62, 75, 92, 94, 96, 104, 105, 124], "either": [0, 8, 10, 12, 14, 18, 104, 124, 125], "contain": [0, 5, 6, 10, 12, 14, 15, 18, 31, 32, 36, 37, 39, 41, 42, 44, 48, 51, 53, 55, 56, 60, 62, 76, 80, 81, 83, 84, 85, 86, 88, 89, 96, 104, 106, 108, 124, 125], "imag": [0, 1, 123, 124, 125], "portabl": [0, 124], "depend": [0, 124, 125], "free": [0, 104, 124], "split": [0, 8, 33, 53, 64, 124], "up": [0, 60, 123, 124, 125], "interfac": [0, 98, 112, 113, 124, 125], "block": [0, 1, 124], "pre": [0, 38, 39, 70, 84, 103, 123, 124], "directli": [0, 124], "while": [0, 20, 102, 124], "continu": [0, 104, 124], "expand": [0, 124], "": [0, 6, 7, 8, 10, 12, 14, 31, 36, 39, 41, 44, 46, 51, 52, 53, 55, 66, 70, 75, 76, 84, 92, 96, 97, 102, 106, 108, 112, 113, 120, 121, 124, 125], "capabl": [0, 124], "project": [0, 123, 124], "receiv": [0, 124], "fund": [0, 124], "european": [0, 124], "union": [0, 6, 7, 8, 10, 12, 14, 20, 31, 34, 36, 39, 41, 42, 44, 55, 56, 60, 62, 64, 67, 68, 74, 76, 84, 85, 92, 96, 112, 115, 118, 124], "horizon": [0, 124], "2020": [0, 124], "innov": [0, 124], "programm": [0, 124], "under": [0, 124], "mari": [0, 124], "sk\u0142odowska": [0, 124], "curi": [0, 124], "grant": [0, 104, 124], "agreement": [0, 123, 124], "No": [0, 124], "890778": [0, 124], "work": [0, 4, 32, 74, 123, 124, 125], "rasmu": [0, 77, 124], "\u00f8rs\u00f8e": [0, 124], "partli": [0, 124], "punch4nfdi": [0, 124], "consortium": [0, 124], "support": [0, 6, 34, 123, 124, 125], "dfg": [0, 124], "nfdi": [0, 124], "39": [0, 124, 125], "1": [0, 6, 8, 10, 16, 31, 36, 39, 44, 49, 55, 64, 68, 74, 76, 78, 82, 83, 85, 88, 91, 94, 95, 96, 97, 102, 104, 105, 106, 112, 124, 125], "germani": [0, 124], "conveni": [1, 123, 125], "collabor": 1, "solv": [1, 123], "It": [1, 31, 48, 60, 66, 88, 94, 96, 123], "leverag": 1, "advanc": [1, 68], "machin": [1, 125], "learn": [1, 51, 53, 60, 62, 94, 96, 102, 125], "without": [1, 82, 87, 99, 104, 125], "have": [1, 20, 36, 39, 42, 44, 48, 49, 53, 68, 84, 88, 96, 123, 125], "expert": 1, "themselv": [1, 112, 113], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 10, 12, 14, 16, 18, 20, 33, 48, 53, 60, 66, 67, 68, 70, 76, 79, 83, 84, 89, 104, 110, 111, 112, 113, 114, 115, 120, 123, 125], "streamlin": 1, "process": [1, 6, 36, 39, 44, 60, 70, 74, 76, 78, 123, 125], "transform": [1, 68, 78, 91, 96, 106], "extens": [1, 41, 51, 118], "basic": 1, "across": [1, 2, 10, 12, 14, 34, 45, 55, 68, 92, 104, 107, 108, 109, 120], "variou": [1, 50], "easili": 1, "architectur": [1, 75, 76, 77, 78, 91], "main": [1, 73, 84, 92, 123, 125], "featur": [1, 3, 4, 10, 12, 14, 19, 37, 53, 60, 62, 67, 68, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 91, 94, 97, 105, 112, 123], "i3": [1, 18, 32, 33, 34, 36, 39, 42, 44, 47, 55, 60, 62, 118, 125], "more": [1, 10, 47, 48, 74, 89, 112, 113, 120], "index": [1, 6, 10, 12, 14, 34, 48, 68, 70, 74, 83, 88, 91, 102], "sqlite": [1, 3, 8, 9, 14, 37, 39, 44, 46, 48, 53, 125], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 10, 51, 70, 79, 84, 96, 111], "awai": 1, "detail": [1, 74, 89, 102, 125], "expos": 1, "physicst": 1, "what": [1, 66, 84, 123], "i3modul": [1, 54, 56], "includ": [1, 87, 92, 99, 104, 110, 123], "docker": 1, "run": [1, 42, 46, 55], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 9, 15, 17, 54, 63, 80, 107], "dataset": [1, 3, 7, 8, 11, 12, 13, 14, 22, 49, 74, 84, 91, 108, 112], "extractor": [1, 3, 6, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 44, 60, 62], "parquet": [1, 3, 9, 12, 36, 39, 44, 46, 52, 71, 72, 125], "pre_configur": [1, 3, 39], "reader": [1, 3, 39, 41, 42], "util": [1, 3, 15, 17, 31, 32, 33, 34, 46, 47, 48, 49, 63, 80, 101, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122], "writer": [1, 3, 39, 51, 52, 53], "constant": [1, 3, 122], "dataclass": [1, 3, 32], "dataconvert": [1, 3, 38, 51, 52, 53], "dataload": [1, 3, 8, 37, 84, 92, 105, 115], "datamodul": [1, 3], "pipelin": [1, 3], "deployment_modul": [1, 54], "rnn": [1, 63, 74, 91], "coarsen": [1, 63, 68], "standard_model": [1, 63], "pisa": [1, 24, 37, 99, 100, 119, 122, 125], "fit": [1, 8, 92, 98, 100, 104, 106, 115], "plot": [1, 98], "callback": [1, 92, 101], "label": [1, 10, 22, 25, 75, 84, 92, 96, 100, 101, 105], "loss_funct": [1, 96, 101], "weight_fit": [1, 101], "config": [1, 7, 49, 99, 102, 104, 107, 108, 110, 111, 112, 113, 114, 115], "argpars": [1, 107], "decor": [1, 107, 119], "deprecation_tool": [1, 107], "filesi": [1, 107], "math": [1, 107], "submodul": [1, 3, 9, 11, 13, 15, 17, 30, 35, 38, 40, 43, 45, 50, 54, 57, 59, 63, 65, 69, 73, 80, 81, 86, 90, 93, 98, 101, 107, 109, 114], "global": [2, 4, 74, 76, 78, 89], "deprecated_method": [3, 35, 43, 54, 57], "graphnet_file_read": [3, 40], "i3read": [3, 36, 39, 40, 44], "parquet_to_sqlit": [3, 45], "random": [3, 10, 12, 14, 45, 49, 112], "sqlite_util": [3, 45], "string_selection_resolv": [3, 45], "graphnet_writ": [3, 50], "parquet_writ": [3, 50], "sqlite_writ": [3, 50], "truth": [3, 4, 10, 12, 14, 19, 28, 37, 48, 84, 96, 105, 106, 112], "i3fileset": [3, 5, 41, 42], "set": [3, 5, 8, 18, 20, 36, 39, 41, 42, 44, 51, 87, 88, 89, 96, 105, 123], "init_global_index": [3, 6], "collate_fn": [3, 7, 101, 105], "do_shuffl": [3, 7], "graphnetdatamodul": [3, 8], "insqlitepipelin": [3, 37], "class": [4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 36, 37, 39, 41, 42, 44, 46, 49, 51, 52, 53, 55, 56, 60, 62, 64, 66, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 89, 91, 92, 94, 95, 96, 99, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 120, 123], "object": [4, 5, 10, 12, 14, 20, 31, 34, 64, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 89, 91, 92, 94, 95, 96, 99, 102, 104, 105, 108, 110, 112, 113, 115, 120], "namespac": [4, 89, 112, 113], "name": [4, 6, 7, 10, 12, 14, 16, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 39, 41, 44, 46, 48, 51, 52, 53, 56, 60, 62, 70, 84, 85, 87, 91, 96, 99, 103, 106, 108, 110, 112, 113, 114, 115, 120, 123, 125], "i3featureextractor": [4, 15, 17, 60, 62], "icecube86": [4, 69, 71], "dom_x": [4, 71, 87], "dom_i": [4, 71, 87], "dom_z": [4, 71, 87], "dom_tim": [4, 87], "charg": [4, 74, 87, 88, 91, 104], "rde": 4, "pmt_area": 4, "deepcor": [4, 19, 71], "upgrad": [4, 19, 71, 125], "string": [4, 10, 12, 14, 31, 49, 68, 70, 71, 84, 89, 110], "pmt_number": 4, "dom_numb": 4, "pmt_dir_x": 4, "pmt_dir_i": 4, "pmt_dir_z": 4, "dom_typ": 4, "prometheu": [4, 63, 69], "sensor_pos_x": [4, 72], "sensor_pos_i": [4, 72], "sensor_pos_z": [4, 72], "t": [4, 34, 48, 100, 102, 104, 125], "kaggl": [4, 66, 67, 71, 78], "x": [4, 28, 66, 67, 68, 83, 87, 88, 91, 96, 97, 100, 104, 106], "y": [4, 28, 83, 97, 100, 125], "z": [4, 28, 83, 97, 125], "auxiliari": 4, "i3truthextractor": [4, 15, 17], "energy_track": [4, 95], "energy_cascad": [4, 95], "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": [4, 95, 103], "zenith": [4, 95, 103], "pid": [4, 49, 112], "elast": 4, "sim_typ": 4, "interaction_typ": 4, "interaction_tim": [4, 95], "inelast": [4, 95], "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "i3_fil": [5, 18], "str": [5, 6, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 60, 62, 67, 68, 70, 71, 72, 74, 76, 78, 84, 85, 87, 88, 89, 92, 96, 99, 102, 103, 105, 106, 108, 110, 111, 112, 113, 114, 115, 117, 118, 120], "gcd_file": [5, 18, 60, 62], "paramet": [5, 6, 7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 60, 62, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121], "output_fold": [5, 55], "worker": [5, 6, 36, 37, 44, 47, 55, 108, 120], "i3deploy": [5, 54, 59], "list": [5, 6, 7, 8, 10, 12, 14, 20, 28, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 60, 62, 64, 67, 68, 70, 74, 76, 78, 82, 83, 84, 85, 87, 88, 89, 91, 92, 96, 97, 100, 102, 105, 106, 112, 114, 115, 118, 120], "ani": [5, 6, 7, 8, 10, 12, 14, 31, 32, 33, 34, 41, 51, 52, 53, 60, 64, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 89, 91, 92, 94, 95, 96, 100, 102, 104, 106, 108, 110, 111, 112, 113, 114, 115, 120, 125], "output_fil": 6, "global_index": 6, "avail": [6, 20, 37, 94, 95, 96, 119], "pool": [6, 63, 64, 65, 74, 76, 78], "return": [6, 7, 8, 10, 12, 14, 16, 18, 31, 32, 34, 41, 42, 46, 47, 48, 49, 51, 52, 53, 55, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121], "none": [6, 7, 8, 10, 12, 14, 18, 20, 28, 32, 33, 34, 36, 37, 39, 41, 42, 44, 46, 48, 49, 51, 52, 53, 55, 56, 62, 67, 68, 74, 76, 78, 83, 84, 85, 87, 89, 91, 92, 96, 99, 102, 104, 105, 106, 108, 110, 111, 112, 114, 118, 120], "synchron": 6, "file_read": 6, "save_method": 6, "outdir": [6, 36, 37, 39, 44, 46, 99], "index_column": [6, 10, 12, 14, 36, 39, 44, 48, 49, 99, 105, 106, 112], "num_work": [6, 7, 39, 105], "abc": [6, 10, 16, 37, 41, 51, 55, 89, 103, 106, 111, 112, 113], "logger": [6, 8, 10, 16, 33, 37, 41, 46, 49, 51, 52, 55, 56, 82, 89, 92, 103, 106, 107, 120, 125], "A": [6, 8, 10, 33, 37, 41, 42, 48, 53, 55, 56, 60, 68, 84, 85, 88, 89, 94, 96, 97, 99, 104, 106, 110, 112, 113, 115, 125], "convers": [6, 36, 44, 46, 125], "parallel": [6, 36, 39, 44], "extract": [6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 46, 47, 60, 62, 96], "also": [6, 10, 12, 14, 49, 74, 112], "assign": [6, 10, 12, 14, 46, 64, 68, 123], "id": [6, 8, 36, 39, 44, 46, 70, 84, 105], "exampl": [6, 31, 49, 64, 68, 88, 104, 112, 113, 125], "initi": [6, 33, 42, 53, 55, 74, 83], "graphnetfileread": [6, 40, 41, 42], "method": [6, 8, 10, 12, 14, 16, 18, 30, 31, 32, 34, 35, 36, 41, 43, 44, 51, 53, 56, 67, 68, 70, 95, 104, 106], "graphnetwrit": [6, 50, 51, 52, 53], "save": [6, 16, 18, 31, 36, 39, 44, 48, 50, 51, 53, 89, 99, 102, 104, 105, 106, 110, 111, 112, 113, 125], "interim": [6, 50, 51, 52, 53], "directori": [6, 36, 37, 39, 41, 42, 44, 46, 51, 52, 99, 102, 118], "i3extractor": [6, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 39, 41, 44], "input": [6, 10, 12, 14, 36, 37, 39, 41, 42, 44, 51, 52, 55, 60, 62, 66, 71, 74, 75, 76, 77, 78, 79, 84, 85, 87, 91, 94, 96, 97, 110, 115, 117], "default": [6, 8, 10, 12, 14, 18, 20, 28, 31, 36, 37, 39, 42, 44, 46, 48, 53, 55, 56, 60, 62, 66, 67, 68, 74, 75, 76, 77, 78, 82, 83, 84, 85, 87, 89, 91, 96, 99, 100, 102, 103, 104, 106, 108, 110, 112, 118], "event_no": [6, 10, 12, 14, 36, 39, 44, 48, 49, 106, 112], "column": [6, 10, 12, 14, 16, 36, 39, 44, 48, 56, 62, 70, 74, 82, 84, 85, 87, 88, 91, 92, 94, 95, 96, 97, 99, 106], "ad": [6, 10, 12, 14, 19, 36, 39, 44, 76, 84, 87, 88, 99], "int": [6, 7, 8, 10, 12, 14, 22, 25, 33, 36, 37, 39, 41, 42, 44, 49, 51, 52, 53, 55, 66, 67, 68, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 91, 92, 94, 95, 96, 97, 99, 102, 104, 105, 106, 108, 112, 115, 120], "cpu": [6, 36, 39, 44, 56, 125], "multiprocess": [6, 36, 39, 44, 125], "get_map_funct": 6, "nb_file": 6, "map": [6, 10, 12, 14, 19, 20, 48, 71, 72, 84, 85, 96, 110, 112, 113, 115], "pure": [6, 16, 17, 20, 34], "tupl": [6, 10, 12, 14, 32, 34, 48, 67, 74, 76, 78, 88, 96, 97, 99, 100, 105, 108, 117], "option": [6, 8, 10, 12, 14, 18, 28, 37, 53, 56, 62, 67, 68, 74, 76, 78, 83, 84, 85, 87, 89, 91, 96, 99, 100, 102, 106, 107, 108, 110, 112, 118, 125], "merge_fil": [6, 51, 52, 53], "merg": [6, 51, 52, 53, 104, 125], "call": [6, 20, 34, 66, 68, 96, 99, 102, 106, 120], "instanti": [6, 8, 113], "remov": [7, 36, 44, 84, 105, 108], "less": [7, 105], "two": [7, 76, 99, 102, 104, 105], "dom": [7, 10, 12, 14, 64, 68, 74, 87, 88, 91, 105], "hit": [7, 105], "should": [7, 10, 12, 14, 16, 18, 31, 49, 56, 67, 68, 74, 84, 85, 91, 104, 105, 110, 112, 113, 115, 123, 125], "occur": [7, 105], "product": [7, 105], "selection_nam": 7, "check": [7, 32, 33, 34, 41, 48, 108, 118, 119, 123, 125], "whether": [7, 32, 34, 48, 74, 76, 78, 89, 104, 114, 118, 119], "shuffl": [7, 8, 47, 105], "select": [7, 8, 10, 12, 14, 25, 49, 105, 106, 112, 123], "bool": [7, 32, 33, 34, 48, 49, 51, 60, 74, 76, 78, 84, 87, 88, 89, 92, 99, 102, 104, 105, 106, 108, 114, 117, 118, 119, 120], "batch_siz": [7, 37, 97, 105], "persistent_work": [7, 105], "prefetch_factor": 7, "kwarg": [7, 10, 12, 14, 33, 41, 51, 52, 64, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 89, 91, 92, 94, 95, 96, 102, 104, 106, 110, 112, 113, 120], "construct": [7, 8, 10, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 41, 46, 49, 51, 52, 56, 64, 65, 66, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 99, 102, 103, 104, 105, 106, 108, 111, 112, 113, 120], "t_co": 7, "callabl": [7, 10, 34, 67, 68, 70, 71, 72, 84, 96, 105, 106, 110, 112, 113, 114, 119], "classmethod": [7, 10, 89, 104, 110, 111], "from_dataset_config": 7, "datasetconfig": [7, 10, 49, 109, 112], "dict": [7, 8, 10, 20, 31, 34, 37, 48, 56, 70, 71, 72, 84, 85, 89, 92, 99, 100, 102, 105, 108, 110, 112, 113, 114, 115, 117], "dataset_refer": 8, "dataset_arg": 8, "test_select": [8, 112], "train_dataloader_kwarg": 8, "validation_dataloader_kwarg": 8, "test_dataloader_kwarg": 8, "train_val_split": 8, "0": [8, 10, 12, 14, 36, 39, 42, 44, 49, 60, 64, 68, 74, 75, 76, 78, 82, 83, 85, 88, 91, 97, 99, 100, 104, 105, 112], "9": 8, "split_se": 8, "lightningdatamodul": 8, "creat": [8, 37, 48, 84, 87, 110, 111, 115, 123, 125], "sqlitedataset": [8, 13, 14], "parquetdataset": [8, 11, 12], "non": [8, 31, 34, 48, 74, 104], "refer": [8, 72, 112], "argument": [8, 46, 84, 102, 106, 108, 110, 112, 113, 115], "valid": [8, 34, 49, 92, 96, 102, 104, 108, 110, 115], "test": [8, 49, 96, 105, 112, 119, 123], "ratio": 8, "42": [8, 125], "seed": [8, 10, 12, 14, 49, 84, 85, 105, 112], "prepare_data": 8, "setup": [8, 102, 125], "stage": [8, 102], "lightn": [8, 102], "properti": [8, 10, 16, 23, 34, 41, 51, 68, 70, 79, 87, 92, 96, 103, 111, 120], "train_dataload": [8, 92], "val_dataload": [8, 92], "test_dataload": 8, "teardown": 8, "cleanup": 8, "shutdown": 8, "procedur": 8, "close": 8, "after": [8, 67, 74, 76, 78, 102, 108, 112], "overrid": [8, 102], "parquet_dataset": [9, 11], "sqlite_dataset": [9, 13], "columnmissingexcept": [9, 10], "load_modul": [9, 10, 89], "parse_graph_definit": [9, 10], "ensembledataset": [9, 10, 112], "except": 10, "indic": [10, 49, 68, 74, 83, 88, 91, 102, 108, 123], "miss": 10, "class_nam": [10, 33, 41, 51, 52, 113, 120], "cfg": 10, "graphdefinit": [10, 12, 14, 80, 81, 84, 85, 86, 105, 123], "arg": [10, 12, 14, 33, 64, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 89, 91, 92, 94, 95, 96, 104, 108, 110, 120], "path": [10, 12, 14, 18, 36, 39, 41, 42, 44, 47, 48, 53, 55, 60, 62, 84, 89, 99, 100, 102, 105, 108, 110, 111, 112, 118, 125], "pulsemap": [10, 12, 14, 19, 60, 62, 105, 112], "puls": [10, 12, 14, 19, 20, 32, 34, 48, 60, 64, 68, 84, 87, 88, 97], "seri": [10, 12, 14, 19, 20, 32, 34, 48, 60, 74, 87, 91], "node": [10, 12, 14, 63, 64, 68, 74, 75, 76, 78, 80, 81, 82, 84, 85, 91, 97], "multipl": [10, 12, 14, 88, 102, 112, 120], "store": [10, 12, 14, 37, 48, 51, 52, 53, 99, 103], "attribut": [10, 12, 14, 64, 96], "node_truth": [10, 12, 14, 105, 112], "uniqu": [10, 12, 14, 46, 48, 87, 112], "indici": [10, 12, 14, 32, 49, 104], "tabl": [10, 12, 14, 16, 18, 37, 41, 48, 53, 70, 84, 99, 106], "truth_tabl": [10, 12, 14, 99, 105, 106, 112], "inform": [10, 12, 14, 16, 18, 20, 28, 84, 87, 88, 89, 100], "node_truth_t": [10, 12, 14, 105, 112], "string_select": [10, 12, 14, 105, 112], "subset": [10, 12, 14, 67, 74, 76, 78, 91], "given": [10, 12, 14, 18, 53, 68, 82, 96, 106, 108], "queri": [10, 12, 14, 48, 49, 53], "pass": [10, 12, 14, 66, 67, 74, 75, 76, 77, 78, 79, 84, 91, 92, 96, 102, 104, 106, 123], "dtype": [10, 12, 14, 84, 85, 121], "float32": [10, 12, 14, 84, 85], "tensor": [10, 12, 14, 56, 64, 66, 67, 68, 70, 74, 75, 76, 77, 78, 79, 83, 87, 91, 92, 96, 97, 104, 117, 121], "loss_weight_t": [10, 12, 14, 105, 112], "per": [10, 12, 14, 20, 48, 68, 74, 91, 96, 104, 106], "loss": [10, 12, 14, 84, 92, 96, 102, 104, 108], "weight": [10, 12, 14, 60, 62, 84, 96, 99, 104, 106, 113, 125], "loss_weight_column": [10, 12, 14, 84, 105, 112], "correspond": [10, 12, 14, 31, 34, 47, 76, 84, 88, 106, 110, 112, 113, 115, 118, 125], "loss_weight_default_valu": [10, 12, 14, 84, 112], "float": [10, 12, 14, 60, 74, 75, 82, 83, 84, 85, 91, 92, 99, 100, 102, 104, 105, 112], "note": [10, 12, 14, 42, 53, 88, 100, 113], "valu": [10, 12, 14, 28, 31, 48, 68, 83, 84, 85, 100, 103, 104, 108, 110], "specifi": [10, 12, 14, 49, 64, 88, 96, 100, 102, 125], "case": [10, 12, 14, 20, 36, 39, 42, 44, 60, 68, 88, 96, 125], "That": [10, 12, 14, 76, 95, 103], "ignor": [10, 12, 14, 34], "resolv": [10, 12, 14, 49], "10000": [10, 12, 14, 49, 66], "5": [10, 12, 14, 49, 74, 91, 108, 125], "20": [10, 12, 14, 49, 120], "graph_definit": [10, 12, 14, 63, 80, 105, 112], "defin": [10, 12, 14, 49, 56, 60, 62, 68, 80, 81, 82, 84, 86, 88, 105, 110, 112, 113, 115], "represent": [10, 12, 14, 34, 68, 85, 89, 91], "from_config": [10, 89, 111, 112, 113], "instanc": [10, 16, 18, 28, 34, 36, 39, 42, 44, 84, 89, 99, 103, 105, 111, 113, 125], "concaten": [10, 31, 76], "one": [10, 18, 48, 60, 68, 112, 113, 118, 123, 125], "query_t": [10, 12, 14], "sequential_index": [10, 12, 14], "some": [10, 12, 14, 36, 39, 42, 44, 84, 88], "out": [10, 76, 92, 93, 104, 120, 123, 125], "sequenti": 10, "len": [10, 88], "self": [10, 84, 99, 110, 115], "_may_": 10, "_indic": 10, "If": [10, 18, 20, 33, 37, 53, 84, 87, 88, 89, 96, 99, 102, 106, 123, 125], "entir": [10, 89], "impos": 10, "befor": [10, 76, 83, 91, 96, 102], "scalar": [10, 16, 97, 104], "length": [10, 34, 88, 102], "rais": [10, 18, 20, 52, 89, 110, 115], "element": [10, 16, 31, 34, 92, 97, 105, 114], "present": [10, 18, 33, 108, 118, 119], "add_label": 10, "fn": [10, 34, 110, 114], "kei": [10, 20, 31, 32, 34, 48, 68, 87, 103, 112, 113], "add": [10, 76, 108, 117, 123, 125], "custom": [10, 41, 84, 102], "concatdataset": 10, "singl": [10, 51, 53, 68, 76, 88, 103, 112, 113], "collect": [10, 17, 30, 104, 121], "iter": 10, "backend": [11, 13, 50, 52], "pytorch": [12, 14, 102, 125], "databas": [14, 37, 46, 48, 53, 99, 106, 125], "i3genericextractor": [15, 17], "i3hybridrecoextractor": [15, 17], "i3ntmuonlabelsextractor": [15, 17], "i3particleextractor": [15, 17], "i3pisaextractor": [15, 17], "i3quesoextractor": [15, 17], "i3retroextractor": [15, 17], "i3splinempeextractor": [15, 17], "i3tumextractor": [15, 17], "extractor_nam": [16, 18, 20, 23], "inherit": [16, 18, 34, 41, 51, 70, 87, 104, 120], "__call__": [16, 18, 41, 56], "dictionari": [16, 31, 32, 34, 37, 41, 48, 84, 85, 89, 99, 100, 110, 112, 113, 115], "output": [16, 46, 53, 55, 56, 74, 75, 76, 77, 79, 87, 88, 91, 92, 94, 95, 96, 99, 106, 112, 113, 125], "var1": 16, "var_n": 16, "variabl": [16, 18, 20, 34, 41, 76, 87, 88, 97, 106, 120], "arrai": [16, 28, 31, 87, 88], "like": [16, 34, 68, 83, 96, 97, 104, 121, 123], "shape": [16, 83, 84, 87, 97, 104], "n": [16, 64, 68, 83, 104], "where": [16, 36, 39, 42, 44, 84, 85, 87, 88, 91, 103], "denot": [16, 102], "conjunct": [16, 96], "fileread": [16, 41], "keep": [16, 18], "proven": [16, 18], "mc_truth": 16, "get": [16, 32, 48, 70, 102, 105, 125], "i3fram": [17, 20, 32, 34, 60, 62], "frame": [17, 18, 20, 30, 33, 34, 62], "i3_filt": [17, 30, 36, 39, 42, 44], "i3featureextractoricecube86": [17, 19], "i3featureextractoricecubedeepcor": [17, 19], "i3featureextractoricecubeupgrad": [17, 19], "i3pulsenoisetruthflagicecubeupgrad": [17, 19], "i3galacticplanehybridrecoextractor": [17, 21], "i3ntmuonlabelextractor": [17, 22], "i3splinempeicextractor": [17, 27], "observatori": [18, 42], "set_gcd": 18, "gframe": 18, "cframe": 18, "gcd": [18, 32, 36, 39, 42, 44, 47, 60, 62, 118], "pair": [18, 36, 39, 42, 44], "member": [18, 20, 34, 41, 87, 112, 113, 120], "being": [18, 60, 94, 96], "attempt": 18, "find": [18, 83, 118], "c": [18, 31, 68, 83, 104, 125], "instead": [18, 36, 39, 42, 44, 104], "those": 18, "runtimeerror": 18, "86": [19, 71], "nois": [19, 32, 60], "flag": [19, 60], "exclude_kei": 20, "dynam": [20, 67, 76, 77, 78], "pars": [20, 100, 107, 108, 109, 110, 115], "tri": [20, 34], "automat": [20, 84, 104, 123], "cast": [20, 34], "done": [20, 68, 120, 123], "recurs": [20, 34, 36, 39, 41, 42, 44, 89, 114, 118], "each": [20, 31, 34, 46, 47, 48, 53, 55, 56, 64, 68, 71, 72, 74, 76, 78, 82, 84, 85, 87, 88, 91, 94, 96, 97, 99, 100, 102, 105, 118], "look": [20, 125], "signatur": [20, 34], "similar": [20, 34, 125], "handl": [20, 104, 108, 117, 120], "hand": 20, "special": [20, 60, 91, 97], "mc": [20, 48], "tree": 20, "trigger": 20, "exclud": [20, 46, 125], "valueerror": [20, 89], "hybrid": 21, "galatict": 21, "plane": [21, 104], "tum": [22, 29], "dnn": [22, 29], "padding_valu": [22, 25], "northeren": 22, "i3particl": 23, "other": [23, 48, 82, 104, 123], "algorithm": 23, "comparison": [23, 104], "quantiti": [24, 96, 97], "queso": 25, "retro": [26, 37], "splinemp": 27, "border": 28, "mctree": [28, 32], "ndarrai": [28, 84, 88, 106], "boundari": 28, "volum": 28, "coordin": [28, 70, 83, 87, 97], "particl": [28, 48, 103], "start": [28, 123, 125], "stop": [28, 102, 108], "within": [28, 64, 67, 68, 76, 82], "hard": 28, "i3mctre": 28, "flatten_nested_dictionari": [30, 31], "serialis": [30, 31], "transpose_list_of_dict": [30, 31], "frame_is_montecarlo": [30, 32], "frame_is_nois": [30, 32], "get_om_keys_and_pulseseri": [30, 32], "i3filt": [30, 33, 36, 39, 42, 44], "nullspliti3filt": [30, 33, 36, 39, 42, 44], "i3filtermask": [30, 33], "is_boost_enum": [30, 34], "is_boost_class": [30, 34], "is_icecube_class": [30, 34], "is_typ": [30, 34], "is_method": [30, 34], "break_cyclic_recurs": [30, 34], "get_member_vari": [30, 34], "cast_object_to_pure_python": [30, 34], "cast_pulse_series_to_pure_python": [30, 34], "manipul": [31, 80, 81, 86], "obj": [31, 34, 114], "parent_kei": 31, "separ": [31, 83, 102, 125], "flatten": 31, "nest": 31, "d": [31, 83, 84, 87, 123], "b": [31, 64, 68], "2": [31, 36, 44, 68, 74, 76, 78, 82, 85, 88, 91, 95, 97, 99, 100, 104, 112, 125], "a__b": 31, "applic": 31, "combin": [31, 39, 74, 112], "parent": 31, "__": [31, 34], "nester": 31, "json": [31, 112], "therefor": [31, 42], "we": [31, 34, 49, 88, 123, 125], "outer": 31, "abl": [31, 125], "de": 31, "transpos": 31, "mont": 32, "carlo": 32, "simul": [32, 60], "icetrai": [32, 34, 36, 39, 42, 44, 56, 119], "pulseseri": 32, "calibr": [32, 34], "gcd_dict": [32, 34], "p": [32, 104], "om": [32, 34], "i3calibr": 32, "indicesfor": 32, "filter": [33, 36, 39, 42, 44, 120], "log_fold": [33, 41, 51, 52, 120], "skip": [33, 76], "null": [33, 48], "filter_nam": 33, "filter_ani": 33, "filtermask": 33, "true": [33, 48, 60, 74, 78, 84, 87, 89, 99, 102, 104, 106, 112, 113, 115, 118], "kept": 33, "fals": [33, 60, 76, 84, 89, 99, 102, 104, 106, 112], "boost": 34, "enum": 34, "ensur": [34, 47, 104, 120, 123, 125], "isn": 34, "same": [34, 48, 64, 68, 88, 94, 97, 102, 114, 120], "return_discard": 34, "mangl": 34, "take": [34, 68, 91, 123], "mainli": 34, "cannot": [34, 91, 110, 115], "trivial": [34, 96], "For": [34, 102], "doe": [34, 94, 96, 113], "try": 34, "equival": 34, "its": [34, 91], "regular": 34, "otherwis": [34, 104], "itself": [34, 96], "deem": 34, "wai": [34, 49, 123, 125], "optic": 34, "found": [34, 36, 39, 42, 44, 88, 104], "deprec": [35, 36, 43, 44, 117], "parquetdataconvert": [35, 36], "gcd_rescu": [36, 39, 42, 44, 118], "i3toparquetconvert": [36, 38, 39], "subfold": [36, 39, 42, 44], "search": [36, 39, 41, 42, 44, 118], "convent": [36, 39, 42, 44], "folder": [36, 39, 42, 44, 55], "accompani": [36, 39, 42, 44], "howev": [36, 39, 42, 44], "broken": [36, 39, 42, 44], "In": [36, 39, 41, 42, 44, 51, 112, 113, 125], "icetray_verbos": [36, 39, 42, 44], "verbos": [36, 39, 42, 44, 92, 102], "pframe": [36, 39, 42, 44], "module_dict": 37, "devic": [37, 56], "retro_table_nam": 37, "n_worker": [37, 55, 99], "pipeline_nam": 37, "initialis": [37, 113], "gnn_module_for_energy_regress": 37, "modulelist": 37, "comput": [37, 56, 83, 92, 96, 97, 104, 110, 112, 113, 115], "100": [37, 125], "size": [37, 53, 67, 68, 74, 76, 77, 78, 108], "alreadi": [37, 48, 125], "error": [37, 104, 120, 123], "prompt": 37, "avoid": [37, 120, 123], "overwrit": [37, 56, 102], "i3tosqliteconvert": [38, 39, 44], "preconfigur": 39, "must": [41, 42, 48, 51, 64, 102, 106, 123], "addit": [41, 51, 64, 67, 92, 104, 106], "accepted_file_extens": 41, "accepted_extractor": 41, "accept": [41, 123], "compat": [41, 49, 96], "extracor_nam": 41, "produc": [41, 103, 106], "find_fil": [41, 42], "mai": [41, 49, 56, 87, 125], "overwritten": [41, 108, 110], "match": [41, 106, 118, 121], "set_extractor": 41, "validate_fil": 41, "input_fil": [41, 55], "reli": 42, "environ": [42, 125], "sqlitedataconvert": [43, 44, 125], "parquettosqliteconvert": [45, 46], "pairwise_shuffl": [45, 47], "database_exist": [45, 48], "query_databas": [45, 48], "get_primary_kei": [45, 48], "database_table_exist": [45, 48], "run_sql_cod": [45, 48], "save_to_sql": [45, 48], "attach_index": [45, 48], "create_t": [45, 48], "create_table_and_save_to_sql": [45, 48], "stringselectionresolv": [45, 49], "parquet_path": 46, "mc_truth_tabl": 46, "excluded_field": 46, "everi": [46, 125], "field": [46, 100, 103, 110, 112, 113, 115, 117], "One": [46, 100], "choos": 46, "certain": [46, 99], "exclude_field": 46, "database_nam": [46, 53], "rng": 47, "relat": [47, 118], "i3_list": [47, 118], "gcd_list": [47, 118], "correpond": 47, "handi": 47, "becaus": 47, "even": 47, "files_list": 47, "gcd_shuffl": 47, "i3_shuffl": 47, "database_path": [48, 99, 106], "execut": 48, "result": [48, 68, 88, 102, 104, 105, 114, 125], "datafram": [48, 49, 51, 70, 92, 99, 105, 106], "primari": 48, "splitinicepuls": 48, "table_nam": 48, "df": 48, "attach": 48, "default_typ": 48, "integer_primary_kei": 48, "NOT": [48, 104], "integ": [48, 74, 76, 77, 104], "Such": 48, "row": [48, 53, 88], "appropri": [48, 96], "expect": [48, 49, 51, 60, 62, 84, 87], "doesn": 48, "use_cach": 49, "flexibl": 49, "below": [49, 100, 106, 123, 125], "show": [49, 102], "involv": 49, "cover": 49, "current": [49, 91, 102, 123, 125], "yml": [49, 108, 112, 113], "50000": [49, 112], "ab": [49, 104, 112], "12": [49, 112], "14": [49, 112], "16": [49, 66, 74, 112], "13": [49, 125], "panda": [49, 106], "syntax": [49, 104], "fix": 49, "randomli": [49, 84, 85, 113], "dataformat": [50, 53], "parquetwrit": [50, 52], "sqlitewrit": [50, 53], "graphnetfilesavemethod": [51, 53], "deep": [51, 53, 67, 78], "save_fil": 51, "reciev": 51, "file_extens": 51, "output_dir": [51, 52, 53], "smaller": 51, "expects_merged_datafram": 51, "write": [52, 60, 62, 125], "notimplementederror": 52, "merged_database_nam": 53, "max_table_s": 53, "db": [53, 105], "maximum": [53, 68, 87, 88, 96, 108], "proceedur": 53, "partit": 53, "approxim": 53, "you": [53, 55, 66, 112, 113, 123, 125], "mani": 53, "exceed": 53, "400": 53, "million": 53, "tend": 53, "notic": [53, 97, 104], "slower": 53, "put": 53, "my_databas": 53, "cleaning_modul": [54, 59], "inference_modul": [54, 59], "deploymentmodul": [54, 55, 56, 62], "baseclass": 55, "thei": 55, "appear": 55, "Will": [55, 60, 62, 82], "independ": 55, "sequenc": [55, 67, 88, 105], "determin": [55, 74], "divid": 55, "written": 55, "model_config": [56, 60, 62, 107, 109, 110, 112, 115], "state_dict": [56, 60, 62, 89, 117], "prediction_column": [56, 62, 92, 105], "modelconfig": [56, 60, 62, 89, 109, 112, 113], "i3pulsecleanermodul": [59, 60], "i3inferencemodul": [59, 60, 62], "pulsemap_extractor": [60, 62], "model_nam": [60, 62, 99], "discard_empty_ev": 60, "clean": [60, 123, 125], "assum": [60, 70, 84, 88, 96, 97], "been": [60, 104, 123], "pulsmap": [60, 62], "summar": [60, 62, 87, 88], "help": [60, 62, 108, 123], "entri": [60, 62, 76, 100, 108], "dynedg": [60, 62, 63, 73, 77, 78], "associ": [60, 62, 84, 88, 95, 96, 104], "7": [60, 68, 99], "consid": [60, 74, 125], "posit": [60, 66, 68, 88, 95, 110, 115], "signal": 60, "els": 60, "elimin": 60, "whose": 60, "empti": 60, "speed": [60, 83], "especi": 60, "sinc": [60, 104], "further": 60, "calcul": [60, 82, 85, 92, 97, 103, 104], "energy_reco": 62, "embed": [63, 65, 74, 91, 94, 96], "rnn_tito": [63, 73], "convnet": [63, 73], "dynedge_jinst": [63, 73], "dynedge_kaggle_tito": [63, 73], "edg": [63, 67, 68, 76, 77, 78, 80, 83, 84, 85, 86, 87, 97], "node_rnn": [63, 74, 90], "unbatch_edge_index": [63, 64], "attributecoarsen": [63, 64], "domcoarsen": [63, 64], "customdomcoarsen": [63, 64], "domandtimewindowcoarsen": [63, 64], "standardmodel": [63, 92], "calculate_xyzt_homophili": [63, 97], "calculate_distance_matrix": [63, 97], "knn_graph_batch": [63, 97], "oper": [64, 67, 73, 76], "cluster": [64, 67, 68, 74, 76, 78, 87, 88, 91], "local": [64, 71, 72, 108], "edge_index": [64, 67, 97], "accord": [64, 68, 82, 84, 85, 88], "vector": [64, 68, 104], "longtensor": [64, 68, 97], "mathbf": [64, 68], "ldot": [64, 68], "reduce_opt": 64, "avg": 64, "avg_pool": 64, "avg_pool_x": 64, "max": [64, 67, 76, 78, 104, 108], "max_pool": [64, 68], "max_pool_x": [64, 68], "min": [64, 68, 76, 78], "min_pool": [64, 65, 68], "min_pool_x": [64, 65, 68], "sum": [64, 68, 76, 78, 92], "sum_pool": [64, 65, 68], "sum_pool_x": [64, 65, 68], "forward": [64, 66, 67, 70, 74, 75, 76, 77, 78, 79, 82, 84, 87, 91, 92, 96, 104], "simplecoarsen": 64, "window": 64, "time_window": 64, "sinusoidalposemb": [65, 66], "dynedgeconv": [65, 67, 76], "edgeconvtito": [65, 67], "dyntran": [65, 67, 74, 78], "sum_pool_and_distribut": [65, 68], "group_bi": [65, 68], "group_pulses_to_dom": [65, 68], "group_pulses_to_pmt": [65, 68], "std_pool_x": [65, 68], "std_pool": [65, 68], "dim": 66, "n_freq": 66, "sinusoid": 66, "competit": [66, 67, 71, 78], "2nd": 66, "place": [66, 117, 123], "solut": [66, 67, 78, 123], "see": [66, 74, 82, 84, 102, 123, 125], "arxiv": [66, 82, 104], "2310": 66, "15674": 66, "fourier": 66, "encod": 66, "attent": 66, "1706": 66, "03762": 66, "seen": 66, "soft": 66, "digit": 66, "dimens": [66, 71, 72, 74, 75, 76, 78, 88, 91, 96, 104], "frequenc": 66, "learnabl": [66, 67, 73, 74, 75, 76, 77, 78, 79, 91, 96], "aggr": 67, "nb_neighbor": 67, "features_subset": [67, 74, 76, 78, 91], "edgeconv": 67, "lightningmodul": [67, 89, 102, 120], "convolut": [67, 75, 76, 77, 78], "mlp": [67, 76], "aggreg": [67, 68], "8": [67, 68, 74, 76, 78, 85, 91, 104, 105, 123, 125], "neighbour": [67, 74, 76, 78, 82, 83, 85, 91, 97], "slice": [67, 76], "sparsetensor": 67, "messagepass": 67, "tito": [67, 74, 78], "reset_paramet": 67, "reset": 67, "messag": [67, 102, 120], "x_i": 67, "x_j": 67, "layer_s": 67, "n_head": [67, 74, 78], "dyntrans1": 67, "head": [67, 74, 78, 96], "multiheadattent": 67, "just": [68, 125], "negat": 68, "cluster_index": 68, "distribut": [68, 76, 95, 96, 104, 106], "ident": [68, 96], "pmt": [68, 88], "f1": 68, "f2": 68, "6": [68, 100], "groupbi": 68, "3": [68, 74, 75, 78, 83, 88, 91, 95, 97, 99, 100, 104, 123, 125], "matrix": [68, 82, 83, 97, 104], "mathbb": 68, "r": [68, 82, 125], "n_1": 68, "n_b": 68, "f": 68, "obtain": [68, 104], "wise": 68, "dens": 68, "fc": 68, "known": 68, "std": 68, "repres": [68, 74, 84, 85, 87, 88, 110, 112, 113], "averag": [68, 104], "torch_geometr": 68, "version": [68, 88, 96, 102, 123, 125], "standardis": 69, "icecubekaggl": [69, 71], "icecubedeepcor": [69, 71], "icecubeupgrad": [69, 71], "orca150": [69, 72], "ins": 70, "feature_map": [70, 71, 72], "input_featur": [70, 84], "input_feature_nam": [70, 84, 85, 87], "adjac": 70, "geometry_t": [70, 71, 72], "public": [70, 106], "retriev": 70, "geometri": [70, 84], "string_index_nam": 70, "sensor_position_nam": 70, "xyz": [70, 71, 72, 87, 88], "sensor_index_nam": 70, "sensor": [70, 84], "geometry_table_path": [71, 72], "home": [71, 72, 108, 125], "runner": [71, 72, 108], "lib": [71, 72, 108, 125], "python3": [71, 72, 108], "string_id_column": [71, 72], "sensor_id_column": [71, 72], "sensor_id": [71, 72], "icecube_upgrad": 71, "prototyp": 72, "orca_150": 72, "sensor_string_id": 72, "dynedgejinst": [73, 77], "dynedgetito": [73, 74, 78], "rnn_dynedg": 74, "intend": [74, 91, 125], "amount": 74, "activ": [74, 87, 91, 92, 96, 123, 125], "nb_input": [74, 75, 76, 77, 78, 79, 91, 94, 95, 96], "time_series_column": [74, 91], "treat": [74, 91], "nb_neighbour": [74, 76, 78, 91], "rnn_layer": 74, "rnn_hidden_s": 74, "hidden": [74, 76, 77, 91], "64": [74, 125], "rnn_dropout": 74, "dropout": [74, 91], "latent": [74, 76, 78, 91, 94, 95, 96], "metric": [74, 76, 78, 83, 91, 102], "k": [74, 76, 78, 82, 85, 91, 97, 104], "nearest": [74, 76, 78, 82, 83, 85, 91, 97], "dyntrans_layer_s": [74, 78], "post_processing_layer_s": [74, 76, 78], "post": [74, 76, 78], "readout_layer_s": [74, 76, 78], "readout": [74, 78], "global_pooling_schem": [74, 76, 78], "scheme": [74, 76, 78], "embedding_dim": [74, 91], "ie": 74, "use_global_featur": [74, 78], "use_post_processing_lay": [74, 78], "author": [75, 77, 104], "martin": 75, "minh": 75, "nb_output": [75, 77, 79, 87, 94, 95, 96], "nb_intermedi": 75, "128": [75, 76, 78, 108], "dropout_ratio": 75, "fraction": [75, 91, 105], "drop": 75, "dynedge_layer_s": 76, "dimenion": [76, 78], "multi": 76, "perceptron": 76, "256": [76, 78], "336": [76, 78], "follow": [76, 92, 104, 106, 123, 125], "_and_": 76, "As": 76, "last": [76, 91, 94, 95, 96, 102, 105], "add_global_variables_after_pool": 76, "altern": [76, 104, 123], "exact": [77, 104], "2209": 77, "03042": 77, "oerso": 77, "layer_size_scal": 77, "4": [77, 95, 100], "scale": [77, 83, 84, 96, 104], "ic": 78, "univers": 78, "south": 78, "pole": 78, "core": 79, "edgedefinit": [80, 81, 82, 83, 84, 86], "how": [80, 81, 86], "drawn": [80, 81, 85, 86], "between": [80, 81, 82, 83, 86, 92, 96, 97, 102, 104, 112, 113], "minkowski": [80, 81], "knngraph": [80, 85], "lex_sort": [80, 88], "gather_cluster_sequ": [80, 88], "identify_indic": [80, 88], "cluster_summarize_with_percentil": [80, 88], "knnedg": [81, 82], "radialedg": [81, 82], "euclideanedg": [81, 82], "compute_minkowski_distance_mat": [81, 83], "minkowskiknnedg": [81, 83], "_construct_edg": 82, "definit": [82, 84, 85, 87, 89, 96, 123], "nb_nearest_neighbour": [82, 83, 85], "space": [82, 83, 96, 106], "distanc": [82, 83, 85, 97], "sphere": 82, "chosen": [82, 88, 120], "radiu": 82, "centr": 82, "radial": 82, "center": 82, "euclidean": [82, 123], "http": [82, 84, 104, 123], "org": [82, 104, 125], "pdf": 82, "1809": 82, "06166": 82, "space_coord": 83, "time_coord": 83, "pairwis": [83, 97], "second": 83, "m": [83, 88, 104], "light": [83, 125], "time_like_weight": 83, "prefer": [83, 125], "over": 83, "time_lik": 83, "hold": 84, "alter": 84, "dure": [84, 96, 102], "node_definit": [84, 85], "edge_definit": 84, "nodedefinit": [84, 85, 86, 87], "nodesaspuls": [84, 86, 87], "perturbation_dict": [84, 85], "deviat": [84, 85], "perturb": [84, 85], "add_inactive_sensor": 84, "inact": 84, "append": 84, "pad": [84, 88], "sensor_mask": 84, "mask": 84, "string_mask": 84, "sort_bi": 84, "sort": [84, 88], "truth_dict": 84, "custom_label_funct": 84, "loss_weight": [84, 96], "data_path": 84, "num_row": 84, "github": [84, 104, 125], "com": [84, 104, 125], "team": [84, 123], "blob": [84, 104], "getting_start": 84, "md": 84, "your": [85, 123, 125], "percentileclust": [86, 87], "nodeasdomtimeseri": [86, 87], "num_puls": 87, "node_feature_nam": 87, "new_features_nam": 87, "overridden": 87, "set_number_of_input": 87, "set_output_feature_nam": 87, "measur": [87, 88, 97], "cherenkov": [87, 88], "radiat": [87, 88], "percentil": [87, 88], "summari": [87, 88], "cluster_on": [87, 88], "50": [87, 88, 108], "90": [87, 88, 100], "add_count": [87, 88], "duplic": 87, "id_column": 87, "time_column": 87, "charge_column": 87, "max_activ": 87, "cluster_column": 88, "numpi": 88, "along": 88, "backward": [88, 104], "feature_idx": 88, "turn": [88, 123], "gather": 88, "nan": 88, "n_cluster": 88, "l": 88, "largest": 88, "suppos": 88, "n_pmt": 88, "three": [88, 104], "spatial": 88, "column_offset": 88, "feature_nam": 88, "summarization_indic": 88, "cluster_indic": 88, "verbose_print": 89, "save_state_dict": 89, "load_state_dict": 89, "karg": 89, "trust": 89, "enough": 89, "eval": [89, 125], "lambda": 89, "express": [89, 104], "consequ": 89, "set_verbose_print_recurs": 89, "extra_repr": 89, "descript": [89, 108], "print": [89, 102, 120], "about": [89, 110, 112, 113, 115], "extra_repr_recurs": 89, "indent": 89, "recurr": 90, "nodetimernn": 91, "standalon": 91, "pr": 91, "seper": 91, "hidden_s": [91, 94, 95, 96], "num_lay": 91, "clean_up_data_object": 91, "updat": [91, 97, 99, 102], "backbon": 92, "max_epoch": 92, "early_stopping_pati": [92, 115], "gpu": [92, 108, 125], "ckpt_path": 92, "log_every_n_step": 92, "gradient_clip_v": 92, "distribution_strategi": 92, "trainer_kwarg": 92, "pytorch_lightn": [92, 102, 120], "trainer": [92, 102, 105], "target_label": [92, 96], "target": [92, 94, 96, 104, 115], "prediction_label": [92, 96], "configure_optim": 92, "optim": [92, 102], "shared_step": 92, "batch_idx": 92, "share": 92, "step": [92, 102], "training_step": 92, "train_batch": 92, "validation_step": 92, "val_batch": 92, "compute_loss": [92, 96], "pred": [92, 96], "mode": [92, 96], "deactiv": [92, 96], "predict_as_datafram": 92, "additional_attribut": [92, 105], "multiclassclassificationtask": [93, 94], "binaryclassificationtask": [93, 94], "binaryclassificationtasklogit": [93, 94], "azimuthreconstructionwithkappa": [93, 95], "azimuthreconstruct": [93, 95], "directionreconstructionwithkappa": [93, 95], "zenithreconstruct": [93, 95], "zenithreconstructionwithkappa": [93, 95], "energyreconstruct": [93, 95], "energyreconstructionwithpow": [93, 95], "energytcreconstruct": [93, 95], "energyreconstructionwithuncertainti": [93, 95], "vertexreconstruct": [93, 95], "positionreconstruct": [93, 95], "timereconstruct": [93, 95], "inelasticityreconstruct": [93, 95], "learnedtask": [93, 96], "standardlearnedtask": [93, 94, 95, 96], "identitytask": [93, 94, 96], "standardflowtask": [93, 96], "classifi": 94, "untransform": 94, "interpret": 94, "logit": [94, 104], "binari": [94, 104], "default_target_label": [94, 95, 96], "default_prediction_label": [94, 95, 96], "target_pr": 94, "angl": [95, 103], "kappa": [95, 104], "var": 95, "azimuth_pr": 95, "azimuth_kappa": 95, "3d": [95, 104], "vmf": 95, "dir_x_pr": 95, "dir_y_pr": 95, "dir_z_pr": 95, "direction_kappa": 95, "zenith_pr": 95, "zenith_kappa": 95, "stabl": [95, 96], "energy_pr": 95, "cascad": 95, "energy_track_pr": 95, "energy_cascade_pr": 95, "uncertainti": 95, "energy_sigma": 95, "vertex": 95, "position_x_pr": 95, "position_y_pr": 95, "position_z_pr": 95, "interaction_time_pr": 95, "interact": 95, "hadron": 95, "inelasticity_pr": 95, "lossfunct": [96, 101, 104], "auto": 96, "matic": 96, "_pred": 96, "transform_prediction_and_target": 96, "numer": 96, "transform_target": 96, "log10": [96, 106], "rather": [96, 120], "transform_infer": 96, "invers": 96, "recov": 96, "transform_support": 96, "minimum": 96, "restrict": [96, 104], "invert": 96, "1e6": 96, "train_ev": 96, "act": [96, 104], "wrt": 96, "meet": 96, "come": [96, 123], "vast": 96, "major": 96, "supervis": 96, "grab": 96, "send": 96, "evalu": 96, "normalizingflow": 96, "jacobian": 96, "normal": 96, "flow": 96, "xyzt": 97, "homophili": 97, "xyz_coord": 97, "nb_dom": 97, "config_updat": [98, 99], "weightfitt": [98, 99, 101, 106], "contourfitt": [98, 99], "read_entri": [98, 100], "plot_2d_contour": [98, 100], "plot_1d_contour": [98, 100], "contour": [99, 100], "config_path": 99, "new_config_path": 99, "dummy_sect": 99, "temp": 99, "dummi": 99, "section": 99, "header": 99, "configupdat": 99, "programat": 99, "statistical_fit": 99, "fit_weight": [99, 106], "config_outdir": 99, "weight_nam": [99, 106], "pisa_config_dict": 99, "add_to_databas": [99, 106], "flux": 99, "_database_path": 99, "statist": 99, "effect": [99, 102, 123], "account": 99, "systemat": 99, "hypersurfac": 99, "chang": [99, 104, 123], "assumpt": 99, "regard": 99, "pipeline_path": 99, "post_fix": 99, "include_retro": 99, "fit_1d_contour": 99, "run_nam": 99, "config_dict": 99, "grid_siz": 99, "theta23_minmax": 99, "36": 99, "54": 99, "dm31_minmax": 99, "1d": [99, 100], "fit_2d_contour": 99, "2d": [99, 100, 104], "content": 100, "contour_data": 100, "xlim": 100, "ylim": 100, "0023799999999999997": 100, "0025499999999999997": 100, "chi2_critical_valu": 100, "width": 100, "height": 100, "path_to_pisa_fit_result": 100, "name_of_my_model_in_fit": 100, "legend": 100, "color": 100, "linestyl": 100, "style": [100, 123], "line": [100, 102, 108], "upper": 100, "bound": 100, "axi": 100, "605": 100, "critic": [100, 120], "chi2": 100, "cl": 100, "right": [100, 104], "176": 100, "inch": 100, "388": 100, "706": 100, "abov": [100, 104, 106, 125], "352": 100, "piecewiselinearlr": [101, 102], "progressbar": [101, 102], "graphnetearlystop": [101, 102], "mseloss": [101, 104], "rmseloss": [101, 104], "logcoshloss": [101, 104], "crossentropyloss": [101, 104], "binarycrossentropyloss": [101, 104], "logcmk": [101, 104], "vonmisesfisherloss": [101, 104], "vonmisesfisher2dloss": [101, 104], "euclideandistanceloss": [101, 104], "vonmisesfisher3dloss": [101, 104], "collator_sequence_bucklet": [101, 105], "make_dataload": [101, 105], "make_train_validation_dataload": [101, 105], "get_predict": [101, 105], "save_result": [101, 105], "save_select": [101, 105], "uniform": [101, 106], "bjoernlow": [101, 106], "mileston": 102, "factor": 102, "last_epoch": 102, "_lrschedul": 102, "interpol": 102, "linearli": 102, "multipli": 102, "closest": 102, "vice": 102, "versa": 102, "wrap": [102, 112, 113], "epoch": [102, 108], "stdout": 102, "get_lr": 102, "refresh_r": 102, "process_posit": 102, "tqdmprogressbar": 102, "progress": 102, "bar": 102, "customis": 102, "init_validation_tqdm": 102, "init_predict_tqdm": 102, "init_test_tqdm": 102, "init_train_tqdm": 102, "get_metr": 102, "on_train_epoch_start": 102, "previou": 102, "behaviour": 102, "on_train_epoch_end": 102, "don": [102, 125], "duplciat": 102, "save_dir": 102, "earlystop": 102, "earli": [102, 108], "keyword": [102, 110, 115], "graphnet_model": 102, "on_validation_end": 102, "on_fit_end": 102, "runtim": [103, 125], "azimuth_kei": 103, "zenith_kei": 103, "access": [103, 125], "azimiuth": 103, "return_el": 104, "elementwis": 104, "term": 104, "squar": 104, "root": [104, 125], "cosh": 104, "small": 104, "cross": 104, "entropi": 104, "num_class": 104, "softmax": 104, "ed": 104, "probabl": 104, "mit": 104, "licens": 104, "copyright": 104, "2019": 104, "ryabinin": 104, "permiss": 104, "herebi": 104, "person": 104, "copi": 104, "document": 104, "deal": 104, "limit": 104, "modifi": 104, "publish": 104, "sublicens": 104, "sell": 104, "permit": 104, "whom": 104, "furnish": 104, "so": [104, 125], "subject": 104, "condit": 104, "shall": 104, "substanti": 104, "portion": 104, "THE": 104, "AS": 104, "warranti": 104, "OF": 104, "kind": 104, "OR": 104, "impli": 104, "BUT": 104, "TO": 104, "merchant": 104, "FOR": 104, "particular": [104, 123], "AND": 104, "noninfring": 104, "IN": 104, "NO": 104, "holder": 104, "BE": 104, "liabl": 104, "claim": 104, "damag": 104, "liabil": 104, "action": 104, "contract": 104, "tort": 104, "aris": 104, "WITH": 104, "_____________________": 104, "mryab": 104, "vmf_loss": 104, "master": 104, "py": [104, 125], "bessel": 104, "exponenti": 104, "ditto": 104, "iv": 104, "1812": 104, "04616": 104, "spite": 104, "suggest": 104, "sec": 104, "paper": 104, "correct": 104, "static": [104, 123], "ctx": 104, "grad_output": 104, "von": 104, "mise": 104, "fisher": 104, "log_cmk_exact": 104, "c_": 104, "exactli": [104, 120], "log_cmk_approx": 104, "approx": 104, "minu": 104, "sign": 104, "log_cmk": 104, "kappa_switch": 104, "diverg": 104, "700": 104, "float64": 104, "precis": 104, "unaccur": 104, "switch": 104, "batch_split": 105, "bucket": 105, "cut": 105, "mini": 105, "total": 105, "explicitli": [105, 110, 115], "alwai": 105, "respect": 105, "database_indic": 105, "test_siz": 105, "node_level": 105, "tag": [105, 123, 125], "archiv": 105, "file_path": 105, "csv": [105, 112], "uniformweightfitt": 106, "bin": 106, "privat": 106, "_fit_weight": 106, "sql": 106, "desir": [106, 118], "np": 106, "happen": 106, "x_low": 106, "wherea": 106, "curv": 106, "base_config": [107, 109], "dataset_config": [107, 109], "training_config": [107, 109], "argumentpars": [107, 108], "rename_state_dict_entri": [107, 117], "is_gcd_fil": [107, 118], "is_i3_fil": [107, 118], "has_extens": [107, 118], "find_i3_fil": [107, 118], "has_icecube_packag": [107, 119], "has_torch_packag": [107, 119], "has_pisa_packag": [107, 119], "requires_icecub": [107, 119], "repeatfilt": [107, 120], "eps_lik": [107, 121], "consist": [108, 120, 123], "cli": 108, "pop_default": 108, "usag": 108, "command": [108, 125], "standard_argu": 108, "training_example_data_sqlit": 108, "patienc": 108, "narg": 108, "example_energy_reconstruction_model": 108, "num": 108, "fetch": 108, "with_standard_argu": 108, "baseconfig": [109, 110, 111, 112, 113, 115], "get_all_argument_valu": [109, 110], "save_dataset_config": [109, 112], "datasetconfigsavermeta": [109, 112], "datasetconfigsaverabcmeta": [109, 112], "save_model_config": [109, 113], "modelconfigsavermeta": [109, 113], "modelconfigsaverabc": [109, 113], "traverse_and_appli": [109, 114], "list_all_submodul": [109, 114], "get_all_grapnet_class": [109, 114], "is_graphnet_modul": [109, 114], "is_graphnet_class": [109, 114], "get_graphnet_class": [109, 114], "trainingconfig": [109, 115], "basemodel": [110, 112, 113], "validationerror": [110, 115], "pydantic_cor": [110, 115], "dump": [110, 112, 113], "yaml": [110, 111], "as_dict": [110, 112, 113], "model_computed_field": [110, 112, 113, 115], "classvar": [110, 112, 113, 115], "computedfieldinfo": [110, 112, 113, 115], "configdict": [110, 112, 113, 115], "conform": [110, 112, 113, 115], "pydant": [110, 112, 113, 115], "model_field": [110, 112, 113, 115], "fieldinfo": [110, 112, 113, 115], "metadata": [110, 112, 113, 115], "replac": [110, 112, 113, 115, 117], "__fields__": [110, 112, 113, 115], "v1": [110, 112, 113, 115, 125], "re": [111, 125], "save_config": 111, "dataconfig": 112, "transpar": [112, 113, 123], "reproduc": [112, 113], "session": [112, 113], "anoth": [112, 113], "still": 112, "train_select": 112, "unambigu": [112, 113], "annot": [112, 113, 115], "nonetyp": 112, "init_fn": [112, 113], "__init__": [112, 113, 125], "metaclass": [112, 113], "abcmeta": [112, 113], "datasetconfigsav": 112, "trainabl": 113, "hyperparamet": 113, "thu": 113, "modelconfigsav": 113, "fn_kwarg": 114, "structur": 114, "moduletyp": 114, "grapnet": 114, "lookup": 114, "transit": 117, "old_phras": 117, "new_phras": 117, "deepcopi": 117, "who": 117, "renam": 117, "phrase": 117, "system": [118, 125], "filenam": 118, "dir": 118, "test_funct": 119, "repeat": 120, "nb_repeats_allow": 120, "record": 120, "logrecord": 120, "clear": 120, "intuit": 120, "composit": 120, "loggeradapt": 120, "clash": 120, "setlevel": 120, "deleg": 120, "msg": 120, "warn": 120, "info": [120, 125], "debug": 120, "warning_onc": 120, "onc": 120, "handler": 120, "file_handl": 120, "filehandl": 120, "stream_handl": 120, "streamhandl": 120, "assort": 121, "ep": 121, "api": 122, "To": [123, 125], "sure": [123, 125], "smooth": 123, "guidelin": 123, "guid": 123, "encourag": 123, "contributor": 123, "discuss": 123, "bug": 123, "anyth": 123, "describ": 123, "would": 123, "yourself": 123, "ownership": 123, "prioriti": 123, "situat": 123, "lot": 123, "effort": 123, "go": 123, "outsid": 123, "scope": 123, "better": 123, "fork": 123, "repo": 123, "dedic": 123, "branch": [123, 125], "repositori": 123, "own": [123, 125], "autom": 123, "review": 123, "least": [123, 125], "pep8": 123, "docstr": 123, "googl": 123, "hint": 123, "adher": 123, "pep": 123, "pylint": 123, "flake8": 123, "black": 123, "well": 123, "recommend": [123, 125], "mypi": 123, "pydocstyl": 123, "docformatt": 123, "commit": 123, "hook": 123, "instal": 123, "pip": [123, 125], "Then": 123, "everytim": 123, "pep257": 123, "concept": 123, "ljvmiranda921": 123, "io": 123, "notebook": 123, "2018": 123, "06": 123, "21": 123, "precommit": 123, "virtual": 125, "anaconda": 125, "prove": 125, "instruct": 125, "want": 125, "part": 125, "achiev": 125, "bash": 125, "shell": 125, "cvmf": 125, "opensciencegrid": 125, "py3": 125, "v4": 125, "sh": 125, "rhel_7_x86_64": 125, "metaproject": 125, "env": 125, "alia": 125, "script": 125, "With": 125, "now": 125, "extra": 125, "geometr": 125, "won": 125, "later": 125, "torch_cpu": 125, "txt": 125, "torch_gpu": 125, "unix": 125, "git": 125, "clone": 125, "usernam": 125, "cd": 125, "conda": 125, "gcc_linux": 125, "gxx_linux": 125, "libgcc": 125, "cudatoolkit": 125, "11": 125, "forg": 125, "box": 125, "compil": 125, "gcc": 125, "date": 125, "possibli": 125, "cuda": 125, "toolkit": 125, "recent": 125, "omit": 125, "newer": 125, "export": 125, "ld_library_path": 125, "anaconda3": 125, "miniconda3": 125, "bashrc": 125, "librari": 125, "rm": 125, "asogaard": 125, "latest": 125, "dc423315742c": 125, "01_icetrai": 125, "01_convert_i3_fil": 125, "2023": 125, "01": 125, "24": 125, "41": 125, "27": 125, "graphnet_20230124": 125, "134127": 125, "46": 125, "convert_i3_fil": 125, "ic86": 125, "thread": 125, "00": 125, "79": 125, "26": 125, "413": 125, "88it": 125, "specialis": 125, "ones": 125, "push": 125, "vx": 125}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [54, 0, 0, "-", "deployment"], [63, 0, 0, "-", "models"], [98, 0, 0, "-", "pisa"], [101, 0, 0, "-", "training"], [107, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "dataclasses"], [6, 0, 0, "-", "dataconverter"], [7, 0, 0, "-", "dataloader"], [8, 0, 0, "-", "datamodule"], [9, 0, 0, "-", "dataset"], [15, 0, 0, "-", "extractors"], [35, 0, 0, "-", "parquet"], [37, 0, 0, "-", "pipeline"], [38, 0, 0, "-", "pre_configured"], [40, 0, 0, "-", "readers"], [43, 0, 0, "-", "sqlite"], [45, 0, 0, "-", "utilities"], [50, 0, 0, "-", "writers"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.dataclasses": [[5, 1, 1, "", "I3FileSet"], [5, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_files"], [5, 2, 1, "", "modules"], [5, 2, 1, "", "output_folder"]], "graphnet.data.dataconverter": [[6, 1, 1, "", "DataConverter"], [6, 4, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[6, 3, 1, "", "get_map_function"], [6, 3, 1, "", "merge_files"]], "graphnet.data.dataloader": [[7, 1, 1, "", "DataLoader"], [7, 4, 1, "", "collate_fn"], [7, 4, 1, "", "do_shuffle"]], "graphnet.data.dataloader.DataLoader": [[7, 3, 1, "", "from_dataset_config"]], "graphnet.data.datamodule": [[8, 1, 1, "", "GraphNeTDataModule"]], "graphnet.data.datamodule.GraphNeTDataModule": [[8, 3, 1, "", "prepare_data"], [8, 3, 1, "", "setup"], [8, 3, 1, "", "teardown"], [8, 5, 1, "", "test_dataloader"], [8, 5, 1, "", "train_dataloader"], [8, 5, 1, "", "val_dataloader"]], "graphnet.data.dataset": [[10, 0, 0, "-", "dataset"], [11, 0, 0, "-", "parquet"], [13, 0, 0, "-", "sqlite"]], "graphnet.data.dataset.dataset": [[10, 6, 1, "", "ColumnMissingException"], [10, 1, 1, "", "Dataset"], [10, 1, 1, "", "EnsembleDataset"], [10, 4, 1, "", "load_module"], [10, 4, 1, "", "parse_graph_definition"]], "graphnet.data.dataset.dataset.Dataset": [[10, 3, 1, "", "add_label"], [10, 3, 1, "", "concatenate"], [10, 3, 1, "", "from_config"], [10, 5, 1, "", "path"], [10, 3, 1, "", "query_table"], [10, 5, 1, "", "truth_table"]], "graphnet.data.dataset.parquet": [[12, 0, 0, "-", "parquet_dataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[12, 1, 1, "", "ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset": [[12, 3, 1, "", "query_table"]], "graphnet.data.dataset.sqlite": [[14, 0, 0, "-", "sqlite_dataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[14, 1, 1, "", "SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset": [[14, 3, 1, "", "query_table"]], "graphnet.data.extractors": [[16, 0, 0, "-", "extractor"], [17, 0, 0, "-", "icecube"]], "graphnet.data.extractors.extractor": [[16, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[16, 5, 1, "", "name"]], "graphnet.data.extractors.icecube": [[18, 0, 0, "-", "i3extractor"], [19, 0, 0, "-", "i3featureextractor"], [20, 0, 0, "-", "i3genericextractor"], [21, 0, 0, "-", "i3hybridrecoextractor"], [22, 0, 0, "-", "i3ntmuonlabelsextractor"], [23, 0, 0, "-", "i3particleextractor"], [24, 0, 0, "-", "i3pisaextractor"], [25, 0, 0, "-", "i3quesoextractor"], [26, 0, 0, "-", "i3retroextractor"], [27, 0, 0, "-", "i3splinempeextractor"], [28, 0, 0, "-", "i3truthextractor"], [29, 0, 0, "-", "i3tumextractor"], [30, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[18, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[18, 3, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[19, 1, 1, "", "I3FeatureExtractor"], [19, 1, 1, "", "I3FeatureExtractorIceCube86"], [19, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [19, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [19, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[20, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[21, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[22, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[23, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[24, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[25, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[26, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[27, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[28, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[29, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[31, 0, 0, "-", "collections"], [32, 0, 0, "-", "frames"], [33, 0, 0, "-", "i3_filters"], [34, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[31, 4, 1, "", "flatten_nested_dictionary"], [31, 4, 1, "", "serialise"], [31, 4, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[32, 4, 1, "", "frame_is_montecarlo"], [32, 4, 1, "", "frame_is_noise"], [32, 4, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[33, 1, 1, "", "I3Filter"], [33, 1, 1, "", "I3FilterMask"], [33, 1, 1, "", "NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[34, 4, 1, "", "break_cyclic_recursion"], [34, 4, 1, "", "cast_object_to_pure_python"], [34, 4, 1, "", "cast_pulse_series_to_pure_python"], [34, 4, 1, "", "get_member_variables"], [34, 4, 1, "", "is_boost_class"], [34, 4, 1, "", "is_boost_enum"], [34, 4, 1, "", "is_icecube_class"], [34, 4, 1, "", "is_method"], [34, 4, 1, "", "is_type"]], "graphnet.data.parquet": [[36, 0, 0, "-", "deprecated_methods"]], "graphnet.data.parquet.deprecated_methods": [[36, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.pipeline": [[37, 1, 1, "", "InSQLitePipeline"]], "graphnet.data.pre_configured": [[39, 0, 0, "-", "dataconverters"]], "graphnet.data.pre_configured.dataconverters": [[39, 1, 1, "", "I3ToParquetConverter"], [39, 1, 1, "", "I3ToSQLiteConverter"]], "graphnet.data.readers": [[41, 0, 0, "-", "graphnet_file_reader"], [42, 0, 0, "-", "i3reader"]], "graphnet.data.readers.graphnet_file_reader": [[41, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[41, 5, 1, "", "accepted_extractors"], [41, 5, 1, "", "accepted_file_extensions"], [41, 5, 1, "", "extracor_names"], [41, 3, 1, "", "find_files"], [41, 3, 1, "", "set_extractors"], [41, 3, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[42, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[42, 3, 1, "", "find_files"]], "graphnet.data.sqlite": [[44, 0, 0, "-", "deprecated_methods"]], "graphnet.data.sqlite.deprecated_methods": [[44, 1, 1, "", "SQLiteDataConverter"]], "graphnet.data.utilities": [[46, 0, 0, "-", "parquet_to_sqlite"], [47, 0, 0, "-", "random"], [48, 0, 0, "-", "sqlite_utilities"], [49, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.parquet_to_sqlite": [[46, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[46, 3, 1, "", "run"]], "graphnet.data.utilities.random": [[47, 4, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[48, 4, 1, "", "attach_index"], [48, 4, 1, "", "create_table"], [48, 4, 1, "", "create_table_and_save_to_sql"], [48, 4, 1, "", "database_exists"], [48, 4, 1, "", "database_table_exists"], [48, 4, 1, "", "get_primary_keys"], [48, 4, 1, "", "query_database"], [48, 4, 1, "", "run_sql_code"], [48, 4, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[49, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[49, 3, 1, "", "resolve"]], "graphnet.data.writers": [[51, 0, 0, "-", "graphnet_writer"], [52, 0, 0, "-", "parquet_writer"], [53, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[51, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[51, 5, 1, "", "expects_merged_dataframes"], [51, 5, 1, "", "file_extension"], [51, 3, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[52, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[52, 3, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[53, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[53, 3, 1, "", "merge_files"]], "graphnet.deployment": [[55, 0, 0, "-", "deployer"], [56, 0, 0, "-", "deployment_module"]], "graphnet.deployment.deployer": [[55, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[55, 3, 1, "", "run"]], "graphnet.deployment.deployment_module": [[56, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.icecube": [[60, 0, 0, "-", "cleaning_module"], [62, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[60, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.inference_module": [[62, 1, 1, "", "I3InferenceModule"]], "graphnet.models": [[64, 0, 0, "-", "coarsening"], [65, 0, 0, "-", "components"], [69, 0, 0, "-", "detector"], [73, 0, 0, "-", "gnn"], [80, 0, 0, "-", "graphs"], [89, 0, 0, "-", "model"], [90, 0, 0, "-", "rnn"], [92, 0, 0, "-", "standard_model"], [93, 0, 0, "-", "task"], [97, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[64, 1, 1, "", "AttributeCoarsening"], [64, 1, 1, "", "Coarsening"], [64, 1, 1, "", "CustomDOMCoarsening"], [64, 1, 1, "", "DOMAndTimeWindowCoarsening"], [64, 1, 1, "", "DOMCoarsening"], [64, 4, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[64, 3, 1, "", "forward"], [64, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[66, 0, 0, "-", "embedding"], [67, 0, 0, "-", "layers"], [68, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[66, 1, 1, "", "SinusoidalPosEmb"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[66, 3, 1, "", "forward"]], "graphnet.models.components.layers": [[67, 1, 1, "", "DynEdgeConv"], [67, 1, 1, "", "DynTrans"], [67, 1, 1, "", "EdgeConvTito"]], "graphnet.models.components.layers.DynEdgeConv": [[67, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[67, 3, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[67, 3, 1, "", "forward"], [67, 3, 1, "", "message"], [67, 3, 1, "", "reset_parameters"]], "graphnet.models.components.pool": [[68, 4, 1, "", "group_by"], [68, 4, 1, "", "group_pulses_to_dom"], [68, 4, 1, "", "group_pulses_to_pmt"], [68, 4, 1, "", "min_pool"], [68, 4, 1, "", "min_pool_x"], [68, 4, 1, "", "std_pool"], [68, 4, 1, "", "std_pool_x"], [68, 4, 1, "", "sum_pool"], [68, 4, 1, "", "sum_pool_and_distribute"], [68, 4, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[70, 0, 0, "-", "detector"], [71, 0, 0, "-", "icecube"], [72, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[70, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[70, 3, 1, "", "feature_map"], [70, 3, 1, "", "forward"], [70, 5, 1, "", "geometry_table"], [70, 5, 1, "", "sensor_index_name"], [70, 5, 1, "", "sensor_position_names"], [70, 5, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[71, 1, 1, "", "IceCube86"], [71, 1, 1, "", "IceCubeDeepCore"], [71, 1, 1, "", "IceCubeKaggle"], [71, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[71, 3, 1, "", "feature_map"], [71, 2, 1, "", "geometry_table_path"], [71, 2, 1, "", "sensor_id_column"], [71, 2, 1, "", "string_id_column"], [71, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[71, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[71, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[71, 3, 1, "", "feature_map"], [71, 2, 1, "", "geometry_table_path"], [71, 2, 1, "", "sensor_id_column"], [71, 2, 1, "", "string_id_column"], [71, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[72, 1, 1, "", "ORCA150"], [72, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.ORCA150": [[72, 3, 1, "", "feature_map"], [72, 2, 1, "", "geometry_table_path"], [72, 2, 1, "", "sensor_id_column"], [72, 2, 1, "", "string_id_column"], [72, 2, 1, "", "xyz"]], "graphnet.models.gnn": [[74, 0, 0, "-", "RNN_tito"], [75, 0, 0, "-", "convnet"], [76, 0, 0, "-", "dynedge"], [77, 0, 0, "-", "dynedge_jinst"], [78, 0, 0, "-", "dynedge_kaggle_tito"], [79, 0, 0, "-", "gnn"]], "graphnet.models.gnn.RNN_tito": [[74, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[74, 3, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[75, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[75, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[76, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[76, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[77, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[77, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[78, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[78, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[79, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[79, 3, 1, "", "forward"], [79, 5, 1, "", "nb_inputs"], [79, 5, 1, "", "nb_outputs"]], "graphnet.models.graphs": [[81, 0, 0, "-", "edges"], [84, 0, 0, "-", "graph_definition"], [85, 0, 0, "-", "graphs"], [86, 0, 0, "-", "nodes"], [88, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[82, 0, 0, "-", "edges"], [83, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[82, 1, 1, "", "EdgeDefinition"], [82, 1, 1, "", "EuclideanEdges"], [82, 1, 1, "", "KNNEdges"], [82, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[82, 3, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[83, 1, 1, "", "MinkowskiKNNEdges"], [83, 4, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[84, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[84, 3, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[85, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[87, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[87, 1, 1, "", "NodeAsDOMTimeSeries"], [87, 1, 1, "", "NodeDefinition"], [87, 1, 1, "", "NodesAsPulses"], [87, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[87, 3, 1, "", "forward"], [87, 5, 1, "", "nb_outputs"], [87, 3, 1, "", "set_number_of_inputs"], [87, 3, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[88, 4, 1, "", "cluster_summarize_with_percentiles"], [88, 4, 1, "", "gather_cluster_sequence"], [88, 4, 1, "", "identify_indices"], [88, 4, 1, "", "lex_sort"]], "graphnet.models.model": [[89, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[89, 3, 1, "", "extra_repr"], [89, 3, 1, "", "extra_repr_recursive"], [89, 3, 1, "", "from_config"], [89, 3, 1, "", "load"], [89, 3, 1, "", "load_state_dict"], [89, 3, 1, "", "save"], [89, 3, 1, "", "save_state_dict"], [89, 3, 1, "", "set_verbose_print_recursively"], [89, 2, 1, "", "verbose_print"]], "graphnet.models.rnn": [[91, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[91, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[91, 3, 1, "", "clean_up_data_object"], [91, 3, 1, "", "forward"]], "graphnet.models.standard_model": [[92, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[92, 3, 1, "", "compute_loss"], [92, 3, 1, "", "configure_optimizers"], [92, 3, 1, "", "fit"], [92, 3, 1, "", "forward"], [92, 3, 1, "", "inference"], [92, 3, 1, "", "predict"], [92, 3, 1, "", "predict_as_dataframe"], [92, 5, 1, "", "prediction_labels"], [92, 3, 1, "", "shared_step"], [92, 5, 1, "", "target_labels"], [92, 3, 1, "", "train"], [92, 3, 1, "", "training_step"], [92, 3, 1, "", "validation_step"]], "graphnet.models.task": [[94, 0, 0, "-", "classification"], [95, 0, 0, "-", "reconstruction"], [96, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[94, 1, 1, "", "BinaryClassificationTask"], [94, 1, 1, "", "BinaryClassificationTaskLogits"], [94, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[94, 2, 1, "", "default_prediction_labels"], [94, 2, 1, "", "default_target_labels"], [94, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[94, 2, 1, "", "default_prediction_labels"], [94, 2, 1, "", "default_target_labels"], [94, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[95, 1, 1, "", "AzimuthReconstruction"], [95, 1, 1, "", "AzimuthReconstructionWithKappa"], [95, 1, 1, "", "DirectionReconstructionWithKappa"], [95, 1, 1, "", "EnergyReconstruction"], [95, 1, 1, "", "EnergyReconstructionWithPower"], [95, 1, 1, "", "EnergyReconstructionWithUncertainty"], [95, 1, 1, "", "EnergyTCReconstruction"], [95, 1, 1, "", "InelasticityReconstruction"], [95, 1, 1, "", "PositionReconstruction"], [95, 1, 1, "", "TimeReconstruction"], [95, 1, 1, "", "VertexReconstruction"], [95, 1, 1, "", "ZenithReconstruction"], [95, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[95, 2, 1, "", "default_prediction_labels"], [95, 2, 1, "", "default_target_labels"], [95, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[95, 2, 1, "", "default_prediction_labels"], [95, 2, 1, "", "default_target_labels"], [95, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[95, 2, 1, "", "default_prediction_labels"], [95, 2, 1, "", "default_target_labels"], [95, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[95, 2, 1, "", "default_prediction_labels"], [95, 2, 1, "", "default_target_labels"], [95, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[95, 2, 1, "", "default_prediction_labels"], [95, 2, 1, "", "default_target_labels"], [95, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[95, 2, 1, "", "default_prediction_labels"], [95, 2, 1, "", "default_target_labels"], [95, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[95, 2, 1, "", "default_prediction_labels"], [95, 2, 1, "", "default_target_labels"], [95, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[95, 2, 1, "", "default_prediction_labels"], [95, 2, 1, "", "default_target_labels"], [95, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[95, 2, 1, "", "default_prediction_labels"], [95, 2, 1, "", "default_target_labels"], [95, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[95, 2, 1, "", "default_prediction_labels"], [95, 2, 1, "", "default_target_labels"], [95, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[95, 2, 1, "", "default_prediction_labels"], [95, 2, 1, "", "default_target_labels"], [95, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[95, 2, 1, "", "default_prediction_labels"], [95, 2, 1, "", "default_target_labels"], [95, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[95, 2, 1, "", "default_prediction_labels"], [95, 2, 1, "", "default_target_labels"], [95, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[96, 1, 1, "", "IdentityTask"], [96, 1, 1, "", "LearnedTask"], [96, 1, 1, "", "StandardFlowTask"], [96, 1, 1, "", "StandardLearnedTask"], [96, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[96, 5, 1, "", "default_prediction_labels"], [96, 5, 1, "", "default_target_labels"], [96, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[96, 3, 1, "", "compute_loss"], [96, 3, 1, "", "forward"], [96, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[96, 3, 1, "", "compute_loss"], [96, 3, 1, "", "forward"], [96, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[96, 3, 1, "", "compute_loss"], [96, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[96, 5, 1, "", "default_prediction_labels"], [96, 5, 1, "", "default_target_labels"], [96, 3, 1, "", "inference"], [96, 5, 1, "", "nb_inputs"], [96, 3, 1, "", "train_eval"]], "graphnet.models.utils": [[97, 4, 1, "", "calculate_distance_matrix"], [97, 4, 1, "", "calculate_xyzt_homophily"], [97, 4, 1, "", "knn_graph_batch"]], "graphnet.pisa": [[99, 0, 0, "-", "fitting"], [100, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[99, 1, 1, "", "ContourFitter"], [99, 1, 1, "", "WeightFitter"], [99, 4, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[99, 3, 1, "", "fit_1d_contour"], [99, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[99, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[100, 4, 1, "", "plot_1D_contour"], [100, 4, 1, "", "plot_2D_contour"], [100, 4, 1, "", "read_entry"]], "graphnet.training": [[102, 0, 0, "-", "callbacks"], [103, 0, 0, "-", "labels"], [104, 0, 0, "-", "loss_functions"], [105, 0, 0, "-", "utils"], [106, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[102, 1, 1, "", "GraphnetEarlyStopping"], [102, 1, 1, "", "PiecewiseLinearLR"], [102, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[102, 3, 1, "", "on_fit_end"], [102, 3, 1, "", "on_train_epoch_end"], [102, 3, 1, "", "on_validation_end"], [102, 3, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[102, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[102, 3, 1, "", "get_metrics"], [102, 3, 1, "", "init_predict_tqdm"], [102, 3, 1, "", "init_test_tqdm"], [102, 3, 1, "", "init_train_tqdm"], [102, 3, 1, "", "init_validation_tqdm"], [102, 3, 1, "", "on_train_epoch_end"], [102, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[103, 1, 1, "", "Direction"], [103, 1, 1, "", "Label"]], "graphnet.training.labels.Label": [[103, 5, 1, "", "key"]], "graphnet.training.loss_functions": [[104, 1, 1, "", "BinaryCrossEntropyLoss"], [104, 1, 1, "", "CrossEntropyLoss"], [104, 1, 1, "", "EuclideanDistanceLoss"], [104, 1, 1, "", "LogCMK"], [104, 1, 1, "", "LogCoshLoss"], [104, 1, 1, "", "LossFunction"], [104, 1, 1, "", "MSELoss"], [104, 1, 1, "", "RMSELoss"], [104, 1, 1, "", "VonMisesFisher2DLoss"], [104, 1, 1, "", "VonMisesFisher3DLoss"], [104, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[104, 3, 1, "", "backward"], [104, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[104, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[104, 3, 1, "", "log_cmk"], [104, 3, 1, "", "log_cmk_approx"], [104, 3, 1, "", "log_cmk_exact"]], "graphnet.training.utils": [[105, 4, 1, "", "collate_fn"], [105, 1, 1, "", "collator_sequence_buckleting"], [105, 4, 1, "", "get_predictions"], [105, 4, 1, "", "make_dataloader"], [105, 4, 1, "", "make_train_validation_dataloader"], [105, 4, 1, "", "save_results"], [105, 4, 1, "", "save_selection"]], "graphnet.training.weight_fitting": [[106, 1, 1, "", "BjoernLow"], [106, 1, 1, "", "Uniform"], [106, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[106, 3, 1, "", "fit"]], "graphnet.utilities": [[108, 0, 0, "-", "argparse"], [109, 0, 0, "-", "config"], [116, 0, 0, "-", "decorators"], [117, 0, 0, "-", "deprecation_tools"], [118, 0, 0, "-", "filesys"], [119, 0, 0, "-", "imports"], [120, 0, 0, "-", "logging"], [121, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[108, 1, 1, "", "ArgumentParser"], [108, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[108, 2, 1, "", "standard_arguments"], [108, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[108, 3, 1, "", "contains"], [108, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[110, 0, 0, "-", "base_config"], [111, 0, 0, "-", "configurable"], [112, 0, 0, "-", "dataset_config"], [113, 0, 0, "-", "model_config"], [114, 0, 0, "-", "parsing"], [115, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[110, 1, 1, "", "BaseConfig"], [110, 4, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[110, 3, 1, "", "as_dict"], [110, 3, 1, "", "dump"], [110, 3, 1, "", "load"], [110, 2, 1, "", "model_computed_fields"], [110, 2, 1, "", "model_config"], [110, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[111, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[111, 5, 1, "", "config"], [111, 3, 1, "", "from_config"], [111, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[112, 1, 1, "", "DatasetConfig"], [112, 1, 1, "", "DatasetConfigSaverABCMeta"], [112, 1, 1, "", "DatasetConfigSaverMeta"], [112, 4, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[112, 3, 1, "", "as_dict"], [112, 2, 1, "", "features"], [112, 2, 1, "", "graph_definition"], [112, 2, 1, "", "index_column"], [112, 2, 1, "", "loss_weight_column"], [112, 2, 1, "", "loss_weight_default_value"], [112, 2, 1, "", "loss_weight_table"], [112, 2, 1, "", "model_computed_fields"], [112, 2, 1, "", "model_config"], [112, 2, 1, "", "model_fields"], [112, 2, 1, "", "node_truth"], [112, 2, 1, "", "node_truth_table"], [112, 2, 1, "", "path"], [112, 2, 1, "", "pulsemaps"], [112, 2, 1, "", "seed"], [112, 2, 1, "", "selection"], [112, 2, 1, "", "string_selection"], [112, 2, 1, "", "truth"], [112, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[113, 1, 1, "", "ModelConfig"], [113, 1, 1, "", "ModelConfigSaverABC"], [113, 1, 1, "", "ModelConfigSaverMeta"], [113, 4, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[113, 2, 1, "", "arguments"], [113, 3, 1, "", "as_dict"], [113, 2, 1, "", "class_name"], [113, 2, 1, "", "model_computed_fields"], [113, 2, 1, "", "model_config"], [113, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[114, 4, 1, "", "get_all_grapnet_classes"], [114, 4, 1, "", "get_graphnet_classes"], [114, 4, 1, "", "is_graphnet_class"], [114, 4, 1, "", "is_graphnet_module"], [114, 4, 1, "", "list_all_submodules"], [114, 4, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[115, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[115, 2, 1, "", "dataloader"], [115, 2, 1, "", "early_stopping_patience"], [115, 2, 1, "", "fit"], [115, 2, 1, "", "model_computed_fields"], [115, 2, 1, "", "model_config"], [115, 2, 1, "", "model_fields"], [115, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[117, 4, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[118, 4, 1, "", "find_i3_files"], [118, 4, 1, "", "has_extension"], [118, 4, 1, "", "is_gcd_file"], [118, 4, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[119, 4, 1, "", "has_icecube_package"], [119, 4, 1, "", "has_pisa_package"], [119, 4, 1, "", "has_torch_package"], [119, 4, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[120, 1, 1, "", "Logger"], [120, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[120, 3, 1, "", "critical"], [120, 3, 1, "", "debug"], [120, 3, 1, "", "error"], [120, 5, 1, "", "file_handlers"], [120, 5, 1, "", "handlers"], [120, 3, 1, "", "info"], [120, 3, 1, "", "setLevel"], [120, 5, 1, "", "stream_handlers"], [120, 3, 1, "", "warning"], [120, 3, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[120, 3, 1, "", "filter"], [120, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[121, 4, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"about": [0, 124], "impact": [0, 124], "usag": [0, 124], "acknowledg": [0, 124], "api": 1, "constant": [2, 4], "data": 3, "dataclass": 5, "dataconvert": [6, 39], "dataload": 7, "datamodul": 8, "dataset": [9, 10], "parquet": [11, 35], "parquet_dataset": 12, "sqlite": [13, 43], "sqlite_dataset": 14, "extractor": [15, 16], "icecub": [17, 59, 71], "i3extractor": 18, "i3featureextractor": 19, "i3genericextractor": 20, "i3hybridrecoextractor": 21, "i3ntmuonlabelsextractor": 22, "i3particleextractor": 23, "i3pisaextractor": 24, "i3quesoextractor": 25, "i3retroextractor": 26, "i3splinempeextractor": 27, "i3truthextractor": 28, "i3tumextractor": 29, "util": [30, 45, 88, 97, 105, 107], "collect": 31, "frame": 32, "i3_filt": 33, "type": 34, "deprecated_method": [36, 44, 58], "pipelin": 37, "pre_configur": 38, "reader": 40, "graphnet_file_read": 41, "i3read": 42, "parquet_to_sqlit": 46, "random": 47, "sqlite_util": 48, "string_selection_resolv": 49, "writer": 50, "graphnet_writ": 51, "parquet_writ": 52, "sqlite_writ": 53, "deploy": [54, 55], "deployment_modul": 56, "i3modul": 57, "cleaning_modul": 60, "i3deploy": 61, "inference_modul": 62, "model": [63, 89], "coarsen": 64, "compon": 65, "embed": 66, "layer": 67, "pool": 68, "detector": [69, 70], "prometheu": 72, "gnn": [73, 79], "rnn_tito": 74, "convnet": 75, "dynedg": 76, "dynedge_jinst": 77, "dynedge_kaggle_tito": 78, "graph": [80, 85], "edg": [81, 82], "minkowski": 83, "graph_definit": 84, "node": [86, 87], "rnn": 90, "node_rnn": 91, "standard_model": 92, "task": [93, 96], "classif": 94, "reconstruct": 95, "pisa": 98, "fit": 99, "plot": 100, "train": 101, "callback": 102, "label": 103, "loss_funct": 104, "weight_fit": 106, "argpars": 108, "config": 109, "base_config": 110, "configur": 111, "dataset_config": 112, "model_config": 113, "pars": 114, "training_config": 115, "decor": 116, "deprecation_tool": 117, "filesi": 118, "import": 119, "log": 120, "math": 121, "src": 122, "contribut": 123, "github": 123, "issu": 123, "pull": 123, "request": 123, "convent": 123, "code": 123, "qualiti": 123, "instal": 125, "icetrai": 125, "stand": 125, "alon": 125, "run": 125, "docker": 125}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"], [124, "about"]], "Impact": [[0, "impact"], [124, "impact"]], "Usage": [[0, "usage"], [124, "usage"]], "Acknowledgements": [[0, "acknowledgements"], [124, "acknowledgements"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "dataclasses": [[5, "module-graphnet.data.dataclasses"]], "dataconverter": [[6, "module-graphnet.data.dataconverter"]], "dataloader": [[7, "module-graphnet.data.dataloader"]], "datamodule": [[8, "module-graphnet.data.datamodule"]], "dataset": [[9, "module-graphnet.data.dataset"], [10, "module-graphnet.data.dataset.dataset"]], "parquet": [[11, "module-graphnet.data.dataset.parquet"], [35, "module-graphnet.data.parquet"]], "parquet_dataset": [[12, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "sqlite": [[13, "module-graphnet.data.dataset.sqlite"], [43, "module-graphnet.data.sqlite"]], "sqlite_dataset": [[14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "extractors": [[15, "module-graphnet.data.extractors"]], "extractor": [[16, "module-graphnet.data.extractors.extractor"]], "icecube": [[17, "module-graphnet.data.extractors.icecube"], [59, "icecube"], [71, "module-graphnet.models.detector.icecube"]], "i3extractor": [[18, "module-graphnet.data.extractors.icecube.i3extractor"]], "i3featureextractor": [[19, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor": [[20, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3hybridrecoextractor": [[21, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3ntmuonlabelsextractor": [[22, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor": [[23, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor": [[24, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor": [[25, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3retroextractor": [[26, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeextractor": [[27, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor": [[28, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor": [[29, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "utilities": [[30, "module-graphnet.data.extractors.icecube.utilities"], [45, "module-graphnet.data.utilities"], [107, "module-graphnet.utilities"]], "collections": [[31, "module-graphnet.data.extractors.icecube.utilities.collections"]], "frames": [[32, "module-graphnet.data.extractors.icecube.utilities.frames"]], "i3_filters": [[33, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "types": [[34, "module-graphnet.data.extractors.icecube.utilities.types"]], "deprecated_methods": [[36, "module-graphnet.data.parquet.deprecated_methods"], [44, "module-graphnet.data.sqlite.deprecated_methods"], [58, "deprecated-methods"]], "pipeline": [[37, "module-graphnet.data.pipeline"]], "pre_configured": [[38, "module-graphnet.data.pre_configured"]], "dataconverters": [[39, "module-graphnet.data.pre_configured.dataconverters"]], "readers": [[40, "module-graphnet.data.readers"]], "graphnet_file_reader": [[41, "module-graphnet.data.readers.graphnet_file_reader"]], "i3reader": [[42, "module-graphnet.data.readers.i3reader"]], "parquet_to_sqlite": [[46, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[47, "module-graphnet.data.utilities.random"]], "sqlite_utilities": [[48, "module-graphnet.data.utilities.sqlite_utilities"]], "string_selection_resolver": [[49, "module-graphnet.data.utilities.string_selection_resolver"]], "writers": [[50, "module-graphnet.data.writers"]], "graphnet_writer": [[51, "module-graphnet.data.writers.graphnet_writer"]], "parquet_writer": [[52, "module-graphnet.data.writers.parquet_writer"]], "sqlite_writer": [[53, "module-graphnet.data.writers.sqlite_writer"]], "deployment": [[54, "module-graphnet.deployment"]], "deployer": [[55, "module-graphnet.deployment.deployer"]], "deployment_module": [[56, "module-graphnet.deployment.deployment_module"]], "i3modules": [[57, "i3modules"]], "cleaning_module": [[60, "module-graphnet.deployment.icecube.cleaning_module"]], "i3deployer": [[61, "i3deployer"]], "inference_module": [[62, "module-graphnet.deployment.icecube.inference_module"]], "models": [[63, "module-graphnet.models"]], "coarsening": [[64, "module-graphnet.models.coarsening"]], "components": [[65, "module-graphnet.models.components"]], "embedding": [[66, "module-graphnet.models.components.embedding"]], "layers": [[67, "module-graphnet.models.components.layers"]], "pool": [[68, "module-graphnet.models.components.pool"]], "detector": [[69, "module-graphnet.models.detector"], [70, "module-graphnet.models.detector.detector"]], "prometheus": [[72, "module-graphnet.models.detector.prometheus"]], "gnn": [[73, "module-graphnet.models.gnn"], [79, "module-graphnet.models.gnn.gnn"]], "RNN_tito": [[74, "module-graphnet.models.gnn.RNN_tito"]], "convnet": [[75, "module-graphnet.models.gnn.convnet"]], "dynedge": [[76, "module-graphnet.models.gnn.dynedge"]], "dynedge_jinst": [[77, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedge_kaggle_tito": [[78, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "graphs": [[80, "module-graphnet.models.graphs"], [85, "module-graphnet.models.graphs.graphs"]], "edges": [[81, "module-graphnet.models.graphs.edges"], [82, "module-graphnet.models.graphs.edges.edges"]], "minkowski": [[83, "module-graphnet.models.graphs.edges.minkowski"]], "graph_definition": [[84, "module-graphnet.models.graphs.graph_definition"]], "nodes": [[86, "module-graphnet.models.graphs.nodes"], [87, "module-graphnet.models.graphs.nodes.nodes"]], "utils": [[88, "module-graphnet.models.graphs.utils"], [97, "module-graphnet.models.utils"], [105, "module-graphnet.training.utils"]], "model": [[89, "module-graphnet.models.model"]], "rnn": [[90, "module-graphnet.models.rnn"]], "node_rnn": [[91, "module-graphnet.models.rnn.node_rnn"]], "standard_model": [[92, "module-graphnet.models.standard_model"]], "task": [[93, "module-graphnet.models.task"], [96, "module-graphnet.models.task.task"]], "classification": [[94, "module-graphnet.models.task.classification"]], "reconstruction": [[95, "module-graphnet.models.task.reconstruction"]], "pisa": [[98, "module-graphnet.pisa"]], "fitting": [[99, "module-graphnet.pisa.fitting"]], "plotting": [[100, "module-graphnet.pisa.plotting"]], "training": [[101, "module-graphnet.training"]], "callbacks": [[102, "module-graphnet.training.callbacks"]], "labels": [[103, "module-graphnet.training.labels"]], "loss_functions": [[104, "module-graphnet.training.loss_functions"]], "weight_fitting": [[106, "module-graphnet.training.weight_fitting"]], "argparse": [[108, "module-graphnet.utilities.argparse"]], "config": [[109, "module-graphnet.utilities.config"]], "base_config": [[110, "module-graphnet.utilities.config.base_config"]], "configurable": [[111, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[112, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[113, "module-graphnet.utilities.config.model_config"]], "parsing": [[114, "module-graphnet.utilities.config.parsing"]], "training_config": [[115, "module-graphnet.utilities.config.training_config"]], "decorators": [[116, "module-graphnet.utilities.decorators"]], "deprecation_tools": [[117, "module-graphnet.utilities.deprecation_tools"]], "filesys": [[118, "module-graphnet.utilities.filesys"]], "imports": [[119, "module-graphnet.utilities.imports"]], "logging": [[120, "module-graphnet.utilities.logging"]], "maths": [[121, "module-graphnet.utilities.maths"]], "src": [[122, "src"]], "Contribute": [[123, "contribute"]], "GitHub issues": [[123, "github-issues"]], "Pull requests": [[123, "pull-requests"]], "Conventions": [[123, "conventions"]], "Code quality": [[123, "code-quality"]], "Install": [[125, "install"]], "Installing with IceTray": [[125, "installing-with-icetray"]], "Installing stand-alone": [[125, "installing-stand-alone"]], "Running in Docker": [[125, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.dataclasses"], [6, "module-graphnet.data.dataconverter"], [7, "module-graphnet.data.dataloader"], [8, "module-graphnet.data.datamodule"], [9, "module-graphnet.data.dataset"], [10, "module-graphnet.data.dataset.dataset"], [11, "module-graphnet.data.dataset.parquet"], [12, "module-graphnet.data.dataset.parquet.parquet_dataset"], [13, "module-graphnet.data.dataset.sqlite"], [14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"], [15, "module-graphnet.data.extractors"], [16, "module-graphnet.data.extractors.extractor"], [17, "module-graphnet.data.extractors.icecube"], [18, "module-graphnet.data.extractors.icecube.i3extractor"], [19, "module-graphnet.data.extractors.icecube.i3featureextractor"], [20, "module-graphnet.data.extractors.icecube.i3genericextractor"], [21, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"], [22, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"], [23, "module-graphnet.data.extractors.icecube.i3particleextractor"], [24, "module-graphnet.data.extractors.icecube.i3pisaextractor"], [25, "module-graphnet.data.extractors.icecube.i3quesoextractor"], [26, "module-graphnet.data.extractors.icecube.i3retroextractor"], [27, "module-graphnet.data.extractors.icecube.i3splinempeextractor"], [28, "module-graphnet.data.extractors.icecube.i3truthextractor"], [29, "module-graphnet.data.extractors.icecube.i3tumextractor"], [30, "module-graphnet.data.extractors.icecube.utilities"], [31, "module-graphnet.data.extractors.icecube.utilities.collections"], [32, "module-graphnet.data.extractors.icecube.utilities.frames"], [33, "module-graphnet.data.extractors.icecube.utilities.i3_filters"], [34, "module-graphnet.data.extractors.icecube.utilities.types"], [35, "module-graphnet.data.parquet"], [36, "module-graphnet.data.parquet.deprecated_methods"], [37, "module-graphnet.data.pipeline"], [38, "module-graphnet.data.pre_configured"], [39, "module-graphnet.data.pre_configured.dataconverters"], [40, "module-graphnet.data.readers"], [41, "module-graphnet.data.readers.graphnet_file_reader"], [42, "module-graphnet.data.readers.i3reader"], [43, "module-graphnet.data.sqlite"], [44, "module-graphnet.data.sqlite.deprecated_methods"], [45, "module-graphnet.data.utilities"], [46, "module-graphnet.data.utilities.parquet_to_sqlite"], [47, "module-graphnet.data.utilities.random"], [48, "module-graphnet.data.utilities.sqlite_utilities"], [49, "module-graphnet.data.utilities.string_selection_resolver"], [50, "module-graphnet.data.writers"], [51, "module-graphnet.data.writers.graphnet_writer"], [52, "module-graphnet.data.writers.parquet_writer"], [53, "module-graphnet.data.writers.sqlite_writer"], [54, "module-graphnet.deployment"], [55, "module-graphnet.deployment.deployer"], [56, "module-graphnet.deployment.deployment_module"], [60, "module-graphnet.deployment.icecube.cleaning_module"], [62, "module-graphnet.deployment.icecube.inference_module"], [63, "module-graphnet.models"], [64, "module-graphnet.models.coarsening"], [65, "module-graphnet.models.components"], [66, "module-graphnet.models.components.embedding"], [67, "module-graphnet.models.components.layers"], [68, "module-graphnet.models.components.pool"], [69, "module-graphnet.models.detector"], [70, "module-graphnet.models.detector.detector"], [71, "module-graphnet.models.detector.icecube"], [72, "module-graphnet.models.detector.prometheus"], [73, "module-graphnet.models.gnn"], [74, "module-graphnet.models.gnn.RNN_tito"], [75, "module-graphnet.models.gnn.convnet"], [76, "module-graphnet.models.gnn.dynedge"], [77, "module-graphnet.models.gnn.dynedge_jinst"], [78, "module-graphnet.models.gnn.dynedge_kaggle_tito"], [79, "module-graphnet.models.gnn.gnn"], [80, "module-graphnet.models.graphs"], [81, "module-graphnet.models.graphs.edges"], [82, "module-graphnet.models.graphs.edges.edges"], [83, "module-graphnet.models.graphs.edges.minkowski"], [84, "module-graphnet.models.graphs.graph_definition"], [85, "module-graphnet.models.graphs.graphs"], [86, "module-graphnet.models.graphs.nodes"], [87, "module-graphnet.models.graphs.nodes.nodes"], [88, "module-graphnet.models.graphs.utils"], [89, "module-graphnet.models.model"], [90, "module-graphnet.models.rnn"], [91, "module-graphnet.models.rnn.node_rnn"], [92, "module-graphnet.models.standard_model"], [93, "module-graphnet.models.task"], [94, "module-graphnet.models.task.classification"], [95, "module-graphnet.models.task.reconstruction"], [96, "module-graphnet.models.task.task"], [97, "module-graphnet.models.utils"], [98, "module-graphnet.pisa"], [99, "module-graphnet.pisa.fitting"], [100, "module-graphnet.pisa.plotting"], [101, "module-graphnet.training"], [102, "module-graphnet.training.callbacks"], [103, "module-graphnet.training.labels"], [104, "module-graphnet.training.loss_functions"], [105, "module-graphnet.training.utils"], [106, "module-graphnet.training.weight_fitting"], [107, "module-graphnet.utilities"], [108, "module-graphnet.utilities.argparse"], [109, "module-graphnet.utilities.config"], [110, "module-graphnet.utilities.config.base_config"], [111, "module-graphnet.utilities.config.configurable"], [112, "module-graphnet.utilities.config.dataset_config"], [113, "module-graphnet.utilities.config.model_config"], [114, "module-graphnet.utilities.config.parsing"], [115, "module-graphnet.utilities.config.training_config"], [116, "module-graphnet.utilities.decorators"], [117, "module-graphnet.utilities.deprecation_tools"], [118, "module-graphnet.utilities.filesys"], [119, "module-graphnet.utilities.imports"], [120, "module-graphnet.utilities.logging"], [121, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "i3fileset (class in graphnet.data.dataclasses)": [[5, "graphnet.data.dataclasses.I3FileSet"]], "settings (class in graphnet.data.dataclasses)": [[5, "graphnet.data.dataclasses.Settings"]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[5, "graphnet.data.dataclasses.I3FileSet.gcd_file"]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.gcd_file"]], "graphnet.data.dataclasses": [[5, "module-graphnet.data.dataclasses"]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[5, "graphnet.data.dataclasses.I3FileSet.i3_file"]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.i3_files"]], "modules (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.modules"]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[5, "graphnet.data.dataclasses.Settings.output_folder"]], "dataconverter (class in graphnet.data.dataconverter)": [[6, "graphnet.data.dataconverter.DataConverter"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[6, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[6, "module-graphnet.data.dataconverter"]], "init_global_index() (in module graphnet.data.dataconverter)": [[6, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[6, "graphnet.data.dataconverter.DataConverter.merge_files"]], "dataloader (class in graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.DataLoader"]], "collate_fn() (in module graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.collate_fn"]], "do_shuffle() (in module graphnet.data.dataloader)": [[7, "graphnet.data.dataloader.do_shuffle"]], "from_dataset_config() (graphnet.data.dataloader.dataloader class method)": [[7, "graphnet.data.dataloader.DataLoader.from_dataset_config"]], "graphnet.data.dataloader": [[7, "module-graphnet.data.dataloader"]], "graphnetdatamodule (class in graphnet.data.datamodule)": [[8, "graphnet.data.datamodule.GraphNeTDataModule"]], "graphnet.data.datamodule": [[8, "module-graphnet.data.datamodule"]], "prepare_data() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.prepare_data"]], "setup() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.setup"]], "teardown() (graphnet.data.datamodule.graphnetdatamodule method)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.teardown"]], "test_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.test_dataloader"]], "train_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.train_dataloader"]], "val_dataloader (graphnet.data.datamodule.graphnetdatamodule property)": [[8, "graphnet.data.datamodule.GraphNeTDataModule.val_dataloader"]], "graphnet.data.dataset": [[9, "module-graphnet.data.dataset"]], "columnmissingexception": [[10, "graphnet.data.dataset.dataset.ColumnMissingException"]], "dataset (class in graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.Dataset"]], "ensembledataset (class in graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.EnsembleDataset"]], "add_label() (graphnet.data.dataset.dataset.dataset method)": [[10, "graphnet.data.dataset.dataset.Dataset.add_label"]], "concatenate() (graphnet.data.dataset.dataset.dataset class method)": [[10, "graphnet.data.dataset.dataset.Dataset.concatenate"]], "from_config() (graphnet.data.dataset.dataset.dataset class method)": [[10, "graphnet.data.dataset.dataset.Dataset.from_config"]], "graphnet.data.dataset.dataset": [[10, "module-graphnet.data.dataset.dataset"]], "load_module() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.load_module"]], "parse_graph_definition() (in module graphnet.data.dataset.dataset)": [[10, "graphnet.data.dataset.dataset.parse_graph_definition"]], "path (graphnet.data.dataset.dataset.dataset property)": [[10, "graphnet.data.dataset.dataset.Dataset.path"]], "query_table() (graphnet.data.dataset.dataset.dataset method)": [[10, "graphnet.data.dataset.dataset.Dataset.query_table"]], "truth_table (graphnet.data.dataset.dataset.dataset property)": [[10, "graphnet.data.dataset.dataset.Dataset.truth_table"]], "graphnet.data.dataset.parquet": [[11, "module-graphnet.data.dataset.parquet"]], "parquetdataset (class in graphnet.data.dataset.parquet.parquet_dataset)": [[12, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset"]], "graphnet.data.dataset.parquet.parquet_dataset": [[12, "module-graphnet.data.dataset.parquet.parquet_dataset"]], "query_table() (graphnet.data.dataset.parquet.parquet_dataset.parquetdataset method)": [[12, "graphnet.data.dataset.parquet.parquet_dataset.ParquetDataset.query_table"]], "graphnet.data.dataset.sqlite": [[13, "module-graphnet.data.dataset.sqlite"]], "sqlitedataset (class in graphnet.data.dataset.sqlite.sqlite_dataset)": [[14, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset"]], "graphnet.data.dataset.sqlite.sqlite_dataset": [[14, "module-graphnet.data.dataset.sqlite.sqlite_dataset"]], "query_table() (graphnet.data.dataset.sqlite.sqlite_dataset.sqlitedataset method)": [[14, "graphnet.data.dataset.sqlite.sqlite_dataset.SQLiteDataset.query_table"]], "graphnet.data.extractors": [[15, "module-graphnet.data.extractors"]], "extractor (class in graphnet.data.extractors.extractor)": [[16, "graphnet.data.extractors.extractor.Extractor"]], "graphnet.data.extractors.extractor": [[16, "module-graphnet.data.extractors.extractor"]], "name (graphnet.data.extractors.extractor.extractor property)": [[16, "graphnet.data.extractors.extractor.Extractor.name"]], "graphnet.data.extractors.icecube": [[17, "module-graphnet.data.extractors.icecube"]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[18, "graphnet.data.extractors.icecube.i3extractor.I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor": [[18, "module-graphnet.data.extractors.icecube.i3extractor"]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[18, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd"]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[19, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3featureextractor": [[19, "module-graphnet.data.extractors.icecube.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[20, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3genericextractor": [[20, "module-graphnet.data.extractors.icecube.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[21, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[21, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor"]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[22, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[22, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor"]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[23, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[23, "module-graphnet.data.extractors.icecube.i3particleextractor"]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[24, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[24, "module-graphnet.data.extractors.icecube.i3pisaextractor"]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[25, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[25, "module-graphnet.data.extractors.icecube.i3quesoextractor"]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[26, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[26, "module-graphnet.data.extractors.icecube.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[27, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[27, "module-graphnet.data.extractors.icecube.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[28, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[28, "module-graphnet.data.extractors.icecube.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[29, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[29, "module-graphnet.data.extractors.icecube.i3tumextractor"]], "graphnet.data.extractors.icecube.utilities": [[30, "module-graphnet.data.extractors.icecube.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[31, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.icecube.utilities.collections": [[31, "module-graphnet.data.extractors.icecube.utilities.collections"]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[31, "graphnet.data.extractors.icecube.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[31, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[32, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[32, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[32, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.frames": [[32, "module-graphnet.data.extractors.icecube.utilities.frames"]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[33, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter"]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[33, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask"]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[33, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[33, "module-graphnet.data.extractors.icecube.utilities.i3_filters"]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.get_member_variables"]], "graphnet.data.extractors.icecube.utilities.types": [[34, "module-graphnet.data.extractors.icecube.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[34, "graphnet.data.extractors.icecube.utilities.types.is_type"]], "graphnet.data.parquet": [[35, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.deprecated_methods)": [[36, "graphnet.data.parquet.deprecated_methods.ParquetDataConverter"]], "graphnet.data.parquet.deprecated_methods": [[36, "module-graphnet.data.parquet.deprecated_methods"]], "insqlitepipeline (class in graphnet.data.pipeline)": [[37, "graphnet.data.pipeline.InSQLitePipeline"]], "graphnet.data.pipeline": [[37, "module-graphnet.data.pipeline"]], "graphnet.data.pre_configured": [[38, "module-graphnet.data.pre_configured"]], "i3toparquetconverter (class in graphnet.data.pre_configured.dataconverters)": [[39, "graphnet.data.pre_configured.dataconverters.I3ToParquetConverter"]], "i3tosqliteconverter (class in graphnet.data.pre_configured.dataconverters)": [[39, "graphnet.data.pre_configured.dataconverters.I3ToSQLiteConverter"]], "graphnet.data.pre_configured.dataconverters": [[39, "module-graphnet.data.pre_configured.dataconverters"]], "graphnet.data.readers": [[40, "module-graphnet.data.readers"]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader"]], "accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors"]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions"]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names"]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files"]], "graphnet.data.readers.graphnet_file_reader": [[41, "module-graphnet.data.readers.graphnet_file_reader"]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors"]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[41, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files"]], "i3reader (class in graphnet.data.readers.i3reader)": [[42, "graphnet.data.readers.i3reader.I3Reader"]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[42, "graphnet.data.readers.i3reader.I3Reader.find_files"]], "graphnet.data.readers.i3reader": [[42, "module-graphnet.data.readers.i3reader"]], "graphnet.data.sqlite": [[43, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.deprecated_methods)": [[44, "graphnet.data.sqlite.deprecated_methods.SQLiteDataConverter"]], "graphnet.data.sqlite.deprecated_methods": [[44, "module-graphnet.data.sqlite.deprecated_methods"]], "graphnet.data.utilities": [[45, "module-graphnet.data.utilities"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[46, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite": [[46, "module-graphnet.data.utilities.parquet_to_sqlite"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[46, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.data.utilities.random": [[47, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[47, "graphnet.data.utilities.random.pairwise_shuffle"]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.database_table_exists"]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.get_primary_keys"]], "graphnet.data.utilities.sqlite_utilities": [[48, "module-graphnet.data.utilities.sqlite_utilities"]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.query_database"]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[48, "graphnet.data.utilities.sqlite_utilities.save_to_sql"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[49, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[49, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[49, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.data.writers": [[50, "module-graphnet.data.writers"]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[51, "graphnet.data.writers.graphnet_writer.GraphNeTWriter"]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[51, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes"]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[51, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension"]], "graphnet.data.writers.graphnet_writer": [[51, "module-graphnet.data.writers.graphnet_writer"]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[51, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files"]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[52, "graphnet.data.writers.parquet_writer.ParquetWriter"]], "graphnet.data.writers.parquet_writer": [[52, "module-graphnet.data.writers.parquet_writer"]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[52, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files"]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[53, "graphnet.data.writers.sqlite_writer.SQLiteWriter"]], "graphnet.data.writers.sqlite_writer": [[53, "module-graphnet.data.writers.sqlite_writer"]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[53, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files"]], "graphnet.deployment": [[54, "module-graphnet.deployment"]], "deployer (class in graphnet.deployment.deployer)": [[55, "graphnet.deployment.deployer.Deployer"]], "graphnet.deployment.deployer": [[55, "module-graphnet.deployment.deployer"]], "run() (graphnet.deployment.deployer.deployer method)": [[55, "graphnet.deployment.deployer.Deployer.run"]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[56, "graphnet.deployment.deployment_module.DeploymentModule"]], "graphnet.deployment.deployment_module": [[56, "module-graphnet.deployment.deployment_module"]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[60, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule"]], "graphnet.deployment.icecube.cleaning_module": [[60, "module-graphnet.deployment.icecube.cleaning_module"]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[62, "graphnet.deployment.icecube.inference_module.I3InferenceModule"]], "graphnet.deployment.icecube.inference_module": [[62, "module-graphnet.deployment.icecube.inference_module"]], "graphnet.models": [[63, "module-graphnet.models"]], "attributecoarsening (class in graphnet.models.coarsening)": [[64, "graphnet.models.coarsening.AttributeCoarsening"]], "coarsening (class in graphnet.models.coarsening)": [[64, "graphnet.models.coarsening.Coarsening"]], "customdomcoarsening (class in graphnet.models.coarsening)": [[64, "graphnet.models.coarsening.CustomDOMCoarsening"]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[64, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening"]], "domcoarsening (class in graphnet.models.coarsening)": [[64, "graphnet.models.coarsening.DOMCoarsening"]], "forward() (graphnet.models.coarsening.coarsening method)": [[64, "graphnet.models.coarsening.Coarsening.forward"]], "graphnet.models.coarsening": [[64, "module-graphnet.models.coarsening"]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[64, "graphnet.models.coarsening.Coarsening.reduce_options"]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[64, "graphnet.models.coarsening.unbatch_edge_index"]], "graphnet.models.components": [[65, "module-graphnet.models.components"]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[66, "graphnet.models.components.embedding.SinusoidalPosEmb"]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[66, "graphnet.models.components.embedding.SinusoidalPosEmb.forward"]], "graphnet.models.components.embedding": [[66, "module-graphnet.models.components.embedding"]], "dynedgeconv (class in graphnet.models.components.layers)": [[67, "graphnet.models.components.layers.DynEdgeConv"]], "dyntrans (class in graphnet.models.components.layers)": [[67, "graphnet.models.components.layers.DynTrans"]], "edgeconvtito (class in graphnet.models.components.layers)": [[67, "graphnet.models.components.layers.EdgeConvTito"]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[67, "graphnet.models.components.layers.DynEdgeConv.forward"]], "forward() (graphnet.models.components.layers.dyntrans method)": [[67, "graphnet.models.components.layers.DynTrans.forward"]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[67, "graphnet.models.components.layers.EdgeConvTito.forward"]], "graphnet.models.components.layers": [[67, "module-graphnet.models.components.layers"]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[67, "graphnet.models.components.layers.EdgeConvTito.message"]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[67, "graphnet.models.components.layers.EdgeConvTito.reset_parameters"]], "graphnet.models.components.pool": [[68, "module-graphnet.models.components.pool"]], "group_by() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.group_by"]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.group_pulses_to_dom"]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.group_pulses_to_pmt"]], "min_pool() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.min_pool"]], "min_pool_x() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.min_pool_x"]], "std_pool() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.std_pool"]], "std_pool_x() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.std_pool_x"]], "sum_pool() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.sum_pool"]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.sum_pool_and_distribute"]], "sum_pool_x() (in module graphnet.models.components.pool)": [[68, "graphnet.models.components.pool.sum_pool_x"]], "graphnet.models.detector": [[69, "module-graphnet.models.detector"]], "detector (class in graphnet.models.detector.detector)": [[70, "graphnet.models.detector.detector.Detector"]], "feature_map() (graphnet.models.detector.detector.detector method)": [[70, "graphnet.models.detector.detector.Detector.feature_map"]], "forward() (graphnet.models.detector.detector.detector method)": [[70, "graphnet.models.detector.detector.Detector.forward"]], "geometry_table (graphnet.models.detector.detector.detector property)": [[70, "graphnet.models.detector.detector.Detector.geometry_table"]], "graphnet.models.detector.detector": [[70, "module-graphnet.models.detector.detector"]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[70, "graphnet.models.detector.detector.Detector.sensor_index_name"]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[70, "graphnet.models.detector.detector.Detector.sensor_position_names"]], "string_index_name (graphnet.models.detector.detector.detector property)": [[70, "graphnet.models.detector.detector.Detector.string_index_name"]], "icecube86 (class in graphnet.models.detector.icecube)": [[71, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[71, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[71, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[71, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[71, "graphnet.models.detector.icecube.IceCube86.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[71, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[71, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[71, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map"]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[71, "graphnet.models.detector.icecube.IceCube86.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[71, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path"]], "graphnet.models.detector.icecube": [[71, "module-graphnet.models.detector.icecube"]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[71, "graphnet.models.detector.icecube.IceCube86.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[71, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[71, "graphnet.models.detector.icecube.IceCube86.string_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[71, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column"]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[71, "graphnet.models.detector.icecube.IceCube86.xyz"]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[71, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz"]], "orca150 (class in graphnet.models.detector.prometheus)": [[72, "graphnet.models.detector.prometheus.ORCA150"]], "prometheus (class in graphnet.models.detector.prometheus)": [[72, "graphnet.models.detector.prometheus.Prometheus"]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[72, "graphnet.models.detector.prometheus.ORCA150.feature_map"]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[72, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path"]], "graphnet.models.detector.prometheus": [[72, "module-graphnet.models.detector.prometheus"]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[72, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column"]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[72, "graphnet.models.detector.prometheus.ORCA150.string_id_column"]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[72, "graphnet.models.detector.prometheus.ORCA150.xyz"]], "graphnet.models.gnn": [[73, "module-graphnet.models.gnn"]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[74, "graphnet.models.gnn.RNN_tito.RNN_TITO"]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[74, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward"]], "graphnet.models.gnn.rnn_tito": [[74, "module-graphnet.models.gnn.RNN_tito"]], "convnet (class in graphnet.models.gnn.convnet)": [[75, "graphnet.models.gnn.convnet.ConvNet"]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[75, "graphnet.models.gnn.convnet.ConvNet.forward"]], "graphnet.models.gnn.convnet": [[75, "module-graphnet.models.gnn.convnet"]], "dynedge (class in graphnet.models.gnn.dynedge)": [[76, "graphnet.models.gnn.dynedge.DynEdge"]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[76, "graphnet.models.gnn.dynedge.DynEdge.forward"]], "graphnet.models.gnn.dynedge": [[76, "module-graphnet.models.gnn.dynedge"]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[77, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST"]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[77, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward"]], "graphnet.models.gnn.dynedge_jinst": [[77, "module-graphnet.models.gnn.dynedge_jinst"]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[78, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO"]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[78, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[78, "module-graphnet.models.gnn.dynedge_kaggle_tito"]], "gnn (class in graphnet.models.gnn.gnn)": [[79, "graphnet.models.gnn.gnn.GNN"]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[79, "graphnet.models.gnn.gnn.GNN.forward"]], "graphnet.models.gnn.gnn": [[79, "module-graphnet.models.gnn.gnn"]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[79, "graphnet.models.gnn.gnn.GNN.nb_inputs"]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[79, "graphnet.models.gnn.gnn.GNN.nb_outputs"]], "graphnet.models.graphs": [[80, "module-graphnet.models.graphs"]], "graphnet.models.graphs.edges": [[81, "module-graphnet.models.graphs.edges"]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[82, "graphnet.models.graphs.edges.edges.EdgeDefinition"]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[82, "graphnet.models.graphs.edges.edges.EuclideanEdges"]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[82, "graphnet.models.graphs.edges.edges.KNNEdges"]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[82, "graphnet.models.graphs.edges.edges.RadialEdges"]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[82, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward"]], "graphnet.models.graphs.edges.edges": [[82, "module-graphnet.models.graphs.edges.edges"]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[83, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges"]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[83, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat"]], "graphnet.models.graphs.edges.minkowski": [[83, "module-graphnet.models.graphs.edges.minkowski"]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[84, "graphnet.models.graphs.graph_definition.GraphDefinition"]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[84, "graphnet.models.graphs.graph_definition.GraphDefinition.forward"]], "graphnet.models.graphs.graph_definition": [[84, "module-graphnet.models.graphs.graph_definition"]], "knngraph (class in graphnet.models.graphs.graphs)": [[85, "graphnet.models.graphs.graphs.KNNGraph"]], "graphnet.models.graphs.graphs": [[85, "module-graphnet.models.graphs.graphs"]], "graphnet.models.graphs.nodes": [[86, "module-graphnet.models.graphs.nodes"]], "nodeasdomtimeseries (class in graphnet.models.graphs.nodes.nodes)": [[87, "graphnet.models.graphs.nodes.nodes.NodeAsDOMTimeSeries"]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[87, "graphnet.models.graphs.nodes.nodes.NodeDefinition"]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[87, "graphnet.models.graphs.nodes.nodes.NodesAsPulses"]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[87, "graphnet.models.graphs.nodes.nodes.PercentileClusters"]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[87, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward"]], "graphnet.models.graphs.nodes.nodes": [[87, "module-graphnet.models.graphs.nodes.nodes"]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[87, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs"]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[87, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs"]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[87, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names"]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[88, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles"]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[88, "graphnet.models.graphs.utils.gather_cluster_sequence"]], "graphnet.models.graphs.utils": [[88, "module-graphnet.models.graphs.utils"]], "identify_indices() (in module graphnet.models.graphs.utils)": [[88, "graphnet.models.graphs.utils.identify_indices"]], "lex_sort() (in module graphnet.models.graphs.utils)": [[88, "graphnet.models.graphs.utils.lex_sort"]], "model (class in graphnet.models.model)": [[89, "graphnet.models.model.Model"]], "extra_repr() (graphnet.models.model.model method)": [[89, "graphnet.models.model.Model.extra_repr"]], "extra_repr_recursive() (graphnet.models.model.model method)": [[89, "graphnet.models.model.Model.extra_repr_recursive"]], "from_config() (graphnet.models.model.model class method)": [[89, "graphnet.models.model.Model.from_config"]], "graphnet.models.model": [[89, "module-graphnet.models.model"]], "load() (graphnet.models.model.model class method)": [[89, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[89, "graphnet.models.model.Model.load_state_dict"]], "save() (graphnet.models.model.model method)": [[89, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[89, "graphnet.models.model.Model.save_state_dict"]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[89, "graphnet.models.model.Model.set_verbose_print_recursively"]], "verbose_print (graphnet.models.model.model attribute)": [[89, "graphnet.models.model.Model.verbose_print"]], "graphnet.models.rnn": [[90, "module-graphnet.models.rnn"]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[91, "graphnet.models.rnn.node_rnn.Node_RNN"]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[91, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object"]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[91, "graphnet.models.rnn.node_rnn.Node_RNN.forward"]], "graphnet.models.rnn.node_rnn": [[91, "module-graphnet.models.rnn.node_rnn"]], "standardmodel (class in graphnet.models.standard_model)": [[92, "graphnet.models.standard_model.StandardModel"]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[92, "graphnet.models.standard_model.StandardModel.compute_loss"]], "configure_optimizers() (graphnet.models.standard_model.standardmodel method)": [[92, "graphnet.models.standard_model.StandardModel.configure_optimizers"]], "fit() (graphnet.models.standard_model.standardmodel method)": [[92, "graphnet.models.standard_model.StandardModel.fit"]], "forward() (graphnet.models.standard_model.standardmodel method)": [[92, "graphnet.models.standard_model.StandardModel.forward"]], "graphnet.models.standard_model": [[92, "module-graphnet.models.standard_model"]], "inference() (graphnet.models.standard_model.standardmodel method)": [[92, "graphnet.models.standard_model.StandardModel.inference"]], "predict() (graphnet.models.standard_model.standardmodel method)": [[92, "graphnet.models.standard_model.StandardModel.predict"]], "predict_as_dataframe() (graphnet.models.standard_model.standardmodel method)": [[92, "graphnet.models.standard_model.StandardModel.predict_as_dataframe"]], "prediction_labels (graphnet.models.standard_model.standardmodel property)": [[92, "graphnet.models.standard_model.StandardModel.prediction_labels"]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[92, "graphnet.models.standard_model.StandardModel.shared_step"]], "target_labels (graphnet.models.standard_model.standardmodel property)": [[92, "graphnet.models.standard_model.StandardModel.target_labels"]], "train() (graphnet.models.standard_model.standardmodel method)": [[92, "graphnet.models.standard_model.StandardModel.train"]], "training_step() (graphnet.models.standard_model.standardmodel method)": [[92, "graphnet.models.standard_model.StandardModel.training_step"]], "validation_step() (graphnet.models.standard_model.standardmodel method)": [[92, "graphnet.models.standard_model.StandardModel.validation_step"]], "graphnet.models.task": [[93, "module-graphnet.models.task"]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[94, "graphnet.models.task.classification.BinaryClassificationTask"]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[94, "graphnet.models.task.classification.BinaryClassificationTaskLogits"]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[94, "graphnet.models.task.classification.MulticlassClassificationTask"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[94, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[94, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[94, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels"]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[94, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels"]], "graphnet.models.task.classification": [[94, "module-graphnet.models.task.classification"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[94, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs"]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[94, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs"]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[95, "graphnet.models.task.reconstruction.AzimuthReconstruction"]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[95, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa"]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[95, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa"]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[95, "graphnet.models.task.reconstruction.EnergyReconstruction"]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[95, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower"]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[95, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty"]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[95, "graphnet.models.task.reconstruction.EnergyTCReconstruction"]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[95, "graphnet.models.task.reconstruction.InelasticityReconstruction"]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[95, "graphnet.models.task.reconstruction.PositionReconstruction"]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[95, "graphnet.models.task.reconstruction.TimeReconstruction"]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[95, "graphnet.models.task.reconstruction.VertexReconstruction"]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[95, "graphnet.models.task.reconstruction.ZenithReconstruction"]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[95, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[95, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[95, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[95, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[95, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[95, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[95, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[95, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[95, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[95, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[95, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[95, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels"]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[95, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels"]], "graphnet.models.task.reconstruction": [[95, "module-graphnet.models.task.reconstruction"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[95, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[95, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[95, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[95, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[95, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[95, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs"]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[95, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs"]], "identitytask (class in graphnet.models.task.task)": [[96, "graphnet.models.task.task.IdentityTask"]], "learnedtask (class in graphnet.models.task.task)": [[96, "graphnet.models.task.task.LearnedTask"]], "standardflowtask (class in graphnet.models.task.task)": [[96, "graphnet.models.task.task.StandardFlowTask"]], "standardlearnedtask (class in graphnet.models.task.task)": [[96, "graphnet.models.task.task.StandardLearnedTask"]], "task (class in graphnet.models.task.task)": [[96, "graphnet.models.task.task.Task"]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[96, "graphnet.models.task.task.LearnedTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardflowtask method)": [[96, "graphnet.models.task.task.StandardFlowTask.compute_loss"]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[96, "graphnet.models.task.task.StandardLearnedTask.compute_loss"]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[96, "graphnet.models.task.task.IdentityTask.default_prediction_labels"]], "default_prediction_labels (graphnet.models.task.task.task property)": [[96, "graphnet.models.task.task.Task.default_prediction_labels"]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[96, "graphnet.models.task.task.IdentityTask.default_target_labels"]], "default_target_labels (graphnet.models.task.task.task property)": [[96, "graphnet.models.task.task.Task.default_target_labels"]], "forward() (graphnet.models.task.task.learnedtask method)": [[96, "graphnet.models.task.task.LearnedTask.forward"]], "forward() (graphnet.models.task.task.standardflowtask method)": [[96, "graphnet.models.task.task.StandardFlowTask.forward"]], "graphnet.models.task.task": [[96, "module-graphnet.models.task.task"]], "inference() (graphnet.models.task.task.task method)": [[96, "graphnet.models.task.task.Task.inference"]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[96, "graphnet.models.task.task.IdentityTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[96, "graphnet.models.task.task.LearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[96, "graphnet.models.task.task.StandardLearnedTask.nb_inputs"]], "nb_inputs (graphnet.models.task.task.task property)": [[96, "graphnet.models.task.task.Task.nb_inputs"]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[96, "graphnet.models.task.task.StandardFlowTask.nb_inputs"]], "train_eval() (graphnet.models.task.task.task method)": [[96, "graphnet.models.task.task.Task.train_eval"]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[97, "graphnet.models.utils.calculate_distance_matrix"]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[97, "graphnet.models.utils.calculate_xyzt_homophily"]], "graphnet.models.utils": [[97, "module-graphnet.models.utils"]], "knn_graph_batch() (in module graphnet.models.utils)": [[97, "graphnet.models.utils.knn_graph_batch"]], "graphnet.pisa": [[98, "module-graphnet.pisa"]], "contourfitter (class in graphnet.pisa.fitting)": [[99, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[99, "graphnet.pisa.fitting.WeightFitter"]], "config_updater() (in module graphnet.pisa.fitting)": [[99, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[99, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[99, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[99, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa.fitting": [[99, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[100, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[100, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[100, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[100, "graphnet.pisa.plotting.read_entry"]], "graphnet.training": [[101, "module-graphnet.training"]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[102, "graphnet.training.callbacks.GraphnetEarlyStopping"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[102, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[102, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[102, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[102, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[102, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[102, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[102, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[102, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[102, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[102, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end"]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[102, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[102, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[102, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[102, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end"]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[102, "graphnet.training.callbacks.GraphnetEarlyStopping.setup"]], "direction (class in graphnet.training.labels)": [[103, "graphnet.training.labels.Direction"]], "label (class in graphnet.training.labels)": [[103, "graphnet.training.labels.Label"]], "graphnet.training.labels": [[103, "module-graphnet.training.labels"]], "key (graphnet.training.labels.label property)": [[103, "graphnet.training.labels.Label.key"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[104, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[104, "graphnet.training.loss_functions.CrossEntropyLoss"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[104, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.training.loss_functions)": [[104, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[104, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[104, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[104, "graphnet.training.loss_functions.MSELoss"]], "rmseloss (class in graphnet.training.loss_functions)": [[104, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[104, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[104, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[104, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[104, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[104, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[104, "graphnet.training.loss_functions.LossFunction.forward"]], "graphnet.training.loss_functions": [[104, "module-graphnet.training.loss_functions"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[104, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[104, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[104, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "collate_fn() (in module graphnet.training.utils)": [[105, "graphnet.training.utils.collate_fn"]], "collator_sequence_buckleting (class in graphnet.training.utils)": [[105, "graphnet.training.utils.collator_sequence_buckleting"]], "get_predictions() (in module graphnet.training.utils)": [[105, "graphnet.training.utils.get_predictions"]], "graphnet.training.utils": [[105, "module-graphnet.training.utils"]], "make_dataloader() (in module graphnet.training.utils)": [[105, "graphnet.training.utils.make_dataloader"]], "make_train_validation_dataloader() (in module graphnet.training.utils)": [[105, "graphnet.training.utils.make_train_validation_dataloader"]], "save_results() (in module graphnet.training.utils)": [[105, "graphnet.training.utils.save_results"]], "save_selection() (in module graphnet.training.utils)": [[105, "graphnet.training.utils.save_selection"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[106, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[106, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[106, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[106, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[106, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[107, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[108, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[108, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[108, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[108, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[108, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[108, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[108, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[109, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[110, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[110, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[110, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[110, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[110, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[110, "graphnet.utilities.config.base_config.BaseConfig.load"]], "model_computed_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[110, "graphnet.utilities.config.base_config.BaseConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[110, "graphnet.utilities.config.base_config.BaseConfig.model_config"]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[110, "graphnet.utilities.config.base_config.BaseConfig.model_fields"]], "configurable (class in graphnet.utilities.config.configurable)": [[111, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[111, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[111, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[111, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[111, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta"]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta"]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition"]], "graphnet.utilities.config.dataset_config": [[112, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "model_computed_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config"]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[112, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[112, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[113, "graphnet.utilities.config.model_config.ModelConfig"]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[113, "graphnet.utilities.config.model_config.ModelConfigSaverABC"]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[113, "graphnet.utilities.config.model_config.ModelConfigSaverMeta"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[113, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[113, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[113, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[113, "module-graphnet.utilities.config.model_config"]], "model_computed_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[113, "graphnet.utilities.config.model_config.ModelConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[113, "graphnet.utilities.config.model_config.ModelConfig.model_config"]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[113, "graphnet.utilities.config.model_config.ModelConfig.model_fields"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[113, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[114, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[114, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[114, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[114, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[114, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[114, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[114, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[115, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[115, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[115, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[115, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[115, "module-graphnet.utilities.config.training_config"]], "model_computed_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[115, "graphnet.utilities.config.training_config.TrainingConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[115, "graphnet.utilities.config.training_config.TrainingConfig.model_config"]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[115, "graphnet.utilities.config.training_config.TrainingConfig.model_fields"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[115, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[116, "module-graphnet.utilities.decorators"]], "graphnet.utilities.deprecation_tools": [[117, "module-graphnet.utilities.deprecation_tools"]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[117, "graphnet.utilities.deprecation_tools.rename_state_dict_entries"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[118, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[118, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[118, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[118, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[118, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[119, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[119, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[119, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[119, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[119, "graphnet.utilities.imports.requires_icecube"]], "logger (class in graphnet.utilities.logging)": [[120, "graphnet.utilities.logging.Logger"]], "repeatfilter (class in graphnet.utilities.logging)": [[120, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.logger method)": [[120, "graphnet.utilities.logging.Logger.critical"]], "debug() (graphnet.utilities.logging.logger method)": [[120, "graphnet.utilities.logging.Logger.debug"]], "error() (graphnet.utilities.logging.logger method)": [[120, "graphnet.utilities.logging.Logger.error"]], "file_handlers (graphnet.utilities.logging.logger property)": [[120, "graphnet.utilities.logging.Logger.file_handlers"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[120, "graphnet.utilities.logging.RepeatFilter.filter"]], "graphnet.utilities.logging": [[120, "module-graphnet.utilities.logging"]], "handlers (graphnet.utilities.logging.logger property)": [[120, "graphnet.utilities.logging.Logger.handlers"]], "info() (graphnet.utilities.logging.logger method)": [[120, "graphnet.utilities.logging.Logger.info"]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[120, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed"]], "setlevel() (graphnet.utilities.logging.logger method)": [[120, "graphnet.utilities.logging.Logger.setLevel"]], "stream_handlers (graphnet.utilities.logging.logger property)": [[120, "graphnet.utilities.logging.Logger.stream_handlers"]], "warning() (graphnet.utilities.logging.logger method)": [[120, "graphnet.utilities.logging.Logger.warning"]], "warning_once() (graphnet.utilities.logging.logger method)": [[120, "graphnet.utilities.logging.Logger.warning_once"]], "eps_like() (in module graphnet.utilities.maths)": [[121, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[121, "module-graphnet.utilities.maths"]]}})