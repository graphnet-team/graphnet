# This is a simple workflow to run data/icetray specific unit tests
name: build-icetray

# Controls when the workflow will run
on:
  # Triggers the workflow on push and PRs
  push:
  pull_request_target:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  check-cobalt-credentials:
    runs-on: ubuntu-latest
    outputs:
      has_credentials: ${{ steps.setvar.outputs.has_credentials }}
    steps:
      - name: Check secrets
        id: setvar
        run: |
         if [[ "${{ secrets.PUB_WISC_HOST }}" != "" && \
               "${{ secrets.PUB_WISC_USERNAME }}" != "" && \
               "${{ secrets.PUB_WISC_PASSWORD }}" != "" ]]; \
         then
           echo "Credentials to access Cobalt found"
           echo "::set-output name=has_credentials::true"
         else
           echo "Credentials to access Cobalt not found"
           echo "::set-output name=has_credentials::false"
         fi

  check-codeclimate-credentials:
    runs-on: ubuntu-latest
    outputs:
      has_credentials: ${{ steps.setvar.outputs.has_credentials }}
    steps:
      - name: Check secrets
        id: setvar
        run: |
         if [[ "${{ secrets.CODECLIMATE_TEST_REPORTER_ID }}" != "" ]]; \
         then
           echo "Credentials to access CodeClimate found"
           echo "::set-output name=has_credentials::true"
         else
           echo "Credentials to access CodeClimate not found"
           echo "::set-output name=has_credentials::false"
         fi

  build-icetray:
    needs: [ check-cobalt-credentials, check-codeclimate-credentials ]
    if: needs.check-cobalt-credentials.outputs.has_credentials == 'true'
    runs-on: ubuntu-latest
    container: icecube/icetray:combo-stable
    steps:
      - name: Set environment variables
        run: |
          echo "PATH=/usr/local/icetray/bin:$PATH" >> $GITHUB_ENV
          echo "PYTHONPATH=/usr/local/icetray/lib:$PYTHONPATH" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/usr/local/icetray/lib:/usr/local/icetray/cernroot/lib:/usr/local/icetray/lib/tools:$LD_LIBRARY_PATH" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Upgrade packages already installed on icecube/icetray
        run: |
          pip install --upgrade astropy  # Installed version incompatible with numpy 1.23.0 [https://github.com/astropy/astropy/issues/12534]
          pip install --ignore-installed PyYAML  # Distutils installed [https://github.com/pypa/pip/issues/5247]
      - name: Install package
        uses: ./.github/actions/install-cpu
        with:
          editable: true
      - name: Retrieve test data
        run: |
          # Create test data directory
          mkdir -p $TEST_DATA_DIR

          # Copy test data
          apt-get install sshpass
          sshpass -p "$PASSWORD" scp -o StrictHostKeyChecking=no $USERNAME@$HOST:$SOURCE $TEST_DATA_DIR
          ls -l $TEST_DATA_DIR

          # Check integrity of test data
          find $TEST_DATA_DIR -name '*.i3.*' -type f -exec md5sum {} \; | sort -k 2 | sed 's@'"$TEST_DATA_DIR"'@@g'
          MD5CHECK="$(find $TEST_DATA_DIR -name '*.i3.*' -type f -exec md5sum {} \; | sort -k 2 | sed 's@'"$TEST_DATA_DIR"'@@g' | md5sum | cut -d" " -f1)"
          echo "$MD5CHECK vs. $MD5HASH"
          if [[ $MD5CHECK == $MD5HASH ]]; then echo "Checksums agree"; else exit 1; fi
        env:
          HOST: ${{ secrets.PUB_WISC_HOST }}
          USERNAME: ${{ secrets.PUB_WISC_USERNAME }}
          PASSWORD: ${{ secrets.PUB_WISC_PASSWORD }}
          SOURCE: "graphnet/data/test/*.i3.*"
          TEST_DATA_DIR: ./test_data/
          MD5HASH: 80006a6d58338eb8ea153d2b7b02c0a1
        shell: bash
      - name: Run unit tests and generate coverage report
        run: |
          coverage run --source=graphnet -m pytest tests/
          coverage xml -o coverage.xml
      - name: Work around permission issue
        run: |
          git config --global --add safe.directory /__w/graphnet/graphnet
      - name: Publish code coverage
        uses: paambaati/codeclimate-action@v3.0.0
        if: needs.check-codeclimate-credentials.outputs.has_credentials == 'true'
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_TEST_REPORTER_ID }}
        with:
          coverageCommand: coverage report
          coverageLocations: coverage.xml:coverage.py
